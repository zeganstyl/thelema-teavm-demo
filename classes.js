"use strict";
var main;
(function() {
var $rt_seed = 2463534242;
function $rt_nextId() {
    var x = $rt_seed;
    x ^= x << 13;
    x ^= x >> 17;
    x ^= x << 5;
    $rt_seed = x;
    return x;
}
function $rt_compare(a, b) {
    return a > b ? 1 : a < b ?  -1 : a === b ? 0 : 1;
}
function $rt_isInstance(obj, cls) {
    return obj !== null && !!obj.constructor.$meta && $rt_isAssignable(obj.constructor, cls);
}
function $rt_isAssignable(from, to) {
    if (from === to) {
        return true;
    }
    if (to.$meta.item !== null) {
        return from.$meta.item !== null && $rt_isAssignable(from.$meta.item, to.$meta.item);
    }
    var supertypes = from.$meta.supertypes;
    for (var i = 0;i < supertypes.length;i = i + 1 | 0) {
        if ($rt_isAssignable(supertypes[i], to)) {
            return true;
        }
    }
    return false;
}
function $rt_createArray(cls, sz) {
    var data = new Array(sz);
    var arr = new $rt_array(cls, data);
    if (sz > 0) {
        var i = 0;
        do  {
            data[i] = null;
            i = i + 1 | 0;
        }while (i < sz);
    }
    return arr;
}
function $rt_wrapArray(cls, data) {
    return new $rt_array(cls, data);
}
function $rt_createUnfilledArray(cls, sz) {
    return new $rt_array(cls, new Array(sz));
}
function $rt_createLongArray(sz) {
    var data = new Array(sz);
    var arr = new $rt_array($rt_longcls(), data);
    for (var i = 0;i < sz;i = i + 1 | 0) {
        data[i] = Long_ZERO;
    }
    return arr;
}
function $rt_createNumericArray(cls, nativeArray) {
    return new $rt_array(cls, nativeArray);
}
function $rt_createCharArray(sz) {
    return $rt_createNumericArray($rt_charcls(), new Uint16Array(sz));
}
function $rt_createByteArray(sz) {
    return $rt_createNumericArray($rt_bytecls(), new Int8Array(sz));
}
function $rt_createShortArray(sz) {
    return $rt_createNumericArray($rt_shortcls(), new Int16Array(sz));
}
function $rt_createIntArray(sz) {
    return $rt_createNumericArray($rt_intcls(), new Int32Array(sz));
}
function $rt_createBooleanArray(sz) {
    return $rt_createNumericArray($rt_booleancls(), new Int8Array(sz));
}
function $rt_createFloatArray(sz) {
    return $rt_createNumericArray($rt_floatcls(), new Float32Array(sz));
}
function $rt_createDoubleArray(sz) {
    return $rt_createNumericArray($rt_doublecls(), new Float64Array(sz));
}
function $rt_arraycls(cls) {
    var result = cls.$array;
    if (result === null) {
        var arraycls = {  };
        var name = "[" + cls.$meta.binaryName;
        arraycls.$meta = { item : cls, supertypes : [$rt_objcls()], primitive : false, superclass : $rt_objcls(), name : name, binaryName : name, enum : false };
        arraycls.classObject = null;
        arraycls.$array = null;
        result = arraycls;
        cls.$array = arraycls;
    }
    return result;
}
function $rt_createcls() {
    return { $array : null, classObject : null, $meta : { supertypes : [], superclass : null } };
}
function $rt_createPrimitiveCls(name, binaryName) {
    var cls = $rt_createcls();
    cls.$meta.primitive = true;
    cls.$meta.name = name;
    cls.$meta.binaryName = binaryName;
    cls.$meta.enum = false;
    cls.$meta.item = null;
    return cls;
}
var $rt_booleanclsCache = null;
function $rt_booleancls() {
    if ($rt_booleanclsCache === null) {
        $rt_booleanclsCache = $rt_createPrimitiveCls("boolean", "Z");
    }
    return $rt_booleanclsCache;
}
var $rt_charclsCache = null;
function $rt_charcls() {
    if ($rt_charclsCache === null) {
        $rt_charclsCache = $rt_createPrimitiveCls("char", "C");
    }
    return $rt_charclsCache;
}
var $rt_byteclsCache = null;
function $rt_bytecls() {
    if ($rt_byteclsCache === null) {
        $rt_byteclsCache = $rt_createPrimitiveCls("byte", "B");
    }
    return $rt_byteclsCache;
}
var $rt_shortclsCache = null;
function $rt_shortcls() {
    if ($rt_shortclsCache === null) {
        $rt_shortclsCache = $rt_createPrimitiveCls("short", "S");
    }
    return $rt_shortclsCache;
}
var $rt_intclsCache = null;
function $rt_intcls() {
    if ($rt_intclsCache === null) {
        $rt_intclsCache = $rt_createPrimitiveCls("int", "I");
    }
    return $rt_intclsCache;
}
var $rt_longclsCache = null;
function $rt_longcls() {
    if ($rt_longclsCache === null) {
        $rt_longclsCache = $rt_createPrimitiveCls("long", "J");
    }
    return $rt_longclsCache;
}
var $rt_floatclsCache = null;
function $rt_floatcls() {
    if ($rt_floatclsCache === null) {
        $rt_floatclsCache = $rt_createPrimitiveCls("float", "F");
    }
    return $rt_floatclsCache;
}
var $rt_doubleclsCache = null;
function $rt_doublecls() {
    if ($rt_doubleclsCache === null) {
        $rt_doubleclsCache = $rt_createPrimitiveCls("double", "D");
    }
    return $rt_doubleclsCache;
}
var $rt_voidclsCache = null;
function $rt_voidcls() {
    if ($rt_voidclsCache === null) {
        $rt_voidclsCache = $rt_createPrimitiveCls("void", "V");
    }
    return $rt_voidclsCache;
}
function $rt_throw(ex) {
    throw $rt_exception(ex);
}
function $rt_exception(ex) {
    var err = ex.$jsException;
    if (!err) {
        err = new Error("Java exception thrown");
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(err);
        }
        err.$javaException = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return err;
}
function $rt_fillStack(err, ex) {
    if (typeof $rt_decodeStack === "function" && err.stack) {
        var stack = $rt_decodeStack(err.stack);
        var javaStack = $rt_createArray($rt_objcls(), stack.length);
        var elem;
        var noStack = false;
        for (var i = 0;i < stack.length;++i) {
            var element = stack[i];
            elem = $rt_createStackElement($rt_str(element.className), $rt_str(element.methodName), $rt_str(element.fileName), element.lineNumber);
            if (elem == null) {
                noStack = true;
                break;
            }
            javaStack.data[i] = elem;
        }
        if (!noStack) {
            $rt_setStack(ex, javaStack);
        }
    }
}
function $rt_createMultiArray(cls, dimensions) {
    var first = 0;
    for (var i = dimensions.length - 1;i >= 0;i = i - 1 | 0) {
        if (dimensions[i] === 0) {
            first = i;
            break;
        }
    }
    if (first > 0) {
        for (i = 0;i < first;i = i + 1 | 0) {
            cls = $rt_arraycls(cls);
        }
        if (first === dimensions.length - 1) {
            return $rt_createArray(cls, dimensions[first]);
        }
    }
    var arrays = new Array($rt_primitiveArrayCount(dimensions, first));
    var firstDim = dimensions[first] | 0;
    for (i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createArray(cls, firstDim);
    }
    return $rt_createMultiArrayImpl(cls, arrays, dimensions, first);
}
function $rt_createByteMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_bytecls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createByteArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_bytecls(), arrays, dimensions);
}
function $rt_createCharMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_charcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createCharArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_charcls(), arrays, dimensions, 0);
}
function $rt_createBooleanMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_booleancls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createBooleanArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_booleancls(), arrays, dimensions, 0);
}
function $rt_createShortMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_shortcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createShortArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_shortcls(), arrays, dimensions, 0);
}
function $rt_createIntMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_intcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createIntArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_intcls(), arrays, dimensions, 0);
}
function $rt_createLongMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_longcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createLongArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_longcls(), arrays, dimensions, 0);
}
function $rt_createFloatMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_floatcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createFloatArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_floatcls(), arrays, dimensions, 0);
}
function $rt_createDoubleMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_doublecls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createDoubleArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_doublecls(), arrays, dimensions, 0);
}
function $rt_primitiveArrayCount(dimensions, start) {
    var val = dimensions[start + 1] | 0;
    for (var i = start + 2;i < dimensions.length;i = i + 1 | 0) {
        val = val * (dimensions[i] | 0) | 0;
        if (val === 0) {
            break;
        }
    }
    return val;
}
function $rt_createMultiArrayImpl(cls, arrays, dimensions, start) {
    var limit = arrays.length;
    for (var i = start + 1 | 0;i < dimensions.length;i = i + 1 | 0) {
        cls = $rt_arraycls(cls);
        var dim = dimensions[i];
        var index = 0;
        var packedIndex = 0;
        while (index < limit) {
            var arr = $rt_createUnfilledArray(cls, dim);
            for (var j = 0;j < dim;j = j + 1 | 0) {
                arr.data[j] = arrays[index];
                index = index + 1 | 0;
            }
            arrays[packedIndex] = arr;
            packedIndex = packedIndex + 1 | 0;
        }
        limit = packedIndex;
    }
    return arrays[0];
}
function $rt_assertNotNaN(value) {
    if (typeof value === 'number' && isNaN(value)) {
        throw "NaN";
    }
    return value;
}
var $rt_stdoutBuffer = "";
var $rt_putStdout = typeof $rt_putStdoutCustom === "function" ? $rt_putStdoutCustom : function(ch) {
    if (ch === 0xA) {
        if (console) {
            console.info($rt_stdoutBuffer);
        }
        $rt_stdoutBuffer = "";
    } else {
        $rt_stdoutBuffer += String.fromCharCode(ch);
    }
};
var $rt_stderrBuffer = "";
var $rt_putStderr = typeof $rt_putStderrCustom === "function" ? $rt_putStderrCustom : function(ch) {
    if (ch === 0xA) {
        if (console) {
            console.error($rt_stderrBuffer);
        }
        $rt_stderrBuffer = "";
    } else {
        $rt_stderrBuffer += String.fromCharCode(ch);
    }
};
var $rt_packageData = null;
function $rt_packages(data) {
    var i = 0;
    var packages = new Array(data.length);
    for (var j = 0;j < data.length;++j) {
        var prefixIndex = data[i++];
        var prefix = prefixIndex >= 0 ? packages[prefixIndex] : "";
        packages[j] = prefix + data[i++] + ".";
    }
    $rt_packageData = packages;
}
function $rt_metadata(data) {
    var packages = $rt_packageData;
    var i = 0;
    while (i < data.length) {
        var cls = data[i++];
        cls.$meta = {  };
        var m = cls.$meta;
        var className = data[i++];
        m.name = className !== 0 ? className : null;
        if (m.name !== null) {
            var packageIndex = data[i++];
            if (packageIndex >= 0) {
                m.name = packages[packageIndex] + m.name;
            }
        }
        m.binaryName = "L" + m.name + ";";
        var superclass = data[i++];
        m.superclass = superclass !== 0 ? superclass : null;
        m.supertypes = data[i++];
        if (m.superclass) {
            m.supertypes.push(m.superclass);
            cls.prototype = Object.create(m.superclass.prototype);
        } else {
            cls.prototype = {  };
        }
        var flags = data[i++];
        m.enum = (flags & 8) !== 0;
        m.flags = flags;
        m.primitive = false;
        m.item = null;
        cls.prototype.constructor = cls;
        cls.classObject = null;
        m.accessLevel = data[i++];
        var clinit = data[i++];
        cls.$clinit = clinit !== 0 ? clinit : function() {
        };
        var virtualMethods = data[i++];
        if (virtualMethods !== 0) {
            for (var j = 0;j < virtualMethods.length;j += 2) {
                var name = virtualMethods[j];
                var func = virtualMethods[j + 1];
                if (typeof name === 'string') {
                    name = [name];
                }
                for (var k = 0;k < name.length;++k) {
                    cls.prototype[name[k]] = func;
                }
            }
        }
        cls.$array = null;
    }
}
function $rt_threadStarter(f) {
    return function() {
        var args = Array.prototype.slice.apply(arguments);
        $rt_startThread(function() {
            f.apply(this, args);
        });
    };
}
function $rt_mainStarter(f) {
    return function(args, callback) {
        if (!args) {
            args = [];
        }
        var javaArgs = $rt_createArray($rt_objcls(), args.length);
        for (var i = 0;i < args.length;++i) {
            javaArgs.data[i] = $rt_str(args[i]);
        }
        $rt_startThread(function() {
            f.call(null, javaArgs);
        }, callback);
    };
}
var $rt_stringPool_instance;
function $rt_stringPool(strings) {
    $rt_stringPool_instance = new Array(strings.length);
    for (var i = 0;i < strings.length;++i) {
        $rt_stringPool_instance[i] = $rt_intern($rt_str(strings[i]));
    }
}
function $rt_s(index) {
    return $rt_stringPool_instance[index];
}
function $rt_eraseClinit(target) {
    return target.$clinit = function() {
    };
}
var $rt_numberConversionView = new DataView(new ArrayBuffer(8));
function $rt_doubleToLongBits(n) {
    $rt_numberConversionView.setFloat64(0, n, true);
    return new Long($rt_numberConversionView.getInt32(0, true), $rt_numberConversionView.getInt32(4, true));
}
function $rt_longBitsToDouble(n) {
    $rt_numberConversionView.setInt32(0, n.lo, true);
    $rt_numberConversionView.setInt32(4, n.hi, true);
    return $rt_numberConversionView.getFloat64(0, true);
}
function $rt_floatToIntBits(n) {
    $rt_numberConversionView.setFloat32(0, n);
    return $rt_numberConversionView.getInt32(0);
}
function $rt_intBitsToFloat(n) {
    $rt_numberConversionView.setInt32(0, n);
    return $rt_numberConversionView.getFloat32(0);
}
function $rt_javaException(e) {
    return e instanceof Error && typeof e.$javaException === 'object' ? e.$javaException : null;
}
function $rt_jsException(e) {
    return typeof e.$jsException === 'object' ? e.$jsException : null;
}
function $rt_wrapException(err) {
    var ex = err.$javaException;
    if (!ex) {
        ex = $rt_createException($rt_str("(JavaScript) " + err.toString()));
        err.$javaException = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return ex;
}
function $dbg_class(obj) {
    var cls = obj.constructor;
    var arrayDegree = 0;
    while (cls.$meta && cls.$meta.item) {
        ++arrayDegree;
        cls = cls.$meta.item;
    }
    var clsName = "";
    if (cls === $rt_booleancls()) {
        clsName = "boolean";
    } else if (cls === $rt_bytecls()) {
        clsName = "byte";
    } else if (cls === $rt_shortcls()) {
        clsName = "short";
    } else if (cls === $rt_charcls()) {
        clsName = "char";
    } else if (cls === $rt_intcls()) {
        clsName = "int";
    } else if (cls === $rt_longcls()) {
        clsName = "long";
    } else if (cls === $rt_floatcls()) {
        clsName = "float";
    } else if (cls === $rt_doublecls()) {
        clsName = "double";
    } else {
        clsName = cls.$meta ? cls.$meta.name || "a/" + cls.name : "@" + cls.name;
    }
    while (arrayDegree-- > 0) {
        clsName += "[]";
    }
    return clsName;
}
function Long(lo, hi) {
    this.lo = lo | 0;
    this.hi = hi | 0;
}
Long.prototype.__teavm_class__ = function() {
    return "long";
};
Long.prototype.toString = function() {
    var result = [];
    var n = this;
    var positive = Long_isPositive(n);
    if (!positive) {
        n = Long_neg(n);
    }
    var radix = new Long(10, 0);
    do  {
        var divRem = Long_divRem(n, radix);
        result.push(String.fromCharCode(48 + divRem[1].lo));
        n = divRem[0];
    }while (n.lo !== 0 || n.hi !== 0);
    result = (result.reverse()).join('');
    return positive ? result : "-" + result;
};
Long.prototype.valueOf = function() {
    return Long_toNumber(this);
};
var Long_ZERO = new Long(0, 0);
var Long_MAX_NORMAL = 1 << 18;
function Long_fromInt(val) {
    return val >= 0 ? new Long(val, 0) : new Long(val,  -1);
}
function Long_fromNumber(val) {
    if (val >= 0) {
        return new Long(val | 0, val / 0x100000000 | 0);
    } else {
        return Long_neg(new Long( -val | 0,  -val / 0x100000000 | 0));
    }
}
function Long_toNumber(val) {
    var lo = val.lo;
    var hi = val.hi;
    if (lo < 0) {
        lo += 0x100000000;
    }
    return 0x100000000 * hi + lo;
}
var $rt_imul = Math.imul || function(a, b) {
    var ah = a >>> 16 & 0xFFFF;
    var al = a & 0xFFFF;
    var bh = b >>> 16 & 0xFFFF;
    var bl = b & 0xFFFF;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
};
var $rt_udiv = function(a, b) {
    if (a < 0) {
        a += 0x100000000;
    }
    if (b < 0) {
        b += 0x100000000;
    }
    return a / b | 0;
};
var $rt_umod = function(a, b) {
    if (a < 0) {
        a += 0x100000000;
    }
    if (b < 0) {
        b += 0x100000000;
    }
    return a % b | 0;
};
function $rt_setCloneMethod(target, f) {
    target.$clone = f;
}
function $rt_cls(cls) {
    return jl_Class_getClass(cls);
}
function $rt_str(str) {
    if (str === null) {
        return null;
    }
    var characters = $rt_createCharArray(str.length);
    var charsBuffer = characters.data;
    for (var i = 0; i < str.length; i = (i + 1) | 0) {
        charsBuffer[i] = str.charCodeAt(i) & 0xFFFF;
    }
    return jl_String__init_(characters);
}
function $rt_ustr(str) {
    if (str === null) {
        return null;
    }
    var data = str.$characters.data;
    var result = "";
    for (var i = 0; i < data.length; i = (i + 1) | 0) {
        result += String.fromCharCode(data[i]);
    }
    return result;
}
function $rt_objcls() { return jl_Object; }
function $rt_nullCheck(val) {
    if (val === null) {
        $rt_throw(jl_NullPointerException__init_());
    }
    return val;
}
function $rt_intern(str) {
    return str;
}
function $rt_getThread() {
    return jl_Thread_currentThread();
}
function $rt_setThread(t) {
    return jl_Thread_setCurrentThread(t);
}
function $rt_createException(message) {
    return jl_RuntimeException__init_(message);
}
function $rt_createStackElement(className, methodName, fileName, lineNumber) {
    return null;
}
function $rt_setStack(e, stack) {
    jl_Throwable_setStackTrace(e, stack);
}
var $java = Object.create(null);
function jl_Object() {
    this.$monitor = null;
    this.$id$ = 0;
}
function jl_Object__init_() {
    var var_0 = new jl_Object();
    jl_Object__init_0(var_0);
    return var_0;
}
function jl_Object_monitorEnterSync($o) {
    var var$2;
    if ($o.$monitor === null)
        jl_Object_createMonitor($o);
    if ($o.$monitor.$owner === null)
        $o.$monitor.$owner = jl_Thread_currentThread();
    else if ($o.$monitor.$owner !== jl_Thread_currentThread())
        $rt_throw(jl_IllegalStateException__init_($rt_s(0)));
    var$2 = $o.$monitor;
    var$2.$count = var$2.$count + 1 | 0;
}
function jl_Object_monitorExitSync($o) {
    var var$2, var$3;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread()) {
        var$2 = $o.$monitor;
        var$3 = var$2.$count - 1 | 0;
        var$2.$count = var$3;
        if (!var$3)
            $o.$monitor.$owner = null;
        jl_Object_isEmptyMonitor($o);
        return;
    }
    $rt_throw(jl_IllegalMonitorStateException__init_());
}
function jl_Object_monitorEnter($o) {
    jl_Object_monitorEnter0($o, 1);
}
function jl_Object_monitorEnter0($o, $count) {
    var var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$count = $thread.pop();$o = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($o.$monitor === null)
            jl_Object_createMonitor($o);
        if ($o.$monitor.$owner === null)
            $o.$monitor.$owner = jl_Thread_currentThread();
        if ($o.$monitor.$owner === jl_Thread_currentThread()) {
            var$3 = $o.$monitor;
            var$3.$count = var$3.$count + $count | 0;
            return;
        }
        $ptr = 1;
    case 1:
        jl_Object_monitorEnterWait($o, $count);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($o, $count, var$3, $ptr);
}
function jl_Object_createMonitor($o) {
    $o.$monitor = jl_Object$Monitor__init_();
}
function jl_Object_monitorEnterWait(var$1, var$2) {
    var thread = $rt_nativeThread();
    var javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        var result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    var callback = function() {};
    callback.$complete = function(val) {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = function(e) {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    return thread.suspend(function() {
        try {
            jl_Object_monitorEnterWait0(var$1, var$2, callback);
        } catch($e) {
            callback.$error($rt_exception($e));
        }
    });
}
function jl_Object_monitorEnterWait0($o, $count, $callback) {
    var $thread_0, var$5, $monitor;
    $thread_0 = jl_Thread_currentThread();
    if ($o.$monitor === null) {
        jl_Object_createMonitor($o);
        jl_Thread_setCurrentThread($thread_0);
        var$5 = $o.$monitor;
        var$5.$count = var$5.$count + $count | 0;
        $callback.$complete(null);
        return;
    }
    if ($o.$monitor.$owner === null) {
        $o.$monitor.$owner = $thread_0;
        jl_Thread_setCurrentThread($thread_0);
        var$5 = $o.$monitor;
        var$5.$count = var$5.$count + $count | 0;
        $callback.$complete(null);
        return;
    }
    $monitor = $o.$monitor;
    if ($monitor.$enteringThreads === null)
        $monitor.$enteringThreads = otp_Platform_createQueue();
    otp_PlatformQueue_add$static($monitor.$enteringThreads, jl_Object$monitorEnterWait$lambda$_6_0__init_($thread_0, $o, $count, $callback));
}
function jl_Object_monitorExit($o) {
    jl_Object_monitorExit0($o, 1);
}
function jl_Object_monitorExit0($o, $count) {
    var $monitor;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread()) {
        $monitor = $o.$monitor;
        $monitor.$count = $monitor.$count - $count | 0;
        if ($monitor.$count > 0)
            return;
        $monitor.$owner = null;
        if ($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads))
            otp_Platform_postpone(jl_Object$monitorExit$lambda$_8_0__init_($o));
        else
            jl_Object_isEmptyMonitor($o);
        return;
    }
    $rt_throw(jl_IllegalMonitorStateException__init_());
}
function jl_Object_waitForOtherThreads($o) {
    var $monitor, $enteringThreads, $r;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === null) {
        $monitor = $o.$monitor;
        if ($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads)) {
            $enteringThreads = $monitor.$enteringThreads;
            $r = otp_PlatformQueue_remove$static($enteringThreads);
            if ($enteringThreads === null)
                $monitor.$enteringThreads = null;
            $r.$run();
        }
        return;
    }
}
function jl_Object_isEmptyMonitor($this) {
    var $monitor, var$2;
    $monitor = $this.$monitor;
    if ($monitor === null)
        return 1;
    a: {
        b: {
            if ($monitor.$owner === null) {
                if ($monitor.$enteringThreads !== null) {
                    var$2 = $monitor.$enteringThreads;
                    if (!otp_PlatformQueue_isEmpty$static(var$2))
                        break b;
                }
                if ($monitor.$notifyListeners === null)
                    break a;
                var$2 = $monitor.$notifyListeners;
                if (otp_PlatformQueue_isEmpty$static(var$2))
                    break a;
            }
        }
        return 0;
    }
    jl_Object_deleteMonitor($this);
    return 1;
}
function jl_Object_deleteMonitor($this) {
    $this.$monitor = null;
}
function jl_Object__init_0($this) {
    return;
}
function jl_Object_getClass($this) {
    return jl_Class_getClass($this.constructor);
}
function jl_Object_hashCode($this) {
    return jl_Object_identity($this);
}
function jl_Object_equals($this, $other) {
    return $this !== $other ? 0 : 1;
}
function jl_Object_toString($this) {
    return jl_StringBuilder__init_().$append(jl_Object_getClass($this).$getName()).$append($rt_s(1)).$append(jl_Integer_toHexString(jl_Object_identity($this))).$toString();
}
function jl_Object_identity($this) {
    var $platformThis, var$2;
    $platformThis = $this;
    if (!$platformThis.$id$) {
        var$2 = $rt_nextId();
        $platformThis.$id$ = var$2;
    }
    return $this.$id$;
}
function jl_Object_clone($this) {
    var var$1, $result, var$3;
    if (!$rt_isInstance($this, jl_Cloneable)) {
        var$1 = $this;
        if (var$1.constructor.$meta.item === null)
            $rt_throw(jl_CloneNotSupportedException__init_());
    }
    $result = otp_Platform_clone($this);
    var$1 = $result;
    var$3 = $rt_nextId();
    var$1.$id$ = var$3;
    return $result;
}
function jl_Object_lambda$monitorExit$2($o) {
    jl_Object_waitForOtherThreads($o);
}
function jl_Object_lambda$monitorEnterWait$0($thread_0, $o, $count, $callback) {
    var var$5;
    jl_Thread_setCurrentThread($thread_0);
    $o.$monitor.$owner = $thread_0;
    var$5 = $o.$monitor;
    var$5.$count = var$5.$count + $count | 0;
    $callback.$complete(null);
}
function oktt_Test() {
}
function okttm_FrustumMeshBuilderTest() {
    jl_Object.call(this);
}
function okttm_FrustumMeshBuilderTest__init_() {
    var var_0 = new okttm_FrustumMeshBuilderTest();
    okttm_FrustumMeshBuilderTest__init_0(var_0);
    return var_0;
}
function okttm_FrustumMeshBuilderTest_getName($this) {
    return $rt_s(2);
}
function okttm_FrustumMeshBuilderTest_testMain($this) {
    var $shader, var$2, var$3, var$4, var$5, $perspectiveCamera, $orthographicCamera, var$8, var$9, $perspectiveFrustumMesh, $orthographicFrustumMesh, $control;
    $shader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($shader, $rt_s(3), $rt_s(4), var$2, 0, var$3, 0, var$4, 124, var$5);
    $perspectiveCamera = oktgc_Camera__init_(null, null, null, 0.10000000149011612, 1.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 3815, null);
    $orthographicCamera = new oktgc_Camera;
    var$8 = null;
    var$9 = null;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    oktgc_Camera__init_0($orthographicCamera, var$8, var$9, var$2, 0.10000000149011612, 1.0, 0.0, 1.0, 1.0, 1, 0.0, var$3, 0, 3623, var$4);
    $perspectiveFrustumMesh = oktmb_MeshBuilder_build$default(oktmb_FrustumMeshBuilder__init_($perspectiveCamera.$getInverseViewProjectionMatrix()), null, 1, null);
    $orthographicFrustumMesh = oktmb_MeshBuilder_build$default(oktmb_FrustumMeshBuilder__init_($orthographicCamera.$getInverseViewProjectionMatrix()), null, 1, null);
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_setApi(oktgc_ActiveCamera_INSTANCE, oktgc_Camera__init_(null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null));
    $control = new oktgc_OrbitCameraControl;
    var$8 = null;
    var$9 = null;
    var$2 = null;
    oktgc_OrbitCameraControl__init_($control, 0.0, 0.5, 0.0, 0.0, 0.30000001192092896, 0.0, 0.0, 0.0, 0.0, 0.0, var$8, 0, var$9, 8173, var$2);
    oktgc_OrbitCameraControl_listenToMouse($control);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, oktgc_OrbitCameraControl_getHelp($control), null, 2, null);
    oktg_GL_$callClinit();
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttm_FrustumMeshBuilderTest$testMain$1__init_($control, $shader, $perspectiveFrustumMesh, $orthographicFrustumMesh), 1, null);
}
function okttm_FrustumMeshBuilderTest__init_0($this) {
    jl_Object__init_0($this);
}
function jur_AbstractCharClass$LazyCharClass() {
    var a = this; jl_Object.call(a);
    a.$posValue = null;
    a.$negValue = null;
}
function jur_AbstractCharClass$LazyCharClass__init_() {
    var var_0 = new jur_AbstractCharClass$LazyCharClass();
    jur_AbstractCharClass$LazyCharClass__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyCharClass__init_0($this) {
    jl_Object__init_0($this);
}
function jur_AbstractCharClass$LazyCharClass_getValue($this, $negative) {
    if (!$negative && $this.$posValue === null)
        $this.$posValue = $this.$computeValue();
    else if ($negative && $this.$negValue === null)
        $this.$negValue = $this.$computeValue().$setNegative(1);
    if ($negative)
        return $this.$negValue;
    return $this.$posValue;
}
function jur_AbstractCharClass$LazyBlank() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyBlank__init_() {
    var var_0 = new jur_AbstractCharClass$LazyBlank();
    jur_AbstractCharClass$LazyBlank__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyBlank__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyBlank_computeValue($this) {
    return jur_CharClass__init_().$add(32).$add(9);
}
function k_Function() {
}
function kji_FunctionBase() {
}
function ji_Serializable() {
}
function kji_Lambda() {
    jl_Object.call(this);
    this.$arity = 0;
}
function kji_Lambda__init_(var_0) {
    var var_1 = new kji_Lambda();
    kji_Lambda__init_0(var_1, var_0);
    return var_1;
}
function kji_Lambda_getArity($this) {
    return $this.$arity;
}
function kji_Lambda__init_0($this, $arity) {
    jl_Object__init_0($this);
    $this.$arity = $arity;
}
function kjf_Function1() {
}
function oktt_GLTFLoaderAnimTest$testMain$1() {
    kji_Lambda.call(this);
}
var oktt_GLTFLoaderAnimTest$testMain$1_INSTANCE = null;
function oktt_GLTFLoaderAnimTest$testMain$1_$callClinit() {
    oktt_GLTFLoaderAnimTest$testMain$1_$callClinit = $rt_eraseClinit(oktt_GLTFLoaderAnimTest$testMain$1);
    oktt_GLTFLoaderAnimTest$testMain$1__clinit_();
}
function oktt_GLTFLoaderAnimTest$testMain$1__init_() {
    var var_0 = new oktt_GLTFLoaderAnimTest$testMain$1();
    oktt_GLTFLoaderAnimTest$testMain$1__init_0(var_0);
    return var_0;
}
function oktt_GLTFLoaderAnimTest$testMain$1_invoke(var$0, var$1) {
    oktt_GLTFLoaderAnimTest$testMain$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktt_GLTFLoaderAnimTest$testMain$1_invoke0($this, $model) {
    var $$this$forEach$iv, var$3, $element$iv, $mesh, var$6, $it, var$8, var$9;
    kji_Intrinsics_checkParameterIsNotNull($model, $rt_s(5));
    $$this$forEach$iv = oktt_GLTFModel_getGltf($model).$getMeshes();
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $mesh = $element$iv;
        $$this$forEach$iv = oktgg_GLTFMesh_getPrimitives($mesh);
        var$6 = $$this$forEach$iv.$iterator();
        while (var$6.$hasNext()) {
            a: {
                $element$iv = var$6.$next();
                $it = $element$iv;
                oktu_LOG_$callClinit();
                var$8 = oktu_LOG_INSTANCE;
                var$9 = oktgg_GLTFPrimitive_getMesh($it).$getMaterial().$getShader();
                if (var$9 !== null) {
                    var$9 = okts_IShader$DefaultImpls_sourceCode$default(var$9, 0, 1, null);
                    if (var$9 !== null)
                        break a;
                }
                var$9 = $rt_s(6);
            }
            oktu_ILog$DefaultImpls_info$default(var$8, var$9, null, 2, null);
        }
    }
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktt_GLTFLoaderAnimTest$testMain$1$2__init_($model), 1, null);
}
function oktt_GLTFLoaderAnimTest$testMain$1__init_0(var$0) {
    oktt_GLTFLoaderAnimTest$testMain$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktt_GLTFLoaderAnimTest$testMain$1__clinit_() {
    oktt_GLTFLoaderAnimTest$testMain$1_INSTANCE = oktt_GLTFLoaderAnimTest$testMain$1__init_();
}
function oktm_IVertexBuffer() {
}
var oktm_IVertexBuffer_Companion = null;
function oktm_IVertexBuffer_$callClinit() {
    oktm_IVertexBuffer_$callClinit = $rt_eraseClinit(oktm_IVertexBuffer);
    oktm_IVertexBuffer__clinit_();
}
function oktm_IVertexBuffer__clinit_() {
    oktm_IVertexBuffer$Companion_$callClinit();
    oktm_IVertexBuffer_Companion = oktm_IVertexBuffer$Companion_$$INSTANCE;
}
function oktm_VertexBufferObject() {
    var a = this; jl_Object.call(a);
    a.$floatBuffer = null;
    a.$bytes = null;
    a.$handle = 0;
    a.$isBufferNeedReload = 0;
    a.$vertexInputs = null;
    a.$instancesToRender = 0;
    a.$usage = 0;
}
function oktm_VertexBufferObject__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktm_VertexBufferObject();
    oktm_VertexBufferObject__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktm_VertexBufferObject__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktm_VertexBufferObject();
    oktm_VertexBufferObject__init_2(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function oktm_VertexBufferObject__init_3(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktm_VertexBufferObject();
    oktm_VertexBufferObject__init_4(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktm_VertexBufferObject__init_5(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktm_VertexBufferObject();
    oktm_VertexBufferObject__init_6(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function oktm_VertexBufferObject_getFloatBuffer($this) {
    return $this.$floatBuffer;
}
function oktm_VertexBufferObject_getBytes($this) {
    return $this.$bytes;
}
function oktm_VertexBufferObject_getHandle($this) {
    return $this.$handle;
}
function oktm_VertexBufferObject_setHandle($this, $_set___) {
    $this.$handle = $_set___;
}
function oktm_VertexBufferObject_isBufferNeedReload($this) {
    return $this.$isBufferNeedReload;
}
function oktm_VertexBufferObject_setBufferNeedReload($this, $_set___) {
    $this.$isBufferNeedReload = $_set___;
}
function oktm_VertexBufferObject_initGpuObjects($this) {
    oktg_GL_$callClinit();
    oktm_VertexBufferObject_setHandle($this, oktg_GL_glGenBuffer(oktg_GL_INSTANCE));
    oktm_VertexBufferObject_setBufferNeedReload($this, 1);
}
function oktm_VertexBufferObject_loadBufferToGpu($this) {
    oktg_GL_$callClinit();
    if (oktg_GL_getArrayBuffer(oktg_GL_INSTANCE) != oktm_VertexBufferObject_getHandle($this))
        oktg_GL_glBindBuffer(oktg_GL_INSTANCE, 34962, oktm_VertexBufferObject_getHandle($this));
    oktg_GL_glBufferData(oktg_GL_INSTANCE, 34962, oktm_VertexBufferObject_getBytes($this).$getSize(), oktm_VertexBufferObject_getBytes($this), oktm_VertexBufferObject_getUsage($this));
    oktm_VertexBufferObject_setBufferNeedReload($this, 0);
}
function oktm_VertexBufferObject_bind($this, $shader) {
    var $attributes, $vertexInputs, $bytesPerVertex, $i, var$6, $input, $location;
    oktg_GL_$callClinit();
    oktg_GL_glBindBuffer(oktg_GL_INSTANCE, 34962, oktm_VertexBufferObject_getHandle($this));
    if (oktm_VertexBufferObject_isBufferNeedReload($this))
        oktm_VertexBufferObject_loadBufferToGpu($this);
    $attributes = $shader === null ? null : $shader.$getAttributes();
    a: {
        if ($attributes !== null) {
            $vertexInputs = oktm_VertexBufferObject_getVertexInputs($this);
            $bytesPerVertex = $vertexInputs.$getBytesPerVertex();
            $i = 0;
            var$6 = $vertexInputs.$size();
            while (true) {
                if ($i >= var$6)
                    break a;
                $input = $vertexInputs.$get($i);
                $location = $attributes.$get0($input.$getName());
                if ($location !== null) {
                    oktg_GL_glEnableVertexAttribArray(oktg_GL_INSTANCE, $location.$intValue());
                    oktg_GL_glVertexAttribPointer(oktg_GL_INSTANCE, $location.$intValue(), $input.$getSize(), $input.$getType(), $input.$getNormalized(), $bytesPerVertex, $input.$getByteOffset());
                    if (!(!(oktg_GL_isGLES(oktg_GL_INSTANCE) && oktg_GL_getGlesMajVer(oktg_GL_INSTANCE) >= 3) && oktg_GL_isGLES(oktg_GL_INSTANCE)))
                        oktg_GL_glVertexAttribDivisor(oktg_GL_INSTANCE, $location.$intValue(), oktm_VertexBufferObject_getInstancesToRender($this) <= 0 ? 0 : 1);
                }
                $i = $i + 1 | 0;
            }
        }
    }
}
function oktm_VertexBufferObject_getVertexInputs($this) {
    return $this.$vertexInputs;
}
function oktm_VertexBufferObject_getInstancesToRender($this) {
    return $this.$instancesToRender;
}
function oktm_VertexBufferObject_getUsage($this) {
    return $this.$usage;
}
function oktm_VertexBufferObject__init_0($this, $vertexInputs, $bytes, $instancesToRender, $usage, $initGpuObjects) {
    kji_Intrinsics_checkParameterIsNotNull($vertexInputs, $rt_s(7));
    kji_Intrinsics_checkParameterIsNotNull($bytes, $rt_s(8));
    jl_Object__init_0($this);
    $this.$vertexInputs = $vertexInputs;
    $this.$instancesToRender = $instancesToRender;
    $this.$usage = $usage;
    $this.$floatBuffer = $bytes.$floatView();
    $this.$bytes = $bytes;
    $this.$isBufferNeedReload = 1;
    if ($initGpuObjects)
        oktm_VertexBufferObject_initGpuObjects($this);
}
function oktm_VertexBufferObject__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$6 & 4)
        var$3 = 0;
    if (var$6 & 8)
        var$4 = 35044;
    if (var$6 & 16)
        var$5 = 1;
    oktm_VertexBufferObject__init_0(var$0, var$1, var$2, var$3, var$4, var$5);
}
function oktm_VertexBufferObject__init_4($this, $numVertices, $vertexInputs, $instancesToRender, $usage, $initGpuObjects) {
    var var$6, var$7;
    kji_Intrinsics_checkParameterIsNotNull($vertexInputs, $rt_s(7));
    var$6 = $vertexInputs;
    oktd_DATA_$callClinit();
    var$7 = oktd_DATA_bytes(oktd_DATA_INSTANCE, $rt_imul($vertexInputs.$getBytesPerVertex(), $numVertices));
    oktm_VertexBufferObject__init_0($this, var$6, var$7, $instancesToRender, $usage, $initGpuObjects);
}
function oktm_VertexBufferObject__init_6(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$6 & 4)
        var$3 = var$1;
    if (var$6 & 8)
        var$4 = 35044;
    if (var$6 & 16)
        var$5 = 1;
    oktm_VertexBufferObject__init_4(var$0, var$1, var$2, var$3, var$4, var$5);
}
function oktm_VertexBufferObject_getSize($this) {
    return oktm_IVertexBuffer$DefaultImpls_getSize($this);
}
function jl_Number() {
    jl_Object.call(this);
}
function jl_Number__init_() {
    var var_0 = new jl_Number();
    jl_Number__init_0(var_0);
    return var_0;
}
function jl_Number__init_0($this) {
    jl_Object__init_0($this);
}
function jl_Number_shortValue($this) {
    return $this.$intValue() << 16 >> 16;
}
function jl_Comparable() {
}
function jl_Integer() {
    jl_Number.call(this);
    this.$value = 0;
}
var jl_Integer_TYPE = null;
var jl_Integer_integerCache = null;
function jl_Integer_$callClinit() {
    jl_Integer_$callClinit = $rt_eraseClinit(jl_Integer);
    jl_Integer__clinit_();
}
function jl_Integer__init_(var_0) {
    var var_1 = new jl_Integer();
    jl_Integer__init_0(var_1, var_0);
    return var_1;
}
function jl_Integer__init_0($this, $value) {
    jl_Integer_$callClinit();
    jl_Number__init_0($this);
    $this.$value = $value;
}
function jl_Integer_toString($i, $radix) {
    jl_Integer_$callClinit();
    if (!($radix >= 2 && $radix <= 36))
        $radix = 10;
    return jl_AbstractStringBuilder__init_(20).$append0($i, $radix).$toString();
}
function jl_Integer_toHexString($i) {
    jl_Integer_$callClinit();
    return otci_IntegerUtil_toUnsignedLogRadixString($i, 4);
}
function jl_Integer_toString0($i) {
    jl_Integer_$callClinit();
    return jl_Integer_toString($i, 10);
}
function jl_Integer_parseInt($s, $radix) {
    var $negative, $index, $value, var$6, $digit;
    jl_Integer_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        if ($s !== null && !$s.$isEmpty()) {
            a: {
                $negative = 0;
                $index = 0;
                switch ($s.$charAt(0)) {
                    case 43:
                        $index = 1;
                        break a;
                    case 45:
                        $negative = 1;
                        $index = 1;
                        break a;
                    default:
                }
            }
            $value = 0;
            if ($index == $s.$length())
                $rt_throw(jl_NumberFormatException__init_());
            while ($index < $s.$length()) {
                var$6 = $index + 1 | 0;
                $digit = jl_Character_getNumericValue($s.$charAt($index));
                if ($digit < 0)
                    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(9)).$append($s).$toString()));
                if ($digit >= $radix)
                    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(10)).$append1($radix).$append($rt_s(11)).$append($s).$toString()));
                $value = $rt_imul($radix, $value) + $digit | 0;
                if ($value < 0) {
                    if (var$6 == $s.$length() && $value == (-2147483648) && $negative)
                        return (-2147483648);
                    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(12)).$append($s).$toString()));
                }
                $index = var$6;
            }
            if ($negative)
                $value =  -$value;
            return $value;
        }
        $rt_throw(jl_NumberFormatException__init_0($rt_s(13)));
    }
    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(14)).$append1($radix).$toString()));
}
function jl_Integer_parseInt0($s) {
    jl_Integer_$callClinit();
    return jl_Integer_parseInt($s, 10);
}
function jl_Integer_valueOf($i) {
    jl_Integer_$callClinit();
    if ($i >= (-128) && $i <= 127) {
        jl_Integer_ensureIntegerCache();
        return jl_Integer_integerCache.data[$i + 128 | 0];
    }
    return jl_Integer__init_($i);
}
function jl_Integer_ensureIntegerCache() {
    var $j;
    jl_Integer_$callClinit();
    a: {
        if (jl_Integer_integerCache === null) {
            jl_Integer_integerCache = $rt_createArray(jl_Integer, 256);
            $j = 0;
            while (true) {
                if ($j >= jl_Integer_integerCache.data.length)
                    break a;
                jl_Integer_integerCache.data[$j] = jl_Integer__init_($j - 128 | 0);
                $j = $j + 1 | 0;
            }
        }
    }
}
function jl_Integer_intValue($this) {
    return $this.$value;
}
function jl_Integer_floatValue($this) {
    return $this.$value;
}
function jl_Integer_toString1($this) {
    return jl_Integer_toString0($this.$value);
}
function jl_Integer_hashCode($this) {
    return $this.$value >>> 4 ^ $this.$value << 28 ^ $this.$value << 8 ^ $this.$value >>> 24;
}
function jl_Integer_equals($this, $other) {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Integer && $other.$value == $this.$value ? 1 : 0;
}
function jl_Integer_compareTo($this, $other) {
    return jl_Integer_compare($this.$value, $other.$value);
}
function jl_Integer_compare(var$1, var$2) {
    jl_Integer_$callClinit();
    return $rt_compare(var$1, var$2);
}
function jl_Integer_numberOfLeadingZeros($i) {
    var $n, var$3, var$4;
    jl_Integer_$callClinit();
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i >>> 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    var$4 = var$3 >>> 8;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 8;
    var$3 = var$4 >>> 4;
    if (!var$3)
        var$3 = var$4;
    else
        $n = $n | 4;
    var$4 = var$3 >>> 2;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 2;
    if (var$4 >>> 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
}
function jl_Integer_numberOfTrailingZeros($i) {
    var $n, var$3, var$4;
    jl_Integer_$callClinit();
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i << 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    var$4 = var$3 << 8;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 8;
    var$3 = var$4 << 4;
    if (!var$3)
        var$3 = var$4;
    else
        $n = $n | 4;
    var$4 = var$3 << 2;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 2;
    if (var$4 << 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
}
function jl_Integer_rotateLeft($i, $distance) {
    var var$3;
    jl_Integer_$callClinit();
    var$3 = $distance & 31;
    return $i << var$3 | $i >>> (32 - var$3 | 0);
}
function jl_Integer_rotateRight($i, $distance) {
    var var$3;
    jl_Integer_$callClinit();
    var$3 = $distance & 31;
    return $i >>> var$3 | $i << (32 - var$3 | 0);
}
function jl_Integer_compareTo0($this, var$1) {
    return $this.$compareTo(var$1);
}
function jl_Integer__clinit_() {
    jl_Integer_TYPE = $rt_cls($rt_intcls());
}
function oktj_IJsonObject() {
}
function oktj_IJsonObjectIO() {
}
function oktgg_IGLTFArrayElement() {
}
function oktgg_GLTFImage() {
    var a = this; jl_Object.call(a);
    a.$name = null;
    a.$uri = null;
    a.$mimeType = null;
    a.$bufferView = 0;
    a.$gltf = null;
    a.$elementIndex = 0;
    a.$image = null;
}
function oktgg_GLTFImage__init_(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFImage();
    oktgg_GLTFImage__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTFImage__init_1(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgg_GLTFImage();
    oktgg_GLTFImage__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktgg_GLTFImage_getName($this) {
    return $this.$name;
}
function oktgg_GLTFImage_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name = $_set___;
}
function oktgg_GLTFImage_setUri($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$uri = $_set___;
}
function oktgg_GLTFImage_setMimeType($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$mimeType = $_set___;
}
function oktgg_GLTFImage_setBufferView($this, $_set___) {
    $this.$bufferView = $_set___;
}
function oktgg_GLTFImage_read($this, $json) {
    var var$2, $bufferView, $buffer;
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $json.$string($rt_s(17), oktgg_GLTFImage$read$1__init_($this));
    $json.$string($rt_s(18), oktgg_GLTFImage$read$2__init_($this));
    $json.$string($rt_s(19), oktgg_GLTFImage$read$3__init_($this));
    $json.$int($rt_s(20), oktgg_GLTFImage$read$4__init_($this));
    if (!$json.$contains($rt_s(20)))
        $json.$string($rt_s(18), oktgg_GLTFImage$read$5__init_($this));
    else {
        var$2 = oktgg_GLTFImage_getGltf($this).$getBufferViews().$get1($json.$int0($rt_s(20)));
        kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(21));
        $bufferView = var$2;
        var$2 = oktgg_GLTFImage_getGltf($this).$getBuffers().$get1(oktgg_GLTFBufferView_getBuffer($bufferView));
        kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(22));
        $buffer = var$2;
        oktgg_GLTFBuffer_getBytes($buffer).$setPosition(oktgg_GLTFBufferView_getByteOffset($bufferView));
        oktgg_GLTFBuffer_getBytes($buffer).$setSize(oktgg_GLTFBufferView_getByteLength($bufferView));
        $this.$image.$setBytes(oktgg_GLTFBuffer_getBytes($buffer).$byteView());
        oktgg_GLTFBuffer_getBytes($buffer).$setPosition(0);
        oktgg_GLTFBuffer_getBytes($buffer).$setSize(oktgg_GLTFBuffer_getBytes($buffer).$getCapacity());
        oktgg_GLTFArray_ready(oktgg_GLTFImage_getGltf($this).$getImages(), oktgg_GLTFImage_getElementIndex($this));
    }
}
function oktgg_GLTFImage_getGltf($this) {
    return $this.$gltf;
}
function oktgg_GLTFImage_getElementIndex($this) {
    return $this.$elementIndex;
}
function oktgg_GLTFImage_getImage($this) {
    return $this.$image;
}
function oktgg_GLTFImage__init_0($this, $gltf, $elementIndex, $image) {
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($image, $rt_s(24));
    jl_Object__init_0($this);
    $this.$gltf = $gltf;
    $this.$elementIndex = $elementIndex;
    $this.$image = $image;
    $this.$name = $rt_s(6);
    $this.$uri = $rt_s(6);
    $this.$mimeType = $rt_s(6);
    $this.$bufferView = (-1);
}
function oktgg_GLTFImage__init_2(var$0, var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 4) {
        okti_IMG_$callClinit();
        var$3 = okti_IMG_createImage(okti_IMG_INSTANCE);
    }
    oktgg_GLTFImage__init_0(var$0, var$1, var$2, var$3);
}
function jur_AbstractCharClass$LazyAlpha() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyAlpha__init_() {
    var var_0 = new jur_AbstractCharClass$LazyAlpha();
    jur_AbstractCharClass$LazyAlpha__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyAlpha__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyAlpha_computeValue($this) {
    return jur_CharClass__init_().$add0(97, 122).$add0(65, 90);
}
function oktt_GLTFModel$3() {
    kji_Lambda.call(this);
    this.$this$0 = null;
}
function oktt_GLTFModel$3__init_(var_0) {
    var var_1 = new oktt_GLTFModel$3();
    oktt_GLTFModel$3__init_0(var_1, var_0);
    return var_1;
}
function oktt_GLTFModel$3_invoke(var$0, var$1) {
    oktt_GLTFModel$3_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktt_GLTFModel$3_invoke0($this, $it) {
    var $nodes, $$this$forEach$iv, var$4, $element$iv, $it_0, var$7, var$8;
    oktt_GLTFModel_setPlayer($this.$this$0, oktga_AnimPlayer__init_());
    $nodes = ju_ArrayList__init_();
    $$this$forEach$iv = oktt_GLTFModel_getGltf($this.$this$0).$getNodes();
    var$4 = $$this$forEach$iv.$iterator();
    while (var$4.$hasNext()) {
        $element$iv = var$4.$next();
        $it_0 = $element$iv;
        $nodes.$add1(oktgg_GLTFNode_getNode($it_0));
    }
    var$4 = oktt_GLTFModel_getPlayer($this.$this$0);
    if (var$4 !== null)
        oktga_AnimPlayer_setNodes(var$4, $nodes);
    var$7 = oktt_GLTFModel_getPlayer($this.$this$0);
    if (var$7 !== null)
        oktga_AnimPlayer_setAnimation$default(var$7, oktgg_GLTFAnimation_getAnim(oktt_GLTFModel_getGltf($this.$this$0).$getAnimations().$get1(0)), (-1), 0.0, 0.0, 0.0, null, 60, null);
    oktt_GLTFModel_setScene($this.$this$0, oktgg_GLTFScene_getScene(oktt_GLTFModel_getGltf($this.$this$0).$getScenes().$get1(0)));
    var$4 = oktt_GLTFModel_getScene($this.$this$0);
    if (var$4 !== null) {
        var$4 = var$4.$getLights();
        if (var$4 !== null)
            var$4.$add1(oktt_GLTFModel_getLight($this.$this$0));
    }
    var$4 = oktt_GLTFModel_getRoot($this.$this$0);
    var$8 = oktt_GLTFModel_getScene($this.$this$0);
    if (var$8 === null)
        kji_Intrinsics_throwNpe();
    oktgn_Node_addChildren(var$4, var$8.$getNodes0());
    oktt_GLTFModel_getResponse($this.$this$0).$invoke1($this.$this$0);
}
function oktt_GLTFModel$3__init_0(var$0, var$1) {
    var$0.$this$0 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktt_ITexture() {
}
function oktt_ITexture2D() {
}
function jl_CharSequence() {
}
function oktt_GLTFModel$1() {
    kji_Lambda.call(this);
}
var oktt_GLTFModel$1_INSTANCE = null;
function oktt_GLTFModel$1_$callClinit() {
    oktt_GLTFModel$1_$callClinit = $rt_eraseClinit(oktt_GLTFModel$1);
    oktt_GLTFModel$1__clinit_();
}
function oktt_GLTFModel$1__init_() {
    var var_0 = new oktt_GLTFModel$1();
    oktt_GLTFModel$1__init_0(var_0);
    return var_0;
}
function oktt_GLTFModel$1_invoke(var$0, var$1) {
    oktt_GLTFModel$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktt_GLTFModel$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
}
function oktt_GLTFModel$1__init_0(var$0) {
    oktt_GLTFModel$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktt_GLTFModel$1__clinit_() {
    oktt_GLTFModel$1_INSTANCE = oktt_GLTFModel$1__init_();
}
function oktd_IDataArray() {
}
function oktt_TvmArrayBufferView() {
    jl_Object.call(this);
    this.$position = 0;
}
function oktt_TvmArrayBufferView__init_() {
    var var_0 = new oktt_TvmArrayBufferView();
    oktt_TvmArrayBufferView__init_0(var_0);
    return var_0;
}
function oktt_TvmArrayBufferView_getSourceObject($this) {
    return $this.$getArray();
}
function oktt_TvmArrayBufferView_getPosition($this) {
    return $this.$position;
}
function oktt_TvmArrayBufferView_setPosition($this, $_set___) {
    $this.$position = $_set___;
}
function oktt_TvmArrayBufferView_getCapacity($this) {
    return $this.$getArray().length;
}
function oktt_TvmArrayBufferView__init_0($this) {
    jl_Object__init_0($this);
}
function oktd_IByteData() {
}
function oktt_TvmUInt8Array() {
    var a = this; oktt_TvmArrayBufferView.call(a);
    a.$size0 = 0;
    a.$byteArray = null;
}
var oktt_TvmUInt8Array_bytes4 = null;
var oktt_TvmUInt8Array_shortView = null;
var oktt_TvmUInt8Array_intView = null;
var oktt_TvmUInt8Array_floatView = null;
var oktt_TvmUInt8Array_Companion = null;
function oktt_TvmUInt8Array_$callClinit() {
    oktt_TvmUInt8Array_$callClinit = $rt_eraseClinit(oktt_TvmUInt8Array);
    oktt_TvmUInt8Array__clinit_();
}
function oktt_TvmUInt8Array__init_(var_0) {
    var var_1 = new oktt_TvmUInt8Array();
    oktt_TvmUInt8Array__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmUInt8Array_setOrder($this, $$noName_0) {
    kji_Intrinsics_checkParameterIsNotNull($$noName_0, $rt_s(26));
}
function oktt_TvmUInt8Array_getArray($this) {
    return $this.$byteArray;
}
function oktt_TvmUInt8Array_getSize($this) {
    return $this.$size0;
}
function oktt_TvmUInt8Array_setSize($this, $_set___) {
    $this.$size0 = $_set___;
}
function oktt_TvmUInt8Array_set($this, $index, $value) {
    var var$3, var$4;
    var$3 = $this.$byteArray;
    var$4 = ($value & 255) << 16 >> 16;
    var$3[$index] = var$4;
}
function oktt_TvmUInt8Array_set0(var$0, var$1, var$2) {
    oktt_TvmUInt8Array_set(var$0, var$1, var$2.$byteValue());
}
function oktt_TvmUInt8Array_get($this, $index) {
    return jl_Byte_valueOf($this.$byteArray[$index] << 24 >> 24);
}
function oktt_TvmUInt8Array_get0(var$0, var$1) {
    return oktt_TvmUInt8Array_get(var$0, var$1);
}
function oktt_TvmUInt8Array_get1($this) {
    var $value;
    $value = $this.$byteArray[$this.$getPosition()];
    $this.$setPosition($this.$getPosition() + 1 | 0);
    return jl_Byte_valueOf($value << 24 >> 24);
}
function oktt_TvmUInt8Array_get2(var$0) {
    return oktt_TvmUInt8Array_get1(var$0);
}
function oktt_TvmUInt8Array_put($this, $value) {
    var var$2, var$3, var$4;
    var$2 = $this.$byteArray;
    var$3 = $this.$getPosition();
    var$4 = ($value & 255) << 16 >> 16;
    var$2[var$3] = var$4;
    $this.$setPosition($this.$getPosition() + 1 | 0);
}
function oktt_TvmUInt8Array_put0(var$0, var$1) {
    oktt_TvmUInt8Array_put(var$0, var$1.$byteValue());
}
function oktt_TvmUInt8Array_byteView($this) {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new oktt_TvmUInt8Array;
    var$2 = $this.$byteArray.buffer;
    var$3 = $this.$getPosition();
    var$4 = oktt_TvmUInt8Array_getSize($this) - $this.$getPosition() | 0;
    var$5 = new Uint8Array(var$2, var$3, var$4);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$5, $rt_s(27));
    oktt_TvmUInt8Array__init_0(var$1, var$5);
    return var$1;
}
function oktt_TvmUInt8Array_shortView0($this) {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new oktt_TvmUInt16Array;
    var$2 = $this.$byteArray.buffer;
    var$3 = $this.$getPosition();
    var$4 = (oktt_TvmUInt8Array_getSize($this) - $this.$getPosition() | 0) / 2 | 0;
    var$5 = new Uint16Array(var$2, var$3, var$4);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$5, $rt_s(28));
    oktt_TvmUInt16Array__init_(var$1, var$5);
    return var$1;
}
function oktt_TvmUInt8Array_intView0($this) {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new oktt_TvmInt32Array;
    var$2 = $this.$byteArray.buffer;
    var$3 = $this.$getPosition();
    var$4 = (oktt_TvmUInt8Array_getSize($this) - $this.$getPosition() | 0) / 4 | 0;
    var$5 = new Int32Array(var$2, var$3, var$4);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$5, $rt_s(29));
    oktt_TvmInt32Array__init_(var$1, var$5);
    return var$1;
}
function oktt_TvmUInt8Array_floatView0($this) {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new oktt_TvmFloat32Array;
    var$2 = $this.$byteArray.buffer;
    var$3 = $this.$getPosition();
    var$4 = (oktt_TvmUInt8Array_getSize($this) - $this.$getPosition() | 0) / 4 | 0;
    var$5 = new Float32Array(var$2, var$3, var$4);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$5, $rt_s(30));
    oktt_TvmFloat32Array__init_(var$1, var$5);
    return var$1;
}
function oktt_TvmUInt8Array_readFloat($this, $byteStartIndex) {
    var var$2, var$3, var$4;
    var$2 = oktt_TvmUInt8Array_bytes4;
    var$3 = (oktt_TvmUInt8Array_get($this, $byteStartIndex).$byteValue() & 255) << 16 >> 16;
    var$2[3] = var$3;
    var$2 = oktt_TvmUInt8Array_bytes4;
    var$4 = (oktt_TvmUInt8Array_get($this, $byteStartIndex + 1 | 0).$byteValue() & 255) << 16 >> 16;
    var$2[2] = var$4;
    var$2 = oktt_TvmUInt8Array_bytes4;
    var$3 = (oktt_TvmUInt8Array_get($this, $byteStartIndex + 2 | 0).$byteValue() & 255) << 16 >> 16;
    var$2[1] = var$3;
    var$2 = oktt_TvmUInt8Array_bytes4;
    var$3 = (oktt_TvmUInt8Array_get($this, $byteStartIndex + 3 | 0).$byteValue() & 255) << 16 >> 16;
    var$2[0] = var$3;
    return oktt_TvmUInt8Array_floatView[0];
}
function oktt_TvmUInt8Array__init_0($this, $byteArray) {
    oktt_TvmUInt8Array_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($byteArray, $rt_s(31));
    oktt_TvmArrayBufferView__init_0($this);
    $this.$byteArray = $byteArray;
    $this.$size0 = $this.$byteArray.length;
}
function oktt_TvmUInt8Array__clinit_() {
    oktt_TvmUInt8Array_Companion = oktt_TvmUInt8Array$Companion__init_(null);
    oktt_TvmUInt8Array_bytes4 = new Uint8Array(4);
    oktt_TvmUInt8Array_shortView = new Uint16Array(oktt_TvmUInt8Array_bytes4);
    oktt_TvmUInt8Array_intView = new Int32Array(oktt_TvmUInt8Array_bytes4);
    oktt_TvmUInt8Array_floatView = new Float32Array(oktt_TvmUInt8Array_bytes4);
}
function oktt_TvmUInt8Array_put1($this, $array) {
    kji_Intrinsics_checkParameterIsNotNull($array, $rt_s(32));
    oktd_IByteData$DefaultImpls_put($this, $array);
}
function oktt_TvmUInt8Array_put2($this, $index, $value) {
    oktd_IByteData$DefaultImpls_put0($this, $index, $value);
}
function oktt_TvmUInt8Array_put3(var$0, var$1, var$2) {
    oktt_TvmUInt8Array_put2(var$0, var$1, var$2.$byteValue());
}
function oktt_TvmUInt8Array_toInt($this, $index) {
    return oktd_IByteData$DefaultImpls_toInt($this, $index);
}
function kjf_Function0() {
}
function okttsg_GBufferTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$gBuffer = null;
    a.$$model = null;
    a.$$screenQuad = null;
}
function okttsg_GBufferTest$testMain$1__init_(var_0, var_1, var_2) {
    var var_3 = new okttsg_GBufferTest$testMain$1();
    okttsg_GBufferTest$testMain$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function okttsg_GBufferTest$testMain$1_invoke(var$0) {
    okttsg_GBufferTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttsg_GBufferTest$testMain$1_invoke0($this) {
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_GBuffer_render($this.$$gBuffer, okttsg_GBufferTest$testMain$1$1__init_($this));
    oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad, oktt_GBuffer_getColorMap($this.$$gBuffer), null, null, okttsg_GBufferTest$testMain$1$2__init_($this), 2, null);
    oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad, oktt_GBuffer_getNormalMap($this.$$gBuffer), null, null, okttsg_GBufferTest$testMain$1$3__init_($this), 2, null);
    oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad, oktt_GBuffer_getPositionMap($this.$$gBuffer), null, null, okttsg_GBufferTest$testMain$1$4__init_($this), 2, null);
    oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad, oktt_GBuffer_getDepthMap($this.$$gBuffer), null, null, okttsg_GBufferTest$testMain$1$5__init_($this), 2, null);
}
function okttsg_GBufferTest$testMain$1__init_0(var$0, var$1, var$2, var$3) {
    var$0.$$gBuffer = var$1;
    var$0.$$model = var$2;
    var$0.$$screenQuad = var$3;
    kji_Lambda__init_0(var$0, 0);
}
function oooig_GimTriCollision$GIM_TRIANGLE_DATA() {
    var a = this; jl_Object.call(a);
    a.$m_vertices = null;
    a.$m_planes = null;
}
function oooig_GimTriCollision$GIM_TRIANGLE_DATA__init_() {
    var var_0 = new oooig_GimTriCollision$GIM_TRIANGLE_DATA();
    oooig_GimTriCollision$GIM_TRIANGLE_DATA__init_0(var_0);
    return var_0;
}
function oooig_GimTriCollision$GIM_TRIANGLE_DATA__init_0($this) {
    var var$1, var$2;
    jl_Object__init_0($this);
    var$1 = $rt_createArray(oooig_GimGeometry$vec3f, 3);
    var$2 = var$1.data;
    var$2[0] = oooig_GimGeometry$vec3f__init_();
    var$2[1] = oooig_GimGeometry$vec3f__init_();
    var$2[2] = oooig_GimGeometry$vec3f__init_();
    $this.$m_vertices = var$1;
    $this.$m_planes = oooig_GimTriCollision$GIM_TRIPLANES_CACHE__init_();
}
function jur_AbstractCharClass$LazyCategory() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category = 0;
    a.$mayContainSupplCodepoints = 0;
    a.$containsAllSurrogates = 0;
}
function jur_AbstractCharClass$LazyCategory__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyCategory__init_1(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$LazyCategory__init_0($this, $cat, $mayContainSupplCodepoints) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
    $this.$mayContainSupplCodepoints = $mayContainSupplCodepoints;
    $this.$category = $cat;
}
function jur_AbstractCharClass$LazyCategory__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
    $this.$containsAllSurrogates = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints = $mayContainSupplCodepoints;
    $this.$category = $cat;
}
function jur_AbstractCharClass$LazyCategory_computeValue($this) {
    var $chCl;
    $chCl = jur_UnicodeCategory__init_($this.$category);
    if ($this.$containsAllSurrogates)
        $chCl.$lowHighSurrogates.$set0(0, 2048);
    $chCl.$mayContainSupplCodepoints0 = $this.$mayContainSupplCodepoints;
    return $chCl;
}
function oktm_ScreenQuad$TextureRenderer$render$1() {
    kji_Lambda.call(this);
}
var oktm_ScreenQuad$TextureRenderer$render$1_INSTANCE = null;
function oktm_ScreenQuad$TextureRenderer$render$1_$callClinit() {
    oktm_ScreenQuad$TextureRenderer$render$1_$callClinit = $rt_eraseClinit(oktm_ScreenQuad$TextureRenderer$render$1);
    oktm_ScreenQuad$TextureRenderer$render$1__clinit_();
}
function oktm_ScreenQuad$TextureRenderer$render$1__init_() {
    var var_0 = new oktm_ScreenQuad$TextureRenderer$render$1();
    oktm_ScreenQuad$TextureRenderer$render$1__init_0(var_0);
    return var_0;
}
function oktm_ScreenQuad$TextureRenderer$render$1_invoke(var$0, var$1) {
    oktm_ScreenQuad$TextureRenderer$render$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktm_ScreenQuad$TextureRenderer$render$1_invoke0($this, $$receiver) {
    kji_Intrinsics_checkParameterIsNotNull($$receiver, $rt_s(33));
}
function oktm_ScreenQuad$TextureRenderer$render$1__init_0(var$0) {
    oktm_ScreenQuad$TextureRenderer$render$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktm_ScreenQuad$TextureRenderer$render$1__clinit_() {
    oktm_ScreenQuad$TextureRenderer$render$1_INSTANCE = oktm_ScreenQuad$TextureRenderer$render$1__init_();
}
function oktsg_UVNode$Companion() {
    jl_Object.call(this);
}
function oktsg_UVNode$Companion__init_() {
    var var_0 = new oktsg_UVNode$Companion();
    oktsg_UVNode$Companion__init_0(var_0);
    return var_0;
}
function oktsg_UVNode$Companion__init_1(var_0) {
    var var_1 = new oktsg_UVNode$Companion();
    oktsg_UVNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_UVNode$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_UVNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_UVNode$Companion__init_0($this);
}
function jur_AbstractSet() {
    var a = this; jl_Object.call(a);
    a.$next0 = null;
    a.$isSecondPassVisited = 0;
    a.$index = null;
    a.$type = 0;
}
var jur_AbstractSet_counter = 0;
function jur_AbstractSet_$callClinit() {
    jur_AbstractSet_$callClinit = $rt_eraseClinit(jur_AbstractSet);
    jur_AbstractSet__clinit_();
}
function jur_AbstractSet__init_() {
    var var_0 = new jur_AbstractSet();
    jur_AbstractSet__init_0(var_0);
    return var_0;
}
function jur_AbstractSet__init_1(var_0) {
    var var_1 = new jur_AbstractSet();
    jur_AbstractSet__init_2(var_1, var_0);
    return var_1;
}
function jur_AbstractSet__init_0($this) {
    var var$1, var$2;
    jur_AbstractSet_$callClinit();
    jl_Object__init_0($this);
    var$1 = new jl_Integer;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    jl_Integer__init_0(var$1, var$2);
    $this.$index = var$1.$toString();
}
function jur_AbstractSet__init_2($this, $n) {
    var var$2, var$3;
    jur_AbstractSet_$callClinit();
    jl_Object__init_0($this);
    var$2 = new jl_Integer;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    jl_Integer__init_0(var$2, var$3);
    $this.$index = var$2.$toString();
    $this.$next0 = $n;
}
function jur_AbstractSet_find($this, $stringIndex, $testString, $matchResult) {
    var $length;
    $length = $matchResult.$getRightBound();
    while (true) {
        if ($stringIndex > $length)
            return (-1);
        if ($this.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
}
function jur_AbstractSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($this.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
}
function jur_AbstractSet_setType($this, $type) {
    $this.$type = $type;
}
function jur_AbstractSet_getType($this) {
    return $this.$type;
}
function jur_AbstractSet_getNext($this) {
    return $this.$next0;
}
function jur_AbstractSet_setNext($this, $next) {
    $this.$next0 = $next;
}
function jur_AbstractSet_first($this, $set) {
    return 1;
}
function jur_AbstractSet_processBackRefReplacement($this) {
    return null;
}
function jur_AbstractSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next0 !== null) {
        if (!$this.$next0.$isSecondPassVisited) {
            $set = $this.$next0.$processBackRefReplacement();
            if ($set !== null) {
                $this.$next0.$isSecondPassVisited = 1;
                $this.$next0 = $set;
            }
            $this.$next0.$processSecondPass();
        } else if ($this.$next0 instanceof jur_SingleSet && $this.$next0.$fSet.$isBackReferenced)
            $this.$next0 = $this.$next0.$next0;
    }
}
function jur_AbstractSet__clinit_() {
    jur_AbstractSet_counter = 1;
}
function jur_FSet() {
    var a = this; jur_AbstractSet.call(a);
    a.$isBackReferenced = 0;
    a.$groupIndex = 0;
}
var jur_FSet_posFSet = null;
function jur_FSet_$callClinit() {
    jur_FSet_$callClinit = $rt_eraseClinit(jur_FSet);
    jur_FSet__clinit_();
}
function jur_FSet__init_(var_0) {
    var var_1 = new jur_FSet();
    jur_FSet__init_0(var_1, var_0);
    return var_1;
}
function jur_FSet__init_0($this, $groupIndex) {
    jur_FSet_$callClinit();
    jur_AbstractSet__init_0($this);
    $this.$groupIndex = $groupIndex;
}
function jur_FSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $end, $shift;
    $end = $matchResult.$getEnd($this.$groupIndex);
    $matchResult.$setEnd($this.$groupIndex, $stringIndex);
    $shift = $this.$next0.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $matchResult.$setEnd($this.$groupIndex, $end);
    return $shift;
}
function jur_FSet_getGroupIndex($this) {
    return $this.$groupIndex;
}
function jur_FSet_hasConsumed($this, $mr) {
    return 0;
}
function jur_FSet__clinit_() {
    jur_FSet_posFSet = jur_FSet$PossessiveFSet__init_();
}
function jur_BehindFSet() {
    jur_FSet.call(this);
}
function jur_BehindFSet__init_(var_0) {
    var var_1 = new jur_BehindFSet();
    jur_BehindFSet__init_0(var_1, var_0);
    return var_1;
}
function jur_BehindFSet__init_0($this, $groupIndex) {
    jur_FSet__init_0($this, $groupIndex);
}
function jur_BehindFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr, $rightBound;
    $gr = $this.$getGroupIndex();
    $rightBound = $matchResult.$getConsumed($gr);
    if ($rightBound != $stringIndex)
        $stringIndex = (-1);
    return $stringIndex;
}
function kt_SystemProperties() {
    jl_Object.call(this);
}
var kt_SystemProperties_LINE_SEPARATOR = null;
var kt_SystemProperties_INSTANCE = null;
function kt_SystemProperties_$callClinit() {
    kt_SystemProperties_$callClinit = $rt_eraseClinit(kt_SystemProperties);
    kt_SystemProperties__clinit_();
}
function kt_SystemProperties__init_() {
    var var_0 = new kt_SystemProperties();
    kt_SystemProperties__init_0(var_0);
    return var_0;
}
function kt_SystemProperties__init_0($this) {
    kt_SystemProperties_$callClinit();
    jl_Object__init_0($this);
}
function kt_SystemProperties__clinit_() {
    var var$1;
    kt_SystemProperties_INSTANCE = kt_SystemProperties__init_();
    var$1 = jl_System_getProperty($rt_s(34));
    if (var$1 === null)
        kji_Intrinsics_throwNpe();
    kt_SystemProperties_LINE_SEPARATOR = var$1;
}
function okti_IMouseListener() {
}
function oktts_BloomBaseTest$testMain$1() {
    var a = this; jl_Object.call(a);
    a.$$mapIndex = null;
    a.$$debugMaps = null;
}
function oktts_BloomBaseTest$testMain$1__init_(var_0, var_1) {
    var var_2 = new oktts_BloomBaseTest$testMain$1();
    oktts_BloomBaseTest$testMain$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktts_BloomBaseTest$testMain$1_buttonUp($this, $button, $screenX, $screenY, $pointer) {
    if (!$button)
        $this.$$mapIndex.$element = ($this.$$mapIndex.$element + 1 | 0) % $this.$$debugMaps.$size() | 0;
}
function oktts_BloomBaseTest$testMain$1__init_0($this, $$captured_local_variable$0, $$captured_local_variable$1) {
    $this.$$mapIndex = $$captured_local_variable$0;
    $this.$$debugMaps = $$captured_local_variable$1;
    jl_Object__init_0($this);
}
function oktts_BloomBaseTest$testMain$1_buttonDown($this, $button, $screenX, $screenY, $pointer) {
    okti_IMouseListener$DefaultImpls_buttonDown($this, $button, $screenX, $screenY, $pointer);
}
function oktts_BloomBaseTest$testMain$1_dragged($this, $screenX, $screenY, $pointer) {
    okti_IMouseListener$DefaultImpls_dragged($this, $screenX, $screenY, $pointer);
}
function oktts_BloomBaseTest$testMain$1_moved($this, $screenX, $screenY) {
    okti_IMouseListener$DefaultImpls_moved($this, $screenX, $screenY);
}
function oktts_BloomBaseTest$testMain$1_scrolled($this, $amount) {
    okti_IMouseListener$DefaultImpls_scrolled($this, $amount);
}
function oktts_BloomBaseTest$testMain$2() {
    var a = this; kji_Lambda.call(a);
    a.$$control = null;
    a.$$sceneColorBuffer = null;
    a.$$cubeShader = null;
    a.$$box = null;
    a.$$blurDownShader = null;
    a.$$downScaleBuffers = null;
    a.$$screenQuad0 = null;
    a.$$texelSizes = null;
    a.$$blurUpShader = null;
    a.$$iterations = 0;
    a.$$upScaleBuffers = null;
}
function oktts_BloomBaseTest$testMain$2__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) {
    var var_11 = new oktts_BloomBaseTest$testMain$2();
    oktts_BloomBaseTest$testMain$2__init_0(var_11, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10);
    return var_11;
}
function oktts_BloomBaseTest$testMain$2_invoke(var$0) {
    oktts_BloomBaseTest$testMain$2_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktts_BloomBaseTest$testMain$2_invoke0($this) {
    var var$1, $prevMap, $i, var$4, $buffer, $i_0;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$control;
    okt_APP_$callClinit();
    var$1.$update(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    oktt_SimpleFrameBuffer_render($this.$$sceneColorBuffer, oktts_BloomBaseTest$testMain$2$1__init_($this));
    $this.$$blurDownShader.$bind();
    $this.$$blurDownShader.$set1($rt_s(35), 1.0);
    $prevMap = kji_Ref$ObjectRef__init_();
    $prevMap.$element0 = oktt_SimpleFrameBuffer_getTexture($this.$$sceneColorBuffer, 0);
    $i = 0;
    var$4 = $this.$$downScaleBuffers.data.length;
    while ($i < var$4) {
        $buffer = $this.$$downScaleBuffers.data[$i];
        oktm_IScreenQuad$DefaultImpls_render$default($this.$$screenQuad0, $this.$$blurDownShader, $buffer, null, oktts_BloomBaseTest$testMain$2$2__init_($this, $i, $prevMap), 4, null);
        $prevMap.$element0 = oktt_SimpleFrameBuffer_getTexture($buffer, 0);
        $i = $i + 1 | 0;
    }
    $this.$$blurUpShader.$bind();
    $this.$$blurUpShader.$set1($rt_s(35), 0.5);
    $i_0 = kji_Ref$IntRef__init_();
    $i_0.$element = $this.$$iterations - 1 | 0;
    while ($i_0.$element > 0) {
        oktm_IScreenQuad$DefaultImpls_render$default($this.$$screenQuad0, $this.$$blurUpShader, $this.$$upScaleBuffers.data[$i_0.$element - 1 | 0], null, oktts_BloomBaseTest$testMain$2$3__init_($this, $i_0), 4, null);
        $i_0.$element = $i_0.$element + (-1) | 0;
    }
    oktm_IScreenQuad$DefaultImpls_render$default($this.$$screenQuad0, $this.$$blurUpShader, null, null, oktts_BloomBaseTest$testMain$2$4__init_($this), 4, null);
}
function oktts_BloomBaseTest$testMain$2__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11) {
    var$0.$$control = var$1;
    var$0.$$sceneColorBuffer = var$2;
    var$0.$$cubeShader = var$3;
    var$0.$$box = var$4;
    var$0.$$blurDownShader = var$5;
    var$0.$$downScaleBuffers = var$6;
    var$0.$$screenQuad0 = var$7;
    var$0.$$texelSizes = var$8;
    var$0.$$blurUpShader = var$9;
    var$0.$$iterations = var$10;
    var$0.$$upScaleBuffers = var$11;
    kji_Lambda__init_0(var$0, 0);
}
function oktgg_GLTFNode() {
    var a = this; jl_Object.call(a);
    a.$camera = 0;
    a.$children = null;
    a.$skin = 0;
    a.$mesh = 0;
    a.$weights = null;
    a.$name0 = null;
    a.$rotation = null;
    a.$scale = null;
    a.$translation = null;
    a.$gltf0 = null;
    a.$elementIndex0 = 0;
    a.$node = null;
}
function oktgg_GLTFNode__init_(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFNode();
    oktgg_GLTFNode__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTFNode__init_1(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgg_GLTFNode();
    oktgg_GLTFNode__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktgg_GLTFNode_setCamera($this, $_set___) {
    $this.$camera = $_set___;
}
function oktgg_GLTFNode_getChildren($this) {
    return $this.$children;
}
function oktgg_GLTFNode_getSkin($this) {
    return $this.$skin;
}
function oktgg_GLTFNode_setSkin($this, $_set___) {
    $this.$skin = $_set___;
}
function oktgg_GLTFNode_getMesh($this) {
    return $this.$mesh;
}
function oktgg_GLTFNode_setMesh($this, $_set___) {
    $this.$mesh = $_set___;
}
function oktgg_GLTFNode_getWeights($this) {
    return $this.$weights;
}
function oktgg_GLTFNode_getName($this) {
    return $this.$name0;
}
function oktgg_GLTFNode_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name0 = $_set___;
}
function oktgg_GLTFNode_read($this, $json) {
    var $obj;
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $json.$string($rt_s(17), oktgg_GLTFNode$read$1__init_($this));
    $this.$children.$clear();
    $json.$ints($rt_s(36), oktgg_GLTFNode$read$2__init_($this));
    if (!$json.$contains($rt_s(37))) {
        $json.$array($rt_s(38), oktgg_GLTFNode$read$4__init_($this));
        $json.$array($rt_s(39), oktgg_GLTFNode$read$5__init_($this));
        $json.$array($rt_s(40), oktgg_GLTFNode$read$6__init_($this));
    } else {
        $json.$array($rt_s(37), oktgg_GLTFNode$read$3__init_($this));
        $this.$node.$getWorldMatrix().$getTranslation($this.$node.$getPosition0());
        $this.$node.$getWorldMatrix().$getRotation($this.$node.$getRotation0());
        $this.$node.$getWorldMatrix().$getScale($this.$node.$getScale0());
    }
    $this.$weights.$clear();
    $json.$floats($rt_s(41), oktgg_GLTFNode$read$7__init_($this));
    $obj = kji_Ref$ObjectRef__init_();
    $obj.$element0 = null;
    $json.$int($rt_s(42), oktgg_GLTFNode$read$8__init_($this));
    $json.$int($rt_s(43), oktgg_GLTFNode$read$9__init_($this, $obj));
    if (!$json.$contains($rt_s(44)))
        oktgg_GLTFNode_getGltf($this).$getNodes1().$ready(oktgg_GLTFNode_getElementIndex($this));
    else
        $json.$int($rt_s(44), oktgg_GLTFNode$read$10__init_($this, $obj));
}
function oktgg_GLTFNode_getGltf($this) {
    return $this.$gltf0;
}
function oktgg_GLTFNode_getElementIndex($this) {
    return $this.$elementIndex0;
}
function oktgg_GLTFNode_getNode($this) {
    return $this.$node;
}
function oktgg_GLTFNode__init_0($this, $gltf, $elementIndex, $node) {
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($node, $rt_s(45));
    jl_Object__init_0($this);
    $this.$gltf0 = $gltf;
    $this.$elementIndex0 = $elementIndex;
    $this.$node = $node;
    $this.$camera = (-1);
    $this.$children = ju_ArrayList__init_();
    $this.$skin = (-1);
    $this.$mesh = (-1);
    $this.$weights = ju_ArrayList__init_();
    $this.$name0 = $rt_s(6);
    oktm_IVec4_$callClinit();
    $this.$rotation = oktm_IVec4$Companion_getZero3One1(oktm_IVec4_Companion);
    oktm_IVec3_$callClinit();
    $this.$scale = oktm_IVec3$Companion_getOne(oktm_IVec3_Companion);
    $this.$translation = oktm_IVec3$Companion_getZero(oktm_IVec3_Companion);
}
function oktgg_GLTFNode__init_2(var$0, var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 4)
        var$3 = oktgn_Node__init_();
    oktgg_GLTFNode__init_0(var$0, var$1, var$2, var$3);
}
function jur_JointSet() {
    var a = this; jur_AbstractSet.call(a);
    a.$children0 = null;
    a.$fSet = null;
    a.$groupIndex0 = 0;
}
function jur_JointSet__init_() {
    var var_0 = new jur_JointSet();
    jur_JointSet__init_0(var_0);
    return var_0;
}
function jur_JointSet__init_1(var_0, var_1) {
    var var_2 = new jur_JointSet();
    jur_JointSet__init_2(var_2, var_0, var_1);
    return var_2;
}
function jur_JointSet__init_0($this) {
    jur_AbstractSet__init_0($this);
}
function jur_JointSet__init_2($this, $children, $fSet) {
    jur_AbstractSet__init_0($this);
    $this.$children0 = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$getGroupIndex();
}
function jur_JointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $e, $shift;
    if ($this.$children0 === null)
        return (-1);
    $start = $matchResult.$getStart($this.$groupIndex0);
    $matchResult.$setStart($this.$groupIndex0, $stringIndex);
    $size = $this.$children0.$size();
    $i = 0;
    while (true) {
        if ($i >= $size) {
            $matchResult.$setStart($this.$groupIndex0, $start);
            return (-1);
        }
        $e = $this.$children0.$get1($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
}
function jur_JointSet_setNext($this, $next) {
    $this.$fSet.$setNext($next);
}
function jur_JointSet_first($this, $set) {
    var $i;
    a: {
        if ($this.$children0 !== null) {
            $i = $this.$children0.$iterator();
            while (true) {
                if (!$i.$hasNext())
                    break a;
                if (!$i.$next().$first($set))
                    continue;
                else
                    return 1;
            }
        }
    }
    return 0;
}
function jur_JointSet_hasConsumed($this, $matchResult) {
    var var$2, var$3;
    a: {
        if ($matchResult.$getEnd($this.$groupIndex0) >= 0) {
            var$2 = $matchResult.$getStart($this.$groupIndex0);
            var$3 = $this.$groupIndex0;
            if (var$2 == $matchResult.$getEnd(var$3)) {
                var$2 = 0;
                break a;
            }
        }
        var$2 = 1;
    }
    return var$2;
}
function jur_JointSet_processSecondPass($this) {
    var $childrenSize, $i, $child, $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        $this.$fSet.$processSecondPass();
    a: {
        if ($this.$children0 !== null) {
            $childrenSize = $this.$children0.$size();
            $i = 0;
            while (true) {
                if ($i >= $childrenSize)
                    break a;
                $child = $this.$children0.$get1($i);
                $set = $child.$processBackRefReplacement();
                if ($set === null)
                    $set = $child;
                else {
                    $child.$isSecondPassVisited = 1;
                    $this.$children0.$remove($i);
                    $this.$children0.$add2($i, $set);
                }
                if (!$set.$isSecondPassVisited)
                    $set.$processSecondPass();
                $i = $i + 1 | 0;
            }
        }
    }
    if ($this.$next0 !== null)
        jur_AbstractSet_processSecondPass($this);
}
function jur_LowHighSurrogateRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$surrChars = null;
    a.$alt = 0;
}
function jur_LowHighSurrogateRangeSet__init_(var_0) {
    var var_1 = new jur_LowHighSurrogateRangeSet();
    jur_LowHighSurrogateRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_LowHighSurrogateRangeSet__init_0($this, $surrChars) {
    jur_JointSet__init_0($this);
    $this.$surrChars = $surrChars.$getInstance();
    $this.$alt = $surrChars.$alt0;
}
function jur_LowHighSurrogateRangeSet_setNext($this, $next) {
    $this.$next0 = $next;
}
function jur_LowHighSurrogateRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $startStr, $strLength, var$6, var$7, $ch, $low, $high;
    $startStr = $matchResult.$getLeftBound();
    $strLength = $matchResult.$getRightBound();
    var$6 = $stringIndex + 1 | 0;
    var$7 = $rt_compare(var$6, $strLength);
    if (var$7 > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $ch = $testString.$charAt($stringIndex);
    if (!$this.$surrChars.$contains0($ch))
        return (-1);
    if (jl_Character_isHighSurrogate($ch)) {
        if (var$7 < 0) {
            $low = $testString.$charAt(var$6);
            if (jl_Character_isLowSurrogate($low))
                return (-1);
        }
    } else if (jl_Character_isLowSurrogate($ch) && $stringIndex > $startStr) {
        $high = $testString.$charAt($stringIndex - 1 | 0);
        if (jl_Character_isHighSurrogate($high))
            return (-1);
    }
    return $this.$next0.$matches(var$6, $testString, $matchResult);
}
function oktg_ShaderChannel() {
    jl_Object.call(this);
}
var oktg_ShaderChannel_idCounter = 0;
var oktg_ShaderChannel_Default = 0;
var oktg_ShaderChannel_Velocity = 0;
var oktg_ShaderChannel_Depth = 0;
var oktg_ShaderChannel_INSTANCE = null;
function oktg_ShaderChannel_$callClinit() {
    oktg_ShaderChannel_$callClinit = $rt_eraseClinit(oktg_ShaderChannel);
    oktg_ShaderChannel__clinit_();
}
function oktg_ShaderChannel__init_() {
    var var_0 = new oktg_ShaderChannel();
    oktg_ShaderChannel__init_0(var_0);
    return var_0;
}
function oktg_ShaderChannel_newId($this) {
    var $id;
    $id = oktg_ShaderChannel_idCounter;
    oktg_ShaderChannel_idCounter = oktg_ShaderChannel_idCounter + 1 | 0;
    return $id;
}
function oktg_ShaderChannel_getDefault($this) {
    return oktg_ShaderChannel_Default;
}
function oktg_ShaderChannel_getVelocity($this) {
    return oktg_ShaderChannel_Velocity;
}
function oktg_ShaderChannel_getDepth($this) {
    return oktg_ShaderChannel_Depth;
}
function oktg_ShaderChannel__init_0($this) {
    oktg_ShaderChannel_$callClinit();
    jl_Object__init_0($this);
}
function oktg_ShaderChannel__clinit_() {
    var var$1;
    var$1 = oktg_ShaderChannel__init_();
    oktg_ShaderChannel_INSTANCE = var$1;
    oktg_ShaderChannel_Default = oktg_ShaderChannel_newId(var$1);
    oktg_ShaderChannel_Velocity = oktg_ShaderChannel_newId(var$1);
    oktg_ShaderChannel_Depth = oktg_ShaderChannel_newId(var$1);
}
function oktt_Texture2DTest() {
    jl_Object.call(this);
}
function oktt_Texture2DTest__init_() {
    var var_0 = new oktt_Texture2DTest();
    oktt_Texture2DTest__init_0(var_0);
    return var_0;
}
function oktt_Texture2DTest_getName($this) {
    return $rt_s(46);
}
function oktt_Texture2DTest_testMain($this) {
    var $screenQuad, var$2, var$3, $texture;
    $screenQuad = oktm_ScreenQuad$TextureRenderer__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    var$2 = oktt_Texture2D__init_(0, 1, null);
    var$3 = null;
    $texture = oktt_ITexture2D$DefaultImpls_load$default(var$2, $rt_s(47), 9729, 9729, 0, 0, 0.0, 0, 120, var$3);
    oktg_GL_$callClinit();
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktt_Texture2DTest$testMain$1__init_($screenQuad, $texture), 1, null);
}
function oktt_Texture2DTest__init_0($this) {
    jl_Object__init_0($this);
}
function jl_Throwable() {
    var a = this; jl_Object.call(a);
    a.$message = null;
    a.$cause = null;
    a.$suppressionEnabled = 0;
    a.$writableStackTrace = 0;
    a.$stackTrace = null;
}
function jl_Throwable__init_() {
    var var_0 = new jl_Throwable();
    jl_Throwable__init_0(var_0);
    return var_0;
}
function jl_Throwable__init_1(var_0) {
    var var_1 = new jl_Throwable();
    jl_Throwable__init_2(var_1, var_0);
    return var_1;
}
function jl_Throwable__init_3(var_0, var_1) {
    var var_2 = new jl_Throwable();
    jl_Throwable__init_4(var_2, var_0, var_1);
    return var_2;
}
function jl_Throwable__init_5(var_0) {
    var var_1 = new jl_Throwable();
    jl_Throwable__init_6(var_1, var_0);
    return var_1;
}
function jl_Throwable__init_0($this) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
}
function jl_Throwable__init_2($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$message = $message;
}
function jl_Throwable__init_4($this, $message, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$message = $message;
    $this.$cause = $cause;
}
function jl_Throwable__init_6($this, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$cause = $cause;
}
function jl_Throwable_fillInStackTrace($this) {
    return $this;
}
function jl_Throwable_getMessage($this) {
    return $this.$message;
}
function jl_Throwable_getLocalizedMessage($this) {
    return $this.$getMessage();
}
function jl_Throwable_initCause($this, $cause) {
    if ($this.$cause !== $this && $this.$cause !== null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(48)));
    if ($cause !== $this) {
        $this.$cause = $cause;
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(49)));
}
function jl_Throwable_printStackTrace($this) {
    $this.$printStackTrace(jl_System_err());
}
function jl_Throwable_printStackTrace0($this, $stream) {
    var $message, var$3, var$4, var$5, $element;
    $stream.$print(jl_Object_getClass($this).$getName());
    $message = $this.$getLocalizedMessage();
    if ($message !== null)
        $stream.$print(jl_StringBuilder__init_().$append($rt_s(11)).$append($message).$toString());
    a: {
        $stream.$println();
        if ($this.$stackTrace !== null) {
            var$3 = $this.$stackTrace.data;
            var$4 = var$3.length;
            var$5 = 0;
            while (true) {
                if (var$5 >= var$4)
                    break a;
                $element = var$3[var$5];
                $stream.$print($rt_s(50));
                $stream.$println0($element);
                var$5 = var$5 + 1 | 0;
            }
        }
    }
    if ($this.$cause !== null && $this.$cause !== $this) {
        $stream.$print($rt_s(51));
        $this.$cause.$printStackTrace($stream);
    }
}
function jl_Throwable_printStackTrace1($this, $stream) {
    var $message, var$3, var$4, var$5, $element;
    $stream.$print(jl_Object_getClass($this).$getName());
    $message = $this.$getLocalizedMessage();
    if ($message !== null)
        $stream.$print(jl_StringBuilder__init_().$append($rt_s(11)).$append($message).$toString());
    a: {
        $stream.$println();
        if ($this.$stackTrace !== null) {
            var$3 = $this.$stackTrace.data;
            var$4 = var$3.length;
            var$5 = 0;
            while (true) {
                if (var$5 >= var$4)
                    break a;
                $element = var$3[var$5];
                $stream.$print($rt_s(52));
                $stream.$println0($element);
                var$5 = var$5 + 1 | 0;
            }
        }
    }
    if ($this.$cause !== null && $this.$cause !== $this) {
        $stream.$print($rt_s(51));
        $this.$cause.$printStackTrace0($stream);
    }
}
function jl_Throwable_getStackTrace($this) {
    return $this.$stackTrace === null ? $rt_createArray(jl_StackTraceElement, 0) : $this.$stackTrace.$clone();
}
function jl_Throwable_setStackTrace($this, $stackTrace) {
    $this.$stackTrace = $stackTrace.$clone();
}
function jl_Exception() {
    jl_Throwable.call(this);
}
function jl_Exception__init_() {
    var var_0 = new jl_Exception();
    jl_Exception__init_0(var_0);
    return var_0;
}
function jl_Exception__init_1(var_0) {
    var var_1 = new jl_Exception();
    jl_Exception__init_2(var_1, var_0);
    return var_1;
}
function jl_Exception__init_3(var_0) {
    var var_1 = new jl_Exception();
    jl_Exception__init_4(var_1, var_0);
    return var_1;
}
function jl_Exception__init_0($this) {
    jl_Throwable__init_0($this);
}
function jl_Exception__init_2($this, $message) {
    jl_Throwable__init_2($this, $message);
}
function jl_Exception__init_4($this, $cause) {
    jl_Throwable__init_6($this, $cause);
}
function jl_RuntimeException() {
    jl_Exception.call(this);
}
function jl_RuntimeException__init_0() {
    var var_0 = new jl_RuntimeException();
    jl_RuntimeException__init_1(var_0);
    return var_0;
}
function jl_RuntimeException__init_(var_0) {
    var var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_2(var_1, var_0);
    return var_1;
}
function jl_RuntimeException__init_3(var_0) {
    var var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_4(var_1, var_0);
    return var_1;
}
function jl_RuntimeException__init_1($this) {
    jl_Exception__init_0($this);
}
function jl_RuntimeException__init_2($this, $message) {
    jl_Exception__init_2($this, $message);
}
function jl_RuntimeException__init_4($this, $cause) {
    jl_Exception__init_4($this, $cause);
}
function jl_ClassCastException() {
    jl_RuntimeException.call(this);
}
function jl_ClassCastException__init_() {
    var var_0 = new jl_ClassCastException();
    jl_ClassCastException__init_0(var_0);
    return var_0;
}
function jl_ClassCastException__init_1(var_0) {
    var var_1 = new jl_ClassCastException();
    jl_ClassCastException__init_2(var_1, var_0);
    return var_1;
}
function jl_ClassCastException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function jl_ClassCastException__init_2($this, $message) {
    jl_RuntimeException__init_2($this, $message);
}
function ooo_DColliderFn() {
}
function oooi_DxConvex$CollideRayConvex() {
    jl_Object.call(this);
}
function oooi_DxConvex$CollideRayConvex__init_() {
    var var_0 = new oooi_DxConvex$CollideRayConvex();
    oooi_DxConvex$CollideRayConvex__init_0(var_0);
    return var_0;
}
function oooi_DxConvex$CollideRayConvex__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxConvex$CollideRayConvex_dCollideRayConvex($this, $ray, $convex, $flags, $contacts, $skip) {
    var $contact, $ray_pos, $ray_dir, $flag, $i, $alpha, $nsign, $beta, var$14, $j, var$16;
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $contact = ooo_DContactGeomBuffer_get($contacts, 0);
    $contact.$g1 = $ray;
    $contact.$g2 = $convex;
    $contact.$side1 = (-1);
    $contact.$side2 = (-1);
    $ray_pos = oom_DVector3__init_();
    $ray_dir = oom_DVector3__init_();
    ooo_OdeMath_dMultiply1_331($ray_pos, $convex.$final_posr().$R(), oom_DVector3_sub(oom_DVector3__init_0($ray.$final_posr().$pos()), $convex.$final_posr().$pos()));
    ooo_OdeMath_dMultiply1_331($ray_dir, $convex.$final_posr().$R(), $ray.$final_posr().$R().$columnAsNewVector(2));
    $flag = 0;
    $i = 0;
    a: {
        while ($i < oooi_DxConvex_access$400($convex)) {
            $alpha = ooo_OdeMath_dCalcVectorDot3(oooi_DxConvex_access$500($convex).data[$i], $ray_pos) - oooi_DxConvex_access$600($convex).data[$i];
            if ($alpha >= 0.0) {
                $flag = 1;
                break a;
            }
            $i = $i + 1 | 0;
        }
    }
    $nsign = !$flag ? (-1.0) : 1.0;
    $contact.$depth = Infinity;
    $i = 0;
    b: {
        while (true) {
            if ($i >= oooi_DxConvex_access$400($convex))
                break b;
            $alpha = $nsign * (ooo_OdeMath_dCalcVectorDot3(oooi_DxConvex_access$500($convex).data[$i], $ray_pos) - oooi_DxConvex_access$600($convex).data[$i]);
            $beta = oom_DVector3_dot(oooi_DxConvex_access$500($convex).data[$i], $ray_dir) * $nsign;
            if ($beta <  -oooi_Common_dEpsilon && $alpha >= 0.0 && $alpha <= $ray.$getLength() && $alpha < $contact.$depth) {
                oom_DVector3_eqSum($contact.$pos0, $ray_pos, 1.0, $ray_dir, $alpha);
                var$14 = 0;
                $j = 0;
                c: {
                    while ($j < oooi_DxConvex_access$400($convex)) {
                        if ($i != $j) {
                            var$16 = ooo_OdeMath_dCalcVectorDot3(oooi_DxConvex_access$500($convex).data[$j], $contact.$pos0) - oooi_DxConvex_access$600($convex).data[$j];
                            if (var$16 > oooi_Common_dEpsilon) {
                                var$14 = 1;
                                break c;
                            }
                        }
                        $j = $j + 1 | 0;
                    }
                }
                if (!var$14) {
                    oom_DVector3_scale(oom_DVector3_set($contact.$normal, oooi_DxConvex_access$500($convex).data[$i]), $nsign);
                    $contact.$depth = $alpha;
                    if ($flags & (-2147483648) && $contact.$depth <= $ray.$getLength())
                        break;
                }
            }
            $i = $i + 1 | 0;
        }
    }
    if ($contact.$depth > $ray.$getLength())
        return 0;
    ooo_OdeMath_dMultiply0_331($contact.$pos0, $convex.$final_posr().$R(), $contact.$pos0);
    ooo_OdeMath_dMultiply0_331($contact.$normal, $convex.$final_posr().$R(), $contact.$normal);
    oom_DVector3_add($contact.$pos0, $convex.$final_posr().$pos());
    return 1;
}
function oooi_DxConvex$CollideRayConvex_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideRayConvex($o1, $o2, $flags, $contacts, 1);
}
function oktu_IPath() {
}
var oktu_IPath_Companion = null;
function oktu_IPath_$callClinit() {
    oktu_IPath_$callClinit = $rt_eraseClinit(oktu_IPath);
    oktu_IPath__clinit_();
}
function oktu_IPath__clinit_() {
    oktu_IPath$Companion_$callClinit();
    oktu_IPath_Companion = oktu_IPath$Companion_$$INSTANCE;
}
function oktgn_ITransformNode() {
}
var oktgn_ITransformNode_Companion = null;
function oktgn_ITransformNode_$callClinit() {
    oktgn_ITransformNode_$callClinit = $rt_eraseClinit(oktgn_ITransformNode);
    oktgn_ITransformNode__clinit_();
}
function oktgn_ITransformNode__clinit_() {
    oktgn_ITransformNode$Companion_$callClinit();
    oktgn_ITransformNode_Companion = oktgn_ITransformNode$Companion_$$INSTANCE;
}
function oktgc_ICamera() {
}
var oktgc_ICamera_Companion = null;
function oktgc_ICamera_$callClinit() {
    oktgc_ICamera_$callClinit = $rt_eraseClinit(oktgc_ICamera);
    oktgc_ICamera__clinit_();
}
function oktgc_ICamera__clinit_() {
    oktgc_ICamera$Companion_$callClinit();
    oktgc_ICamera_Companion = oktgc_ICamera$Companion_$$INSTANCE;
}
function oktgc_CameraAdapter() {
    var a = this; jl_Object.call(a);
    a.$position0 = null;
    a.$direction = null;
    a.$up = null;
    a.$near = 0.0;
    a.$far = 0.0;
    a.$fov = 0.0;
    a.$viewportWidth = 0.0;
    a.$viewportHeight = 0.0;
    a.$zoom = 0.0;
    a.$name1 = null;
    a.$viewMatrix = null;
    a.$isCentered = 0;
    a.$projectionMatrix = null;
    a.$viewProjectionMatrix = null;
    a.$previousViewProjectionMatrix = null;
    a.$inverseViewProjectionInternal = null;
    a.$inverseViewProjectionNeedUpdate = 0;
    a.$frustumInternal = null;
    a.$frustumNeedUpdate = 0;
    a.$childNodes = null;
}
var oktgc_CameraAdapter_tmpM = null;
var oktgc_CameraAdapter_Companion = null;
function oktgc_CameraAdapter_$callClinit() {
    oktgc_CameraAdapter_$callClinit = $rt_eraseClinit(oktgc_CameraAdapter);
    oktgc_CameraAdapter__clinit_();
}
function oktgc_CameraAdapter__init_() {
    var var_0 = new oktgc_CameraAdapter();
    oktgc_CameraAdapter__init_0(var_0);
    return var_0;
}
function oktgc_CameraAdapter_getPreviousViewProjectionMatrix($this) {
    return $this.$previousViewProjectionMatrix;
}
function oktgc_CameraAdapter_getInverseViewProjectionMatrix($this) {
    var var$1;
    if ($this.$inverseViewProjectionInternal === null) {
        $this.$inverseViewProjectionInternal = oktm_Mat4__init_();
        $this.$inverseViewProjectionNeedUpdate = 1;
    }
    if ($this.$inverseViewProjectionNeedUpdate) {
        var$1 = $this.$inverseViewProjectionInternal;
        if (var$1 === null)
            kji_Intrinsics_throwNpe();
        var$1.$set3($this.$getViewProjectionMatrix()).$inv();
        $this.$inverseViewProjectionNeedUpdate = 0;
    }
    var$1 = $this.$inverseViewProjectionInternal;
    if (var$1 === null)
        kji_Intrinsics_throwNpe();
    return var$1;
}
function oktgc_CameraAdapter_getFrustum($this) {
    var var$1;
    if ($this.$frustumInternal === null) {
        $this.$frustumInternal = oktm_Frustum__init_($this.$getInverseViewProjectionMatrix());
        $this.$frustumNeedUpdate = 1;
    }
    if ($this.$frustumNeedUpdate) {
        var$1 = $this.$frustumInternal;
        if (var$1 === null)
            kji_Intrinsics_throwNpe();
        oktm_Frustum_update(var$1, $this.$getInverseViewProjectionMatrix());
        $this.$frustumNeedUpdate = 0;
    }
    var$1 = $this.$frustumInternal;
    if (var$1 === null)
        kji_Intrinsics_throwNpe();
    return var$1;
}
function oktgc_CameraAdapter_update($this) {
    oktgc_CameraAdapter_tmpM.$set3($this.$getViewProjectionMatrix());
    oktgc_ICamera$DefaultImpls_update($this);
    if (oktgc_CameraAdapter_tmpM.$isNotEqualTo($this.$getViewProjectionMatrix())) {
        $this.$inverseViewProjectionNeedUpdate = 1;
        $this.$frustumNeedUpdate = 1;
    }
}
function oktgc_CameraAdapter__init_0($this) {
    oktgc_CameraAdapter_$callClinit();
    jl_Object__init_0($this);
    $this.$position0 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    $this.$direction = oktm_Vec3__init_0(1.0, 0.0, 0.0);
    $this.$up = oktm_Vec3__init_0(0.0, 1.0, 0.0);
    $this.$near = 0.10000000149011612;
    $this.$far = 100.0;
    $this.$fov = 60.0;
    okt_APP_$callClinit();
    $this.$viewportWidth = okt_APP_getWidth(okt_APP_INSTANCE);
    $this.$viewportHeight = okt_APP_getHeight(okt_APP_INSTANCE);
    $this.$zoom = 1.0;
    $this.$name1 = $rt_s(6);
    $this.$viewMatrix = oktm_Mat4__init_();
    $this.$isCentered = 1;
    $this.$projectionMatrix = oktm_Mat4__init_();
    $this.$viewProjectionMatrix = oktm_Mat4__init_();
    $this.$previousViewProjectionMatrix = oktm_Mat4__init_();
    $this.$childNodes = ju_ArrayList__init_();
}
function oktgc_CameraAdapter__clinit_() {
    oktgc_CameraAdapter_Companion = oktgc_CameraAdapter$Companion__init_(null);
    oktgc_CameraAdapter_tmpM = oktm_Mat4__init_();
}
function oktgc_CameraAdapter_getAspectRatio($this) {
    return oktgc_ICamera$DefaultImpls_getAspectRatio($this);
}
function oktgc_CameraAdapter_dst2($this, $position, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($position, $rt_s(53));
    return oktgc_ICamera$DefaultImpls_dst2($this, $position, $isLocal);
}
function oktgc_CameraAdapter_getPosition($this, $out, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return oktgc_ICamera$DefaultImpls_getPosition($this, $out, $isLocal);
}
function oktgc_CameraAdapter_lookAt($this, $from, $to, $up) {
    kji_Intrinsics_checkParameterIsNotNull($from, $rt_s(55));
    kji_Intrinsics_checkParameterIsNotNull($to, $rt_s(56));
    kji_Intrinsics_checkParameterIsNotNull($up, $rt_s(57));
    oktgc_ICamera$DefaultImpls_lookAt($this, $from, $to, $up);
}
function oktgc_CameraAdapter_updatePreviousTransform($this) {
    oktgc_ICamera$DefaultImpls_updatePreviousTransform($this);
}
function oktgc_CameraAdapter_updateTransform($this, $recursive) {
    oktgc_ICamera$DefaultImpls_updateTransform($this, $recursive);
}
function oktgc_Camera() {
    var a = this; oktgc_CameraAdapter.call(a);
    a.$viewMatrix0 = null;
    a.$projectionMatrix0 = null;
    a.$viewProjectionMatrix0 = null;
    a.$position1 = null;
    a.$direction0 = null;
    a.$up0 = null;
    a.$near0 = 0.0;
    a.$far0 = 0.0;
    a.$fov0 = 0.0;
    a.$viewportWidth0 = 0.0;
    a.$viewportHeight0 = 0.0;
    a.$isOrthographic = 0;
    a.$zoom0 = 0.0;
    a.$name2 = null;
    a.$isCentered0 = 0;
}
function oktgc_Camera__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11) {
    var var_12 = new oktgc_Camera();
    oktgc_Camera__init_2(var_12, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11);
    return var_12;
}
function oktgc_Camera__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13) {
    var var_14 = new oktgc_Camera();
    oktgc_Camera__init_0(var_14, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13);
    return var_14;
}
function oktgc_Camera__init_3() {
    var var_0 = new oktgc_Camera();
    oktgc_Camera__init_4(var_0);
    return var_0;
}
function oktgc_Camera__init_5(var_0, var_1, var_2, var_3) {
    var var_4 = new oktgc_Camera();
    oktgc_Camera__init_6(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktgc_Camera_getViewMatrix($this) {
    return $this.$viewMatrix0;
}
function oktgc_Camera_getProjectionMatrix($this) {
    return $this.$projectionMatrix0;
}
function oktgc_Camera_getViewProjectionMatrix($this) {
    return $this.$viewProjectionMatrix0;
}
function oktgc_Camera_getPosition($this) {
    return $this.$position1;
}
function oktgc_Camera_getDirection($this) {
    return $this.$direction0;
}
function oktgc_Camera_getUp($this) {
    return $this.$up0;
}
function oktgc_Camera_getNear($this) {
    return $this.$near0;
}
function oktgc_Camera_setNear($this, $_set___) {
    $this.$near0 = $_set___;
}
function oktgc_Camera_getFar($this) {
    return $this.$far0;
}
function oktgc_Camera_setFar($this, $_set___) {
    $this.$far0 = $_set___;
}
function oktgc_Camera_getFov($this) {
    return $this.$fov0;
}
function oktgc_Camera_getViewportWidth($this) {
    return $this.$viewportWidth0;
}
function oktgc_Camera_getViewportHeight($this) {
    return $this.$viewportHeight0;
}
function oktgc_Camera_isOrthographic($this) {
    return $this.$isOrthographic;
}
function oktgc_Camera_setOrthographic($this, $_set___) {
    $this.$isOrthographic = $_set___;
}
function oktgc_Camera_getZoom($this) {
    return $this.$zoom0;
}
function oktgc_Camera_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name2 = $_set___;
}
function oktgc_Camera_isCentered($this) {
    return $this.$isCentered0;
}
function oktgc_Camera__init_2($this, $position, $direction, $up, $near, $far, $fov, $viewportWidth, $viewportHeight, $isOrthographic, $zoom, $name, $isCentered) {
    kji_Intrinsics_checkParameterIsNotNull($position, $rt_s(53));
    kji_Intrinsics_checkParameterIsNotNull($direction, $rt_s(58));
    kji_Intrinsics_checkParameterIsNotNull($up, $rt_s(57));
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktgc_CameraAdapter__init_0($this);
    $this.$position1 = $position;
    $this.$direction0 = $direction;
    $this.$up0 = $up;
    $this.$near0 = $near;
    $this.$far0 = $far;
    $this.$fov0 = $fov;
    $this.$viewportWidth0 = $viewportWidth;
    $this.$viewportHeight0 = $viewportHeight;
    $this.$isOrthographic = $isOrthographic;
    $this.$zoom0 = $zoom;
    $this.$name2 = $name;
    $this.$isCentered0 = $isCentered;
    $this.$viewMatrix0 = oktm_Mat4__init_().$setToLookAt(oktgc_Camera_getPosition($this), oktgc_Camera_getDirection($this), oktgc_Camera_getUp($this));
    $this.$projectionMatrix0 = oktm_Mat4__init_().$setToProjection(oktgc_Camera_getNear($this), oktgc_Camera_getFar($this), oktgc_Camera_getFov($this), $this.$getAspectRatio0());
    $this.$viewProjectionMatrix0 = oktm_Mat4__init_().$set3(oktgc_Camera_getProjectionMatrix($this)).$mul(oktgc_Camera_getProjectionMatrix($this));
}
function oktgc_Camera__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14) {
    if (var$13 & 1)
        var$1 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    if (var$13 & 2)
        var$2 = oktm_Vec3__init_0(1.0, 0.0, 0.0);
    if (var$13 & 4)
        var$3 = oktm_Vec3__init_0(0.0, 1.0, 0.0);
    if (var$13 & 8)
        var$4 = 0.10000000149011612;
    if (var$13 & 16)
        var$5 = 100.0;
    if (var$13 & 32)
        var$6 = 60.0;
    if (var$13 & 64) {
        okt_APP_$callClinit();
        var$7 = okt_APP_getWidth(okt_APP_INSTANCE);
    }
    if (var$13 & 128) {
        okt_APP_$callClinit();
        var$8 = okt_APP_getHeight(okt_APP_INSTANCE);
    }
    if (var$13 & 256)
        var$9 = 0;
    if (var$13 & 512)
        var$10 = 1.0;
    if (var$13 & 1024)
        var$11 = $rt_s(6);
    if (var$13 & 2048)
        var$12 = 1;
    oktgc_Camera__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12);
}
function oktgc_Camera__init_4(var$0) {
    oktgc_Camera__init_0(var$0, null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null);
}
function oktgc_Camera__init_6($this, $from, $to, $near, $far) {
    kji_Intrinsics_checkParameterIsNotNull($from, $rt_s(55));
    kji_Intrinsics_checkParameterIsNotNull($to, $rt_s(56));
    oktgc_Camera__init_0($this, null, null, null, $near, $far, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4071, null);
    oktgc_ICamera$DefaultImpls_lookAt$default($this, $from, $to, null, 4, null);
    $this.$update0();
}
function ju_Map() {
}
function ju_AbstractMap() {
    var a = this; jl_Object.call(a);
    a.$cachedKeySet = null;
    a.$cachedValues = null;
}
function ju_AbstractMap__init_() {
    var var_0 = new ju_AbstractMap();
    ju_AbstractMap__init_0(var_0);
    return var_0;
}
function ju_AbstractMap__init_0($this) {
    jl_Object__init_0($this);
}
function ju_AbstractMap_equals($this, $obj) {
    var $other, $iter, $entry;
    if ($this === $obj)
        return 1;
    if (!$rt_isInstance($obj, ju_Map))
        return 0;
    $other = $obj;
    if ($this.$size() != $other.$size())
        return 0;
    $iter = $this.$entrySet().$iterator();
    while ($iter.$hasNext()) {
        $entry = $iter.$next();
        if (!$other.$containsKey($entry.$getKey()))
            return 0;
        if (!ju_Objects_equals($entry.$getValue(), $other.$get0($entry.$getKey())))
            return 0;
    }
    return 1;
}
function ju_AbstractMap_hashCode($this) {
    var $result, $iter, $entry;
    $result = 0;
    $iter = $this.$entrySet().$iterator();
    while ($iter.$hasNext()) {
        $entry = $iter.$next();
        $result = $result ^ $entry.$hashCode();
    }
    return $result;
}
function jl_Cloneable() {
}
function ju_HashMap() {
    var a = this; ju_AbstractMap.call(a);
    a.$elementCount = 0;
    a.$elementData = null;
    a.$modCount = 0;
    a.$loadFactor = 0.0;
    a.$threshold = 0;
}
function ju_HashMap__init_() {
    var var_0 = new ju_HashMap();
    ju_HashMap__init_0(var_0);
    return var_0;
}
function ju_HashMap__init_1(var_0) {
    var var_1 = new ju_HashMap();
    ju_HashMap__init_2(var_1, var_0);
    return var_1;
}
function ju_HashMap__init_3(var_0, var_1) {
    var var_2 = new ju_HashMap();
    ju_HashMap__init_4(var_2, var_0, var_1);
    return var_2;
}
function ju_HashMap_newElementArray($this, $s) {
    return $rt_createArray(ju_HashMap$HashEntry, $s);
}
function ju_HashMap__init_0($this) {
    ju_HashMap__init_2($this, 16);
}
function ju_HashMap__init_2($this, $capacity) {
    ju_HashMap__init_4($this, $capacity, 0.75);
}
function ju_HashMap_calculateCapacity($x) {
    var var$2, var$3;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    var$3 = var$2 | var$2 >> 1;
    var$3 = var$3 | var$3 >> 2;
    var$3 = var$3 | var$3 >> 4;
    var$3 = var$3 | var$3 >> 8;
    var$3 = var$3 | var$3 >> 16;
    return var$3 + 1 | 0;
}
function ju_HashMap__init_4($this, $capacity, $loadFactor) {
    var var$3;
    ju_AbstractMap__init_0($this);
    if ($capacity >= 0 && $loadFactor > 0.0) {
        var$3 = ju_HashMap_calculateCapacity($capacity);
        $this.$elementCount = 0;
        $this.$elementData = $this.$newElementArray(var$3);
        $this.$loadFactor = $loadFactor;
        ju_HashMap_computeThreshold($this);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
}
function ju_HashMap_clear($this) {
    if ($this.$elementCount > 0) {
        $this.$elementCount = 0;
        ju_Arrays_fill($this.$elementData, null);
        $this.$modCount = $this.$modCount + 1 | 0;
    }
}
function ju_HashMap_computeThreshold($this) {
    $this.$threshold = $this.$elementData.data.length * $this.$loadFactor | 0;
}
function ju_HashMap_containsKey($this, $key) {
    var $m;
    $m = ju_HashMap_getEntry($this, $key);
    return $m === null ? 0 : 1;
}
function ju_HashMap_containsValue($this, $value) {
    var $i, $entry;
    a: {
        if ($value === null) {
            $i = 0;
            b: while (true) {
                if ($i >= $this.$elementData.data.length)
                    break a;
                $entry = $this.$elementData.data[$i];
                while ($entry !== null) {
                    if ($entry.$value0 === null)
                        break b;
                    $entry = $entry.$next1;
                }
                $i = $i + 1 | 0;
            }
            return 1;
        }
        $i = 0;
        c: while (true) {
            if ($i >= $this.$elementData.data.length)
                break a;
            $entry = $this.$elementData.data[$i];
            while ($entry !== null) {
                if (ju_HashMap_areEqualValues($value, $entry.$value0))
                    break c;
                $entry = $entry.$next1;
            }
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
}
function ju_HashMap_entrySet($this) {
    return ju_HashMap$HashMapEntrySet__init_($this);
}
function ju_HashMap_get($this, $key) {
    var $m;
    $m = ju_HashMap_getEntry($this, $key);
    if ($m === null)
        return null;
    return $m.$value0;
}
function ju_HashMap_getEntry($this, $key) {
    var $m, $hash, $index;
    if ($key === null)
        $m = ju_HashMap_findNullKeyEntry($this);
    else {
        $hash = ju_HashMap_computeHashCode($key);
        $index = $hash & ($this.$elementData.data.length - 1 | 0);
        $m = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
    }
    return $m;
}
function ju_HashMap_findNonNullKeyEntry($this, $key, $index, $keyHash) {
    var $m, var$5;
    $m = $this.$elementData.data[$index];
    while ($m !== null) {
        if ($m.$origKeyHash == $keyHash) {
            var$5 = $m.$key;
            if (ju_HashMap_areEqualKeys($key, var$5))
                break;
        }
        $m = $m.$next1;
    }
    return $m;
}
function ju_HashMap_findNullKeyEntry($this) {
    var $m;
    $m = $this.$elementData.data[0];
    while ($m !== null && $m.$key !== null) {
        $m = $m.$next1;
    }
    return $m;
}
function ju_HashMap_isEmpty($this) {
    return $this.$elementCount ? 0 : 1;
}
function ju_HashMap_keySet($this) {
    if ($this.$cachedKeySet === null)
        $this.$cachedKeySet = ju_HashMap$1__init_($this);
    return $this.$cachedKeySet;
}
function ju_HashMap_put($this, $key, $value) {
    return $this.$putImpl($key, $value);
}
function ju_HashMap_putImpl($this, $key, $value) {
    var $entry, var$4, $hash, $index, $result;
    if ($key === null) {
        $entry = ju_HashMap_findNullKeyEntry($this);
        if ($entry === null) {
            $this.$modCount = $this.$modCount + 1 | 0;
            $entry = $this.$createHashedEntry(null, 0, 0);
            var$4 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$4;
            if (var$4 > $this.$threshold)
                $this.$rehash();
        }
    } else {
        $hash = ju_HashMap_computeHashCode($key);
        $index = $hash & ($this.$elementData.data.length - 1 | 0);
        $entry = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
        if ($entry === null) {
            $this.$modCount = $this.$modCount + 1 | 0;
            $entry = $this.$createHashedEntry($key, $index, $hash);
            var$4 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$4;
            if (var$4 > $this.$threshold)
                $this.$rehash();
        }
    }
    $result = $entry.$value0;
    $entry.$value0 = $value;
    return $result;
}
function ju_HashMap_createHashedEntry($this, $key, $index, $hash) {
    var $entry;
    $entry = ju_HashMap$HashEntry__init_($key, $hash);
    $entry.$next1 = $this.$elementData.data[$index];
    $this.$elementData.data[$index] = $entry;
    return $entry;
}
function ju_HashMap_rehash($this, $capacity) {
    var $length, $newData, $i, $entry, var$6, $index, $next;
    $length = ju_HashMap_calculateCapacity(!$capacity ? 1 : $capacity << 1);
    $newData = $this.$newElementArray($length);
    $i = 0;
    while ($i < $this.$elementData.data.length) {
        $entry = $this.$elementData.data[$i];
        $this.$elementData.data[$i] = null;
        while ($entry !== null) {
            var$6 = $newData.data;
            $index = $entry.$origKeyHash & ($length - 1 | 0);
            $next = $entry.$next1;
            $entry.$next1 = var$6[$index];
            var$6[$index] = $entry;
            $entry = $next;
        }
        $i = $i + 1 | 0;
    }
    $this.$elementData = $newData;
    ju_HashMap_computeThreshold($this);
}
function ju_HashMap_rehash0($this) {
    $this.$rehash0($this.$elementData.data.length);
}
function ju_HashMap_remove($this, $key) {
    var $entry;
    $entry = ju_HashMap_removeEntry($this, $key);
    if ($entry === null)
        return null;
    return $entry.$value0;
}
function ju_HashMap_removeEntry($this, $key) {
    var $index, $last, $entry, $entry_0, $hash;
    a: {
        $index = 0;
        $last = null;
        if ($key === null) {
            $entry = $this.$elementData.data[0];
            while ($entry !== null) {
                if ($entry.$key === null)
                    break a;
                $entry_0 = $entry.$next1;
                $last = $entry;
                $entry = $entry_0;
            }
        } else {
            $hash = ju_HashMap_computeHashCode($key);
            $index = $hash & ($this.$elementData.data.length - 1 | 0);
            $entry = $this.$elementData.data[$index];
            while ($entry !== null && !($entry.$origKeyHash == $hash && ju_HashMap_areEqualKeys($key, $entry.$key))) {
                $entry_0 = $entry.$next1;
                $last = $entry;
                $entry = $entry_0;
            }
        }
    }
    if ($entry === null)
        return null;
    if ($last !== null)
        $last.$next1 = $entry.$next1;
    else
        $this.$elementData.data[$index] = $entry.$next1;
    $this.$modCount = $this.$modCount + 1 | 0;
    $this.$elementCount = $this.$elementCount - 1 | 0;
    return $entry;
}
function ju_HashMap_size($this) {
    return $this.$elementCount;
}
function ju_HashMap_values($this) {
    if ($this.$cachedValues === null)
        $this.$cachedValues = ju_HashMap$2__init_($this);
    return $this.$cachedValues;
}
function ju_HashMap_computeHashCode($key) {
    return $key.$hashCode();
}
function ju_HashMap_areEqualKeys($key1, $key2) {
    return $key1 !== $key2 && !$key1.$equals0($key2) ? 0 : 1;
}
function ju_HashMap_areEqualValues($value1, $value2) {
    return $value1 !== $value2 && !$value1.$equals0($value2) ? 0 : 1;
}
function ju_LinkedHashMap() {
    var a = this; ju_HashMap.call(a);
    a.$accessOrder = 0;
    a.$head = null;
    a.$tail = null;
}
function ju_LinkedHashMap__init_() {
    var var_0 = new ju_LinkedHashMap();
    ju_LinkedHashMap__init_0(var_0);
    return var_0;
}
function ju_LinkedHashMap__init_0($this) {
    ju_HashMap__init_0($this);
    $this.$accessOrder = 0;
    $this.$head = null;
}
function ju_LinkedHashMap_containsValue($this, $value) {
    var $entry;
    a: {
        $entry = $this.$head;
        if (null !== $value) {
            while (true) {
                if (null === $entry)
                    break a;
                if ($value.$equals0($entry.$value0))
                    break;
                $entry = $entry.$chainForward;
            }
            return 1;
        }
        while (true) {
            if (null === $entry)
                break a;
            if (null === $entry.$value0)
                return 1;
            $entry = $entry.$chainForward;
        }
    }
    return 0;
}
function ju_LinkedHashMap_newElementArray($this, $s) {
    return $rt_createArray(ju_LinkedHashMap$LinkedHashMapEntry, $s);
}
function ju_LinkedHashMap_get($this, $key) {
    var $m, $hash, $index, $p, $n;
    if ($key === null)
        $m = ju_HashMap_findNullKeyEntry($this);
    else {
        $hash = $key.$hashCode();
        $index = ($hash & 2147483647) % $this.$elementData.data.length | 0;
        $m = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
    }
    if ($m === null)
        return null;
    if ($this.$accessOrder && $this.$tail !== $m) {
        $p = $m.$chainBackward;
        $n = $m.$chainForward;
        $n.$chainBackward = $p;
        if ($p === null)
            $this.$head = $n;
        else
            $p.$chainForward = $n;
        $m.$chainForward = null;
        $m.$chainBackward = $this.$tail;
        $this.$tail.$chainForward = $m;
        $this.$tail = $m;
    }
    return $m.$value0;
}
function ju_LinkedHashMap_createHashedEntry($this, $key, $index, $hash) {
    var $m;
    $m = ju_LinkedHashMap$LinkedHashMapEntry__init_($key, $hash);
    $m.$next1 = $this.$elementData.data[$index];
    $this.$elementData.data[$index] = $m;
    $this.$linkEntry($m);
    return $m;
}
function ju_LinkedHashMap_put($this, $key, $value) {
    var $result;
    $result = $this.$putImpl($key, $value);
    if ($this.$removeEldestEntry($this.$head))
        $this.$remove0($this.$head.$key);
    return $result;
}
function ju_LinkedHashMap_putImpl($this, $key, $value) {
    var $m, var$4, $hash, $index, var$7, $result;
    if (!$this.$elementCount) {
        $this.$head = null;
        $this.$tail = null;
    }
    if ($key === null) {
        $m = ju_HashMap_findNullKeyEntry($this);
        if ($m !== null)
            $this.$linkEntry($m);
        else {
            $this.$modCount = $this.$modCount + 1 | 0;
            var$4 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$4;
            if (var$4 > $this.$threshold)
                $this.$rehash();
            $m = $this.$createHashedEntry(null, 0, 0);
        }
    } else {
        $hash = $key.$hashCode();
        var$4 = $hash & 2147483647;
        $index = var$4 % $this.$elementData.data.length | 0;
        $m = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
        if ($m !== null)
            $this.$linkEntry($m);
        else {
            $this.$modCount = $this.$modCount + 1 | 0;
            var$7 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$7;
            if (var$7 > $this.$threshold) {
                $this.$rehash();
                $index = var$4 % $this.$elementData.data.length | 0;
            }
            $m = $this.$createHashedEntry($key, $index, $hash);
        }
    }
    $result = $m.$value0;
    $m.$value0 = $value;
    return $result;
}
function ju_LinkedHashMap_linkEntry($this, $m) {
    var $p, $n;
    if ($this.$tail === $m)
        return;
    if ($this.$head === null) {
        $this.$head = $m;
        $this.$tail = $m;
        return;
    }
    $p = $m.$chainBackward;
    $n = $m.$chainForward;
    if ($p !== null) {
        if ($n === null)
            return;
        if ($this.$accessOrder) {
            $p.$chainForward = $n;
            $n.$chainBackward = $p;
            $m.$chainForward = null;
            $m.$chainBackward = $this.$tail;
            $this.$tail.$chainForward = $m;
            $this.$tail = $m;
        }
        return;
    }
    if ($n === null) {
        $m.$chainBackward = $this.$tail;
        $m.$chainForward = null;
        $this.$tail.$chainForward = $m;
        $this.$tail = $m;
    } else if ($this.$accessOrder) {
        $this.$head = $n;
        $n.$chainBackward = null;
        $m.$chainBackward = $this.$tail;
        $m.$chainForward = null;
        $this.$tail.$chainForward = $m;
        $this.$tail = $m;
    }
}
function ju_LinkedHashMap_entrySet($this) {
    return ju_LinkedHashMap$LinkedHashMapEntrySet__init_($this);
}
function ju_LinkedHashMap_values($this) {
    if ($this.$cachedValues === null)
        $this.$cachedValues = ju_LinkedHashMap$2__init_($this);
    return $this.$cachedValues;
}
function ju_LinkedHashMap_remove($this, $key) {
    var $m, $p, $n;
    $m = ju_HashMap_removeEntry($this, $key);
    if ($m === null)
        return null;
    $p = $m.$chainBackward;
    $n = $m.$chainForward;
    if ($p === null)
        $this.$head = $n;
    else
        $p.$chainForward = $n;
    if ($n === null)
        $this.$tail = $p;
    else
        $n.$chainBackward = $p;
    return $m.$value0;
}
function ju_LinkedHashMap_removeEldestEntry($this, $eldest) {
    return 0;
}
function ju_LinkedHashMap_clear($this) {
    ju_HashMap_clear($this);
    $this.$head = null;
    $this.$tail = null;
}
function ju_LinkedHashMap_access$000($x0) {
    return $x0.$head;
}
function jur_QuantifierSet() {
    jur_AbstractSet.call(this);
    this.$innerSet = null;
}
function jur_QuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_QuantifierSet();
    jur_QuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_QuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AbstractSet__init_2($this, $next);
    $this.$innerSet = $innerSet;
    $this.$setType($type);
}
function jur_QuantifierSet_getInnerSet($this) {
    return $this.$innerSet;
}
function jur_QuantifierSet_first($this, $set) {
    return !$this.$innerSet.$first($set) && !$this.$next0.$first($set) ? 0 : 1;
}
function jur_QuantifierSet_hasConsumed($this, $mr) {
    return 1;
}
function jur_QuantifierSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next0 !== null && !$this.$next0.$isSecondPassVisited) {
        $set = $this.$next0.$processBackRefReplacement();
        if ($set !== null) {
            $this.$next0.$isSecondPassVisited = 1;
            $this.$next0 = $set;
        }
        $this.$next0.$processSecondPass();
    }
    if ($this.$innerSet !== null) {
        if (!$this.$innerSet.$isSecondPassVisited) {
            $set = $this.$innerSet.$processBackRefReplacement();
            if ($set !== null) {
                $this.$innerSet.$isSecondPassVisited = 1;
                $this.$innerSet = $set;
            }
            $this.$innerSet.$processSecondPass();
        } else if ($this.$innerSet instanceof jur_SingleSet && $this.$innerSet.$fSet.$isBackReferenced)
            $this.$innerSet = $this.$innerSet.$next0;
    }
}
function jur_GroupQuantifierSet() {
    jur_QuantifierSet.call(this);
}
function jur_GroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_GroupQuantifierSet();
    jur_GroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_GroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
}
function jur_PosPlusGroupQuantifierSet() {
    jur_GroupQuantifierSet.call(this);
}
function jur_PosPlusGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PosPlusGroupQuantifierSet();
    jur_PosPlusGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PosPlusGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PosPlusGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex, var$5;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        return (-1);
    if ($nextIndex > $stringIndex) {
        while (true) {
            var$5 = $this.$innerSet.$matches($nextIndex, $testString, $matchResult);
            if (var$5 <= $nextIndex)
                break;
            $nextIndex = var$5;
        }
        $stringIndex = $nextIndex;
    }
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
}
function kc_CollectionsKt__CollectionsJVMKt() {
    jl_Object.call(this);
}
function kc_CollectionsKt__CollectionsJVMKt__init_() {
    var var_0 = new kc_CollectionsKt__CollectionsJVMKt();
    kc_CollectionsKt__CollectionsJVMKt__init_0(var_0);
    return var_0;
}
function kc_CollectionsKt__CollectionsJVMKt_listOf($element) {
    var var$2;
    var$2 = ju_Collections_singletonList($element);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(59));
    return var$2;
}
function kc_CollectionsKt__CollectionsJVMKt__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function kc_CollectionsKt__CollectionsKt() {
    kc_CollectionsKt__CollectionsJVMKt.call(this);
}
function kc_CollectionsKt__CollectionsKt__init_() {
    var var_0 = new kc_CollectionsKt__CollectionsKt();
    kc_CollectionsKt__CollectionsKt__init_0(var_0);
    return var_0;
}
function kc_CollectionsKt__CollectionsKt_emptyList() {
    kc_EmptyList_$callClinit();
    return kc_EmptyList_INSTANCE;
}
function kc_CollectionsKt__CollectionsKt_listOf($elements) {
    var var$2;
    var$2 = $elements.data;
    kji_Intrinsics_checkParameterIsNotNull($elements, $rt_s(60));
    return var$2.length <= 0 ? kc_CollectionsKt__CollectionsKt_emptyList() : kc_ArraysKt___ArraysJvmKt_asList($elements);
}
function kc_CollectionsKt__CollectionsKt_arrayListOf($elements) {
    var var$2;
    var$2 = $elements.data;
    kji_Intrinsics_checkParameterIsNotNull($elements, $rt_s(60));
    return !var$2.length ? ju_ArrayList__init_() : ju_ArrayList__init_0(kc_ArrayAsCollection__init_($elements, 1));
}
function kc_CollectionsKt__CollectionsKt_getLastIndex($$this$lastIndex) {
    kji_Intrinsics_checkParameterIsNotNull($$this$lastIndex, $rt_s(61));
    return $$this$lastIndex.$size() - 1 | 0;
}
function kc_CollectionsKt__CollectionsKt_optimizeReadOnlyList($$this$optimizeReadOnlyList) {
    a: {
        kji_Intrinsics_checkParameterIsNotNull($$this$optimizeReadOnlyList, $rt_s(62));
        switch ($$this$optimizeReadOnlyList.$size()) {
            case 0:
                $$this$optimizeReadOnlyList = kc_CollectionsKt__CollectionsKt_emptyList();
                break a;
            case 1:
                $$this$optimizeReadOnlyList = kc_CollectionsKt__CollectionsJVMKt_listOf($$this$optimizeReadOnlyList.$get1(0));
                break a;
            default:
        }
    }
    return $$this$optimizeReadOnlyList;
}
function kc_CollectionsKt__CollectionsKt__init_0(var$0) {
    kc_CollectionsKt__CollectionsJVMKt__init_0(var$0);
}
function kc_CollectionsKt__IterablesKt() {
    kc_CollectionsKt__CollectionsKt.call(this);
}
function kc_CollectionsKt__IterablesKt__init_() {
    var var_0 = new kc_CollectionsKt__IterablesKt();
    kc_CollectionsKt__IterablesKt__init_0(var_0);
    return var_0;
}
function kc_CollectionsKt__IterablesKt_collectionSizeOrDefault($$this$collectionSizeOrDefault, $default) {
    kji_Intrinsics_checkParameterIsNotNull($$this$collectionSizeOrDefault, $rt_s(63));
    if ($rt_isInstance($$this$collectionSizeOrDefault, ju_Collection))
        $default = $$this$collectionSizeOrDefault.$size();
    return $default;
}
function kc_CollectionsKt__IterablesKt__init_0(var$0) {
    kc_CollectionsKt__CollectionsKt__init_0(var$0);
}
function kc_CollectionsKt__IteratorsJVMKt() {
    kc_CollectionsKt__IterablesKt.call(this);
}
function kc_CollectionsKt__IteratorsJVMKt__init_() {
    var var_0 = new kc_CollectionsKt__IteratorsJVMKt();
    kc_CollectionsKt__IteratorsJVMKt__init_0(var_0);
    return var_0;
}
function kc_CollectionsKt__IteratorsJVMKt__init_0(var$0) {
    kc_CollectionsKt__IterablesKt__init_0(var$0);
}
function kc_CollectionsKt__IteratorsKt() {
    kc_CollectionsKt__IteratorsJVMKt.call(this);
}
function kc_CollectionsKt__IteratorsKt__init_() {
    var var_0 = new kc_CollectionsKt__IteratorsKt();
    kc_CollectionsKt__IteratorsKt__init_0(var_0);
    return var_0;
}
function kc_CollectionsKt__IteratorsKt__init_0(var$0) {
    kc_CollectionsKt__IteratorsJVMKt__init_0(var$0);
}
function kc_CollectionsKt__MutableCollectionsJVMKt() {
    kc_CollectionsKt__IteratorsKt.call(this);
}
function kc_CollectionsKt__MutableCollectionsJVMKt__init_() {
    var var_0 = new kc_CollectionsKt__MutableCollectionsJVMKt();
    kc_CollectionsKt__MutableCollectionsJVMKt__init_0(var_0);
    return var_0;
}
function kc_CollectionsKt__MutableCollectionsJVMKt_sortWith($$this$sortWith, $comparator) {
    kji_Intrinsics_checkParameterIsNotNull($$this$sortWith, $rt_s(64));
    kji_Intrinsics_checkParameterIsNotNull($comparator, $rt_s(65));
    if ($$this$sortWith.$size() > 1)
        ju_Collections_sort($$this$sortWith, $comparator);
}
function kc_CollectionsKt__MutableCollectionsJVMKt__init_0(var$0) {
    kc_CollectionsKt__IteratorsKt__init_0(var$0);
}
function kt_StringsKt__AppendableKt() {
    jl_Object.call(this);
}
function kt_StringsKt__AppendableKt__init_() {
    var var_0 = new kt_StringsKt__AppendableKt();
    kt_StringsKt__AppendableKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt__AppendableKt_appendElement($$this$appendElement, $element, $transform) {
    kji_Intrinsics_checkParameterIsNotNull($$this$appendElement, $rt_s(66));
    if ($transform !== null)
        $$this$appendElement.$append2($transform.$invoke1($element));
    else if ($element === null ? 1 : $rt_isInstance($element, jl_CharSequence))
        $$this$appendElement.$append2($element);
    else if (!($element instanceof jl_Character))
        $$this$appendElement.$append2(jl_String_valueOf($element));
    else
        $$this$appendElement.$append3($element.$charValue());
}
function kt_StringsKt__AppendableKt__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function kt_StringsKt__IndentKt() {
    kt_StringsKt__AppendableKt.call(this);
}
function kt_StringsKt__IndentKt__init_() {
    var var_0 = new kt_StringsKt__IndentKt();
    kt_StringsKt__IndentKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt__IndentKt__init_0(var$0) {
    kt_StringsKt__AppendableKt__init_0(var$0);
}
function kt_StringsKt__RegexExtensionsJVMKt() {
    kt_StringsKt__IndentKt.call(this);
}
function kt_StringsKt__RegexExtensionsJVMKt__init_() {
    var var_0 = new kt_StringsKt__RegexExtensionsJVMKt();
    kt_StringsKt__RegexExtensionsJVMKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt__RegexExtensionsJVMKt__init_0(var$0) {
    kt_StringsKt__IndentKt__init_0(var$0);
}
function kt_StringsKt__RegexExtensionsKt() {
    kt_StringsKt__RegexExtensionsJVMKt.call(this);
}
function kt_StringsKt__RegexExtensionsKt__init_() {
    var var_0 = new kt_StringsKt__RegexExtensionsKt();
    kt_StringsKt__RegexExtensionsKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt__RegexExtensionsKt__init_0(var$0) {
    kt_StringsKt__RegexExtensionsJVMKt__init_0(var$0);
}
function kt_StringsKt__StringBuilderJVMKt() {
    kt_StringsKt__RegexExtensionsKt.call(this);
}
function kt_StringsKt__StringBuilderJVMKt__init_() {
    var var_0 = new kt_StringsKt__StringBuilderJVMKt();
    kt_StringsKt__StringBuilderJVMKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt__StringBuilderJVMKt_appendln($$this$appendln) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$appendln, $rt_s(67));
    kt_SystemProperties_$callClinit();
    var$2 = $$this$appendln.$append(kt_SystemProperties_LINE_SEPARATOR);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(68));
    return var$2;
}
function kt_StringsKt__StringBuilderJVMKt__init_0(var$0) {
    kt_StringsKt__RegexExtensionsKt__init_0(var$0);
}
function kt_StringsKt__StringBuilderKt() {
    kt_StringsKt__StringBuilderJVMKt.call(this);
}
function kt_StringsKt__StringBuilderKt__init_() {
    var var_0 = new kt_StringsKt__StringBuilderKt();
    kt_StringsKt__StringBuilderKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt__StringBuilderKt__init_0(var$0) {
    kt_StringsKt__StringBuilderJVMKt__init_0(var$0);
}
function kt_StringsKt__StringNumberConversionsJVMKt() {
    kt_StringsKt__StringBuilderKt.call(this);
}
function kt_StringsKt__StringNumberConversionsJVMKt__init_() {
    var var_0 = new kt_StringsKt__StringNumberConversionsJVMKt();
    kt_StringsKt__StringNumberConversionsJVMKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt__StringNumberConversionsJVMKt__init_0(var$0) {
    kt_StringsKt__StringBuilderKt__init_0(var$0);
}
function oktgg_IGLTFArray$DefaultImpls() {
    jl_Object.call(this);
}
function oktgg_IGLTFArray$DefaultImpls_ready($$this, $index) {
    oktu_IAsyncList$DefaultImpls_ready($$this, $index);
}
function oktgg_IGLTFArray$DefaultImpls_getOrWait($$this, $index, $call) {
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktu_IAsyncList$DefaultImpls_getOrWait($$this, $index, $call);
}
function jl_AbstractStringBuilder() {
    var a = this; jl_Object.call(a);
    a.$buffer = null;
    a.$length0 = 0;
}
function jl_AbstractStringBuilder__init_0() {
    var var_0 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_1(var_0);
    return var_0;
}
function jl_AbstractStringBuilder__init_(var_0) {
    var var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_2(var_1, var_0);
    return var_1;
}
function jl_AbstractStringBuilder__init_1($this) {
    jl_AbstractStringBuilder__init_2($this, 16);
}
function jl_AbstractStringBuilder__init_2($this, $capacity) {
    jl_Object__init_0($this);
    $this.$buffer = $rt_createCharArray($capacity);
}
function jl_AbstractStringBuilder_append($this, $string) {
    return $this.$insert($this.$length0, $string);
}
function jl_AbstractStringBuilder_insert($this, $index, $string) {
    var $i, var$4, var$5;
    if ($index >= 0 && $index <= $this.$length0) {
        if ($string === null)
            $string = $rt_s(70);
        else if ($string.$isEmpty())
            return $this;
        $this.$ensureCapacity($this.$length0 + $string.$length() | 0);
        $i = $this.$length0 - 1 | 0;
        while ($i >= $index) {
            $this.$buffer.data[$i + $string.$length() | 0] = $this.$buffer.data[$i];
            $i = $i + (-1) | 0;
        }
        $this.$length0 = $this.$length0 + $string.$length() | 0;
        $i = 0;
        while ($i < $string.$length()) {
            var$4 = $this.$buffer.data;
            var$5 = $index + 1 | 0;
            var$4[$index] = $string.$charAt($i);
            $i = $i + 1 | 0;
            $index = var$5;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_append0($this, $value) {
    return $this.$append0($value, 10);
}
function jl_AbstractStringBuilder_append1($this, $value, $radix) {
    return $this.$insert0($this.$length0, $value, $radix);
}
function jl_AbstractStringBuilder_insert0($this, $target, $value, $radix) {
    var $positive, var$5, var$6, $pos, $sz, $posLimit, var$10, var$11;
    $positive = 1;
    if ($value < 0) {
        $positive = 0;
        $value =  -$value;
    }
    a: {
        if ($value < $radix) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$5 = $this.$buffer.data;
                var$6 = $target + 1 | 0;
                var$5[$target] = 45;
                $target = var$6;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit($value, $radix);
        } else {
            $pos = 1;
            $sz = 1;
            $posLimit = 2147483647 / $radix | 0;
            b: {
                while (true) {
                    var$10 = $rt_imul($pos, $radix);
                    if (var$10 > $value) {
                        var$10 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if (var$10 > $posLimit)
                        break;
                    $pos = var$10;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                var$11 = $target;
            else {
                var$5 = $this.$buffer.data;
                var$11 = $target + 1 | 0;
                var$5[$target] = 45;
            }
            while (true) {
                if (var$10 <= 0)
                    break a;
                var$5 = $this.$buffer.data;
                var$6 = var$11 + 1 | 0;
                var$5[var$11] = jl_Character_forDigit($value / var$10 | 0, $radix);
                $value = $value % var$10 | 0;
                var$10 = var$10 / $radix | 0;
                var$11 = var$6;
            }
        }
    }
    return $this;
}
function jl_AbstractStringBuilder_append2($this, $value) {
    return $this.$insert1($this.$length0, $value);
}
function jl_AbstractStringBuilder_insert1($this, $target, $value) {
    var var$3, var$4, var$5, $number, $mantissa, $exp, $negative, $intPart, $sz, $digits, $zeros, $pos, $i, $intDigit, var$17;
    var$3 = $rt_compare($value, 0.0);
    if (!var$3) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 48;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 46;
        $this.$buffer.data[var$5] = 48;
        return $this;
    }
    if (!var$3) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 45;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 48;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 46;
        $this.$buffer.data[var$3] = 48;
        return $this;
    }
    if (isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 78;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 97;
        $this.$buffer.data[var$5] = 78;
        return $this;
    }
    if (!isFinite($value) ? 1 : 0) {
        if (var$3 > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            var$3 = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            var$3 = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 73;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 110;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 102;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 110;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 116;
        $this.$buffer.data[var$5] = 121;
        return $this;
    }
    jl_AbstractStringBuilder$Constants_$callClinit();
    $number = jl_AbstractStringBuilder$Constants_floatAnalysisResult;
    otcit_FloatAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa;
    $exp = $number.$exponent;
    $negative = $number.$sign;
    $intPart = 1;
    $sz = 1;
    if ($negative) {
        $negative = 1;
        $sz = 2;
    }
    $digits = 9;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else if ($exp < 0) {
            $mantissa = $mantissa / jl_AbstractStringBuilder$Constants_intPowersOfTen.data[ -$exp] | 0;
            $digits = $digits - $exp | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    var$3 = $sz + $digits | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + var$3 | 0);
    if (!$negative)
        var$5 = $target;
    else {
        var$4 = $this.$buffer.data;
        var$5 = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = 100000000;
    $i = 0;
    while ($i < $digits) {
        if ($pos <= 0)
            $intDigit = 0;
        else {
            $intDigit = $mantissa / $pos | 0;
            $mantissa = $mantissa % $pos | 0;
        }
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            var$5 = var$3;
        else {
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 46;
        }
        $pos = $pos / 10 | 0;
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 69;
        if ($exp >= 0)
            var$5 = var$3;
        else {
            $exp =  -$exp;
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 45;
        }
        if ($exp < 10)
            var$17 = var$5;
        else {
            var$4 = $this.$buffer.data;
            var$17 = var$5 + 1 | 0;
            var$4[var$5] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        $this.$buffer.data[var$17] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
}
function jl_AbstractStringBuilder_append3($this, $value) {
    return $this.$insert2($this.$length0, $value);
}
function jl_AbstractStringBuilder_insert2($this, $target, $value) {
    var var$3, var$4, var$5, $number, $mantissa, $exp, $negative, $intPart, $sz, $digits, $zeros, var$14, $pos, $i, $intDigit;
    var$3 = $rt_compare($value, 0.0);
    if (!var$3) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 48;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 46;
        $this.$buffer.data[var$5] = 48;
        return $this;
    }
    if (!var$3) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 45;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 48;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 46;
        $this.$buffer.data[var$3] = 48;
        return $this;
    }
    if (isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 78;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 97;
        $this.$buffer.data[var$5] = 78;
        return $this;
    }
    if (!isFinite($value) ? 1 : 0) {
        if (var$3 > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            var$3 = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            var$3 = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 73;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 110;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 102;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 110;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 116;
        $this.$buffer.data[var$5] = 121;
        return $this;
    }
    jl_AbstractStringBuilder$Constants_$callClinit();
    $number = jl_AbstractStringBuilder$Constants_doubleAnalysisResult;
    otcit_DoubleAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa0;
    $exp = $number.$exponent0;
    $negative = $number.$sign0;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 18;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros0($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else if ($exp < 0) {
            $mantissa = Long_div($mantissa, jl_AbstractStringBuilder$Constants_longPowersOfTen.data[ -$exp]);
            $digits = $digits - $exp | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if (!($exp > (-100) && $exp < 100))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    var$3 = $sz + $digits | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + var$3 | 0);
    if (!$negative)
        var$14 = $target;
    else {
        var$4 = $this.$buffer.data;
        var$14 = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = new Long(1569325056, 23283064);
    $i = 0;
    while ($i < $digits) {
        if (Long_le($pos, Long_ZERO))
            $intDigit = 0;
        else {
            $intDigit = Long_div($mantissa, $pos).lo;
            $mantissa = Long_rem($mantissa, $pos);
        }
        var$4 = $this.$buffer.data;
        var$3 = var$14 + 1 | 0;
        var$4[var$14] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            var$14 = var$3;
        else {
            var$4 = $this.$buffer.data;
            var$14 = var$3 + 1 | 0;
            var$4[var$3] = 46;
        }
        $pos = Long_div($pos, Long_fromInt(10));
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        var$3 = var$14 + 1 | 0;
        var$4[var$14] = 69;
        if ($exp >= 0)
            var$5 = var$3;
        else {
            $exp =  -$exp;
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 45;
        }
        if ($exp >= 100) {
            var$4 = $this.$buffer.data;
            var$3 = var$5 + 1 | 0;
            var$4[var$5] = (48 + ($exp / 100 | 0) | 0) & 65535;
            $exp = $exp % 100 | 0;
            var$4 = $this.$buffer.data;
            var$14 = var$3 + 1 | 0;
            var$4[var$3] = (48 + ($exp / 10 | 0) | 0) & 65535;
        } else if ($exp < 10)
            var$14 = var$5;
        else {
            var$4 = $this.$buffer.data;
            var$14 = var$5 + 1 | 0;
            var$4[var$5] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        $this.$buffer.data[var$14] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
}
function jl_AbstractStringBuilder_trailingDecimalZeros($n) {
    var $result, $zeros, var$4, var$5;
    if (!($n % 1000000000 | 0))
        return 9;
    $result = 0;
    $zeros = 1;
    if (!($n % 100000000 | 0)) {
        $result = 8;
        $zeros = 100000000;
    }
    var$4 = $zeros * 10000 | 0;
    if ($n % var$4 | 0)
        var$4 = $zeros;
    else
        $result = $result | 4;
    var$5 = var$4 * 100 | 0;
    if ($n % var$5 | 0)
        var$5 = var$4;
    else
        $result = $result | 2;
    if (!($n % (var$5 * 10 | 0) | 0))
        $result = $result | 1;
    return $result;
}
function jl_AbstractStringBuilder_trailingDecimalZeros0($n) {
    var $zeros, $result, $bit, $i;
    $zeros = Long_fromInt(1);
    $result = 0;
    $bit = 16;
    jl_AbstractStringBuilder$Constants_$callClinit();
    $i = jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data.length - 1 | 0;
    while ($i >= 0) {
        if (Long_eq(Long_rem($n, Long_mul($zeros, jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data[$i])), Long_ZERO)) {
            $result = $result | $bit;
            $zeros = Long_mul($zeros, jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data[$i]);
        }
        $bit = $bit >>> 1;
        $i = $i + (-1) | 0;
    }
    return $result;
}
function jl_AbstractStringBuilder_append4($this, $c) {
    return $this.$insert3($this.$length0, $c);
}
function jl_AbstractStringBuilder_insert3($this, $index, $c) {
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
    $this.$buffer.data[$index] = $c;
    return $this;
}
function jl_AbstractStringBuilder_append5($this, $obj) {
    return $this.$insert4($this.$length0, $obj);
}
function jl_AbstractStringBuilder_insert4($this, $index, $obj) {
    return $this.$insert($index, $obj === null ? $rt_s(70) : $obj.$toString());
}
function jl_AbstractStringBuilder_ensureCapacity($this, $capacity) {
    var $newLength, var$3;
    if ($this.$buffer.data.length >= $capacity)
        return;
    if ($this.$buffer.data.length >= 1073741823)
        $newLength = 2147483647;
    else {
        var$3 = $this.$buffer.data.length * 2 | 0;
        $newLength = jl_Math_max($capacity, jl_Math_max(var$3, 5));
    }
    $this.$buffer = ju_Arrays_copyOf($this.$buffer, $newLength);
}
function jl_AbstractStringBuilder_toString($this) {
    return jl_String__init_0($this.$buffer, 0, $this.$length0);
}
function jl_AbstractStringBuilder_length($this) {
    return $this.$length0;
}
function jl_AbstractStringBuilder_charAt($this, $index) {
    if ($index >= 0 && $index < $this.$length0)
        return $this.$buffer.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_append6($this, $s, $start, $end) {
    return $this.$insert5($this.$length0, $s, $start, $end);
}
function jl_AbstractStringBuilder_insert5($this, $index, $s, $i, $end) {
    var var$5, var$6;
    if ($i <= $end && $end <= $s.$length() && $i >= 0) {
        jl_AbstractStringBuilder_insertSpace($this, $index, ($index + $end | 0) - $i | 0);
        while ($i < $end) {
            var$5 = $this.$buffer.data;
            var$6 = $index + 1 | 0;
            var$5[$index] = $s.$charAt($i);
            $i = $i + 1 | 0;
            $index = var$6;
        }
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_append7($this, $s) {
    return $this.$append4($s, 0, $s.$length());
}
function jl_AbstractStringBuilder_append8($this, $chars, $offset, $len) {
    return $this.$insert6($this.$length0, $chars, $offset, $len);
}
function jl_AbstractStringBuilder_insert6($this, $index, $chars, $offset, $len) {
    var var$5, var$6, var$7, var$8, var$9;
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + $len | 0);
    var$5 = $len + $offset | 0;
    while ($offset < var$5) {
        var$6 = $chars.data;
        var$7 = $this.$buffer.data;
        var$8 = $index + 1 | 0;
        var$9 = $offset + 1 | 0;
        var$7[$index] = var$6[$offset];
        $index = var$8;
        $offset = var$9;
    }
    return $this;
}
function jl_AbstractStringBuilder_append9($this, $chars) {
    return $this.$append5($chars, 0, $chars.data.length);
}
function jl_AbstractStringBuilder_getChars($this, $srcBegin, $srcEnd, $dst, $dstBegin) {
    var var$5, var$6, var$7, var$8;
    if ($srcBegin > $srcEnd)
        $rt_throw(jl_IndexOutOfBoundsException__init_0($rt_s(71)));
    while ($srcBegin < $srcEnd) {
        var$5 = $dst.data;
        var$6 = $dstBegin + 1 | 0;
        var$7 = $this.$buffer.data;
        var$8 = $srcBegin + 1 | 0;
        var$5[$dstBegin] = var$7[$srcBegin];
        $dstBegin = var$6;
        $srcBegin = var$8;
    }
}
function jl_AbstractStringBuilder_setLength($this, $newLength) {
    $this.$length0 = $newLength;
}
function jl_AbstractStringBuilder_deleteCharAt($this, $i) {
    var var$2, var$3, $i_0;
    if ($i >= 0 && $i < $this.$length0) {
        $this.$length0 = $this.$length0 - 1 | 0;
        while ($i < $this.$length0) {
            var$2 = $this.$buffer.data;
            var$3 = $this.$buffer.data;
            $i_0 = $i + 1 | 0;
            var$2[$i] = var$3[$i_0];
            $i = $i_0;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_delete($this, $start, $end) {
    var var$3, $sz, $i, var$6, var$7, var$8;
    var$3 = $rt_compare($start, $end);
    if (var$3 <= 0 && $start <= $this.$length0) {
        if (!var$3)
            return $this;
        $sz = $this.$length0 - $end | 0;
        $this.$length0 = $this.$length0 - ($end - $start | 0) | 0;
        $i = 0;
        while ($i < $sz) {
            var$6 = $this.$buffer.data;
            var$3 = $start + 1 | 0;
            var$7 = $this.$buffer.data;
            var$8 = $end + 1 | 0;
            var$6[$start] = var$7[$end];
            $i = $i + 1 | 0;
            $start = var$3;
            $end = var$8;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_insertSpace($this, $start, $end) {
    var $sz, $i;
    $sz = $this.$length0 - $start | 0;
    $this.$ensureCapacity(($this.$length0 + $end | 0) - $start | 0);
    $i = $sz - 1 | 0;
    while ($i >= 0) {
        $this.$buffer.data[$end + $i | 0] = $this.$buffer.data[$start + $i | 0];
        $i = $i + (-1) | 0;
    }
    $this.$length0 = $this.$length0 + ($end - $start | 0) | 0;
}
function jl_Appendable() {
}
function jl_StringBuffer() {
    jl_AbstractStringBuilder.call(this);
}
function jl_StringBuffer__init_(var_0) {
    var var_1 = new jl_StringBuffer();
    jl_StringBuffer__init_0(var_1, var_0);
    return var_1;
}
function jl_StringBuffer__init_1() {
    var var_0 = new jl_StringBuffer();
    jl_StringBuffer__init_2(var_0);
    return var_0;
}
function jl_StringBuffer__init_0($this, $capacity) {
    jl_AbstractStringBuilder__init_2($this, $capacity);
}
function jl_StringBuffer__init_2($this) {
    jl_AbstractStringBuilder__init_1($this);
}
function jl_StringBuffer_append($this, $string) {
    jl_AbstractStringBuilder_append($this, $string);
    return $this;
}
function jl_StringBuffer_append0($this, $value) {
    jl_AbstractStringBuilder_append3($this, $value);
    return $this;
}
function jl_StringBuffer_append1($this, $c) {
    jl_AbstractStringBuilder_append4($this, $c);
    return $this;
}
function jl_StringBuffer_append2($this, $chars, $offset, $len) {
    jl_AbstractStringBuilder_append8($this, $chars, $offset, $len);
    return $this;
}
function jl_StringBuffer_append3($this, $chars) {
    jl_AbstractStringBuilder_append9($this, $chars);
    return $this;
}
function jl_StringBuffer_insert($this, $target, $value) {
    jl_AbstractStringBuilder_insert2($this, $target, $value);
    return $this;
}
function jl_StringBuffer_insert0($this, $index, $chars, $offset, $len) {
    jl_AbstractStringBuilder_insert6($this, $index, $chars, $offset, $len);
    return $this;
}
function jl_StringBuffer_insert1($this, $index, $c) {
    jl_AbstractStringBuilder_insert3($this, $index, $c);
    return $this;
}
function jl_StringBuffer_insert2($this, $index, $string) {
    jl_AbstractStringBuilder_insert($this, $index, $string);
    return $this;
}
function jl_StringBuffer_insert3($this, var$1, var$2, var$3, var$4) {
    return $this.$insert7(var$1, var$2, var$3, var$4);
}
function jl_StringBuffer_append4($this, var$1, var$2, var$3) {
    return $this.$append10(var$1, var$2, var$3);
}
function jl_StringBuffer_charAt($this, var$1) {
    return jl_AbstractStringBuilder_charAt($this, var$1);
}
function jl_StringBuffer_length($this) {
    return jl_AbstractStringBuilder_length($this);
}
function jl_StringBuffer_toString($this) {
    return jl_AbstractStringBuilder_toString($this);
}
function jl_StringBuffer_ensureCapacity($this, var$1) {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
}
function jl_StringBuffer_insert4($this, var$1, var$2) {
    return $this.$insert8(var$1, var$2);
}
function jl_StringBuffer_insert5($this, var$1, var$2) {
    return $this.$insert9(var$1, var$2);
}
function jl_StringBuffer_insert6($this, var$1, var$2) {
    return $this.$insert10(var$1, var$2);
}
function jur_AbstractCharClass$PredefinedCharacterClasses() {
    jl_Object.call(this);
}
var jur_AbstractCharClass$PredefinedCharacterClasses_space = null;
var jur_AbstractCharClass$PredefinedCharacterClasses_digit = null;
var jur_AbstractCharClass$PredefinedCharacterClasses_contents = null;
function jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit() {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit = $rt_eraseClinit(jur_AbstractCharClass$PredefinedCharacterClasses);
    jur_AbstractCharClass$PredefinedCharacterClasses__clinit_();
}
function jur_AbstractCharClass$PredefinedCharacterClasses__init_() {
    var var_0 = new jur_AbstractCharClass$PredefinedCharacterClasses();
    jur_AbstractCharClass$PredefinedCharacterClasses__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$PredefinedCharacterClasses__init_0($this) {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
    jl_Object__init_0($this);
}
function jur_AbstractCharClass$PredefinedCharacterClasses_getObject($this, $name) {
    var $i, $row, var$4;
    $i = 0;
    while (true) {
        if ($i >= jur_AbstractCharClass$PredefinedCharacterClasses_contents.data.length)
            $rt_throw(ju_MissingResourceException__init_($rt_s(6), $rt_s(6), $name));
        $row = jur_AbstractCharClass$PredefinedCharacterClasses_contents.data[$i];
        var$4 = $row.data;
        if ($name.$equals0(var$4[0]))
            break;
        $i = $i + 1 | 0;
    }
    return var$4[1];
}
function jur_AbstractCharClass$PredefinedCharacterClasses__clinit_() {
    var var$1, var$2, var$3, var$4;
    jur_AbstractCharClass$PredefinedCharacterClasses_space = jur_AbstractCharClass$LazySpace__init_();
    jur_AbstractCharClass$PredefinedCharacterClasses_digit = jur_AbstractCharClass$LazyDigit__init_();
    var$1 = $rt_createArray($rt_arraycls(jl_Object), 194);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(72);
    var$4[1] = jur_AbstractCharClass$LazyLower__init_();
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(73);
    var$4[1] = jur_AbstractCharClass$LazyUpper__init_();
    var$2[1] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(74);
    var$4[1] = jur_AbstractCharClass$LazyASCII__init_();
    var$2[2] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(75);
    var$4[1] = jur_AbstractCharClass$LazyAlpha__init_();
    var$2[3] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(76);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[4] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(77);
    var$4[1] = jur_AbstractCharClass$LazyAlnum__init_();
    var$2[5] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(78);
    var$4[1] = jur_AbstractCharClass$LazyPunct__init_();
    var$2[6] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(79);
    var$4[1] = jur_AbstractCharClass$LazyGraph__init_();
    var$2[7] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(80);
    var$4[1] = jur_AbstractCharClass$LazyPrint__init_();
    var$2[8] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(81);
    var$4[1] = jur_AbstractCharClass$LazyBlank__init_();
    var$2[9] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(82);
    var$4[1] = jur_AbstractCharClass$LazyCntrl__init_();
    var$2[10] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(83);
    var$4[1] = jur_AbstractCharClass$LazyXDigit__init_();
    var$2[11] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(84);
    var$4[1] = jur_AbstractCharClass$LazyJavaLowerCase__init_();
    var$2[12] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(85);
    var$4[1] = jur_AbstractCharClass$LazyJavaUpperCase__init_();
    var$2[13] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(86);
    var$4[1] = jur_AbstractCharClass$LazyJavaWhitespace__init_();
    var$2[14] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(87);
    var$4[1] = jur_AbstractCharClass$LazyJavaMirrored__init_();
    var$2[15] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(88);
    var$4[1] = jur_AbstractCharClass$LazyJavaDefined__init_();
    var$2[16] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(89);
    var$4[1] = jur_AbstractCharClass$LazyJavaDigit__init_();
    var$2[17] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(90);
    var$4[1] = jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_();
    var$2[18] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(91);
    var$4[1] = jur_AbstractCharClass$LazyJavaISOControl__init_();
    var$2[19] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(92);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_();
    var$2[20] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(93);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_();
    var$2[21] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(94);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetter__init_();
    var$2[22] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(95);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetterOrDigit__init_();
    var$2[23] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(96);
    var$4[1] = jur_AbstractCharClass$LazyJavaSpaceChar__init_();
    var$2[24] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(97);
    var$4[1] = jur_AbstractCharClass$LazyJavaTitleCase__init_();
    var$2[25] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(98);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_();
    var$2[26] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(99);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_();
    var$2[27] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(100);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[28] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(101);
    var$4[1] = jur_AbstractCharClass$LazyWord__init_();
    var$2[29] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(102);
    var$4[1] = jur_AbstractCharClass$LazyNonWord__init_();
    var$2[30] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(103);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[31] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(104);
    var$4[1] = jur_AbstractCharClass$LazyNonSpace__init_();
    var$2[32] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(105);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[33] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(106);
    var$4[1] = jur_AbstractCharClass$LazyNonDigit__init_();
    var$2[34] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(107);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 127);
    var$2[35] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(108);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(128, 255);
    var$2[36] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(109);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(256, 383);
    var$2[37] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(110);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(384, 591);
    var$2[38] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(111);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(592, 687);
    var$2[39] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(112);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(688, 767);
    var$2[40] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(113);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(768, 879);
    var$2[41] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(114);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(880, 1023);
    var$2[42] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(115);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1024, 1279);
    var$2[43] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(116);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1280, 1327);
    var$2[44] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(117);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1328, 1423);
    var$2[45] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(118);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1424, 1535);
    var$2[46] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(119);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1536, 1791);
    var$2[47] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(120);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1792, 1871);
    var$2[48] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(121);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1872, 1919);
    var$2[49] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(122);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1920, 1983);
    var$2[50] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(123);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2304, 2431);
    var$2[51] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(124);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2432, 2559);
    var$2[52] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(125);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2560, 2687);
    var$2[53] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(126);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2688, 2815);
    var$2[54] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(127);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2816, 2943);
    var$2[55] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(128);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2944, 3071);
    var$2[56] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(129);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3072, 3199);
    var$2[57] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(130);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3200, 3327);
    var$2[58] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(131);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3328, 3455);
    var$2[59] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(132);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3456, 3583);
    var$2[60] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(133);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3584, 3711);
    var$2[61] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(134);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3712, 3839);
    var$2[62] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(135);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3840, 4095);
    var$2[63] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(136);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4096, 4255);
    var$2[64] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(137);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4256, 4351);
    var$2[65] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(138);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4352, 4607);
    var$2[66] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(139);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4608, 4991);
    var$2[67] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(140);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4992, 5023);
    var$2[68] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(141);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5024, 5119);
    var$2[69] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(142);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5120, 5759);
    var$2[70] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(143);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5760, 5791);
    var$2[71] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(144);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5792, 5887);
    var$2[72] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(145);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5888, 5919);
    var$2[73] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(146);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5920, 5951);
    var$2[74] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(147);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5952, 5983);
    var$2[75] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(148);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5984, 6015);
    var$2[76] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(149);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6016, 6143);
    var$2[77] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(150);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6144, 6319);
    var$2[78] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(151);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6400, 6479);
    var$2[79] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(152);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6480, 6527);
    var$2[80] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(153);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6528, 6623);
    var$2[81] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(154);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6624, 6655);
    var$2[82] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(155);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6656, 6687);
    var$2[83] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(156);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7424, 7551);
    var$2[84] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(157);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7552, 7615);
    var$2[85] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(158);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7616, 7679);
    var$2[86] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(159);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7680, 7935);
    var$2[87] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(160);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7936, 8191);
    var$2[88] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(161);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8192, 8303);
    var$2[89] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(162);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8304, 8351);
    var$2[90] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(163);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8352, 8399);
    var$2[91] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(164);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8400, 8447);
    var$2[92] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(165);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8448, 8527);
    var$2[93] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(166);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8528, 8591);
    var$2[94] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(167);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8592, 8703);
    var$2[95] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(168);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8704, 8959);
    var$2[96] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(169);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8960, 9215);
    var$2[97] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(170);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9216, 9279);
    var$2[98] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(171);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9280, 9311);
    var$2[99] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(172);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9312, 9471);
    var$2[100] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(173);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9472, 9599);
    var$2[101] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(174);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9600, 9631);
    var$2[102] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(175);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9632, 9727);
    var$2[103] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(176);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9728, 9983);
    var$2[104] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(177);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9984, 10175);
    var$2[105] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(178);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10176, 10223);
    var$2[106] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(179);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10224, 10239);
    var$2[107] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(180);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10240, 10495);
    var$2[108] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(181);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10496, 10623);
    var$2[109] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(182);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10624, 10751);
    var$2[110] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(183);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10752, 11007);
    var$2[111] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(184);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11008, 11263);
    var$2[112] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(185);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11264, 11359);
    var$2[113] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(186);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11392, 11519);
    var$2[114] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(187);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11520, 11567);
    var$2[115] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(188);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11568, 11647);
    var$2[116] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(189);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11648, 11743);
    var$2[117] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(190);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11776, 11903);
    var$2[118] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(191);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11904, 12031);
    var$2[119] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(192);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12032, 12255);
    var$2[120] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(193);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12272, 12287);
    var$2[121] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(194);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12288, 12351);
    var$2[122] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(195);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12352, 12447);
    var$2[123] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(196);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12448, 12543);
    var$2[124] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(197);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12544, 12591);
    var$2[125] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(198);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12592, 12687);
    var$2[126] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(199);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12688, 12703);
    var$2[127] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(200);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12704, 12735);
    var$2[128] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(201);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12736, 12783);
    var$2[129] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(202);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12784, 12799);
    var$2[130] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(203);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12800, 13055);
    var$2[131] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(204);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13056, 13311);
    var$2[132] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(205);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13312, 19893);
    var$2[133] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(206);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19904, 19967);
    var$2[134] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(207);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19968, 40959);
    var$2[135] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(208);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(40960, 42127);
    var$2[136] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(209);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42128, 42191);
    var$2[137] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(210);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42752, 42783);
    var$2[138] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(211);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(43008, 43055);
    var$2[139] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(212);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(44032, 55203);
    var$2[140] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(213);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(55296, 56191);
    var$2[141] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(214);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56192, 56319);
    var$2[142] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(215);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56320, 57343);
    var$2[143] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(216);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(57344, 63743);
    var$2[144] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(217);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(63744, 64255);
    var$2[145] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(218);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64256, 64335);
    var$2[146] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(219);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64336, 65023);
    var$2[147] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(220);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65024, 65039);
    var$2[148] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(221);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65040, 65055);
    var$2[149] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(222);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65056, 65071);
    var$2[150] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(223);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65072, 65103);
    var$2[151] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(224);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65104, 65135);
    var$2[152] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(225);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65136, 65279);
    var$2[153] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(226);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65280, 65519);
    var$2[154] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(227);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 1114111);
    var$2[155] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(228);
    var$4[1] = jur_AbstractCharClass$LazySpecialsBlock__init_();
    var$2[156] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(229);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(0, 1);
    var$2[157] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(230);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(62, 1);
    var$2[158] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(231);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(1, 1);
    var$2[159] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(232);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(2, 1);
    var$2[160] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(233);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(3, 0);
    var$2[161] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(234);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(4, 0);
    var$2[162] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(235);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(5, 1);
    var$2[163] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(236);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(448, 1);
    var$2[164] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(237);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(6, 1);
    var$2[165] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(238);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(7, 0);
    var$2[166] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(239);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(8, 1);
    var$2[167] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(240);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(3584, 1);
    var$2[168] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(241);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(9, 1);
    var$2[169] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(242);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(10, 1);
    var$2[170] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(243);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(11, 1);
    var$2[171] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(244);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(28672, 0);
    var$2[172] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(245);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(12, 0);
    var$2[173] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(246);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(13, 0);
    var$2[174] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(247);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(14, 0);
    var$2[175] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(248);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_0(983040, 1, 1);
    var$2[176] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(249);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(15, 0);
    var$2[177] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(250);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(16, 1);
    var$2[178] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(251);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(18, 1);
    var$2[179] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(252);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_1(19, 0, 1);
    var$2[180] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(253);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(1643118592, 1);
    var$2[181] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(254);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(20, 0);
    var$2[182] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(255);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(21, 0);
    var$2[183] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(256);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(22, 0);
    var$2[184] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(257);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(23, 0);
    var$2[185] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(258);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(24, 1);
    var$2[186] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(259);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(2113929216, 1);
    var$2[187] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(260);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(25, 1);
    var$2[188] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(261);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(26, 0);
    var$2[189] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(262);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(27, 0);
    var$2[190] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(263);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(28, 1);
    var$2[191] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(264);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(29, 0);
    var$2[192] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(265);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(30, 0);
    var$2[193] = var$3;
    jur_AbstractCharClass$PredefinedCharacterClasses_contents = var$1;
}
function oktgg_GLTFNode$read$10() {
    var a = this; kji_Lambda.call(a);
    a.$this$00 = null;
    a.$$obj = null;
}
function oktgg_GLTFNode$read$10__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFNode$read$10();
    oktgg_GLTFNode$read$10__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFNode$read$10_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$10_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$10_invoke0($this, $skinIndex) {
    oktgg_GLTFNode_setSkin($this.$this$00, $skinIndex);
    oktgg_GLTFNode_getGltf($this.$this$00).$getSkins().$getOrWait0($skinIndex, oktgg_GLTFNode$read$10$1__init_($this));
}
function oktgg_GLTFNode$read$10__init_0(var$0, var$1, var$2) {
    var$0.$this$00 = var$1;
    var$0.$$obj = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1() {
    kji_Lambda.call(this);
}
var oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_INSTANCE = null;
function oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_$callClinit() {
    oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_$callClinit = $rt_eraseClinit(oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1);
    oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1__clinit_();
}
function oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1__init_() {
    var var_0 = new oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1();
    oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1__init_0(var_0);
    return var_0;
}
function oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_invoke(var$0) {
    return oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_invoke0(var$0);
}
function oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_invoke0($this) {
    return oktpo_BodyContactPair__init_();
}
function oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1__init_0(var$0) {
    oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1__clinit_() {
    oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_INSTANCE = oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1__init_();
}
function oktm_Mat4$Companion() {
    jl_Object.call(this);
}
function oktm_Mat4$Companion__init_() {
    var var_0 = new oktm_Mat4$Companion();
    oktm_Mat4$Companion__init_0(var_0);
    return var_0;
}
function oktm_Mat4$Companion__init_1(var_0) {
    var var_1 = new oktm_Mat4$Companion();
    oktm_Mat4$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktm_Mat4$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktm_Mat4$Companion__init_2($this, $$constructor_marker) {
    oktm_Mat4$Companion__init_0($this);
}
function oooi_CollisionLibccd$ccd_obj_t() {
    var a = this; jl_Object.call(a);
    a.$pos1 = null;
    a.$rot = null;
    a.$rot_inv = null;
}
function oooi_CollisionLibccd$ccd_obj_t__init_() {
    var var_0 = new oooi_CollisionLibccd$ccd_obj_t();
    oooi_CollisionLibccd$ccd_obj_t__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$ccd_obj_t__init_1(var_0) {
    var var_1 = new oooi_CollisionLibccd$ccd_obj_t();
    oooi_CollisionLibccd$ccd_obj_t__init_2(var_1, var_0);
    return var_1;
}
function oooi_CollisionLibccd$ccd_obj_t__init_0($this) {
    jl_Object__init_0($this);
    $this.$pos1 = oooil_CCDVec3$ccd_vec3_t__init_();
    $this.$rot = oooil_CCDQuat$ccd_quat_t__init_();
    $this.$rot_inv = oooil_CCDQuat$ccd_quat_t__init_();
}
function oooi_CollisionLibccd$ccd_obj_t__init_2($this, $x0) {
    oooi_CollisionLibccd$ccd_obj_t__init_0($this);
}
function oooi_CollisionLibccd$ccd_triangle_t() {
    oooi_CollisionLibccd$ccd_obj_t.call(this);
    this.$vertices = null;
}
function oooi_CollisionLibccd$ccd_triangle_t__init_() {
    var var_0 = new oooi_CollisionLibccd$ccd_triangle_t();
    oooi_CollisionLibccd$ccd_triangle_t__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$ccd_triangle_t__init_1(var_0) {
    var var_1 = new oooi_CollisionLibccd$ccd_triangle_t();
    oooi_CollisionLibccd$ccd_triangle_t__init_2(var_1, var_0);
    return var_1;
}
function oooi_CollisionLibccd$ccd_triangle_t__init_0($this) {
    var var$1, var$2;
    oooi_CollisionLibccd$ccd_obj_t__init_2($this, null);
    var$1 = $rt_createArray(oooil_CCDVec3$ccd_vec3_t, 3);
    var$2 = var$1.data;
    var$2[0] = oooil_CCDVec3$ccd_vec3_t__init_();
    var$2[1] = oooil_CCDVec3$ccd_vec3_t__init_();
    var$2[2] = oooil_CCDVec3$ccd_vec3_t__init_();
    $this.$vertices = var$1;
}
function oooi_CollisionLibccd$ccd_triangle_t__init_2($this, $x0) {
    oooi_CollisionLibccd$ccd_triangle_t__init_0($this);
}
function oktm_IVertexBuffer$DefaultImpls() {
    jl_Object.call(this);
}
function oktm_IVertexBuffer$DefaultImpls_getSize($$this) {
    return $$this.$getVertexInputs().$getBytesPerVertex() <= 0 ? 0 : $$this.$getBytes().$getSize() / $$this.$getVertexInputs().$getBytesPerVertex() | 0;
}
function jur_NonCapJointSet() {
    jur_JointSet.call(this);
}
function jur_NonCapJointSet__init_() {
    var var_0 = new jur_NonCapJointSet();
    jur_NonCapJointSet__init_0(var_0);
    return var_0;
}
function jur_NonCapJointSet__init_1(var_0, var_1) {
    var var_2 = new jur_NonCapJointSet();
    jur_NonCapJointSet__init_2(var_2, var_0, var_1);
    return var_2;
}
function jur_NonCapJointSet__init_0($this) {
    jur_JointSet__init_0($this);
}
function jur_NonCapJointSet__init_2($this, $children, $fSet) {
    jur_JointSet__init_2($this, $children, $fSet);
}
function jur_NonCapJointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $e, $shift;
    $start = $matchResult.$getConsumed($this.$groupIndex0);
    $matchResult.$setConsumed($this.$groupIndex0, $stringIndex);
    $size = $this.$children0.$size();
    $i = 0;
    while (true) {
        if ($i >= $size) {
            $matchResult.$setConsumed($this.$groupIndex0, $start);
            return (-1);
        }
        $e = $this.$children0.$get1($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
}
function jur_NonCapJointSet_hasConsumed($this, $matchResult) {
    var $cons;
    $cons = $matchResult.$getConsumed($this.$groupIndex0);
    return !$cons ? 0 : 1;
}
function jur_AtomicJointSet() {
    jur_NonCapJointSet.call(this);
}
function jur_AtomicJointSet__init_(var_0, var_1) {
    var var_2 = new jur_AtomicJointSet();
    jur_AtomicJointSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AtomicJointSet__init_0($this, $children, $fSet) {
    jur_NonCapJointSet__init_2($this, $children, $fSet);
}
function jur_AtomicJointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $e, $shift;
    $start = $matchResult.$getConsumed($this.$groupIndex0);
    $matchResult.$setConsumed($this.$groupIndex0, $stringIndex);
    $size = $this.$children0.$size();
    $i = 0;
    while ($i < $size) {
        $e = $this.$children0.$get1($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $this.$next0.$matches($this.$fSet.$getIndex(), $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    $matchResult.$setConsumed($this.$groupIndex0, $start);
    return (-1);
}
function jur_AtomicJointSet_setNext($this, $next) {
    $this.$next0 = $next;
}
function jur_NegativeLookAhead() {
    jur_AtomicJointSet.call(this);
}
function jur_NegativeLookAhead__init_(var_0, var_1) {
    var var_2 = new jur_NegativeLookAhead();
    jur_NegativeLookAhead__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NegativeLookAhead__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_NegativeLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e;
    $size = $this.$children0.$size();
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next0.$matches($stringIndex, $testString, $matchResult);
        $e = $this.$children0.$get1($i);
        if ($e.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_NegativeLookAhead_hasConsumed($this, $matchResult) {
    return 0;
}
function oktg_IMaterial$Companion() {
    jl_Object.call(this);
}
var oktg_IMaterial$Companion_Default = null;
var oktg_IMaterial$Companion_$$INSTANCE = null;
function oktg_IMaterial$Companion_$callClinit() {
    oktg_IMaterial$Companion_$callClinit = $rt_eraseClinit(oktg_IMaterial$Companion);
    oktg_IMaterial$Companion__clinit_();
}
function oktg_IMaterial$Companion__init_() {
    var var_0 = new oktg_IMaterial$Companion();
    oktg_IMaterial$Companion__init_0(var_0);
    return var_0;
}
function oktg_IMaterial$Companion_getDefault($this) {
    return oktg_IMaterial$Companion_Default;
}
function oktg_IMaterial$Companion__init_0($this) {
    oktg_IMaterial$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktg_IMaterial$Companion__clinit_() {
    oktg_IMaterial$Companion_$$INSTANCE = oktg_IMaterial$Companion__init_();
    oktg_IMaterial$Companion_Default = oktg_Material__init_(null, null, 0.0, 0.0, 0.0, 0, 0, 0, 0, null, null, 2047, null);
}
function ju_Comparator() {
}
function oooi_CollideTrimeshBox$1() {
    jl_Object.call(this);
    this.$this$01 = null;
}
function oooi_CollideTrimeshBox$1__init_(var_0) {
    var var_1 = new oooi_CollideTrimeshBox$1();
    oooi_CollideTrimeshBox$1__init_0(var_1, var_0);
    return var_1;
}
function oooi_CollideTrimeshBox$1__init_0($this, $this$0) {
    $this.$this$01 = $this$0;
    jl_Object__init_0($this);
}
function oooi_CollideTrimeshBox$1_compare($this, $o1, $o2) {
    return jl_Double_compare($o2.$depth, $o1.$depth);
}
function oooi_CollideTrimeshBox$1_compare0($this, var$1, var$2) {
    return $this.$compare1(var$1, var$2);
}
function jlr_Array() {
    jl_Object.call(this);
}
function jlr_Array__init_() {
    var var_0 = new jlr_Array();
    jlr_Array__init_0(var_0);
    return var_0;
}
function jlr_Array__init_0($this) {
    jl_Object__init_0($this);
}
function jlr_Array_getLength(var$1) {
    if (var$1 === null || var$1.constructor.$meta.item === undefined) {
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    return var$1.data.length;
}
function jlr_Array_newInstance($componentType, $length) {
    if ($componentType === null)
        $rt_throw(jl_NullPointerException__init_());
    if ($componentType === $rt_cls($rt_voidcls()))
        $rt_throw(jl_IllegalArgumentException__init_0());
    if ($length < 0)
        $rt_throw(jl_NegativeArraySizeException__init_());
    return jlr_Array_newInstanceImpl($componentType.$getPlatformClass(), $length);
}
function jlr_Array_newInstanceImpl(var$1, var$2) {
    if (var$1.$meta.primitive) {
        if (var$1 == $rt_bytecls()) {
            return $rt_createByteArray(var$2);
        }
        if (var$1 == $rt_shortcls()) {
            return $rt_createShortArray(var$2);
        }
        if (var$1 == $rt_charcls()) {
            return $rt_createCharArray(var$2);
        }
        if (var$1 == $rt_intcls()) {
            return $rt_createIntArray(var$2);
        }
        if (var$1 == $rt_longcls()) {
            return $rt_createLongArray(var$2);
        }
        if (var$1 == $rt_floatcls()) {
            return $rt_createFloatArray(var$2);
        }
        if (var$1 == $rt_doublecls()) {
            return $rt_createDoubleArray(var$2);
        }
        if (var$1 == $rt_booleancls()) {
            return $rt_createBooleanArray(var$2);
        }
    } else {
        return $rt_createArray(var$1, var$2)
    }
}
function oktgg_GLTF$read$1$3() {
    kji_Lambda.call(this);
    this.$this$02 = null;
}
function oktgg_GLTF$read$1$3__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$1$3();
    oktgg_GLTF$read$1$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$1$3_invoke(var$0, var$1) {
    oktgg_GLTF$read$1$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$1$3_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    $this.$this$02.$this$03.$setMinVersion($it);
}
function oktgg_GLTF$read$1$3__init_0(var$0, var$1) {
    var$0.$this$02 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTF$read$1$1() {
    kji_Lambda.call(this);
    this.$this$04 = null;
}
function oktgg_GLTF$read$1$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$1$1();
    oktgg_GLTF$read$1$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$1$1_invoke(var$0, var$1) {
    oktgg_GLTF$read$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$1$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    $this.$this$04.$this$03.$setCopyright($it);
}
function oktgg_GLTF$read$1$1__init_0(var$0, var$1) {
    var$0.$this$04 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTF$read$1$2() {
    kji_Lambda.call(this);
    this.$this$05 = null;
}
function oktgg_GLTF$read$1$2__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$1$2();
    oktgg_GLTF$read$1$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$1$2_invoke(var$0, var$1) {
    oktgg_GLTF$read$1$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$1$2_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    $this.$this$05.$this$03.$setGenerator($it);
}
function oktgg_GLTF$read$1$2__init_0(var$0, var$1) {
    var$0.$this$05 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgl_DirectionalLight$Companion() {
    jl_Object.call(this);
}
function oktgl_DirectionalLight$Companion__init_() {
    var var_0 = new oktgl_DirectionalLight$Companion();
    oktgl_DirectionalLight$Companion__init_0(var_0);
    return var_0;
}
function oktgl_DirectionalLight$Companion__init_1(var_0) {
    var var_1 = new oktgl_DirectionalLight$Companion();
    oktgl_DirectionalLight$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktgl_DirectionalLight$Companion_getShadowMapsCap($this) {
    return oktgl_DirectionalLight_access$getShadowMapsCap$cp();
}
function oktgl_DirectionalLight$Companion_getViewProjectionMatricesCap($this) {
    return oktgl_DirectionalLight_access$getViewProjectionMatricesCap$cp();
}
function oktgl_DirectionalLight$Companion_getLightViewTmp($this) {
    return oktgl_DirectionalLight_access$getLightViewTmp$cp();
}
function oktgl_DirectionalLight$Companion_getLightPos($this) {
    return oktgl_DirectionalLight_access$getLightPos$cp();
}
function oktgl_DirectionalLight$Companion_getCentroid($this) {
    return oktgl_DirectionalLight_access$getCentroid$cp();
}
function oktgl_DirectionalLight$Companion_getTmpCam($this) {
    return oktgl_DirectionalLight_access$getTmpCam$cp();
}
function oktgl_DirectionalLight$Companion_getSubFrustumPoints($this) {
    return oktgl_DirectionalLight_access$getSubFrustumPoints$cp();
}
function oktgl_DirectionalLight$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktgl_DirectionalLight$Companion__init_2($this, $$constructor_marker) {
    oktgl_DirectionalLight$Companion__init_0($this);
}
function jur_AbstractCharClass$LazyJavaDigit() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaDigit();
    jur_AbstractCharClass$LazyJavaDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaDigit_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaDigit$1__init_($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
}
function oktgg_GLTFSparse$Values() {
    var a = this; jl_Object.call(a);
    a.$bufferView0 = 0;
    a.$byteOffset = 0;
}
function oktgg_GLTFSparse$Values__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFSparse$Values();
    oktgg_GLTFSparse$Values__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFSparse$Values__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new oktgg_GLTFSparse$Values();
    oktgg_GLTFSparse$Values__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktgg_GLTFSparse$Values__init_3() {
    var var_0 = new oktgg_GLTFSparse$Values();
    oktgg_GLTFSparse$Values__init_4(var_0);
    return var_0;
}
function oktgg_GLTFSparse$Values_read($this, $json) {
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $this.$bufferView0 = $json.$int0($rt_s(20));
    $json.$int($rt_s(266), oktgg_GLTFSparse$Values$read$1__init_($this));
}
function oktgg_GLTFSparse$Values_setByteOffset($this, $_set___) {
    $this.$byteOffset = $_set___;
}
function oktgg_GLTFSparse$Values__init_0($this, $bufferView, $byteOffset) {
    jl_Object__init_0($this);
    $this.$bufferView0 = $bufferView;
    $this.$byteOffset = $byteOffset;
}
function oktgg_GLTFSparse$Values__init_2(var$0, var$1, var$2, var$3, var$4) {
    if (var$3 & 1)
        var$1 = (-1);
    if (var$3 & 2)
        var$2 = 0;
    oktgg_GLTFSparse$Values__init_0(var$0, var$1, var$2);
}
function oktgg_GLTFSparse$Values__init_4(var$0) {
    oktgg_GLTFSparse$Values__init_2(var$0, 0, 0, 3, null);
}
function oktsg_IShaderData() {
}
function oktsg_ShaderData() {
    var a = this; jl_Object.call(a);
    a.$uid = 0;
    a.$scope = 0;
    a.$inlineCode = null;
    a.$container = null;
    a.$connectedToInternal = null;
}
function oktsg_ShaderData__init_() {
    var var_0 = new oktsg_ShaderData();
    oktsg_ShaderData__init_0(var_0);
    return var_0;
}
function oktsg_ShaderData_getUid($this) {
    return $this.$uid;
}
function oktsg_ShaderData_setUid($this, $_set___) {
    $this.$uid = $_set___;
}
function oktsg_ShaderData_getScope($this) {
    return $this.$scope;
}
function oktsg_ShaderData_setScope($this, $_set___) {
    $this.$scope = $_set___;
}
function oktsg_ShaderData_getInlineCode($this) {
    return $this.$inlineCode;
}
function oktsg_ShaderData_setInlineCode($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$inlineCode = $_set___;
}
function oktsg_ShaderData_getContainer($this) {
    return $this.$container;
}
function oktsg_ShaderData_setContainer($this, $_set___) {
    $this.$container = $_set___;
}
function oktsg_ShaderData_getConnectedTo($this) {
    return $this.$connectedToInternal;
}
function oktsg_ShaderData_getConnectedTo0(var$0) {
    return var$0.$getConnectedTo();
}
function oktsg_ShaderData__init_0($this) {
    jl_Object__init_0($this);
    $this.$scope = 2;
    $this.$inlineCode = $rt_s(6);
    $this.$connectedToInternal = ju_ArrayList__init_();
}
function oktsg_ShaderData_getRef($this) {
    return oktsg_IShaderData$DefaultImpls_getRef($this);
}
function oktsg_ShaderData_isUsed($this) {
    return oktsg_IShaderData$DefaultImpls_isUsed($this);
}
function oktsg_ShaderData_getTypeStr($this) {
    return oktsg_IShaderData$DefaultImpls_getTypeStr($this);
}
function oktsg_ShaderData_getTypedRef($this) {
    return oktsg_IShaderData$DefaultImpls_getTypedRef($this);
}
function oktsg_GLSLVec3Inline() {
    var a = this; oktsg_ShaderData.call(a);
    a.$x = 0.0;
    a.$y = 0.0;
    a.$z = 0.0;
    a.$name3 = null;
}
function oktsg_GLSLVec3Inline__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktsg_GLSLVec3Inline();
    oktsg_GLSLVec3Inline__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktsg_GLSLVec3Inline__init_1(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktsg_GLSLVec3Inline();
    oktsg_GLSLVec3Inline__init_2(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktsg_GLSLVec3Inline__init_3() {
    var var_0 = new oktsg_GLSLVec3Inline();
    oktsg_GLSLVec3Inline__init_4(var_0);
    return var_0;
}
function oktsg_GLSLVec3Inline_getInlineCode($this) {
    return oktsg_GLSLVec3Inline_asVec3($this);
}
function oktsg_GLSLVec3Inline_getType($this) {
    return 5;
}
function oktsg_GLSLVec3Inline_getScope($this) {
    return 0;
}
function oktsg_GLSLVec3Inline_asFloat($this) {
    return jl_String_valueOf0($this.$x);
}
function oktsg_GLSLVec3Inline_asVec2($this) {
    return jl_StringBuilder__init_().$append($rt_s(267)).$append11($this.$x).$append($rt_s(268)).$append11($this.$y).$append12(41).$toString();
}
function oktsg_GLSLVec3Inline_asVec3($this) {
    return jl_StringBuilder__init_().$append($rt_s(269)).$append11($this.$x).$append($rt_s(268)).$append11($this.$y).$append($rt_s(268)).$append11($this.$z).$append12(41).$toString();
}
function oktsg_GLSLVec3Inline_asVec4($this) {
    return jl_StringBuilder__init_().$append($rt_s(270)).$append11($this.$x).$append($rt_s(268)).$append11($this.$y).$append($rt_s(268)).$append11($this.$z).$append($rt_s(271)).$toString();
}
function oktsg_GLSLVec3Inline_getName($this) {
    return $this.$name3;
}
function oktsg_GLSLVec3Inline__init_0($this, $x, $y, $z, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktsg_ShaderData__init_0($this);
    $this.$x = $x;
    $this.$y = $y;
    $this.$z = $z;
    $this.$name3 = $name;
}
function oktsg_GLSLVec3Inline__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$5 & 1)
        var$1 = 0.0;
    if (var$5 & 2)
        var$2 = 0.0;
    if (var$5 & 4)
        var$3 = 0.0;
    if (var$5 & 8)
        var$4 = $rt_s(6);
    oktsg_GLSLVec3Inline__init_0(var$0, var$1, var$2, var$3, var$4);
}
function oktsg_GLSLVec3Inline__init_4(var$0) {
    oktsg_GLSLVec3Inline__init_2(var$0, 0.0, 0.0, 0.0, null, 15, null);
}
function oooi_DDestructible() {
    var a = this; jl_Object.call(a);
    a.$isDestructed = 0;
    a.$id = Long_ZERO;
}
var oooi_DDestructible_counter = Long_ZERO;
function oooi_DDestructible_$callClinit() {
    oooi_DDestructible_$callClinit = $rt_eraseClinit(oooi_DDestructible);
    oooi_DDestructible__clinit_();
}
function oooi_DDestructible__init_() {
    var var_0 = new oooi_DDestructible();
    oooi_DDestructible__init_0(var_0);
    return var_0;
}
function oooi_DDestructible__init_0($this) {
    var var$1;
    oooi_DDestructible_$callClinit();
    jl_Object__init_0($this);
    $this.$isDestructed = 0;
    var$1 = Long_add(oooi_DDestructible_counter, Long_fromInt(1));
    oooi_DDestructible_counter = var$1;
    $this.$id = var$1;
}
function oooi_DDestructible_DESTRUCTOR($this) {
    if ($this.$isDestructed) {
        jl_System_err().$println1($rt_s(272));
        jl_RuntimeException__init_0().$printStackTrace1();
    }
    $this.$isDestructed = 1;
}
function oooi_DDestructible__clinit_() {
    oooi_DDestructible_counter = Long_ZERO;
}
function oooi_DBase() {
    oooi_DDestructible.call(this);
}
function oooi_DBase__init_() {
    var var_0 = new oooi_DBase();
    oooi_DBase__init_0(var_0);
    return var_0;
}
function oooi_DBase__init_0($this) {
    oooi_DDestructible__init_0($this);
}
function ooo_DGeom() {
}
function oooi_DxGeom() {
    var a = this; oooi_DBase.call(a);
    a.$type0 = 0;
    a.$_gflags = 0;
    a.$_data = null;
    a.$body = null;
    a.$body_next = null;
    a.$_final_posr = null;
    a.$offset_posr = null;
    a.$_next = null;
    a.$_prev = null;
    a.$_next_ex = null;
    a.$parent_space = null;
    a.$_aabb = null;
    a.$category_bits = Long_ZERO;
    a.$collide_bits = Long_ZERO;
}
var oooi_DxGeom_OFFSET_POSITION_ZERO = null;
var oooi_DxGeom_OFFSET_ROTATION_ZERO = null;
var oooi_DxGeom_colliders = null;
var oooi_DxGeom_colliders_initialized = 0;
var oooi_DxGeom_LIBCCD = 0;
var oooi_DxGeom_dLIBCCD_BOX_CYL = 0;
var oooi_DxGeom_dLIBCCD_CYL_CYL = 0;
var oooi_DxGeom_dLIBCCD_CAP_CYL = 0;
var oooi_DxGeom_dLIBCCD_CONVEX_BOX = 0;
var oooi_DxGeom_dLIBCCD_CONVEX_CAP = 0;
var oooi_DxGeom_dLIBCCD_CONVEX_CYL = 0;
var oooi_DxGeom_dLIBCCD_CONVEX_SPHERE = 0;
var oooi_DxGeom_dLIBCCD_CONVEX_CONVEX = 0;
function oooi_DxGeom_$callClinit() {
    oooi_DxGeom_$callClinit = $rt_eraseClinit(oooi_DxGeom);
    oooi_DxGeom__clinit_();
}
function oooi_DxGeom__init_(var_0, var_1) {
    var var_2 = new oooi_DxGeom();
    oooi_DxGeom__init_0(var_2, var_0, var_1);
    return var_2;
}
function oooi_DxGeom_updateZeroSizedFlag($this, $is_zero_sized) {
    $this.$_gflags = !$is_zero_sized ? $this.$_gflags & (-33) : $this.$_gflags | 32;
}
function oooi_DxGeom_recomputePosr($this) {
    if ($this.$_gflags & 2) {
        $this.$computePosr();
        $this.$_gflags = $this.$_gflags & (-3);
    }
}
function oooi_DxGeom_recomputeAABB($this) {
    if ($this.$_gflags & 4) {
        $this.$recomputePosr();
        $this.$computeAABB();
        $this.$_gflags = $this.$_gflags & (-5);
    }
}
function oooi_DxGeom_setFlagDirtyAndBad($this) {
    $this.$_gflags = $this.$_gflags | 5;
}
function oooi_DxGeom_unsetFlagDirtyAndBad($this) {
    $this.$_gflags = $this.$_gflags & (-6);
}
function oooi_DxGeom_hasFlagDirty($this) {
    return !($this.$_gflags & 1) ? 0 : 1;
}
function oooi_DxGeom_getFlags($this) {
    return $this.$_gflags;
}
function oooi_DxGeom_setFlags($this, $flags) {
    $this.$_gflags = $flags;
}
function oooi_DxGeom_spaceAdd($this, $next, $parent) {
    $this.$_next = $next;
    if ($this.$_next !== null)
        $this.$_next.$_prev = $this;
    $this.$_prev = null;
    $parent.$setFirst($this);
}
function oooi_DxGeom_spaceRemove($this, $parent) {
    if ($this.$_next !== null)
        $this.$_next.$_prev = $this.$_prev;
    if ($this.$_prev === null)
        $parent.$setFirst($this.$_next);
    else
        $this.$_prev.$_next = $this.$_next;
}
function oooi_DxGeom_getNext($this) {
    return $this.$_next;
}
function oooi_DxGeom_bodyAdd($this, $b) {
    $this.$body = $b;
    $this.$body_next = $b.$geom;
    $b.$geom = $this;
}
function oooi_DxGeom__init_0($this, $space, $isPlaceable) {
    oooi_DxGeom_$callClinit();
    oooi_DBase__init_0($this);
    $this.$_next = null;
    $this.$_prev = null;
    $this.$_aabb = ooo_DAABB__init_();
    $this.$type0 = (-1);
    $this.$_gflags = 21;
    if ($isPlaceable)
        $this.$_gflags = $this.$_gflags | 8;
    $this.$_data = null;
    $this.$body = null;
    $this.$body_next = null;
    if (!$isPlaceable)
        $this.$_final_posr = null;
    else {
        $this.$_final_posr = oooi_DxGeom_dAllocPosr($this);
        oom_DVector3_setZero($this.$_final_posr.$pos2);
        oom_DMatrix3_setIdentity($this.$_final_posr.$Rw());
    }
    $this.$offset_posr = null;
    $this.$_next = null;
    $this.$_prev = null;
    $this.$_next_ex = null;
    $this.$parent_space = null;
    $this.$_aabb.$setZero();
    $this.$category_bits = Long_fromInt(-1);
    $this.$collide_bits = Long_fromInt(-1);
    if ($space !== null)
        $space.$dSpaceAdd($this);
}
function oooi_DxGeom_AABBTest($this, $o, $aabb) {
    return 1;
}
function oooi_DxGeom_bodyRemove($this) {
    var $last, $g, $g_0;
    if ($this.$body !== null) {
        $last = null;
        $g = $this.$body.$geom;
        a: {
            while (true) {
                if ($g === null)
                    break a;
                if ($g === $this)
                    break;
                $g_0 = $g.$body_next;
                $last = $g;
                $g = $g_0;
            }
            if ($last !== null)
                $last.$body_next = $g.$body_next;
            else
                $this.$body.$geom = $g.$body_next;
        }
        $this.$body = null;
        $this.$body_next = null;
    }
}
function oooi_DxGeom_computePosr($this) {
    ooo_OdeMath_dMultiply0_331($this.$_final_posr.$pos2, $this.$body.$posr().$R(), $this.$offset_posr.$pos());
    oom_DVector3_add($this.$_final_posr.$pos2, $this.$body.$posr().$pos());
    ooo_OdeMath_dMultiply0_333($this.$_final_posr.$Rw(), $this.$body.$posr().$R(), $this.$offset_posr.$R());
}
function oooi_DxGeom_dGeomGetBodyNext($this) {
    return $this.$body_next;
}
function oooi_DxGeom_dGeomSetData($this, $data) {
    $this.$_data = $data;
}
function oooi_DxGeom_dGeomGetData($this) {
    return $this.$_data;
}
function oooi_DxGeom_dGeomSetBody($this, $b) {
    oooi_Common_dUASSERT($b !== null && !($this.$_gflags & 8) ? 0 : 1, $rt_s(273));
    oooi_DxSpace_CHECK_NOT_LOCKED($this.$parent_space);
    if ($b !== null) {
        if ($this.$body === null)
            oooi_DxGeom_dFreePosr($this, $this.$_final_posr);
        if ($this.$body !== $b) {
            if ($this.$offset_posr !== null) {
                oooi_DxGeom_dFreePosr($this, $this.$offset_posr);
                $this.$offset_posr = null;
            }
            $this.$_final_posr = $b.$_posr;
            oooi_DxGeom_bodyRemove($this);
            oooi_DxGeom_bodyAdd($this, $b);
        }
        $this.$dGeomMoved();
    } else if ($this.$body !== null) {
        if ($this.$offset_posr !== null) {
            $this.$recomputePosr();
            oooi_DxGeom_dFreePosr($this, $this.$offset_posr);
            $this.$offset_posr = null;
        } else {
            $this.$_final_posr = oooi_Objects_H$DxPosR__init_();
            oom_DVector3_set($this.$_final_posr.$pos2, $this.$body.$posr().$pos());
            oom_DMatrix3_set($this.$_final_posr.$Rw(), $this.$body.$posr().$R());
        }
        oooi_DxGeom_bodyRemove($this);
    }
}
function oooi_DxGeom_dGeomGetBody($this) {
    return $this.$body;
}
function oooi_DxGeom_dGeomSetPosition($this, $xyz) {
    var $world_offset;
    oooi_Common_dUASSERT0($this.$_gflags & 8, $rt_s(273));
    oooi_DxSpace_CHECK_NOT_LOCKED($this.$parent_space);
    if ($this.$offset_posr === null) {
        if ($this.$body !== null)
            $this.$body.$dBodySetPosition($xyz);
        else {
            oom_DVector3_set($this.$_final_posr.$pos2, $xyz);
            $this.$dGeomMoved();
        }
    } else {
        $world_offset = oom_DVector3__init_();
        ooo_OdeMath_dMultiply0_331($world_offset, $this.$body.$posr().$R(), $this.$offset_posr.$pos());
        oom_DVector3_eqDiff($world_offset, $xyz, $world_offset);
        $this.$body.$dBodySetPosition($world_offset);
    }
}
function oooi_DxGeom_dGeomGetPosition($this) {
    oooi_Common_dUASSERT0($this.$_gflags & 8, $rt_s(273));
    $this.$recomputePosr();
    return $this.$_final_posr.$pos();
}
function oooi_DxGeom_dGeomGetRotation($this) {
    oooi_Common_dUASSERT0($this.$_gflags & 8, $rt_s(273));
    $this.$recomputePosr();
    return $this.$_final_posr.$R();
}
function oooi_DxGeom_getQuaternion($this) {
    var $quat;
    oooi_Common_dUASSERT0($this.$_gflags & 8, $rt_s(273));
    if ($this.$body !== null && $this.$offset_posr === null)
        return $this.$body.$dBodyGetQuaternion();
    $this.$recomputePosr();
    $quat = oom_DQuaternion__init_();
    oooi_Rotation_dQfromR($quat, $this.$_final_posr.$R());
    return $quat;
}
function oooi_DxGeom_getAABB($this) {
    $this.$recomputeAABB();
    return $this.$_aabb;
}
function oooi_DxGeom_dGeomGetClass($this) {
    return $this.$type0;
}
function oooi_DxGeom_dFinitUserClasses() {
    oooi_DxGeom_$callClinit();
}
function oooi_DxGeom_dGeomCreateOffset($this) {
    oooi_Common_dUASSERT0($this.$_gflags & 8, $rt_s(273));
    oooi_Common_dUASSERT1($this.$body, $rt_s(274));
    if ($this.$offset_posr !== null)
        return;
    oooi_Common_dIASSERT($this.$_final_posr !== $this.$body.$_posr ? 0 : 1);
    $this.$_final_posr = oooi_DxGeom_dAllocPosr($this);
    $this.$offset_posr = oooi_DxGeom_dAllocPosr($this);
    oom_DVector3_setZero($this.$offset_posr.$pos2);
    oom_DMatrix3_setIdentity($this.$offset_posr.$Rw());
    $this.$_gflags = $this.$_gflags | 2;
}
function oooi_DxGeom_dGeomSetOffsetRotation($this, $R) {
    oooi_Common_dUASSERT0($this.$_gflags & 8, $rt_s(273));
    oooi_Common_dUASSERT1($this.$body, $rt_s(274));
    oooi_DxSpace_CHECK_NOT_LOCKED($this.$parent_space);
    if ($this.$offset_posr === null)
        oooi_DxGeom_dGeomCreateOffset($this);
    oom_DMatrix3_set($this.$offset_posr.$Rw(), $R);
    $this.$dGeomMoved();
}
function oooi_DxGeom_dAllocPosr($this) {
    return oooi_Objects_H$DxPosR__init_();
}
function oooi_DxGeom_dFreePosr($this, $oldPosR) {
    return;
}
function oooi_DxGeom_dGeomMoved($geom) {
    var $geom_0, var$2;
    if ($geom.$offset_posr !== null)
        $geom.$_gflags = $geom.$_gflags | 2;
    $geom_0 = $geom.$parent_space;
    a: {
        while ($geom_0 !== null) {
            if ($geom.$_gflags & 1)
                break a;
            $geom_0.$CHECK_NOT_LOCKED0();
            $geom.$_gflags = $geom.$_gflags | 5;
            $geom_0.$dirty($geom);
            var$2 = $geom_0.$parent_space;
            $geom = $geom_0;
            $geom_0 = var$2;
        }
    }
    while ($geom !== null) {
        $geom.$_gflags = $geom.$_gflags | 5;
        oooi_DxSpace_CHECK_NOT_LOCKED($geom.$parent_space);
        $geom = $geom.$parent_space;
    }
}
function oooi_DxGeom_GEOM_ENABLED($this, $g) {
    return ($g.$_gflags & 48) != 16 ? 0 : 1;
}
function oooi_DxGeom_setCollider($i, $j, $fn) {
    oooi_DxGeom_$callClinit();
    if (oooi_DxGeom_colliders.data[$i].data[$j] === null)
        oooi_DxGeom_colliders.data[$i].data[$j] = oooi_DxGeom$dColliderEntry__init_(null);
    if (oooi_DxGeom_colliders.data[$j].data[$i] === null)
        oooi_DxGeom_colliders.data[$j].data[$i] = oooi_DxGeom$dColliderEntry__init_(null);
    if (oooi_DxGeom_colliders.data[$i].data[$j].$fn === null) {
        oooi_DxGeom_colliders.data[$i].data[$j].$fn = $fn;
        oooi_DxGeom_colliders.data[$i].data[$j].$reverse = 0;
    }
    if (oooi_DxGeom_colliders.data[$j].data[$i].$fn === null) {
        oooi_DxGeom_colliders.data[$j].data[$i].$fn = $fn;
        oooi_DxGeom_colliders.data[$j].data[$i].$reverse = 1;
    }
}
function oooi_DxGeom_dInitColliders() {
    var $i, $j;
    oooi_DxGeom_$callClinit();
    oooi_Common_dIASSERT(oooi_DxGeom_colliders_initialized ? 0 : 1);
    oooi_DxGeom_colliders_initialized = 1;
    $i = 0;
    while ($i < oooi_DxGeom_colliders.data.length) {
        oooi_DxGeom_colliders.data[$i] = $rt_createArray(oooi_DxGeom$dColliderEntry, 18);
        $j = 0;
        while ($j < oooi_DxGeom_colliders.data[$i].data.length) {
            oooi_DxGeom_colliders.data[$i].data[$j] = oooi_DxGeom$dColliderEntry__init_(null);
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    $i = 10;
    while ($i <= 14) {
        $j = 0;
        while ($j < 18) {
            oooi_DxGeom_setCollider($i, $j, oooi_CollideSpaceGeom__init_());
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    oooi_DxGeom_setCollider(0, 0, oooi_DxSphere$CollideSphereSphere__init_());
    oooi_DxGeom_setCollider(0, 1, oooi_DxSphere$CollideSphereBox__init_());
    oooi_DxGeom_setCollider(0, 4, oooi_DxSphere$CollideSpherePlane__init_());
    oooi_DxGeom_setCollider(1, 1, oooi_CollideBoxBox__init_());
    oooi_DxGeom_setCollider(1, 4, oooi_CollideBoxPlane__init_());
    oooi_DxGeom_setCollider(2, 0, oooi_DxCapsule$CollideCapsuleSphere__init_());
    oooi_DxGeom_setCollider(2, 1, oooi_DxCapsule$CollideCapsuleBox__init_());
    oooi_DxGeom_setCollider(2, 2, oooi_DxCapsule$CollideCapsuleCapsule__init_());
    oooi_DxGeom_setCollider(2, 4, oooi_DxCapsule$CollideCapsulePlane__init_());
    oooi_DxGeom_setCollider(5, 0, oooi_DxRay$CollideRaySphere__init_());
    oooi_DxGeom_setCollider(5, 1, oooi_DxRay$CollideRayBox__init_());
    oooi_DxGeom_setCollider(5, 2, oooi_DxRay$CollideRayCapsule__init_());
    oooi_DxGeom_setCollider(5, 4, oooi_DxRay$CollideRayPlane__init_());
    oooi_DxGeom_setCollider(5, 3, oooi_DxRay$CollideRayCylinder__init_());
    oooi_DxGeom_setCollider(8, 0, oooi_CollideTrimeshSphere__init_());
    oooi_DxGeom_setCollider(8, 1, oooi_CollideTrimeshBox__init_());
    oooi_DxGeom_setCollider(8, 5, oooi_CollideTrimeshRay__init_());
    oooi_DxGeom_setCollider(8, 8, oooi_CollideTrimeshTrimesh__init_());
    oooi_DxGeom_setCollider(8, 2, oooi_CollideTrimeshCCylinder__init_());
    oooi_DxGeom_setCollider(8, 4, oooi_CollideTrimeshPlane__init_());
    oooi_DxGeom_setCollider(3, 8, oooi_CollideCylinderTrimesh__init_());
    oooi_DxGeom_setCollider(6, 8, oooi_CollideConvexTrimesh__init_());
    if (!oooi_DxGeom_dLIBCCD_BOX_CYL)
        oooi_DxGeom_setCollider(3, 1, oooi_CollideCylinderBox__init_());
    else
        oooi_DxGeom_setCollider(1, 3, oooi_CollisionLibccd$CollideBoxCylinderCCD__init_());
    oooi_DxGeom_setCollider(3, 0, oooi_CollideCylinderSphere__init_());
    oooi_DxGeom_setCollider(3, 4, oooi_CollideCylinderPlane__init_());
    if (oooi_DxGeom_dLIBCCD_CYL_CYL)
        oooi_DxGeom_setCollider(3, 3, oooi_CollisionLibccd$CollideCylinderCylinder__init_());
    if (oooi_DxGeom_dLIBCCD_CAP_CYL)
        oooi_DxGeom_setCollider(2, 3, oooi_CollisionLibccd$CollideCapsuleCylinder__init_());
    if (!oooi_DxGeom_dLIBCCD_CONVEX_BOX)
        oooi_DxGeom_setCollider(6, 1, oooi_DxConvex$CollideConvexBox__init_());
    else
        oooi_DxGeom_setCollider(6, 1, oooi_CollisionLibccd$CollideConvexBoxCCD__init_());
    if (!oooi_DxGeom_dLIBCCD_CONVEX_CAP)
        oooi_DxGeom_setCollider(6, 2, oooi_DxConvex$CollideConvexCapsule__init_());
    else
        oooi_DxGeom_setCollider(6, 2, oooi_CollisionLibccd$CollideConvexCapsuleCCD__init_());
    if (oooi_DxGeom_dLIBCCD_CONVEX_CYL)
        oooi_DxGeom_setCollider(6, 3, oooi_CollisionLibccd$CollideConvexCylinderCCD__init_());
    if (!oooi_DxGeom_dLIBCCD_CONVEX_SPHERE)
        oooi_DxGeom_setCollider(0, 6, oooi_DxConvex$CollideSphereConvex__init_());
    else
        oooi_DxGeom_setCollider(6, 0, oooi_CollisionLibccd$CollideConvexSphereCCD__init_());
    if (!oooi_DxGeom_dLIBCCD_CONVEX_CONVEX)
        oooi_DxGeom_setCollider(6, 6, oooi_DxConvex$CollideConvexConvex__init_());
    else
        oooi_DxGeom_setCollider(6, 6, oooi_CollisionLibccd$CollideConvexConvexCCD__init_());
    oooi_DxGeom_setCollider(6, 4, oooi_DxConvex$CollideConvexPlane__init_());
    oooi_DxGeom_setCollider(5, 6, oooi_DxConvex$CollideRayConvex__init_());
    oooi_DxGeom_setCollider(9, 5, oooi_DxHeightfield$CollideHeightfield__init_());
    oooi_DxGeom_setCollider(9, 0, oooi_DxHeightfield$CollideHeightfield__init_());
    oooi_DxGeom_setCollider(9, 1, oooi_DxHeightfield$CollideHeightfield__init_());
    oooi_DxGeom_setCollider(9, 2, oooi_DxHeightfield$CollideHeightfield__init_());
    oooi_DxGeom_setCollider(9, 3, oooi_DxHeightfield$CollideHeightfield__init_());
    oooi_DxGeom_setCollider(9, 6, oooi_DxHeightfield$CollideHeightfield__init_());
    oooi_DxGeom_setCollider(9, 8, oooi_DxHeightfield$CollideHeightfield__init_());
}
function oooi_DxGeom_dFinitColliders() {
    oooi_DxGeom_$callClinit();
    oooi_DxGeom_colliders_initialized = 0;
}
function oooi_DxGeom_dCollide($o1, $o2, $flags, $contacts, $skip) {
    var var$6, var$7, $ce, $count, $i, $c, $tmp_0, $tmpint;
    oooi_DxGeom_$callClinit();
    var$6 = $rt_createArray(jl_Object, 1);
    var$6.data[0] = $contacts;
    oooi_Common_dAASSERT(var$6);
    oooi_Common_dUASSERT(oooi_DxGeom_colliders_initialized, $rt_s(275));
    oooi_Common_dUASSERT($o1.$type0 >= 0 && $o1.$type0 < 18 ? 1 : 0, $rt_s(276));
    oooi_Common_dUASSERT($o2.$type0 >= 0 && $o2.$type0 < 18 ? 1 : 0, $rt_s(277));
    var$7 = $flags & 65535;
    oooi_Common_dUASSERT(var$7 <= 0 ? 0 : 1, $rt_s(278));
    if (!var$7)
        return 0;
    if ($o1 === $o2)
        return 0;
    if ($o1.$body === $o2.$body && $o1.$body !== null)
        return 0;
    $o1.$recomputePosr();
    $o2.$recomputePosr();
    $ce = oooi_DxGeom_colliders.data[$o1.$type0].data[$o2.$type0];
    $count = 0;
    if ($ce.$fn !== null) {
        if (!$ce.$reverse)
            $count = $ce.$fn.$dColliderFn($o1, $o2, $flags, $contacts);
        else {
            $count = $ce.$fn.$dColliderFn($o2, $o1, $flags, $contacts);
            $i = 0;
            while ($i < $count) {
                $c = ooo_DContactGeomBuffer_get($contacts, $i);
                oom_DVector3_scale($c.$normal, (-1.0));
                $tmp_0 = $c.$g1;
                $c.$g1 = $c.$g2;
                $c.$g2 = $tmp_0;
                $tmpint = $c.$side1;
                $c.$side1 = $c.$side2;
                $c.$side2 = $tmpint;
                $i = $i + 1 | 0;
            }
        }
    }
    return $count;
}
function oooi_DxGeom_collideAABBs($g1, $g2, $data, $callback) {
    var $bounds1, $bounds2;
    oooi_DxGeom_$callClinit();
    oooi_Common_dIASSERT($g1.$_gflags & 4 ? 0 : 1);
    oooi_Common_dIASSERT($g2.$_gflags & 4 ? 0 : 1);
    if ($g1.$body === $g2.$body && $g1.$body !== null)
        return;
    if (!(Long_eq(Long_and($g1.$category_bits, $g2.$collide_bits), Long_ZERO) && Long_eq(Long_and($g2.$category_bits, $g1.$collide_bits), Long_ZERO) ? 0 : 1))
        return;
    $bounds1 = $g1.$_aabb;
    $bounds2 = $g2.$_aabb;
    if ($bounds1.$isDisjoint($bounds2))
        return;
    if (!$g1.$AABBTest($g2, $bounds2))
        return;
    if (!$g2.$AABBTest($g1, $bounds1))
        return;
    $callback.$call($data, $g1, $g2);
}
function oooi_DxGeom_final_posr($this) {
    return $this.$_final_posr;
}
function oooi_DxGeom_getClassID($this) {
    return oooi_DxGeom_dGeomGetClass($this);
}
function oooi_DxGeom_setData($this, $data) {
    $this.$dGeomSetData($data);
}
function oooi_DxGeom_getData($this) {
    return $this.$dGeomGetData();
}
function oooi_DxGeom_setBody($this, $b) {
    $this.$dGeomSetBody($b);
}
function oooi_DxGeom_getBody($this) {
    return oooi_DxGeom_dGeomGetBody($this);
}
function oooi_DxGeom_setPosition($this, $x, $y, $z) {
    oooi_DxGeom_dGeomSetPosition($this, oom_DVector3__init_1($x, $y, $z));
}
function oooi_DxGeom_getPosition($this) {
    return $this.$dGeomGetPosition();
}
function oooi_DxGeom_getRotation($this) {
    return $this.$dGeomGetRotation();
}
function oooi_DxGeom_setOffsetWorldRotation($this, $R) {
    $this.$dGeomSetOffsetRotation($R);
}
function oooi_DxGeom__clinit_() {
    oooi_DxGeom_OFFSET_POSITION_ZERO = oom_DVector3__init_1(0.0, 0.0, 0.0);
    oooi_DxGeom_OFFSET_ROTATION_ZERO = oom_DMatrix3__init_(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);
    oooi_DxGeom_colliders = $rt_createMultiArray($rt_arraycls($rt_arraycls(oooi_DxGeom$dColliderEntry)), [18, 18]);
    oooi_DxGeom_colliders_initialized = 0;
    oooi_DxGeom_LIBCCD = ooo_OdeConfig_isLibCCDEndabled();
    oooi_DxGeom_dLIBCCD_BOX_CYL = oooi_DxGeom_LIBCCD;
    oooi_DxGeom_dLIBCCD_CYL_CYL = oooi_DxGeom_LIBCCD;
    oooi_DxGeom_dLIBCCD_CAP_CYL = oooi_DxGeom_LIBCCD;
    oooi_DxGeom_dLIBCCD_CONVEX_BOX = oooi_DxGeom_LIBCCD;
    oooi_DxGeom_dLIBCCD_CONVEX_CAP = oooi_DxGeom_LIBCCD;
    oooi_DxGeom_dLIBCCD_CONVEX_CYL = oooi_DxGeom_LIBCCD;
    oooi_DxGeom_dLIBCCD_CONVEX_SPHERE = oooi_DxGeom_LIBCCD;
    oooi_DxGeom_dLIBCCD_CONVEX_CONVEX = oooi_DxGeom_LIBCCD;
}
function ooo_DBox() {
}
function oooi_DxBox() {
    oooi_DxGeom.call(this);
    this.$side = null;
}
function oooi_DxBox__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oooi_DxBox();
    oooi_DxBox__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oooi_DxBox__init_0($this, $space, $lx, $ly, $lz) {
    var var$5;
    oooi_DxGeom__init_0($this, $space, 1);
    $this.$side = oom_DVector3__init_();
    var$5 = $rt_compare($lx, 0.0);
    oooi_Common_dAASSERT0(var$5 >= 0 && $ly >= 0.0 && $lz >= 0.0 ? 1 : 0);
    $this.$type0 = 1;
    oom_DVector3_set0($this.$side, $lx, $ly, $lz);
    $this.$updateZeroSizedFlag(var$5 && $ly !== 0.0 && $lz !== 0.0 ? 0 : 1);
}
function oooi_DxBox_computeAABB($this) {
    var $R, $pos, var$3, $xrange, $yrange, var$6, $zrange, var$8, var$9, var$10, var$11, var$12;
    $R = $this.$final_posr().$R();
    $pos = $this.$final_posr().$pos();
    var$3 = oooi_Common_dFabs($R.$get00() * oom_DVector3_get0($this.$side));
    $xrange = 0.5 * (var$3 + oooi_Common_dFabs($R.$get010() * oom_DVector3_get1($this.$side)) + oooi_Common_dFabs($R.$get02() * oom_DVector3_get2($this.$side)));
    var$3 = oooi_Common_dFabs($R.$get100() * oom_DVector3_get0($this.$side));
    $yrange = 0.5 * (var$3 + oooi_Common_dFabs($R.$get11() * oom_DVector3_get1($this.$side)) + oooi_Common_dFabs($R.$get12() * oom_DVector3_get2($this.$side)));
    var$6 = oooi_Common_dFabs($R.$get200() * oom_DVector3_get0($this.$side));
    $zrange = 0.5 * (var$6 + oooi_Common_dFabs($R.$get21() * oom_DVector3_get1($this.$side)) + oooi_Common_dFabs($R.$get22() * oom_DVector3_get2($this.$side)));
    var$8 = $this.$_aabb;
    var$6 = $pos.$get01() - $xrange;
    var$3 = $pos.$get01() + $xrange;
    var$9 = $pos.$get10() - $yrange;
    var$10 = $pos.$get10() + $yrange;
    var$11 = $pos.$get20() - $zrange;
    var$12 = $pos.$get20() + $zrange;
    var$8.$set6(var$6, var$3, var$9, var$10, var$11, var$12);
}
function oooi_DxBox_dCreateBox($space, $lx, $ly, $lz) {
    return oooi_DxBox__init_($space, $lx, $ly, $lz);
}
function oooi_DxBox_dGeomBoxGetLengths($this, $result) {
    oom_DVector3_set($result, $this.$side);
}
function oooi_DxBox_intersectRectQuad($h, $p, $ret) {
    var $i, $nr, $buffer, $pos_q, $pos_r, $dir, var$10, $sign, var$12, var$13, var$14, var$15, var$16, var$17, var$18, $next_q, var$20, var$21, var$22, var$23;
    $i = 4;
    $nr = 0;
    $buffer = $rt_createDoubleArray(16);
    $pos_q = 0;
    $pos_r = 0;
    $dir = 0;
    var$10 = $ret;
    while ($dir <= 1) {
        $sign = (-1);
        while ($sign <= 1) {
            var$12 = 0;
            var$13 = $pos_r;
            while ($i > 0) {
                var$14 = $h.data;
                var$15 = $p.data;
                var$16 = $sign;
                var$17 = $pos_q + $dir | 0;
                if (var$16 * var$15[var$17] < var$14[$dir]) {
                    var$18 = var$10.data;
                    var$18[var$13] = var$15[$pos_q];
                    var$18[var$13 + 1 | 0] = var$15[$pos_q + 1 | 0];
                    var$13 = var$13 + 2 | 0;
                    var$12 = var$12 + 1 | 0;
                    if (var$12 & 8) {
                        if (var$10 !== $ret)
                            oooic_Cstring_memcpy($ret, 0, var$10, $pos_r, var$12 * 2 | 0);
                        return var$12;
                    }
                }
                $next_q = $i <= 1 ? 0 : $pos_q + 2 | 0;
                var$20 = var$16 * var$15[var$17] >= var$14[$dir] ? 0 : 1;
                var$21 = $next_q + $dir | 0;
                if (var$20 ^ (var$16 * var$15[var$21] >= var$14[$dir] ? 0 : 1)) {
                    var$18 = var$10.data;
                    var$22 = (var$13 + 1 | 0) - $dir | 0;
                    var$23 = ($pos_q + 1 | 0) - $dir | 0;
                    var$18[var$22] = var$15[var$23] + (var$15[($next_q + 1 | 0) - $dir | 0] - var$15[var$23]) / (var$15[var$21] - var$15[var$17]) * (var$16 * var$14[$dir] - var$15[var$17]);
                    var$18[var$13 + $dir | 0] = var$16 * var$14[$dir];
                    var$13 = var$13 + 2 | 0;
                    var$12 = var$12 + 1 | 0;
                    if (var$12 & 8) {
                        if (var$10 !== $ret)
                            oooic_Cstring_memcpy($ret, 0, var$10, $pos_r, var$12 * 2 | 0);
                        return var$12;
                    }
                }
                $pos_q = $pos_q + 2 | 0;
                $i = $i + (-1) | 0;
            }
            var$18 = var$10 !== $ret ? $ret : $buffer;
            $sign = $sign + 2 | 0;
            $nr = var$12;
            $p = var$10;
            $pos_q = $pos_r;
            var$10 = var$18;
            $pos_r = 0;
            $i = var$12;
        }
        $dir = $dir + 1 | 0;
    }
    if ($p !== $ret)
        oooic_Cstring_memcpy($ret, 0, $p, $pos_q, $nr * 2 | 0);
    return $nr;
}
function oooi_DxBox_cullPoints($n, $p, $m, $i0, $iretA) {
    var $iretP, var$7, $cx, $cy, $a, $i, var$12, var$13, var$14, var$15, var$16, var$17, $q, $A, var$20, $avail, var$22, $j, $maxdiff, $diff;
    $iretP = 0;
    if ($n == 1) {
        var$7 = $p.data;
        $cx = var$7[0];
        $cy = var$7[1];
    } else if ($n == 2) {
        var$7 = $p.data;
        $cx = 0.5 * (var$7[0] + var$7[2]);
        $cy = 0.5 * (var$7[1] + var$7[3]);
    } else {
        $a = 0.0;
        $cx = 0.0;
        $cy = 0.0;
        $i = 0;
        while ($i < ($n - 1 | 0)) {
            var$7 = $p.data;
            var$12 = $i * 2 | 0;
            var$13 = var$7[var$12];
            var$14 = var$12 + 3 | 0;
            var$13 = var$13 * var$7[var$14];
            var$15 = var$12 + 2 | 0;
            var$16 = var$7[var$15];
            var$17 = var$12 + 1 | 0;
            $q = var$13 - var$16 * var$7[var$17];
            $a = $a + $q;
            $cx = $cx + $q * (var$7[var$12] + var$7[var$15]);
            $cy = $cy + $q * (var$7[var$17] + var$7[var$14]);
            $i = $i + 1 | 0;
        }
        var$7 = $p.data;
        var$14 = $n * 2 | 0;
        var$15 = var$14 - 2 | 0;
        var$13 = var$7[var$15] * var$7[1];
        var$16 = var$7[0];
        var$14 = var$14 - 1 | 0;
        $q = var$13 - var$16 * var$7[var$14];
        var$16 = oooi_Common_dRecip(3.0 * ($a + $q));
        $cx = var$16 * ($cx + $q * (var$7[var$15] + var$7[0]));
        $cy = var$16 * ($cy + $q * (var$7[var$14] + var$7[1]));
    }
    $A = $rt_createDoubleArray(8);
    $i = 0;
    while ($i < $n) {
        var$20 = $A.data;
        var$7 = $p.data;
        var$12 = $i * 2 | 0;
        var$20[$i] = oooi_Common_dAtan2(var$7[var$12 + 1 | 0] - $cy, var$7[var$12] - $cx);
        $i = $i + 1 | 0;
    }
    $avail = $rt_createIntArray(8);
    var$14 = 0;
    while (var$14 < $n) {
        $avail.data[var$14] = 1;
        var$14 = var$14 + 1 | 0;
    }
    var$22 = $iretA.data;
    var$20 = $avail.data;
    var$20[$i0] = 0;
    var$22[$iretP] = $i0;
    var$15 = 1;
    $j = 1;
    while ($j < $m) {
        var$7 = $A.data;
        $a = $j * 6.283185307179586 / $m + var$7[$i0];
        if ($a > 3.141592653589793)
            $a = $a - 6.283185307179586;
        $maxdiff = 1.0E9;
        var$22[var$15] = $i0;
        var$12 = 0;
        while (var$12 < $n) {
            if (var$20[var$12]) {
                $diff = oooi_Common_dFabs(var$7[var$12] - $a);
                if ($diff > 3.141592653589793)
                    $diff = 6.283185307179586 - $diff;
                if ($diff < $maxdiff) {
                    var$22[var$15] = var$12;
                    $maxdiff = $diff;
                }
            }
            var$12 = var$12 + 1 | 0;
        }
        oooi_Common_dIASSERT(var$22[var$15] == $i0 ? 0 : 1);
        var$20[var$22[var$15]] = 0;
        var$15 = var$15 + 1 | 0;
        $j = $j + 1 | 0;
    }
}
function oooi_DxBox_TST1($expr1, $expr2, $norm_A, $norm_O, $cc, $tst1) {
    var $s2;
    $s2 = oooi_Common_dFabs($expr1) - $expr2;
    if ($s2 > 0.0)
        return 0;
    if ($s2 > $tst1.$_s) {
        $tst1.$_s = $s2;
        $tst1.$_normalR_M = $norm_A;
        $tst1.$_normalR_col = $norm_O;
        $tst1.$_invert_normal = $expr1 >= 0.0 ? 0 : 1;
        $tst1.$_code = $cc;
        if ($tst1.$_flags & (-2147483648)) {
            $tst1.$_break = 1;
            return 1;
        }
    }
    return 1;
}
function oooi_DxBox_TST2($expr1, $expr2, $n1, $n2, $n3, $cc, $tst2) {
    var $s2, $l, var$10;
    $s2 = oooi_Common_dFabs($expr1) - $expr2;
    if ($s2 > 0.0)
        return 0;
    $l = oooi_Common_dSqrt($n1 * $n1 + $n2 * $n2 + $n3 * $n3);
    if ($l > 0.0) {
        var$10 = $s2 / $l;
        if (var$10 * $tst2.$_fudge_factor > $tst2.$_s) {
            $tst2.$_s = var$10;
            $tst2.$_normalR_M = null;
            $tst2.$_normalR_col = 0;
            oom_DVector3_set0($tst2.$_normalC, $n1 / $l, $n2 / $l, $n3 / $l);
            $tst2.$_invert_normal = $expr1 >= 0.0 ? 0 : 1;
            $tst2.$_code = $cc;
            if ($tst2.$_flags & (-2147483648)) {
                $tst2.$_break = 1;
                return 1;
            }
        }
    }
    return 1;
}
function oooi_DxBox_dBoxBox($p1, $R1, $side1, $p2, $R2, $side2, $normal, $depth, $return_code, $flags, $contacts, $skip) {
    var $p, $pp, $Sb, $B, $R11, $R12, $R13, $R21, $R22, $R23, $R31, $R32, $R33, $Q11, $Q12, $Q13, $Q21, $Q22, $Q23, $Q31, $Q32, $Q33, $tst, $pa, $j, $sign, $i, $pb, var$41, $alpha, $beta, $ua, $ub, var$46, var$47, var$48, $Sb_0, $normal2, $nr, $anr, $a1, $a2, $lanr, $center, $codeN, $code1, $code2, $quad, var$61, $c1, $c2, $m11, $m12, $m21, $m22, $k1, $k2, $k3, $k4, var$72, var$73, $rect, $ret, $n, $point, $dep, $det1, var$80, var$81, $cnum, var$83, var$84, var$85, var$86, $maxc, $con, $i1, $maxdepth, $iret,
    var$92;
    $p = oom_DVector3__init_();
    $pp = oom_DVector3__init_();
    $Sb = oom_DVector3__init_();
    $B = oom_DVector3__init_();
    oom_DVector3_eqDiff($p, $p2, $p1);
    ooo_OdeMath_dMultiply1_331($pp, $R1, $p);
    oom_DVector3_scale(oom_DVector3_set($Sb, $side1), 0.5);
    oom_DVector3_scale(oom_DVector3_set($B, $side2), 0.5);
    $R11 = ooo_OdeMath_dCalcVectorDot3_44($R1, 0, $R2, 0);
    $R12 = ooo_OdeMath_dCalcVectorDot3_44($R1, 0, $R2, 1);
    $R13 = ooo_OdeMath_dCalcVectorDot3_44($R1, 0, $R2, 2);
    $R21 = ooo_OdeMath_dCalcVectorDot3_44($R1, 1, $R2, 0);
    $R22 = ooo_OdeMath_dCalcVectorDot3_44($R1, 1, $R2, 1);
    $R23 = ooo_OdeMath_dCalcVectorDot3_44($R1, 1, $R2, 2);
    $R31 = ooo_OdeMath_dCalcVectorDot3_44($R1, 2, $R2, 0);
    $R32 = ooo_OdeMath_dCalcVectorDot3_44($R1, 2, $R2, 1);
    $R33 = ooo_OdeMath_dCalcVectorDot3_44($R1, 2, $R2, 2);
    $Q11 = oooi_Common_dFabs($R11);
    $Q12 = oooi_Common_dFabs($R12);
    $Q13 = oooi_Common_dFabs($R13);
    $Q21 = oooi_Common_dFabs($R21);
    $Q22 = oooi_Common_dFabs($R22);
    $Q23 = oooi_Common_dFabs($R23);
    $Q31 = oooi_Common_dFabs($R31);
    $Q32 = oooi_Common_dFabs($R32);
    $Q33 = oooi_Common_dFabs($R33);
    $tst = oooi_DxBox$TstClass__init_($flags, 1.05);
    $tst.$_s = (-Infinity);
    $tst.$_invert_normal = 0;
    $tst.$_code = 0;
    if (!oooi_DxBox_TST1(oom_DVector3_get0($pp), oom_DVector3_get0($Sb) + oom_DVector3_get0($B) * $Q11 + oom_DVector3_get1($B) * $Q12 + oom_DVector3_get2($B) * $Q13, $R1, 0, 1, $tst))
        return 0;
    a: {
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST1(oom_DVector3_get1($pp), oom_DVector3_get1($Sb) + oom_DVector3_get0($B) * $Q21 + oom_DVector3_get1($B) * $Q22 + oom_DVector3_get2($B) * $Q23, $R1, 1, 2, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST1(oom_DVector3_get2($pp), oom_DVector3_get2($Sb) + oom_DVector3_get0($B) * $Q31 + oom_DVector3_get1($B) * $Q32 + oom_DVector3_get2($B) * $Q33, $R1, 2, 3, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST1(ooo_OdeMath_dCalcVectorDot3_41($R2, 0, $p), oom_DVector3_get0($Sb) * $Q11 + oom_DVector3_get1($Sb) * $Q21 + oom_DVector3_get2($Sb) * $Q31 + oom_DVector3_get0($B), $R2, 0, 4, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST1(ooo_OdeMath_dCalcVectorDot3_41($R2, 1, $p), oom_DVector3_get0($Sb) * $Q12 + oom_DVector3_get1($Sb) * $Q22 + oom_DVector3_get2($Sb) * $Q32 + oom_DVector3_get1($B), $R2, 1, 5, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST1(ooo_OdeMath_dCalcVectorDot3_41($R2, 2, $p), oom_DVector3_get0($Sb) * $Q13 + oom_DVector3_get1($Sb) * $Q23 + oom_DVector3_get2($Sb) * $Q33 + oom_DVector3_get2($B), $R2, 2, 6, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST2(oom_DVector3_get2($pp) * $R21 - oom_DVector3_get1($pp) * $R31, oom_DVector3_get1($Sb) * $Q31 + oom_DVector3_get2($Sb) * $Q21 + oom_DVector3_get1($B) * $Q13 + oom_DVector3_get2($B) * $Q12, 0.0,  -$R31, $R21, 7, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST2(oom_DVector3_get2($pp) * $R22 - oom_DVector3_get1($pp) * $R32, oom_DVector3_get1($Sb) * $Q32 + oom_DVector3_get2($Sb) * $Q22 + oom_DVector3_get0($B) * $Q13 + oom_DVector3_get2($B) * $Q11, 0.0,  -$R32, $R22, 8, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST2(oom_DVector3_get2($pp) * $R23 - oom_DVector3_get1($pp) * $R33, oom_DVector3_get1($Sb) * $Q33 + oom_DVector3_get2($Sb) * $Q23 + oom_DVector3_get0($B) * $Q12 + oom_DVector3_get1($B) * $Q11, 0.0,  -$R33, $R23, 9, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST2(oom_DVector3_get0($pp) * $R31 - oom_DVector3_get2($pp) * $R11, oom_DVector3_get0($Sb) * $Q31 + oom_DVector3_get2($Sb) * $Q11 + oom_DVector3_get1($B) * $Q23 + oom_DVector3_get2($B) * $Q22, $R31, 0.0,  -$R11, 10, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST2(oom_DVector3_get0($pp) * $R32 - oom_DVector3_get2($pp) * $R12, oom_DVector3_get0($Sb) * $Q32 + oom_DVector3_get2($Sb) * $Q12 + oom_DVector3_get0($B) * $Q23 + oom_DVector3_get2($B) * $Q21, $R32, 0.0,  -$R12, 11, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST2(oom_DVector3_get0($pp) * $R33 - oom_DVector3_get2($pp) * $R13, oom_DVector3_get0($Sb) * $Q33 + oom_DVector3_get2($Sb) * $Q13 + oom_DVector3_get0($B) * $Q22 + oom_DVector3_get1($B) * $Q21, $R33, 0.0,  -$R13, 12, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST2(oom_DVector3_get1($pp) * $R11 - oom_DVector3_get0($pp) * $R21, oom_DVector3_get0($Sb) * $Q21 + oom_DVector3_get1($Sb) * $Q11 + oom_DVector3_get1($B) * $Q33 + oom_DVector3_get2($B) * $Q32,  -$R21, $R11, 0.0, 13, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST2(oom_DVector3_get1($pp) * $R12 - oom_DVector3_get0($pp) * $R22, oom_DVector3_get0($Sb) * $Q22 + oom_DVector3_get1($Sb) * $Q12 + oom_DVector3_get0($B) * $Q33 + oom_DVector3_get2($B) * $Q31,  -$R22, $R12, 0.0, 14, $tst))
            return 0;
        if ($tst.$_break)
            break a;
        if (!oooi_DxBox_TST2(oom_DVector3_get1($pp) * $R13 - oom_DVector3_get0($pp) * $R23, oom_DVector3_get0($Sb) * $Q23 + oom_DVector3_get1($Sb) * $Q13 + oom_DVector3_get0($B) * $Q32 + oom_DVector3_get1($B) * $Q31,  -$R23, $R13, 0.0, 15, $tst))
            return 0;
        if ($tst.$_break) {
        }
    }
    if (!$tst.$_code)
        return 0;
    if ($tst.$_normalR_M === null)
        ooo_OdeMath_dMultiply0_331($normal, $R1, $tst.$_normalC);
    else
        oom_DVector3_set1($normal, $tst.$_normalR_M.$viewCol($tst.$_normalR_col));
    if ($tst.$_invert_normal)
        oom_DVector3_scale($normal, (-1.0));
    oooicj_RefDouble_set($depth,  -$tst.$_s);
    if ($tst.$_code > 6) {
        $pa = oom_DVector3__init_0($p1);
        $j = 0;
        while ($j < 3) {
            $sign = ooo_OdeMath_dCalcVectorDot3_14($normal, $R1, $j) <= 0.0 ? (-1.0) : 1.0;
            $i = 0;
            while ($i < 3) {
                oom_DVector3_add0($pa, $i, $sign * oom_DVector3_get($Sb, $j) * $R1.$get6($i, $j));
                $i = $i + 1 | 0;
            }
            $j = $j + 1 | 0;
        }
        $pb = oom_DVector3__init_0($p2);
        var$41 = 0;
        while (var$41 < 3) {
            $sign = ooo_OdeMath_dCalcVectorDot3_14($normal, $R2, var$41) <= 0.0 ? 1.0 : (-1.0);
            $i = 0;
            while ($i < 3) {
                oom_DVector3_add0($pb, $i, $sign * oom_DVector3_get($B, var$41) * $R2.$get6($i, var$41));
                $i = $i + 1 | 0;
            }
            var$41 = var$41 + 1 | 0;
        }
        $alpha = oooicj_RefDouble__init_(0.0);
        $beta = oooicj_RefDouble__init_(0.0);
        $ua = oom_DVector3__init_();
        $ub = oom_DVector3__init_();
        $i = 0;
        while ($i < 3) {
            oom_DVector3_set2($ua, $i, $R1.$get6($i, ($tst.$_code - 7 | 0) / 3 | 0));
            $i = $i + 1 | 0;
        }
        var$46 = 0;
        while (var$46 < 3) {
            oom_DVector3_set2($ub, var$46, $R2.$get6(var$46, ($tst.$_code - 7 | 0) % 3 | 0));
            var$46 = var$46 + 1 | 0;
        }
        oooi_DxCollisionUtil_dLineClosestApproach($pa, $ua, $pb, $ub, $alpha, $beta);
        oom_DVector3_eqSum0($pa, $pa, $ua, oooicj_RefDouble_get($alpha));
        oom_DVector3_eqSum0($pb, $pb, $ub, oooicj_RefDouble_get($beta));
        oom_DVector3_scale(oom_DVector3_eqSum1(ooo_DContactGeomBuffer_get($contacts, 0).$pos0, $pa, $pb), 0.5);
        ooo_DContactGeomBuffer_get($contacts, 0).$depth = oooicj_RefDouble_get($depth);
        oooicj_RefInt_set($return_code, $tst.$_code);
        return 1;
    }
    if ($tst.$_code <= 3) {
        var$47 = $R2;
        var$48 = $p2;
        $Sb_0 = $B;
        $R2 = $R1;
        $R1 = var$47;
        $p2 = $p1;
        $p1 = var$48;
        $B = $Sb;
        $Sb = $Sb_0;
    }
    $normal2 = oom_DVector3__init_();
    $nr = oom_DVector3__init_();
    $anr = oom_DVector3__init_();
    if ($tst.$_code <= 3)
        oom_DVector3_set($normal2, $normal);
    else
        oom_DVector3_scale(oom_DVector3_set($normal2, $normal), (-1.0));
    ooo_OdeMath_dMultiply1_331($nr, $R1, $normal2);
    oom_DVector3_eqAbs(oom_DVector3_set($anr, $nr));
    if (oom_DVector3_get1($anr) <= oom_DVector3_get0($anr)) {
        if (oom_DVector3_get0($anr) <= oom_DVector3_get2($anr)) {
            $a1 = 0;
            $a2 = 1;
            $lanr = 2;
        } else {
            $lanr = 0;
            $a1 = 1;
            $a2 = 2;
        }
    } else if (oom_DVector3_get1($anr) <= oom_DVector3_get2($anr)) {
        $a1 = 0;
        $a2 = 1;
        $lanr = 2;
    } else {
        $a1 = 0;
        $lanr = 1;
        $a2 = 2;
    }
    b: {
        $center = oom_DVector3__init_();
        if (oom_DVector3_get($nr, $lanr) >= 0.0) {
            $i = 0;
            while (true) {
                if ($i >= 3)
                    break b;
                oom_DVector3_set2($center, $i, $p1.$get5($i) - $p2.$get5($i) - $Sb.$get5($lanr) * $R1.$get6($i, $lanr));
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while (true) {
            if ($i >= 3)
                break b;
            oom_DVector3_set2($center, $i, $p1.$get5($i) - $p2.$get5($i) + $Sb.$get5($lanr) * $R1.$get6($i, $lanr));
            $i = $i + 1 | 0;
        }
    }
    $codeN = $tst.$_code > 3 ? $tst.$_code - 4 | 0 : $tst.$_code - 1 | 0;
    if (!$codeN) {
        $code1 = 1;
        $code2 = 2;
    } else if ($codeN != 1) {
        $code1 = 0;
        $code2 = 1;
    } else {
        $code1 = 0;
        $code2 = 2;
    }
    $quad = $rt_createDoubleArray(8);
    var$61 = $quad.data;
    $c1 = ooo_OdeMath_dCalcVectorDot3_14($center, $R2, $code1);
    $c2 = ooo_OdeMath_dCalcVectorDot3_14($center, $R2, $code2);
    $m11 = ooo_OdeMath_dCalcVectorDot3_44($R2, $code1, $R1, $a1);
    $m12 = ooo_OdeMath_dCalcVectorDot3_44($R2, $code1, $R1, $a2);
    $m21 = ooo_OdeMath_dCalcVectorDot3_44($R2, $code2, $R1, $a1);
    $m22 = ooo_OdeMath_dCalcVectorDot3_44($R2, $code2, $R1, $a2);
    $k1 = $m11 * $Sb.$get5($a1);
    $k2 = $m21 * $Sb.$get5($a1);
    $k3 = $m12 * $Sb.$get5($a2);
    $k4 = $m22 * $Sb.$get5($a2);
    var$72 = $c1 - $k1;
    var$61[0] = var$72 - $k3;
    var$73 = $c2 - $k2;
    var$61[1] = var$73 - $k4;
    var$61[2] = var$72 + $k3;
    var$61[3] = var$73 + $k4;
    var$72 = $c1 + $k1;
    var$61[4] = var$72 + $k3;
    var$73 = $c2 + $k2;
    var$61[5] = var$73 + $k4;
    var$61[6] = var$72 - $k3;
    var$61[7] = var$73 - $k4;
    $rect = $rt_createDoubleArray(2);
    var$61 = $rect.data;
    var$61[0] = $B.$get5($code1);
    var$61[1] = $B.$get5($code2);
    $ret = $rt_createDoubleArray(16);
    $n = oooi_DxBox_intersectRectQuad($rect, $quad, $ret);
    if ($n < 1)
        return 0;
    $point = $rt_createDoubleArray(24);
    $dep = $rt_createDoubleArray(8);
    $det1 = oooi_Common_dRecip($m11 * $m22 - $m12 * $m21);
    var$72 = $m11 * $det1;
    var$73 = $m12 * $det1;
    var$80 = $m21 * $det1;
    var$81 = $m22 * $det1;
    $cnum = 0;
    $j = 0;
    c: {
        while ($j < $n) {
            var$61 = $ret.data;
            var$83 = $j * 2 | 0;
            var$84 = var$81 * (var$61[var$83] - $c1);
            var$41 = var$83 + 1 | 0;
            $k1 = var$84 - var$73 * (var$61[var$41] - $c2);
            $k2 =  -var$80 * (var$61[var$83] - $c1) + var$72 * (var$61[var$41] - $c2);
            var$46 = 0;
            while (var$46 < 3) {
                var$85 = $point.data;
                var$86 = ($cnum * 3 | 0) + var$46 | 0;
                var$85[var$86] = oom_DVector3_get($center, var$46) + $k1 * $R1.$get6(var$46, $a1) + $k2 * $R1.$get6(var$46, $a2);
                var$46 = var$46 + 1 | 0;
            }
            var$85 = $dep.data;
            var$85[$cnum] = $B.$get5($codeN) - ooo_OdeMath_dCalcVectorDot30($normal2, $point, $cnum * 3 | 0);
            if (var$85[$cnum] >= 0.0) {
                var$46 = $cnum * 2 | 0;
                var$61[var$46] = var$61[var$83];
                var$61[var$46 + 1 | 0] = var$61[var$41];
                $cnum = $cnum + 1 | 0;
                if (($cnum | (-2147483648)) == ($flags & (-2147418113)))
                    break c;
            }
            $j = $j + 1 | 0;
        }
    }
    if ($cnum < 1)
        return 0;
    $maxc = $flags & 65535;
    if ($maxc > $cnum)
        $maxc = $cnum;
    if ($maxc < 1)
        $maxc = 1;
    if ($cnum <= $maxc) {
        var$83 = 0;
        while (var$83 < $cnum) {
            $con = ooo_DContactGeomBuffer_get($contacts, $rt_imul($skip, var$83));
            var$41 = 0;
            while (var$41 < 3) {
                var$61 = $point.data;
                oom_DVector3_set2($con.$pos0, var$41, var$61[(var$83 * 3 | 0) + var$41 | 0] + $p2.$get5(var$41));
                var$41 = var$41 + 1 | 0;
            }
            $con.$depth = $dep.data[var$83];
            var$83 = var$83 + 1 | 0;
        }
        $maxc = $cnum;
    } else {
        var$83 = 0 != ($flags & (-2147483648)) ? 0 : 1;
        var$61 = $dep.data;
        oooi_Common_dIASSERT(var$83);
        $i1 = 0;
        $maxdepth = var$61[0];
        var$83 = 1;
        while (var$83 < $cnum) {
            if (var$61[var$83] > $maxdepth) {
                $maxdepth = var$61[var$83];
                $i1 = var$83;
            }
            var$83 = var$83 + 1 | 0;
        }
        $iret = $rt_createIntArray(8);
        oooi_DxBox_cullPoints($cnum, $ret, $maxc, $i1, $iret);
        var$83 = 0;
        while (var$83 < $maxc) {
            $con = ooo_DContactGeomBuffer_get($contacts, $rt_imul($skip, var$83));
            var$41 = 0;
            while (var$41 < 3) {
                var$92 = $point.data;
                var$85 = $iret.data;
                oom_DVector3_set2($con.$pos0, var$41, var$92[(var$85[var$83] * 3 | 0) + var$41 | 0] + $p2.$get5(var$41));
                var$41 = var$41 + 1 | 0;
            }
            $con.$depth = var$61[$iret.data[var$83]];
            var$83 = var$83 + 1 | 0;
        }
    }
    oooicj_RefInt_set($return_code, $tst.$_code);
    return $maxc;
}
function oooi_DxBox_getLengths($this, $result) {
    $this.$dGeomBoxGetLengths($result);
}
function oooi_DxBox_getLengths0($this) {
    return $this.$side;
}
function kt_CharsKt__CharJVMKt() {
    jl_Object.call(this);
}
function kt_CharsKt__CharJVMKt__init_() {
    var var_0 = new kt_CharsKt__CharJVMKt();
    kt_CharsKt__CharJVMKt__init_0(var_0);
    return var_0;
}
function kt_CharsKt__CharJVMKt__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function kt_CharsKt__CharKt() {
    kt_CharsKt__CharJVMKt.call(this);
}
function kt_CharsKt__CharKt__init_() {
    var var_0 = new kt_CharsKt__CharKt();
    kt_CharsKt__CharKt__init_0(var_0);
    return var_0;
}
function kt_CharsKt__CharKt_equals($$this$equals, $other, $ignoreCase) {
    if ($$this$equals == $other)
        return 1;
    if (!$ignoreCase)
        return 0;
    if (jl_Character_toUpperCase($$this$equals) == jl_Character_toUpperCase($other))
        return 1;
    if (jl_Character_toLowerCase($$this$equals) != jl_Character_toLowerCase($other))
        return 0;
    return 1;
}
function kt_CharsKt__CharKt__init_0(var$0) {
    kt_CharsKt__CharJVMKt__init_0(var$0);
}
function ooo_DTriMesh() {
}
function oooi_DxTriMesh() {
    var a = this; oooi_DxGeom.call(a);
    a.$Callback = null;
    a.$ArrayCallback = null;
    a.$RayCallback = null;
    a.$TriMergeCallback = null;
    a.$doSphereTC = 0;
    a.$doBoxTC = 0;
    a.$doCapsuleTC = 0;
}
function oooi_DxTriMesh__init_(var_0) {
    var var_1 = new oooi_DxTriMesh();
    oooi_DxTriMesh__init_0(var_1, var_0);
    return var_1;
}
function oooi_DxTriMesh__init_0($this, $space) {
    oooi_DxGeom__init_0($this, $space, 1);
    $this.$type0 = 8;
}
function oooi_DxTriMesh_dCreateTriMesh($space, $Data, $Callback, $ArrayCallback, $RayCallback) {
    var var$6, $Geom;
    a: {
        oooi_DxTriMesh$1_$callClinit();
        var$6 = oooi_DxTriMesh$1_$SwitchMap$org$ode4j$ode$OdeConfig$TRIMESH.data;
        ooo_OdeConfig_$callClinit();
        switch (var$6[jl_Enum_ordinal(ooo_OdeConfig_dTRIMESH_TYPE)]) {
            case 1:
                $Geom = oooi_DxTriMeshDisabled__init_($space, $Data);
                break a;
            case 2:
                $Geom = oooi_DxGimpact__init_($space, $Data);
                break a;
            default:
        }
        $rt_throw(jl_IllegalArgumentException__init_(jl_Enum_name(ooo_OdeConfig_dTRIMESH_TYPE)));
    }
    $Geom.$Callback = $Callback;
    $Geom.$ArrayCallback = $ArrayCallback;
    $Geom.$RayCallback = $RayCallback;
    return $Geom;
}
function oooi_DxTriMeshDisabled() {
    oooi_DxTriMesh.call(this);
}
function oooi_DxTriMeshDisabled__init_(var_0, var_1) {
    var var_2 = new oooi_DxTriMeshDisabled();
    oooi_DxTriMeshDisabled__init_0(var_2, var_0, var_1);
    return var_2;
}
function oooi_DxTriMeshDisabled__init_0($this, $space, $data) {
    oooi_DxTriMesh__init_0($this, $space);
    $this.$type0 = 8;
}
function oooi_DxTriMeshDisabled_computeAABB($this) {
    $this.$_aabb.$setZero();
}
function oooi_DxTriMeshDisabled_FetchTransformedTriangle($this, $i, $v) {
    return;
}
function oooi_DxTriMeshDisabled_FetchTriangleCount($this) {
    return 0;
}
function oooi_DxTriMeshDisabled_getEdgeAngle($this, $triangle, $edge) {
    return 6.2831854820251465;
}
function otp_PlatformRunnable() {
}
function jl_Object$monitorEnterWait$lambda$_6_0() {
    var a = this; jl_Object.call(a);
    a.$_0 = null;
    a.$_1 = null;
    a.$_2 = 0;
    a.$_3 = null;
}
function jl_Object$monitorEnterWait$lambda$_6_0__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jl_Object$monitorEnterWait$lambda$_6_0();
    jl_Object$monitorEnterWait$lambda$_6_0__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jl_Object$monitorEnterWait$lambda$_6_0__init_0(var$0, var$1, var$2, var$3, var$4) {
    jl_Object__init_0(var$0);
    var$0.$_0 = var$1;
    var$0.$_1 = var$2;
    var$0.$_2 = var$3;
    var$0.$_3 = var$4;
}
function jl_Object$monitorEnterWait$lambda$_6_0_run(var$0) {
    jl_Object_lambda$monitorEnterWait$0(var$0.$_0, var$0.$_1, var$0.$_2, var$0.$_3);
}
function okti_IImg() {
}
function okti_IMG() {
    jl_Object.call(this);
}
var okti_IMG_api = null;
var okti_IMG_INSTANCE = null;
function okti_IMG_$callClinit() {
    okti_IMG_$callClinit = $rt_eraseClinit(okti_IMG);
    okti_IMG__clinit_();
}
function okti_IMG__init_() {
    var var_0 = new okti_IMG();
    okti_IMG__init_0(var_0);
    return var_0;
}
function okti_IMG_setApi($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    okti_IMG_api = $_set___;
}
function okti_IMG_createImage($this) {
    var var$1;
    var$1 = okti_IMG_api;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$1.$createImage();
}
function okti_IMG_load($this, $url, $out, $sourceLocation, $response) {
    var var$5;
    kji_Intrinsics_checkParameterIsNotNull($url, $rt_s(280));
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    kji_Intrinsics_checkParameterIsNotNull($response, $rt_s(281));
    var$5 = okti_IMG_api;
    if (var$5 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$5.$load($url, $out, $sourceLocation, $response);
}
function okti_IMG_load0($this, $file, $out, $response) {
    var var$4;
    kji_Intrinsics_checkParameterIsNotNull($file, $rt_s(282));
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    kji_Intrinsics_checkParameterIsNotNull($response, $rt_s(281));
    var$4 = okti_IMG_api;
    if (var$4 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$4.$load0($file, $out, $response);
}
function okti_IMG__init_0($this) {
    okti_IMG_$callClinit();
    jl_Object__init_0($this);
}
function okti_IMG__clinit_() {
    okti_IMG_INSTANCE = okti_IMG__init_();
}
function jur_AbstractCharClass$LazyAlnum() {
    jur_AbstractCharClass$LazyAlpha.call(this);
}
function jur_AbstractCharClass$LazyAlnum__init_() {
    var var_0 = new jur_AbstractCharClass$LazyAlnum();
    jur_AbstractCharClass$LazyAlnum__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyAlnum__init_0($this) {
    jur_AbstractCharClass$LazyAlpha__init_0($this);
}
function jur_AbstractCharClass$LazyAlnum_computeValue($this) {
    return jur_AbstractCharClass$LazyAlpha_computeValue($this).$add0(48, 57);
}
function jur_AbstractCharClass$LazyGraph() {
    jur_AbstractCharClass$LazyAlnum.call(this);
}
function jur_AbstractCharClass$LazyGraph__init_() {
    var var_0 = new jur_AbstractCharClass$LazyGraph();
    jur_AbstractCharClass$LazyGraph__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyGraph__init_0($this) {
    jur_AbstractCharClass$LazyAlnum__init_0($this);
}
function jur_AbstractCharClass$LazyGraph_computeValue($this) {
    return jur_AbstractCharClass$LazyAlnum_computeValue($this).$add0(33, 64).$add0(91, 96).$add0(123, 126);
}
function jur_AbstractCharClass$LazyPrint() {
    jur_AbstractCharClass$LazyGraph.call(this);
}
function jur_AbstractCharClass$LazyPrint__init_() {
    var var_0 = new jur_AbstractCharClass$LazyPrint();
    jur_AbstractCharClass$LazyPrint__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyPrint__init_0($this) {
    jur_AbstractCharClass$LazyGraph__init_0($this);
}
function jur_AbstractCharClass$LazyPrint_computeValue($this) {
    return jur_AbstractCharClass$LazyGraph_computeValue($this).$add(32);
}
function ooo_OdeConstants() {
    jl_Object.call(this);
}
function ooo_OdeConstants__init_() {
    var var_0 = new ooo_OdeConstants();
    ooo_OdeConstants__init_0(var_0);
    return var_0;
}
function ooo_OdeConstants__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_ErrorHandler() {
    ooo_OdeConstants.call(this);
}
function oooi_ErrorHandler_dDebug($num, $msg, $ap) {
    oooi_ErrorHdl_dDebug($num, $msg, $ap);
}
function oooi_ErrorHandler_dMessage($num, $msg, $ap) {
    oooi_ErrorHdl_dMessage($num, $msg, $ap);
}
function oooij_DxJointNode() {
    var a = this; jl_Object.call(a);
    a.$joint = null;
    a.$body0 = null;
    a.$next2 = null;
}
function oooij_DxJointNode__init_() {
    var var_0 = new oooij_DxJointNode();
    oooij_DxJointNode__init_0(var_0);
    return var_0;
}
function oooij_DxJointNode__init_0($this) {
    jl_Object__init_0($this);
}
function oktm_IMat4$Companion() {
    jl_Object.call(this);
}
var oktm_IMat4$Companion_Cap = null;
var oktm_IMat4$Companion_Build = null;
var oktm_IMat4$Companion_tmp = null;
var oktm_IMat4$Companion_tmp2 = null;
var oktm_IMat4$Companion_quat = null;
var oktm_IMat4$Companion_quat2 = null;
var oktm_IMat4$Companion_tmpV1 = null;
var oktm_IMat4$Companion_tmpV2Right = null;
var oktm_IMat4$Companion_tmpV3Forward = null;
var oktm_IMat4$Companion_tmpV4Up = null;
var oktm_IMat4$Companion_$$INSTANCE = null;
function oktm_IMat4$Companion_$callClinit() {
    oktm_IMat4$Companion_$callClinit = $rt_eraseClinit(oktm_IMat4$Companion);
    oktm_IMat4$Companion__clinit_();
}
function oktm_IMat4$Companion__init_() {
    var var_0 = new oktm_IMat4$Companion();
    oktm_IMat4$Companion__init_0(var_0);
    return var_0;
}
function oktm_IMat4$Companion_getCap($this) {
    return oktm_IMat4$Companion_Cap;
}
function oktm_IMat4$Companion_getBuild($this) {
    return oktm_IMat4$Companion_Build;
}
function oktm_IMat4$Companion_getQuat($this) {
    return oktm_IMat4$Companion_quat;
}
function oktm_IMat4$Companion_getTmpV1($this) {
    return oktm_IMat4$Companion_tmpV1;
}
function oktm_IMat4$Companion_getTmpV2Right($this) {
    return oktm_IMat4$Companion_tmpV2Right;
}
function oktm_IMat4$Companion_getTmpV3Forward($this) {
    return oktm_IMat4$Companion_tmpV3Forward;
}
function oktm_IMat4$Companion_mul($this, $mata, $matb) {
    var var$3, var$4, $i, var$6;
    var$3 = $matb.data;
    var$4 = $mata.data;
    kji_Intrinsics_checkParameterIsNotNull($mata, $rt_s(283));
    kji_Intrinsics_checkParameterIsNotNull($matb, $rt_s(284));
    oktm_IMat4$Companion_tmp2.data[0] = var$4[0] * var$3[0] + var$4[4] * var$3[1] + var$4[8] * var$3[2] + var$4[12] * var$3[3];
    oktm_IMat4$Companion_tmp2.data[4] = var$4[0] * var$3[4] + var$4[4] * var$3[5] + var$4[8] * var$3[6] + var$4[12] * var$3[7];
    oktm_IMat4$Companion_tmp2.data[8] = var$4[0] * var$3[8] + var$4[4] * var$3[9] + var$4[8] * var$3[10] + var$4[12] * var$3[11];
    oktm_IMat4$Companion_tmp2.data[12] = var$4[0] * var$3[12] + var$4[4] * var$3[13] + var$4[8] * var$3[14] + var$4[12] * var$3[15];
    oktm_IMat4$Companion_tmp2.data[1] = var$4[1] * var$3[0] + var$4[5] * var$3[1] + var$4[9] * var$3[2] + var$4[13] * var$3[3];
    oktm_IMat4$Companion_tmp2.data[5] = var$4[1] * var$3[4] + var$4[5] * var$3[5] + var$4[9] * var$3[6] + var$4[13] * var$3[7];
    oktm_IMat4$Companion_tmp2.data[9] = var$4[1] * var$3[8] + var$4[5] * var$3[9] + var$4[9] * var$3[10] + var$4[13] * var$3[11];
    oktm_IMat4$Companion_tmp2.data[13] = var$4[1] * var$3[12] + var$4[5] * var$3[13] + var$4[9] * var$3[14] + var$4[13] * var$3[15];
    oktm_IMat4$Companion_tmp2.data[2] = var$4[2] * var$3[0] + var$4[6] * var$3[1] + var$4[10] * var$3[2] + var$4[14] * var$3[3];
    oktm_IMat4$Companion_tmp2.data[6] = var$4[2] * var$3[4] + var$4[6] * var$3[5] + var$4[10] * var$3[6] + var$4[14] * var$3[7];
    oktm_IMat4$Companion_tmp2.data[10] = var$4[2] * var$3[8] + var$4[6] * var$3[9] + var$4[10] * var$3[10] + var$4[14] * var$3[11];
    oktm_IMat4$Companion_tmp2.data[14] = var$4[2] * var$3[12] + var$4[6] * var$3[13] + var$4[10] * var$3[14] + var$4[14] * var$3[15];
    oktm_IMat4$Companion_tmp2.data[3] = var$4[3] * var$3[0] + var$4[7] * var$3[1] + var$4[11] * var$3[2] + var$4[15] * var$3[3];
    oktm_IMat4$Companion_tmp2.data[7] = var$4[3] * var$3[4] + var$4[7] * var$3[5] + var$4[11] * var$3[6] + var$4[15] * var$3[7];
    oktm_IMat4$Companion_tmp2.data[11] = var$4[3] * var$3[8] + var$4[7] * var$3[9] + var$4[11] * var$3[10] + var$4[15] * var$3[11];
    oktm_IMat4$Companion_tmp2.data[15] = var$4[3] * var$3[12] + var$4[7] * var$3[13] + var$4[11] * var$3[14] + var$4[15] * var$3[15];
    $i = 0;
    var$6 = var$4.length;
    while ($i < var$6) {
        var$4[$i] = oktm_IMat4$Companion_tmp2.data[$i];
        $i = $i + 1 | 0;
    }
}
function oktm_IMat4$Companion_inv($this, $values) {
    var var$2, var$3, var$4, $det, $invDet, var$7;
    var$2 = $values.data;
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    var$3 = var$2[3] * var$2[6] * var$2[9] * var$2[12] - var$2[2] * var$2[7] * var$2[9] * var$2[12];
    var$4 = var$2[3] * var$2[5];
    var$4 = var$4 * var$2[10] * var$2[12];
    var$3 = var$3 - var$4;
    var$3 = var$3 + var$2[1] * var$2[7] * var$2[10] * var$2[12] + var$2[2] * var$2[5] * var$2[11] * var$2[12];
    var$4 = var$2[1];
    var$4 = var$4 * var$2[6] * var$2[11] * var$2[12];
    var$3 = var$3 - var$4;
    var$3 = var$3 - var$2[3] * var$2[6] * var$2[8] * var$2[13] + var$2[2] * var$2[7] * var$2[8] * var$2[13] + var$2[3] * var$2[4] * var$2[10] * var$2[13] - var$2[0] * var$2[7] * var$2[10] * var$2[13];
    var$4 = var$2[2] * var$2[4] * var$2[11];
    var$4 = var$4 * var$2[13];
    var$3 = var$3 - var$4;
    var$3 = var$3 + var$2[0] * var$2[6] * var$2[11] * var$2[13] + var$2[3] * var$2[5] * var$2[8] * var$2[14];
    var$4 = var$2[1] * var$2[7];
    var$4 = var$4 * var$2[8] * var$2[14];
    var$3 = var$3 - var$4;
    var$3 = var$3 - var$2[3] * var$2[4] * var$2[9] * var$2[14] + var$2[0] * var$2[7] * var$2[9] * var$2[14];
    var$4 = var$2[1];
    var$4 = var$4 * var$2[4] * var$2[11] * var$2[14];
    var$3 = var$3 + var$4;
    var$3 = var$3 - var$2[0] * var$2[5] * var$2[11] * var$2[14] - var$2[2] * var$2[5] * var$2[8] * var$2[15] + var$2[1] * var$2[6] * var$2[8] * var$2[15] + var$2[2] * var$2[4] * var$2[9] * var$2[15];
    var$4 = var$2[0] * var$2[6] * var$2[9];
    var$4 = var$4 * var$2[15];
    var$3 = var$3 - var$4;
    $det = var$3 - var$2[1] * var$2[4] * var$2[10] * var$2[15] + var$2[0] * var$2[5] * var$2[10] * var$2[15];
    if ($det === 0.0)
        return 0;
    $invDet = 1.0 / $det;
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[9] * var$2[14] * var$2[7] - var$2[13] * var$2[10] * var$2[7] + var$2[13] * var$2[6] * var$2[11];
    var$4 = var$2[5];
    var$4 = var$4 * var$2[14] * var$2[11];
    var$3 = var$3 - var$4;
    var$7[0] = var$3 - var$2[9] * var$2[6] * var$2[15] + var$2[5] * var$2[10] * var$2[15];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[12] * var$2[10] * var$2[7] - var$2[8] * var$2[14] * var$2[7] - var$2[12] * var$2[6] * var$2[11];
    var$4 = var$2[4];
    var$4 = var$4 * var$2[14] * var$2[11];
    var$3 = var$3 + var$4;
    var$7[4] = var$3 + var$2[8] * var$2[6] * var$2[15] - var$2[4] * var$2[10] * var$2[15];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[8] * var$2[13] * var$2[7] - var$2[12] * var$2[9] * var$2[7] + var$2[12] * var$2[5] * var$2[11];
    var$4 = var$2[4];
    var$4 = var$4 * var$2[13] * var$2[11];
    var$3 = var$3 - var$4;
    var$7[8] = var$3 - var$2[8] * var$2[5] * var$2[15] + var$2[4] * var$2[9] * var$2[15];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[12] * var$2[9] * var$2[6] - var$2[8] * var$2[13] * var$2[6] - var$2[12] * var$2[5] * var$2[10];
    var$4 = var$2[4];
    var$4 = var$4 * var$2[13] * var$2[10];
    var$3 = var$3 + var$4;
    var$7[12] = var$3 + var$2[8] * var$2[5] * var$2[14] - var$2[4] * var$2[9] * var$2[14];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[13] * var$2[10] * var$2[3] - var$2[9] * var$2[14] * var$2[3] - var$2[13] * var$2[2] * var$2[11];
    var$4 = var$2[1];
    var$4 = var$4 * var$2[14] * var$2[11];
    var$3 = var$3 + var$4;
    var$7[1] = var$3 + var$2[9] * var$2[2] * var$2[15] - var$2[1] * var$2[10] * var$2[15];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[8] * var$2[14] * var$2[3] - var$2[12] * var$2[10] * var$2[3] + var$2[12] * var$2[2] * var$2[11];
    var$4 = var$2[0];
    var$4 = var$4 * var$2[14] * var$2[11];
    var$3 = var$3 - var$4;
    var$7[5] = var$3 - var$2[8] * var$2[2] * var$2[15] + var$2[0] * var$2[10] * var$2[15];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[12] * var$2[9] * var$2[3] - var$2[8] * var$2[13] * var$2[3] - var$2[12] * var$2[1] * var$2[11];
    var$4 = var$2[0];
    var$4 = var$4 * var$2[13] * var$2[11];
    var$3 = var$3 + var$4;
    var$7[9] = var$3 + var$2[8] * var$2[1] * var$2[15] - var$2[0] * var$2[9] * var$2[15];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[8] * var$2[13] * var$2[2] - var$2[12] * var$2[9] * var$2[2] + var$2[12] * var$2[1] * var$2[10];
    var$4 = var$2[0];
    var$4 = var$4 * var$2[13] * var$2[10];
    var$3 = var$3 - var$4;
    var$7[13] = var$3 - var$2[8] * var$2[1] * var$2[14] + var$2[0] * var$2[9] * var$2[14];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[5] * var$2[14] * var$2[3] - var$2[13] * var$2[6] * var$2[3] + var$2[13] * var$2[2] * var$2[7];
    var$4 = var$2[1];
    var$4 = var$4 * var$2[14] * var$2[7];
    var$3 = var$3 - var$4;
    var$7[2] = var$3 - var$2[5] * var$2[2] * var$2[15] + var$2[1] * var$2[6] * var$2[15];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[12] * var$2[6] * var$2[3] - var$2[4] * var$2[14] * var$2[3] - var$2[12] * var$2[2] * var$2[7];
    var$4 = var$2[0];
    var$4 = var$4 * var$2[14] * var$2[7];
    var$3 = var$3 + var$4;
    var$7[6] = var$3 + var$2[4] * var$2[2] * var$2[15] - var$2[0] * var$2[6] * var$2[15];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[4] * var$2[13] * var$2[3] - var$2[12] * var$2[5] * var$2[3] + var$2[12] * var$2[1] * var$2[7];
    var$4 = var$2[0];
    var$4 = var$4 * var$2[13] * var$2[7];
    var$3 = var$3 - var$4;
    var$7[10] = var$3 - var$2[4] * var$2[1] * var$2[15] + var$2[0] * var$2[5] * var$2[15];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[12] * var$2[5] * var$2[2] - var$2[4] * var$2[13] * var$2[2] - var$2[12] * var$2[1] * var$2[6];
    var$4 = var$2[0];
    var$4 = var$4 * var$2[13] * var$2[6];
    var$3 = var$3 + var$4;
    var$7[14] = var$3 + var$2[4] * var$2[1] * var$2[14] - var$2[0] * var$2[5] * var$2[14];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[9] * var$2[6] * var$2[3] - var$2[5] * var$2[10] * var$2[3] - var$2[9] * var$2[2] * var$2[7];
    var$4 = var$2[1];
    var$4 = var$4 * var$2[10] * var$2[7];
    var$3 = var$3 + var$4;
    var$7[3] = var$3 + var$2[5] * var$2[2] * var$2[11] - var$2[1] * var$2[6] * var$2[11];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[4] * var$2[10] * var$2[3] - var$2[8] * var$2[6] * var$2[3] + var$2[8] * var$2[2] * var$2[7];
    var$4 = var$2[0];
    var$4 = var$4 * var$2[10] * var$2[7];
    var$3 = var$3 - var$4;
    var$7[7] = var$3 - var$2[4] * var$2[2] * var$2[11] + var$2[0] * var$2[6] * var$2[11];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[8] * var$2[5] * var$2[3] - var$2[4] * var$2[9] * var$2[3] - var$2[8] * var$2[1] * var$2[7];
    var$4 = var$2[0];
    var$4 = var$4 * var$2[9] * var$2[7];
    var$3 = var$3 + var$4;
    var$7[11] = var$3 + var$2[4] * var$2[1] * var$2[11] - var$2[0] * var$2[5] * var$2[11];
    var$7 = oktm_IMat4$Companion_tmp2.data;
    var$3 = var$2[4] * var$2[9] * var$2[2] - var$2[8] * var$2[5] * var$2[2] + var$2[8] * var$2[1] * var$2[6];
    var$4 = var$2[0];
    var$4 = var$4 * var$2[9] * var$2[6];
    var$4 = var$3 - var$4;
    var$7[15] = var$4 - var$2[4] * var$2[1] * var$2[10] + var$2[0] * var$2[5] * var$2[10];
    var$2[0] = oktm_IMat4$Companion_tmp2.data[0] * $invDet;
    var$2[4] = oktm_IMat4$Companion_tmp2.data[4] * $invDet;
    var$2[8] = oktm_IMat4$Companion_tmp2.data[8] * $invDet;
    var$2[12] = oktm_IMat4$Companion_tmp2.data[12] * $invDet;
    var$2[1] = oktm_IMat4$Companion_tmp2.data[1] * $invDet;
    var$2[5] = oktm_IMat4$Companion_tmp2.data[5] * $invDet;
    var$2[9] = oktm_IMat4$Companion_tmp2.data[9] * $invDet;
    var$2[13] = oktm_IMat4$Companion_tmp2.data[13] * $invDet;
    var$2[2] = oktm_IMat4$Companion_tmp2.data[2] * $invDet;
    var$2[6] = oktm_IMat4$Companion_tmp2.data[6] * $invDet;
    var$2[10] = oktm_IMat4$Companion_tmp2.data[10] * $invDet;
    var$2[14] = oktm_IMat4$Companion_tmp2.data[14] * $invDet;
    var$2[3] = oktm_IMat4$Companion_tmp2.data[3] * $invDet;
    var$2[7] = oktm_IMat4$Companion_tmp2.data[7] * $invDet;
    var$2[11] = oktm_IMat4$Companion_tmp2.data[11] * $invDet;
    var$2[15] = oktm_IMat4$Companion_tmp2.data[15] * $invDet;
    return 1;
}
function oktm_IMat4$Companion__init_0($this) {
    oktm_IMat4$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktm_IMat4$Companion__clinit_() {
    oktm_IMat4$Companion_$$INSTANCE = oktm_IMat4$Companion__init_();
    oktm_IMat4$Companion_Cap = oktm_Mat4__init_();
    oktm_IMat4$Companion$Build$1_$callClinit();
    oktm_IMat4$Companion_Build = oktm_IMat4$Companion$Build$1_INSTANCE;
    oktm_IMat4$Companion_tmp = oktm_Mat4__init_();
    oktm_IMat4$Companion_tmp2 = $rt_createFloatArray(16);
    oktm_IMat4$Companion_quat = oktm_Vec4__init_(0.0, 0.0, 0.0, 0.0, 15, null);
    oktm_IMat4$Companion_quat2 = oktm_Vec4__init_(0.0, 0.0, 0.0, 0.0, 15, null);
    oktm_IMat4$Companion_tmpV1 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktm_IMat4$Companion_tmpV2Right = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktm_IMat4$Companion_tmpV3Forward = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktm_IMat4$Companion_tmpV4Up = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
}
function oktm_IMat4$Companion_access$getTmp$p($$this) {
    oktm_IMat4$Companion_$callClinit();
    return oktm_IMat4$Companion_tmp;
}
function jl_Iterable() {
}
function kjim_KMappedMarker() {
}
function ks_SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1() {
    jl_Object.call(this);
    this.$$this_asIterable$inlined = null;
}
function ks_SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1__init_(var_0) {
    var var_1 = new ks_SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1();
    ks_SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1__init_0(var_1, var_0);
    return var_1;
}
function ks_SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1__init_0($this, var$1) {
    $this.$$this_asIterable$inlined = var$1;
    jl_Object__init_0($this);
}
function ks_SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1_iterator($this) {
    return $this.$$this_asIterable$inlined.$iterator();
}
function otj_JSObject() {
}
function otj_JSObject_cast$static($this) {
    return $this;
}
function otjde_EventListener() {
}
function oktt_TvmMouse$2() {
    jl_Object.call(this);
    this.$this$06 = null;
}
function oktt_TvmMouse$2__init_(var_0) {
    var var_1 = new oktt_TvmMouse$2();
    oktt_TvmMouse$2__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmMouse$2_handleEvent($this, $it) {
    var var$2, $button, $i, var$5;
    if ($it === null)
        $rt_throw(k_TypeCastException__init_($rt_s(286)));
    var$2 = $it;
    oktt_TvmMouse_updatePos($this.$this$06, var$2);
    $button = oktt_TvmMouse_getButton($this.$this$06, var$2);
    oktt_TvmMouse_getPressed($this.$this$06).$remove1(jl_Integer_valueOf($button));
    oktt_TvmMouse_setLastButton($this.$this$06, (-1));
    $i = 0;
    var$5 = oktt_TvmMouse_getListeners($this.$this$06).$size();
    while ($i < var$5) {
        oktt_TvmMouse_getListeners($this.$this$06).$get1($i).$buttonUp($button, oktt_TvmMouse_getX($this.$this$06), oktt_TvmMouse_getY($this.$this$06), 0);
        $i = $i + 1 | 0;
    }
}
function oktt_TvmMouse$2__init_0(var$0, var$1) {
    var$0.$this$06 = var$1;
    jl_Object__init_0(var$0);
}
function oktt_TvmMouse$2_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmMouse$2_handleEvent(var$0, var$1);
}
function oktt_TvmMouse$1() {
    jl_Object.call(this);
    this.$this$07 = null;
}
function oktt_TvmMouse$1__init_(var_0) {
    var var_1 = new oktt_TvmMouse$1();
    oktt_TvmMouse$1__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmMouse$1_handleEvent($this, $it) {
    var var$2, $button, $i, var$5;
    if ($it === null)
        $rt_throw(k_TypeCastException__init_($rt_s(286)));
    var$2 = $it;
    oktt_TvmMouse_updatePos($this.$this$07, var$2);
    $button = oktt_TvmMouse_getButton($this.$this$07, var$2);
    oktt_TvmMouse_getPressed($this.$this$07).$add1(jl_Integer_valueOf($button));
    oktt_TvmMouse_setLastButton($this.$this$07, $button);
    $i = 0;
    var$5 = oktt_TvmMouse_getListeners($this.$this$07).$size();
    while ($i < var$5) {
        oktt_TvmMouse_getListeners($this.$this$07).$get1($i).$buttonDown0($button, oktt_TvmMouse_getX($this.$this$07), oktt_TvmMouse_getY($this.$this$07), 0);
        $i = $i + 1 | 0;
    }
}
function oktt_TvmMouse$1__init_0(var$0, var$1) {
    var$0.$this$07 = var$1;
    jl_Object__init_0(var$0);
}
function oktt_TvmMouse$1_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmMouse$1_handleEvent(var$0, var$1);
}
function oktt_TvmMouse$4() {
    jl_Object.call(this);
    this.$this$08 = null;
}
function oktt_TvmMouse$4__init_(var_0) {
    var var_1 = new oktt_TvmMouse$4();
    oktt_TvmMouse$4__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmMouse$4_handleEvent($this, $it) {
    var var$2, $i, var$4;
    if ($it === null)
        $rt_throw(k_TypeCastException__init_($rt_s(286)));
    var$2 = $it;
    oktt_TvmMouse_updatePos($this.$this$08, var$2);
    $i = 0;
    var$4 = oktt_TvmMouse_getListeners($this.$this$08).$size();
    while ($i < var$4) {
        if (oktt_TvmMouse_getLastButton($this.$this$08) == (-1))
            oktt_TvmMouse_getListeners($this.$this$08).$get1($i).$moved0(oktt_TvmMouse_getX($this.$this$08), oktt_TvmMouse_getY($this.$this$08));
        else
            oktt_TvmMouse_getListeners($this.$this$08).$get1($i).$dragged0(oktt_TvmMouse_getX($this.$this$08), oktt_TvmMouse_getY($this.$this$08), 0);
        $i = $i + 1 | 0;
    }
}
function oktt_TvmMouse$4__init_0(var$0, var$1) {
    var$0.$this$08 = var$1;
    jl_Object__init_0(var$0);
}
function oktt_TvmMouse$4_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmMouse$4_handleEvent(var$0, var$1);
}
function jl_ArrayStoreException() {
    jl_RuntimeException.call(this);
}
function jl_ArrayStoreException__init_() {
    var var_0 = new jl_ArrayStoreException();
    jl_ArrayStoreException__init_0(var_0);
    return var_0;
}
function jl_ArrayStoreException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function oktg_IArmature$Companion() {
    jl_Object.call(this);
}
var oktg_IArmature$Companion_previousBoneMatricesCap = null;
var oktg_IArmature$Companion_$$INSTANCE = null;
function oktg_IArmature$Companion_$callClinit() {
    oktg_IArmature$Companion_$callClinit = $rt_eraseClinit(oktg_IArmature$Companion);
    oktg_IArmature$Companion__clinit_();
}
function oktg_IArmature$Companion__init_() {
    var var_0 = new oktg_IArmature$Companion();
    oktg_IArmature$Companion__init_0(var_0);
    return var_0;
}
function oktg_IArmature$Companion_getPreviousBoneMatricesCap($this) {
    return oktg_IArmature$Companion_previousBoneMatricesCap;
}
function oktg_IArmature$Companion__init_0($this) {
    oktg_IArmature$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktg_IArmature$Companion__clinit_() {
    var var$1, var$2, var$3;
    oktg_IArmature$Companion_$$INSTANCE = oktg_IArmature$Companion__init_();
    var$1 = $rt_createArray(oktm_IMat4, 0);
    var$2 = 0;
    while (var$2 < 0) {
        var$3 = var$1.data;
        oktm_IMat4_$callClinit();
        var$3[var$2] = oktm_IMat4$Companion_getBuild(oktm_IMat4_Companion).$invoke6();
        var$2 = var$2 + 1 | 0;
    }
    oktg_IArmature$Companion_previousBoneMatricesCap = var$1;
}
function oktt_TvmMouse$3() {
    jl_Object.call(this);
    this.$this$09 = null;
}
function oktt_TvmMouse$3__init_(var_0) {
    var var_1 = new oktt_TvmMouse$3();
    oktt_TvmMouse$3__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmMouse$3_handleEvent($this, $it) {
    var var$2, $i, var$4;
    if ($it === null)
        $rt_throw(k_TypeCastException__init_($rt_s(287)));
    var$2 = $it;
    $i = 0;
    var$4 = oktt_TvmMouse_getListeners($this.$this$09).$size();
    while ($i < var$4) {
        oktt_TvmMouse_getListeners($this.$this$09).$get1($i).$scrolled0(jl_Math_signum(var$2.deltaY) | 0);
        $i = $i + 1 | 0;
    }
}
function oktt_TvmMouse$3__init_0(var$0, var$1) {
    var$0.$this$09 = var$1;
    jl_Object__init_0(var$0);
}
function oktt_TvmMouse$3_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmMouse$3_handleEvent(var$0, var$1);
}
function oktt_TvmMouse$5() {
    jl_Object.call(this);
    this.$this$010 = null;
}
function oktt_TvmMouse$5__init_(var_0) {
    var var_1 = new oktt_TvmMouse$5();
    oktt_TvmMouse$5__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmMouse$5_handleEvent($this, $it) {
    var var$2;
    var$2 = $this.$this$010;
    if ($it !== null) {
        oktt_TvmMouse_updatePos(var$2, $it);
        return;
    }
    $rt_throw(k_TypeCastException__init_($rt_s(286)));
}
function oktt_TvmMouse$5__init_0(var$0, var$1) {
    var$0.$this$010 = var$1;
    jl_Object__init_0(var$0);
}
function oktt_TvmMouse$5_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmMouse$5_handleEvent(var$0, var$1);
}
function oktgg_GLTFBufferView$read$1() {
    kji_Lambda.call(this);
    this.$this$011 = null;
}
function oktgg_GLTFBufferView$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFBufferView$read$1();
    oktgg_GLTFBufferView$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFBufferView$read$1_invoke(var$0, var$1) {
    oktgg_GLTFBufferView$read$1_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFBufferView$read$1_invoke0($this, $it) {
    oktgg_GLTFBufferView_setByteOffset($this.$this$011, $it);
}
function oktgg_GLTFBufferView$read$1__init_0(var$0, var$1) {
    var$0.$this$011 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFBufferView$read$2() {
    kji_Lambda.call(this);
    this.$this$012 = null;
}
function oktgg_GLTFBufferView$read$2__init_(var_0) {
    var var_1 = new oktgg_GLTFBufferView$read$2();
    oktgg_GLTFBufferView$read$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFBufferView$read$2_invoke(var$0, var$1) {
    oktgg_GLTFBufferView$read$2_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFBufferView$read$2_invoke0($this, $it) {
    oktgg_GLTFBufferView_setByteStride($this.$this$012, $it);
}
function oktgg_GLTFBufferView$read$2__init_0(var$0, var$1) {
    var$0.$this$012 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jur_MatchResult() {
}
function jur_MatchResultImpl() {
    var a = this; jl_Object.call(a);
    a.$groupBounds = null;
    a.$consumers = null;
    a.$compQuantCounters = null;
    a.$string0 = null;
    a.$groupCount = 0;
    a.$valid = 0;
    a.$leftBound = 0;
    a.$rightBound = 0;
    a.$startIndex = 0;
    a.$transparentBounds = 0;
    a.$anchoringBounds = 0;
    a.$hitEnd = 0;
    a.$requireEnd = 0;
    a.$previousMatch = 0;
    a.$mode = 0;
}
function jur_MatchResultImpl__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jur_MatchResultImpl();
    jur_MatchResultImpl__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jur_MatchResultImpl__init_0($this, $string, $leftBound, $rightBound, $groupCount, $compQuantCount, $consumersCount) {
    var var$7;
    jl_Object__init_0($this);
    $this.$previousMatch = (-1);
    var$7 = $groupCount + 1 | 0;
    $this.$groupCount = var$7;
    $this.$groupBounds = $rt_createIntArray(var$7 * 2 | 0);
    $this.$consumers = $rt_createIntArray($consumersCount);
    ju_Arrays_fill0($this.$consumers, (-1));
    if ($compQuantCount > 0)
        $this.$compQuantCounters = $rt_createIntArray($compQuantCount);
    ju_Arrays_fill0($this.$groupBounds, (-1));
    $this.$reset($string, $leftBound, $rightBound);
}
function jur_MatchResultImpl_setConsumed($this, $counter, $value) {
    $this.$consumers.data[$counter] = $value;
}
function jur_MatchResultImpl_getConsumed($this, $counter) {
    return $this.$consumers.data[$counter];
}
function jur_MatchResultImpl_end($this) {
    return $this.$end(0);
}
function jur_MatchResultImpl_end0($this, $group) {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
}
function jur_MatchResultImpl_setStart($this, $group, $offset) {
    $this.$groupBounds.data[$group * 2 | 0] = $offset;
}
function jur_MatchResultImpl_setEnd($this, $group, $offset) {
    $this.$groupBounds.data[($group * 2 | 0) + 1 | 0] = $offset;
}
function jur_MatchResultImpl_getStart($this, $group) {
    return $this.$groupBounds.data[$group * 2 | 0];
}
function jur_MatchResultImpl_getEnd($this, $group) {
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
}
function jur_MatchResultImpl_getGroupNoCheck($this, $group) {
    var $st, $end;
    $st = $this.$getStart($group);
    $end = $this.$getEnd($group);
    if (($end | $st | ($end - $st | 0)) >= 0 && $end <= $this.$string0.$length())
        return $this.$string0.$subSequence($st, $end).$toString();
    return null;
}
function jur_MatchResultImpl_start($this) {
    return $this.$start(0);
}
function jur_MatchResultImpl_start0($this, $group) {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[$group * 2 | 0];
}
function jur_MatchResultImpl_finalizeMatch($this) {
    if ($this.$groupBounds.data[0] == (-1)) {
        $this.$groupBounds.data[0] = $this.$startIndex;
        $this.$groupBounds.data[1] = $this.$startIndex;
    }
    $this.$previousMatch = $this.$end0();
}
function jur_MatchResultImpl_getEnterCounter($this, $setCounter) {
    return $this.$compQuantCounters.data[$setCounter];
}
function jur_MatchResultImpl_setEnterCounter($this, $setCounter, $value) {
    $this.$compQuantCounters.data[$setCounter] = $value;
}
function jur_MatchResultImpl_checkGroup($this, $group) {
    if (!$this.$valid)
        $rt_throw(jl_IllegalStateException__init_0());
    if ($group >= 0 && $group < $this.$groupCount)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_String_valueOf1($group)));
}
function jur_MatchResultImpl_setValid($this) {
    $this.$valid = 1;
}
function jur_MatchResultImpl_isValid($this) {
    return $this.$valid;
}
function jur_MatchResultImpl_reset($this, $newSequence, $leftBound, $rightBound) {
    $this.$valid = 0;
    $this.$mode = 2;
    ju_Arrays_fill0($this.$groupBounds, (-1));
    ju_Arrays_fill0($this.$consumers, (-1));
    if ($newSequence !== null)
        $this.$string0 = $newSequence;
    if ($leftBound >= 0)
        jur_MatchResultImpl_setBounds($this, $leftBound, $rightBound);
    $this.$startIndex = $this.$leftBound;
}
function jur_MatchResultImpl_reset0($this) {
    $this.$reset(null, (-1), (-1));
}
function jur_MatchResultImpl_setBounds($this, $leftBound, $rightBound) {
    $this.$leftBound = $leftBound;
    $this.$rightBound = $rightBound;
}
function jur_MatchResultImpl_setStartIndex($this, $startIndex) {
    $this.$startIndex = $startIndex;
    if ($this.$previousMatch >= 0)
        $startIndex = $this.$previousMatch;
    $this.$previousMatch = $startIndex;
}
function jur_MatchResultImpl_getLeftBound($this) {
    return $this.$leftBound;
}
function jur_MatchResultImpl_getRightBound($this) {
    return $this.$rightBound;
}
function jur_MatchResultImpl_setMode($this, $mode) {
    $this.$mode = $mode;
}
function jur_MatchResultImpl_mode($this) {
    return $this.$mode;
}
function jur_MatchResultImpl_hasAnchoringBounds($this) {
    return $this.$anchoringBounds;
}
function jur_MatchResultImpl_hasTransparentBounds($this) {
    return $this.$transparentBounds;
}
function jur_MatchResultImpl_getPreviousMatchEnd($this) {
    return $this.$previousMatch;
}
function oktm_Plane() {
    var a = this; jl_Object.call(a);
    a.$normal0 = null;
    a.$d = 0.0;
}
var oktm_Plane_diff = null;
var oktm_Plane_tmp = null;
var oktm_Plane_Companion = null;
function oktm_Plane_$callClinit() {
    oktm_Plane_$callClinit = $rt_eraseClinit(oktm_Plane);
    oktm_Plane__clinit_();
}
function oktm_Plane__init_(var_0, var_1) {
    var var_2 = new oktm_Plane();
    oktm_Plane__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktm_Plane__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new oktm_Plane();
    oktm_Plane__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktm_Plane__init_3() {
    var var_0 = new oktm_Plane();
    oktm_Plane__init_4(var_0);
    return var_0;
}
function oktm_Plane_set($this, $point1, $point2, $point3) {
    kji_Intrinsics_checkParameterIsNotNull($point1, $rt_s(288));
    kji_Intrinsics_checkParameterIsNotNull($point2, $rt_s(289));
    kji_Intrinsics_checkParameterIsNotNull($point3, $rt_s(290));
    $this.$normal0.$set11($point1).$sub0($point2).$crs($point2.$getX0() - $point3.$getX0(), $point2.$getY0() - $point3.$getY0(), $point2.$getZ() - $point3.$getZ()).$nor();
    $this.$d =  -$point1.$dot0($this.$normal0);
}
function oktm_Plane__init_0($this, $normal, $d) {
    oktm_Plane_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($normal, $rt_s(291));
    jl_Object__init_0($this);
    $this.$normal0 = $normal;
    $this.$d = $d;
}
function oktm_Plane__init_2(var$0, var$1, var$2, var$3, var$4) {
    oktm_Plane_$callClinit();
    if (var$3 & 1)
        var$1 = oktm_Vec3__init_0(0.0, 1.0, 0.0);
    if (var$3 & 2)
        var$2 = 0.0;
    oktm_Plane__init_0(var$0, var$1, var$2);
}
function oktm_Plane__init_4(var$0) {
    oktm_Plane_$callClinit();
    oktm_Plane__init_2(var$0, null, 0.0, 3, null);
}
function oktm_Plane__clinit_() {
    oktm_Plane_Companion = oktm_Plane$Companion__init_(null);
    oktm_Plane_diff = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktm_Plane_tmp = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
}
function cgcj_Jsoner() {
    jl_Object.call(this);
}
function cgcj_Jsoner__init_() {
    var var_0 = new cgcj_Jsoner();
    cgcj_Jsoner__init_0(var_0);
    return var_0;
}
function cgcj_Jsoner__init_0($this) {
    jl_Object__init_0($this);
}
function cgcj_Jsoner_deserialize($deserializable, $flags) {
    var $lexer, $returnCount, $stateStack, $valueStack, $currentState, $token, var$9, var$10, $key, $parent, $object, $array, var$15, $val;
    $lexer = cgcj_Yylex__init_($deserializable);
    $returnCount = 1;
    $stateStack = ju_LinkedList__init_();
    $valueStack = ju_LinkedList__init_();
    cgcj_Jsoner$States_$callClinit();
    $stateStack.$addLast(cgcj_Jsoner$States_INITIAL);
    a: {
        while (true) {
            b: {
                c: {
                    d: {
                        $currentState = cgcj_Jsoner_popNextState($stateStack);
                        $token = cgcj_Jsoner_lexNextToken($lexer);
                        cgcj_Jsoner$2_$callClinit();
                        switch (cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Jsoner$States.data[jl_Enum_ordinal($currentState)]) {
                            case 1:
                                cgcj_Jsoner$DeserializationOptions_$callClinit();
                                if (!$flags.$contains1(cgcj_Jsoner$DeserializationOptions_ALLOW_CONCATENATED_JSON_VALUES))
                                    break b;
                                cgcj_Yytoken$Types_$callClinit();
                                if (jl_Enum_equals(cgcj_Yytoken$Types_END, $token.$getType0()))
                                    break b;
                                $returnCount = $returnCount + 1 | 0;
                                break d;
                            case 3:
                                var$9 = new cgcj_JsonException;
                                var$10 = $lexer.$getPosition();
                                cgcj_JsonException$Problems_$callClinit();
                                cgcj_JsonException__init_(var$9, var$10, cgcj_JsonException$Problems_UNEXPECTED_TOKEN, $token);
                                $rt_throw(var$9);
                            case 4:
                                break c;
                            case 5:
                                e: {
                                    switch (cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal($token.$getType0())]) {
                                        case 1:
                                            if (!($token.$getValue() instanceof jl_String)) {
                                                var$9 = new cgcj_JsonException;
                                                var$10 = $lexer.$getPosition();
                                                cgcj_JsonException$Problems_$callClinit();
                                                cgcj_JsonException__init_(var$9, var$10, cgcj_JsonException$Problems_UNEXPECTED_TOKEN, $token);
                                                $rt_throw(var$9);
                                            }
                                            $key = $token.$getValue();
                                            $valueStack.$addLast($key);
                                            $stateStack.$addLast($currentState);
                                            $stateStack.$addLast(cgcj_Jsoner$States_PARSING_ENTRY);
                                            break b;
                                        case 4:
                                            break;
                                        case 6:
                                            break e;
                                        default:
                                            var$9 = new cgcj_JsonException;
                                            var$10 = $lexer.$getPosition();
                                            cgcj_JsonException$Problems_$callClinit();
                                            cgcj_JsonException__init_(var$9, var$10, cgcj_JsonException$Problems_UNEXPECTED_TOKEN, $token);
                                            $rt_throw(var$9);
                                    }
                                    $stateStack.$addLast($currentState);
                                    break b;
                                }
                                if ($valueStack.$size() > $returnCount) {
                                    $valueStack.$removeLast();
                                    break b;
                                }
                                $stateStack.$addLast(cgcj_Jsoner$States_DONE);
                                break b;
                            case 6:
                                switch (cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal($token.$getType0())]) {
                                    case 1:
                                        $key = $valueStack.$removeLast();
                                        $parent = $valueStack.$getLast();
                                        $parent.$put3($key, $token.$getValue());
                                        break b;
                                    case 2:
                                        $key = $valueStack.$removeLast();
                                        $parent = $valueStack.$getLast();
                                        $object = cgcj_JsonObject__init_();
                                        $parent.$put3($key, $object);
                                        $valueStack.$addLast($object);
                                        $stateStack.$addLast(cgcj_Jsoner$States_PARSING_OBJECT);
                                        break b;
                                    case 3:
                                        $key = $valueStack.$removeLast();
                                        $parent = $valueStack.$getLast();
                                        $array = cgcj_JsonArray__init_();
                                        $parent.$put3($key, $array);
                                        $valueStack.$addLast($array);
                                        $stateStack.$addLast(cgcj_Jsoner$States_PARSING_ARRAY);
                                        break b;
                                    case 4:
                                    case 5:
                                    case 6:
                                        break a;
                                    case 7:
                                        break;
                                    default:
                                        break a;
                                }
                                $stateStack.$addLast($currentState);
                                break b;
                            case 2:
                                break d;
                            default:
                        }
                        break b;
                    }
                    f: {
                        g: {
                            switch (cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal($token.$getType0())]) {
                                case 1:
                                    break;
                                case 2:
                                    break g;
                                case 3:
                                    break f;
                                default:
                                    var$9 = new cgcj_JsonException;
                                    var$10 = $lexer.$getPosition();
                                    cgcj_JsonException$Problems_$callClinit();
                                    cgcj_JsonException__init_(var$9, var$10, cgcj_JsonException$Problems_UNEXPECTED_TOKEN, $token);
                                    $rt_throw(var$9);
                            }
                            cgcj_Jsoner$DeserializationOptions_$callClinit();
                            if (!$flags.$contains1(cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_DATA)) {
                                var$15 = new cgcj_JsonException;
                                var$10 = $lexer.$getPosition();
                                cgcj_JsonException$Problems_$callClinit();
                                cgcj_JsonException__init_(var$15, var$10, cgcj_JsonException$Problems_DISALLOWED_TOKEN, $token);
                                $rt_throw(var$15);
                            }
                            $valueStack.$addLast($token.$getValue());
                            $stateStack.$addLast(cgcj_Jsoner$States_DONE);
                            break b;
                        }
                        cgcj_Jsoner$DeserializationOptions_$callClinit();
                        if (!$flags.$contains1(cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_OBJECTS)) {
                            var$9 = new cgcj_JsonException;
                            var$10 = $lexer.$getPosition();
                            cgcj_JsonException$Problems_$callClinit();
                            cgcj_JsonException__init_(var$9, var$10, cgcj_JsonException$Problems_DISALLOWED_TOKEN, $token);
                            $rt_throw(var$9);
                        }
                        $valueStack.$addLast(cgcj_JsonObject__init_());
                        $stateStack.$addLast(cgcj_Jsoner$States_PARSING_OBJECT);
                        break b;
                    }
                    cgcj_Jsoner$DeserializationOptions_$callClinit();
                    if (!$flags.$contains1(cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_ARRAYS)) {
                        var$9 = new cgcj_JsonException;
                        var$10 = $lexer.$getPosition();
                        cgcj_JsonException$Problems_$callClinit();
                        cgcj_JsonException__init_(var$9, var$10, cgcj_JsonException$Problems_DISALLOWED_TOKEN, $token);
                        $rt_throw(var$9);
                    }
                    $valueStack.$addLast(cgcj_JsonArray__init_());
                    $stateStack.$addLast(cgcj_Jsoner$States_PARSING_ARRAY);
                    break b;
                }
                switch (cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal($token.$getType0())]) {
                    case 1:
                        $val = $valueStack.$getLast();
                        $val.$add1($token.$getValue());
                        $stateStack.$addLast($currentState);
                        break b;
                    case 2:
                        $val = $valueStack.$getLast();
                        $object = cgcj_JsonObject__init_();
                        $val.$add1($object);
                        $valueStack.$addLast($object);
                        $stateStack.$addLast($currentState);
                        $stateStack.$addLast(cgcj_Jsoner$States_PARSING_OBJECT);
                        break b;
                    case 3:
                        $val = $valueStack.$getLast();
                        $array = cgcj_JsonArray__init_();
                        $val.$add1($array);
                        $valueStack.$addLast($array);
                        $stateStack.$addLast($currentState);
                        $stateStack.$addLast(cgcj_Jsoner$States_PARSING_ARRAY);
                        break b;
                    case 4:
                        break;
                    case 5:
                        if ($valueStack.$size() > $returnCount) {
                            $valueStack.$removeLast();
                            break b;
                        }
                        $stateStack.$addLast(cgcj_Jsoner$States_DONE);
                        break b;
                    default:
                        var$9 = new cgcj_JsonException;
                        var$10 = $lexer.$getPosition();
                        cgcj_JsonException$Problems_$callClinit();
                        cgcj_JsonException__init_(var$9, var$10, cgcj_JsonException$Problems_UNEXPECTED_TOKEN, $token);
                        $rt_throw(var$9);
                }
                $stateStack.$addLast($currentState);
            }
            if (!jl_Enum_equals(cgcj_Jsoner$States_DONE, $currentState))
                continue;
            cgcj_Yytoken$Types_$callClinit();
            if (jl_Enum_equals(cgcj_Yytoken$Types_END, $token.$getType0()))
                break;
        }
        return cgcj_JsonArray__init_0($valueStack);
    }
    var$9 = new cgcj_JsonException;
    var$10 = $lexer.$getPosition();
    cgcj_JsonException$Problems_$callClinit();
    cgcj_JsonException__init_(var$9, var$10, cgcj_JsonException$Problems_UNEXPECTED_TOKEN, $token);
    $rt_throw(var$9);
}
function cgcj_Jsoner_deserialize0($deserializable, $returnable) {
    var $readable, var$4, var$5, $returnable_0, $$je;
    $readable = null;
    a: {
        b: {
            c: {
                d: {
                    try {
                        var$4 = $readable;
                        var$5 = new ji_StringReader;
                        $readable = var$5;
                        var$4 = var$5;
                        ji_StringReader__init_(var$5, $deserializable);
                        cgcj_Jsoner$DeserializationOptions_$callClinit();
                        $returnable_0 = cgcj_Jsoner_deserialize(var$5, ju_EnumSet_of(cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_OBJECTS)).$getMap(0);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_NullPointerException) {
                            break d;
                        } else if ($$je instanceof cgcj_JsonException) {
                            break d;
                        } else{
                            var$5 = $$je;
                            break c;
                        }
                    }
                    if (var$5 === null)
                        break a;
                    var$5.$close();
                    break a;
                }
                try {
                    var$4 = $readable;
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$5 = $$je;

                }
            }
            if (var$4 !== null)
                var$4.$close();
            $rt_throw(var$5);
        }
        if ($readable === null)
            $returnable_0 = $returnable;
        else {
            $readable.$close();
            $returnable_0 = $returnable;
        }
    }
    return $returnable_0;
}
function cgcj_Jsoner_lexNextToken($lexer) {
    var $returnable, $caught, var$4, $$je;
    a: {
        try {
            $returnable = $lexer.$yylex();
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
                $caught = $$je;
            } else {
                throw $$e;
            }
        }
        var$4 = new cgcj_JsonException;
        cgcj_JsonException$Problems_$callClinit();
        cgcj_JsonException__init_(var$4, (-1), cgcj_JsonException$Problems_UNEXPECTED_EXCEPTION, $caught);
        $rt_throw(var$4);
    }
    if ($returnable === null) {
        $returnable = new cgcj_Yytoken;
        cgcj_Yytoken$Types_$callClinit();
        cgcj_Yytoken__init_($returnable, cgcj_Yytoken$Types_END, null);
    }
    return $returnable;
}
function cgcj_Jsoner_popNextState($stateStack) {
    if ($stateStack.$size() <= 0) {
        cgcj_Jsoner$States_$callClinit();
        return cgcj_Jsoner$States_PARSED_ERROR;
    }
    return $stateStack.$removeLast();
}
function oktmb_MeshBuilder$createIndicesShort$1() {
    kji_Lambda.call(this);
    this.$$block = null;
}
function oktmb_MeshBuilder$createIndicesShort$1__init_(var_0) {
    var var_1 = new oktmb_MeshBuilder$createIndicesShort$1();
    oktmb_MeshBuilder$createIndicesShort$1__init_0(var_1, var_0);
    return var_1;
}
function oktmb_MeshBuilder$createIndicesShort$1_invoke(var$0, var$1) {
    oktmb_MeshBuilder$createIndicesShort$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktmb_MeshBuilder$createIndicesShort$1_invoke0($this, $$this$createIndices) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$createIndices, $rt_s(33));
    var$2 = $$this$createIndices.$shortView();
    $this.$$block.$invoke1(var$2);
}
function oktmb_MeshBuilder$createIndicesShort$1__init_0(var$0, var$1) {
    var$0.$$block = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFBufferView$read$3() {
    kji_Lambda.call(this);
    this.$this$013 = null;
}
function oktgg_GLTFBufferView$read$3__init_(var_0) {
    var var_1 = new oktgg_GLTFBufferView$read$3();
    oktgg_GLTFBufferView$read$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFBufferView$read$3_invoke(var$0, var$1) {
    oktgg_GLTFBufferView$read$3_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFBufferView$read$3_invoke0($this, $it) {
    oktgg_GLTFBufferView_setTarget($this.$this$013, $it);
}
function oktgg_GLTFBufferView$read$3__init_0(var$0, var$1) {
    var$0.$this$013 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktsg_VertexNode$Companion() {
    jl_Object.call(this);
}
function oktsg_VertexNode$Companion__init_() {
    var var_0 = new oktsg_VertexNode$Companion();
    oktsg_VertexNode$Companion__init_0(var_0);
    return var_0;
}
function oktsg_VertexNode$Companion__init_1(var_0) {
    var var_1 = new oktsg_VertexNode$Companion();
    oktsg_VertexNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_VertexNode$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_VertexNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_VertexNode$Companion__init_0($this);
}
function jnc_Charset() {
    var a = this; jl_Object.call(a);
    a.$canonicalName = null;
    a.$aliases = null;
}
function jnc_Charset__init_(var_0, var_1) {
    var var_2 = new jnc_Charset();
    jnc_Charset__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnc_Charset__init_0($this, $canonicalName, $aliases) {
    var var$3, var$4, var$5, $alias;
    var$3 = $aliases.data;
    jl_Object__init_0($this);
    jnc_Charset_checkCanonicalName($canonicalName);
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $alias = var$3[var$5];
        jnc_Charset_checkCanonicalName($alias);
        var$5 = var$5 + 1 | 0;
    }
    $this.$canonicalName = $canonicalName;
    $this.$aliases = $aliases.$clone();
}
function jnc_Charset_checkCanonicalName($name) {
    var $i, $c;
    if ($name.$isEmpty())
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    if (!jnc_Charset_isValidCharsetStart($name.$charAt(0)))
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    $i = 1;
    while ($i < $name.$length()) {
        a: {
            $c = $name.$charAt($i);
            switch ($c) {
                case 43:
                case 45:
                case 46:
                case 58:
                case 95:
                    break;
                default:
                    if (jnc_Charset_isValidCharsetStart($c))
                        break a;
                    else
                        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
            }
        }
        $i = $i + 1 | 0;
    }
}
function jnc_Charset_isValidCharsetStart($c) {
    return !($c >= 48 && $c <= 57) && !($c >= 97 && $c <= 122) && $c < 65 && $c > 90 ? 0 : 1;
}
function jnc_Charset_forName($charsetName) {
    var $charset;
    if ($charsetName === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(292)));
    jnc_Charset_checkCanonicalName($charsetName);
    $charset = jnc_Charset$Charsets_access$000().$get0($charsetName.$toUpperCase0());
    if ($charset !== null)
        return $charset;
    $rt_throw(jnc_UnsupportedCharsetException__init_($charsetName));
}
function jnc_Charset_decode($this, $bb) {
    var var$2, var$3, $e, $$je;
    a: {
        try {
            var$2 = $this.$newDecoder();
            jnc_CodingErrorAction_$callClinit();
            var$3 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetDecoder_onMalformedInput(var$2, var$3);
            var$2 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetDecoder_onUnmappableCharacter(var$3, var$2);
            var$3 = jnc_CharsetDecoder_decode(var$3, $bb);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    $rt_throw(jl_AssertionError__init_($rt_s(293), $e));
}
function jnc_Charset_compareTo($this, $that) {
    return $this.$canonicalName.$compareToIgnoreCase($that.$canonicalName);
}
function jnc_Charset_compareTo0($this, var$1) {
    return jnc_Charset_compareTo($this, var$1);
}
function jur_DecomposedCharSet() {
    var a = this; jur_JointSet.call(a);
    a.$readCharsForCodePoint = 0;
    a.$decomposedCharUTF16 = null;
    a.$decomposedChar = null;
    a.$decomposedCharLength = 0;
}
function jur_DecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_DecomposedCharSet();
    jur_DecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_DecomposedCharSet__init_0($this, $decomposedChar, $decomposedCharLength) {
    jur_JointSet__init_0($this);
    $this.$readCharsForCodePoint = 1;
    $this.$decomposedChar = $decomposedChar;
    $this.$decomposedCharLength = $decomposedCharLength;
}
function jur_DecomposedCharSet_setNext($this, $next) {
    $this.$next0 = $next;
}
function jur_DecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
    var $decCodePoint, $readCodePoints, $rightBound, $curChar, var$8, $decCurCodePoint, var$10, var$11, var$12, var$13, var$14, var$15;
    $decCodePoint = $rt_createIntArray(4);
    $readCodePoints = 0;
    $rightBound = $matchResult.$getRightBound();
    if ($strIndex >= $rightBound)
        return (-1);
    $curChar = $this.$codePointAt($strIndex, $testString, $rightBound);
    var$8 = $strIndex + $this.$readCharsForCodePoint | 0;
    $decCurCodePoint = jur_Lexer_getDecomposition($curChar);
    if ($decCurCodePoint === null) {
        var$10 = $decCodePoint.data;
        var$11 = 1;
        var$10[$readCodePoints] = $curChar;
    } else {
        var$11 = $decCurCodePoint.data.length;
        jl_System_arraycopy($decCurCodePoint, 0, $decCodePoint, 0, var$11);
        var$11 = $readCodePoints + var$11 | 0;
    }
    a: {
        if (var$8 < $rightBound) {
            var$12 = $this.$codePointAt(var$8, $testString, $rightBound);
            while (var$11 < 4) {
                if (!jur_Lexer_hasDecompositionNonNullCanClass(var$12)) {
                    var$10 = $decCodePoint.data;
                    var$13 = var$11 + 1 | 0;
                    var$10[var$11] = var$12;
                } else {
                    var$10 = jur_Lexer_getDecomposition(var$12).data;
                    if (var$10.length != 2) {
                        var$14 = $decCodePoint.data;
                        var$13 = var$11 + 1 | 0;
                        var$14[var$11] = var$10[0];
                    } else {
                        var$14 = $decCodePoint.data;
                        var$12 = var$11 + 1 | 0;
                        var$14[var$11] = var$10[0];
                        var$13 = var$12 + 1 | 0;
                        var$14[var$12] = var$10[1];
                    }
                }
                var$8 = var$8 + $this.$readCharsForCodePoint | 0;
                if (var$8 >= $rightBound) {
                    var$11 = var$13;
                    break a;
                }
                var$12 = $this.$codePointAt(var$8, $testString, $rightBound);
                var$11 = var$13;
            }
        }
    }
    if (var$11 != $this.$decomposedCharLength)
        return (-1);
    var$15 = 0;
    while (true) {
        if (var$15 >= var$11)
            return $this.$next0.$matches(var$8, $testString, $matchResult);
        if ($decCodePoint.data[var$15] != $this.$decomposedChar.data[var$15])
            break;
        var$15 = var$15 + 1 | 0;
    }
    return (-1);
}
function jur_DecomposedCharSet_getDecomposedChar($this) {
    var $strBuff, $i;
    if ($this.$decomposedCharUTF16 === null) {
        $strBuff = jl_StringBuilder__init_();
        $i = 0;
        while ($i < $this.$decomposedCharLength) {
            $strBuff.$append13(jl_Character_toChars($this.$decomposedChar.data[$i]));
            $i = $i + 1 | 0;
        }
        $this.$decomposedCharUTF16 = $strBuff.$toString();
    }
    return $this.$decomposedCharUTF16;
}
function jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound) {
    var $curChar, var$5, $low, $curCodePointUTF16, var$8;
    $this.$readCharsForCodePoint = 1;
    if ($strIndex >= ($rightBound - 1 | 0))
        $curChar = $testString.$charAt($strIndex);
    else {
        var$5 = $strIndex + 1 | 0;
        $curChar = $testString.$charAt($strIndex);
        $low = $testString.$charAt(var$5);
        if (jl_Character_isSurrogatePair($curChar, $low)) {
            $curCodePointUTF16 = $rt_createCharArray(2);
            var$8 = $curCodePointUTF16.data;
            var$8[0] = $curChar;
            var$8[1] = $low;
            $curChar = jl_Character_codePointAt($curCodePointUTF16, 0);
            $this.$readCharsForCodePoint = 2;
        }
    }
    return $curChar;
}
function jur_DecomposedCharSet_first($this, $set) {
    var var$2, var$3;
    a: {
        if ($set instanceof jur_DecomposedCharSet) {
            var$2 = $set;
            if (!jur_DecomposedCharSet_getDecomposedChar(var$2).$equals0(jur_DecomposedCharSet_getDecomposedChar($this))) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
}
function jur_DecomposedCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jl_IllegalArgumentException() {
    jl_RuntimeException.call(this);
}
function jl_IllegalArgumentException__init_0() {
    var var_0 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_1(var_0);
    return var_0;
}
function jl_IllegalArgumentException__init_(var_0) {
    var var_1 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_2(var_1, var_0);
    return var_1;
}
function jl_IllegalArgumentException__init_1($this) {
    jl_RuntimeException__init_1($this);
}
function jl_IllegalArgumentException__init_2($this, $message) {
    jl_RuntimeException__init_2($this, $message);
}
function jnc_IllegalCharsetNameException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName = null;
}
function jnc_IllegalCharsetNameException__init_(var_0) {
    var var_1 = new jnc_IllegalCharsetNameException();
    jnc_IllegalCharsetNameException__init_0(var_1, var_0);
    return var_1;
}
function jnc_IllegalCharsetNameException__init_0($this, $charsetName) {
    jl_IllegalArgumentException__init_1($this);
    $this.$charsetName = $charsetName;
}
function jl_AutoCloseable() {
}
function ji_Closeable() {
}
function ji_Flushable() {
}
function ji_OutputStream() {
    jl_Object.call(this);
}
function ji_OutputStream__init_() {
    var var_0 = new ji_OutputStream();
    ji_OutputStream__init_0(var_0);
    return var_0;
}
function ji_OutputStream__init_0($this) {
    jl_Object__init_0($this);
}
function ji_OutputStream_write($this, $b, $off, $len) {
    var $i, var$5, var$6;
    $i = 0;
    while ($i < $len) {
        var$5 = $b.data;
        var$6 = $off + 1 | 0;
        $this.$write(var$5[$off]);
        $i = $i + 1 | 0;
        $off = var$6;
    }
}
function ji_FilterOutputStream() {
    ji_OutputStream.call(this);
    this.$out = null;
}
function ji_FilterOutputStream__init_(var_0) {
    var var_1 = new ji_FilterOutputStream();
    ji_FilterOutputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_FilterOutputStream__init_0($this, $out) {
    ji_OutputStream__init_0($this);
    $this.$out = $out;
}
function ji_PrintStream() {
    var a = this; ji_FilterOutputStream.call(a);
    a.$autoFlush = 0;
    a.$errorState = 0;
    a.$sb = null;
    a.$buffer0 = null;
    a.$charset = null;
}
function ji_PrintStream__init_(var_0, var_1) {
    var var_2 = new ji_PrintStream();
    ji_PrintStream__init_0(var_2, var_0, var_1);
    return var_2;
}
function ji_PrintStream__init_0($this, $out, $autoFlush) {
    ji_FilterOutputStream__init_0($this, $out);
    $this.$sb = jl_StringBuilder__init_();
    $this.$buffer0 = $rt_createCharArray(32);
    $this.$autoFlush = $autoFlush;
    $this.$charset = jnci_UTF8Charset__init_();
}
function ji_PrintStream_write($this, $b, $off, $len) {
    var $$je;
    if (!ji_PrintStream_check($this))
        return;
    a: {
        try {
            $this.$out.$write0($b, $off, $len);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
            } else {
                throw $$e;
            }
        }
        $this.$errorState = 1;
    }
}
function ji_PrintStream_check($this) {
    if ($this.$out === null)
        $this.$errorState = 1;
    return $this.$errorState ? 0 : 1;
}
function ji_PrintStream_print($this, $s, $begin, $end) {
    var var$4, $src, $destBytes, $dest, var$8, var$9, $encoder, $overflow;
    var$4 = $s.data;
    $src = jn_CharBuffer_wrap($s, $begin, $end - $begin | 0);
    $destBytes = $rt_createByteArray(jl_Math_max(16, jl_Math_min(var$4.length, 1024)));
    $dest = jn_ByteBuffer_wrap($destBytes);
    var$8 = $this.$charset.$newEncoder();
    jnc_CodingErrorAction_$callClinit();
    var$9 = jnc_CodingErrorAction_REPLACE;
    var$8 = jnc_CharsetEncoder_onMalformedInput(var$8, var$9);
    var$9 = jnc_CodingErrorAction_REPLACE;
    $encoder = jnc_CharsetEncoder_onUnmappableCharacter(var$8, var$9);
    while (true) {
        $overflow = jnc_CharsetEncoder_encode($encoder, $src, $dest, 1).$isOverflow();
        $this.$write0($destBytes, 0, jn_Buffer_position($dest));
        jn_ByteBuffer_clear($dest);
        if (!$overflow)
            break;
    }
    while (true) {
        $overflow = jnc_CharsetEncoder_flush($encoder, $dest).$isOverflow();
        $this.$write0($destBytes, 0, jn_Buffer_position($dest));
        jn_ByteBuffer_clear($dest);
        if (!$overflow)
            break;
    }
}
function ji_PrintStream_print0($this, $c) {
    $this.$buffer0.data[0] = $c;
    ji_PrintStream_print($this, $this.$buffer0, 0, 1);
}
function ji_PrintStream_print1($this, $s) {
    $this.$sb.$append($s);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println($this, $s) {
    $this.$sb.$append($s).$append12(10);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println0($this, $s) {
    $this.$sb.$append14($s).$append12(10);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println1($this) {
    $this.$print1(10);
}
function ji_PrintStream_printSB($this) {
    var $buffer;
    $buffer = $this.$sb.$length() <= $this.$buffer0.data.length ? $this.$buffer0 : $rt_createCharArray($this.$sb.$length());
    $this.$sb.$getChars(0, $this.$sb.$length(), $buffer, 0);
    ji_PrintStream_print($this, $buffer, 0, $this.$sb.$length());
    $this.$sb.$setLength(0);
}
function jur_NegativeLookBehind() {
    jur_AtomicJointSet.call(this);
}
function jur_NegativeLookBehind__init_(var_0, var_1) {
    var var_2 = new jur_NegativeLookBehind();
    jur_NegativeLookBehind__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NegativeLookBehind__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_NegativeLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e, $shift;
    $size = $this.$children0.$size();
    $matchResult.$setConsumed($this.$groupIndex0, $stringIndex);
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next0.$matches($stringIndex, $testString, $matchResult);
        $e = $this.$children0.$get1($i);
        $shift = $e.$findBack(0, $stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_NegativeLookBehind_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
}
function kjim_KMutableIterable() {
}
function ooo_DSpace() {
}
function ooo_DHashSpace() {
}
function oooi_DxConvex$CollideConvexPlane() {
    jl_Object.call(this);
}
function oooi_DxConvex$CollideConvexPlane__init_() {
    var var_0 = new oooi_DxConvex$CollideConvexPlane();
    oooi_DxConvex$CollideConvexPlane__init_0(var_0);
    return var_0;
}
function oooi_DxConvex$CollideConvexPlane__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxConvex$CollideConvexPlane_dCollideConvexPlane($this, $Convex, $Plane, $flags, $contactBuf, $skip) {
    var var$6, $contacts, $v2, $totalsign, $i, $distance2sign, $distance2, var$13, $target;
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    var$6 = $flags & 65535;
    oooi_Common_dIASSERT(var$6 < 1 ? 0 : 1);
    $contacts = 0;
    $v2 = oom_DVector3__init_();
    $totalsign = 0;
    $i = 0;
    a: {
        while ($i < oooi_DxConvex_access$100($Convex)) {
            ooo_OdeMath_dMultiply0_3310($v2, $Convex.$final_posr().$R(), oooi_DxConvex_access$200($Convex), $i * 3 | 0);
            oom_DVector3_add($v2, $Convex.$final_posr().$pos());
            $distance2sign = 536870912;
            $distance2 = $Plane.$getNormal().$dot($v2) - $Plane.$getDepth();
            var$13 = $rt_compare($distance2, 0.0);
            if (var$13 <= 0) {
                $distance2sign = !var$13 ? 805306368 : 268435456;
                if ($contacts != var$6) {
                    $target = ooo_DContactGeomBuffer_getSafe($contactBuf, $flags, $contacts);
                    oom_DVector3_set($target.$normal, $Plane.$getNormal());
                    oom_DVector3_set($target.$pos0, $v2);
                    $target.$depth =  -$distance2;
                    $target.$g1 = $Convex;
                    $target.$g2 = $Plane;
                    $target.$side1 = (-1);
                    $target.$side2 = (-1);
                    $contacts = $contacts + 1 | 0;
                }
            }
            $totalsign = $totalsign | $distance2sign;
            if (($contacts ^ var$6 | $totalsign) == 805306368)
                break a;
            $i = $i + 1 | 0;
        }
    }
    if ($totalsign == 805306368)
        return $contacts;
    return 0;
}
function oooi_DxConvex$CollideConvexPlane_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideConvexPlane($o1, $o2, $flags, $contacts, 1);
}
function okti_IImage() {
}
function oktt_HtmlImage() {
    var a = this; jl_Object.call(a);
    a.$name5 = null;
    a.$htmlImage = null;
}
function oktt_HtmlImage__init_(var_0) {
    var var_1 = new oktt_HtmlImage();
    oktt_HtmlImage__init_0(var_1, var_0);
    return var_1;
}
function oktt_HtmlImage_getSourceObject($this) {
    return $this.$htmlImage;
}
function oktt_HtmlImage_getWidth($this) {
    return $this.$htmlImage.width;
}
function oktt_HtmlImage_getHeight($this) {
    return $this.$htmlImage.height;
}
function oktt_HtmlImage_getBytes($this) {
    oktd_DATA_$callClinit();
    return oktd_DATA_getNullBuffer(oktd_DATA_INSTANCE);
}
function oktt_HtmlImage_setBytes($this, $$noName_0) {
    kji_Intrinsics_checkParameterIsNotNull($$noName_0, $rt_s(26));
}
function oktt_HtmlImage_getGlInternalFormat($this) {
    return 6408;
}
function oktt_HtmlImage_getGlPixelFormat($this) {
    return 6408;
}
function oktt_HtmlImage_getGlType($this) {
    return 5121;
}
function oktt_HtmlImage_getName($this) {
    return $this.$name5;
}
function oktt_HtmlImage__init_0($this, $htmlImage) {
    kji_Intrinsics_checkParameterIsNotNull($htmlImage, $rt_s(294));
    jl_Object__init_0($this);
    $this.$htmlImage = $htmlImage;
    $this.$name5 = $rt_s(6);
}
function oooi_DxConvex$CollideConvexBox() {
    jl_Object.call(this);
}
function oooi_DxConvex$CollideConvexBox__init_() {
    var var_0 = new oooi_DxConvex$CollideConvexBox();
    oooi_DxConvex$CollideConvexBox__init_0(var_0);
    return var_0;
}
function oooi_DxConvex$CollideConvexBox__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxConvex$CollideConvexBox_dCollideConvexBox($this, $Convex, $box, $flags, $contacts, $skip) {
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    return 0;
}
function oooi_DxConvex$CollideConvexBox_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideConvexBox($o1, $o2, $flags, $contacts, 1);
}
function jur_LeafQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$leaf = null;
}
function jur_LeafQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_LeafQuantifierSet();
    jur_LeafQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_0($this, $innerSet, $next, $type);
    $this.$leaf = $innerSet;
}
function jur_LeafQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $i, var$5;
    $i = 0;
    a: {
        while (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
            var$5 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$5 <= 0)
                break a;
            $stringIndex = $stringIndex + var$5 | 0;
            $i = $i + 1 | 0;
        }
    }
    while (true) {
        if ($i < 0)
            return (-1);
        var$5 = $this.$next0.$matches($stringIndex, $testString, $matchResult);
        if (var$5 >= 0)
            break;
        $stringIndex = $stringIndex - $this.$leaf.$charCount() | 0;
        $i = $i + (-1) | 0;
    }
    return var$5;
}
function jur_UnifiedQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
}
function jur_UnifiedQuantifierSet__init_(var_0) {
    var var_1 = new jur_UnifiedQuantifierSet();
    jur_UnifiedQuantifierSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UnifiedQuantifierSet__init_0($this, $quant) {
    jur_LeafQuantifierSet__init_0($this, $quant.$getInnerSet(), $quant.$getNext(), $quant.$getType());
    $this.$innerSet.$setNext($this);
}
function jur_UnifiedQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    while (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
        var$4 = $this.$leaf;
        if (var$4.$accepts($stringIndex, $testString) <= 0)
            break;
        $stringIndex = $stringIndex + $this.$leaf.$charCount() | 0;
    }
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
}
function jur_UnifiedQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $startSearch, $newSearch, $newSearch_0;
    $startSearch = $this.$next0.$find($stringIndex, $testString, $matchResult);
    if ($startSearch < 0)
        return (-1);
    $newSearch = $startSearch - $this.$leaf.$charCount() | 0;
    while ($newSearch >= $stringIndex && $this.$leaf.$accepts($newSearch, $testString) > 0) {
        $newSearch_0 = $newSearch - $this.$leaf.$charCount() | 0;
        $startSearch = $newSearch;
        $newSearch = $newSearch_0;
    }
    return $startSearch;
}
function oktj_IJSON() {
}
function oktj_JSON() {
    jl_Object.call(this);
}
var oktj_JSON_api = null;
var oktj_JSON_INSTANCE = null;
function oktj_JSON_$callClinit() {
    oktj_JSON_$callClinit = $rt_eraseClinit(oktj_JSON);
    oktj_JSON__clinit_();
}
function oktj_JSON__init_() {
    var var_0 = new oktj_JSON();
    oktj_JSON__init_0(var_0);
    return var_0;
}
function oktj_JSON_setApi($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    oktj_JSON_api = $_set___;
}
function oktj_JSON_parseObject($this, $text) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($text, $rt_s(295));
    var$2 = oktj_JSON_api;
    if (var$2 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$2.$parseObject($text);
}
function oktj_JSON__init_0($this) {
    oktj_JSON_$callClinit();
    jl_Object__init_0($this);
}
function oktj_JSON__clinit_() {
    oktj_JSON_INSTANCE = oktj_JSON__init_();
}
function ju_BitSet() {
    var a = this; jl_Object.call(a);
    a.$data = null;
    a.$length1 = 0;
}
function ju_BitSet__init_() {
    var var_0 = new ju_BitSet();
    ju_BitSet__init_0(var_0);
    return var_0;
}
function ju_BitSet__init_1(var_0) {
    var var_1 = new ju_BitSet();
    ju_BitSet__init_2(var_1, var_0);
    return var_1;
}
function ju_BitSet__init_0($this) {
    jl_Object__init_0($this);
    $this.$data = $rt_createIntArray(0);
}
function ju_BitSet__init_2($this, $nbits) {
    jl_Object__init_0($this);
    $this.$data = $rt_createIntArray((($nbits + 32 | 0) - 1 | 0) / 32 | 0);
}
function ju_BitSet_set($this, $bitIndex) {
    var $index, var$3;
    $index = $bitIndex / 32 | 0;
    if ($bitIndex >= $this.$length1) {
        ju_BitSet_ensureCapacity($this, $index + 1 | 0);
        $this.$length1 = $bitIndex + 1 | 0;
    }
    var$3 = $this.$data.data;
    var$3[$index] = var$3[$index] | 1 << ($bitIndex % 32 | 0);
}
function ju_BitSet_set0($this, $fromIndex, $toIndex) {
    var $fromDataIndex, $toDataIndex, var$5, $i;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $fromDataIndex = $fromIndex / 32 | 0;
    $toDataIndex = $toIndex / 32 | 0;
    if ($toIndex > $this.$length1) {
        ju_BitSet_ensureCapacity($this, $toDataIndex + 1 | 0);
        $this.$length1 = $toIndex;
    }
    if ($fromDataIndex == $toDataIndex) {
        var$5 = $this.$data.data;
        var$5[$fromDataIndex] = var$5[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex) & ju_BitSet_trailingOneBits($this, $toIndex);
    } else {
        var$5 = $this.$data.data;
        var$5[$fromDataIndex] = var$5[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex);
        $i = $fromDataIndex + 1 | 0;
        while ($i < $toDataIndex) {
            $this.$data.data[$i] = (-1);
            $i = $i + 1 | 0;
        }
        var$5 = $this.$data.data;
        var$5[$toDataIndex] = var$5[$toDataIndex] | ju_BitSet_trailingOneBits($this, $toIndex);
    }
}
function ju_BitSet_trailingZeroBits($this, $num) {
    var var$2;
    var$2 = $num % 32 | 0;
    return (-1) << var$2;
}
function ju_BitSet_trailingOneBits($this, $num) {
    var var$2;
    var$2 = $num % 32 | 0;
    return !var$2 ? 0 : (-1) >>> (32 - var$2 | 0);
}
function ju_BitSet_clear($this, $bitIndex) {
    var $index, var$3;
    $index = $bitIndex / 32 | 0;
    if ($index < $this.$data.data.length) {
        var$3 = $this.$data.data;
        var$3[$index] = var$3[$index] & jl_Integer_rotateLeft((-2), $bitIndex % 32 | 0);
        if ($bitIndex == ($this.$length1 - 1 | 0))
            ju_BitSet_recalculateLength($this);
    }
}
function ju_BitSet_clear0($this, $fromIndex, $toIndex) {
    var var$3, $fromDataIndex, $toDataIndex, var$6, $i;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if ($fromIndex >= $this.$length1)
        return;
    var$3 = jl_Math_min($this.$length1, $toIndex);
    $fromDataIndex = $fromIndex / 32 | 0;
    $toDataIndex = var$3 / 32 | 0;
    if ($fromDataIndex == $toDataIndex) {
        var$6 = $this.$data.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] & (ju_BitSet_trailingOneBits($this, $fromIndex) | ju_BitSet_trailingZeroBits($this, var$3));
    } else {
        var$6 = $this.$data.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] & ju_BitSet_trailingOneBits($this, $fromIndex);
        $i = $fromDataIndex + 1 | 0;
        while ($i < $toDataIndex) {
            $this.$data.data[$i] = 0;
            $i = $i + 1 | 0;
        }
        var$6 = $this.$data.data;
        var$6[$toDataIndex] = var$6[$toDataIndex] & ju_BitSet_trailingZeroBits($this, var$3);
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_clear1($this) {
    $this.$length1 = 0;
    ju_Arrays_fill0($this.$data, 0);
}
function ju_BitSet_get($this, $bitIndex) {
    var $index;
    $index = $bitIndex / 32 | 0;
    return $index < $this.$data.data.length && $this.$data.data[$index] & 1 << ($bitIndex % 32 | 0) ? 1 : 0;
}
function ju_BitSet_nextSetBit($this, $fromIndex) {
    var $index, $val, var$4, $top, $i;
    if ($fromIndex >= $this.$length1)
        return (-1);
    $index = $fromIndex / 32 | 0;
    $val = $this.$data.data[$index];
    var$4 = $val >>> ($fromIndex % 32 | 0);
    if (var$4)
        return jl_Integer_numberOfTrailingZeros(var$4) + $fromIndex | 0;
    $top = ($this.$length1 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data.data[$i])
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data.data[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function ju_BitSet_nextClearBit($this, $fromIndex) {
    var $index, $val, var$4, $top, $i;
    if ($fromIndex >= $this.$length1)
        return $fromIndex;
    $index = $fromIndex / 32 | 0;
    $val = $this.$data.data[$index] ^ (-1);
    var$4 = $val >>> ($fromIndex % 32 | 0);
    if (var$4)
        return jl_Integer_numberOfTrailingZeros(var$4) + $fromIndex | 0;
    $top = ($this.$length1 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data.data[$i] != (-1))
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data.data[$i] ^ (-1)) | 0;
        $i = $i + 1 | 0;
    }
    return $this.$length1;
}
function ju_BitSet_ensureCapacity($this, $capacity) {
    var $newArrayLength;
    if ($this.$data.data.length >= $capacity)
        return;
    $newArrayLength = jl_Math_max(($capacity * 3 | 0) / 2 | 0, ($this.$data.data.length * 2 | 0) + 1 | 0);
    $this.$data = ju_Arrays_copyOf0($this.$data, $newArrayLength);
}
function ju_BitSet_recalculateLength($this) {
    var $top, $i, $sz;
    $top = ($this.$length1 + 31 | 0) / 32 | 0;
    $this.$length1 = $top * 32 | 0;
    $i = $top - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $sz = jl_Integer_numberOfLeadingZeros($this.$data.data[$i]);
            if ($sz < 32)
                break;
            $i = $i + (-1) | 0;
            $this.$length1 = $this.$length1 - 32 | 0;
        }
        $this.$length1 = $this.$length1 - $sz | 0;
    }
}
function ju_BitSet_intersects($this, $set) {
    var $sz, $i;
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        if ($this.$data.data[$i] & $set.$data.data[$i])
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function ju_BitSet_and($this, $set) {
    var $i, $i_0, var$4;
    $i = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i_0 = 0;
    while ($i_0 < $i) {
        var$4 = $this.$data.data;
        var$4[$i_0] = var$4[$i_0] & $set.$data.data[$i_0];
        $i_0 = $i_0 + 1 | 0;
    }
    while ($i < $this.$data.data.length) {
        $this.$data.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $this.$length1 = jl_Math_min($this.$length1, $set.$length1);
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_andNot($this, $set) {
    var $sz, $i, var$4;
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] & ($set.$data.data[$i] ^ (-1));
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_or($this, $set) {
    var $sz, $i, var$4;
    $this.$length1 = jl_Math_max($this.$length1, $set.$length1);
    ju_BitSet_ensureCapacity($this, ($this.$length1 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data.data.length, $set.$length1);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] | $set.$data.data[$i];
        $i = $i + 1 | 0;
    }
}
function ju_BitSet_xor($this, $set) {
    var $sz, $i, var$4;
    $this.$length1 = jl_Math_max($this.$length1, $set.$length1);
    ju_BitSet_ensureCapacity($this, ($this.$length1 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data.data.length, $set.$length1);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] ^ $set.$data.data[$i];
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_isEmpty($this) {
    return $this.$length1 ? 0 : 1;
}
function oooi_DxGimpact() {
    var a = this; oooi_DxTriMesh.call(a);
    a.$_Data = null;
    a.$m_collision_trimesh = null;
}
function oooi_DxGimpact__init_(var_0, var_1) {
    var var_2 = new oooi_DxGimpact();
    oooi_DxGimpact__init_0(var_2, var_0, var_1);
    return var_2;
}
function oooi_DxGimpact_FetchTriangleCount($this) {
    return oooi_DxGimpactCollision_FetchTriangleCount($this);
}
function oooi_DxGimpact_FetchTransformedTriangle($this, $i, $v) {
    oooi_DxGimpactCollision_FetchTransformedTriangle($this, $i, $v);
}
function oooi_DxGimpact__init_0($this, $Space, $Data) {
    oooi_DxTriMesh__init_0($this, $Space);
    $this.$_Data = $Data;
    $this.$type0 = 8;
    $this.$Callback = null;
    $this.$ArrayCallback = null;
    $this.$RayCallback = null;
    $this.$TriMergeCallback = null;
    $this.$dGeomTriMeshSetData($Data);
    $this.$doSphereTC = 1;
    $this.$doBoxTC = 1;
    $this.$doCapsuleTC = 1;
}
function oooi_DxGimpact_computeAABB($this) {
    var $transform;
    $transform = oooig_GimGeometry$mat4f__init_();
    oooig_GimGeometry_IDENTIFY_MATRIX_4X4($transform);
    oooi_DxGimpactCollision_MakeMatrix($this, $transform);
    $this.$m_collision_trimesh.$gim_trimesh_set_tranform($transform);
    $this.$m_collision_trimesh.$gim_trimesh_update();
    oooi_DxGimpactCollision_GIM_AABB_COPY($this.$m_collision_trimesh.$getAabbSet().$getGlobalBound(), $this.$_aabb);
}
function oooi_DxGimpact_dGeomTriMeshSetData($this, $Data) {
    var var$2, var$3, var$4;
    $this.$_Data = $Data;
    oooi_DxGeom_setFlagDirtyAndBad($this);
    if ($this.$_Data.$getDataRef() !== null) {
        var$2 = $this.$_Data;
        var$3 = var$2.$getDataRef();
        var$2 = $this.$_Data;
        var$4 = var$2.$getIndexRef();
        $this.$m_collision_trimesh = oooig_GimTrimesh_gim_trimesh_create_from_data(var$3, 0, var$4, 0, 1);
    }
}
function oooi_DxGimpact_getEdgeAngle($this, $triangle, $edge) {
    return $this.$_Data.$getEdgeAngle($triangle, $edge);
}
function jl_Float() {
    jl_Number.call(this);
    this.$value1 = 0.0;
}
var jl_Float_NaN = 0.0;
var jl_Float_TYPE = null;
function jl_Float_$callClinit() {
    jl_Float_$callClinit = $rt_eraseClinit(jl_Float);
    jl_Float__clinit_();
}
function jl_Float__init_(var_0) {
    var var_1 = new jl_Float();
    jl_Float__init_0(var_1, var_0);
    return var_1;
}
function jl_Float__init_0($this, $value) {
    jl_Float_$callClinit();
    jl_Number__init_0($this);
    $this.$value1 = $value;
}
function jl_Float_intValue($this) {
    return $this.$value1 | 0;
}
function jl_Float_floatValue($this) {
    return $this.$value1;
}
function jl_Float_valueOf($d) {
    jl_Float_$callClinit();
    return jl_Float__init_($d);
}
function jl_Float_equals($this, $other) {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Float && $other.$value1 === $this.$value1 ? 1 : 0;
}
function jl_Float_hashCode($this) {
    return jl_Float_hashCode0($this.$value1);
}
function jl_Float_hashCode0($f) {
    jl_Float_$callClinit();
    return $rt_floatToIntBits($f);
}
function jl_Float_compare(var$1, var$2) {
    jl_Float_$callClinit();
    return $rt_compare(var$1, var$2);
}
function jl_Float_compareTo($this, $other) {
    return jl_Float_compare($this.$value1, $other.$value1);
}
function jl_Float_compareTo0($this, var$1) {
    return $this.$compareTo1(var$1);
}
function jl_Float__clinit_() {
    jl_Float_NaN = NaN;
    jl_Float_TYPE = $rt_cls($rt_floatcls());
}
function oktm_Vec3$Companion() {
    jl_Object.call(this);
}
function oktm_Vec3$Companion__init_() {
    var var_0 = new oktm_Vec3$Companion();
    oktm_Vec3$Companion__init_0(var_0);
    return var_0;
}
function oktm_Vec3$Companion__init_1(var_0) {
    var var_1 = new oktm_Vec3$Companion();
    oktm_Vec3$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktm_Vec3$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktm_Vec3$Companion__init_2($this, $$constructor_marker) {
    oktm_Vec3$Companion__init_0($this);
}
function oooi_CollisionLibccd$CollideConvexSphereCCD() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$CollideConvexSphereCCD__init_() {
    var var_0 = new oooi_CollisionLibccd$CollideConvexSphereCCD();
    oooi_CollisionLibccd$CollideConvexSphereCCD__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$CollideConvexSphereCCD__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$CollideConvexSphereCCD_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    var $sphere, $conv, var$7, var$8, var$9, var$10;
    $sphere = oooi_CollisionLibccd$ccd_sphere_t__init_();
    $conv = oooi_CollisionLibccd$ccd_convex_t__init_(null);
    oooi_CollisionLibccd_ccdGeomToConvex($o1, $conv);
    oooi_CollisionLibccd_ccdGeomToSphere($o2, $sphere);
    var$7 = oooi_CollisionLibccd_access$500();
    var$8 = oooi_CollisionLibccd_access$100();
    var$9 = oooi_CollisionLibccd_ccdSupportSphere;
    var$10 = oooi_CollisionLibccd_access$100();
    return oooi_CollisionLibccd_ccdCollide($o1, $o2, $flags, $contacts, $conv, var$7, var$8, $sphere, var$9, var$10);
}
function okti_IKeyListener() {
}
function oktt_KeyboardTest$testMain$1() {
    jl_Object.call(this);
}
function oktt_KeyboardTest$testMain$1__init_() {
    var var_0 = new oktt_KeyboardTest$testMain$1();
    oktt_KeyboardTest$testMain$1__init_0(var_0);
    return var_0;
}
function oktt_KeyboardTest$testMain$1_keyDown($this, $keycode) {
    var var$2, var$3;
    oktu_LOG_$callClinit();
    var$2 = oktu_LOG_INSTANCE;
    var$3 = jl_StringBuilder__init_().$append($rt_s(296)).$append1($keycode).$append($rt_s(297));
    okti_KB_$callClinit();
    oktu_ILog$DefaultImpls_info$default(var$2, var$3.$append(okti_KB_toString(okti_KB_INSTANCE, $keycode)).$append12(41).$toString(), null, 2, null);
}
function oktt_KeyboardTest$testMain$1_keyUp($this, $keycode) {
    var var$2, var$3;
    oktu_LOG_$callClinit();
    var$2 = oktu_LOG_INSTANCE;
    var$3 = jl_StringBuilder__init_().$append($rt_s(298)).$append1($keycode).$append($rt_s(297));
    okti_KB_$callClinit();
    oktu_ILog$DefaultImpls_info$default(var$2, var$3.$append(okti_KB_toString(okti_KB_INSTANCE, $keycode)).$append12(41).$toString(), null, 2, null);
}
function oktt_KeyboardTest$testMain$1_keyTyped($this, $character) {
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append($rt_s(299)).$append12($character).$toString(), null, 2, null);
}
function oktt_KeyboardTest$testMain$1__init_0($this) {
    jl_Object__init_0($this);
}
function oktgg_GLTFConf() {
    var a = this; jl_Object.call(a);
    a.$saveFileBuffersInMem = 0;
    a.$saveTexturesInMem = 0;
    a.$saveMeshesInMem = 0;
    a.$separateThread = 0;
    a.$setupVelocityShader = 0;
    a.$receiveShadows = 0;
    a.$setupDepthRendering = 0;
    a.$setupGBufferShader = 0;
    a.$shaderVersion = 0;
}
function oktgg_GLTFConf__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new oktgg_GLTFConf();
    oktgg_GLTFConf__init_0(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function oktgg_GLTFConf__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) {
    var var_11 = new oktgg_GLTFConf();
    oktgg_GLTFConf__init_2(var_11, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10);
    return var_11;
}
function oktgg_GLTFConf__init_3() {
    var var_0 = new oktgg_GLTFConf();
    oktgg_GLTFConf__init_4(var_0);
    return var_0;
}
function oktgg_GLTFConf_getSeparateThread($this) {
    return $this.$separateThread;
}
function oktgg_GLTFConf_getSetupVelocityShader($this) {
    return $this.$setupVelocityShader;
}
function oktgg_GLTFConf_getReceiveShadows($this) {
    return $this.$receiveShadows;
}
function oktgg_GLTFConf_setReceiveShadows($this, $_set___) {
    $this.$receiveShadows = $_set___;
}
function oktgg_GLTFConf_getSetupDepthRendering($this) {
    return $this.$setupDepthRendering;
}
function oktgg_GLTFConf_setSetupDepthRendering($this, $_set___) {
    $this.$setupDepthRendering = $_set___;
}
function oktgg_GLTFConf_getSetupGBufferShader($this) {
    return $this.$setupGBufferShader;
}
function oktgg_GLTFConf_getShaderVersion($this) {
    return $this.$shaderVersion;
}
function oktgg_GLTFConf__init_0($this, $saveFileBuffersInMem, $saveTexturesInMem, $saveMeshesInMem, $separateThread, $setupVelocityShader, $receiveShadows, $setupDepthRendering, $setupGBufferShader, $shaderVersion) {
    jl_Object__init_0($this);
    $this.$saveFileBuffersInMem = $saveFileBuffersInMem;
    $this.$saveTexturesInMem = $saveTexturesInMem;
    $this.$saveMeshesInMem = $saveMeshesInMem;
    $this.$separateThread = $separateThread;
    $this.$setupVelocityShader = $setupVelocityShader;
    $this.$receiveShadows = $receiveShadows;
    $this.$setupDepthRendering = $setupDepthRendering;
    $this.$setupGBufferShader = $setupGBufferShader;
    $this.$shaderVersion = $shaderVersion;
}
function oktgg_GLTFConf__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11) {
    if (var$10 & 1)
        var$1 = 0;
    if (var$10 & 2)
        var$2 = 0;
    if (var$10 & 4)
        var$3 = 0;
    if (var$10 & 8)
        var$4 = 1;
    if (var$10 & 16)
        var$5 = 1;
    if (var$10 & 32)
        var$6 = 0;
    if (var$10 & 64)
        var$7 = 1;
    if (var$10 & 128)
        var$8 = 0;
    if (var$10 & 256)
        var$9 = !var$8 ? 110 : 330;
    oktgg_GLTFConf__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9);
}
function oktgg_GLTFConf__init_4(var$0) {
    oktgg_GLTFConf__init_2(var$0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 511, null);
}
function oktmb_MeshBuilder() {
    var a = this; jl_Object.call(a);
    a.$uv = 0;
    a.$normals = 0;
    a.$material = null;
    a.$positionName = null;
    a.$uvName = null;
    a.$normalName = null;
    a.$currentFloatBuffer = null;
}
function oktmb_MeshBuilder__init_() {
    var var_0 = new oktmb_MeshBuilder();
    oktmb_MeshBuilder__init_0(var_0);
    return var_0;
}
function oktmb_MeshBuilder_getUv($this) {
    return $this.$uv;
}
function oktmb_MeshBuilder_setUv($this, $_set___) {
    $this.$uv = $_set___;
}
function oktmb_MeshBuilder_getNormals($this) {
    return $this.$normals;
}
function oktmb_MeshBuilder_setNormals($this, $_set___) {
    $this.$normals = $_set___;
}
function oktmb_MeshBuilder_getMaterial($this) {
    return $this.$material;
}
function oktmb_MeshBuilder_setPositionName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$positionName = $_set___;
}
function oktmb_MeshBuilder_setUvName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$uvName = $_set___;
}
function oktmb_MeshBuilder_getCurrentFloatBuffer($this) {
    var var$1;
    var$1 = $this.$currentFloatBuffer;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(300));
    return var$1;
}
function oktmb_MeshBuilder_setCurrentFloatBuffer($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$currentFloatBuffer = $_set___;
}
function oktmb_MeshBuilder_createAttributes($this) {
    var $attributes, var$2;
    $attributes = new oktm_VertexInputs;
    var$2 = $rt_createArray(oktm_IVertexInput, 1);
    var$2.data[0] = oktm_VertexInput__init_(3, $this.$positionName, 5126, 0);
    oktm_VertexInputs__init_($attributes, var$2);
    if ($this.$getUv())
        $attributes.$add5(oktm_VertexInput__init_(2, $this.$uvName, 5126, 0));
    if ($this.$getNormals())
        $attributes.$add5(oktm_VertexInput__init_(3, $this.$normalName, 5126, 0));
    return $attributes;
}
function oktmb_MeshBuilder_createVertices($this, $verticesNum, $block) {
    var $attributes, var$4, var$5, var$6;
    kji_Intrinsics_checkParameterIsNotNull($block, $rt_s(301));
    $attributes = oktmb_MeshBuilder_createAttributes($this);
    var$4 = $attributes;
    oktd_DATA_$callClinit();
    var$5 = oktd_DATA_bytes(oktd_DATA_INSTANCE, $rt_imul($verticesNum, $attributes.$getBytesPerVertex()));
    $block.$invoke1(var$5);
    var$6 = null;
    return oktm_VertexBufferObject__init_1(var$4, var$5, 0, 0, 0, 28, var$6);
}
function oktmb_MeshBuilder_createVerticesFloat($this, $verticesNum, $block) {
    var var$3;
    kji_Intrinsics_checkParameterIsNotNull($block, $rt_s(301));
    var$3 = oktmb_MeshBuilder_createVertices($this, $verticesNum, oktmb_MeshBuilder$createVerticesFloat$1__init_($this, $block));
    return var$3;
}
function oktmb_MeshBuilder_createIndices($this, $indicesNum, $type, $block) {
    var var$4, var$5;
    kji_Intrinsics_checkParameterIsNotNull($block, $rt_s(301));
    oktd_DATA_$callClinit();
    var$4 = oktd_DATA_bytes(oktd_DATA_INSTANCE, $indicesNum * 2 | 0);
    $block.$invoke1(var$4);
    var$5 = null;
    return oktm_IndexBufferObject__init_(var$4, $type, 0, 0, 12, var$5);
}
function oktmb_MeshBuilder_createIndicesShort($this, $indicesNum, $block) {
    kji_Intrinsics_checkParameterIsNotNull($block, $rt_s(301));
    return oktmb_MeshBuilder_createIndices($this, $indicesNum, 5123, oktmb_MeshBuilder$createIndicesShort$1__init_($block));
}
function oktmb_MeshBuilder_build($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $out.$setMaterial($this.$material);
    return $out;
}
function oktmb_MeshBuilder_build$default(var$1, var$2, var$3, var$4) {
    if (var$4 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(302)));
    if (var$3 & 1) {
        oktm_IMesh_$callClinit();
        var$2 = oktm_IMesh$Companion_getBuild(oktm_IMesh_Companion).$invoke6();
    }
    return var$1.$build(var$2);
}
function oktmb_MeshBuilder__init_0($this) {
    jl_Object__init_0($this);
    $this.$uv = 1;
    $this.$normals = 1;
    $this.$material = oktg_Material__init_(null, null, 0.0, 0.0, 0.0, 0, 0, 0, 0, null, null, 2047, null);
    $this.$positionName = $rt_s(303);
    $this.$uvName = $rt_s(304);
    $this.$normalName = $rt_s(305);
}
function jur_AbstractCharClass$LazyCategoryScope() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category0 = 0;
    a.$mayContainSupplCodepoints1 = 0;
    a.$containsAllSurrogates0 = 0;
}
function jur_AbstractCharClass$LazyCategoryScope__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_1(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyCategoryScope__init_0(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$LazyCategoryScope__init_1($this, $cat, $mayContainSupplCodepoints) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
}
function jur_AbstractCharClass$LazyCategoryScope__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
    $this.$containsAllSurrogates0 = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
}
function jur_AbstractCharClass$LazyCategoryScope_computeValue($this) {
    var $chCl;
    $chCl = jur_UnicodeCategoryScope__init_($this.$category0);
    if ($this.$containsAllSurrogates0)
        $chCl.$lowHighSurrogates.$set0(0, 2048);
    $chCl.$mayContainSupplCodepoints0 = $this.$mayContainSupplCodepoints1;
    return $chCl;
}
function jl_Runnable() {
}
function ooott_Task() {
    var a = this; jl_Object.call(a);
    a.$executor = null;
    a.$name6 = null;
    a.$parent = null;
    a.$runnable = null;
    a.$subtaskCount = null;
}
function ooott_Task__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new ooott_Task();
    ooott_Task__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function ooott_Task__init_0($this, $executor, $name, $parent, $runnable) {
    jl_Object__init_0($this);
    $this.$executor = $executor;
    $this.$name6 = $name;
    $this.$parent = $parent;
    $this.$runnable = $runnable;
    $this.$subtaskCount = juca_AtomicInteger__init_(0);
}
function ooott_Task_awaitCompletion($this) {
    $this.$executor.$flush0();
}
function ooott_Task_submit($this) {
    $this.$executor.$submit($this);
}
function oktts_ThresholdTest$testMain$1$1() {
    kji_Lambda.call(this);
    this.$this$014 = null;
}
function oktts_ThresholdTest$testMain$1$1__init_(var_0) {
    var var_1 = new oktts_ThresholdTest$testMain$1$1();
    oktts_ThresholdTest$testMain$1$1__init_0(var_1, var_0);
    return var_1;
}
function oktts_ThresholdTest$testMain$1$1_invoke(var$0, var$1) {
    oktts_ThresholdTest$testMain$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktts_ThresholdTest$testMain$1$1_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_CubeModel_render($this.$this$014.$$model0);
}
function oktts_ThresholdTest$testMain$1$1__init_0(var$0, var$1) {
    var$0.$this$014 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oooi_CollisionLibccd() {
    jl_Object.call(this);
}
var oooi_CollisionLibccd_ccdSupportBox = null;
var oooi_CollisionLibccd_ccdSupportCap = null;
var oooi_CollisionLibccd_ccdSupportCyl = null;
var oooi_CollisionLibccd_ccdSupportSphere = null;
var oooi_CollisionLibccd_ccdSupportConvex = null;
var oooi_CollisionLibccd_ccdCenter = null;
var oooi_CollisionLibccd_ccdSupportTriangle = null;
function oooi_CollisionLibccd_$callClinit() {
    oooi_CollisionLibccd_$callClinit = $rt_eraseClinit(oooi_CollisionLibccd);
    oooi_CollisionLibccd__clinit_();
}
function oooi_CollisionLibccd__init_() {
    var var_0 = new oooi_CollisionLibccd();
    oooi_CollisionLibccd__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd__init_0($this) {
    oooi_CollisionLibccd_$callClinit();
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd_ccdGeomToObj($g, $o) {
    var $ode_pos, $ode_rot;
    oooi_CollisionLibccd_$callClinit();
    $ode_pos = $g.$getPosition2();
    $ode_rot = $g.$getQuaternion();
    oooil_CCDVec3_ccdVec3Set($o.$pos1, $ode_pos);
    oooil_CCDQuat_ccdQuatSet($o.$rot, $ode_rot.$get10(), $ode_rot.$get20(), $ode_rot.$get30(), $ode_rot.$get01());
    oooil_CCDQuat_ccdQuatInvert2($o.$rot_inv, $o.$rot);
}
function oooi_CollisionLibccd_ccdGeomToBox($g, $box) {
    var $dim;
    oooi_CollisionLibccd_$callClinit();
    $dim = oom_DVector3__init_();
    oooi_CollisionLibccd_ccdGeomToObj($g, $box);
    $g.$getLengths($dim);
    $box.$dim.data[0] = oom_DVector3_get0($dim) / 2.0;
    $box.$dim.data[1] = oom_DVector3_get1($dim) / 2.0;
    $box.$dim.data[2] = oom_DVector3_get2($dim) / 2.0;
}
function oooi_CollisionLibccd_ccdGeomToCap($g, $cap) {
    oooi_CollisionLibccd_$callClinit();
    oooi_CollisionLibccd_ccdGeomToObj($g, $cap);
    $cap.$radius = $g.$getRadius();
    oooil_CCDVec3_ccdVec3Set0($cap.$axis, 0.0, 0.0, $g.$getLength() / 2.0);
    oooil_CCDQuat_ccdQuatRotVec($cap.$axis, $cap.$rot);
    oooil_CCDVec3_ccdVec3Copy($cap.$p1, $cap.$axis);
    oooil_CCDVec3_ccdVec3Copy($cap.$p2, $cap.$axis);
    oooil_CCDVec3_ccdVec3Scale($cap.$p2, (-1.0));
    oooil_CCDVec3_ccdVec3Add($cap.$p1, $cap.$pos1);
    oooil_CCDVec3_ccdVec3Add($cap.$p2, $cap.$pos1);
}
function oooi_CollisionLibccd_ccdGeomToCyl($g, $cyl) {
    oooi_CollisionLibccd_$callClinit();
    oooi_CollisionLibccd_ccdGeomToObj($g, $cyl);
    $cyl.$radius0 = $g.$getRadius();
    oooil_CCDVec3_ccdVec3Set0($cyl.$axis0, 0.0, 0.0, $g.$getLength() / 2.0);
    oooil_CCDQuat_ccdQuatRotVec($cyl.$axis0, $cyl.$rot);
    oooil_CCDVec3_ccdVec3Copy($cyl.$p10, $cyl.$axis0);
    oooil_CCDVec3_ccdVec3Copy($cyl.$p20, $cyl.$axis0);
    oooil_CCDVec3_ccdVec3Normalize($cyl.$axis0);
    oooil_CCDVec3_ccdVec3Scale($cyl.$p20, (-1.0));
    oooil_CCDVec3_ccdVec3Add($cyl.$p10, $cyl.$pos1);
    oooil_CCDVec3_ccdVec3Add($cyl.$p20, $cyl.$pos1);
}
function oooi_CollisionLibccd_ccdGeomToSphere($g, $s) {
    oooi_CollisionLibccd_$callClinit();
    oooi_CollisionLibccd_ccdGeomToObj($g, $s);
    $s.$radius1 = $g.$getRadius();
}
function oooi_CollisionLibccd_ccdGeomToConvex($g, $c) {
    oooi_CollisionLibccd_$callClinit();
    oooi_CollisionLibccd_ccdGeomToObj($g, $c);
    $c.$convex = $g;
}
function oooi_CollisionLibccd_ccdCollide($o1, $o2, $flags, $contacts, $obj1, $supp1, $cen1, $obj2, $supp2, $cen2) {
    var $ccd, $depth, $dir, $pos, $max_contacts, $res, $contact;
    oooi_CollisionLibccd_$callClinit();
    $ccd = oooil_CCD$ccd_t__init_();
    $depth = oooicj_RefDouble__init_0();
    $dir = oooil_CCDVec3$ccd_vec3_t__init_();
    $pos = oooil_CCDVec3$ccd_vec3_t__init_();
    $max_contacts = $flags & 65535;
    if ($max_contacts < 1)
        return 0;
    oooil_CCD_CCD_INIT($ccd);
    $ccd.$support1 = $supp1;
    $ccd.$support2 = $supp2;
    $ccd.$center1 = $cen1;
    $ccd.$center2 = $cen2;
    $ccd.$max_iterations = Long_fromInt(500);
    $ccd.$mpr_tolerance = 1.0E-6;
    if ($flags & (-2147483648)) {
        if (!oooil_CCDMPR_ccdMPRIntersect($obj1, $obj2, $ccd))
            return 0;
        return 1;
    }
    $res = oooil_CCDMPR_ccdMPRPenetration($obj1, $obj2, $ccd, $depth, $dir, $pos);
    if ($res)
        return 0;
    $contact = ooo_DContactGeomBuffer_get0($contacts);
    $contact.$g1 = $o1;
    $contact.$g2 = $o2;
    $contact.$side2 = (-1);
    $contact.$side1 = (-1);
    $contact.$depth = oooicj_RefDouble_get($depth);
    oom_DVector3_set0($contact.$pos0, oooil_CCDVec3_ccdVec3X($pos), oooil_CCDVec3_ccdVec3Y($pos), oooil_CCDVec3_ccdVec3Z($pos));
    oooil_CCDVec3_ccdVec3Scale($dir, (-1.0));
    oom_DVector3_set0($contact.$normal, oooil_CCDVec3_ccdVec3X($dir), oooil_CCDVec3_ccdVec3Y($dir), oooil_CCDVec3_ccdVec3Z($dir));
    return 1;
}
function oooi_CollisionLibccd_access$100() {
    oooi_CollisionLibccd_$callClinit();
    return oooi_CollisionLibccd_ccdCenter;
}
function oooi_CollisionLibccd_access$300() {
    oooi_CollisionLibccd_$callClinit();
    return oooi_CollisionLibccd_ccdSupportBox;
}
function oooi_CollisionLibccd_access$500() {
    oooi_CollisionLibccd_$callClinit();
    return oooi_CollisionLibccd_ccdSupportConvex;
}
function oooi_CollisionLibccd_access$700() {
    oooi_CollisionLibccd_$callClinit();
    return oooi_CollisionLibccd_ccdSupportTriangle;
}
function oooi_CollisionLibccd__clinit_() {
    oooi_CollisionLibccd_ccdSupportBox = oooi_CollisionLibccd$1__init_();
    oooi_CollisionLibccd_ccdSupportCap = oooi_CollisionLibccd$2__init_();
    oooi_CollisionLibccd_ccdSupportCyl = oooi_CollisionLibccd$3__init_();
    oooi_CollisionLibccd_ccdSupportSphere = oooi_CollisionLibccd$4__init_();
    oooi_CollisionLibccd_ccdSupportConvex = oooi_CollisionLibccd$5__init_();
    oooi_CollisionLibccd_ccdCenter = oooi_CollisionLibccd$6__init_();
    oooi_CollisionLibccd_ccdSupportTriangle = oooi_CollisionLibccd$7__init_();
}
function okttm_BoxMeshBuilderTest$testMain$2() {
    var a = this; kji_Lambda.call(a);
    a.$$cubeMatrix4 = null;
    a.$$shader = null;
    a.$$temp = null;
    a.$$mesh = null;
}
function okttm_BoxMeshBuilderTest$testMain$2__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new okttm_BoxMeshBuilderTest$testMain$2();
    okttm_BoxMeshBuilderTest$testMain$2__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function okttm_BoxMeshBuilderTest$testMain$2_invoke(var$0) {
    okttm_BoxMeshBuilderTest$testMain$2_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttm_BoxMeshBuilderTest$testMain$2_invoke0($this) {
    var var$1, var$2;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    $this.$$cubeMatrix4.$rotate(0.0, 1.0, 0.0, 0.009999999776482582);
    $this.$$shader.$bind();
    var$1 = $this.$$shader;
    var$2 = $this.$$temp.$set3($this.$$cubeMatrix4);
    oktgc_ActiveCamera_$callClinit();
    var$1.$set12($rt_s(306), var$2.$mulLeft(oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE)));
    oktm_IMesh$DefaultImpls_render$default($this.$$mesh, $this.$$shader, 0, 0, 0, 0, 30, null);
}
function okttm_BoxMeshBuilderTest$testMain$2__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$$cubeMatrix4 = var$1;
    var$0.$$shader = var$2;
    var$0.$$temp = var$3;
    var$0.$$mesh = var$4;
    kji_Lambda__init_0(var$0, 0);
}
function oooi_Common() {
    ooo_OdeConstants.call(this);
}
var oooi_Common_dEpsilon = 0.0;
var oooi_Common_MAX_FLOAT = 0.0;
function oooi_Common_$callClinit() {
    oooi_Common_$callClinit = $rt_eraseClinit(oooi_Common);
    oooi_Common__clinit_();
}
function oooi_Common__init_() {
    var var_0 = new oooi_Common();
    oooi_Common__init_0(var_0);
    return var_0;
}
function oooi_Common__init_0($this) {
    oooi_Common_$callClinit();
    ooo_OdeConstants__init_0($this);
}
function oooi_Common_dIVERIFY($a) {
    oooi_Common_$callClinit();
    oooi_Common_dIASSERT($a);
}
function oooi_Common_dIASSERT($b) {
    oooi_Common_$callClinit();
    if (!$b) {
        oooi_ErrorHandler_dDebug(1, $rt_s(307), $rt_createArray(jl_Object, 0));
        jl_RuntimeException__init_0().$printStackTrace1();
    }
}
function oooi_Common_dUASSERT1($a, $msg) {
    oooi_Common_$callClinit();
    if ($a === null)
        oooi_ErrorHandler_dDebug(2, $msg, $rt_createArray(jl_Object, 0));
}
function oooi_Common_dUASSERT($a, $msg) {
    oooi_Common_$callClinit();
    if (!$a)
        oooi_ErrorHandler_dDebug(2, $msg, $rt_createArray(jl_Object, 0));
}
function oooi_Common_dUASSERT0($a, $msg) {
    oooi_Common_$callClinit();
    if (!$a)
        oooi_ErrorHandler_dDebug(2, $msg, $rt_createArray(jl_Object, 0));
}
function oooi_Common_dDEBUGMSG($msg) {
    var $sw, $msg2;
    oooi_Common_$callClinit();
    $sw = ji_StringWriter__init_();
    ji_PrintWriter__init_(new ji_PrintWriter, $sw);
    jl_RuntimeException__init_($msg).$printStackTrace0(ji_PrintWriter__init_0($sw));
    $msg2 = $sw.$toString();
    oooi_ErrorHandler_dMessage(2, $msg2, $rt_createArray(jl_Object, 0));
}
function oooi_Common_dAASSERT($aa) {
    var var$2, var$3, var$4, $a;
    oooi_Common_$callClinit();
    var$2 = $aa.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $a = var$2[var$4];
        if ($a === null)
            oooi_Common_dUASSERT0(0, $rt_s(308));
        if ($a instanceof jl_Integer)
            oooi_Common_dUASSERT0($a.$intValue(), $rt_s(308));
        if ($a instanceof jl_Boolean)
            oooi_Common_dUASSERT($a.$booleanValue(), $rt_s(308));
        var$4 = var$4 + 1 | 0;
    }
}
function oooi_Common_dAASSERT1($a) {
    oooi_Common_$callClinit();
    if ($a === null)
        oooi_Common_dUASSERT0(0, $rt_s(308));
}
function oooi_Common_dAASSERT2($a) {
    oooi_Common_$callClinit();
    if ($a === null)
        oooi_Common_dUASSERT0(0, $rt_s(308));
}
function oooi_Common_dAASSERT0($b) {
    oooi_Common_$callClinit();
    if (!$b)
        oooi_Common_dUASSERT($b, $rt_s(308));
}
function oooi_Common_dRecip($x) {
    oooi_Common_$callClinit();
    return 1.0 / $x;
}
function oooi_Common_dSqrt($x) {
    oooi_Common_$callClinit();
    return jl_Math_sqrt($x);
}
function oooi_Common_dRecipSqrt($x) {
    oooi_Common_$callClinit();
    return 1.0 / jl_Math_sqrt($x);
}
function oooi_Common_dSin($x) {
    oooi_Common_$callClinit();
    return jl_Math_sin($x);
}
function oooi_Common_dCos($x) {
    oooi_Common_$callClinit();
    return jl_Math_cos($x);
}
function oooi_Common_dFabs($x) {
    oooi_Common_$callClinit();
    return jl_Math_abs($x);
}
function oooi_Common_dAtan2($y, $x) {
    oooi_Common_$callClinit();
    return jl_Math_atan2($y, $x);
}
function oooi_Common_dFloor($x) {
    oooi_Common_$callClinit();
    return jl_Math_floor($x);
}
function oooi_Common_dCeil($x) {
    oooi_Common_$callClinit();
    return jl_Math_ceil($x);
}
function oooi_Common_dNextAfter($start, $direction) {
    oooi_Common_$callClinit();
    return jl_Math_nextAfter($start, $direction);
}
function oooi_Common__clinit_() {
    oooi_Common_dEpsilon = 2.2250738585072014E-308;
    oooi_Common_MAX_FLOAT = 1.7976931348623157E308;
}
function oooi_Misc() {
    oooi_Common.call(this);
}
var oooi_Misc_seed = null;
function oooi_Misc_$callClinit() {
    oooi_Misc_$callClinit = $rt_eraseClinit(oooi_Misc);
    oooi_Misc__clinit_();
}
function oooi_Misc__init_() {
    var var_0 = new oooi_Misc();
    oooi_Misc__init_0(var_0);
    return var_0;
}
function oooi_Misc__init_0($this) {
    oooi_Misc_$callClinit();
    oooi_Common__init_0($this);
}
function oooi_Misc_dRand() {
    var $origSeed, $newSeed;
    oooi_Misc_$callClinit();
    while (true) {
        $origSeed = juca_AtomicLong_get(oooi_Misc_seed);
        $newSeed = Long_and(Long_add(Long_mul(Long_fromInt(1664525), $origSeed), Long_fromInt(1013904223)), new Long(4294967295, 0));
        if (!juca_AtomicLong_compareAndSet(oooi_Misc_seed, $origSeed, $newSeed))
            continue;
        else
            break;
    }
    return $newSeed;
}
function oooi_Misc_dRandInt($n) {
    var $raw_r, var$3, $result;
    oooi_Misc_$callClinit();
    $raw_r = oooi_Misc_dRand();
    if (Long_gt($n, Long_fromInt(16))) {
        if (Long_le($n, Long_fromInt(256))) {
            var$3 = Long_xor($raw_r, Long_shr($raw_r, 16));
            var$3 = Long_xor(var$3, Long_shr(var$3, 8));
            $result = Long_shr(Long_mul(Long_and(var$3, Long_fromInt(255)), $n), 8);
        } else if (Long_gt($n, Long_fromInt(65536)))
            $result = Long_fromInt(Long_mul($raw_r, $n).hi);
        else {
            var$3 = Long_xor($raw_r, Long_shr($raw_r, 16));
            $result = Long_shr(Long_mul(Long_and(var$3, Long_fromInt(65535)), $n), 16);
        }
    } else {
        var$3 = Long_xor($raw_r, Long_shr($raw_r, 16));
        var$3 = Long_xor(var$3, Long_shr(var$3, 8));
        var$3 = Long_xor(var$3, Long_shr(var$3, 4));
        if (Long_le($n, Long_fromInt(2))) {
            var$3 = Long_xor(var$3, Long_shr(var$3, 2));
            var$3 = Long_xor(var$3, Long_shr(var$3, 1));
            $result = Long_and(var$3, Long_shr($n, 1));
        } else if (Long_gt($n, Long_fromInt(4)))
            $result = Long_shr(Long_mul(Long_and(var$3, Long_fromInt(15)), $n), 4);
        else {
            var$3 = Long_xor(var$3, Long_shr(var$3, 2));
            $result = Long_shr(Long_mul(Long_and(var$3, Long_fromInt(3)), $n), 2);
        }
    }
    return $result.lo;
}
function oooi_Misc__clinit_() {
    oooi_Misc_seed = juca_AtomicLong__init_(Long_ZERO);
}
function oooi_FastDot() {
    oooi_Misc.call(this);
}
function oooi_FastDot__init_() {
    var var_0 = new oooi_FastDot();
    oooi_FastDot__init_0(var_0);
    return var_0;
}
function oooi_FastDot__init_0($this) {
    oooi_Misc__init_0($this);
}
function oktt_Tests() {
    var a = this; jl_Object.call(a);
    a.$groups = null;
    a.$meshes = null;
    a.$shaders = null;
    a.$glslNodes = null;
    a.$other = null;
    a.$physics = null;
}
function oktt_Tests__init_() {
    var var_0 = new oktt_Tests();
    oktt_Tests__init_0(var_0);
    return var_0;
}
function oktt_Tests_getGroups($this) {
    return $this.$groups;
}
function oktt_Tests__init_0($this) {
    var var$1, var$2, var$3, var$4;
    jl_Object__init_0($this);
    $this.$groups = ju_ArrayList__init_();
    var$1 = new oktt_TestGroup;
    var$2 = $rt_createArray(oktt_Test, 6);
    var$3 = var$2.data;
    var$3[0] = okttm_MeshTest__init_();
    var$3[1] = okttm_MeshCubeTest__init_();
    var$3[2] = okttm_PlaneMeshBuilderTest__init_();
    var$3[3] = okttm_BoxMeshBuilderTest__init_();
    var$3[4] = okttm_FrustumMeshBuilderTest__init_();
    var$3[5] = okttm_InstancingTest__init_();
    oktt_TestGroup__init_(var$1, $rt_s(309), var$2);
    $this.$meshes = var$1;
    var$4 = new oktt_TestGroup;
    var$2 = $rt_createArray(oktt_Test, 9);
    var$3 = var$2.data;
    var$3[0] = oktts_BloomBaseTest__init_();
    var$3[1] = oktts_BloomTest__init_();
    var$3[2] = oktts_CascadedShadowMappingBaseTest__init_();
    var$3[3] = oktts_FXAATest__init_();
    var$3[4] = oktts_GBufferBaseTest__init_();
    var$3[5] = oktts_MotionBlurBaseTest__init_();
    var$3[6] = oktts_ShadowMappingBaseTest__init_();
    var$3[7] = oktts_SSAOBaseTest__init_();
    var$3[8] = oktts_ThresholdTest__init_();
    oktt_TestGroup__init_(var$4, $rt_s(310), var$2);
    $this.$shaders = var$4;
    var$4 = new oktt_TestGroup;
    var$2 = $rt_createArray(oktt_Test, 6);
    var$3 = var$2.data;
    var$3[0] = okttsg_CascadedShadowMappingTest__init_();
    var$3[1] = okttsg_EmissionBloomTest__init_();
    var$3[2] = okttsg_GBufferTest__init_();
    var$3[3] = okttsg_MotionBlurTest__init_();
    var$3[4] = okttsg_SkyboxVertexNodeTest__init_();
    var$3[5] = okttsg_SSAOTest__init_();
    oktt_TestGroup__init_(var$4, $rt_s(311), var$2);
    $this.$glslNodes = var$4;
    var$4 = new oktt_TestGroup;
    var$2 = $rt_createArray(oktt_Test, 8);
    var$3 = var$2.data;
    var$3[0] = oktt_Texture2DTest__init_();
    var$3[1] = oktt_FrameBufferTest__init_();
    var$3[2] = oktts_SoundWavTest__init_();
    var$3[3] = oktt_KeyboardTest__init_();
    var$3[4] = oktt_MouseTest__init_();
    var$3[5] = oktt_CascadedShadowMatricesTest__init_();
    var$3[6] = oktt_SkyboxTest__init_();
    var$3[7] = oktt_GLTFLoaderAnimTest__init_();
    oktt_TestGroup__init_(var$4, $rt_s(312), var$2);
    $this.$other = var$4;
    var$4 = new oktt_TestGroup;
    var$2 = $rt_createArray(oktt_Test, 3);
    var$3 = var$2.data;
    var$3[0] = okttp_BoxShapeTest__init_();
    var$3[1] = okttp_SphereShapeTest__init_();
    var$3[2] = okttp_TrimeshShapeTest__init_();
    oktt_TestGroup__init_(var$4, $rt_s(313), var$2);
    $this.$physics = var$4;
    $this.$groups.$add1($this.$meshes);
    $this.$groups.$add1($this.$shaders);
    $this.$groups.$add1($this.$glslNodes);
    $this.$groups.$add1($this.$other);
    $this.$groups.$add1($this.$physics);
}
function cgcj_Jsonable() {
}
function kjf_Function3() {
}
function kjf_Function4() {
}
function oooi_DxSphere$CollideSpherePlane() {
    jl_Object.call(this);
}
function oooi_DxSphere$CollideSpherePlane__init_() {
    var var_0 = new oooi_DxSphere$CollideSpherePlane();
    oooi_DxSphere$CollideSpherePlane__init_0(var_0);
    return var_0;
}
function oooi_DxSphere$CollideSpherePlane__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxSphere$CollideSpherePlane_dCollideSpherePlane($this, $o1, $o2, $flags, $contacts, $skip) {
    var $contact, $k, $depth;
    oooi_Common_dIASSERT($skip != 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $contact = ooo_DContactGeomBuffer_get($contacts, 0);
    $contact.$g1 = $o1;
    $contact.$g2 = $o2;
    $contact.$side1 = (-1);
    $contact.$side2 = (-1);
    $k = $o1.$final_posr().$pos().$dot($o2.$getNormal());
    $depth = $o2.$getDepth() - $k + oooi_DxSphere_access$000($o1);
    if ($depth < 0.0)
        return 0;
    oom_DVector3_set($contact.$normal, $o2.$getNormal());
    oom_DVector3_eqSum0($contact.$pos0, $o1.$final_posr().$pos(), $contact.$normal,  -oooi_DxSphere_access$000($o1));
    $contact.$depth = $depth;
    return 1;
}
function oooi_DxSphere$CollideSpherePlane_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideSpherePlane($o1, $o2, $flags, $contacts, 1);
}
function jur_SpecialToken() {
    jl_Object.call(this);
}
function jur_SpecialToken__init_() {
    var var_0 = new jur_SpecialToken();
    jur_SpecialToken__init_0(var_0);
    return var_0;
}
function jur_SpecialToken__init_0($this) {
    jl_Object__init_0($this);
}
function jur_AbstractCharClass() {
    var a = this; jur_SpecialToken.call(a);
    a.$alt0 = 0;
    a.$altSurrogates = 0;
    a.$lowHighSurrogates = null;
    a.$charClassWithoutSurrogates = null;
    a.$charClassWithSurrogates = null;
    a.$mayContainSupplCodepoints0 = 0;
}
var jur_AbstractCharClass_charClasses = null;
function jur_AbstractCharClass_$callClinit() {
    jur_AbstractCharClass_$callClinit = $rt_eraseClinit(jur_AbstractCharClass);
    jur_AbstractCharClass__clinit_();
}
function jur_AbstractCharClass__init_() {
    var var_0 = new jur_AbstractCharClass();
    jur_AbstractCharClass__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass__init_0($this) {
    jur_AbstractCharClass_$callClinit();
    jur_SpecialToken__init_0($this);
    $this.$lowHighSurrogates = ju_BitSet__init_1(2048);
}
function jur_AbstractCharClass_getBits($this) {
    return null;
}
function jur_AbstractCharClass_getLowHighSurrogates($this) {
    return $this.$lowHighSurrogates;
}
function jur_AbstractCharClass_hasLowHighSurrogates($this) {
    var var$1, var$2;
    if (!$this.$altSurrogates) {
        var$1 = $this.$lowHighSurrogates;
        var$2 = var$1.$nextSetBit(0) >= 2048 ? 0 : 1;
    } else
        var$2 = $this.$lowHighSurrogates.$nextClearBit(0) >= 2048 ? 0 : 1;
    return var$2;
}
function jur_AbstractCharClass_mayContainSupplCodepoints($this) {
    return $this.$mayContainSupplCodepoints0;
}
function jur_AbstractCharClass_getInstance($this) {
    return $this;
}
function jur_AbstractCharClass_getSurrogates($this) {
    var $lHS;
    if ($this.$charClassWithSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        $this.$charClassWithSurrogates = jur_AbstractCharClass$1__init_($this, $lHS);
        $this.$charClassWithSurrogates.$setNegative($this.$altSurrogates);
    }
    return $this.$charClassWithSurrogates;
}
function jur_AbstractCharClass_getWithoutSurrogates($this) {
    var $lHS;
    if ($this.$charClassWithoutSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        $this.$charClassWithoutSurrogates = jur_AbstractCharClass$2__init_($this, $lHS, $this);
        $this.$charClassWithoutSurrogates.$setNegative($this.$isNegative());
        $this.$charClassWithoutSurrogates.$mayContainSupplCodepoints0 = $this.$mayContainSupplCodepoints0;
    }
    return $this.$charClassWithoutSurrogates;
}
function jur_AbstractCharClass_hasUCI($this) {
    return 0;
}
function jur_AbstractCharClass_setNegative($this, $value) {
    if ($this.$alt0 ^ $value) {
        $this.$alt0 = $this.$alt0 ? 0 : 1;
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
    }
    if (!$this.$mayContainSupplCodepoints0)
        $this.$mayContainSupplCodepoints0 = 1;
    return $this;
}
function jur_AbstractCharClass_isNegative($this) {
    return $this.$alt0;
}
function jur_AbstractCharClass_intersects($cc, $ch) {
    jur_AbstractCharClass_$callClinit();
    return $cc.$contains0($ch);
}
function jur_AbstractCharClass_intersects0($cc1, $cc2) {
    jur_AbstractCharClass_$callClinit();
    if ($cc1.$getBits() !== null && $cc2.$getBits() !== null)
        return $cc1.$getBits().$intersects($cc2.$getBits());
    return 1;
}
function jur_AbstractCharClass_getPredefinedClass($name, $negative) {
    jur_AbstractCharClass_$callClinit();
    return jur_AbstractCharClass$PredefinedCharacterClasses_getObject(jur_AbstractCharClass_charClasses, $name).$getValue0($negative);
}
function jur_AbstractCharClass__clinit_() {
    jur_AbstractCharClass_charClasses = jur_AbstractCharClass$PredefinedCharacterClasses__init_();
}
function jur_AbstractCharClass$LazyJavaTitleCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$015 = null;
}
function jur_AbstractCharClass$LazyJavaTitleCase$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaTitleCase$1();
    jur_AbstractCharClass$LazyJavaTitleCase$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaTitleCase$1__init_0($this, $this$0) {
    $this.$this$015 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaTitleCase$1_contains($this, $ch) {
    return jl_Character_isTitleCase($ch);
}
function kjf_Function2() {
}
function okttm_InstancingTest() {
    jl_Object.call(this);
}
function okttm_InstancingTest__init_() {
    var var_0 = new okttm_InstancingTest();
    okttm_InstancingTest__init_0(var_0);
    return var_0;
}
function okttm_InstancingTest_getName($this) {
    return $rt_s(314);
}
function okttm_InstancingTest_testMain($this) {
    var $simpleShader, var$2, var$3, var$4, var$5, $instancedShader, $stepX, $startX, $stepZ, $cubesY, $plane, $cubes, var$13, var$14, var$15, var$16, $endX, var$18, var$19, $control;
    $simpleShader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($simpleShader, $rt_s(315), $rt_s(316), var$2, 0, var$3, 0, var$4, 124, var$5);
    $instancedShader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($instancedShader, $rt_s(317), $rt_s(318), var$2, 0, var$3, 0, var$4, 124, var$5);
    $stepX = 5.0;
    $startX = (-200.0) * $stepX * 0.5;
    $stepZ = 5.0;
    $cubesY = 1.0;
    $plane = oktmb_MeshBuilder_build$default(oktmb_PlaneMeshBuilder__init_(1000.0, 1000.0, 0, 0, null, null, 60, null), null, 1, null);
    $cubes = oktmb_MeshBuilder_build$default(oktmb_BoxMeshBuilder__init_(0.0, 0.0, 0.0, 7, null), null, 1, null);
    var$3 = new oktm_VertexBufferObject;
    var$13 = new oktm_VertexInputs;
    var$14 = $rt_createArray(oktm_IVertexInput, 1);
    var$15 = var$14.data;
    var$15[0] = oktm_VertexInput__init_(3, $rt_s(319), 5126, 1);
    oktm_VertexInputs__init_(var$13, var$14);
    var$16 = null;
    oktm_VertexBufferObject__init_6(var$3, 40000, var$13, 40000, 0, 0, 24, var$16);
    var$16 = oktm_VertexBufferObject_getFloatBuffer(var$3);
    var$16.$setPosition(0);
    $endX = $startX + 1000.0;
    var$18 = $startX;
    while (var$18 < $endX) {
        var$19 = $startX;
        while (var$19 < $endX) {
            var$14 = $rt_createArray(jl_Float, 3);
            var$15 = var$14.data;
            var$15[0] = jl_Float_valueOf(var$18);
            var$15[1] = jl_Float_valueOf($cubesY);
            var$15[2] = jl_Float_valueOf(var$19);
            var$16.$put4(var$14);
            var$19 = var$19 + $stepZ;
        }
        var$18 = var$18 + $stepX;
    }
    oktm_VertexBufferObject_loadBufferToGpu(var$3);
    $cubes.$setInstances(var$3);
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_setApi(oktgc_ActiveCamera_INSTANCE, oktgc_Camera__init_(null, null, null, 0.10000000149011612, 1000.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4071, null));
    $control = oktgc_OrbitCameraControl__init_0(0.0, 0.0, 0.0, 0.0, 100.0, 0.0, 0.0, 0.0, 0.0, 0.0, null, 0, null, 8175, null);
    oktgc_OrbitCameraControl_listenToMouse($control);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, oktgc_OrbitCameraControl_getHelp($control), null, 2, null);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttm_InstancingTest$testMain$2__init_($control, $simpleShader, $plane, $instancedShader, $cubes), 1, null);
}
function okttm_InstancingTest__init_0($this) {
    jl_Object__init_0($this);
}
function okttsg_CascadedShadowMappingTest() {
    jl_Object.call(this);
}
function okttsg_CascadedShadowMappingTest__init_() {
    var var_0 = new okttsg_CascadedShadowMappingTest();
    okttsg_CascadedShadowMappingTest__init_0(var_0);
    return var_0;
}
function okttsg_CascadedShadowMappingTest_getName($this) {
    return $rt_s(320);
}
function okttsg_CascadedShadowMappingTest_testMain($this) {
    var var$1, var$2;
    var$1 = new oktt_GLTFModel;
    var$2 = null;
    okttsg_CascadedShadowMappingTest$testMain$1_$callClinit();
    oktt_GLTFModel__init_(var$1, 0, var$2, okttsg_CascadedShadowMappingTest$testMain$1_INSTANCE, 3, null);
}
function okttsg_CascadedShadowMappingTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_GLSLVec3() {
    oktsg_ShaderData.call(this);
    this.$name7 = null;
}
function oktsg_GLSLVec3__init_(var_0) {
    var var_1 = new oktsg_GLSLVec3();
    oktsg_GLSLVec3__init_0(var_1, var_0);
    return var_1;
}
function oktsg_GLSLVec3_getType($this) {
    return 5;
}
function oktsg_GLSLVec3_asFloat($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(321)).$toString();
}
function oktsg_GLSLVec3_asVec2($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(322)).$toString();
}
function oktsg_GLSLVec3_asVec3($this) {
    return $this.$getRef0();
}
function oktsg_GLSLVec3_asVec4($this) {
    return jl_StringBuilder__init_().$append($rt_s(270)).$append($this.$getRef0()).$append($rt_s(271)).$toString();
}
function oktsg_GLSLVec3_getName($this) {
    return $this.$name7;
}
function oktsg_GLSLVec3__init_0($this, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktsg_ShaderData__init_0($this);
    $this.$name7 = $name;
}
function oktsg_GLSLVec4() {
    oktsg_ShaderData.call(this);
    this.$name8 = null;
}
function oktsg_GLSLVec4__init_(var_0) {
    var var_1 = new oktsg_GLSLVec4();
    oktsg_GLSLVec4__init_0(var_1, var_0);
    return var_1;
}
function oktsg_GLSLVec4_getType($this) {
    return 6;
}
function oktsg_GLSLVec4_asFloat($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(321)).$toString();
}
function oktsg_GLSLVec4_asVec2($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(322)).$toString();
}
function oktsg_GLSLVec4_asVec3($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(323)).$toString();
}
function oktsg_GLSLVec4_asVec4($this) {
    return $this.$getRef0();
}
function oktsg_GLSLVec4_getName($this) {
    return $this.$name8;
}
function oktsg_GLSLVec4__init_0($this, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktsg_ShaderData__init_0($this);
    $this.$name8 = $name;
}
function ooo_DTriMeshData() {
}
function oooi_DxTriMeshData() {
    jl_Object.call(this);
}
function oooi_DxTriMeshData__init_() {
    var var_0 = new oooi_DxTriMeshData();
    oooi_DxTriMeshData__init_0(var_0);
    return var_0;
}
function oooi_DxTriMeshData__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxTriMeshData_dGeomTriMeshDataCreate() {
    var var$1;
    oooi_DxTriMeshData$1_$callClinit();
    var$1 = oooi_DxTriMeshData$1_$SwitchMap$org$ode4j$ode$OdeConfig$TRIMESH.data;
    ooo_OdeConfig_$callClinit();
    switch (var$1[jl_Enum_ordinal(ooo_OdeConfig_dTRIMESH_TYPE)]) {
        case 1:
            break;
        case 2:
            return oooi_DxGimpactData__init_();
        default:
            $rt_throw(jl_IllegalArgumentException__init_(jl_Enum_name(ooo_OdeConfig_dTRIMESH_TYPE)));
    }
    return oooi_DxTriMeshDisabled$dxTriMeshDisabledData__init_();
}
function kjf_Function9() {
}
function kjf_Function7() {
}
function oktsg_IShaderNode() {
}
function oktsg_ShaderNode() {
    var a = this; jl_Object.call(a);
    a.$inputInternal = null;
    a.$outputInternal = null;
    a.$shaderOrNull = null;
}
var oktsg_ShaderNode_tmpLinks = null;
var oktsg_ShaderNode_Companion = null;
function oktsg_ShaderNode_$callClinit() {
    oktsg_ShaderNode_$callClinit = $rt_eraseClinit(oktsg_ShaderNode);
    oktsg_ShaderNode__clinit_();
}
function oktsg_ShaderNode__init_() {
    var var_0 = new oktsg_ShaderNode();
    oktsg_ShaderNode__init_0(var_0);
    return var_0;
}
function oktsg_ShaderNode_getInputInternal($this) {
    return $this.$inputInternal;
}
function oktsg_ShaderNode_getShaderOrNull($this) {
    return $this.$shaderOrNull;
}
function oktsg_ShaderNode_setShaderOrNull($this, $_set___) {
    $this.$shaderOrNull = $_set___;
}
function oktsg_ShaderNode_getInput($this) {
    return $this.$inputInternal;
}
function oktsg_ShaderNode_getOutput($this) {
    return $this.$outputInternal;
}
function oktsg_ShaderNode_getAttribute($this) {
    return $this.$getShader().$getVersion() < 130 ? $rt_s(324) : $rt_s(325);
}
function oktsg_ShaderNode_getVarOut($this) {
    return $this.$getShader().$getVersion() < 130 ? $rt_s(326) : $rt_s(54);
}
function oktsg_ShaderNode_getVarIn($this) {
    return $this.$getShader().$getVersion() < 130 ? $rt_s(326) : $rt_s(325);
}
function oktsg_ShaderNode_defOut($this, $initial) {
    kji_Intrinsics_checkParameterIsNotNull($initial, $rt_s(327));
    $this.$outputInternal.$put3($initial.$getName(), $initial);
    return $initial;
}
function oktsg_ShaderNode_setInput($this, $name, $value) {
    var $input, $i, var$5, $link, $$this$contains$iv, $i$iv, $item$iv, $it;
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    $input = $this.$inputInternal.$get0($name);
    if ($input !== null) {
        oktsg_ShaderNode_tmpLinks.$clear();
        $i = 0;
        var$5 = $input.$getConnectedTo0().$size();
        while ($i < var$5) {
            $link = $input.$getConnectedTo0().$get1($i);
            if (kji_Intrinsics_areEqual(oktsg_ShaderNodeLink_getNode($link), $this) && kji_Intrinsics_areEqual(oktsg_ShaderNodeLink_getInputName($link), $name))
                oktsg_ShaderNode_tmpLinks.$add1($link);
            $i = $i + 1 | 0;
        }
        $i = 0;
        var$5 = oktsg_ShaderNode_tmpLinks.$size();
        while ($i < var$5) {
            $input.$getConnectedTo0().$remove1(oktsg_ShaderNode_tmpLinks.$get1($i));
            $i = $i + 1 | 0;
        }
        oktsg_ShaderNode_tmpLinks.$clear();
    }
    if ($value === null)
        $this.$inputInternal.$remove0($name);
    else {
        $$this$contains$iv = $value.$getConnectedTo0();
        $i$iv = 0;
        a: {
            while ($i$iv < $$this$contains$iv.$size()) {
                $item$iv = $$this$contains$iv.$get1($i$iv);
                if ($item$iv !== null) {
                    $it = $item$iv;
                    if (kji_Intrinsics_areEqual(oktsg_ShaderNodeLink_getNode($it), $this) && kji_Intrinsics_areEqual(oktsg_ShaderNodeLink_getInputName($it), $name) ? 1 : 0) {
                        var$5 = 1;
                        break a;
                    }
                }
                $i$iv = $i$iv + 1 | 0;
            }
            var$5 = 0;
        }
        if (!var$5) {
            $this.$inputInternal.$put3($name, $value);
            $value.$getConnectedTo0().$add1(oktsg_ShaderNodeLink__init_($this, $name));
        }
    }
}
function oktsg_ShaderNode_prepareToBuild($this) {
    var $$this$forEach$iv, var$2, $element$iv, $it;
    $$this$forEach$iv = $this.$getOutput().$values();
    var$2 = $$this$forEach$iv.$iterator();
    while (var$2.$hasNext()) {
        $element$iv = var$2.$next();
        $it = $element$iv;
        $it.$setContainer($this);
    }
}
function oktsg_ShaderNode_shaderCompiled($this) {
    return;
}
function oktsg_ShaderNode_prepareToDrawScene($this, $scene) {
    kji_Intrinsics_checkParameterIsNotNull($scene, $rt_s(328));
}
function oktsg_ShaderNode_prepareObjectData($this, $obj) {
    kji_Intrinsics_checkParameterIsNotNull($obj, $rt_s(329));
}
function oktsg_ShaderNode_prepareToDrawMesh($this, $mesh) {
    kji_Intrinsics_checkParameterIsNotNull($mesh, $rt_s(43));
}
function oktsg_ShaderNode_executionFrag($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
}
function oktsg_ShaderNode_executionVert($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
}
function oktsg_ShaderNode_declarationVert($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
}
function oktsg_ShaderNode_declarationFrag($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
}
function oktsg_ShaderNode__init_0($this) {
    oktsg_ShaderNode_$callClinit();
    jl_Object__init_0($this);
    $this.$inputInternal = ju_LinkedHashMap__init_();
    $this.$outputInternal = ju_LinkedHashMap__init_();
}
function oktsg_ShaderNode__clinit_() {
    oktsg_ShaderNode_Companion = oktsg_ShaderNode$Companion__init_(null);
    oktsg_ShaderNode_tmpLinks = ju_ArrayList__init_();
}
function oktsg_ShaderNode_getShader($this) {
    return oktsg_IShaderNode$DefaultImpls_getShader($this);
}
function oktsg_UVNode() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$aUVName = null;
    a.$uv0 = null;
}
var oktsg_UVNode_InputForm = null;
var oktsg_UVNode_Companion = null;
function oktsg_UVNode_$callClinit() {
    oktsg_UVNode_$callClinit = $rt_eraseClinit(oktsg_UVNode);
    oktsg_UVNode__clinit_();
}
function oktsg_UVNode__init_() {
    var var_0 = new oktsg_UVNode();
    oktsg_UVNode__init_0(var_0);
    return var_0;
}
function oktsg_UVNode_setAUVName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$aUVName = $_set___;
}
function oktsg_UVNode_getUv($this) {
    return $this.$uv0;
}
function oktsg_UVNode_declarationFrag($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if ($this.$uv0.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append12(32).$append($this.$uv0.$getTypedRef0()).$append($rt_s(330)).$toString());
}
function oktsg_UVNode_executionVert($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if ($this.$uv0.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append($this.$uv0.$getRef0()).$append($rt_s(331)).$append($this.$aUVName).$append($rt_s(330)).$toString());
}
function oktsg_UVNode_declarationVert($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if ($this.$uv0.$isUsed0()) {
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getAttribute($this)).$append12(32).$append($this.$uv0.$getTypeStr0()).$append12(32).$append($this.$aUVName).$append($rt_s(330)).$toString());
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append12(32).$append($this.$uv0.$getTypedRef0()).$append($rt_s(330)).$toString());
    }
}
function oktsg_UVNode__init_0($this) {
    oktsg_UVNode_$callClinit();
    oktsg_ShaderNode__init_0($this);
    $this.$aUVName = $rt_s(332);
    $this.$uv0 = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec2__init_($rt_s(333)));
}
function oktsg_UVNode__clinit_() {
    oktsg_UVNode_Companion = oktsg_UVNode$Companion__init_1(null);
    oktsg_UVNode_InputForm = ju_LinkedHashMap__init_();
}
function kjf_Function8() {
}
function kjf_Function5() {
}
function kjf_Function6() {
}
function oktgl_ILight() {
}
function jnc_UnsupportedCharsetException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName0 = null;
}
function jnc_UnsupportedCharsetException__init_(var_0) {
    var var_1 = new jnc_UnsupportedCharsetException();
    jnc_UnsupportedCharsetException__init_0(var_1, var_0);
    return var_1;
}
function jnc_UnsupportedCharsetException__init_0($this, $charsetName) {
    jl_IllegalArgumentException__init_1($this);
    $this.$charsetName0 = $charsetName;
}
function jur_AbstractCharClass$LazyJavaISOControl$1() {
    jur_AbstractCharClass.call(this);
    this.$this$016 = null;
}
function jur_AbstractCharClass$LazyJavaISOControl$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaISOControl$1();
    jur_AbstractCharClass$LazyJavaISOControl$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaISOControl$1__init_0($this, $this$0) {
    $this.$this$016 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaISOControl$1_contains($this, $ch) {
    return jl_Character_isISOControl($ch);
}
function oktts_GBufferBaseTest() {
    jl_Object.call(this);
}
function oktts_GBufferBaseTest__init_() {
    var var_0 = new oktts_GBufferBaseTest();
    oktts_GBufferBaseTest__init_0(var_0);
    return var_0;
}
function oktts_GBufferBaseTest_getName($this) {
    return $rt_s(334);
}
function oktts_GBufferBaseTest_testMain($this) {
    var $screenQuad, $gBuffer, var$3, var$4, var$5, var$6, $shader, var$8, $cube, $cubeMatrix;
    oktg_GL_$callClinit();
    if (oktg_GL_isGLES(oktg_GL_INSTANCE)) {
        if (oktg_GL_getGlesMajVer(oktg_GL_INSTANCE) < 3) {
            okt_APP_$callClinit();
            okt_APP_messageBox(okt_APP_INSTANCE, $rt_s(335), $rt_s(336));
            return;
        }
        if (oktg_GL_getGlesMajVer(oktg_GL_INSTANCE) == 3 && !oktg_GL_enableExtension(oktg_GL_INSTANCE, $rt_s(337))) {
            okt_APP_$callClinit();
            okt_APP_messageBox(okt_APP_INSTANCE, $rt_s(335), $rt_s(338));
            return;
        }
    }
    $screenQuad = oktm_ScreenQuad$TextureRenderer__init_(0.0, 0.0, 0.5, 0.5, null, null, 48, null);
    $gBuffer = oktt_GBuffer__init_(0, 0, 0, 0, 0, 31, null);
    oktgc_ActiveCamera_$callClinit();
    var$3 = oktgc_ActiveCamera_INSTANCE;
    var$4 = new oktgc_Camera;
    var$5 = oktm_Vec3__init_0(0.0, 3.0, (-3.0));
    oktm_IVec3_$callClinit();
    var$6 = oktm_IVec3$Companion_getZero(oktm_IVec3_Companion);
    oktgc_Camera__init_6(var$4, var$5, var$6, 2.0, 5.0);
    oktgc_ActiveCamera_setApi(var$3, var$4);
    $shader = new okts_Shader;
    var$5 = null;
    var$6 = null;
    var$8 = null;
    var$3 = null;
    okts_Shader__init_($shader, $rt_s(339), $rt_s(340), var$5, 0, var$6, 330, var$8, 92, var$3);
    $cube = oktmb_MeshBuilder_build$default(oktmb_BoxMeshBuilder__init_(0.0, 0.0, 0.0, 7, null), null, 1, null);
    $cubeMatrix = oktm_Mat4__init_();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktts_GBufferBaseTest$testMain$1__init_($cubeMatrix, $gBuffer, $shader, $cube, $screenQuad), 1, null);
}
function oktts_GBufferBaseTest__init_0($this) {
    jl_Object__init_0($this);
}
function oooil_CCDSupport$ccd_support_t() {
    var a = this; jl_Object.call(a);
    a.$v = null;
    a.$v1 = null;
    a.$v2 = null;
}
function oooil_CCDSupport$ccd_support_t__init_() {
    var var_0 = new oooil_CCDSupport$ccd_support_t();
    oooil_CCDSupport$ccd_support_t__init_0(var_0);
    return var_0;
}
function oooil_CCDSupport$ccd_support_t__init_0($this) {
    jl_Object__init_0($this);
    $this.$v = oooil_CCDVec3$ccd_vec3_t__init_();
    $this.$v1 = oooil_CCDVec3$ccd_vec3_t__init_();
    $this.$v2 = oooil_CCDVec3$ccd_vec3_t__init_();
}
function jur_LowSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$low = 0;
}
function jur_LowSurrogateCharSet__init_(var_0) {
    var var_1 = new jur_LowSurrogateCharSet();
    jur_LowSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_LowSurrogateCharSet__init_0($this, $low) {
    jur_JointSet__init_0($this);
    $this.$low = $low;
}
function jur_LowSurrogateCharSet_setNext($this, $next) {
    $this.$next0 = $next;
}
function jur_LowSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4, $low, $high;
    var$4 = $stringIndex + 1 | 0;
    if (var$4 > $matchResult.$getRightBound()) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $low = $testString.$charAt($stringIndex);
    if ($stringIndex > $matchResult.$getLeftBound()) {
        $high = $testString.$charAt($stringIndex - 1 | 0);
        if (jl_Character_isHighSurrogate($high))
            return (-1);
    }
    if ($this.$low != $low)
        return (-1);
    return $this.$next0.$matches(var$4, $testString, $matchResult);
}
function jur_LowSurrogateCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $startStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $startStr = $matchResult.$getLeftBound();
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$7 = $testStr.$indexOf($this.$low, $strIndex);
        if (var$7 < 0)
            return (-1);
        if (var$7 > $startStr && jl_Character_isHighSurrogate($testStr.$charAt(var$7 - 1 | 0))) {
            $strIndex = var$7 + 1 | 0;
            continue;
        }
        var$8 = $this.$next0;
        $strIndex = var$7 + 1 | 0;
        if (var$8.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$7;
}
function jur_LowSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $startStr, $testStr, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $startStr = $matchResult.$getLeftBound();
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf($this.$low, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if (var$7 > $startStr && jl_Character_isHighSurrogate($testStr.$charAt(var$7 - 1 | 0))) {
                $lastIndex = var$7 + (-2) | 0;
                continue;
            }
            if ($this.$next0.$matches(var$7 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_LowSurrogateCharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_HighSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_LowSurrogateCharSet))
        return 1;
    return $set.$low != $this.$low ? 0 : 1;
}
function jur_LowSurrogateCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function ju_Collection() {
}
function kc_ArrayAsCollection() {
    var a = this; jl_Object.call(a);
    a.$values0 = null;
    a.$isVarargs = 0;
}
function kc_ArrayAsCollection__init_(var_0, var_1) {
    var var_2 = new kc_ArrayAsCollection();
    kc_ArrayAsCollection__init_0(var_2, var_0, var_1);
    return var_2;
}
function kc_ArrayAsCollection_getSize($this) {
    return $this.$values0.data.length;
}
function kc_ArrayAsCollection_size(var$0) {
    return kc_ArrayAsCollection_getSize(var$0);
}
function kc_ArrayAsCollection_iterator($this) {
    return kji_ArrayIteratorKt_iterator($this.$values0);
}
function kc_ArrayAsCollection__init_0($this, $values, $isVarargs) {
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    jl_Object__init_0($this);
    $this.$values0 = $values;
    $this.$isVarargs = $isVarargs;
}
function jl_Error() {
    jl_Throwable.call(this);
}
function jl_Error__init_() {
    var var_0 = new jl_Error();
    jl_Error__init_0(var_0);
    return var_0;
}
function jl_Error__init_1(var_0, var_1) {
    var var_2 = new jl_Error();
    jl_Error__init_2(var_2, var_0, var_1);
    return var_2;
}
function jl_Error__init_3(var_0) {
    var var_1 = new jl_Error();
    jl_Error__init_4(var_1, var_0);
    return var_1;
}
function jl_Error__init_5(var_0) {
    var var_1 = new jl_Error();
    jl_Error__init_6(var_1, var_0);
    return var_1;
}
function jl_Error__init_0($this) {
    jl_Throwable__init_0($this);
}
function jl_Error__init_2($this, $message, $cause) {
    jl_Throwable__init_4($this, $message, $cause);
}
function jl_Error__init_4($this, $message) {
    jl_Throwable__init_2($this, $message);
}
function jl_Error__init_6($this, $cause) {
    jl_Throwable__init_6($this, $cause);
}
function ooo_DCapsule() {
}
function oooi_DxCapsule() {
    var a = this; oooi_DxGeom.call(a);
    a.$_radius = 0.0;
    a.$_lz = 0.0;
}
function oooi_DxCapsule_access$000($x0) {
    return $x0.$_lz;
}
function oooi_DxCapsule_access$100($x0) {
    return $x0.$_radius;
}
function ooo_DHeightfield() {
}
function jl_AssertionError() {
    jl_Error.call(this);
}
function jl_AssertionError__init_0() {
    var var_0 = new jl_AssertionError();
    jl_AssertionError__init_1(var_0);
    return var_0;
}
function jl_AssertionError__init_(var_0, var_1) {
    var var_2 = new jl_AssertionError();
    jl_AssertionError__init_2(var_2, var_0, var_1);
    return var_2;
}
function jl_AssertionError__init_1($this) {
    jl_Error__init_0($this);
}
function jl_AssertionError__init_2($this, $message, $cause) {
    jl_Error__init_2($this, $message, $cause);
}
function cgcj_JsonObject() {
    ju_HashMap.call(this);
}
function cgcj_JsonObject__init_() {
    var var_0 = new cgcj_JsonObject();
    cgcj_JsonObject__init_0(var_0);
    return var_0;
}
function cgcj_JsonObject__init_0($this) {
    ju_HashMap__init_0($this);
}
function oktsg_GLSLVec2() {
    oktsg_ShaderData.call(this);
    this.$name9 = null;
}
function oktsg_GLSLVec2__init_(var_0) {
    var var_1 = new oktsg_GLSLVec2();
    oktsg_GLSLVec2__init_0(var_1, var_0);
    return var_1;
}
function oktsg_GLSLVec2_getType($this) {
    return 4;
}
function oktsg_GLSLVec2_asFloat($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(321)).$toString();
}
function oktsg_GLSLVec2_asVec2($this) {
    return $this.$getRef0();
}
function oktsg_GLSLVec2_asVec3($this) {
    return jl_StringBuilder__init_().$append($rt_s(269)).$append($this.$getRef0()).$append($rt_s(341)).$toString();
}
function oktsg_GLSLVec2_asVec4($this) {
    return jl_StringBuilder__init_().$append($rt_s(270)).$append($this.$getRef0()).$append($rt_s(342)).$toString();
}
function oktsg_GLSLVec2_getName($this) {
    return $this.$name9;
}
function oktsg_GLSLVec2__init_0($this, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktsg_ShaderData__init_0($this);
    $this.$name9 = $name;
}
function jm_Division() {
    jl_Object.call(this);
}
function jm_Division__init_() {
    var var_0 = new jm_Division();
    jm_Division__init_0(var_0);
    return var_0;
}
function jm_Division__init_0($this) {
    jl_Object__init_0($this);
}
function jm_Division_divide($quot, $quotLength, $a, $j, $b, $bLength) {
    var var$7, $normA, $normB, var$10, $divisorShift, var$12, $firstDivisorDigit, $i, var$15, $product, $res, $rem, $rOverflowed, var$20, var$21, var$22, $longR, var$24, $borrow, $carry, $k;
    var$7 = $b.data;
    $normA = $rt_createIntArray($j + 1 | 0);
    $normB = $rt_createIntArray($bLength + 1 | 0);
    var$10 = $bLength - 1 | 0;
    $divisorShift = jl_Integer_numberOfLeadingZeros(var$7[var$10]);
    if ($divisorShift) {
        jm_BitLevel_shiftLeft($normB, $b, 0, $divisorShift);
        jm_BitLevel_shiftLeft($normA, $a, 0, $divisorShift);
    } else {
        jl_System_arraycopy($a, 0, $normA, 0, $j);
        jl_System_arraycopy($b, 0, $normB, 0, $bLength);
    }
    var$12 = $normB.data;
    $firstDivisorDigit = var$12[var$10];
    $i = $quotLength - 1 | 0;
    while ($i >= 0) {
        a: {
            var$7 = $normA.data;
            if (var$7[$j] == $firstDivisorDigit)
                var$15 = (-1);
            else {
                $product = Long_add(Long_shl(Long_and(Long_fromInt(var$7[$j]), new Long(4294967295, 0)), 32), Long_and(Long_fromInt(var$7[$j - 1 | 0]), new Long(4294967295, 0)));
                $res = jm_Division_divideLongByInt($product, $firstDivisorDigit);
                var$15 = $res.lo;
                $rem = $res.hi;
                if (var$15) {
                    $rOverflowed = 0;
                    var$15 = var$15 + 1 | 0;
                    while (true) {
                        var$15 = var$15 + (-1) | 0;
                        if ($rOverflowed)
                            break;
                        var$20 = Long_mul(Long_and(Long_fromInt(var$15), new Long(4294967295, 0)), Long_and(Long_fromInt(var$12[$bLength - 2 | 0]), new Long(4294967295, 0)));
                        var$21 = Long_fromInt($rem);
                        var$22 = Long_add(Long_shl(var$21, 32), Long_and(Long_fromInt(var$7[$j - 2 | 0]), new Long(4294967295, 0)));
                        $longR = Long_add(Long_and(var$21, new Long(4294967295, 0)), Long_and(Long_fromInt($firstDivisorDigit), new Long(4294967295, 0)));
                        if (jl_Integer_numberOfLeadingZeros($longR.hi) >= 32)
                            $rem = $longR.lo;
                        else
                            $rOverflowed = 1;
                        if (Long_le(Long_xor(var$20, new Long(0, 2147483648)), Long_xor(var$22, new Long(0, 2147483648))))
                            break a;
                    }
                }
            }
        }
        if (var$15) {
            var$24 = $j - $bLength | 0;
            $borrow = jm_Division_multiplyAndSubtract($normA, var$24, $normB, $bLength, var$15);
            if ($borrow) {
                var$15 = var$15 + (-1) | 0;
                $carry = Long_ZERO;
                $k = 0;
                while ($k < $bLength) {
                    var$10 = var$24 + $k | 0;
                    var$21 = Long_add($carry, Long_add(Long_and(Long_fromInt(var$7[var$10]), new Long(4294967295, 0)), Long_and(Long_fromInt(var$12[$k]), new Long(4294967295, 0))));
                    var$7[var$10] = var$21.lo;
                    $carry = Long_shru(var$21, 32);
                    $k = $k + 1 | 0;
                }
            }
        }
        if ($quot !== null)
            $quot.data[$i] = var$15;
        $j = $j + (-1) | 0;
        $i = $i + (-1) | 0;
    }
    if ($divisorShift) {
        jm_BitLevel_shiftRight($normB, $bLength, $normA, 0, $divisorShift);
        return $normB;
    }
    jl_System_arraycopy($normA, 0, $normB, 0, $bLength);
    return $normA;
}
function jm_Division_divideArrayByInt($dest, $src, $srcLength, $divisor) {
    var $rem, $bLong, $i, var$8, $temp, $quot, $aPos, $bPos, var$13;
    $rem = Long_ZERO;
    $bLong = Long_and(Long_fromInt($divisor), new Long(4294967295, 0));
    $i = $srcLength - 1 | 0;
    while ($i >= 0) {
        var$8 = $src.data;
        $temp = Long_or(Long_shl($rem, 32), Long_and(Long_fromInt(var$8[$i]), new Long(4294967295, 0)));
        if (Long_ge($temp, Long_ZERO)) {
            $quot = Long_div($temp, $bLong);
            $rem = Long_rem($temp, $bLong);
        } else {
            $aPos = Long_shru($temp, 1);
            $bPos = Long_fromInt($divisor >>> 1);
            $quot = Long_div($aPos, $bPos);
            var$13 = Long_rem($aPos, $bPos);
            $rem = Long_add(Long_shl(var$13, 1), Long_and($temp, Long_fromInt(1)));
            if ($divisor & 1) {
                if (Long_le($quot, $rem))
                    $rem = Long_sub($rem, $quot);
                else if (Long_le(Long_sub($quot, $rem), $bLong)) {
                    $rem = Long_add($rem, Long_sub($bLong, $quot));
                    $quot = Long_sub($quot, Long_fromInt(1));
                } else {
                    $rem = Long_add($rem, Long_sub(Long_shl($bLong, 1), $quot));
                    $quot = Long_sub($quot, Long_fromInt(2));
                }
            }
        }
        $dest.data[$i] = Long_and($quot, new Long(4294967295, 0)).lo;
        $i = $i + (-1) | 0;
    }
    return $rem.lo;
}
function jm_Division_divideLongByInt($a, $b) {
    var $bLong, $quot, $rem, $aPos, $bPos;
    $bLong = Long_and(Long_fromInt($b), new Long(4294967295, 0));
    if (Long_ge($a, Long_ZERO)) {
        $quot = Long_div($a, $bLong);
        $rem = Long_rem($a, $bLong);
    } else {
        $aPos = Long_shru($a, 1);
        $bPos = Long_fromInt($b >>> 1);
        $quot = Long_div($aPos, $bPos);
        $rem = Long_rem($aPos, $bPos);
        $rem = Long_add(Long_shl($rem, 1), Long_and($a, Long_fromInt(1)));
        if ($b & 1) {
            if (Long_le($quot, $rem))
                $rem = Long_sub($rem, $quot);
            else if (Long_le(Long_sub($quot, $rem), $bLong)) {
                $rem = Long_add($rem, Long_sub($bLong, $quot));
                $quot = Long_sub($quot, Long_fromInt(1));
            } else {
                $rem = Long_add($rem, Long_sub(Long_shl($bLong, 1), $quot));
                $quot = Long_sub($quot, Long_fromInt(2));
            }
        }
    }
    return Long_or(Long_shl($rem, 32), Long_and($quot, new Long(4294967295, 0)));
}
function jm_Division_divideAndRemainderByInteger($val, $divisor, $divisorSign) {
    var $valDigits, $valLen, $valSign, $quotientSign, $quotientDigits, $remainderDigits, $result0, $result1, var$12, var$13, $a, $b, $quo, $rem;
    $valDigits = $val.$digits;
    $valLen = $val.$numberLength;
    $valSign = $val.$sign1;
    if ($valLen != 1) {
        $quotientSign = $valSign != $divisorSign ? (-1) : 1;
        $quotientDigits = $rt_createIntArray($valLen);
        $remainderDigits = $rt_createIntArray(1);
        $remainderDigits.data[0] = jm_Division_divideArrayByInt($quotientDigits, $valDigits, $valLen, $divisor);
        $result0 = jm_BigInteger__init_($quotientSign, $valLen, $quotientDigits);
        $result1 = jm_BigInteger__init_($valSign, 1, $remainderDigits);
        jm_BigInteger_cutOffLeadingZeroes($result0);
        jm_BigInteger_cutOffLeadingZeroes($result1);
        var$12 = $rt_createArray(jm_BigInteger, 2);
        var$13 = var$12.data;
        var$13[0] = $result0;
        var$13[1] = $result1;
        return var$12;
    }
    $a = Long_and(Long_fromInt($valDigits.data[0]), new Long(4294967295, 0));
    $b = Long_and(Long_fromInt($divisor), new Long(4294967295, 0));
    $quo = Long_div($a, $b);
    $rem = Long_rem($a, $b);
    if ($valSign != $divisorSign)
        $quo = Long_neg($quo);
    if ($valSign < 0)
        $rem = Long_neg($rem);
    var$12 = $rt_createArray(jm_BigInteger, 2);
    var$13 = var$12.data;
    var$13[0] = jm_BigInteger_valueOf($quo);
    var$13[1] = jm_BigInteger_valueOf($rem);
    return var$12;
}
function jm_Division_multiplyAndSubtract($a, $start, $b, $bLen, $c) {
    var $carry0, $carry1, $i, var$9, var$10, var$11, var$12, var$13, var$14;
    $carry0 = Long_ZERO;
    $carry1 = Long_ZERO;
    $i = 0;
    while ($i < $bLen) {
        var$9 = $a.data;
        var$10 = jm_Multiplication_unsignedMultAddAdd($b.data[$i], $c, $carry0.lo, 0);
        var$11 = $start + $i | 0;
        var$12 = Long_add(Long_sub(Long_and(Long_fromInt(var$9[var$11]), new Long(4294967295, 0)), Long_and(var$10, new Long(4294967295, 0))), $carry1);
        var$9[var$11] = var$12.lo;
        $carry1 = Long_shr(var$12, 32);
        $carry0 = Long_shru(var$10, 32);
        $i = $i + 1 | 0;
    }
    var$13 = $a.data;
    var$14 = $start + $bLen | 0;
    var$12 = Long_add(Long_sub(Long_and(Long_fromInt(var$13[var$14]), new Long(4294967295, 0)), $carry0), $carry1);
    var$13[var$14] = var$12.lo;
    return var$12.hi;
}
function jur_CompositeQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
    this.$quantifier = null;
}
function jur_CompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CompositeQuantifierSet();
    jur_CompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
    $this.$quantifier = $quant;
}
function jur_CompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, $shift;
    $min = $this.$quantifier.$min0();
    $max = $this.$quantifier.$max0();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while ($i < $max) {
                    if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound())
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break a;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            while (true) {
                if ($i < $min)
                    return (-1);
                $shift = $this.$next0.$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $stringIndex = $stringIndex - $this.$leaf.$charCount() | 0;
                $i = $i + (-1) | 0;
            }
            return $shift;
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jm_BitLevel() {
    jl_Object.call(this);
}
function jm_BitLevel__init_() {
    var var_0 = new jm_BitLevel();
    jm_BitLevel__init_0(var_0);
    return var_0;
}
function jm_BitLevel__init_0($this) {
    jl_Object__init_0($this);
}
function jm_BitLevel_bitLength($val) {
    var $bLength, $highDigit, $i, var$5;
    if (!$val.$sign1)
        return 0;
    $bLength = $val.$numberLength << 5;
    $highDigit = $val.$digits.data[$val.$numberLength - 1 | 0];
    if ($val.$sign1 < 0) {
        $i = $val.$getFirstNonzeroDigit();
        if ($i == ($val.$numberLength - 1 | 0))
            $highDigit = $highDigit + (-1) | 0;
    }
    var$5 = $bLength - jl_Integer_numberOfLeadingZeros($highDigit) | 0;
    return var$5;
}
function jm_BitLevel_shiftLeft0($source, $count) {
    var $intCount, var$4, $resLength, $resDigits, $result;
    $intCount = $count >> 5;
    var$4 = $count & 31;
    $resLength = ($source.$numberLength + $intCount | 0) + (var$4 ? 1 : 0) | 0;
    $resDigits = $rt_createIntArray($resLength);
    jm_BitLevel_shiftLeft($resDigits, $source.$digits, $intCount, var$4);
    $result = jm_BigInteger__init_($source.$sign1, $resLength, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_BitLevel_shiftLeft($result, $source, $intCount, $count) {
    var var$5, $rightShiftCount, $i, var$8, var$9, var$10;
    a: {
        if (!$count)
            jl_System_arraycopy($source, 0, $result, $intCount, $result.data.length - $intCount | 0);
        else {
            var$5 = $result.data;
            $rightShiftCount = 32 - $count | 0;
            $i = var$5.length - 1 | 0;
            var$5[$i] = 0;
            while (true) {
                if ($i <= $intCount)
                    break a;
                var$8 = $source.data;
                var$9 = var$5[$i];
                var$10 = ($i - $intCount | 0) - 1 | 0;
                var$5[$i] = var$9 | var$8[var$10] >>> $rightShiftCount;
                var$5[$i - 1 | 0] = var$8[var$10] << $count;
                $i = $i + (-1) | 0;
            }
        }
    }
    $i = 0;
    while ($i < $intCount) {
        $result.data[$i] = 0;
        $i = $i + 1 | 0;
    }
}
function jm_BitLevel_shiftLeftOneBit($result, $source, $srcLen) {
    var $carry, $i, var$6, $val;
    $carry = 0;
    $i = 0;
    while ($i < $srcLen) {
        var$6 = $result.data;
        $val = $source.data[$i];
        var$6[$i] = $val << 1 | $carry;
        $carry = $val >>> 31;
        $i = $i + 1 | 0;
    }
    if ($carry)
        $result.data[$srcLen] = $carry;
}
function jm_BitLevel_shiftLeftOneBit0($source) {
    var $srcLen, $resLen, $resDigits, $result;
    $srcLen = $source.$numberLength;
    $resLen = $srcLen + 1 | 0;
    $resDigits = $rt_createIntArray($resLen);
    jm_BitLevel_shiftLeftOneBit($resDigits, $source.$digits, $srcLen);
    $result = jm_BigInteger__init_($source.$sign1, $resLen, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_BitLevel_shiftRight0($source, $count) {
    var $intCount, var$4, var$5, $resLength, var$7, $resDigits, $i, var$10, var$11, var$12, $result;
    $intCount = $count >> 5;
    var$4 = $count & 31;
    if ($intCount >= $source.$numberLength) {
        if ($source.$sign1 >= 0) {
            jm_BigInteger_$callClinit();
            var$5 = jm_BigInteger_ZERO;
        } else {
            jm_BigInteger_$callClinit();
            var$5 = jm_BigInteger_MINUS_ONE;
        }
        return var$5;
    }
    a: {
        $resLength = $source.$numberLength - $intCount | 0;
        var$7 = $resLength + 1 | 0;
        $resDigits = $rt_createIntArray(var$7);
        jm_BitLevel_shiftRight($resDigits, $resLength, $source.$digits, $intCount, var$4);
        if ($source.$sign1 >= 0)
            var$7 = $resLength;
        else {
            $i = 0;
            while (true) {
                var$10 = $rt_compare($i, $intCount);
                if (var$10 >= 0)
                    break;
                if ($source.$digits.data[$i])
                    break;
                $i = $i + 1 | 0;
            }
            if (var$10 >= 0) {
                if (var$4 <= 0) {
                    var$7 = $resLength;
                    break a;
                }
                if (!($source.$digits.data[$i] << (32 - var$4 | 0))) {
                    var$7 = $resLength;
                    break a;
                }
            }
            var$4 = 0;
            while (true) {
                var$11 = $rt_compare(var$4, $resLength);
                if (var$11 >= 0)
                    break;
                var$12 = $resDigits.data;
                if (var$12[var$4] != (-1))
                    break;
                var$12[var$4] = 0;
                var$4 = var$4 + 1 | 0;
            }
            if (var$11)
                var$7 = $resLength;
            var$12 = $resDigits.data;
            var$12[var$4] = var$12[var$4] + 1 | 0;
        }
    }
    $result = jm_BigInteger__init_($source.$sign1, var$7, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_BitLevel_shiftRight($result, $resultLen, $source, $intCount, $count) {
    var $allZero, $i, var$8, $leftShiftCount, var$10, var$11, var$12;
    $allZero = 1;
    $i = 0;
    while ($i < $intCount) {
        $allZero = $allZero & ($source.data[$i] ? 0 : 1);
        $i = $i + 1 | 0;
    }
    if (!$count)
        jl_System_arraycopy($source, $intCount, $result, 0, $resultLen);
    else {
        var$8 = $source.data;
        $leftShiftCount = 32 - $count | 0;
        $allZero = $allZero & (var$8[$i] << $leftShiftCount ? 0 : 1);
        var$10 = 0;
        while (var$10 < ($resultLen - 1 | 0)) {
            var$11 = $result.data;
            var$12 = var$10 + $intCount | 0;
            var$11[var$10] = var$8[var$12] >>> $count | var$8[var$12 + 1 | 0] << $leftShiftCount;
            var$10 = var$10 + 1 | 0;
        }
        $result.data[var$10] = var$8[var$10 + $intCount | 0] >>> $count;
    }
    return $allZero;
}
function jur_SupplRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$chars = null;
    a.$alt1 = 0;
}
function jur_SupplRangeSet__init_(var_0) {
    var var_1 = new jur_SupplRangeSet();
    jur_SupplRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SupplRangeSet__init_0($this, $cc) {
    jur_JointSet__init_0($this);
    $this.$chars = $cc.$getInstance();
    $this.$alt1 = $cc.$alt0;
}
function jur_SupplRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    if ($stringIndex < $strLength) {
        var$5 = $stringIndex + 1 | 0;
        $high = $testString.$charAt($stringIndex);
        if ($this.$contains0($high)) {
            var$7 = $this.$next0.$matches(var$5, $testString, $matchResult);
            if (var$7 > 0)
                return var$7;
        }
        if (var$5 < $strLength) {
            var$7 = var$5 + 1 | 0;
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low) && $this.$contains0(jl_Character_toCodePoint($high, $low)))
                return $this.$next0.$matches(var$7, $testString, $matchResult);
        }
    }
    return (-1);
}
function jur_SupplRangeSet_contains($this, $ch) {
    return $this.$chars.$contains0($ch);
}
function jur_SupplRangeSet_first($this, $set) {
    if ($set instanceof jur_SupplCharSet)
        return jur_AbstractCharClass_intersects($this.$chars, $set.$getCodePoint());
    if ($set instanceof jur_CharSet)
        return jur_AbstractCharClass_intersects($this.$chars, $set.$getChar());
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects0($this.$chars, $set.$chars);
    if (!($set instanceof jur_RangeSet))
        return 1;
    return jur_AbstractCharClass_intersects0($this.$chars, $set.$getChars0());
}
function jur_SupplRangeSet_getChars($this) {
    return $this.$chars;
}
function jur_SupplRangeSet_setNext($this, $next) {
    $this.$next0 = $next;
}
function jur_SupplRangeSet_hasConsumed($this, $mr) {
    return 1;
}
function jl_String() {
    var a = this; jl_Object.call(a);
    a.$characters = null;
    a.$hashCode1 = 0;
}
var jl_String_CASE_INSENSITIVE_ORDER = null;
function jl_String_$callClinit() {
    jl_String_$callClinit = $rt_eraseClinit(jl_String);
    jl_String__clinit_();
}
function jl_String__init_1() {
    var var_0 = new jl_String();
    jl_String__init_2(var_0);
    return var_0;
}
function jl_String__init_(var_0) {
    var var_1 = new jl_String();
    jl_String__init_3(var_1, var_0);
    return var_1;
}
function jl_String__init_0(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_5(var_0, var_1, var_2, var_3) {
    var var_4 = new jl_String();
    jl_String__init_6(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jl_String__init_7(var_0, var_1) {
    var var_2 = new jl_String();
    jl_String__init_8(var_2, var_0, var_1);
    return var_2;
}
function jl_String__init_9(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_10(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_2($this) {
    jl_String_$callClinit();
    jl_Object__init_0($this);
    $this.$characters = $rt_createCharArray(0);
}
function jl_String__init_3($this, $characters) {
    var var$2, var$3, $i;
    jl_String_$callClinit();
    var$2 = $characters.data;
    jl_Object__init_0($this);
    var$3 = var$2.length;
    $this.$characters = $rt_createCharArray(var$3);
    $i = 0;
    while ($i < var$3) {
        $this.$characters.data[$i] = var$2[$i];
        $i = $i + 1 | 0;
    }
}
function jl_String__init_4($this, $value, $offset, $count) {
    var $i, var$5;
    jl_String_$callClinit();
    jl_Object__init_0($this);
    $this.$characters = $rt_createCharArray($count);
    $i = 0;
    while ($i < $count) {
        var$5 = $value.data;
        $this.$characters.data[$i] = var$5[$i + $offset | 0];
        $i = $i + 1 | 0;
    }
}
function jl_String__init_6($this, $bytes, $offset, $length, $charset) {
    jl_String_$callClinit();
    jl_Object__init_0($this);
    jl_String_initWithBytes($this, $bytes, $offset, $length, $charset);
}
function jl_String__init_8($this, $bytes, $charset) {
    jl_String_$callClinit();
    jl_String__init_6($this, $bytes, 0, $bytes.data.length, $charset);
}
function jl_String__init_10($this, $codePoints, $offset, $count) {
    var $charCount, $i, var$6, var$7, $codePoint, var$9, var$10;
    jl_String_$callClinit();
    jl_Object__init_0($this);
    $this.$characters = $rt_createCharArray($count * 2 | 0);
    $charCount = 0;
    $i = 0;
    while ($i < $count) {
        var$6 = $codePoints.data;
        var$7 = $offset + 1 | 0;
        $codePoint = var$6[$offset];
        if ($codePoint < 65536) {
            var$6 = $this.$characters.data;
            var$9 = $charCount + 1 | 0;
            var$6[$charCount] = $codePoint & 65535;
        } else {
            var$6 = $this.$characters.data;
            var$10 = $charCount + 1 | 0;
            var$6[$charCount] = jl_Character_highSurrogate($codePoint);
            var$6 = $this.$characters.data;
            var$9 = var$10 + 1 | 0;
            var$6[var$10] = jl_Character_lowSurrogate($codePoint);
        }
        $i = $i + 1 | 0;
        $offset = var$7;
        $charCount = var$9;
    }
    if ($charCount < $this.$characters.data.length)
        $this.$characters = ju_Arrays_copyOf($this.$characters, $charCount);
}
function jl_String_initWithBytes($this, $bytes, $offset, $length, $charset) {
    var $buffer;
    $buffer = jnc_Charset_decode($charset, jn_ByteBuffer_wrap0($bytes, $offset, $length));
    if (jn_CharBuffer_hasArray($buffer) && !jn_Buffer_position($buffer) && jn_Buffer_limit($buffer) == jn_Buffer_capacity($buffer))
        $this.$characters = jn_CharBuffer_array($buffer);
    else {
        $this.$characters = $rt_createCharArray(jn_Buffer_remaining($buffer));
        $buffer.$get13($this.$characters);
    }
}
function jl_String_charAt($this, $index) {
    if ($index >= 0 && $index < $this.$characters.data.length)
        return $this.$characters.data[$index];
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_String_length($this) {
    return $this.$characters.data.length;
}
function jl_String_isEmpty($this) {
    return $this.$characters.data.length ? 0 : 1;
}
function jl_String_compareTo($this, $anotherString) {
    var $l, $i, $a, $b, var$6;
    if ($this === $anotherString)
        return 0;
    $l = jl_Math_min($this.$length(), $anotherString.$length());
    $i = 0;
    while (true) {
        if ($i >= $l)
            return $this.$length() - $anotherString.$length() | 0;
        $a = $this.$charAt($i);
        $b = $anotherString.$charAt($i);
        var$6 = $a - $b | 0;
        if (var$6)
            break;
        $i = $i + 1 | 0;
    }
    return var$6;
}
function jl_String_compareToIgnoreCase($this, $anotherString) {
    var $l, $i, $a, $b, var$6;
    if ($this === $anotherString)
        return 0;
    $l = jl_Math_min($this.$length(), $anotherString.$length());
    $i = 0;
    while (true) {
        if ($i >= $l)
            return $this.$length() - $anotherString.$length() | 0;
        $a = jl_Character_toLowerCase($this.$charAt($i));
        $b = jl_Character_toLowerCase($anotherString.$charAt($i));
        var$6 = $a - $b | 0;
        if (var$6)
            break;
        $i = $i + 1 | 0;
    }
    return var$6;
}
function jl_String_startsWith($this, $prefix, $toffset) {
    var $i, var$4, var$5;
    if (($toffset + $prefix.$length() | 0) > $this.$length())
        return 0;
    $i = 0;
    while ($i < $prefix.$length()) {
        var$4 = $prefix.$charAt($i);
        var$5 = $toffset + 1 | 0;
        if (var$4 != $this.$charAt($toffset))
            return 0;
        $i = $i + 1 | 0;
        $toffset = var$5;
    }
    return 1;
}
function jl_String_startsWith0($this, $prefix) {
    if ($this === $prefix)
        return 1;
    return $this.$startsWith($prefix, 0);
}
function jl_String_regionMatches($this, $ignoreCase, $toffset, $other, $ooffset, $len) {
    var $i, var$7, $a, var$9, $b;
    if ($toffset >= 0 && $ooffset >= 0 && ($toffset + $len | 0) <= $this.$length() && ($ooffset + $len | 0) <= $other.$length()) {
        $i = 0;
        while ($i < $len) {
            var$7 = $toffset + 1 | 0;
            $a = $this.$charAt($toffset);
            var$9 = $ooffset + 1 | 0;
            $b = $other.$charAt($ooffset);
            if ($ignoreCase) {
                $a = jl_Character_toLowerCase($a);
                $b = jl_Character_toLowerCase($b);
            }
            if ($a != $b)
                return 0;
            $i = $i + 1 | 0;
            $toffset = var$7;
            $ooffset = var$9;
        }
        return 1;
    }
    return 0;
}
function jl_String_regionMatches0($this, $toffset, $other, $ooffset, $len) {
    var $i, var$6, var$7, var$8;
    if ($toffset >= 0 && $ooffset >= 0 && ($toffset + $len | 0) <= $this.$length() && ($ooffset + $len | 0) <= $other.$length()) {
        $i = 0;
        while ($i < $len) {
            var$6 = $toffset + 1 | 0;
            var$7 = $this.$charAt($toffset);
            var$8 = $ooffset + 1 | 0;
            if (var$7 != $other.$charAt($ooffset))
                return 0;
            $i = $i + 1 | 0;
            $toffset = var$6;
            $ooffset = var$8;
        }
        return 1;
    }
    return 0;
}
function jl_String_endsWith($this, $suffix) {
    var $j, $i, var$4, var$5;
    if ($this === $suffix)
        return 1;
    if ($suffix.$length() > $this.$length())
        return 0;
    $j = 0;
    $i = $this.$length() - $suffix.$length() | 0;
    while ($i < $this.$length()) {
        var$4 = $this.$charAt($i);
        var$5 = $j + 1 | 0;
        if (var$4 != $suffix.$charAt($j))
            return 0;
        $i = $i + 1 | 0;
        $j = var$5;
    }
    return 1;
}
function jl_String_indexOf($this, $ch, $fromIndex) {
    var $i, $bmpChar, $hi, $lo;
    $i = jl_Math_max(0, $fromIndex);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i >= $this.$characters.data.length)
                return (-1);
            if ($this.$characters.data[$i] == $bmpChar)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i >= ($this.$characters.data.length - 1 | 0))
            return (-1);
        if ($this.$characters.data[$i] == $hi && $this.$characters.data[$i + 1 | 0] == $lo)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function jl_String_indexOf0($this, $ch) {
    return $this.$indexOf($ch, 0);
}
function jl_String_lastIndexOf($this, $ch, $fromIndex) {
    var $i, $bmpChar, $hi, $lo, var$7, var$8;
    $i = jl_Math_min($fromIndex, $this.$length() - 1 | 0);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i < 0)
                return (-1);
            if ($this.$characters.data[$i] == $bmpChar)
                break;
            $i = $i + (-1) | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i < 1)
            return (-1);
        if ($this.$characters.data[$i] == $lo) {
            var$7 = $this.$characters.data;
            var$8 = $i - 1 | 0;
            if (var$7[var$8] == $hi)
                break;
        }
        $i = $i + (-1) | 0;
    }
    return var$8;
}
function jl_String_indexOf1($this, $str, $fromIndex) {
    var $i, $toIndex, $j;
    $i = jl_Math_max(0, $fromIndex);
    $toIndex = $this.$length() - $str.$length() | 0;
    a: while (true) {
        if ($i > $toIndex)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$charAt($i + $j | 0) != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return $i;
}
function jl_String_lastIndexOf0($this, $str, $fromIndex) {
    var $i, $j;
    $i = jl_Math_min($fromIndex, $this.$length() - $str.$length() | 0);
    a: while (true) {
        if ($i < 0)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$charAt($i + $j | 0) != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + (-1) | 0;
    }
    return $i;
}
function jl_String_substring($this, $beginIndex, $endIndex) {
    if ($beginIndex > $endIndex)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    return jl_String__init_0($this.$characters, $beginIndex, $endIndex - $beginIndex | 0);
}
function jl_String_substring0($this, $beginIndex) {
    return $this.$substring($beginIndex, $this.$length());
}
function jl_String_subSequence($this, $beginIndex, $endIndex) {
    return $this.$substring($beginIndex, $endIndex);
}
function jl_String_toString($this) {
    return $this;
}
function jl_String_toCharArray($this) {
    var $array, $i, var$3;
    $array = $rt_createCharArray($this.$characters.data.length);
    $i = 0;
    while (true) {
        var$3 = $array.data;
        if ($i >= var$3.length)
            break;
        var$3[$i] = $this.$characters.data[$i];
        $i = $i + 1 | 0;
    }
    return $array;
}
function jl_String_valueOf($obj) {
    jl_String_$callClinit();
    return $obj === null ? $rt_s(70) : $obj.$toString();
}
function jl_String_valueOf2($data, $offset, $count) {
    jl_String_$callClinit();
    return jl_String__init_0($data, $offset, $count);
}
function jl_String_valueOf3($c) {
    var var$2, var$3;
    jl_String_$callClinit();
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_3(var$2, var$3);
    return var$2;
}
function jl_String_valueOf1($i) {
    jl_String_$callClinit();
    return jl_StringBuilder__init_().$append1($i).$toString();
}
function jl_String_valueOf0($f) {
    jl_String_$callClinit();
    return jl_StringBuilder__init_().$append11($f).$toString();
}
function jl_String_equals($this, $other) {
    var $str, $i;
    if ($this === $other)
        return 1;
    if (!($other instanceof jl_String))
        return 0;
    $str = $other;
    if ($str.$length() != $this.$length())
        return 0;
    $i = 0;
    while ($i < $str.$length()) {
        if ($this.$charAt($i) != $str.$charAt($i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function jl_String_hashCode($this) {
    var var$1, var$2, var$3, $c;
    a: {
        if (!$this.$hashCode1) {
            var$1 = $this.$characters.data;
            var$2 = var$1.length;
            var$3 = 0;
            while (true) {
                if (var$3 >= var$2)
                    break a;
                $c = var$1[var$3];
                $this.$hashCode1 = (31 * $this.$hashCode1 | 0) + $c | 0;
                var$3 = var$3 + 1 | 0;
            }
        }
    }
    return $this.$hashCode1;
}
function jl_String_toLowerCase($this) {
    var $codePoints, $codePointCount, $i, var$4, var$5, var$6, var$7, var$8;
    if ($this.$isEmpty())
        return $this;
    $codePoints = $rt_createIntArray($this.$characters.data.length);
    $codePointCount = 0;
    $i = 0;
    while ($i < $this.$characters.data.length) {
        a: {
            if ($i != ($this.$characters.data.length - 1 | 0) && jl_Character_isHighSurrogate($this.$characters.data[$i])) {
                var$4 = $this.$characters.data;
                var$5 = $i + 1 | 0;
                var$6 = var$4[var$5];
                if (jl_Character_isLowSurrogate(var$6)) {
                    var$7 = $codePoints.data;
                    var$8 = $codePointCount + 1 | 0;
                    var$7[$codePointCount] = jl_Character_toLowerCase0(jl_Character_toCodePoint($this.$characters.data[$i], $this.$characters.data[var$5]));
                    $i = var$5;
                    break a;
                }
            }
            var$7 = $codePoints.data;
            var$8 = $codePointCount + 1 | 0;
            var$7[$codePointCount] = jl_Character_toLowerCase($this.$characters.data[$i]);
        }
        $i = $i + 1 | 0;
        $codePointCount = var$8;
    }
    return jl_String__init_9($codePoints, 0, $codePointCount);
}
function jl_String_toUpperCase($this) {
    var $codePoints, $codePointCount, $i, var$4, var$5, var$6, var$7, var$8;
    if ($this.$isEmpty())
        return $this;
    $codePoints = $rt_createIntArray($this.$characters.data.length);
    $codePointCount = 0;
    $i = 0;
    while ($i < $this.$characters.data.length) {
        a: {
            if ($i != ($this.$characters.data.length - 1 | 0) && jl_Character_isHighSurrogate($this.$characters.data[$i])) {
                var$4 = $this.$characters.data;
                var$5 = $i + 1 | 0;
                var$6 = var$4[var$5];
                if (jl_Character_isLowSurrogate(var$6)) {
                    var$7 = $codePoints.data;
                    var$8 = $codePointCount + 1 | 0;
                    var$7[$codePointCount] = jl_Character_toUpperCase0(jl_Character_toCodePoint($this.$characters.data[$i], $this.$characters.data[var$5]));
                    $i = var$5;
                    break a;
                }
            }
            var$7 = $codePoints.data;
            var$8 = $codePointCount + 1 | 0;
            var$7[$codePointCount] = jl_Character_toUpperCase($this.$characters.data[$i]);
        }
        $i = $i + 1 | 0;
        $codePointCount = var$8;
    }
    return jl_String__init_9($codePoints, 0, $codePointCount);
}
function jl_String_compareTo0($this, var$1) {
    return $this.$compareTo2(var$1);
}
function jl_String__clinit_() {
    jl_String_CASE_INSENSITIVE_ORDER = jl_String$_clinit_$lambda$_81_0__init_();
}
function oktsg_SplitVec4Node() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$x0 = null;
    a.$y0 = null;
    a.$z0 = null;
    a.$w = null;
}
var oktsg_SplitVec4Node_InputForm = null;
var oktsg_SplitVec4Node_Companion = null;
function oktsg_SplitVec4Node_$callClinit() {
    oktsg_SplitVec4Node_$callClinit = $rt_eraseClinit(oktsg_SplitVec4Node);
    oktsg_SplitVec4Node__clinit_();
}
function oktsg_SplitVec4Node__init_(var_0) {
    var var_1 = new oktsg_SplitVec4Node();
    oktsg_SplitVec4Node__init_0(var_1, var_0);
    return var_1;
}
function oktsg_SplitVec4Node__init_1(var_0, var_1, var_2) {
    var var_3 = new oktsg_SplitVec4Node();
    oktsg_SplitVec4Node__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktsg_SplitVec4Node__init_3() {
    var var_0 = new oktsg_SplitVec4Node();
    oktsg_SplitVec4Node__init_4(var_0);
    return var_0;
}
function oktsg_SplitVec4Node_getVector($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(343));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_SplitVec4Node_getX($this) {
    return $this.$x0;
}
function oktsg_SplitVec4Node_getY($this) {
    return $this.$y0;
}
function oktsg_SplitVec4Node_getZ($this) {
    return $this.$z0;
}
function oktsg_SplitVec4Node_prepareToBuild($this) {
    oktsg_ShaderNode_prepareToBuild($this);
    oktsg_SplitVec4Node_setChannelNames($this);
}
function oktsg_SplitVec4Node_setChannelNames($this) {
    a: {
        switch (oktsg_SplitVec4Node_getVector($this).$getType()) {
            case 3:
                break;
            case 4:
                $this.$x0.$setInlineCode(jl_StringBuilder__init_().$append(oktsg_SplitVec4Node_getVector($this).$getRef0()).$append($rt_s(321)).$toString());
                $this.$y0.$setInlineCode(jl_StringBuilder__init_().$append(oktsg_SplitVec4Node_getVector($this).$getRef0()).$append($rt_s(344)).$toString());
                $this.$z0.$setInlineCode($rt_s(345));
                $this.$w.$setInlineCode($rt_s(346));
                break a;
            case 5:
                $this.$x0.$setInlineCode(jl_StringBuilder__init_().$append(oktsg_SplitVec4Node_getVector($this).$getRef0()).$append($rt_s(321)).$toString());
                $this.$y0.$setInlineCode(jl_StringBuilder__init_().$append(oktsg_SplitVec4Node_getVector($this).$getRef0()).$append($rt_s(344)).$toString());
                $this.$z0.$setInlineCode(jl_StringBuilder__init_().$append(oktsg_SplitVec4Node_getVector($this).$getRef0()).$append($rt_s(347)).$toString());
                $this.$w.$setInlineCode($rt_s(346));
                break a;
            default:
                $this.$x0.$setInlineCode(jl_StringBuilder__init_().$append(oktsg_SplitVec4Node_getVector($this).$getRef0()).$append($rt_s(321)).$toString());
                $this.$y0.$setInlineCode(jl_StringBuilder__init_().$append(oktsg_SplitVec4Node_getVector($this).$getRef0()).$append($rt_s(344)).$toString());
                $this.$z0.$setInlineCode(jl_StringBuilder__init_().$append(oktsg_SplitVec4Node_getVector($this).$getRef0()).$append($rt_s(347)).$toString());
                $this.$w.$setInlineCode(jl_StringBuilder__init_().$append(oktsg_SplitVec4Node_getVector($this).$getRef0()).$append($rt_s(348)).$toString());
                break a;
        }
        $this.$x0.$setInlineCode(oktsg_SplitVec4Node_getVector($this).$getRef0());
        $this.$y0.$setInlineCode($rt_s(345));
        $this.$z0.$setInlineCode($rt_s(345));
        $this.$w.$setInlineCode($rt_s(346));
    }
}
function oktsg_SplitVec4Node__init_0($this, $vector) {
    var var$2;
    oktsg_SplitVec4Node_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($vector, $rt_s(343));
    oktsg_ShaderNode__init_0($this);
    var$2 = oktsg_GLSLFloat__init_($rt_s(349));
    var$2.$setScope(0);
    $this.$x0 = oktsg_ShaderNode_defOut($this, var$2);
    var$2 = oktsg_GLSLFloat__init_($rt_s(350));
    var$2.$setScope(0);
    $this.$y0 = oktsg_ShaderNode_defOut($this, var$2);
    var$2 = oktsg_GLSLFloat__init_($rt_s(351));
    var$2.$setScope(0);
    $this.$z0 = oktsg_ShaderNode_defOut($this, var$2);
    var$2 = oktsg_GLSLFloat__init_($rt_s(101));
    var$2.$setScope(0);
    $this.$w = oktsg_ShaderNode_defOut($this, var$2);
    $this.$setInput($rt_s(343), $vector);
}
function oktsg_SplitVec4Node__init_2(var$0, var$1, var$2, var$3) {
    oktsg_SplitVec4Node_$callClinit();
    if (var$2 & 1) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    oktsg_SplitVec4Node__init_0(var$0, var$1);
}
function oktsg_SplitVec4Node__init_4(var$0) {
    oktsg_SplitVec4Node_$callClinit();
    oktsg_SplitVec4Node__init_2(var$0, null, 1, null);
}
function oktsg_SplitVec4Node__clinit_() {
    var var$1;
    oktsg_SplitVec4Node_Companion = oktsg_SplitVec4Node$Companion__init_(null);
    var$1 = ju_LinkedHashMap__init_();
    var$1.$put3($rt_s(343), jl_Integer_valueOf(6));
    oktsg_SplitVec4Node_InputForm = var$1;
}
function jnc_CharsetEncoder() {
    var a = this; jl_Object.call(a);
    a.$charset0 = null;
    a.$replacement = null;
    a.$averageBytesPerChar = 0.0;
    a.$maxBytesPerChar = 0.0;
    a.$malformedAction = null;
    a.$unmappableAction = null;
    a.$status = 0;
}
function jnc_CharsetEncoder__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jnc_CharsetEncoder();
    jnc_CharsetEncoder__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jnc_CharsetEncoder__init_1(var_0, var_1, var_2) {
    var var_3 = new jnc_CharsetEncoder();
    jnc_CharsetEncoder__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jnc_CharsetEncoder__init_0($this, $cs, $averageBytesPerChar, $maxBytesPerChar, $replacement) {
    jl_Object__init_0($this);
    jnc_CodingErrorAction_$callClinit();
    $this.$malformedAction = jnc_CodingErrorAction_REPORT;
    $this.$unmappableAction = jnc_CodingErrorAction_REPORT;
    jnc_CharsetEncoder_checkReplacement($this, $replacement);
    $this.$charset0 = $cs;
    $this.$replacement = $replacement.$clone();
    $this.$averageBytesPerChar = $averageBytesPerChar;
    $this.$maxBytesPerChar = $maxBytesPerChar;
}
function jnc_CharsetEncoder__init_2($this, $cs, $averageBytesPerChar, $maxBytesPerChar) {
    var var$4;
    var$4 = $rt_createByteArray(1);
    var$4.data[0] = 63;
    jnc_CharsetEncoder__init_0($this, $cs, $averageBytesPerChar, $maxBytesPerChar, var$4);
}
function jnc_CharsetEncoder_checkReplacement($this, $replacement) {
    var var$2;
    if ($replacement !== null) {
        var$2 = $replacement.data.length;
        if (var$2 && var$2 >= $this.$maxBytesPerChar)
            return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(352)));
}
function jnc_CharsetEncoder_onMalformedInput($this, $newAction) {
    if ($newAction !== null) {
        $this.$malformedAction = $newAction;
        $this.$implOnMalformedInput($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(353)));
}
function jnc_CharsetEncoder_implOnMalformedInput($this, $newAction) {
    return;
}
function jnc_CharsetEncoder_onUnmappableCharacter($this, $newAction) {
    if ($newAction !== null) {
        $this.$unmappableAction = $newAction;
        $this.$implOnUnmappableCharacter($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(353)));
}
function jnc_CharsetEncoder_implOnUnmappableCharacter($this, $newAction) {
    return;
}
function jnc_CharsetEncoder_encode($this, $in, $out, $endOfInput) {
    var $result, $e, $remaining, $action, $$je;
    a: {
        if ($this.$status != 3) {
            if ($endOfInput)
                break a;
            if ($this.$status != 2)
                break a;
        }
        $rt_throw(jl_IllegalStateException__init_0());
    }
    $this.$status = !$endOfInput ? 1 : 2;
    while (true) {
        try {
            $result = $this.$encodeLoop($in, $out);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                $rt_throw(jnc_CoderMalfunctionError__init_($e));
            } else {
                throw $$e;
            }
        }
        if ($result.$isUnderflow()) {
            if (!$endOfInput)
                return $result;
            $remaining = jn_Buffer_remaining($in);
            if ($remaining <= 0)
                return $result;
            $result = jnc_CoderResult_malformedForLength($remaining);
        } else if ($result.$isOverflow())
            break;
        $action = !$result.$isUnmappable() ? $this.$malformedAction : $this.$unmappableAction;
        b: {
            jnc_CodingErrorAction_$callClinit();
            if ($action !== jnc_CodingErrorAction_REPLACE) {
                if ($action === jnc_CodingErrorAction_IGNORE)
                    break b;
                else
                    return $result;
            }
            if (jn_Buffer_remaining($out) < $this.$replacement.data.length)
                return jnc_CoderResult_OVERFLOW;
            jn_ByteBuffer_put($out, $this.$replacement);
        }
        $in.$position3(jn_Buffer_position($in) + $result.$length() | 0);
    }
    return $result;
}
function jnc_CharsetEncoder_flush($this, $out) {
    var $result;
    if ($this.$status != 2 && $this.$status != 4)
        $rt_throw(jl_IllegalStateException__init_0());
    $result = $this.$implFlush($out);
    jnc_CoderResult_$callClinit();
    if ($result === jnc_CoderResult_UNDERFLOW)
        $this.$status = 3;
    return $result;
}
function jnc_CharsetEncoder_implFlush($this, $out) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult_UNDERFLOW;
}
function jnci_BufferedEncoder() {
    jnc_CharsetEncoder.call(this);
}
function jnci_BufferedEncoder__init_(var_0, var_1, var_2) {
    var var_3 = new jnci_BufferedEncoder();
    jnci_BufferedEncoder__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jnci_BufferedEncoder__init_0($this, $cs, $averageBytesPerChar, $maxBytesPerChar) {
    jnc_CharsetEncoder__init_2($this, $cs, $averageBytesPerChar, $maxBytesPerChar);
}
function jnci_BufferedEncoder_encodeLoop($this, $in, $out) {
    var $inArray, $inPos, $inSize, $outArray, $i, var$8, var$9, var$10, $outSize, $controller;
    $inArray = $rt_createCharArray(jl_Math_min(jn_Buffer_remaining($in), 512));
    $inPos = 0;
    $inSize = 0;
    $outArray = $rt_createByteArray(jl_Math_min(jn_Buffer_remaining($out), 512));
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$8 = $inArray.data;
                    var$8[$i - $inPos | 0] = var$8[$i];
                    $i = $i + 1 | 0;
                }
                var$8 = $inArray.data;
                var$9 = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + var$9 | 0, var$8.length);
                $in.$get14($inArray, var$9, $inSize - var$9 | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    var$10 = jnc_CoderResult_UNDERFLOW;
                } else {
                    jnc_CoderResult_$callClinit();
                    var$10 = jnc_CoderResult_OVERFLOW;
                }
                break a;
            }
            var$8 = $outArray.data;
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$8.length);
            $controller = jnci_BufferedEncoder$Controller__init_($in, $out);
            var$10 = $this.$arrayEncode($inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition;
            if (var$10 === null && 0 == $controller.$outPosition) {
                jnc_CoderResult_$callClinit();
                var$10 = jnc_CoderResult_UNDERFLOW;
            }
            var$9 = $controller.$outPosition;
            $out.$put6($outArray, 0, var$9);
            if (var$10 !== null)
                break;
        }
    }
    $in.$position3(jn_Buffer_position($in) - ($inSize - $inPos | 0) | 0);
    return var$10;
}
function jnci_UTF8Encoder() {
    jnci_BufferedEncoder.call(this);
}
function jnci_UTF8Encoder__init_(var_0) {
    var var_1 = new jnci_UTF8Encoder();
    jnci_UTF8Encoder__init_0(var_1, var_0);
    return var_1;
}
function jnci_UTF8Encoder__init_0($this, $cs) {
    jnci_BufferedEncoder__init_0($this, $cs, 2.0, 4.0);
}
function jnci_UTF8Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $ch, var$12, var$13, var$14, $low, $codePoint;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $ch = var$10[$inPos];
            if ($ch < 128) {
                var$10 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$10[$outPos] = $ch << 24 >> 24;
            } else if ($ch < 2048) {
                if (($outPos + 2 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if ($controller.$hasMoreOutput(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$13 = $outPos + 1 | 0;
                var$10[$outPos] = (192 | $ch >> 6) << 24 >> 24;
                var$12 = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch & 63) << 24 >> 24;
            } else if (!jl_Character_isSurrogate($ch)) {
                if (($outPos + 3 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if ($controller.$hasMoreOutput(3))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$14 = $outPos + 1 | 0;
                var$10[$outPos] = (224 | $ch >> 12) << 24 >> 24;
                var$13 = var$14 + 1 | 0;
                var$10[var$14] = (128 | $ch >> 6 & 63) << 24 >> 24;
                var$12 = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch & 63) << 24 >> 24;
            } else {
                if (!jl_Character_isHighSurrogate($ch)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (var$9 >= $inSize) {
                    if ($controller.$hasMoreInput())
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                var$13 = var$9 + 1 | 0;
                $low = var$10[var$9];
                if (!jl_Character_isLowSurrogate($low)) {
                    var$9 = var$13 + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    var$9 = var$13 + (-2) | 0;
                    if ($controller.$hasMoreOutput(4))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $codePoint = jl_Character_toCodePoint($ch, $low);
                var$9 = $outPos + 1 | 0;
                var$10[$outPos] = (240 | $codePoint >> 18) << 24 >> 24;
                var$14 = var$9 + 1 | 0;
                var$10[var$9] = (128 | $codePoint >> 12 & 63) << 24 >> 24;
                var$9 = var$14 + 1 | 0;
                var$10[var$14] = (128 | $codePoint >> 6 & 63) << 24 >> 24;
                var$12 = var$9 + 1 | 0;
                var$10[var$9] = (128 | $codePoint & 63) << 24 >> 24;
                var$9 = var$13;
            }
            $inPos = var$9;
            $outPos = var$12;
        }
        var$9 = $inPos;
    }
    $controller.$setInPosition(var$9);
    $controller.$setOutPosition($outPos);
    return $result;
}
function oktt_Texture() {
    var a = this; jl_Object.call(a);
    a.$name10 = null;
    a.$minFilter = 0;
    a.$magFilter = 0;
    a.$sWrap = 0;
    a.$tWrap = 0;
    a.$rWrap = 0;
    a.$anisotropicFilter = 0.0;
    a.$glTarget = 0;
    a.$textureHandle = 0;
}
function oktt_Texture__init_(var_0, var_1) {
    var var_2 = new oktt_Texture();
    oktt_Texture__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktt_Texture__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new oktt_Texture();
    oktt_Texture__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktt_Texture_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name10 = $_set___;
}
function oktt_Texture_getMinFilter($this) {
    return $this.$minFilter;
}
function oktt_Texture_setMinFilter($this, $value) {
    if ($value != $this.$minFilter) {
        $this.$minFilter = $value;
        oktg_GL_$callClinit();
        oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 10241, $value);
    }
}
function oktt_Texture_getMagFilter($this) {
    return $this.$magFilter;
}
function oktt_Texture_setMagFilter($this, $value) {
    if ($value != $this.$magFilter) {
        $this.$magFilter = $value;
        oktg_GL_$callClinit();
        oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 10240, $value);
    }
}
function oktt_Texture_getSWrap($this) {
    return $this.$sWrap;
}
function oktt_Texture_setSWrap($this, $value) {
    if ($value != $this.$sWrap) {
        $this.$sWrap = $value;
        oktg_GL_$callClinit();
        oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 10242, $value);
    }
}
function oktt_Texture_getTWrap($this) {
    return $this.$tWrap;
}
function oktt_Texture_setTWrap($this, $value) {
    if ($value != $this.$tWrap) {
        $this.$tWrap = $value;
        oktg_GL_$callClinit();
        oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 10243, $value);
    }
}
function oktt_Texture_getAnisotropicFilter($this) {
    return $this.$anisotropicFilter;
}
function oktt_Texture_setAnisotropicFilter($this, $value) {
    var $max, $oldValue;
    if ($this.$anisotropicFilter !== $value) {
        oktg_GL_$callClinit();
        $max = oktg_GL_getMaxAnisotropicFilterLevel(oktg_GL_INSTANCE);
        if ($max === 1.0)
            $this.$anisotropicFilter = 1.0;
        else {
            $oldValue = $this.$anisotropicFilter;
            if ($value > $max)
                $value = $max;
            $this.$anisotropicFilter = $value;
            if ($this.$anisotropicFilter !== $oldValue)
                oktg_GL_glTexParameterf(oktg_GL_INSTANCE, 3553, 34046, $this.$anisotropicFilter);
        }
    }
}
function oktt_Texture_getGlTarget($this) {
    return $this.$glTarget;
}
function oktt_Texture_setGlTarget($this, $_set___) {
    $this.$glTarget = $_set___;
}
function oktt_Texture_getTextureHandle($this) {
    return $this.$textureHandle;
}
function oktt_Texture_setTextureHandle($this, $_set___) {
    $this.$textureHandle = $_set___;
}
function oktt_Texture__init_0($this, $glTarget, $textureHandle) {
    jl_Object__init_0($this);
    $this.$glTarget = $glTarget;
    $this.$textureHandle = $textureHandle;
    $this.$name10 = $rt_s(6);
    $this.$minFilter = 9729;
    $this.$magFilter = 9729;
    $this.$sWrap = 10497;
    $this.$tWrap = 10497;
    $this.$rWrap = 10497;
    $this.$anisotropicFilter = 1.0;
}
function oktt_Texture__init_2(var$0, var$1, var$2, var$3, var$4) {
    if (var$3 & 2) {
        oktg_GL_$callClinit();
        var$2 = oktg_GL_glGenTexture(oktg_GL_INSTANCE);
    }
    oktt_Texture__init_0(var$0, var$1, var$2);
}
function oktt_Texture_bind($this) {
    oktt_ITexture$DefaultImpls_bind($this);
}
function oktt_Texture_bind0($this, $unit) {
    oktt_ITexture$DefaultImpls_bind0($this, $unit);
}
function oktt_Texture2D() {
    var a = this; oktt_Texture.call(a);
    a.$width = 0;
    a.$height = 0;
    a.$image0 = null;
}
var oktt_Texture2D_Companion = null;
function oktt_Texture2D_$callClinit() {
    oktt_Texture2D_$callClinit = $rt_eraseClinit(oktt_Texture2D);
    oktt_Texture2D__clinit_();
}
function oktt_Texture2D__init_0(var_0) {
    var var_1 = new oktt_Texture2D();
    oktt_Texture2D__init_1(var_1, var_0);
    return var_1;
}
function oktt_Texture2D__init_(var_0, var_1, var_2) {
    var var_3 = new oktt_Texture2D();
    oktt_Texture2D__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktt_Texture2D__init_3() {
    var var_0 = new oktt_Texture2D();
    oktt_Texture2D__init_4(var_0);
    return var_0;
}
function oktt_Texture2D_getWidth($this) {
    return $this.$width;
}
function oktt_Texture2D_setWidth($this, $_set___) {
    $this.$width = $_set___;
}
function oktt_Texture2D_getHeight($this) {
    return $this.$height;
}
function oktt_Texture2D_setHeight($this, $_set___) {
    $this.$height = $_set___;
}
function oktt_Texture2D_getImage($this) {
    return $this.$image0;
}
function oktt_Texture2D_setImage($this, $_set___) {
    $this.$image0 = $_set___;
}
function oktt_Texture2D_load($this, $uri, $minFilter, $magFilter, $sWrap, $tWrap, $anisotropicFilter, $generateMipmaps) {
    kji_Intrinsics_checkParameterIsNotNull($uri, $rt_s(18));
    okti_IMG_$callClinit();
    okti_IImg$DefaultImpls_load$default(okti_IMG_INSTANCE, $uri, null, 0, oktt_Texture2D$load$1__init_($this, $minFilter, $magFilter, $sWrap, $tWrap, $anisotropicFilter, $generateMipmaps, $uri), 6, null);
    return $this;
}
function oktt_Texture2D_load0($this, $image, $minFilter, $magFilter, $sWrap, $tWrap, $anisotropicFilter, $generateMipmaps) {
    kji_Intrinsics_checkParameterIsNotNull($image, $rt_s(24));
    $this.$image0 = $image;
    $this.$setName($image.$getName());
    oktt_Texture2D_beforeGlTexImage2D($this, $image.$getWidth(), $image.$getHeight(), $minFilter, $magFilter, $sWrap, $tWrap, $anisotropicFilter);
    oktg_GL_$callClinit();
    oktg_GL_glTexImage2D(oktg_GL_INSTANCE, $this.$getGlTarget(), 0, $image.$getGlInternalFormat(), $this.$getWidth(), $this.$getHeight(), 0, $image.$getGlPixelFormat(), $image.$getGlType(), $image);
    if ($generateMipmaps)
        $this.$generateMipmapsGPU();
    oktg_GL_glBindTexture(oktg_GL_INSTANCE, $this.$getGlTarget(), 0);
    return $this;
}
function oktt_Texture2D_load1($this, $width, $height, $pixels, $mipmapLevel, $internalFormat, $pixelFormat, $type, $minFilter, $magFilter, $sWrap, $tWrap, $anisotropicFilter, $generateMipmaps) {
    oktt_Texture2D_beforeGlTexImage2D($this, $width, $height, $minFilter, $magFilter, $sWrap, $tWrap, $anisotropicFilter);
    oktg_GL_$callClinit();
    oktg_GL_glTexImage2D0(oktg_GL_INSTANCE, $this.$getGlTarget(), $mipmapLevel, $internalFormat, $width, $height, 0, $pixelFormat, $type, $pixels);
    if ($generateMipmaps)
        $this.$generateMipmapsGPU();
    oktg_GL_glBindTexture(oktg_GL_INSTANCE, $this.$getGlTarget(), 0);
    return $this;
}
function oktt_Texture2D_beforeGlTexImage2D($this, $width, $height, $minFilter, $magFilter, $sWrap, $tWrap, $anisotropicFilter) {
    $this.$setWidth($width);
    $this.$setHeight($height);
    if (!$this.$getTextureHandle()) {
        oktg_GL_$callClinit();
        $this.$setTextureHandle(oktg_GL_glGenTexture(oktg_GL_INSTANCE));
    }
    $this.$bind();
    $this.$setMinFilter($minFilter);
    $this.$setMagFilter($magFilter);
    $this.$setSWrap($sWrap);
    $this.$setTWrap($tWrap);
    oktg_GL_$callClinit();
    oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 10241, $minFilter);
    oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 10240, $magFilter);
    oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 10242, $sWrap);
    oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 10243, $tWrap);
    $this.$setAnisotropicFilter($anisotropicFilter);
}
function oktt_Texture2D__init_1($this, $textureHandle) {
    oktt_Texture2D_$callClinit();
    oktt_Texture__init_0($this, 3553, $textureHandle);
}
function oktt_Texture2D__init_2(var$0, var$1, var$2, var$3) {
    oktt_Texture2D_$callClinit();
    if (var$2 & 1) {
        oktg_GL_$callClinit();
        var$1 = oktg_GL_glGenTexture(oktg_GL_INSTANCE);
    }
    oktt_Texture2D__init_1(var$0, var$1);
}
function oktt_Texture2D__init_4(var$0) {
    oktt_Texture2D_$callClinit();
    oktt_Texture2D__init_2(var$0, 0, 1, null);
}
function oktt_Texture2D__clinit_() {
    oktt_Texture2D_Companion = oktt_Texture2D$Companion__init_(null);
}
function oktt_Texture2D_bind($this) {
    oktt_ITexture2D$DefaultImpls_bind($this);
}
function oktt_Texture2D_bind0($this, $unit) {
    oktt_ITexture2D$DefaultImpls_bind0($this, $unit);
}
function oktt_Texture2D_generateMipmapsGPU($this) {
    oktt_ITexture2D$DefaultImpls_generateMipmapsGPU($this);
}
function oktt_Texture2D_destroy($this) {
    oktt_ITexture2D$DefaultImpls_destroy($this);
}
function oktt_Texture2D_access$beforeGlTexImage2D($$this, $width, $height, $minFilter, $magFilter, $sWrap, $tWrap, $anisotropicFilter) {
    oktt_Texture2D_$callClinit();
    oktt_Texture2D_beforeGlTexImage2D($$this, $width, $height, $minFilter, $magFilter, $sWrap, $tWrap, $anisotropicFilter);
}
function oooicj_Ref() {
    jl_Object.call(this);
    this.$r = null;
}
function oooicj_Ref__init_() {
    var var_0 = new oooicj_Ref();
    oooicj_Ref__init_0(var_0);
    return var_0;
}
function oooicj_Ref__init_0($this) {
    jl_Object__init_0($this);
    $this.$r = null;
}
function oooicj_Ref_get($this) {
    return $this.$r;
}
function oooicj_Ref_set($this, $r) {
    $this.$r = $r;
}
function ju_Dictionary() {
    jl_Object.call(this);
}
function ju_Dictionary__init_() {
    var var_0 = new ju_Dictionary();
    ju_Dictionary__init_0(var_0);
    return var_0;
}
function ju_Dictionary__init_0($this) {
    jl_Object__init_0($this);
}
function ju_Hashtable() {
    var a = this; ju_Dictionary.call(a);
    a.$elementCount0 = 0;
    a.$elementData0 = null;
    a.$loadFactor0 = 0.0;
    a.$threshold0 = 0;
    a.$firstSlot = 0;
    a.$lastSlot = 0;
    a.$modCount0 = 0;
}
var ju_Hashtable_EMPTY_ENUMERATION = null;
var ju_Hashtable_EMPTY_ITERATOR = null;
function ju_Hashtable_$callClinit() {
    ju_Hashtable_$callClinit = $rt_eraseClinit(ju_Hashtable);
    ju_Hashtable__clinit_();
}
function ju_Hashtable__init_() {
    var var_0 = new ju_Hashtable();
    ju_Hashtable__init_0(var_0);
    return var_0;
}
function ju_Hashtable__init_1(var_0) {
    var var_1 = new ju_Hashtable();
    ju_Hashtable__init_2(var_1, var_0);
    return var_1;
}
function ju_Hashtable_newEntry($key, $value, $hash) {
    ju_Hashtable_$callClinit();
    return ju_Hashtable$Entry__init_($key, $value);
}
function ju_Hashtable__init_0($this) {
    ju_Hashtable_$callClinit();
    ju_Hashtable__init_2($this, 11);
}
function ju_Hashtable__init_2($this, $capacity) {
    ju_Hashtable_$callClinit();
    ju_Dictionary__init_0($this);
    $this.$lastSlot = (-1);
    if ($capacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $this.$elementCount0 = 0;
    if (!$capacity)
        $capacity = 1;
    $this.$elementData0 = ju_Hashtable_newElementArray($this, $capacity);
    $this.$firstSlot = $this.$elementData0.data.length;
    $this.$loadFactor0 = 0.75;
    ju_Hashtable_computeMaxSize($this);
}
function ju_Hashtable_newElementArray($this, $size) {
    return $rt_createArray(ju_Hashtable$Entry, $size);
}
function ju_Hashtable_computeMaxSize($this) {
    $this.$threshold0 = $this.$elementData0.data.length * $this.$loadFactor0 | 0;
}
function ju_Hashtable_get($this, $key) {
    var $hash, $index, $entry;
    jl_Object_monitorEnterSync($this);
    try {
        $hash = $key.$hashCode();
        $index = ($hash & 2147483647) % $this.$elementData0.data.length | 0;
        $entry = $this.$elementData0.data[$index];
        while ($entry !== null) {
            if ($entry.$equalsKey($key, $hash))
                return $entry.$value0;
            $entry = $entry.$next3;
        }
        return null;
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function ju_Hashtable_put($this, $key, $value) {
    var $hash, var$4, $index, $entry, $result, var$8, var$9;
    jl_Object_monitorEnterSync($this);
    try {
        if ($key !== null && $value !== null) {
            $hash = $key.$hashCode();
            var$4 = $hash & 2147483647;
            $index = var$4 % $this.$elementData0.data.length | 0;
            $entry = $this.$elementData0.data[$index];
            while ($entry !== null && !$entry.$equalsKey($key, $hash)) {
                $entry = $entry.$next3;
            }
            if ($entry !== null) {
                $result = $entry.$value0;
                $entry.$value0 = $value;
                return $result;
            }
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            var$8 = $this.$elementCount0 + 1 | 0;
            $this.$elementCount0 = var$8;
            if (var$8 > $this.$threshold0) {
                $this.$rehash();
                $index = var$4 % $this.$elementData0.data.length | 0;
            }
            if ($index < $this.$firstSlot)
                $this.$firstSlot = $index;
            if ($index > $this.$lastSlot)
                $this.$lastSlot = $index;
            var$9 = ju_Hashtable_newEntry($key, $value, $hash);
            var$9.$next3 = $this.$elementData0.data[$index];
            $this.$elementData0.data[$index] = var$9;
            return null;
        }
        $rt_throw(jl_NullPointerException__init_());
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function ju_Hashtable_rehash($this) {
    var $length, $newLast, $newData, $i, var$5, $entry, $index, var$8, $entry_0;
    $length = ($this.$elementData0.data.length << 1) + 1 | 0;
    if (!$length)
        $length = 1;
    $newLast = (-1);
    $newData = ju_Hashtable_newElementArray($this, $length);
    $i = $this.$lastSlot + 1 | 0;
    var$5 = $length;
    while (true) {
        $i = $i + (-1) | 0;
        if ($i < $this.$firstSlot)
            break;
        $entry = $this.$elementData0.data[$i];
        while ($entry !== null) {
            $index = ($entry.$getKeyHash() & 2147483647) % $length | 0;
            if ($index < var$5)
                var$5 = $index;
            if ($index > $newLast)
                $newLast = $index;
            var$8 = $newData.data;
            $entry_0 = $entry.$next3;
            $entry.$next3 = var$8[$index];
            var$8[$index] = $entry;
            $entry = $entry_0;
        }
    }
    $this.$firstSlot = var$5;
    $this.$lastSlot = $newLast;
    $this.$elementData0 = $newData;
    ju_Hashtable_computeMaxSize($this);
}
function ju_Hashtable__clinit_() {
    ju_Hashtable_EMPTY_ENUMERATION = ju_Hashtable$1__init_();
    ju_Hashtable_EMPTY_ITERATOR = ju_Hashtable$2__init_();
}
function ju_Properties() {
    ju_Hashtable.call(this);
    this.$defaults = null;
}
function ju_Properties__init_() {
    var var_0 = new ju_Properties();
    ju_Properties__init_0(var_0);
    return var_0;
}
function ju_Properties__init_1(var_0) {
    var var_1 = new ju_Properties();
    ju_Properties__init_2(var_1, var_0);
    return var_1;
}
function ju_Properties__init_0($this) {
    ju_Hashtable__init_0($this);
}
function ju_Properties__init_2($this, $properties) {
    ju_Hashtable__init_0($this);
    $this.$defaults = $properties;
}
function ju_Properties_getProperty($this, $name) {
    var $result, $property;
    $result = ju_Hashtable_get($this, $name);
    $property = !($result instanceof jl_String) ? null : $result;
    if ($property === null && $this.$defaults !== null)
        $property = $this.$defaults.$getProperty($name);
    return $property;
}
function ji_Writer() {
    jl_Object.call(this);
    this.$lock = null;
}
function ji_Writer__init_() {
    var var_0 = new ji_Writer();
    ji_Writer__init_0(var_0);
    return var_0;
}
function ji_Writer__init_1(var_0) {
    var var_1 = new ji_Writer();
    ji_Writer__init_2(var_1, var_0);
    return var_1;
}
function ji_Writer__init_0($this) {
    jl_Object__init_0($this);
    $this.$lock = $this;
}
function ji_Writer__init_2($this, $lock) {
    jl_Object__init_0($this);
    if ($lock !== null) {
        $this.$lock = $lock;
        return;
    }
    $rt_throw(jl_NullPointerException__init_());
}
function ji_StringWriter() {
    ji_Writer.call(this);
    this.$buf = null;
}
function ji_StringWriter__init_() {
    var var_0 = new ji_StringWriter();
    ji_StringWriter__init_0(var_0);
    return var_0;
}
function ji_StringWriter__init_0($this) {
    ji_Writer__init_0($this);
    $this.$buf = jl_StringBuffer__init_(16);
    $this.$lock = $this.$buf;
}
function ji_StringWriter_flush($this) {
    return;
}
function ji_StringWriter_toString($this) {
    return $this.$buf.$toString();
}
function ji_StringWriter_write($this, $cbuf, $offset, $count) {
    var var$4;
    if ($offset >= 0) {
        var$4 = $cbuf.data.length;
        if ($offset <= var$4 && $count >= 0 && $count <= (var$4 - $offset | 0)) {
            if (!$count)
                return;
            $this.$buf.$append10($cbuf, $offset, $count);
            return;
        }
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function ooott_TaskExecutor() {
}
function kr_Random() {
    jl_Object.call(this);
}
var kr_Random_defaultRandom = null;
var kr_Random_Companion = null;
var kr_Random_Default = null;
function kr_Random_$callClinit() {
    kr_Random_$callClinit = $rt_eraseClinit(kr_Random);
    kr_Random__clinit_();
}
function kr_Random__init_() {
    var var_0 = new kr_Random();
    kr_Random__init_0(var_0);
    return var_0;
}
function kr_Random__init_0($this) {
    kr_Random_$callClinit();
    jl_Object__init_0($this);
}
function kr_Random__clinit_() {
    kr_Random_Default = kr_Random$Default__init_(null);
    ki_PlatformImplementationsKt_$callClinit();
    kr_Random_defaultRandom = ki_PlatformImplementationsKt_IMPLEMENTATIONS.$defaultPlatformRandom();
    kr_Random$Companion_$callClinit();
    kr_Random_Companion = kr_Random$Companion_INSTANCE;
}
function kr_Random_access$getDefaultRandom$cp() {
    kr_Random_$callClinit();
    return kr_Random_defaultRandom;
}
function kr_AbstractPlatformRandom() {
    kr_Random.call(this);
}
function kr_AbstractPlatformRandom__init_() {
    var var_0 = new kr_AbstractPlatformRandom();
    kr_AbstractPlatformRandom__init_0(var_0);
    return var_0;
}
function kr_AbstractPlatformRandom_nextBits($this, $bitCount) {
    return kr_RandomKt_takeUpperBits($this.$getImpl().$nextInt(), $bitCount);
}
function kr_AbstractPlatformRandom_nextFloat($this) {
    return $this.$getImpl().$nextFloat();
}
function kr_AbstractPlatformRandom__init_0($this) {
    kr_Random__init_0($this);
}
function kr_FallbackThreadLocalRandom() {
    kr_AbstractPlatformRandom.call(this);
    this.$implStorage = null;
}
function kr_FallbackThreadLocalRandom__init_() {
    var var_0 = new kr_FallbackThreadLocalRandom();
    kr_FallbackThreadLocalRandom__init_0(var_0);
    return var_0;
}
function kr_FallbackThreadLocalRandom_getImpl($this) {
    var var$1;
    var$1 = $this.$implStorage.$get15();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(354));
    return var$1;
}
function kr_FallbackThreadLocalRandom__init_0($this) {
    kr_AbstractPlatformRandom__init_0($this);
    $this.$implStorage = kr_FallbackThreadLocalRandom$implStorage$1__init_();
}
function oooi_DxTriMeshData$1() {
    jl_Object.call(this);
}
var oooi_DxTriMeshData$1_$SwitchMap$org$ode4j$ode$OdeConfig$TRIMESH = null;
function oooi_DxTriMeshData$1_$callClinit() {
    oooi_DxTriMeshData$1_$callClinit = $rt_eraseClinit(oooi_DxTriMeshData$1);
    oooi_DxTriMeshData$1__clinit_();
}
function oooi_DxTriMeshData$1__clinit_() {
    var $$je;
    oooi_DxTriMeshData$1_$SwitchMap$org$ode4j$ode$OdeConfig$TRIMESH = $rt_createIntArray(ooo_OdeConfig$TRIMESH_values().data.length);
    a: {
        try {
            oooi_DxTriMeshData$1_$SwitchMap$org$ode4j$ode$OdeConfig$TRIMESH.data[jl_Enum_ordinal(ooo_OdeConfig$TRIMESH_DISABLED)] = 1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    b: {
        try {
            oooi_DxTriMeshData$1_$SwitchMap$org$ode4j$ode$OdeConfig$TRIMESH.data[jl_Enum_ordinal(ooo_OdeConfig$TRIMESH_GIMPACT)] = 2;
            break b;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
}
function oooi_CollisionLibccd$CollideCapsuleCylinder() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$CollideCapsuleCylinder__init_() {
    var var_0 = new oooi_CollisionLibccd$CollideCapsuleCylinder();
    oooi_CollisionLibccd$CollideCapsuleCylinder__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$CollideCapsuleCylinder__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$CollideCapsuleCylinder_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    var $cap, $cyl, var$7, var$8, var$9, var$10;
    $cap = oooi_CollisionLibccd$ccd_cap_t__init_();
    $cyl = oooi_CollisionLibccd$ccd_cyl_t__init_();
    oooi_CollisionLibccd_ccdGeomToCap($o1, $cap);
    oooi_CollisionLibccd_ccdGeomToCyl($o2, $cyl);
    var$7 = oooi_CollisionLibccd_ccdSupportCap;
    var$8 = oooi_CollisionLibccd_access$100();
    var$9 = oooi_CollisionLibccd_ccdSupportCyl;
    var$10 = oooi_CollisionLibccd_access$100();
    return oooi_CollisionLibccd_ccdCollide($o1, $o2, $flags, $contacts, $cap, var$7, var$8, $cyl, var$9, var$10);
}
function oktm_IVec3$Companion() {
    jl_Object.call(this);
}
var oktm_IVec3$Companion_tmpMat = null;
var oktm_IVec3$Companion_tmpV = null;
var oktm_IVec3$Companion_Build = null;
var oktm_IVec3$Companion_Pool = null;
var oktm_IVec3$Companion_X = null;
var oktm_IVec3$Companion_Y = null;
var oktm_IVec3$Companion_Z = null;
var oktm_IVec3$Companion_Zero = null;
var oktm_IVec3$Companion_One = null;
var oktm_IVec3$Companion_$$INSTANCE = null;
function oktm_IVec3$Companion_$callClinit() {
    oktm_IVec3$Companion_$callClinit = $rt_eraseClinit(oktm_IVec3$Companion);
    oktm_IVec3$Companion__clinit_();
}
function oktm_IVec3$Companion__init_() {
    var var_0 = new oktm_IVec3$Companion();
    oktm_IVec3$Companion__init_0(var_0);
    return var_0;
}
function oktm_IVec3$Companion_getBuild($this) {
    return oktm_IVec3$Companion_Build;
}
function oktm_IVec3$Companion_getY($this) {
    return oktm_IVec3$Companion_Y;
}
function oktm_IVec3$Companion_getZero($this) {
    return oktm_IVec3$Companion_Zero;
}
function oktm_IVec3$Companion_getOne($this) {
    return oktm_IVec3$Companion_One;
}
function oktm_IVec3$Companion__init_0($this) {
    oktm_IVec3$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktm_IVec3$Companion__clinit_() {
    var var$1;
    var$1 = oktm_IVec3$Companion__init_();
    oktm_IVec3$Companion_$$INSTANCE = var$1;
    oktm_IVec3$Companion_tmpMat = oktm_Mat4__init_();
    oktm_IVec3$Companion_tmpV = oktm_Vec4__init_(0.0, 0.0, 0.0, 0.0, 15, null);
    oktm_IVec3$Companion$Build$1_$callClinit();
    oktm_IVec3$Companion_Build = oktm_IVec3$Companion$Build$1_INSTANCE;
    oktm_IVec3$Companion_Pool = oktu_Pool__init_(oktm_IVec3$Companion$Pool$1__init_(var$1));
    oktm_IVec3$Companion_X = oktm_Vec3__init_0(1.0, 0.0, 0.0);
    oktm_IVec3$Companion_Y = oktm_Vec3__init_0(0.0, 1.0, 0.0);
    oktm_IVec3$Companion_Z = oktm_Vec3__init_0(0.0, 0.0, 1.0);
    oktm_IVec3$Companion_Zero = oktm_Vec3__init_0(0.0, 0.0, 0.0);
    oktm_IVec3$Companion_One = oktm_Vec3__init_0(1.0, 1.0, 1.0);
}
function oktm_IVec3$Companion_access$getTmpMat$p($$this) {
    oktm_IVec3$Companion_$callClinit();
    return oktm_IVec3$Companion_tmpMat;
}
function jnci_UTF8Charset() {
    jnc_Charset.call(this);
}
function jnci_UTF8Charset__init_() {
    var var_0 = new jnci_UTF8Charset();
    jnci_UTF8Charset__init_0(var_0);
    return var_0;
}
function jnci_UTF8Charset__init_0($this) {
    jnc_Charset__init_0($this, $rt_s(355), $rt_createArray(jl_String, 0));
}
function jnci_UTF8Charset_newDecoder($this) {
    return jnci_UTF8Decoder__init_($this);
}
function jnci_UTF8Charset_newEncoder($this) {
    return jnci_UTF8Encoder__init_($this);
}
function otjde_EventTarget() {
}
function otjde_KeyboardEventTarget() {
}
function oktt_Texture2D$Companion() {
    jl_Object.call(this);
}
function oktt_Texture2D$Companion__init_0() {
    var var_0 = new oktt_Texture2D$Companion();
    oktt_Texture2D$Companion__init_1(var_0);
    return var_0;
}
function oktt_Texture2D$Companion__init_(var_0) {
    var var_1 = new oktt_Texture2D$Companion();
    oktt_Texture2D$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktt_Texture2D$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function oktt_Texture2D$Companion__init_2($this, $$constructor_marker) {
    oktt_Texture2D$Companion__init_1($this);
}
function oktgg_GLTF$WhenMappings() {
    jl_Object.call(this);
}
var oktgg_GLTF$WhenMappings_$EnumSwitchMapping$0 = null;
function oktgg_GLTF$WhenMappings_$callClinit() {
    oktgg_GLTF$WhenMappings_$callClinit = $rt_eraseClinit(oktgg_GLTF$WhenMappings);
    oktgg_GLTF$WhenMappings__clinit_();
}
function oktgg_GLTF$WhenMappings__clinit_() {
    oktgg_GLTF$WhenMappings_$EnumSwitchMapping$0 = $rt_createIntArray(oktgg_GLTFSourceType_values().data.length);
    oktgg_GLTF$WhenMappings_$EnumSwitchMapping$0.data[jl_Enum_ordinal(oktgg_GLTFSourceType_JSON)] = 1;
    oktgg_GLTF$WhenMappings_$EnumSwitchMapping$0.data[jl_Enum_ordinal(oktgg_GLTFSourceType_LittleEndianInputStream)] = 2;
    oktgg_GLTF$WhenMappings_$EnumSwitchMapping$0.data[jl_Enum_ordinal(oktgg_GLTFSourceType_GLBFile)] = 3;
    oktgg_GLTF$WhenMappings_$EnumSwitchMapping$0.data[jl_Enum_ordinal(oktgg_GLTFSourceType_GLTFFile)] = 4;
}
function jl_Enum() {
    var a = this; jl_Object.call(a);
    a.$name11 = null;
    a.$ordinal0 = 0;
}
function jl_Enum__init_(var_0, var_1) {
    var var_2 = new jl_Enum();
    jl_Enum__init_0(var_2, var_0, var_1);
    return var_2;
}
function jl_Enum__init_0($this, $name, $ordinal) {
    jl_Object__init_0($this);
    $this.$name11 = $name;
    $this.$ordinal0 = $ordinal;
}
function jl_Enum_name($this) {
    return $this.$name11;
}
function jl_Enum_ordinal($this) {
    return $this.$ordinal0;
}
function jl_Enum_equals($this, $other) {
    return $this !== $other ? 0 : 1;
}
function jl_Enum_hashCode($this) {
    return jl_Object_hashCode($this);
}
function jl_Enum_getDeclaringClass($this) {
    var $result;
    $result = jl_Object_getClass($this);
    if (!$result.$getSuperclass().$equals0($rt_cls(jl_Enum)))
        $result = $result.$getSuperclass();
    return $result;
}
function jl_Enum_compareTo($this, $o) {
    var var$2, var$3;
    if (jl_Enum_getDeclaringClass($o) === jl_Enum_getDeclaringClass($this))
        return jl_Integer_compare($this.$ordinal0, jl_Enum_ordinal($o));
    var$2 = new jl_IllegalArgumentException;
    var$3 = jl_StringBuilder__init_().$append($rt_s(356));
    jl_IllegalArgumentException__init_2(var$2, var$3.$append(jl_Enum_getDeclaringClass($this).$getName()).$append($rt_s(357)).$append(jl_Enum_getDeclaringClass($o).$getName()).$toString());
    $rt_throw(var$2);
}
function jl_Enum_compareTo0($this, var$1) {
    return jl_Enum_compareTo($this, var$1);
}
function cgcj_Jsoner$DeserializationOptions() {
    jl_Enum.call(this);
}
var cgcj_Jsoner$DeserializationOptions_ALLOW_CONCATENATED_JSON_VALUES = null;
var cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_ARRAYS = null;
var cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_DATA = null;
var cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_OBJECTS = null;
var cgcj_Jsoner$DeserializationOptions_$VALUES = null;
function cgcj_Jsoner$DeserializationOptions_$callClinit() {
    cgcj_Jsoner$DeserializationOptions_$callClinit = $rt_eraseClinit(cgcj_Jsoner$DeserializationOptions);
    cgcj_Jsoner$DeserializationOptions__clinit_();
}
function cgcj_Jsoner$DeserializationOptions__init_(var_0, var_1) {
    var var_2 = new cgcj_Jsoner$DeserializationOptions();
    cgcj_Jsoner$DeserializationOptions__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgcj_Jsoner$DeserializationOptions_values() {
    cgcj_Jsoner$DeserializationOptions_$callClinit();
    return cgcj_Jsoner$DeserializationOptions_$VALUES.$clone();
}
function cgcj_Jsoner$DeserializationOptions__init_0($this, var$1, var$2) {
    cgcj_Jsoner$DeserializationOptions_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function cgcj_Jsoner$DeserializationOptions__clinit_() {
    var var$1, var$2;
    cgcj_Jsoner$DeserializationOptions_ALLOW_CONCATENATED_JSON_VALUES = cgcj_Jsoner$DeserializationOptions__init_($rt_s(358), 0);
    cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_ARRAYS = cgcj_Jsoner$DeserializationOptions__init_($rt_s(359), 1);
    cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_DATA = cgcj_Jsoner$DeserializationOptions__init_($rt_s(360), 2);
    cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_OBJECTS = cgcj_Jsoner$DeserializationOptions__init_($rt_s(361), 3);
    var$1 = $rt_createArray(cgcj_Jsoner$DeserializationOptions, 4);
    var$2 = var$1.data;
    var$2[0] = cgcj_Jsoner$DeserializationOptions_ALLOW_CONCATENATED_JSON_VALUES;
    var$2[1] = cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_ARRAYS;
    var$2[2] = cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_DATA;
    var$2[3] = cgcj_Jsoner$DeserializationOptions_ALLOW_JSON_OBJECTS;
    cgcj_Jsoner$DeserializationOptions_$VALUES = var$1;
}
function kc_ArraysKt__ArraysJVMKt() {
    jl_Object.call(this);
}
function kc_ArraysKt__ArraysJVMKt__init_() {
    var var_0 = new kc_ArraysKt__ArraysJVMKt();
    kc_ArraysKt__ArraysJVMKt__init_0(var_0);
    return var_0;
}
function kc_ArraysKt__ArraysJVMKt__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function kc_ArraysKt__ArraysKt() {
    kc_ArraysKt__ArraysJVMKt.call(this);
}
function kc_ArraysKt__ArraysKt__init_() {
    var var_0 = new kc_ArraysKt__ArraysKt();
    kc_ArraysKt__ArraysKt__init_0(var_0);
    return var_0;
}
function kc_ArraysKt__ArraysKt__init_0(var$0) {
    kc_ArraysKt__ArraysJVMKt__init_0(var$0);
}
function kc_ArraysKt___ArraysJvmKt() {
    kc_ArraysKt__ArraysKt.call(this);
}
function kc_ArraysKt___ArraysJvmKt__init_() {
    var var_0 = new kc_ArraysKt___ArraysJvmKt();
    kc_ArraysKt___ArraysJvmKt__init_0(var_0);
    return var_0;
}
function kc_ArraysKt___ArraysJvmKt_asList($$this$asList) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$asList, $rt_s(362));
    var$2 = kc_ArraysUtilJVM_asList($$this$asList);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(363));
    return var$2;
}
function kc_ArraysKt___ArraysJvmKt_sortWith($$this$sortWith, $comparator) {
    var var$3;
    var$3 = $$this$sortWith.data;
    kji_Intrinsics_checkParameterIsNotNull($$this$sortWith, $rt_s(64));
    kji_Intrinsics_checkParameterIsNotNull($comparator, $rt_s(65));
    if (var$3.length > 1)
        ju_Arrays_sort($$this$sortWith, $comparator);
}
function kc_ArraysKt___ArraysJvmKt__init_0(var$0) {
    kc_ArraysKt__ArraysKt__init_0(var$0);
}
function oktu_IPath$Companion() {
    jl_Object.call(this);
}
var oktu_IPath$Companion_$$INSTANCE = null;
function oktu_IPath$Companion_$callClinit() {
    oktu_IPath$Companion_$callClinit = $rt_eraseClinit(oktu_IPath$Companion);
    oktu_IPath$Companion__clinit_();
}
function oktu_IPath$Companion__init_() {
    var var_0 = new oktu_IPath$Companion();
    oktu_IPath$Companion__init_0(var_0);
    return var_0;
}
function oktu_IPath$Companion__init_0($this) {
    oktu_IPath$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktu_IPath$Companion__clinit_() {
    oktu_IPath$Companion_$$INSTANCE = oktu_IPath$Companion__init_();
}
function oktt_TextureCube$loadSide$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$017 = null;
    a.$$side = 0;
    a.$$url = null;
}
function oktt_TextureCube$loadSide$1__init_(var_0, var_1, var_2) {
    var var_3 = new oktt_TextureCube$loadSide$1();
    oktt_TextureCube$loadSide$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktt_TextureCube$loadSide$1_invoke(var$0, var$1, var$2) {
    oktt_TextureCube$loadSide$1_invoke0(var$0, var$1.$intValue(), var$2);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktt_TextureCube$loadSide$1_invoke0($this, $status, $image) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    kji_Intrinsics_checkParameterIsNotNull($image, $rt_s(24));
    oktn_NET_$callClinit();
    if (!oktn_NET_isSuccess(oktn_NET_INSTANCE, $status)) {
        oktu_LOG_$callClinit();
        oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append($rt_s(364)).$append($this.$$url).$append($rt_s(365)).$append1($status).$toString(), null, 2, null);
    } else {
        oktt_TextureCube_setWidth($this.$this$017, $image.$getWidth());
        oktt_TextureCube_setHeight($this.$this$017, $image.$getHeight());
        oktg_GL_$callClinit();
        var$3 = oktg_GL_INSTANCE;
        var$4 = $this.$$side;
        var$5 = $image.$getGlInternalFormat();
        var$6 = $image.$getWidth();
        var$7 = $image.$getHeight();
        var$8 = $image.$getGlPixelFormat();
        var$9 = $image.$getGlType();
        oktg_GL_glTexImage2D(var$3, var$4, 0, var$5, var$6, var$7, 0, var$8, var$9, $image);
    }
}
function oktt_TextureCube$loadSide$1__init_0(var$0, var$1, var$2, var$3) {
    var$0.$this$017 = var$1;
    var$0.$$side = var$2;
    var$0.$$url = var$3;
    kji_Lambda__init_0(var$0, 2);
}
function oktp_IOverObject() {
}
function oktp_IShape() {
}
var oktp_IShape_Companion = null;
function oktp_IShape_$callClinit() {
    oktp_IShape_$callClinit = $rt_eraseClinit(oktp_IShape);
    oktp_IShape__clinit_();
}
function oktp_IShape__clinit_() {
    oktp_IShape$Companion_$callClinit();
    oktp_IShape_Companion = oktp_IShape$Companion_$$INSTANCE;
}
function oktpo_IOdeGeom() {
}
var oktpo_IOdeGeom_Companion = null;
function oktpo_IOdeGeom_$callClinit() {
    oktpo_IOdeGeom_$callClinit = $rt_eraseClinit(oktpo_IOdeGeom);
    oktpo_IOdeGeom__clinit_();
}
function oktpo_IOdeGeom__clinit_() {
    oktpo_IOdeGeom$Companion_$callClinit();
    oktpo_IOdeGeom_Companion = oktpo_IOdeGeom$Companion_$$INSTANCE;
}
function oktpo_OdeGeom() {
    var a = this; jl_Object.call(a);
    a.$friction = 0.0;
    a.$userObject = null;
    a.$influenceOtherBodies = 0;
}
function oktpo_OdeGeom__init_() {
    var var_0 = new oktpo_OdeGeom();
    oktpo_OdeGeom__init_0(var_0);
    return var_0;
}
function oktpo_OdeGeom_getInfluenceOtherBodies($this) {
    return $this.$influenceOtherBodies;
}
function oktpo_OdeGeom__init_0($this) {
    jl_Object__init_0($this);
    $this.$friction = 1.0;
    $this.$userObject = $this;
    $this.$influenceOtherBodies = 1;
}
function oktpo_OdeGeom_getSourceObject($this) {
    return oktpo_IOdeGeom$DefaultImpls_getSourceObject($this);
}
function oktpo_OdeGeom_setPosition($this, $x, $y, $z) {
    return oktpo_IOdeGeom$DefaultImpls_setPosition($this, $x, $y, $z);
}
function oktp_ICapsuleShape() {
}
function oktpo_OdeCapsuleShape() {
    oktpo_OdeGeom.call(this);
}
function oktm_Vec2$Companion() {
    jl_Object.call(this);
}
function oktm_Vec2$Companion__init_() {
    var var_0 = new oktm_Vec2$Companion();
    oktm_Vec2$Companion__init_0(var_0);
    return var_0;
}
function oktm_Vec2$Companion__init_1(var_0) {
    var var_1 = new oktm_Vec2$Companion();
    oktm_Vec2$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktm_Vec2$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktm_Vec2$Companion__init_2($this, $$constructor_marker) {
    oktm_Vec2$Companion__init_0($this);
}
function oooi_CollideTrimeshSphere$1() {
    jl_Object.call(this);
    this.$this$018 = null;
}
function oooi_CollideTrimeshSphere$1__init_(var_0) {
    var var_1 = new oooi_CollideTrimeshSphere$1();
    oooi_CollideTrimeshSphere$1__init_0(var_1, var_0);
    return var_1;
}
function oooi_CollideTrimeshSphere$1__init_0($this, $this$0) {
    $this.$this$018 = $this$0;
    jl_Object__init_0($this);
}
function oooi_CollideTrimeshSphere$1_compare($this, $o1, $o2) {
    return jl_Float_compare($o2.$getDepth0(), $o1.$getDepth0());
}
function oktg_IGL$DefaultImpls() {
    jl_Object.call(this);
}
function oktg_IGL$DefaultImpls_getMainFrameBufferHandle($$this) {
    return 0;
}
function oktg_IGL$DefaultImpls_getMainFrameBufferWidth($$this) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_getMainFrameBufferHeight($$this) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_getMajVer($$this) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_getGlesMajVer($$this) {
    return $$this.$getMajVer();
}
function oktg_IGL$DefaultImpls_isGLES($$this) {
    okt_APP_$callClinit();
    return okt_APP_getPlatformType(okt_APP_INSTANCE) != 2 && okt_APP_getPlatformType(okt_APP_INSTANCE) != 1 ? 0 : 1;
}
function oktg_IGL$DefaultImpls_initGL($$this) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_isExtensionSupported($$this, $extension) {
    kji_Intrinsics_checkParameterIsNotNull($extension, $rt_s(366));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_enableExtension($$this, $extension) {
    kji_Intrinsics_checkParameterIsNotNull($extension, $rt_s(366));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glDrawBuffers($$this, $n, $bufs) {
    kji_Intrinsics_checkParameterIsNotNull($bufs, $rt_s(367));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glDrawArraysInstanced($$this, $mode, $first, $count, $instanceCount) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glDrawElementsInstanced($$this, $mode, $count, $type, $indicesOffset, $instanceCount) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glVertexAttribDivisor($$this, $index, $divisor) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glActiveTexture($$this, $texture) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glBindTexture($$this, $target, $texture) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glBlendFunc($$this, $sfactor, $dfactor) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glClear($$this, $mask) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glClearColor($$this, $red, $green, $blue, $alpha) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glCullFace($$this, $mode) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glDeleteTexture($$this, $texture) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glDisable($$this, $cap) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glDrawArrays($$this, $mode, $first, $count) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glEnable($$this, $cap) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGenTexture($$this) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGetIntegerv($$this, $pname, $params) {
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glTexImage2D($$this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glTexImage2D0($$this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $image) {
    $$this.$glTexImage2D0($target, $level, $internalformat, $width, $height, $border, $format, $type, $image === null ? null : $image.$getBytes());
}
function oktg_IGL$DefaultImpls_glTexParameterf($$this, $target, $pname, $param) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glViewport($$this, $x, $y, $width, $height) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glAttachShader($$this, $program, $shader) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glBindBuffer($$this, $target, $buffer) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glBindFramebuffer($$this, $target, $framebuffer) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glBindRenderbuffer($$this, $target, $renderbuffer) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glBufferData($$this, $target, $size, $data, $usage) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glCheckFramebufferStatus($$this, $target) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glCompileShader($$this, $shader) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glCreateProgram($$this) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glCreateShader($$this, $type) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glDeleteFramebuffer($$this, $framebuffer) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glDeleteProgram($$this, $program) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glDeleteRenderbuffer($$this, $renderbuffer) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glDeleteShader($$this, $shader) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glDetachShader($$this, $program, $shader) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glDrawElements($$this, $mode, $count, $type, $indices) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glEnableVertexAttribArray($$this, $index) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glFramebufferRenderbuffer($$this, $target, $attachment, $renderbuffertarget, $renderbuffer) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glFramebufferTexture2D($$this, $target, $attachment, $textarget, $texture, $level) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGenBuffer($$this) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGenerateMipmap($$this, $target) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGenFramebuffer($$this) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGenRenderbuffer($$this) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGetActiveAttrib($$this, $program, $index, $size, $type) {
    kji_Intrinsics_checkParameterIsNotNull($size, $rt_s(369));
    kji_Intrinsics_checkParameterIsNotNull($type, $rt_s(370));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGetActiveUniform($$this, $program, $index, $size, $type) {
    kji_Intrinsics_checkParameterIsNotNull($size, $rt_s(369));
    kji_Intrinsics_checkParameterIsNotNull($type, $rt_s(370));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGetAttribLocation($$this, $program, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGetFloatv($$this, $pname, $params) {
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGetProgramiv($$this, $program, $pname, $params) {
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGetProgramInfoLog($$this, $program) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGetShaderiv($$this, $shader, $pname, $params) {
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGetShaderInfoLog($$this, $shader) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glGetUniformLocation($$this, $program, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glLinkProgram($$this, $program) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glRenderbufferStorage($$this, $target, $internalformat, $width, $height) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glShaderSource($$this, $shader, $string) {
    kji_Intrinsics_checkParameterIsNotNull($string, $rt_s(371));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glTexParameteri($$this, $target, $pname, $param) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glUniform1f($$this, $location, $x) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glUniform1i($$this, $location, $x) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glUniform2f($$this, $location, $x, $y) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glUniform3f($$this, $location, $x, $y, $z) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glUniform3fv($$this, $location, $count, $v, $offset) {
    kji_Intrinsics_checkParameterIsNotNull($v, $rt_s(372));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glUniform4f($$this, $location, $x, $y, $z, $w) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glUniformMatrix4fv($$this, $location, $count, $transpose, $value, $offset) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glUseProgram($$this, $program) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktg_IGL$DefaultImpls_glVertexAttribPointer($$this, $indx, $size, $type, $normalized, $stride, $ptr_0) {
    $rt_throw(k_NotImplementedError__init_(null, 1, null));
}
function oktts_GBufferBaseTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$cubeMatrix = null;
    a.$$gBuffer0 = null;
    a.$$shader0 = null;
    a.$$cube = null;
    a.$$screenQuad1 = null;
}
function oktts_GBufferBaseTest$testMain$1__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktts_GBufferBaseTest$testMain$1();
    oktts_GBufferBaseTest$testMain$1__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktts_GBufferBaseTest$testMain$1_invoke(var$0) {
    oktts_GBufferBaseTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktts_GBufferBaseTest$testMain$1_invoke0($this) {
    var var$1;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$cubeMatrix;
    okt_APP_$callClinit();
    var$1.$rotate(0.0, 1.0, 0.0, okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktt_GBuffer_render($this.$$gBuffer0, oktts_GBufferBaseTest$testMain$1$1__init_($this));
    oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad1, oktt_GBuffer_getColorMap($this.$$gBuffer0), null, null, oktts_GBufferBaseTest$testMain$1$2__init_($this), 2, null);
    oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad1, oktt_GBuffer_getNormalMap($this.$$gBuffer0), null, null, oktts_GBufferBaseTest$testMain$1$3__init_($this), 2, null);
    oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad1, oktt_GBuffer_getPositionMap($this.$$gBuffer0), null, null, oktts_GBufferBaseTest$testMain$1$4__init_($this), 2, null);
    oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad1, oktt_GBuffer_getDepthMap($this.$$gBuffer0), null, null, oktts_GBufferBaseTest$testMain$1$5__init_($this), 2, null);
}
function oktts_GBufferBaseTest$testMain$1__init_0(var$0, var$1, var$2, var$3, var$4, var$5) {
    var$0.$$cubeMatrix = var$1;
    var$0.$$gBuffer0 = var$2;
    var$0.$$shader0 = var$3;
    var$0.$$cube = var$4;
    var$0.$$screenQuad1 = var$5;
    kji_Lambda__init_0(var$0, 0);
}
function kt_Regex() {
    jl_Object.call(this);
    this.$nativePattern = null;
}
var kt_Regex_Companion = null;
function kt_Regex_$callClinit() {
    kt_Regex_$callClinit = $rt_eraseClinit(kt_Regex);
    kt_Regex__clinit_();
}
function kt_Regex__init_(var_0) {
    var var_1 = new kt_Regex();
    kt_Regex__init_0(var_1, var_0);
    return var_1;
}
function kt_Regex__init_1(var_0) {
    var var_1 = new kt_Regex();
    kt_Regex__init_2(var_1, var_0);
    return var_1;
}
function kt_Regex_split($this, $input, $limit) {
    var var$3, $matcher, $result, $lastStart, $lastSplit;
    kji_Intrinsics_checkParameterIsNotNull($input, $rt_s(374));
    if (!($limit < 0 ? 0 : 1)) {
        var$3 = jl_StringBuilder__init_().$append($rt_s(375)).$append1($limit).$append12(46).$toString();
        $rt_throw(jl_IllegalArgumentException__init_(var$3.$toString()));
    }
    $matcher = jur_Pattern_matcher($this.$nativePattern, $input);
    if (jur_Matcher_find($matcher) && $limit != 1) {
        $result = ju_ArrayList__init_1($limit <= 0 ? 10 : kr_RangesKt___RangesKt_coerceAtMost($limit, 10));
        $lastStart = 0;
        $lastSplit = $limit - 1 | 0;
        a: {
            while (true) {
                $result.$add1($input.$subSequence($lastStart, jur_Matcher_start($matcher)).$toString());
                $lastStart = jur_Matcher_end($matcher);
                if ($lastSplit >= 0 && $result.$size() == $lastSplit)
                    break;
                if (!jur_Matcher_find($matcher))
                    break a;
            }
        }
        $result.$add1($input.$subSequence($lastStart, $input.$length()).$toString());
        return $result;
    }
    return kc_CollectionsKt__CollectionsJVMKt_listOf($input.$toString());
}
function kt_Regex__init_0($this, $nativePattern) {
    kt_Regex_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($nativePattern, $rt_s(376));
    jl_Object__init_0($this);
    $this.$nativePattern = $nativePattern;
}
function kt_Regex__init_2($this, $pattern) {
    var var$2;
    kt_Regex_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($pattern, $rt_s(377));
    var$2 = jur_Pattern_compile($pattern);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(378));
    kt_Regex__init_0($this, var$2);
}
function kt_Regex__clinit_() {
    kt_Regex_Companion = kt_Regex$Companion__init_(null);
}
function oktgg_GLTF$read$5$1() {
    kji_Lambda.call(this);
    this.$this$019 = null;
}
function oktgg_GLTF$read$5$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$5$1();
    oktgg_GLTF$read$5$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$5$1_invoke(var$0, var$1) {
    oktgg_GLTF$read$5$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$5$1_invoke0($this, $$this$objs) {
    var $sampler;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $sampler = oktgg_GLTFSampler__init_($this.$this$019.$this$020, oktgg_GLTFArray_size($this.$this$019.$this$020.$getSamplers()), 0, 0, 0, 0, null, 124, null);
    $this.$this$019.$this$020.$getSamplers().$add1($sampler);
    oktgg_GLTFSampler_read($sampler, $$this$objs);
}
function oktgg_GLTF$read$5$1__init_0(var$0, var$1) {
    var$0.$this$019 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function otja_ReadyStateChangeHandler() {
}
function otja_XMLHttpRequest$onComplete$static$lambda$_27_0() {
    var a = this; jl_Object.call(a);
    a.$_00 = null;
    a.$_10 = null;
}
function otja_XMLHttpRequest$onComplete$static$lambda$_27_0__init_(var_0, var_1) {
    var var_2 = new otja_XMLHttpRequest$onComplete$static$lambda$_27_0();
    otja_XMLHttpRequest$onComplete$static$lambda$_27_0__init_0(var_2, var_0, var_1);
    return var_2;
}
function otja_XMLHttpRequest$onComplete$static$lambda$_27_0__init_0(var$0, var$1, var$2) {
    jl_Object__init_0(var$0);
    var$0.$_00 = var$1;
    var$0.$_10 = var$2;
}
function otja_XMLHttpRequest$onComplete$static$lambda$_27_0_stateChanged(var$0) {
    otja_XMLHttpRequest_lambda$onComplete$0$static(var$0.$_00, var$0.$_10);
}
function otja_XMLHttpRequest$onComplete$static$lambda$_27_0_stateChanged$exported$0(var$0) {
    var$0.$stateChanged();
}
function oooip_DxUtil$BlockPointer() {
    var a = this; jl_Object.call(a);
    a.$pointer = 0;
    a.$o = null;
}
function oooip_DxUtil$BlockPointer__init_(var_0, var_1) {
    var var_2 = new oooip_DxUtil$BlockPointer();
    oooip_DxUtil$BlockPointer__init_0(var_2, var_0, var_1);
    return var_2;
}
function oooip_DxUtil$BlockPointer__init_0($this, $obj, $pointer) {
    jl_Object__init_0($this);
    $this.$o = null;
    $this.$pointer = $pointer;
    $this.$o = $obj;
}
function oooip_DxUtil$BlockPointer_toInt($this) {
    return $this.$pointer;
}
function oooip_DxUtil$BlockPointer_asDxWorldProcessMemArena($this) {
    if ($this.$o === null)
        $this.$o = oooip_DxWorldProcessMemArena__init_();
    return $this.$o;
}
function oooip_DxUtil$BlockPointer_setTo($this, $x) {
    $this.$o = $x;
}
function oktsg_OperationNode$Companion() {
    jl_Object.call(this);
}
function oktsg_OperationNode$Companion__init_() {
    var var_0 = new oktsg_OperationNode$Companion();
    oktsg_OperationNode$Companion__init_0(var_0);
    return var_0;
}
function oktsg_OperationNode$Companion__init_1(var_0) {
    var var_1 = new oktsg_OperationNode$Companion();
    oktsg_OperationNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_OperationNode$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_OperationNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_OperationNode$Companion__init_0($this);
}
function oooi_Objects_H$DxPosRC() {
}
function oktd_IFloatData$DefaultImpls() {
    jl_Object.call(this);
}
function oktd_IFloatData$DefaultImpls_get($$this, $out) {
    var var$3, $i, var$5;
    var$3 = $out.data;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $i = 0;
    var$5 = var$3.length;
    while ($i < var$5) {
        var$3[$i] = $$this.$get15().$floatValue();
        $i = $i + 1 | 0;
    }
}
function oktd_IFloatData$DefaultImpls_put($$this, $values) {
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    oktd_IDataArray$DefaultImpls_put($$this, $values);
}
function oktgg_IGLTFMaterial$read$5$3$1() {
    kji_Lambda.call(this);
    this.$this$021 = null;
}
function oktgg_IGLTFMaterial$read$5$3$1__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$5$3$1();
    oktgg_IGLTFMaterial$read$5$3$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_IGLTFMaterial$read$5$3$1_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$5$3$1_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$5$3$1_invoke0($this, $it) {
    $this.$this$021.$this$022.$this$023.$setMetallicRoughnessTextureUV($it);
}
function oktgg_IGLTFMaterial$read$5$3$1__init_0(var$0, var$1) {
    var$0.$this$021 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jl_Object$Monitor() {
    var a = this; jl_Object.call(a);
    a.$enteringThreads = null;
    a.$notifyListeners = null;
    a.$owner = null;
    a.$count = 0;
}
function jl_Object$Monitor__init_() {
    var var_0 = new jl_Object$Monitor();
    jl_Object$Monitor__init_0(var_0);
    return var_0;
}
function jl_Object$Monitor__init_0($this) {
    jl_Object__init_0($this);
    $this.$owner = jl_Thread_currentThread();
}
function oktg_IGL() {
}
function oktg_GL$api$1() {
    jl_Object.call(this);
}
function oktg_GL$api$1__init_() {
    var var_0 = new oktg_GL$api$1();
    oktg_GL$api$1__init_0(var_0);
    return var_0;
}
function oktg_GL$api$1__init_0($this) {
    jl_Object__init_0($this);
}
function oktg_GL$api$1_getMainFrameBufferHandle($this) {
    return oktg_IGL$DefaultImpls_getMainFrameBufferHandle($this);
}
function oktg_GL$api$1_getMainFrameBufferWidth($this) {
    return oktg_IGL$DefaultImpls_getMainFrameBufferWidth($this);
}
function oktg_GL$api$1_getMainFrameBufferHeight($this) {
    return oktg_IGL$DefaultImpls_getMainFrameBufferHeight($this);
}
function oktg_GL$api$1_getMajVer($this) {
    return oktg_IGL$DefaultImpls_getMajVer($this);
}
function oktg_GL$api$1_getGlesMajVer($this) {
    return oktg_IGL$DefaultImpls_getGlesMajVer($this);
}
function oktg_GL$api$1_isGLES($this) {
    return oktg_IGL$DefaultImpls_isGLES($this);
}
function oktg_GL$api$1_initGL($this) {
    oktg_IGL$DefaultImpls_initGL($this);
}
function oktg_GL$api$1_isExtensionSupported($this, $extension) {
    kji_Intrinsics_checkParameterIsNotNull($extension, $rt_s(366));
    return oktg_IGL$DefaultImpls_isExtensionSupported($this, $extension);
}
function oktg_GL$api$1_enableExtension($this, $extension) {
    kji_Intrinsics_checkParameterIsNotNull($extension, $rt_s(366));
    return oktg_IGL$DefaultImpls_enableExtension($this, $extension);
}
function oktg_GL$api$1_glDrawBuffers($this, $n, $bufs) {
    kji_Intrinsics_checkParameterIsNotNull($bufs, $rt_s(367));
    oktg_IGL$DefaultImpls_glDrawBuffers($this, $n, $bufs);
}
function oktg_GL$api$1_glDrawArraysInstanced($this, $mode, $first, $count, $instanceCount) {
    oktg_IGL$DefaultImpls_glDrawArraysInstanced($this, $mode, $first, $count, $instanceCount);
}
function oktg_GL$api$1_glDrawElementsInstanced($this, $mode, $count, $type, $indicesOffset, $instanceCount) {
    oktg_IGL$DefaultImpls_glDrawElementsInstanced($this, $mode, $count, $type, $indicesOffset, $instanceCount);
}
function oktg_GL$api$1_glVertexAttribDivisor($this, $index, $divisor) {
    oktg_IGL$DefaultImpls_glVertexAttribDivisor($this, $index, $divisor);
}
function oktg_GL$api$1_glActiveTexture($this, $texture) {
    oktg_IGL$DefaultImpls_glActiveTexture($this, $texture);
}
function oktg_GL$api$1_glBindTexture($this, $target, $texture) {
    oktg_IGL$DefaultImpls_glBindTexture($this, $target, $texture);
}
function oktg_GL$api$1_glBlendFunc($this, $sfactor, $dfactor) {
    oktg_IGL$DefaultImpls_glBlendFunc($this, $sfactor, $dfactor);
}
function oktg_GL$api$1_glClear($this, $mask) {
    oktg_IGL$DefaultImpls_glClear($this, $mask);
}
function oktg_GL$api$1_glClearColor($this, $red, $green, $blue, $alpha) {
    oktg_IGL$DefaultImpls_glClearColor($this, $red, $green, $blue, $alpha);
}
function oktg_GL$api$1_glCullFace($this, $mode) {
    oktg_IGL$DefaultImpls_glCullFace($this, $mode);
}
function oktg_GL$api$1_glDeleteTexture($this, $texture) {
    oktg_IGL$DefaultImpls_glDeleteTexture($this, $texture);
}
function oktg_GL$api$1_glDisable($this, $cap) {
    oktg_IGL$DefaultImpls_glDisable($this, $cap);
}
function oktg_GL$api$1_glDrawArrays($this, $mode, $first, $count) {
    oktg_IGL$DefaultImpls_glDrawArrays($this, $mode, $first, $count);
}
function oktg_GL$api$1_glDrawElements($this, $mode, $count, $type, $indices) {
    oktg_IGL$DefaultImpls_glDrawElements($this, $mode, $count, $type, $indices);
}
function oktg_GL$api$1_glEnable($this, $cap) {
    oktg_IGL$DefaultImpls_glEnable($this, $cap);
}
function oktg_GL$api$1_glGenTexture($this) {
    return oktg_IGL$DefaultImpls_glGenTexture($this);
}
function oktg_GL$api$1_glGetIntegerv($this, $pname, $params) {
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    oktg_IGL$DefaultImpls_glGetIntegerv($this, $pname, $params);
}
function oktg_GL$api$1_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
    oktg_IGL$DefaultImpls_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
}
function oktg_GL$api$1_glTexImage2D0($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $image) {
    oktg_IGL$DefaultImpls_glTexImage2D0($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $image);
}
function oktg_GL$api$1_glTexParameterf($this, $target, $pname, $param) {
    oktg_IGL$DefaultImpls_glTexParameterf($this, $target, $pname, $param);
}
function oktg_GL$api$1_glViewport($this, $x, $y, $width, $height) {
    oktg_IGL$DefaultImpls_glViewport($this, $x, $y, $width, $height);
}
function oktg_GL$api$1_glAttachShader($this, $program, $shader) {
    oktg_IGL$DefaultImpls_glAttachShader($this, $program, $shader);
}
function oktg_GL$api$1_glBindBuffer($this, $target, $buffer) {
    oktg_IGL$DefaultImpls_glBindBuffer($this, $target, $buffer);
}
function oktg_GL$api$1_glBindFramebuffer($this, $target, $framebuffer) {
    oktg_IGL$DefaultImpls_glBindFramebuffer($this, $target, $framebuffer);
}
function oktg_GL$api$1_glBindRenderbuffer($this, $target, $renderbuffer) {
    oktg_IGL$DefaultImpls_glBindRenderbuffer($this, $target, $renderbuffer);
}
function oktg_GL$api$1_glBufferData($this, $target, $size, $data, $usage) {
    oktg_IGL$DefaultImpls_glBufferData($this, $target, $size, $data, $usage);
}
function oktg_GL$api$1_glCheckFramebufferStatus($this, $target) {
    return oktg_IGL$DefaultImpls_glCheckFramebufferStatus($this, $target);
}
function oktg_GL$api$1_glCompileShader($this, $shader) {
    oktg_IGL$DefaultImpls_glCompileShader($this, $shader);
}
function oktg_GL$api$1_glCreateProgram($this) {
    return oktg_IGL$DefaultImpls_glCreateProgram($this);
}
function oktg_GL$api$1_glCreateShader($this, $type) {
    return oktg_IGL$DefaultImpls_glCreateShader($this, $type);
}
function oktg_GL$api$1_glDeleteFramebuffer($this, $framebuffer) {
    oktg_IGL$DefaultImpls_glDeleteFramebuffer($this, $framebuffer);
}
function oktg_GL$api$1_glDeleteProgram($this, $program) {
    oktg_IGL$DefaultImpls_glDeleteProgram($this, $program);
}
function oktg_GL$api$1_glDeleteRenderbuffer($this, $renderbuffer) {
    oktg_IGL$DefaultImpls_glDeleteRenderbuffer($this, $renderbuffer);
}
function oktg_GL$api$1_glDeleteShader($this, $shader) {
    oktg_IGL$DefaultImpls_glDeleteShader($this, $shader);
}
function oktg_GL$api$1_glDetachShader($this, $program, $shader) {
    oktg_IGL$DefaultImpls_glDetachShader($this, $program, $shader);
}
function oktg_GL$api$1_glEnableVertexAttribArray($this, $index) {
    oktg_IGL$DefaultImpls_glEnableVertexAttribArray($this, $index);
}
function oktg_GL$api$1_glFramebufferRenderbuffer($this, $target, $attachment, $renderbuffertarget, $renderbuffer) {
    oktg_IGL$DefaultImpls_glFramebufferRenderbuffer($this, $target, $attachment, $renderbuffertarget, $renderbuffer);
}
function oktg_GL$api$1_glFramebufferTexture2D($this, $target, $attachment, $textarget, $texture, $level) {
    oktg_IGL$DefaultImpls_glFramebufferTexture2D($this, $target, $attachment, $textarget, $texture, $level);
}
function oktg_GL$api$1_glGenBuffer($this) {
    return oktg_IGL$DefaultImpls_glGenBuffer($this);
}
function oktg_GL$api$1_glGenerateMipmap($this, $target) {
    oktg_IGL$DefaultImpls_glGenerateMipmap($this, $target);
}
function oktg_GL$api$1_glGenFramebuffer($this) {
    return oktg_IGL$DefaultImpls_glGenFramebuffer($this);
}
function oktg_GL$api$1_glGenRenderbuffer($this) {
    return oktg_IGL$DefaultImpls_glGenRenderbuffer($this);
}
function oktg_GL$api$1_glGetActiveAttrib($this, $program, $index, $size, $type) {
    kji_Intrinsics_checkParameterIsNotNull($size, $rt_s(369));
    kji_Intrinsics_checkParameterIsNotNull($type, $rt_s(370));
    return oktg_IGL$DefaultImpls_glGetActiveAttrib($this, $program, $index, $size, $type);
}
function oktg_GL$api$1_glGetActiveUniform($this, $program, $index, $size, $type) {
    kji_Intrinsics_checkParameterIsNotNull($size, $rt_s(369));
    kji_Intrinsics_checkParameterIsNotNull($type, $rt_s(370));
    return oktg_IGL$DefaultImpls_glGetActiveUniform($this, $program, $index, $size, $type);
}
function oktg_GL$api$1_glGetAttribLocation($this, $program, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    return oktg_IGL$DefaultImpls_glGetAttribLocation($this, $program, $name);
}
function oktg_GL$api$1_glGetFloatv($this, $pname, $params) {
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    oktg_IGL$DefaultImpls_glGetFloatv($this, $pname, $params);
}
function oktg_GL$api$1_glGetProgramiv($this, $program, $pname, $params) {
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    oktg_IGL$DefaultImpls_glGetProgramiv($this, $program, $pname, $params);
}
function oktg_GL$api$1_glGetProgramInfoLog($this, $program) {
    return oktg_IGL$DefaultImpls_glGetProgramInfoLog($this, $program);
}
function oktg_GL$api$1_glGetShaderiv($this, $shader, $pname, $params) {
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    oktg_IGL$DefaultImpls_glGetShaderiv($this, $shader, $pname, $params);
}
function oktg_GL$api$1_glGetShaderInfoLog($this, $shader) {
    return oktg_IGL$DefaultImpls_glGetShaderInfoLog($this, $shader);
}
function oktg_GL$api$1_glGetUniformLocation($this, $program, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    return oktg_IGL$DefaultImpls_glGetUniformLocation($this, $program, $name);
}
function oktg_GL$api$1_glLinkProgram($this, $program) {
    oktg_IGL$DefaultImpls_glLinkProgram($this, $program);
}
function oktg_GL$api$1_glRenderbufferStorage($this, $target, $internalformat, $width, $height) {
    oktg_IGL$DefaultImpls_glRenderbufferStorage($this, $target, $internalformat, $width, $height);
}
function oktg_GL$api$1_glShaderSource($this, $shader, $string) {
    kji_Intrinsics_checkParameterIsNotNull($string, $rt_s(371));
    oktg_IGL$DefaultImpls_glShaderSource($this, $shader, $string);
}
function oktg_GL$api$1_glTexParameteri($this, $target, $pname, $param) {
    oktg_IGL$DefaultImpls_glTexParameteri($this, $target, $pname, $param);
}
function oktg_GL$api$1_glUniform1f($this, $location, $x) {
    oktg_IGL$DefaultImpls_glUniform1f($this, $location, $x);
}
function oktg_GL$api$1_glUniform1i($this, $location, $x) {
    oktg_IGL$DefaultImpls_glUniform1i($this, $location, $x);
}
function oktg_GL$api$1_glUniform2f($this, $location, $x, $y) {
    oktg_IGL$DefaultImpls_glUniform2f($this, $location, $x, $y);
}
function oktg_GL$api$1_glUniform3f($this, $location, $x, $y, $z) {
    oktg_IGL$DefaultImpls_glUniform3f($this, $location, $x, $y, $z);
}
function oktg_GL$api$1_glUniform3fv($this, $location, $count, $v, $offset) {
    kji_Intrinsics_checkParameterIsNotNull($v, $rt_s(372));
    oktg_IGL$DefaultImpls_glUniform3fv($this, $location, $count, $v, $offset);
}
function oktg_GL$api$1_glUniform4f($this, $location, $x, $y, $z, $w) {
    oktg_IGL$DefaultImpls_glUniform4f($this, $location, $x, $y, $z, $w);
}
function oktg_GL$api$1_glUniformMatrix4fv($this, $location, $count, $transpose, $value, $offset) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    oktg_IGL$DefaultImpls_glUniformMatrix4fv($this, $location, $count, $transpose, $value, $offset);
}
function oktg_GL$api$1_glUseProgram($this, $program) {
    oktg_IGL$DefaultImpls_glUseProgram($this, $program);
}
function oktg_GL$api$1_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0) {
    oktg_IGL$DefaultImpls_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0);
}
function oktgg_GLTF$read$11$1() {
    kji_Lambda.call(this);
    this.$this$024 = null;
}
function oktgg_GLTF$read$11$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$11$1();
    oktgg_GLTF$read$11$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$11$1_invoke(var$0, var$1) {
    oktgg_GLTF$read$11$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$11$1_invoke0($this, $$this$objs) {
    var $node;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $node = oktgg_GLTFNode__init_1($this.$this$024.$this$025, oktgg_GLTFArray_size($this.$this$024.$this$025.$getNodes()), null, 4, null);
    $this.$this$024.$this$025.$getNodes().$add1($node);
    oktgg_GLTFNode_read($node, $$this$objs);
}
function oktgg_GLTF$read$11$1__init_0(var$0, var$1) {
    var$0.$this$024 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktt_FrameBufferTest$testMain$1$1() {
    kji_Lambda.call(this);
    this.$this$026 = null;
}
function oktt_FrameBufferTest$testMain$1$1__init_(var_0) {
    var var_1 = new oktt_FrameBufferTest$testMain$1$1();
    oktt_FrameBufferTest$testMain$1$1__init_0(var_1, var_0);
    return var_1;
}
function oktt_FrameBufferTest$testMain$1$1_invoke(var$0, var$1) {
    oktt_FrameBufferTest$testMain$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktt_FrameBufferTest$testMain$1$1_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_CubeModel_render($this.$this$026.$$model1);
}
function oktt_FrameBufferTest$testMain$1$1__init_0(var$0, var$1) {
    var$0.$this$026 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktd_IByteData$DefaultImpls() {
    jl_Object.call(this);
}
function oktd_IByteData$DefaultImpls_put($$this, $array) {
    var var$3, $i, var$5;
    var$3 = $array.data;
    kji_Intrinsics_checkParameterIsNotNull($array, $rt_s(32));
    $i = 0;
    var$5 = var$3.length;
    while ($i < var$5) {
        $$this.$put8(jl_Byte_valueOf(var$3[$i]));
        $i = $i + 1 | 0;
    }
}
function oktd_IByteData$DefaultImpls_toInt($$this, $index) {
    return $$this.$get1($index).$byteValue() & 255;
}
function oktd_IByteData$DefaultImpls_put0($$this, $index, $value) {
    oktd_IDataArray$DefaultImpls_put0($$this, $index, jl_Byte_valueOf($value));
}
function oktm_IVertexInput() {
}
function oktm_VertexInput() {
    var a = this; jl_Object.call(a);
    a.$byteOffset0 = 0;
    a.$componentOffset = 0;
    a.$size1 = 0;
    a.$name12 = null;
    a.$type1 = 0;
    a.$normalized = 0;
}
function oktm_VertexInput__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktm_VertexInput();
    oktm_VertexInput__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktm_VertexInput_getByteOffset($this) {
    return $this.$byteOffset0;
}
function oktm_VertexInput_setByteOffset($this, $_set___) {
    $this.$byteOffset0 = $_set___;
}
function oktm_VertexInput_setComponentOffset($this, $_set___) {
    $this.$componentOffset = $_set___;
}
function oktm_VertexInput_getSize($this) {
    return $this.$size1;
}
function oktm_VertexInput_getName($this) {
    return $this.$name12;
}
function oktm_VertexInput_getType($this) {
    return $this.$type1;
}
function oktm_VertexInput_getNormalized($this) {
    return $this.$normalized;
}
function oktm_VertexInput__init_0($this, $size, $name, $type, $normalized) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    jl_Object__init_0($this);
    $this.$size1 = $size;
    $this.$name12 = $name;
    $this.$type1 = $type;
    $this.$normalized = $normalized;
    if (oktm_VertexInput_getSize($this) >= 1 && oktm_VertexInput_getSize($this) <= 4)
        return;
    $rt_throw(jl_RuntimeException__init_($rt_s(379)));
}
function oktm_VertexInput_getSizeInBytes($this) {
    return oktm_IVertexInput$DefaultImpls_getSizeInBytes($this);
}
function kjim_KMutableCollection() {
}
function oktm_IVertexInputs() {
}
function oktm_Frustum$Companion() {
    jl_Object.call(this);
}
function oktm_Frustum$Companion__init_() {
    var var_0 = new oktm_Frustum$Companion();
    oktm_Frustum$Companion__init_0(var_0);
    return var_0;
}
function oktm_Frustum$Companion__init_1(var_0) {
    var var_1 = new oktm_Frustum$Companion();
    oktm_Frustum$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktm_Frustum$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktm_Frustum$Companion__init_2($this, $$constructor_marker) {
    oktm_Frustum$Companion__init_0($this);
}
function ooo_DMisc() {
    oooi_Common.call(this);
}
function ooo_DMisc__init_() {
    var var_0 = new ooo_DMisc();
    ooo_DMisc__init_0(var_0);
    return var_0;
}
function ooo_DMisc__init_0($this) {
    oooi_Common__init_0($this);
}
function okts_Shader$buildSourceCode$$inlined$sortBy$1() {
    jl_Object.call(this);
    this.$$countMap$inlined = null;
}
function okts_Shader$buildSourceCode$$inlined$sortBy$1__init_(var_0) {
    var var_1 = new okts_Shader$buildSourceCode$$inlined$sortBy$1();
    okts_Shader$buildSourceCode$$inlined$sortBy$1__init_0(var_1, var_0);
    return var_1;
}
function okts_Shader$buildSourceCode$$inlined$sortBy$1__init_0(var$0, var$1) {
    var$0.$$countMap$inlined = var$1;
    jl_Object__init_0(var$0);
}
function okts_Shader$buildSourceCode$$inlined$sortBy$1_compare($this, $a, $b) {
    var $it, var$4, var$5;
    $it = $a;
    var$4 = $this.$$countMap$inlined.$get0($it);
    $it = $b;
    var$5 = kc_ComparisonsKt__ComparisonsKt_compareValues(var$4, $this.$$countMap$inlined.$get0($it));
    return var$5;
}
function oooil_CCDSimplex() {
    jl_Object.call(this);
}
function oooil_CCDSimplex__init_() {
    var var_0 = new oooil_CCDSimplex();
    oooil_CCDSimplex__init_0(var_0);
    return var_0;
}
function oooil_CCDSimplex__init_0($this) {
    jl_Object__init_0($this);
}
function oooil_CCDSimplex_ccdSimplexSize($s) {
    return $s.$last + 1 | 0;
}
function oooil_CCDSimplex_ccdSimplexPoint0($s) {
    return oooil_CCDSimplex$ccd_simplex_t_access$000($s);
}
function oooil_CCDSimplex_ccdSimplexPoint1($s) {
    return oooil_CCDSimplex$ccd_simplex_t_access$100($s);
}
function oooil_CCDSimplex_ccdSimplexPoint2($s) {
    return oooil_CCDSimplex$ccd_simplex_t_access$200($s);
}
function oooil_CCDSimplex_ccdSimplexPoint3($s) {
    return oooil_CCDSimplex$ccd_simplex_t_access$300($s);
}
function oooil_CCDSimplex_ccdSimplexPointW0($s) {
    return oooil_CCDSimplex$ccd_simplex_t_access$000($s);
}
function oooil_CCDSimplex_ccdSimplexPointW1($s) {
    return oooil_CCDSimplex$ccd_simplex_t_access$100($s);
}
function oooil_CCDSimplex_ccdSimplexPointW2($s) {
    return oooil_CCDSimplex$ccd_simplex_t_access$200($s);
}
function oooil_CCDSimplex_ccdSimplexPointW3($s) {
    return oooil_CCDSimplex$ccd_simplex_t_access$300($s);
}
function oooil_CCDSimplex_ccdSimplexSet1($s, $a) {
    oooil_CCDSupport_ccdSupportCopy(oooil_CCDSimplex$ccd_simplex_t_access$100($s), $a);
}
function oooil_CCDSimplex_ccdSimplexSet2($s, $a) {
    oooil_CCDSupport_ccdSupportCopy(oooil_CCDSimplex$ccd_simplex_t_access$200($s), $a);
}
function oooil_CCDSimplex_ccdSimplexSet3($s, $a) {
    oooil_CCDSupport_ccdSupportCopy(oooil_CCDSimplex$ccd_simplex_t_access$300($s), $a);
}
function oooil_CCDSimplex_ccdSimplexSetSize($s, $size) {
    $s.$last = $size - 1 | 0;
}
function oooil_CCDSimplex_ccdSimplexSwap12($s) {
    var $supp;
    $supp = oooil_CCDSupport$ccd_support_t__init_();
    oooil_CCDSupport_ccdSupportCopy($supp, oooil_CCDSimplex$ccd_simplex_t_access$100($s));
    oooil_CCDSupport_ccdSupportCopy(oooil_CCDSimplex$ccd_simplex_t_access$100($s), oooil_CCDSimplex$ccd_simplex_t_access$200($s));
    oooil_CCDSupport_ccdSupportCopy(oooil_CCDSimplex$ccd_simplex_t_access$200($s), $supp);
}
function jl_String$_clinit_$lambda$_81_0() {
    jl_Object.call(this);
}
function jl_String$_clinit_$lambda$_81_0__init_() {
    var var_0 = new jl_String$_clinit_$lambda$_81_0();
    jl_String$_clinit_$lambda$_81_0__init_0(var_0);
    return var_0;
}
function jl_String$_clinit_$lambda$_81_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function oktg_IWorld() {
}
var oktg_IWorld_Companion = null;
function oktg_IWorld_$callClinit() {
    oktg_IWorld_$callClinit = $rt_eraseClinit(oktg_IWorld);
    oktg_IWorld__clinit_();
}
function oktg_IWorld__clinit_() {
    oktg_IWorld$Companion_$callClinit();
    oktg_IWorld_Companion = oktg_IWorld$Companion_$$INSTANCE;
}
function jn_BufferOverflowException() {
    jl_RuntimeException.call(this);
}
function jn_BufferOverflowException__init_() {
    var var_0 = new jn_BufferOverflowException();
    jn_BufferOverflowException__init_0(var_0);
    return var_0;
}
function jn_BufferOverflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function oktt_TvmIMG() {
    jl_Object.call(this);
}
var oktt_TvmIMG_INSTANCE = null;
function oktt_TvmIMG_$callClinit() {
    oktt_TvmIMG_$callClinit = $rt_eraseClinit(oktt_TvmIMG);
    oktt_TvmIMG__clinit_();
}
function oktt_TvmIMG__init_() {
    var var_0 = new oktt_TvmIMG();
    oktt_TvmIMG__init_0(var_0);
    return var_0;
}
function oktt_TvmIMG_createImage($this) {
    var var$1, var$2, var$3;
    var$1 = new oktt_HtmlImage;
    var$2 = window;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(380));
    var$3 = var$2.document.createElement("img");
    if (var$3 === null)
        $rt_throw(k_TypeCastException__init_($rt_s(381)));
    oktt_HtmlImage__init_0(var$1, var$3);
    return var$1;
}
function oktt_TvmIMG_load($this, $url, $out, $sourceLocation, $response) {
    var var$5, $img;
    kji_Intrinsics_checkParameterIsNotNull($url, $rt_s(280));
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    kji_Intrinsics_checkParameterIsNotNull($response, $rt_s(281));
    var$5 = $out.$getSourceObject0();
    if (var$5 === null)
        $rt_throw(k_TypeCastException__init_($rt_s(381)));
    $img = var$5;
    var$5 = $rt_ustr($url);
    $img.src = var$5;
    if ($img.complete ? 1 : 0)
        $response.$invoke11(jl_Integer_valueOf(200), $out);
    else {
        var$5 = otji_JS_functionAsObject(oktt_TvmIMG$load$1__init_($response, $out), "handleEvent");
        $img.addEventListener("load", otji_JS_function(var$5, "handleEvent"));
        var$5 = otji_JS_functionAsObject(oktt_TvmIMG$load$2__init_($response, $out), "handleEvent");
        $img.addEventListener("error", otji_JS_function(var$5, "handleEvent"));
    }
    return $out;
}
function oktt_TvmIMG_load0($this, $file, $out, $response) {
    var var$4, $img, var$6;
    kji_Intrinsics_checkParameterIsNotNull($file, $rt_s(282));
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    kji_Intrinsics_checkParameterIsNotNull($response, $rt_s(281));
    var$4 = $out.$getSourceObject0();
    if (var$4 === null)
        $rt_throw(k_TypeCastException__init_($rt_s(381)));
    $img = var$4;
    var$4 = $rt_ustr($file.$getPath());
    $img.src = var$4;
    if ($img.complete ? 1 : 0)
        $response.$invoke11(jl_Integer_valueOf(200), $out);
    else {
        var$6 = otji_JS_functionAsObject(oktt_TvmIMG$load$3__init_($response, $out), "handleEvent");
        $img.addEventListener("load", otji_JS_function(var$6, "handleEvent"));
        var$4 = otji_JS_functionAsObject(oktt_TvmIMG$load$4__init_($response, $out), "handleEvent");
        $img.addEventListener("error", otji_JS_function(var$4, "handleEvent"));
    }
    return $out;
}
function oktt_TvmIMG__init_0($this) {
    oktt_TvmIMG_$callClinit();
    jl_Object__init_0($this);
}
function oktt_TvmIMG__clinit_() {
    oktt_TvmIMG_INSTANCE = oktt_TvmIMG__init_();
}
function oktm_IIndexBufferObject$Companion() {
    jl_Object.call(this);
}
var oktm_IIndexBufferObject$Companion_Build = null;
var oktm_IIndexBufferObject$Companion_$$INSTANCE = null;
function oktm_IIndexBufferObject$Companion_$callClinit() {
    oktm_IIndexBufferObject$Companion_$callClinit = $rt_eraseClinit(oktm_IIndexBufferObject$Companion);
    oktm_IIndexBufferObject$Companion__clinit_();
}
function oktm_IIndexBufferObject$Companion__init_() {
    var var_0 = new oktm_IIndexBufferObject$Companion();
    oktm_IIndexBufferObject$Companion__init_0(var_0);
    return var_0;
}
function oktm_IIndexBufferObject$Companion__init_0($this) {
    oktm_IIndexBufferObject$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktm_IIndexBufferObject$Companion__clinit_() {
    oktm_IIndexBufferObject$Companion_$$INSTANCE = oktm_IIndexBufferObject$Companion__init_();
    oktm_IIndexBufferObject$Companion$Build$1_$callClinit();
    oktm_IIndexBufferObject$Companion_Build = oktm_IIndexBufferObject$Companion$Build$1_INSTANCE;
}
function ooo_DCylinder() {
}
function oooi_DxCylinder() {
    oooi_DxGeom.call(this);
}
function oooil_CCDSimplex$ccd_simplex_t() {
    var a = this; jl_Object.call(a);
    a.$last = 0;
    a.$ps0 = null;
    a.$ps1 = null;
    a.$ps2 = null;
    a.$ps3 = null;
}
function oooil_CCDSimplex$ccd_simplex_t__init_() {
    var var_0 = new oooil_CCDSimplex$ccd_simplex_t();
    oooil_CCDSimplex$ccd_simplex_t__init_0(var_0);
    return var_0;
}
function oooil_CCDSimplex$ccd_simplex_t__init_0($this) {
    jl_Object__init_0($this);
    $this.$ps0 = oooil_CCDSupport$ccd_support_t__init_();
    $this.$ps1 = oooil_CCDSupport$ccd_support_t__init_();
    $this.$ps2 = oooil_CCDSupport$ccd_support_t__init_();
    $this.$ps3 = oooil_CCDSupport$ccd_support_t__init_();
}
function oooil_CCDSimplex$ccd_simplex_t_access$000($x0) {
    return $x0.$ps0;
}
function oooil_CCDSimplex$ccd_simplex_t_access$100($x0) {
    return $x0.$ps1;
}
function oooil_CCDSimplex$ccd_simplex_t_access$200($x0) {
    return $x0.$ps2;
}
function oooil_CCDSimplex$ccd_simplex_t_access$300($x0) {
    return $x0.$ps3;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLetterOrDigit();
    jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
}
function otciu_UnicodeHelper$Range() {
    var a = this; jl_Object.call(a);
    a.$start1 = 0;
    a.$end1 = 0;
    a.$data0 = null;
}
function otciu_UnicodeHelper$Range__init_(var_0, var_1, var_2) {
    var var_3 = new otciu_UnicodeHelper$Range();
    otciu_UnicodeHelper$Range__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function otciu_UnicodeHelper$Range__init_0($this, $start, $end, $data) {
    jl_Object__init_0($this);
    $this.$start1 = $start;
    $this.$end1 = $end;
    $this.$data0 = $data;
}
function oooi_DxQuickStep$dxQuickStepperStage2CallContext() {
    var a = this; jl_Object.call(a);
    a.$m_stepperCallContext = null;
    a.$m_localContext = null;
    a.$m_rhs_tmp = null;
    a.$m_ji_J = null;
    a.$m_ji_jb = null;
    a.$m_bi = null;
    a.$m_Jrhsi = null;
}
function oooi_DxQuickStep$dxQuickStepperStage2CallContext__init_() {
    var var_0 = new oooi_DxQuickStep$dxQuickStepperStage2CallContext();
    oooi_DxQuickStep$dxQuickStepperStage2CallContext__init_0(var_0);
    return var_0;
}
function oooi_DxQuickStep$dxQuickStepperStage2CallContext__init_1(var_0) {
    var var_1 = new oooi_DxQuickStep$dxQuickStepperStage2CallContext();
    oooi_DxQuickStep$dxQuickStepperStage2CallContext__init_2(var_1, var_0);
    return var_1;
}
function oooi_DxQuickStep$dxQuickStepperStage2CallContext__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_ji_J = juca_AtomicInteger__init_0();
    $this.$m_ji_jb = juca_AtomicInteger__init_0();
    $this.$m_bi = juca_AtomicInteger__init_0();
    $this.$m_Jrhsi = juca_AtomicInteger__init_0();
}
function oooi_DxQuickStep$dxQuickStepperStage2CallContext_Initialize($this, $callContext, $localContext, $rhs_tmp) {
    $this.$m_stepperCallContext = $callContext;
    $this.$m_localContext = $localContext;
    $this.$m_rhs_tmp = $rhs_tmp;
    juca_AtomicInteger_set($this.$m_ji_J, 0);
    juca_AtomicInteger_set($this.$m_ji_jb, 0);
    juca_AtomicInteger_set($this.$m_bi, 0);
    juca_AtomicInteger_set($this.$m_Jrhsi, 0);
}
function oooi_DxQuickStep$dxQuickStepperStage2CallContext__init_2($this, $x0) {
    oooi_DxQuickStep$dxQuickStepperStage2CallContext__init_0($this);
}
function jur_AbstractLineTerminator() {
    jl_Object.call(this);
}
var jur_AbstractLineTerminator_unixLT = null;
var jur_AbstractLineTerminator_unicodeLT = null;
function jur_AbstractLineTerminator__init_() {
    var var_0 = new jur_AbstractLineTerminator();
    jur_AbstractLineTerminator__init_0(var_0);
    return var_0;
}
function jur_AbstractLineTerminator__init_0($this) {
    jl_Object__init_0($this);
}
function jur_AbstractLineTerminator_getInstance($flag) {
    if (!($flag & 1)) {
        if (jur_AbstractLineTerminator_unicodeLT !== null)
            return jur_AbstractLineTerminator_unicodeLT;
        jur_AbstractLineTerminator_unicodeLT = jur_AbstractLineTerminator$2__init_();
        return jur_AbstractLineTerminator_unicodeLT;
    }
    if (jur_AbstractLineTerminator_unixLT !== null)
        return jur_AbstractLineTerminator_unixLT;
    jur_AbstractLineTerminator_unixLT = jur_AbstractLineTerminator$1__init_();
    return jur_AbstractLineTerminator_unixLT;
}
function jur_AbstractLineTerminator$2() {
    jur_AbstractLineTerminator.call(this);
}
function jur_AbstractLineTerminator$2__init_() {
    var var_0 = new jur_AbstractLineTerminator$2();
    jur_AbstractLineTerminator$2__init_0(var_0);
    return var_0;
}
function jur_AbstractLineTerminator$2__init_0($this) {
    jur_AbstractLineTerminator__init_0($this);
}
function jur_AbstractLineTerminator$2_isLineTerminator($this, $ch) {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
}
function jur_AbstractLineTerminator$2_isAfterLineTerminator($this, $ch, $ch2) {
    var var$3;
    a: {
        b: {
            if ($ch != 10 && $ch != 133 && ($ch | 1) != 8233) {
                if ($ch != 13)
                    break b;
                if ($ch2 == 10)
                    break b;
            }
            var$3 = 1;
            break a;
        }
        var$3 = 0;
    }
    return var$3;
}
function jur_AbstractLineTerminator$1() {
    jur_AbstractLineTerminator.call(this);
}
function jur_AbstractLineTerminator$1__init_() {
    var var_0 = new jur_AbstractLineTerminator$1();
    jur_AbstractLineTerminator$1__init_0(var_0);
    return var_0;
}
function jur_AbstractLineTerminator$1__init_0($this) {
    jur_AbstractLineTerminator__init_0($this);
}
function jur_AbstractLineTerminator$1_isLineTerminator($this, $ch) {
    return $ch != 10 ? 0 : 1;
}
function jur_AbstractLineTerminator$1_isAfterLineTerminator($this, $ch, $ch2) {
    return $ch != 10 ? 0 : 1;
}
function oooip_DxStepperProcessingCallContext$dstepper_fn_t() {
}
function kr_RandomKt() {
    jl_Object.call(this);
}
function kr_RandomKt_takeUpperBits($$this$takeUpperBits, $bitCount) {
    return $$this$takeUpperBits >>> (32 - $bitCount | 0) &  -$bitCount >> 31;
}
function oktsp_SSAO$render$4() {
    kji_Lambda.call(this);
    this.$this$027 = null;
}
function oktsp_SSAO$render$4__init_(var_0) {
    var var_1 = new oktsp_SSAO$render$4();
    oktsp_SSAO$render$4__init_0(var_1, var_0);
    return var_1;
}
function oktsp_SSAO$render$4_invoke(var$0, var$1) {
    oktsp_SSAO$render$4_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktsp_SSAO$render$4_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktsp_SSAO_getColorMap($this.$this$027).$bind4(oktsp_SSAO_getColorMapUnit($this.$this$027));
    oktsp_SSAO_getAuxBufferBlur($this.$this$027).$getTexture(0).$bind4(oktsp_SSAO_getAuxBufferBlurUnit($this.$this$027));
}
function oktsp_SSAO$render$4__init_0(var$0, var$1) {
    var$0.$this$027 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktsp_SSAO$render$3() {
    kji_Lambda.call(this);
    this.$this$028 = null;
}
function oktsp_SSAO$render$3__init_(var_0) {
    var var_1 = new oktsp_SSAO$render$3();
    oktsp_SSAO$render$3__init_0(var_1, var_0);
    return var_1;
}
function oktsp_SSAO$render$3_invoke(var$0, var$1) {
    oktsp_SSAO$render$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktsp_SSAO$render$3_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktsp_SSAO_getAuxBufferSsao($this.$this$028).$getTexture(0).$bind4(oktsp_SSAO_getAuxBufferSsaoUnit($this.$this$028));
}
function oktsp_SSAO$render$3__init_0(var$0, var$1) {
    var$0.$this$028 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktsp_SSAO$render$2() {
    var a = this; kji_Lambda.call(a);
    a.$this$029 = null;
    a.$$camera = null;
}
function oktsp_SSAO$render$2__init_(var_0, var_1) {
    var var_2 = new oktsp_SSAO$render$2();
    oktsp_SSAO$render$2__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktsp_SSAO$render$2_invoke(var$0, var$1) {
    oktsp_SSAO$render$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktsp_SSAO$render$2_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    if (oktgc_ActiveCamera_getProjectionMatrix($this.$$camera).$det() !== 0.0) {
        $this.$this$029.$set13(oktsp_SSAO_access$getUProjectionMatrix$p($this.$this$029), oktgc_ActiveCamera_getProjectionMatrix($this.$$camera));
        oktsp_SSAO_getNormalMap($this.$this$029).$bind4(oktsp_SSAO_getNormalMapUnit($this.$this$029));
        oktsp_SSAO_getNoiseTexture($this.$this$029).$bind4(oktsp_SSAO_getNoiseMapUnit($this.$this$029));
        oktsp_SSAO_getViewSpacePositionMap($this.$this$029).$bind4(oktsp_SSAO_getPositionMapUnit($this.$this$029));
    }
}
function oktsp_SSAO$render$2__init_0(var$0, var$1, var$2) {
    var$0.$this$029 = var$1;
    var$0.$$camera = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFTexture$read$2$2$1() {
    kji_Lambda.call(this);
}
var oktgg_GLTFTexture$read$2$2$1_INSTANCE = null;
function oktgg_GLTFTexture$read$2$2$1_$callClinit() {
    oktgg_GLTFTexture$read$2$2$1_$callClinit = $rt_eraseClinit(oktgg_GLTFTexture$read$2$2$1);
    oktgg_GLTFTexture$read$2$2$1__clinit_();
}
function oktgg_GLTFTexture$read$2$2$1__init_() {
    var var_0 = new oktgg_GLTFTexture$read$2$2$1();
    oktgg_GLTFTexture$read$2$2$1__init_0(var_0);
    return var_0;
}
function oktgg_GLTFTexture$read$2$2$1_invoke(var$0, var$1) {
    oktgg_GLTFTexture$read$2$2$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFTexture$read$2$2$1_invoke0($this, $$this$get) {
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    oktgg_GLTFTexture$read$2$2$1$1_$callClinit();
    $$this$get.$get16($rt_s(382), oktgg_GLTFTexture$read$2$2$1$1_INSTANCE);
    oktgg_GLTFTexture$read$2$2$1$2_$callClinit();
    $$this$get.$get16($rt_s(40), oktgg_GLTFTexture$read$2$2$1$2_INSTANCE);
}
function oktgg_GLTFTexture$read$2$2$1__init_0(var$0) {
    oktgg_GLTFTexture$read$2$2$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFTexture$read$2$2$1__clinit_() {
    oktgg_GLTFTexture$read$2$2$1_INSTANCE = oktgg_GLTFTexture$read$2$2$1__init_();
}
function oktsp_SSAO$render$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$030 = null;
    a.$$camera0 = null;
}
function oktsp_SSAO$render$1__init_(var_0, var_1) {
    var var_2 = new oktsp_SSAO$render$1();
    oktsp_SSAO$render$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktsp_SSAO$render$1_invoke(var$0, var$1) {
    oktsp_SSAO$render$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktsp_SSAO$render$1_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    if (oktgc_ActiveCamera_getProjectionMatrix($this.$$camera0).$det() !== 0.0) {
        $this.$this$030.$set13(oktsp_SSAO_access$getUProjectionMatrix$p($this.$this$030), oktgc_ActiveCamera_getProjectionMatrix($this.$$camera0));
        oktsp_SSAO_getNormalMap($this.$this$030).$bind4(oktsp_SSAO_getNormalMapUnit($this.$this$030));
        oktsp_SSAO_getNoiseTexture($this.$this$030).$bind4(oktsp_SSAO_getNoiseMapUnit($this.$this$030));
        oktsp_SSAO_getViewSpacePositionMap($this.$this$030).$bind4(oktsp_SSAO_getPositionMapUnit($this.$this$030));
    }
}
function oktsp_SSAO$render$1__init_0(var$0, var$1, var$2) {
    var$0.$this$030 = var$1;
    var$0.$$camera0 = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function jur_CharClass() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$ci = 0;
    a.$uci = 0;
    a.$hasUCI = 0;
    a.$invertedSurrogates = 0;
    a.$inverted = 0;
    a.$hideBits = 0;
    a.$bits = null;
    a.$nonBitSet = null;
}
function jur_CharClass__init_() {
    var var_0 = new jur_CharClass();
    jur_CharClass__init_0(var_0);
    return var_0;
}
function jur_CharClass__init_1(var_0, var_1) {
    var var_2 = new jur_CharClass();
    jur_CharClass__init_2(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass__init_3(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass();
    jur_CharClass__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass__init_0($this) {
    jur_AbstractCharClass__init_0($this);
    $this.$bits = ju_BitSet__init_();
}
function jur_CharClass__init_2($this, $ci, $uci) {
    jur_AbstractCharClass__init_0($this);
    $this.$bits = ju_BitSet__init_();
    $this.$ci = $ci;
    $this.$uci = $uci;
}
function jur_CharClass__init_4($this, $negative, $ci, $uci) {
    jur_CharClass__init_2($this, $ci, $uci);
    $this.$setNegative($negative);
}
function jur_CharClass_add($this, $ch) {
    a: {
        if ($this.$ci) {
            b: {
                if (!($ch >= 97 && $ch <= 122)) {
                    if ($ch < 65)
                        break b;
                    if ($ch > 90)
                        break b;
                }
                if ($this.$inverted) {
                    $this.$bits.$clear1(jur_Pattern_getSupplement($ch & 65535));
                    break a;
                }
                $this.$bits.$set10(jur_Pattern_getSupplement($ch & 65535));
                break a;
            }
            if ($this.$uci && $ch > 128) {
                $this.$hasUCI = 1;
                $ch = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
            }
        }
    }
    if (!(!jur_Lexer_isHighSurrogate($ch) && !jur_Lexer_isLowSurrogate($ch))) {
        if ($this.$invertedSurrogates)
            $this.$lowHighSurrogates.$clear1($ch - 55296 | 0);
        else
            $this.$lowHighSurrogates.$set10($ch - 55296 | 0);
    }
    if ($this.$inverted)
        $this.$bits.$clear1($ch);
    else
        $this.$bits.$set10($ch);
    if (!$this.$mayContainSupplCodepoints0 && jl_Character_isSupplementaryCodePoint($ch))
        $this.$mayContainSupplCodepoints0 = 1;
    return $this;
}
function jur_CharClass_add0($this, $cc) {
    var $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints0 && $cc.$mayContainSupplCodepoints0)
        $this.$mayContainSupplCodepoints0 = 1;
    if ($this.$invertedSurrogates) {
        if (!$cc.$altSurrogates)
            $this.$lowHighSurrogates.$andNot($cc.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$and($cc.$getLowHighSurrogates());
    } else if (!$cc.$altSurrogates)
        $this.$lowHighSurrogates.$or($cc.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($cc.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($cc.$getLowHighSurrogates());
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
        $this.$invertedSurrogates = 1;
    }
    if (!$this.$hideBits && $cc.$getBits() !== null) {
        if ($this.$inverted) {
            if (!$cc.$isNegative())
                $this.$bits.$andNot($cc.$getBits());
            else
                $this.$bits.$and($cc.$getBits());
        } else if (!$cc.$isNegative())
            $this.$bits.$or($cc.$getBits());
        else {
            $this.$bits.$xor($cc.$getBits());
            $this.$bits.$and($cc.$getBits());
            $this.$alt0 = $this.$alt0 ? 0 : 1;
            $this.$inverted = 1;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$5__init_($this, $curAlt, $nb, $cc);
            else
                $this.$nonBitSet = jur_CharClass$4__init_($this, $curAlt, $nb, $cc);
        } else {
            if ($curAlt && !$this.$inverted && $this.$bits.$isEmpty())
                $this.$nonBitSet = jur_CharClass$1__init_($this, $cc);
            else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$3__init_($this, $curAlt, $cc);
            else
                $this.$nonBitSet = jur_CharClass$2__init_($this, $curAlt, $cc);
            $this.$hideBits = 1;
        }
    }
    return $this;
}
function jur_CharClass_add1($this, $i, $end) {
    if ($i > $end)
        $rt_throw(jl_IllegalArgumentException__init_0());
    a: {
        if (!$this.$ci && !($end >= 55296 && $i <= 57343)) {
            if ($this.$inverted)
                $this.$bits.$clear2($i, $end + 1 | 0);
            else
                $this.$bits.$set0($i, $end + 1 | 0);
        } else
            while (true) {
                if ($i >= ($end + 1 | 0))
                    break a;
                $this.$add($i);
                $i = $i + 1 | 0;
            }
    }
    return $this;
}
function jur_CharClass_union($this, $clazz) {
    var $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints0 && $clazz.$mayContainSupplCodepoints0)
        $this.$mayContainSupplCodepoints0 = 1;
    if ($clazz.$hasUCI0())
        $this.$hasUCI = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            $this.$lowHighSurrogates.$or($clazz.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
    } else if ($this.$altSurrogates)
        $this.$lowHighSurrogates.$andNot($clazz.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($clazz.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        $this.$altSurrogates = 1;
    }
    if (!$this.$hideBits && $clazz.$getBits() !== null) {
        if (!($this.$alt0 ^ $clazz.$isNegative())) {
            if (!$this.$alt0)
                $this.$bits.$or($clazz.$getBits());
            else
                $this.$bits.$and($clazz.$getBits());
        } else if ($this.$alt0)
            $this.$bits.$andNot($clazz.$getBits());
        else {
            $this.$bits.$xor($clazz.$getBits());
            $this.$bits.$and($clazz.$getBits());
            $this.$alt0 = 1;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$11__init_($this, $curAlt, $nb, $clazz);
            else
                $this.$nonBitSet = jur_CharClass$10__init_($this, $curAlt, $nb, $clazz);
        } else {
            if (!$this.$inverted && $this.$bits.$isEmpty()) {
                if (!$curAlt)
                    $this.$nonBitSet = jur_CharClass$7__init_($this, $clazz);
                else
                    $this.$nonBitSet = jur_CharClass$6__init_($this, $clazz);
            } else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$9__init_($this, $clazz, $curAlt);
            else
                $this.$nonBitSet = jur_CharClass$8__init_($this, $clazz, $curAlt);
            $this.$hideBits = 1;
        }
    }
}
function jur_CharClass_intersection($this, $clazz) {
    var $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints0 && $clazz.$mayContainSupplCodepoints0)
        $this.$mayContainSupplCodepoints0 = 1;
    if ($clazz.$hasUCI0())
        $this.$hasUCI = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$or($clazz.$getLowHighSurrogates());
    } else if (!$this.$altSurrogates)
        $this.$lowHighSurrogates.$andNot($clazz.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($clazz.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        $this.$altSurrogates = 0;
    }
    if (!$this.$hideBits && $clazz.$getBits() !== null) {
        if (!($this.$alt0 ^ $clazz.$isNegative())) {
            if (!$this.$alt0)
                $this.$bits.$and($clazz.$getBits());
            else
                $this.$bits.$or($clazz.$getBits());
        } else if (!$this.$alt0)
            $this.$bits.$andNot($clazz.$getBits());
        else {
            $this.$bits.$xor($clazz.$getBits());
            $this.$bits.$and($clazz.$getBits());
            $this.$alt0 = 0;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$17__init_($this, $curAlt, $nb, $clazz);
            else
                $this.$nonBitSet = jur_CharClass$16__init_($this, $curAlt, $nb, $clazz);
        } else {
            if (!$this.$inverted && $this.$bits.$isEmpty()) {
                if (!$curAlt)
                    $this.$nonBitSet = jur_CharClass$13__init_($this, $clazz);
                else
                    $this.$nonBitSet = jur_CharClass$12__init_($this, $clazz);
            } else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$15__init_($this, $clazz, $curAlt);
            else
                $this.$nonBitSet = jur_CharClass$14__init_($this, $clazz, $curAlt);
            $this.$hideBits = 1;
        }
    }
}
function jur_CharClass_contains($this, $ch) {
    if ($this.$nonBitSet !== null)
        return $this.$alt0 ^ $this.$nonBitSet.$contains0($ch);
    return $this.$alt0 ^ $this.$bits.$get17($ch);
}
function jur_CharClass_getBits($this) {
    if (!$this.$hideBits)
        return $this.$bits;
    return null;
}
function jur_CharClass_getLowHighSurrogates($this) {
    return $this.$lowHighSurrogates;
}
function jur_CharClass_getInstance($this) {
    var $bs, $res;
    if ($this.$nonBitSet !== null)
        return $this;
    $bs = $this.$getBits();
    $res = jur_CharClass$18__init_($this, $bs);
    return $res.$setNegative($this.$isNegative());
}
function jur_CharClass_toString($this) {
    var $temp, $i;
    $temp = jl_StringBuilder__init_();
    $i = $this.$bits.$nextSetBit(0);
    while ($i >= 0) {
        $temp.$append13(jl_Character_toChars($i));
        $temp.$append12(124);
        $i = $this.$bits.$nextSetBit($i + 1 | 0);
    }
    if ($temp.$length() > 0)
        $temp.$deleteCharAt($temp.$length() - 1 | 0);
    return $temp.$toString();
}
function jur_CharClass_hasUCI($this) {
    return $this.$hasUCI;
}
function jn_BufferUnderflowException() {
    jl_RuntimeException.call(this);
}
function jn_BufferUnderflowException__init_() {
    var var_0 = new jn_BufferUnderflowException();
    jn_BufferUnderflowException__init_0(var_0);
    return var_0;
}
function jn_BufferUnderflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function oooip_DxWorldProcessMemoryReserveInfo() {
    var a = this; jl_Object.call(a);
    a.$m_fReserveFactor = 0.0;
    a.$m_uiReserveMinimum = 0;
}
function oooip_DxWorldProcessMemoryReserveInfo__init_(var_0, var_1) {
    var var_2 = new oooip_DxWorldProcessMemoryReserveInfo();
    oooip_DxWorldProcessMemoryReserveInfo__init_0(var_2, var_0, var_1);
    return var_2;
}
function oooip_DxWorldProcessMemoryReserveInfo__init_0($this, $fReserveFactor, $uiReserveMinimum) {
    jl_Object__init_0($this);
    $this.$m_fReserveFactor = $fReserveFactor;
    $this.$m_uiReserveMinimum = $uiReserveMinimum;
}
function oktm_IVec3$Companion$Pool$1() {
    kji_Lambda.call(this);
    this.$this$031 = null;
}
function oktm_IVec3$Companion$Pool$1__init_(var_0) {
    var var_1 = new oktm_IVec3$Companion$Pool$1();
    oktm_IVec3$Companion$Pool$1__init_0(var_1, var_0);
    return var_1;
}
function oktm_IVec3$Companion$Pool$1_invoke(var$0) {
    return oktm_IVec3$Companion$Pool$1_invoke0(var$0);
}
function oktm_IVec3$Companion$Pool$1_invoke0($this) {
    return oktm_IVec3$Companion_getBuild($this.$this$031).$invoke6();
}
function oktm_IVec3$Companion$Pool$1__init_0(var$0, var$1) {
    var$0.$this$031 = var$1;
    kji_Lambda__init_0(var$0, 0);
}
function ki_PlatformImplementationsKt() {
    jl_Object.call(this);
}
var ki_PlatformImplementationsKt_IMPLEMENTATIONS = null;
function ki_PlatformImplementationsKt_$callClinit() {
    ki_PlatformImplementationsKt_$callClinit = $rt_eraseClinit(ki_PlatformImplementationsKt);
    ki_PlatformImplementationsKt__clinit_();
}
function ki_PlatformImplementationsKt_getJavaVersion() {
    var $default, $version, var$3, $firstDot, var$5, var$6, $secondDot, $firstPart, $secondPart, $$je;
    ki_PlatformImplementationsKt_$callClinit();
    $default = 65542;
    $version = jl_System_getProperty($rt_s(383));
    if ($version === null)
        return $default;
    var$3 = $version;
    $firstDot = kt_StringsKt__StringsKt_indexOf$default(var$3, 46, 0, 0, 6, null);
    if ($firstDot < 0) {
        a: {
            try {
                var$5 = jl_Integer_parseInt0($version) * 65536 | 0;
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            var$5 = $default;
        }
        return var$5;
    }
    var$6 = $firstDot + 1 | 0;
    $secondDot = kt_StringsKt__StringsKt_indexOf$default(var$3, 46, var$6, 0, 4, null);
    if ($secondDot < 0)
        $secondDot = $version.$length();
    if ($version === null)
        $rt_throw(k_TypeCastException__init_($rt_s(384)));
    $firstPart = $version.$substring(0, $firstDot);
    kji_Intrinsics_checkExpressionValueIsNotNull($firstPart, $rt_s(385));
    if ($version === null)
        $rt_throw(k_TypeCastException__init_($rt_s(384)));
    $secondPart = $version.$substring(var$6, $secondDot);
    kji_Intrinsics_checkExpressionValueIsNotNull($secondPart, $rt_s(385));
    b: {
        try {
            var$5 = (jl_Integer_parseInt0($firstPart) * 65536 | 0) + jl_Integer_parseInt0($secondPart) | 0;
            break b;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NumberFormatException) {
            } else {
                throw $$e;
            }
        }
        var$5 = $default;
    }
    return var$5;
}
function ki_PlatformImplementationsKt__clinit_() {
    var $version, var$2, var$3, var$4, $$je;
    a: {
        $version = ki_PlatformImplementationsKt_getJavaVersion();
        if ($version >= 65544)
            try {
                var$2 = jl_Class_forName($rt_s(386)).$newInstance();
                kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(387));
                try {
                    if (var$2 !== null) {
                        var$3 = var$2;
                        break a;
                    }
                    $rt_throw(k_TypeCastException__init_($rt_s(388)));
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_ClassCastException) {
                        var$3 = $$je;
                    } else {
                        throw $$e;
                    }
                }
                var$2 = jl_Object_getClass(var$2).$getClassLoader();
                var$4 = $rt_cls(ki_PlatformImplementations).$getClassLoader();
                var$3 = jl_ClassCastException__init_1(jl_StringBuilder__init_().$append($rt_s(389)).$append14(var$2).$append($rt_s(390)).$append14(var$4).$toString()).$initCause(var$3);
                kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(391));
                $rt_throw(var$3);
                var$2 = jl_Class_forName($rt_s(392)).$newInstance();
                kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(387));
                try {
                    if (var$2 !== null) {
                        var$3 = var$2;
                        break a;
                    }
                    $rt_throw(k_TypeCastException__init_($rt_s(388)));
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_ClassCastException) {
                        var$3 = $$je;
                    } else {
                        throw $$e;
                    }
                }
                var$2 = jl_Object_getClass(var$2).$getClassLoader();
                var$4 = $rt_cls(ki_PlatformImplementations).$getClassLoader();
                var$3 = jl_ClassCastException__init_1(jl_StringBuilder__init_().$append($rt_s(389)).$append14(var$2).$append($rt_s(390)).$append14(var$4).$toString()).$initCause(var$3);
                kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(391));
                $rt_throw(var$3);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_ClassNotFoundException) {
                } else {
                    throw $$e;
                }
            }
        if ($version >= 65543)
            try {
                var$2 = jl_Class_forName($rt_s(393)).$newInstance();
                kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(387));
                try {
                    if (var$2 !== null) {
                        var$3 = var$2;
                        break a;
                    }
                    $rt_throw(k_TypeCastException__init_($rt_s(388)));
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_ClassCastException) {
                        var$3 = $$je;
                    } else {
                        throw $$e;
                    }
                }
                var$2 = jl_Object_getClass(var$2).$getClassLoader();
                var$4 = $rt_cls(ki_PlatformImplementations).$getClassLoader();
                var$3 = jl_ClassCastException__init_1(jl_StringBuilder__init_().$append($rt_s(389)).$append14(var$2).$append($rt_s(390)).$append14(var$4).$toString()).$initCause(var$3);
                kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(391));
                $rt_throw(var$3);
                var$2 = jl_Class_forName($rt_s(394)).$newInstance();
                kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(387));
                try {
                    if (var$2 !== null) {
                        var$3 = var$2;
                        break a;
                    }
                    $rt_throw(k_TypeCastException__init_($rt_s(388)));
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_ClassCastException) {
                        var$3 = $$je;
                    } else {
                        throw $$e;
                    }
                }
                var$2 = jl_Object_getClass(var$2).$getClassLoader();
                var$4 = $rt_cls(ki_PlatformImplementations).$getClassLoader();
                var$3 = jl_ClassCastException__init_1(jl_StringBuilder__init_().$append($rt_s(389)).$append14(var$2).$append($rt_s(390)).$append14(var$4).$toString()).$initCause(var$3);
                kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(391));
                $rt_throw(var$3);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_ClassNotFoundException) {
                } else {
                    throw $$e;
                }
            }
        var$3 = ki_PlatformImplementations__init_();
    }
    ki_PlatformImplementationsKt_IMPLEMENTATIONS = var$3;
}
function oktgg_GLTFSparse$Values$read$1() {
    kji_Lambda.call(this);
    this.$this$032 = null;
}
function oktgg_GLTFSparse$Values$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFSparse$Values$read$1();
    oktgg_GLTFSparse$Values$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFSparse$Values$read$1_invoke(var$0, var$1) {
    oktgg_GLTFSparse$Values$read$1_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFSparse$Values$read$1_invoke0($this, $it) {
    oktgg_GLTFSparse$Values_setByteOffset($this.$this$032, $it);
}
function oktgg_GLTFSparse$Values$read$1__init_0(var$0, var$1) {
    var$0.$this$032 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oooi_DxQuickStep$dxQuickStepperStage1CallContext() {
    var a = this; jl_Object.call(a);
    a.$m_stepperCallContext0 = null;
    a.$m_stageMemArenaState = null;
    a.$m_invI = null;
    a.$m_jointinfos = null;
    a.$m_stage0Outputs = null;
}
function oooi_DxQuickStep$dxQuickStepperStage1CallContext__init_() {
    var var_0 = new oooi_DxQuickStep$dxQuickStepperStage1CallContext();
    oooi_DxQuickStep$dxQuickStepperStage1CallContext__init_0(var_0);
    return var_0;
}
function oooi_DxQuickStep$dxQuickStepperStage1CallContext__init_1(var_0) {
    var var_1 = new oooi_DxQuickStep$dxQuickStepperStage1CallContext();
    oooi_DxQuickStep$dxQuickStepperStage1CallContext__init_2(var_1, var_0);
    return var_1;
}
function oooi_DxQuickStep$dxQuickStepperStage1CallContext__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_stage0Outputs = oooi_DxQuickStep$dxQuickStepperStage0Outputs__init_(null);
}
function oooi_DxQuickStep$dxQuickStepperStage1CallContext_Initialize($this, $stepperCallContext, $stageMemArenaState, $invI, $jointinfos) {
    $this.$m_stepperCallContext0 = $stepperCallContext;
    $this.$m_stageMemArenaState = $stageMemArenaState;
    $this.$m_invI = $invI;
    $this.$m_jointinfos = $jointinfos;
}
function oooi_DxQuickStep$dxQuickStepperStage1CallContext__init_2($this, $x0) {
    oooi_DxQuickStep$dxQuickStepperStage1CallContext__init_0($this);
}
function kr_ClosedRange() {
}
function jl_CloneNotSupportedException() {
    jl_Exception.call(this);
}
function jl_CloneNotSupportedException__init_() {
    var var_0 = new jl_CloneNotSupportedException();
    jl_CloneNotSupportedException__init_0(var_0);
    return var_0;
}
function jl_CloneNotSupportedException__init_0($this) {
    jl_Exception__init_0($this);
}
function cgcj_Yytoken() {
    var a = this; jl_Object.call(a);
    a.$type2 = null;
    a.$value2 = null;
}
function cgcj_Yytoken__init_0(var_0, var_1) {
    var var_2 = new cgcj_Yytoken();
    cgcj_Yytoken__init_(var_2, var_0, var_1);
    return var_2;
}
function cgcj_Yytoken__init_($this, $type, $value) {
    a: {
        jl_Object__init_0($this);
        cgcj_Yytoken$1_$callClinit();
        switch (cgcj_Yytoken$1_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal($type)]) {
            case 1:
                $this.$value2 = $rt_s(395);
                break a;
            case 2:
                $this.$value2 = $rt_s(396);
                break a;
            case 3:
                $this.$value2 = $rt_s(6);
                break a;
            case 4:
                $this.$value2 = $rt_s(397);
                break a;
            case 5:
                $this.$value2 = $rt_s(398);
                break a;
            case 6:
                $this.$value2 = $rt_s(399);
                break a;
            case 7:
                $this.$value2 = $rt_s(400);
                break a;
            default:
        }
        $this.$value2 = $value;
    }
    $this.$type2 = $type;
}
function cgcj_Yytoken_getType($this) {
    return $this.$type2;
}
function cgcj_Yytoken_getValue($this) {
    return $this.$value2;
}
function oktt_TvmFile$readBytes$1() {
    var a = this; jl_Object.call(a);
    a.$$xhr = null;
    a.$$response = null;
}
function oktt_TvmFile$readBytes$1__init_(var_0, var_1) {
    var var_2 = new oktt_TvmFile$readBytes$1();
    oktt_TvmFile$readBytes$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktt_TvmFile$readBytes$1_run($this) {
    var var$1, var$2, $array, var$4, var$5, var$6, var$7;
    var$1 = $this.$$xhr;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(401));
    if (var$1.response !== null) {
        var$2 = $this.$$xhr;
        kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(401));
        var$2 = var$2.response;
        if (var$2 === null)
            $rt_throw(k_TypeCastException__init_($rt_s(402)));
        $array = new Uint8Array(var$2);
        kji_Intrinsics_checkExpressionValueIsNotNull($array, $rt_s(32));
        var$4 = $array.byteLength;
        var$5 = $rt_createByteArray(var$4);
        var$6 = 0;
        while (var$6 < var$4) {
            var$5.data[var$6] = $array[var$6] << 24 >> 24;
            var$6 = var$6 + 1 | 0;
        }
        var$2 = $this.$$response;
        var$7 = $this.$$xhr;
        kji_Intrinsics_checkExpressionValueIsNotNull(var$7, $rt_s(401));
        var$2.$invoke11(jl_Integer_valueOf(var$7.status), var$5);
    }
}
function oktt_TvmFile$readBytes$1__init_0(var$0, var$1, var$2) {
    var$0.$$xhr = var$1;
    var$0.$$response = var$2;
    jl_Object__init_0(var$0);
}
function oktd_IData() {
}
function oktd_DATA() {
    jl_Object.call(this);
}
var oktd_DATA_api = null;
var oktd_DATA_INSTANCE = null;
function oktd_DATA_$callClinit() {
    oktd_DATA_$callClinit = $rt_eraseClinit(oktd_DATA);
    oktd_DATA__clinit_();
}
function oktd_DATA__init_() {
    var var_0 = new oktd_DATA();
    oktd_DATA__init_0(var_0);
    return var_0;
}
function oktd_DATA_setApi($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    oktd_DATA_api = $_set___;
}
function oktd_DATA_getNullBuffer($this) {
    var var$1;
    var$1 = oktd_DATA_api;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$1.$getNullBuffer();
}
function oktd_DATA_decodeURI($this, $uri) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($uri, $rt_s(18));
    var$2 = oktd_DATA_api;
    if (var$2 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$2.$decodeURI($uri);
}
function oktd_DATA_decodeBase64($this, $text, $out) {
    var var$3;
    kji_Intrinsics_checkParameterIsNotNull($text, $rt_s(295));
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    var$3 = oktd_DATA_api;
    if (var$3 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$3.$decodeBase64($text, $out);
}
function oktd_DATA_bytes($this, $capacity) {
    var var$2;
    var$2 = oktd_DATA_api;
    if (var$2 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$2.$bytes0($capacity);
}
function oktd_DATA__init_0($this) {
    oktd_DATA_$callClinit();
    jl_Object__init_0($this);
}
function oktd_DATA__clinit_() {
    oktd_DATA_INSTANCE = oktd_DATA__init_();
}
function ju_List() {
}
function kjim_KMutableList() {
}
function oktu_IAsyncList() {
}
function oktgg_IGLTFArray() {
}
function oooil_CCDQuat() {
    jl_Object.call(this);
}
function oooil_CCDQuat__init_() {
    var var_0 = new oooil_CCDQuat();
    oooil_CCDQuat__init_0(var_0);
    return var_0;
}
function oooil_CCDQuat__init_0($this) {
    jl_Object__init_0($this);
}
function oooil_CCDQuat_ccdQuatLen2($q) {
    var $len, var$3;
    $len = $q.$q0 * $q.$q0;
    var$3 = $len + $q.$q1 * $q.$q1;
    var$3 = var$3 + $q.$q2 * $q.$q2;
    var$3 = var$3 + $q.$q3 * $q.$q3;
    return var$3;
}
function oooil_CCDQuat_ccdQuatLen($q) {
    return oooil_CCDVec3_CCD_SQRT(oooil_CCDQuat_ccdQuatLen2($q));
}
function oooil_CCDQuat_ccdQuatSet($q, $x, $y, $z, $w) {
    $q.$q0 = $x;
    $q.$q1 = $y;
    $q.$q2 = $z;
    $q.$q3 = $w;
}
function oooil_CCDQuat_ccdQuatCopy($dest, $src) {
    $dest.$q0 = $src.$q0;
    $dest.$q1 = $src.$q1;
    $dest.$q2 = $src.$q2;
    $dest.$q3 = $src.$q3;
}
function oooil_CCDQuat_ccdQuatNormalize($q) {
    var $len;
    $len = oooil_CCDQuat_ccdQuatLen($q);
    if ($len < 2.220446049250313E-16)
        return 0;
    oooil_CCDQuat_ccdQuatScale($q, 1.0 / $len);
    return 1;
}
function oooil_CCDQuat_ccdQuatSetAngleAxis($q, $angle, $axis) {
    var $a, $x, $y, $z, $n, $s;
    $a = $angle / 2.0;
    $x = oooil_CCDVec3_ccdVec3X($axis);
    $y = oooil_CCDVec3_ccdVec3Y($axis);
    $z = oooil_CCDVec3_ccdVec3Z($axis);
    $n = oooil_CCDVec3_CCD_SQRT($x * $x + $y * $y + $z * $z);
    if ($n < 2.220446049250313E-16) {
        $q.$q2 = 0.0;
        $q.$q1 = 0.0;
        $q.$q0 = 0.0;
        $q.$q3 = 1.0;
    } else {
        $s = jl_Math_sin($a) / $n;
        $q.$q3 = jl_Math_cos($a);
        $q.$q0 = $x * $s;
        $q.$q1 = $y * $s;
        $q.$q2 = $z * $s;
        oooil_CCDQuat_ccdQuatNormalize($q);
    }
}
function oooil_CCDQuat_ccdQuatScale($q, $k) {
    $q.$q0 = $q.$q0 * $k;
    $q.$q1 = $q.$q1 * $k;
    $q.$q2 = $q.$q2 * $k;
    $q.$q3 = $q.$q3 * $k;
}
function oooil_CCDQuat_ccdQuatInvert($q) {
    var $len2, var$3;
    $len2 = oooil_CCDQuat_ccdQuatLen2($q);
    if ($len2 < 2.220446049250313E-16)
        return (-1);
    var$3 = 1.0 / $len2;
    $q.$q0 =  -$q.$q0 * var$3;
    $q.$q1 =  -$q.$q1 * var$3;
    $q.$q2 =  -$q.$q2 * var$3;
    $q.$q3 = $q.$q3 * var$3;
    return 0;
}
function oooil_CCDQuat_ccdQuatInvert2($dest, $src) {
    oooil_CCDQuat_ccdQuatCopy($dest, $src);
    return oooil_CCDQuat_ccdQuatInvert($dest);
}
function oooil_CCDQuat_ccdQuatRotVec($v, $q) {
    var $x, $y, $z, $w, $vx, $vy, $vz, $cross1_x, $cross1_y, $cross1_z, $cross2_x, $cross2_y, $cross2_z;
    $x = $q.$q0;
    $y = $q.$q1;
    $z = $q.$q2;
    $w = $q.$q3;
    $vx = oooil_CCDVec3_ccdVec3X($v);
    $vy = oooil_CCDVec3_ccdVec3Y($v);
    $vz = oooil_CCDVec3_ccdVec3Z($v);
    $cross1_x = $y * $vz - $z * $vy + $w * $vx;
    $cross1_y = $z * $vx - $x * $vz + $w * $vy;
    $cross1_z = $x * $vy - $y * $vx + $w * $vz;
    $cross2_x = $y * $cross1_z - $z * $cross1_y;
    $cross2_y = $z * $cross1_x - $x * $cross1_z;
    $cross2_z = $x * $cross1_y - $y * $cross1_x;
    oooil_CCDVec3_ccdVec3Set0($v, $vx + 2.0 * $cross2_x, $vy + 2.0 * $cross2_y, $vz + 2.0 * $cross2_z);
}
function ooott_AbstractTaskExecutor() {
    jl_Object.call(this);
}
function ooott_AbstractTaskExecutor__init_() {
    var var_0 = new ooott_AbstractTaskExecutor();
    ooott_AbstractTaskExecutor__init_0(var_0);
    return var_0;
}
function ooott_AbstractTaskExecutor__init_0($this) {
    jl_Object__init_0($this);
}
function ooott_AbstractTaskExecutor_group($this, $string, $runnable) {
    return ooott_TaskGroup__init_($this, $string, $runnable);
}
function ju_AbstractCollection() {
    jl_Object.call(this);
}
function ju_AbstractCollection__init_() {
    var var_0 = new ju_AbstractCollection();
    ju_AbstractCollection__init_0(var_0);
    return var_0;
}
function ju_AbstractCollection__init_0($this) {
    jl_Object__init_0($this);
}
function ju_AbstractCollection_isEmpty($this) {
    return $this.$size() ? 0 : 1;
}
function ju_AbstractCollection_toArray($this) {
    var $arr, $i, $iter, var$4, var$5;
    $arr = $rt_createArray(jl_Object, $this.$size());
    $i = 0;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        var$4 = $arr.data;
        var$5 = $i + 1 | 0;
        var$4[$i] = $iter.$next();
        $i = var$5;
    }
    return $arr;
}
function ju_AbstractCollection_toArray0($this, $a) {
    var var$2, $i, var$4, $iter;
    var$2 = $a.data;
    $i = $this.$size();
    var$4 = var$2.length;
    if (var$4 < $i)
        $a = jlr_Array_newInstance(jl_Object_getClass($a).$getComponentType(), $i);
    else
        while ($i < var$4) {
            var$2[$i] = null;
            $i = $i + 1 | 0;
        }
    $i = 0;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        var$2 = $a.data;
        var$4 = $i + 1 | 0;
        var$2[$i] = $iter.$next();
        $i = var$4;
    }
    return $a;
}
function ju_AbstractCollection_addAll($this, $c) {
    var $changed, $iter;
    $changed = 0;
    $iter = $c.$iterator();
    while ($iter.$hasNext()) {
        if (!$this.$add1($iter.$next()))
            continue;
        $changed = 1;
    }
    return $changed;
}
function ju_Set() {
}
function ju_AbstractSet() {
    ju_AbstractCollection.call(this);
}
function ju_AbstractSet__init_() {
    var var_0 = new ju_AbstractSet();
    ju_AbstractSet__init_0(var_0);
    return var_0;
}
function ju_AbstractSet__init_0($this) {
    ju_AbstractCollection__init_0($this);
}
function ju_AbstractSet_removeAll($this, $c) {
    var $modified, $iter, $elem;
    $modified = 0;
    if ($this.$size() >= $c.$size()) {
        $iter = $c.$iterator();
        while ($iter.$hasNext()) {
            if (!$this.$remove1($iter.$next()))
                continue;
            $modified = 1;
        }
    } else {
        $iter = $this.$iterator();
        while ($iter.$hasNext()) {
            $elem = $iter.$next();
            if ($c.$contains1($elem)) {
                $modified = 1;
                $iter.$remove2();
            }
        }
    }
    return $modified;
}
function ju_AbstractSet_equals($this, $obj) {
    var $other, $iter;
    if ($this === $obj)
        return 1;
    if (!$rt_isInstance($obj, ju_Set))
        return 0;
    $other = $obj;
    if ($this.$size() != $other.$size())
        return 0;
    $iter = $other.$iterator();
    while ($iter.$hasNext()) {
        if ($this.$contains1($iter.$next()))
            continue;
        else
            return 0;
    }
    return 1;
}
function ju_AbstractSet_hashCode($this) {
    return ju_Arrays_hashCode($this.$toArray());
}
function ju_EnumSet() {
    ju_AbstractSet.call(this);
}
function ju_EnumSet__init_() {
    var var_0 = new ju_EnumSet();
    ju_EnumSet__init_0(var_0);
    return var_0;
}
function ju_EnumSet__init_0($this) {
    ju_AbstractSet__init_0($this);
}
function ju_EnumSet_noneOf($elementType) {
    return ju_GenericEnumSet__init_($elementType);
}
function ju_EnumSet_of($e) {
    var $result;
    $result = ju_EnumSet_noneOf(jl_Enum_getDeclaringClass($e));
    $result.$fastAdd($e);
    return $result;
}
function oktga_IAnim() {
}
function oktga_Anim() {
    var a = this; jl_Object.call(a);
    a.$translationTracks = null;
    a.$rotationTracks = null;
    a.$scaleTracks = null;
    a.$actionTrack = null;
    a.$extra = null;
    a.$duration = 0.0;
    a.$name13 = null;
}
function oktga_Anim__init_() {
    var var_0 = new oktga_Anim();
    oktga_Anim__init_0(var_0);
    return var_0;
}
function oktga_Anim_getTranslationTracks($this) {
    return $this.$translationTracks;
}
function oktga_Anim_getRotationTracks($this) {
    return $this.$rotationTracks;
}
function oktga_Anim_getScaleTracks($this) {
    return $this.$scaleTracks;
}
function oktga_Anim_getActionTrack($this) {
    return $this.$actionTrack;
}
function oktga_Anim_getExtra($this) {
    return $this.$extra;
}
function oktga_Anim_getDuration($this) {
    return $this.$duration;
}
function oktga_Anim_setDuration($this, $_set___) {
    $this.$duration = $_set___;
}
function oktga_Anim_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name13 = $_set___;
}
function oktga_Anim__init_0($this) {
    jl_Object__init_0($this);
    $this.$translationTracks = ju_ArrayList__init_();
    $this.$rotationTracks = ju_ArrayList__init_();
    $this.$scaleTracks = ju_ArrayList__init_();
    $this.$actionTrack = oktga_ActionTrack__init_();
    $this.$extra = ju_HashMap__init_();
    $this.$name13 = $rt_s(6);
}
function oktga_Anim_calculateDuration($this) {
    oktga_IAnim$DefaultImpls_calculateDuration($this);
}
function oktgg_GLTFScene$read$3$1$1() {
    kji_Lambda.call(this);
    this.$this$033 = null;
}
function oktgg_GLTFScene$read$3$1$1__init_(var_0) {
    var var_1 = new oktgg_GLTFScene$read$3$1$1();
    oktgg_GLTFScene$read$3$1$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFScene$read$3$1$1_invoke(var$0, var$1) {
    oktgg_GLTFScene$read$3$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFScene$read$3$1$1_invoke0($this, $gltfNode) {
    kji_Intrinsics_checkParameterIsNotNull($gltfNode, $rt_s(403));
    $this.$this$033.$$sceneNodes.$add1(oktgg_GLTFNode_getNode($gltfNode));
    oktgg_GLTFScene_getScene($this.$this$033.$this$034.$this$035).$getNode().$addChildNode(oktgg_GLTFNode_getNode($gltfNode));
}
function oktgg_GLTFScene$read$3$1$1__init_0(var$0, var$1) {
    var$0.$this$033 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktf_IFS$DefaultImpls() {
    jl_Object.call(this);
}
function oktf_IFS$DefaultImpls_internal($$this, $path) {
    kji_Intrinsics_checkParameterIsNotNull($path, $rt_s(404));
    return $$this.$file($path, 1);
}
function otjde_LoadEventTarget() {
}
function oooi_DxGeom$dColliderEntry() {
    var a = this; jl_Object.call(a);
    a.$fn = null;
    a.$reverse = 0;
}
function oooi_DxGeom$dColliderEntry__init_0() {
    var var_0 = new oooi_DxGeom$dColliderEntry();
    oooi_DxGeom$dColliderEntry__init_1(var_0);
    return var_0;
}
function oooi_DxGeom$dColliderEntry__init_(var_0) {
    var var_1 = new oooi_DxGeom$dColliderEntry();
    oooi_DxGeom$dColliderEntry__init_2(var_1, var_0);
    return var_1;
}
function oooi_DxGeom$dColliderEntry__init_1($this) {
    jl_Object__init_0($this);
}
function oooi_DxGeom$dColliderEntry__init_2($this, $x0) {
    oooi_DxGeom$dColliderEntry__init_1($this);
}
function kt_StringsKt__StringNumberConversionsKt() {
    kt_StringsKt__StringNumberConversionsJVMKt.call(this);
}
function kt_StringsKt__StringNumberConversionsKt__init_() {
    var var_0 = new kt_StringsKt__StringNumberConversionsKt();
    kt_StringsKt__StringNumberConversionsKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt__StringNumberConversionsKt__init_0(var$0) {
    kt_StringsKt__StringNumberConversionsJVMKt__init_0(var$0);
}
function kt_StringsKt__StringsJVMKt() {
    kt_StringsKt__StringNumberConversionsKt.call(this);
}
function kt_StringsKt__StringsJVMKt__init_() {
    var var_0 = new kt_StringsKt__StringsJVMKt();
    kt_StringsKt__StringsJVMKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt__StringsJVMKt_replace($$this$replace, $oldValue, $newValue, $ignoreCase) {
    var var$5, var$6;
    kji_Intrinsics_checkParameterIsNotNull($$this$replace, $rt_s(405));
    kji_Intrinsics_checkParameterIsNotNull($oldValue, $rt_s(406));
    kji_Intrinsics_checkParameterIsNotNull($newValue, $rt_s(407));
    var$5 = $$this$replace;
    var$6 = $rt_createArray(jl_String, 1);
    var$6.data[0] = $oldValue;
    return ks_SequencesKt___SequencesKt_joinToString$default(kt_StringsKt__StringsKt_splitToSequence$default(var$5, var$6, $ignoreCase, 0, 4, null), $newValue, null, null, 0, null, null, 62, null);
}
function kt_StringsKt__StringsJVMKt_replace$default(var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$5 & 4)
        var$4 = 0;
    return kt_StringsKt__StringsJVMKt_replace(var$1, var$2, var$3, var$4);
}
function kt_StringsKt__StringsJVMKt_startsWith($$this$startsWith, $prefix, $ignoreCase) {
    kji_Intrinsics_checkParameterIsNotNull($$this$startsWith, $rt_s(408));
    kji_Intrinsics_checkParameterIsNotNull($prefix, $rt_s(409));
    if (!$ignoreCase)
        return $$this$startsWith.$startsWith0($prefix);
    return kt_StringsKt__StringsJVMKt_regionMatches($$this$startsWith, 0, $prefix, 0, $prefix.$length(), $ignoreCase);
}
function kt_StringsKt__StringsJVMKt_startsWith$default(var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 2)
        var$3 = 0;
    return kt_StringsKt__StringsJVMKt_startsWith(var$1, var$2, var$3);
}
function kt_StringsKt__StringsJVMKt_endsWith($$this$endsWith, $suffix, $ignoreCase) {
    kji_Intrinsics_checkParameterIsNotNull($$this$endsWith, $rt_s(410));
    kji_Intrinsics_checkParameterIsNotNull($suffix, $rt_s(411));
    if (!$ignoreCase)
        return $$this$endsWith.$endsWith($suffix);
    return kt_StringsKt__StringsJVMKt_regionMatches($$this$endsWith, $$this$endsWith.$length() - $suffix.$length() | 0, $suffix, 0, $suffix.$length(), 1);
}
function kt_StringsKt__StringsJVMKt_endsWith$default(var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 2)
        var$3 = 0;
    return kt_StringsKt__StringsJVMKt_endsWith(var$1, var$2, var$3);
}
function kt_StringsKt__StringsJVMKt_regionMatches($$this$regionMatches, $thisOffset, $other, $otherOffset, $length, $ignoreCase) {
    kji_Intrinsics_checkParameterIsNotNull($$this$regionMatches, $rt_s(412));
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return $ignoreCase ? $$this$regionMatches.$regionMatches0($ignoreCase, $thisOffset, $other, $otherOffset, $length) : $$this$regionMatches.$regionMatches1($thisOffset, $other, $otherOffset, $length);
}
function kt_StringsKt__StringsJVMKt__init_0(var$0) {
    kt_StringsKt__StringNumberConversionsKt__init_0(var$0);
}
function kt_StringsKt__StringsKt() {
    kt_StringsKt__StringsJVMKt.call(this);
}
function kt_StringsKt__StringsKt__init_() {
    var var_0 = new kt_StringsKt__StringsKt();
    kt_StringsKt__StringsKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt__StringsKt_padEnd($$this$padEnd, $length, $padChar) {
    var $sb, $i, var$6;
    kji_Intrinsics_checkParameterIsNotNull($$this$padEnd, $rt_s(414));
    if ($length < 0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(415)).$append1($length).$append($rt_s(416)).$toString()));
    if ($length <= $$this$padEnd.$length())
        return $$this$padEnd.$subSequence(0, $$this$padEnd.$length());
    a: {
        $sb = jl_StringBuilder__init_0($length);
        $sb.$append15($$this$padEnd);
        $i = 1;
        var$6 = $length - $$this$padEnd.$length() | 0;
        if ($i <= var$6)
            while (true) {
                $sb.$append12($padChar);
                if ($i == var$6)
                    break a;
                $i = $i + 1 | 0;
            }
    }
    return $sb;
}
function kt_StringsKt__StringsKt_padEnd0($$this$padEnd, $length, $padChar) {
    kji_Intrinsics_checkParameterIsNotNull($$this$padEnd, $rt_s(414));
    return kt_StringsKt__StringsKt_padEnd($$this$padEnd, $length, $padChar).$toString();
}
function kt_StringsKt__StringsKt_getLastIndex($$this$lastIndex) {
    kji_Intrinsics_checkParameterIsNotNull($$this$lastIndex, $rt_s(61));
    return $$this$lastIndex.$length() - 1 | 0;
}
function kt_StringsKt__StringsKt_substring($$this$substring, $range) {
    kji_Intrinsics_checkParameterIsNotNull($$this$substring, $rt_s(417));
    kji_Intrinsics_checkParameterIsNotNull($range, $rt_s(418));
    return $$this$substring.$subSequence(kr_IntRange_getStart($range).$intValue(), kr_IntRange_getEndInclusive($range).$intValue() + 1 | 0).$toString();
}
function kt_StringsKt__StringsKt_substringAfterLast($$this$substringAfterLast, $delimiter, $missingDelimiterValue) {
    var $index;
    kji_Intrinsics_checkParameterIsNotNull($$this$substringAfterLast, $rt_s(419));
    kji_Intrinsics_checkParameterIsNotNull($missingDelimiterValue, $rt_s(420));
    $index = kt_StringsKt__StringsKt_lastIndexOf$default($$this$substringAfterLast, $delimiter, 0, 0, 6, null);
    if ($index != (-1)) {
        $missingDelimiterValue = $$this$substringAfterLast.$substring($index + 1 | 0, $$this$substringAfterLast.$length());
        kji_Intrinsics_checkExpressionValueIsNotNull($missingDelimiterValue, $rt_s(385));
    }
    return $missingDelimiterValue;
}
function kt_StringsKt__StringsKt_substringAfterLast$default(var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 2)
        var$3 = var$1;
    return kt_StringsKt__StringsKt_substringAfterLast(var$1, var$2, var$3);
}
function kt_StringsKt__StringsKt_removeSuffix($$this$removeSuffix, $suffix) {
    var var$3;
    kji_Intrinsics_checkParameterIsNotNull($$this$removeSuffix, $rt_s(421));
    kji_Intrinsics_checkParameterIsNotNull($suffix, $rt_s(411));
    if (!kt_StringsKt__StringsKt_endsWith$default($$this$removeSuffix, $suffix, 0, 2, null))
        return $$this$removeSuffix;
    var$3 = $$this$removeSuffix.$substring(0, $$this$removeSuffix.$length() - $suffix.$length() | 0);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(385));
    return var$3;
}
function kt_StringsKt__StringsKt_regionMatchesImpl($$this$regionMatchesImpl, $thisOffset, $other, $otherOffset, $length, $ignoreCase) {
    var $index;
    kji_Intrinsics_checkParameterIsNotNull($$this$regionMatchesImpl, $rt_s(422));
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    if ($otherOffset >= 0 && $thisOffset >= 0 && $thisOffset <= ($$this$regionMatchesImpl.$length() - $length | 0) && $otherOffset <= ($other.$length() - $length | 0)) {
        $index = 0;
        while ($index < $length) {
            if (!kt_CharsKt__CharKt_equals($$this$regionMatchesImpl.$charAt($thisOffset + $index | 0), $other.$charAt($otherOffset + $index | 0), $ignoreCase))
                return 0;
            $index = $index + 1 | 0;
        }
        return 1;
    }
    return 0;
}
function kt_StringsKt__StringsKt_endsWith($$this$endsWith, $char, $ignoreCase) {
    kji_Intrinsics_checkParameterIsNotNull($$this$endsWith, $rt_s(410));
    return $$this$endsWith.$length() > 0 && kt_CharsKt__CharKt_equals($$this$endsWith.$charAt(kt_StringsKt__StringsKt_getLastIndex($$this$endsWith)), $char, $ignoreCase) ? 1 : 0;
}
function kt_StringsKt__StringsKt_endsWith$default0(var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 2)
        var$3 = 0;
    return kt_StringsKt__StringsKt_endsWith(var$1, var$2, var$3);
}
function kt_StringsKt__StringsKt_endsWith0($$this$endsWith, $suffix, $ignoreCase) {
    kji_Intrinsics_checkParameterIsNotNull($$this$endsWith, $rt_s(410));
    kji_Intrinsics_checkParameterIsNotNull($suffix, $rt_s(411));
    if (!$ignoreCase && $$this$endsWith instanceof jl_String && $suffix instanceof jl_String)
        return kt_StringsKt__StringsJVMKt_endsWith$default($$this$endsWith, $suffix, 0, 2, null);
    return kt_StringsKt__StringsKt_regionMatchesImpl($$this$endsWith, $$this$endsWith.$length() - $suffix.$length() | 0, $suffix, 0, $suffix.$length(), $ignoreCase);
}
function kt_StringsKt__StringsKt_endsWith$default(var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 2)
        var$3 = 0;
    return kt_StringsKt__StringsKt_endsWith0(var$1, var$2, var$3);
}
function kt_StringsKt__StringsKt_indexOfAny($$this$indexOfAny, $chars, $startIndex, $ignoreCase) {
    var $char, $index, var$7, var$8, $charAtIndex, var$10, var$11, $element$iv;
    kji_Intrinsics_checkParameterIsNotNull($$this$indexOfAny, $rt_s(423));
    kji_Intrinsics_checkParameterIsNotNull($chars, $rt_s(424));
    if (!$ignoreCase && $chars.data.length == 1 && $$this$indexOfAny instanceof jl_String) {
        $char = kc_ArraysKt___ArraysKt_single($chars);
        return $$this$indexOfAny.$indexOf($char, $startIndex);
    }
    a: {
        $index = kr_RangesKt___RangesKt_coerceAtLeast($startIndex, 0);
        var$7 = kt_StringsKt__StringsKt_getLastIndex($$this$indexOfAny);
        if ($index <= var$7) {
            while (true) {
                var$8 = $chars.data;
                $charAtIndex = $$this$indexOfAny.$charAt($index);
                var$10 = var$8.length;
                var$11 = 0;
                b: {
                    while (var$11 < var$10) {
                        $element$iv = var$8[var$11];
                        if (kt_CharsKt__CharKt_equals($element$iv, $charAtIndex, $ignoreCase)) {
                            var$10 = 1;
                            break b;
                        }
                        var$11 = var$11 + 1 | 0;
                    }
                    var$10 = 0;
                }
                if (var$10)
                    break;
                if ($index == var$7)
                    break a;
                $index = $index + 1 | 0;
            }
            return $index;
        }
    }
    return (-1);
}
function kt_StringsKt__StringsKt_lastIndexOfAny($$this$lastIndexOfAny, $chars, $startIndex, $ignoreCase) {
    var $char, $index, var$7, $charAtIndex, var$9, var$10, $element$iv;
    kji_Intrinsics_checkParameterIsNotNull($$this$lastIndexOfAny, $rt_s(425));
    kji_Intrinsics_checkParameterIsNotNull($chars, $rt_s(424));
    if (!$ignoreCase && $chars.data.length == 1 && $$this$lastIndexOfAny instanceof jl_String) {
        $char = kc_ArraysKt___ArraysKt_single($chars);
        return $$this$lastIndexOfAny.$lastIndexOf($char, $startIndex);
    }
    $index = kr_RangesKt___RangesKt_coerceAtMost($startIndex, kt_StringsKt__StringsKt_getLastIndex($$this$lastIndexOfAny));
    while (true) {
        if ($index < 0)
            return (-1);
        var$7 = $chars.data;
        $charAtIndex = $$this$lastIndexOfAny.$charAt($index);
        var$9 = var$7.length;
        var$10 = 0;
        a: {
            while (var$10 < var$9) {
                $element$iv = var$7[var$10];
                if (kt_CharsKt__CharKt_equals($element$iv, $charAtIndex, $ignoreCase)) {
                    var$9 = 1;
                    break a;
                }
                var$10 = var$10 + 1 | 0;
            }
            var$9 = 0;
        }
        if (var$9)
            break;
        $index = $index + (-1) | 0;
    }
    return $index;
}
function kt_StringsKt__StringsKt_indexOf$StringsKt__StringsKt($$this$indexOf, $other, $startIndex, $endIndex, $ignoreCase, $last) {
    var $indices, $index, var$9, var$10;
    $indices = $last ? kr_RangesKt___RangesKt_downTo(kr_RangesKt___RangesKt_coerceAtMost($startIndex, kt_StringsKt__StringsKt_getLastIndex($$this$indexOf)), kr_RangesKt___RangesKt_coerceAtLeast($endIndex, 0)) : kr_IntRange__init_(kr_RangesKt___RangesKt_coerceAtLeast($startIndex, 0), kr_RangesKt___RangesKt_coerceAtMost($endIndex, $$this$indexOf.$length()));
    a: {
        if ($$this$indexOf instanceof jl_String && $other instanceof jl_String) {
            $index = kr_IntProgression_getFirst($indices);
            var$9 = kr_IntProgression_getLast($indices);
            var$10 = kr_IntProgression_getStep($indices);
            if (var$10 < 0) {
                if ($index < var$9)
                    break a;
            } else if ($index > var$9)
                break a;
            while (!kt_StringsKt__StringsJVMKt_regionMatches($other, 0, $$this$indexOf, $index, $other.$length(), $ignoreCase)) {
                if ($index == var$9)
                    break a;
                $index = $index + var$10 | 0;
            }
            return $index;
        }
        $index = kr_IntProgression_getFirst($indices);
        var$9 = kr_IntProgression_getLast($indices);
        var$10 = kr_IntProgression_getStep($indices);
        if (var$10 < 0) {
            if ($index < var$9)
                break a;
        } else if ($index > var$9)
            break a;
        while (!kt_StringsKt__StringsKt_regionMatchesImpl($other, 0, $$this$indexOf, $index, $other.$length(), $ignoreCase)) {
            if ($index == var$9)
                break a;
            $index = $index + var$10 | 0;
        }
        return $index;
    }
    return (-1);
}
function kt_StringsKt__StringsKt_indexOf$StringsKt__StringsKt$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    if (var$7 & 16)
        var$6 = 0;
    return kt_StringsKt__StringsKt_indexOf$StringsKt__StringsKt(var$1, var$2, var$3, var$4, var$5, var$6);
}
function kt_StringsKt__StringsKt_findAnyOf$StringsKt__StringsKt($$this$findAnyOf, $strings, $startIndex, $ignoreCase, $last) {
    var $string, $index, $indices, var$9, var$10, $$this$firstOrNull$iv, var$12, $element$iv, $it, $matchingString, var$16, var$17;
    if (!$ignoreCase && $strings.$size() == 1) {
        $string = kc_CollectionsKt___CollectionsKt_single($strings);
        $index = $last ? kt_StringsKt__StringsKt_lastIndexOf$default0($$this$findAnyOf, $string, $startIndex, 0, 4, null) : kt_StringsKt__StringsKt_indexOf$default0($$this$findAnyOf, $string, $startIndex, 0, 4, null);
        return $index < 0 ? null : k_TuplesKt_to(jl_Integer_valueOf($index), $string);
    }
    $indices = $last ? kr_RangesKt___RangesKt_downTo(kr_RangesKt___RangesKt_coerceAtMost($startIndex, kt_StringsKt__StringsKt_getLastIndex($$this$findAnyOf)), 0) : kr_IntRange__init_(kr_RangesKt___RangesKt_coerceAtLeast($startIndex, 0), $$this$findAnyOf.$length());
    a: {
        if (!($$this$findAnyOf instanceof jl_String)) {
            $index = kr_IntProgression_getFirst($indices);
            var$9 = kr_IntProgression_getLast($indices);
            var$10 = kr_IntProgression_getStep($indices);
            if (var$10 < 0) {
                if ($index < var$9)
                    break a;
            } else if ($index > var$9)
                break a;
            while (true) {
                $$this$firstOrNull$iv = $strings;
                var$12 = $$this$firstOrNull$iv.$iterator();
                b: {
                    while (true) {
                        if (!var$12.$hasNext()) {
                            $element$iv = null;
                            break b;
                        }
                        $element$iv = var$12.$next();
                        $it = $element$iv;
                        if (!kt_StringsKt__StringsKt_regionMatchesImpl($it, 0, $$this$findAnyOf, $index, $it.$length(), $ignoreCase))
                            continue;
                        else
                            break;
                    }
                }
                $matchingString = $element$iv;
                if ($matchingString !== null)
                    break;
                if ($index == var$9)
                    break a;
                $index = $index + var$10 | 0;
            }
            return k_TuplesKt_to(jl_Integer_valueOf($index), $matchingString);
        }
        $index = kr_IntProgression_getFirst($indices);
        var$16 = kr_IntProgression_getLast($indices);
        var$17 = kr_IntProgression_getStep($indices);
        if (var$17 < 0) {
            if ($index < var$16)
                break a;
        } else if ($index > var$16)
            break a;
        while (true) {
            $$this$firstOrNull$iv = $strings;
            var$12 = $$this$firstOrNull$iv.$iterator();
            c: {
                while (true) {
                    if (!var$12.$hasNext()) {
                        $element$iv = null;
                        break c;
                    }
                    $element$iv = var$12.$next();
                    $it = $element$iv;
                    if (!kt_StringsKt__StringsJVMKt_regionMatches($it, 0, $$this$findAnyOf, $index, $it.$length(), $ignoreCase))
                        continue;
                    else
                        break;
                }
            }
            $matchingString = $element$iv;
            if ($matchingString !== null)
                return k_TuplesKt_to(jl_Integer_valueOf($index), $matchingString);
            if ($index == var$16)
                break a;
            $index = $index + var$17 | 0;
        }
    }
    return null;
}
function kt_StringsKt__StringsKt_indexOf($$this$indexOf, $char, $startIndex, $ignoreCase) {
    var var$5, var$6;
    kji_Intrinsics_checkParameterIsNotNull($$this$indexOf, $rt_s(426));
    if (!$ignoreCase && $$this$indexOf instanceof jl_String)
        var$5 = $$this$indexOf.$indexOf($char, $startIndex);
    else {
        var$6 = $rt_createCharArray(1);
        var$6.data[0] = $char;
        var$5 = kt_StringsKt__StringsKt_indexOfAny($$this$indexOf, var$6, $startIndex, $ignoreCase);
    }
    return var$5;
}
function kt_StringsKt__StringsKt_indexOf$default(var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$5 & 2)
        var$3 = 0;
    if (var$5 & 4)
        var$4 = 0;
    return kt_StringsKt__StringsKt_indexOf(var$1, var$2, var$3, var$4);
}
function kt_StringsKt__StringsKt_indexOf0($$this$indexOf, $string, $startIndex, $ignoreCase) {
    kji_Intrinsics_checkParameterIsNotNull($$this$indexOf, $rt_s(426));
    kji_Intrinsics_checkParameterIsNotNull($string, $rt_s(371));
    return !$ignoreCase && $$this$indexOf instanceof jl_String ? $$this$indexOf.$indexOf1($string, $startIndex) : kt_StringsKt__StringsKt_indexOf$StringsKt__StringsKt$default($$this$indexOf, $string, $startIndex, $$this$indexOf.$length(), $ignoreCase, 0, 16, null);
}
function kt_StringsKt__StringsKt_indexOf$default0(var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$5 & 2)
        var$3 = 0;
    if (var$5 & 4)
        var$4 = 0;
    return kt_StringsKt__StringsKt_indexOf0(var$1, var$2, var$3, var$4);
}
function kt_StringsKt__StringsKt_lastIndexOf($$this$lastIndexOf, $char, $startIndex, $ignoreCase) {
    var var$5, var$6;
    kji_Intrinsics_checkParameterIsNotNull($$this$lastIndexOf, $rt_s(427));
    if (!$ignoreCase && $$this$lastIndexOf instanceof jl_String)
        var$5 = $$this$lastIndexOf.$lastIndexOf($char, $startIndex);
    else {
        var$6 = $rt_createCharArray(1);
        var$6.data[0] = $char;
        var$5 = kt_StringsKt__StringsKt_lastIndexOfAny($$this$lastIndexOf, var$6, $startIndex, $ignoreCase);
    }
    return var$5;
}
function kt_StringsKt__StringsKt_lastIndexOf$default(var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$5 & 2)
        var$3 = kt_StringsKt__StringsKt_getLastIndex(var$1);
    if (var$5 & 4)
        var$4 = 0;
    return kt_StringsKt__StringsKt_lastIndexOf(var$1, var$2, var$3, var$4);
}
function kt_StringsKt__StringsKt_lastIndexOf0($$this$lastIndexOf, $string, $startIndex, $ignoreCase) {
    kji_Intrinsics_checkParameterIsNotNull($$this$lastIndexOf, $rt_s(427));
    kji_Intrinsics_checkParameterIsNotNull($string, $rt_s(371));
    return !$ignoreCase && $$this$lastIndexOf instanceof jl_String ? $$this$lastIndexOf.$lastIndexOf1($string, $startIndex) : kt_StringsKt__StringsKt_indexOf$StringsKt__StringsKt($$this$lastIndexOf, $string, $startIndex, 0, $ignoreCase, 1);
}
function kt_StringsKt__StringsKt_lastIndexOf$default0(var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$5 & 2)
        var$3 = kt_StringsKt__StringsKt_getLastIndex(var$1);
    if (var$5 & 4)
        var$4 = 0;
    return kt_StringsKt__StringsKt_lastIndexOf0(var$1, var$2, var$3, var$4);
}
function kt_StringsKt__StringsKt_rangesDelimitedBy$StringsKt__StringsKt($$this$rangesDelimitedBy, $delimiters, $startIndex, $ignoreCase, $limit) {
    var var$6;
    if ($limit < 0 ? 0 : 1)
        return kt_DelimitedRangesSequence__init_($$this$rangesDelimitedBy, $startIndex, $limit, kt_StringsKt__StringsKt$rangesDelimitedBy$2__init_($delimiters, $ignoreCase));
    var$6 = jl_StringBuilder__init_().$append($rt_s(375)).$append1($limit).$append12(46).$toString();
    $rt_throw(jl_IllegalArgumentException__init_(var$6.$toString()));
}
function kt_StringsKt__StringsKt_rangesDelimitedBy$StringsKt__StringsKt$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$6 & 2)
        var$3 = 0;
    if (var$6 & 4)
        var$4 = 0;
    if (var$6 & 8)
        var$5 = 0;
    return kt_StringsKt__StringsKt_rangesDelimitedBy$StringsKt__StringsKt(var$1, var$2, var$3, var$4, var$5);
}
function kt_StringsKt__StringsKt_rangesDelimitedBy$StringsKt__StringsKt0($$this$rangesDelimitedBy, $delimiters, $startIndex, $ignoreCase, $limit) {
    var $delimitersList, var$7;
    if ($limit < 0 ? 0 : 1) {
        $delimitersList = kc_ArraysKt___ArraysJvmKt_asList($delimiters);
        return kt_DelimitedRangesSequence__init_($$this$rangesDelimitedBy, $startIndex, $limit, kt_StringsKt__StringsKt$rangesDelimitedBy$4__init_($delimitersList, $ignoreCase));
    }
    var$7 = jl_StringBuilder__init_().$append($rt_s(375)).$append1($limit).$append12(46).$toString();
    $rt_throw(jl_IllegalArgumentException__init_(var$7.$toString()));
}
function kt_StringsKt__StringsKt_rangesDelimitedBy$StringsKt__StringsKt$default0(var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$6 & 2)
        var$3 = 0;
    if (var$6 & 4)
        var$4 = 0;
    if (var$6 & 8)
        var$5 = 0;
    return kt_StringsKt__StringsKt_rangesDelimitedBy$StringsKt__StringsKt0(var$1, var$2, var$3, var$4, var$5);
}
function kt_StringsKt__StringsKt_splitToSequence($$this$splitToSequence, $delimiters, $ignoreCase, $limit) {
    kji_Intrinsics_checkParameterIsNotNull($$this$splitToSequence, $rt_s(428));
    kji_Intrinsics_checkParameterIsNotNull($delimiters, $rt_s(429));
    return ks_SequencesKt___SequencesKt_map(kt_StringsKt__StringsKt_rangesDelimitedBy$StringsKt__StringsKt$default0($$this$splitToSequence, $delimiters, 0, $ignoreCase, $limit, 2, null), kt_StringsKt__StringsKt$splitToSequence$1__init_($$this$splitToSequence));
}
function kt_StringsKt__StringsKt_splitToSequence$default(var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$5 & 2)
        var$3 = 0;
    if (var$5 & 4)
        var$4 = 0;
    return kt_StringsKt__StringsKt_splitToSequence(var$1, var$2, var$3, var$4);
}
function kt_StringsKt__StringsKt_split($$this$split, $delimiters, $ignoreCase, $limit) {
    var var$5, $$this$map$iv, $destination$iv$iv, var$8, $item$iv$iv, $it;
    var$5 = $delimiters.data;
    kji_Intrinsics_checkParameterIsNotNull($$this$split, $rt_s(430));
    kji_Intrinsics_checkParameterIsNotNull($delimiters, $rt_s(429));
    if (var$5.length == 1)
        return kt_StringsKt__StringsKt_split$StringsKt__StringsKt($$this$split, jl_String_valueOf3(var$5[0]), $ignoreCase, $limit);
    $$this$map$iv = ks_SequencesKt___SequencesKt_asIterable(kt_StringsKt__StringsKt_rangesDelimitedBy$StringsKt__StringsKt$default($$this$split, $delimiters, 0, $ignoreCase, $limit, 2, null));
    $destination$iv$iv = ju_ArrayList__init_1(kc_CollectionsKt__IterablesKt_collectionSizeOrDefault($$this$map$iv, 10));
    var$8 = $$this$map$iv.$iterator();
    while (var$8.$hasNext()) {
        $item$iv$iv = var$8.$next();
        $it = $item$iv$iv;
        $destination$iv$iv.$add1(kt_StringsKt__StringsKt_substring($$this$split, $it));
    }
    return $destination$iv$iv;
}
function kt_StringsKt__StringsKt_split$default(var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$5 & 2)
        var$3 = 0;
    if (var$5 & 4)
        var$4 = 0;
    return kt_StringsKt__StringsKt_split(var$1, var$2, var$3, var$4);
}
function kt_StringsKt__StringsKt_split$StringsKt__StringsKt($$this$split, $delimiter, $ignoreCase, $limit) {
    var var$5, $currentOffset, $nextIndex, $isLimited, $result;
    if (!($limit < 0 ? 0 : 1)) {
        var$5 = jl_StringBuilder__init_().$append($rt_s(375)).$append1($limit).$append12(46).$toString();
        $rt_throw(jl_IllegalArgumentException__init_(var$5.$toString()));
    }
    $currentOffset = 0;
    $nextIndex = kt_StringsKt__StringsKt_indexOf0($$this$split, $delimiter, $currentOffset, $ignoreCase);
    if ($nextIndex != (-1) && $limit != 1) {
        $isLimited = $limit <= 0 ? 0 : 1;
        $result = ju_ArrayList__init_1(!$isLimited ? 10 : kr_RangesKt___RangesKt_coerceAtMost($limit, 10));
        a: {
            while (true) {
                $result.$add1($$this$split.$subSequence($currentOffset, $nextIndex).$toString());
                $currentOffset = $nextIndex + $delimiter.$length() | 0;
                if ($isLimited && $result.$size() == ($limit - 1 | 0))
                    break;
                $nextIndex = kt_StringsKt__StringsKt_indexOf0($$this$split, $delimiter, $currentOffset, $ignoreCase);
                if ($nextIndex == (-1))
                    break a;
            }
        }
        $result.$add1($$this$split.$subSequence($currentOffset, $$this$split.$length()).$toString());
        return $result;
    }
    return kc_CollectionsKt__CollectionsJVMKt_listOf($$this$split.$toString());
}
function kt_StringsKt__StringsKt_access$findAnyOf($$this$access_u24findAnyOf, $strings, $startIndex, $ignoreCase, $last) {
    return kt_StringsKt__StringsKt_findAnyOf$StringsKt__StringsKt($$this$access_u24findAnyOf, $strings, $startIndex, $ignoreCase, $last);
}
function kt_StringsKt__StringsKt__init_0(var$0) {
    kt_StringsKt__StringsJVMKt__init_0(var$0);
}
function kt_StringsKt___StringsJvmKt() {
    kt_StringsKt__StringsKt.call(this);
}
function kt_StringsKt___StringsJvmKt__init_() {
    var var_0 = new kt_StringsKt___StringsJvmKt();
    kt_StringsKt___StringsJvmKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt___StringsJvmKt__init_0(var$0) {
    kt_StringsKt__StringsKt__init_0(var$0);
}
function ooo_DWorld() {
}
function otci_Base46() {
    jl_Object.call(this);
}
function otci_Base46__init_() {
    var var_0 = new otci_Base46();
    otci_Base46__init_0(var_0);
    return var_0;
}
function otci_Base46__init_0($this) {
    jl_Object__init_0($this);
}
function otci_Base46_decodeUnsigned($seq) {
    var $number, $pos, var$4, var$5, $digit, $hasMore;
    $number = 0;
    $pos = 1;
    while (true) {
        var$4 = $seq.$characters0.data;
        var$5 = $seq.$pointer0;
        $seq.$pointer0 = var$5 + 1 | 0;
        $digit = otci_Base46_decodeDigit(var$4[var$5]);
        $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
        $number = $number + $rt_imul($pos, $digit / 2 | 0) | 0;
        $pos = $pos * 46 | 0;
        if (!$hasMore)
            break;
    }
    return $number;
}
function otci_Base46_decode($seq) {
    var $number, $result;
    $number = otci_Base46_decodeUnsigned($seq);
    $result = $number / 2 | 0;
    if ($number % 2 | 0)
        $result =  -$result;
    return $result;
}
function otci_Base46_decodeDigit($c) {
    if ($c < 34)
        return $c - 32 | 0;
    if ($c >= 92)
        return ($c - 32 | 0) - 2 | 0;
    return ($c - 32 | 0) - 1 | 0;
}
function oooi_DxAbstractHeightfield() {
    oooi_DxGeom.call(this);
    this.$m_p_data = null;
}
function oooi_DxHeightfield() {
    oooi_DxAbstractHeightfield.call(this);
}
function oooi_DxHeightfield_dMIN($A, $B) {
    if ($A > $B)
        $A = $B;
    return $A;
}
function oooi_DxHeightfield_dMAX($A, $B) {
    if ($A > $B)
        $B = $A;
    return $B;
}
function oooi_DxHeightfield_access$200($x0, $x1) {
    return oooi_DxHeightfield_dMAX($x0, $x1);
}
function oooi_DxHeightfield_access$300($x0, $x1) {
    return oooi_DxHeightfield_dMIN($x0, $x1);
}
function jur_CompositeRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$withoutSurrogates = null;
    a.$withSurrogates = null;
}
function jur_CompositeRangeSet__init_(var_0, var_1) {
    var var_2 = new jur_CompositeRangeSet();
    jur_CompositeRangeSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CompositeRangeSet__init_0($this, $withoutSurrogates, $withSurrogates) {
    jur_JointSet__init_0($this);
    $this.$withoutSurrogates = $withoutSurrogates;
    $this.$withSurrogates = $withSurrogates;
}
function jur_CompositeRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$withoutSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$withSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return (-1);
}
function jur_CompositeRangeSet_setNext($this, $next) {
    $this.$next0 = $next;
    $this.$withSurrogates.$setNext($next);
    $this.$withoutSurrogates.$setNext($next);
}
function jur_CompositeRangeSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_CompositeRangeSet_first($this, $set) {
    return 1;
}
function oooi_CollisionLibccd$CollideConvexConvexCCD() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$CollideConvexConvexCCD__init_() {
    var var_0 = new oooi_CollisionLibccd$CollideConvexConvexCCD();
    oooi_CollisionLibccd$CollideConvexConvexCCD__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$CollideConvexConvexCCD__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$CollideConvexConvexCCD_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    var $c1, $c2, var$7, var$8, var$9, var$10;
    $c1 = oooi_CollisionLibccd$ccd_convex_t__init_(null);
    $c2 = oooi_CollisionLibccd$ccd_convex_t__init_(null);
    oooi_CollisionLibccd_ccdGeomToConvex($o1, $c1);
    oooi_CollisionLibccd_ccdGeomToConvex($o2, $c2);
    var$7 = oooi_CollisionLibccd_access$500();
    var$8 = oooi_CollisionLibccd_access$100();
    var$9 = oooi_CollisionLibccd_access$500();
    var$10 = oooi_CollisionLibccd_access$100();
    return oooi_CollisionLibccd_ccdCollide($o1, $o2, $flags, $contacts, $c1, var$7, var$8, $c2, var$9, var$10);
}
function ju_Map$Entry() {
}
function ju_MapEntry() {
    var a = this; jl_Object.call(a);
    a.$key = null;
    a.$value0 = null;
}
function ju_MapEntry__init_(var_0, var_1) {
    var var_2 = new ju_MapEntry();
    ju_MapEntry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_MapEntry__init_0($this, $theKey, $theValue) {
    jl_Object__init_0($this);
    $this.$key = $theKey;
    $this.$value0 = $theValue;
}
function ju_MapEntry_equals($this, $object) {
    var $entry, var$3, var$4;
    if ($this === $object)
        return 1;
    if (!$rt_isInstance($object, ju_Map$Entry))
        return 0;
    a: {
        b: {
            c: {
                $entry = $object;
                if ($this.$key === null) {
                    if ($entry.$getKey() !== null)
                        break c;
                } else if (!$this.$key.$equals0($entry.$getKey()))
                    break c;
                if ($this.$value0 === null) {
                    if ($entry.$getValue() !== null)
                        break c;
                    break b;
                }
                var$3 = $this.$value0;
                if (var$3.$equals0($entry.$getValue()))
                    break b;
            }
            var$4 = 0;
            break a;
        }
        var$4 = 1;
    }
    return var$4;
}
function ju_MapEntry_getKey($this) {
    return $this.$key;
}
function ju_MapEntry_getValue($this) {
    return $this.$value0;
}
function ju_MapEntry_hashCode($this) {
    var var$1, var$2, var$3;
    var$1 = $this.$key === null ? 0 : $this.$key.$hashCode();
    if ($this.$value0 === null)
        var$2 = 0;
    else {
        var$3 = $this.$value0;
        var$2 = var$3.$hashCode();
    }
    var$1 = var$1 ^ var$2;
    return var$1;
}
function ju_Hashtable$Entry() {
    var a = this; ju_MapEntry.call(a);
    a.$next3 = null;
    a.$hashcode = 0;
}
function ju_Hashtable$Entry__init_(var_0, var_1) {
    var var_2 = new ju_Hashtable$Entry();
    ju_Hashtable$Entry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_Hashtable$Entry__init_0($this, $theKey, $theValue) {
    ju_MapEntry__init_0($this, $theKey, $theValue);
    $this.$hashcode = $theKey.$hashCode();
}
function ju_Hashtable$Entry_getKeyHash($this) {
    return $this.$key.$hashCode();
}
function ju_Hashtable$Entry_equalsKey($this, $aKey, $hash) {
    return $this.$hashcode == $aKey.$hashCode() && $this.$key.$equals0($aKey) ? 1 : 0;
}
function kr_RangesKt__RangesKt() {
    jl_Object.call(this);
}
function kr_RangesKt__RangesKt__init_() {
    var var_0 = new kr_RangesKt__RangesKt();
    kr_RangesKt__RangesKt__init_0(var_0);
    return var_0;
}
function kr_RangesKt__RangesKt__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function kr_RangesKt___RangesKt() {
    kr_RangesKt__RangesKt.call(this);
}
function kr_RangesKt___RangesKt__init_() {
    var var_0 = new kr_RangesKt___RangesKt();
    kr_RangesKt___RangesKt__init_0(var_0);
    return var_0;
}
function kr_RangesKt___RangesKt_downTo($$this$downTo, $to) {
    kr_IntProgression_$callClinit();
    return kr_IntProgression$Companion_fromClosedRange(kr_IntProgression_Companion, $$this$downTo, $to, (-1));
}
function kr_RangesKt___RangesKt_until($$this$until, $to) {
    if ($to <= (-2147483648)) {
        kr_IntRange_$callClinit();
        return kr_IntRange$Companion_getEMPTY(kr_IntRange_Companion);
    }
    return kr_IntRange__init_($$this$until, $to - 1 | 0);
}
function kr_RangesKt___RangesKt_coerceAtLeast($$this$coerceAtLeast, $minimumValue) {
    if ($$this$coerceAtLeast < $minimumValue)
        $$this$coerceAtLeast = $minimumValue;
    return $$this$coerceAtLeast;
}
function kr_RangesKt___RangesKt_coerceAtMost($$this$coerceAtMost, $maximumValue) {
    if ($$this$coerceAtMost > $maximumValue)
        $$this$coerceAtMost = $maximumValue;
    return $$this$coerceAtMost;
}
function kr_RangesKt___RangesKt_coerceIn($$this$coerceIn, $minimumValue, $maximumValue) {
    if ($minimumValue <= $maximumValue) {
        if ($$this$coerceIn < $minimumValue)
            return $minimumValue;
        if ($$this$coerceIn <= $maximumValue)
            return $$this$coerceIn;
        return $maximumValue;
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(431)).$append1($maximumValue).$append($rt_s(432)).$append1($minimumValue).$append12(46).$toString()));
}
function kr_RangesKt___RangesKt__init_0(var$0) {
    kr_RangesKt__RangesKt__init_0(var$0);
}
function kr_RangesKt() {
    kr_RangesKt___RangesKt.call(this);
}
function kr_RangesKt__init_() {
    var var_0 = new kr_RangesKt();
    kr_RangesKt__init_0(var_0);
    return var_0;
}
function kr_RangesKt__init_0(var$0) {
    kr_RangesKt___RangesKt__init_0(var$0);
}
function jl_ThreadLocal() {
    var a = this; jl_Object.call(a);
    a.$initialized = 0;
    a.$value3 = null;
}
function jl_ThreadLocal__init_() {
    var var_0 = new jl_ThreadLocal();
    jl_ThreadLocal__init_0(var_0);
    return var_0;
}
function jl_ThreadLocal__init_0($this) {
    jl_Object__init_0($this);
}
function jl_ThreadLocal_get($this) {
    if (!$this.$initialized) {
        $this.$value3 = $this.$initialValue();
        $this.$initialized = 1;
    }
    return $this.$value3;
}
function kr_FallbackThreadLocalRandom$implStorage$1() {
    jl_ThreadLocal.call(this);
}
function kr_FallbackThreadLocalRandom$implStorage$1__init_() {
    var var_0 = new kr_FallbackThreadLocalRandom$implStorage$1();
    kr_FallbackThreadLocalRandom$implStorage$1__init_0(var_0);
    return var_0;
}
function kr_FallbackThreadLocalRandom$implStorage$1_initialValue($this) {
    return ju_Random__init_();
}
function kr_FallbackThreadLocalRandom$implStorage$1_initialValue0(var$0) {
    return kr_FallbackThreadLocalRandom$implStorage$1_initialValue(var$0);
}
function kr_FallbackThreadLocalRandom$implStorage$1__init_0($this) {
    jl_ThreadLocal__init_0($this);
}
function jur_FinalSet() {
    jur_FSet.call(this);
}
function jur_FinalSet__init_() {
    var var_0 = new jur_FinalSet();
    jur_FinalSet__init_0(var_0);
    return var_0;
}
function jur_FinalSet__init_0($this) {
    jur_FSet__init_0($this, 0);
}
function jur_FinalSet_matches($this, $stringIndex, $testString, $matchResult) {
    if ($matchResult.$mode0() != 1 && $stringIndex != $matchResult.$getRightBound())
        return (-1);
    $matchResult.$setValid();
    $matchResult.$setEnd(0, $stringIndex);
    return $stringIndex;
}
function k_TypeCastException() {
    jl_ClassCastException.call(this);
}
function k_TypeCastException__init_0() {
    var var_0 = new k_TypeCastException();
    k_TypeCastException__init_1(var_0);
    return var_0;
}
function k_TypeCastException__init_(var_0) {
    var var_1 = new k_TypeCastException();
    k_TypeCastException__init_2(var_1, var_0);
    return var_1;
}
function k_TypeCastException__init_1($this) {
    jl_ClassCastException__init_0($this);
}
function k_TypeCastException__init_2($this, $message) {
    jl_ClassCastException__init_2($this, $message);
}
function ooo_DConvex() {
}
function ooot_MutexGroup$dxProcessContextMutex() {
    jl_Enum.call(this);
}
var ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_ARENA_OBTAIN = null;
var ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_ADDLIMOT_SERIALIZE = null;
var ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_STEPBODY_SERIALIZE = null;
var ooot_MutexGroup$dxProcessContextMutex_$VALUES = null;
function ooot_MutexGroup$dxProcessContextMutex_$callClinit() {
    ooot_MutexGroup$dxProcessContextMutex_$callClinit = $rt_eraseClinit(ooot_MutexGroup$dxProcessContextMutex);
    ooot_MutexGroup$dxProcessContextMutex__clinit_();
}
function ooot_MutexGroup$dxProcessContextMutex__init_(var_0, var_1) {
    var var_2 = new ooot_MutexGroup$dxProcessContextMutex();
    ooot_MutexGroup$dxProcessContextMutex__init_0(var_2, var_0, var_1);
    return var_2;
}
function ooot_MutexGroup$dxProcessContextMutex_values() {
    ooot_MutexGroup$dxProcessContextMutex_$callClinit();
    return ooot_MutexGroup$dxProcessContextMutex_$VALUES.$clone();
}
function ooot_MutexGroup$dxProcessContextMutex__init_0($this, var$1, var$2) {
    ooot_MutexGroup$dxProcessContextMutex_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function ooot_MutexGroup$dxProcessContextMutex__clinit_() {
    var var$1, var$2;
    ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_ARENA_OBTAIN = ooot_MutexGroup$dxProcessContextMutex__init_($rt_s(433), 0);
    ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_ADDLIMOT_SERIALIZE = ooot_MutexGroup$dxProcessContextMutex__init_($rt_s(434), 1);
    ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_STEPBODY_SERIALIZE = ooot_MutexGroup$dxProcessContextMutex__init_($rt_s(435), 2);
    var$1 = $rt_createArray(ooot_MutexGroup$dxProcessContextMutex, 3);
    var$2 = var$1.data;
    var$2[0] = ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_ARENA_OBTAIN;
    var$2[1] = ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_ADDLIMOT_SERIALIZE;
    var$2[2] = ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_STEPBODY_SERIALIZE;
    ooot_MutexGroup$dxProcessContextMutex_$VALUES = var$1;
}
function oooig_GimMath() {
    jl_Object.call(this);
}
var oooig_GimMath_random = null;
function oooig_GimMath_$callClinit() {
    oooig_GimMath_$callClinit = $rt_eraseClinit(oooig_GimMath);
    oooig_GimMath__clinit_();
}
function oooig_GimMath__init_() {
    var var_0 = new oooig_GimMath();
    oooig_GimMath__init_0(var_0);
    return var_0;
}
function oooig_GimMath__init_0($this) {
    oooig_GimMath_$callClinit();
    jl_Object__init_0($this);
}
function oooig_GimMath_MAX($a, $b) {
    oooig_GimMath_$callClinit();
    if ($a < $b)
        $a = $b;
    return $a;
}
function oooig_GimMath_MIN($a, $b) {
    oooig_GimMath_$callClinit();
    if ($a > $b)
        $a = $b;
    return $a;
}
function oooig_GimMath_MAX3($a, $b, $c) {
    oooig_GimMath_$callClinit();
    return oooig_GimMath_MAX($a, oooig_GimMath_MAX($b, $c));
}
function oooig_GimMath_MIN3($a, $b, $c) {
    oooig_GimMath_$callClinit();
    return oooig_GimMath_MIN($a, oooig_GimMath_MIN($b, $c));
}
function oooig_GimMath_IS_ZERO($a) {
    oooig_GimMath_$callClinit();
    return $a < 1.0000000116860974E-7 && $a > (-1.0000000116860974E-7) ? 1 : 0;
}
function oooig_GimMath_CLAMP($number, $minval, $maxval) {
    oooig_GimMath_$callClinit();
    if ($number >= $minval)
        $minval = $number <= $maxval ? $number : $maxval;
    return $minval;
}
function oooig_GimMath_GIM_INV_SQRT($va) {
    var $isva;
    oooig_GimMath_$callClinit();
    if ($va <= 1.0000000116860974E-7) {
        $isva = Infinity;
        return $isva;
    }
    return 1.0 / jl_Math_sqrt($va);
}
function oooig_GimMath_GIM_SQRT($va) {
    oooig_GimMath_$callClinit();
    return $va * oooig_GimMath_GIM_INV_SQRT($va);
}
function oooig_GimMath_gim_init_math() {
    oooig_GimMath_$callClinit();
}
function oooig_GimMath__clinit_() {
    oooig_GimMath_random = ju_Random__init_0(jl_System_nanoTime());
}
function jl_StackTraceElement() {
    jl_Object.call(this);
}
function oktt_MouseTest$testMain$1() {
    jl_Object.call(this);
}
function oktt_MouseTest$testMain$1__init_() {
    var var_0 = new oktt_MouseTest$testMain$1();
    oktt_MouseTest$testMain$1__init_0(var_0);
    return var_0;
}
function oktt_MouseTest$testMain$1_buttonDown($this, $button, $screenX, $screenY, $pointer) {
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append($rt_s(436)).$append1($button).$toString(), null, 2, null);
}
function oktt_MouseTest$testMain$1_buttonUp($this, $button, $screenX, $screenY, $pointer) {
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append($rt_s(437)).$append1($button).$toString(), null, 2, null);
}
function oktt_MouseTest$testMain$1_dragged($this, $screenX, $screenY, $pointer) {
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append($rt_s(438)).$append1($screenX).$append($rt_s(268)).$append1($screenY).$toString(), null, 2, null);
}
function oktt_MouseTest$testMain$1_moved($this, $screenX, $screenY) {
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append($rt_s(439)).$append1($screenX).$append($rt_s(268)).$append1($screenY).$toString(), null, 2, null);
}
function oktt_MouseTest$testMain$1_scrolled($this, $amount) {
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append($rt_s(440)).$append1($amount).$toString(), null, 2, null);
}
function oktt_MouseTest$testMain$1__init_0($this) {
    jl_Object__init_0($this);
}
function ju_HashMap$HashEntry() {
    var a = this; ju_MapEntry.call(a);
    a.$origKeyHash = 0;
    a.$next1 = null;
}
function ju_HashMap$HashEntry__init_(var_0, var_1) {
    var var_2 = new ju_HashMap$HashEntry();
    ju_HashMap$HashEntry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_HashMap$HashEntry__init_0($this, $theKey, $hash) {
    ju_MapEntry__init_0($this, $theKey, null);
    $this.$origKeyHash = $hash;
}
function ju_LinkedHashMap$LinkedHashMapEntry() {
    var a = this; ju_HashMap$HashEntry.call(a);
    a.$chainForward = null;
    a.$chainBackward = null;
}
function ju_LinkedHashMap$LinkedHashMapEntry__init_(var_0, var_1) {
    var var_2 = new ju_LinkedHashMap$LinkedHashMapEntry();
    ju_LinkedHashMap$LinkedHashMapEntry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_LinkedHashMap$LinkedHashMapEntry__init_0($this, $theKey, $hash) {
    ju_HashMap$HashEntry__init_0($this, $theKey, $hash);
    $this.$chainForward = null;
    $this.$chainBackward = null;
}
function oktgn_IDelegateTransformNode() {
}
function oooi_DxGimpactData() {
    var a = this; oooi_DxTriMeshData.call(a);
    a.$m_Vertices = null;
    a.$m_Indices = null;
    a.$m_Angles = null;
}
function oooi_DxGimpactData__init_() {
    var var_0 = new oooi_DxGimpactData();
    oooi_DxGimpactData__init_0(var_0);
    return var_0;
}
function oooi_DxGimpactData__init_0($this) {
    oooi_DxTriMeshData__init_0($this);
    $this.$m_Vertices = null;
    $this.$m_Indices = null;
}
function oooi_DxGimpactData_getDataRef($this) {
    return $this.$m_Vertices;
}
function oooi_DxGimpactData_getIndexRef($this) {
    return $this.$m_Indices;
}
function oooi_DxGimpactData_build($this, $Vertices, $Indices) {
    oooi_Common_dIASSERT($Vertices === null ? 0 : 1);
    oooi_Common_dIASSERT($Indices === null ? 0 : 1);
    $this.$m_Vertices = $Vertices;
    $this.$m_Indices = $Indices;
}
function oooi_DxGimpactData_preprocess($this) {
    $this.$m_Angles = oooi_GimpactDataPreprocessor__init_($this).$buildAngles();
}
function oooi_DxGimpactData_getEdgeAngle($this, $triangle, $edge) {
    return $this.$m_Angles === null ? 6.283185307179586 : $this.$m_Angles.data[($triangle * 3 | 0) + $edge | 0];
}
function oooig_GimGeometry() {
    oooig_GimMath.call(this);
}
function oooig_GimGeometry__init_() {
    var var_0 = new oooig_GimGeometry();
    oooig_GimGeometry__init_0(var_0);
    return var_0;
}
function oooig_GimGeometry__init_0($this) {
    oooig_GimMath__init_0($this);
}
function oooig_GimGeometry_M($y, $x) {
    return ($y * 4 | 0) + $x | 0;
}
function oooig_GimGeometry_VEC_COPY($b, $a) {
    $b.$f.data[0] = $a.$f.data[0];
    $b.$f.data[1] = $a.$f.data[1];
    $b.$f.data[2] = $a.$f.data[2];
}
function oooig_GimGeometry_VEC_COPY0($b, $a) {
    $b.$f.data[0] = $a.$f0.data[0];
    $b.$f.data[1] = $a.$f0.data[1];
    $b.$f.data[2] = $a.$f0.data[2];
}
function oooig_GimGeometry_VEC_COPY1($b, $a) {
    $b.$f0.data[0] = $a.$f.data[0];
    $b.$f0.data[1] = $a.$f.data[1];
    $b.$f0.data[2] = $a.$f.data[2];
}
function oooig_GimGeometry_VEC_COPY_4($b, $a) {
    $b.$f0.data[0] = $a.$f0.data[0];
    $b.$f0.data[1] = $a.$f0.data[1];
    $b.$f0.data[2] = $a.$f0.data[2];
    $b.$f0.data[3] = $a.$f0.data[3];
}
function oooig_GimGeometry_VEC_DIFF($v21, $v2, $v1) {
    $v21.$f.data[0] = $v2.$f.data[0] - $v1.$f.data[0];
    $v21.$f.data[1] = $v2.$f.data[1] - $v1.$f.data[1];
    $v21.$f.data[2] = $v2.$f.data[2] - $v1.$f.data[2];
}
function oooig_GimGeometry_VEC_DIFF0($v21, $v2, $v1) {
    $v21.$f0.data[0] = $v2.$f.data[0] - $v1.$f.data[0];
    $v21.$f0.data[1] = $v2.$f.data[1] - $v1.$f.data[1];
    $v21.$f0.data[2] = $v2.$f.data[2] - $v1.$f.data[2];
}
function oooig_GimGeometry_VEC_SUM($v21, $v2, $v1) {
    $v21.$f.data[0] = $v2.$f.data[0] + $v1.$f.data[0];
    $v21.$f.data[1] = $v2.$f.data[1] + $v1.$f.data[1];
    $v21.$f.data[2] = $v2.$f.data[2] + $v1.$f.data[2];
}
function oooig_GimGeometry_VEC_SCALE($c, $a, $b) {
    $c.$f.data[0] = $a * $b.$f.data[0];
    $c.$f.data[1] = $a * $b.$f.data[1];
    $c.$f.data[2] = $a * $b.$f.data[2];
}
function oooig_GimGeometry_VEC_SCALE0($c, $a, $b) {
    $c.$f.data[0] = $a * $b.$f0.data[0];
    $c.$f.data[1] = $a * $b.$f0.data[1];
    $c.$f.data[2] = $a * $b.$f0.data[2];
}
function oooig_GimGeometry_VEC_SCALE_4($c, $a, $b) {
    $c.$f0.data[0] = $a * $b.$f0.data[0];
    $c.$f0.data[1] = $a * $b.$f0.data[1];
    $c.$f0.data[2] = $a * $b.$f0.data[2];
    $c.$f0.data[3] = $a * $b.$f0.data[3];
}
function oooig_GimGeometry_VEC_DOT($a, $b) {
    return $a.$f.data[0] * $b.$f.data[0] + $a.$f.data[1] * $b.$f.data[1] + $a.$f.data[2] * $b.$f.data[2];
}
function oooig_GimGeometry_VEC_DOT0($a, $b) {
    return $a.$f0.data[0] * $b.$f.data[0] + $a.$f0.data[1] * $b.$f.data[1] + $a.$f0.data[2] * $b.$f.data[2];
}
function oooig_GimGeometry_VEC_DOT1($a, $b) {
    return $a.$f0.data[0] * $b.$f0.data[0] + $a.$f0.data[1] * $b.$f0.data[1] + $a.$f0.data[2] * $b.$f0.data[2];
}
function oooig_GimGeometry_VEC_DOT2($a, $b) {
    var var$3;
    var$3 = $b.data;
    return $a.$f0.data[0] * var$3[0] + $a.$f0.data[1] * var$3[1] + $a.$f0.data[2] * var$3[2];
}
function oooig_GimGeometry_VEC_LENGTH($a) {
    var $_pp;
    $_pp = oooig_GimGeometry_VEC_DOT($a, $a);
    return oooig_GimMath_GIM_SQRT($_pp);
}
function oooig_GimGeometry_VEC_INV_LENGTH($a) {
    var $_pp;
    $_pp = oooig_GimGeometry_VEC_DOT1($a, $a);
    return oooig_GimMath_GIM_INV_SQRT($_pp);
}
function oooig_GimGeometry_VEC_NORMALIZE($a) {
    var $len, var$3;
    $len = oooig_GimGeometry_VEC_INV_LENGTH($a);
    if ($len < Infinity) {
        var$3 = $a.$f0.data;
        var$3[0] = var$3[0] * $len;
        var$3 = $a.$f0.data;
        var$3[1] = var$3[1] * $len;
        var$3 = $a.$f0.data;
        var$3[2] = var$3[2] * $len;
    }
}
function oooig_GimGeometry_VEC_CROSS($c, $a, $b) {
    $c.$f.data[0] = $a.$f.data[1] * $b.$f.data[2] - $a.$f.data[2] * $b.$f.data[1];
    $c.$f.data[1] = $a.$f.data[2] * $b.$f.data[0] - $a.$f.data[0] * $b.$f.data[2];
    $c.$f.data[2] = $a.$f.data[0] * $b.$f.data[1] - $a.$f.data[1] * $b.$f.data[0];
}
function oooig_GimGeometry_VEC_CROSS0($c, $a, $b) {
    $c.$f0.data[0] = $a.$f.data[1] * $b.$f.data[2] - $a.$f.data[2] * $b.$f.data[1];
    $c.$f0.data[1] = $a.$f.data[2] * $b.$f.data[0] - $a.$f.data[0] * $b.$f.data[2];
    $c.$f0.data[2] = $a.$f.data[0] * $b.$f.data[1] - $a.$f.data[1] * $b.$f.data[0];
}
function oooig_GimGeometry_VEC_CROSS1($c, $a, $b) {
    $c.$f0.data[0] = $a.$f.data[1] * $b.$f0.data[2] - $a.$f.data[2] * $b.$f0.data[1];
    $c.$f0.data[1] = $a.$f.data[2] * $b.$f0.data[0] - $a.$f.data[0] * $b.$f0.data[2];
    $c.$f0.data[2] = $a.$f.data[0] * $b.$f0.data[1] - $a.$f.data[1] * $b.$f0.data[0];
}
function oooig_GimGeometry_IDENTIFY_MATRIX_4X4($m) {
    $m.$f1.data[oooig_GimGeometry_M(0, 0)] = 1.0;
    $m.$f1.data[oooig_GimGeometry_M(0, 1)] = 0.0;
    $m.$f1.data[oooig_GimGeometry_M(0, 2)] = 0.0;
    $m.$f1.data[oooig_GimGeometry_M(0, 3)] = 0.0;
    $m.$f1.data[oooig_GimGeometry_M(1, 0)] = 0.0;
    $m.$f1.data[oooig_GimGeometry_M(1, 1)] = 1.0;
    $m.$f1.data[oooig_GimGeometry_M(1, 2)] = 0.0;
    $m.$f1.data[oooig_GimGeometry_M(1, 3)] = 0.0;
    $m.$f1.data[oooig_GimGeometry_M(2, 0)] = 0.0;
    $m.$f1.data[oooig_GimGeometry_M(2, 1)] = 0.0;
    $m.$f1.data[oooig_GimGeometry_M(2, 2)] = 1.0;
    $m.$f1.data[oooig_GimGeometry_M(2, 3)] = 0.0;
    $m.$f1.data[oooig_GimGeometry_M(3, 0)] = 0.0;
    $m.$f1.data[oooig_GimGeometry_M(3, 1)] = 0.0;
    $m.$f1.data[oooig_GimGeometry_M(3, 2)] = 0.0;
    $m.$f1.data[oooig_GimGeometry_M(3, 3)] = 1.0;
}
function oooig_GimGeometry_COPY_MATRIX_4X4($b, $a) {
    $b.$f1.data[oooig_GimGeometry_M(0, 0)] = $a.$f1.data[oooig_GimGeometry_M(0, 0)];
    $b.$f1.data[oooig_GimGeometry_M(0, 1)] = $a.$f1.data[oooig_GimGeometry_M(0, 1)];
    $b.$f1.data[oooig_GimGeometry_M(0, 2)] = $a.$f1.data[oooig_GimGeometry_M(0, 2)];
    $b.$f1.data[oooig_GimGeometry_M(0, 3)] = $a.$f1.data[oooig_GimGeometry_M(0, 3)];
    $b.$f1.data[oooig_GimGeometry_M(1, 0)] = $a.$f1.data[oooig_GimGeometry_M(1, 0)];
    $b.$f1.data[oooig_GimGeometry_M(1, 1)] = $a.$f1.data[oooig_GimGeometry_M(1, 1)];
    $b.$f1.data[oooig_GimGeometry_M(1, 2)] = $a.$f1.data[oooig_GimGeometry_M(1, 2)];
    $b.$f1.data[oooig_GimGeometry_M(1, 3)] = $a.$f1.data[oooig_GimGeometry_M(1, 3)];
    $b.$f1.data[oooig_GimGeometry_M(2, 0)] = $a.$f1.data[oooig_GimGeometry_M(2, 0)];
    $b.$f1.data[oooig_GimGeometry_M(2, 1)] = $a.$f1.data[oooig_GimGeometry_M(2, 1)];
    $b.$f1.data[oooig_GimGeometry_M(2, 2)] = $a.$f1.data[oooig_GimGeometry_M(2, 2)];
    $b.$f1.data[oooig_GimGeometry_M(2, 3)] = $a.$f1.data[oooig_GimGeometry_M(2, 3)];
    $b.$f1.data[oooig_GimGeometry_M(3, 0)] = $a.$f1.data[oooig_GimGeometry_M(3, 0)];
    $b.$f1.data[oooig_GimGeometry_M(3, 1)] = $a.$f1.data[oooig_GimGeometry_M(3, 1)];
    $b.$f1.data[oooig_GimGeometry_M(3, 2)] = $a.$f1.data[oooig_GimGeometry_M(3, 2)];
    $b.$f1.data[oooig_GimGeometry_M(3, 3)] = $a.$f1.data[oooig_GimGeometry_M(3, 3)];
}
function oooig_GimGeometry_MAT_DOT_VEC_3X4($p, $m, $v) {
    $p.$f.data[0] = $m.$f1.data[oooig_GimGeometry_M(0, 0)] * $v.$f.data[0] + $m.$f1.data[oooig_GimGeometry_M(0, 1)] * $v.$f.data[1] + $m.$f1.data[oooig_GimGeometry_M(0, 2)] * $v.$f.data[2] + $m.$f1.data[oooig_GimGeometry_M(0, 3)];
    $p.$f.data[1] = $m.$f1.data[oooig_GimGeometry_M(1, 0)] * $v.$f.data[0] + $m.$f1.data[oooig_GimGeometry_M(1, 1)] * $v.$f.data[1] + $m.$f1.data[oooig_GimGeometry_M(1, 2)] * $v.$f.data[2] + $m.$f1.data[oooig_GimGeometry_M(1, 3)];
    $p.$f.data[2] = $m.$f1.data[oooig_GimGeometry_M(2, 0)] * $v.$f.data[0] + $m.$f1.data[oooig_GimGeometry_M(2, 1)] * $v.$f.data[1] + $m.$f1.data[oooig_GimGeometry_M(2, 2)] * $v.$f.data[2] + $m.$f1.data[oooig_GimGeometry_M(2, 3)];
}
function oooig_GimGeometry_INVALIDATE_AABB($aabb) {
    $aabb.$minX = Infinity;
    $aabb.$maxX = (-Infinity);
    $aabb.$minY = Infinity;
    $aabb.$maxY = (-Infinity);
    $aabb.$minZ = Infinity;
    $aabb.$maxZ = (-Infinity);
}
function oooig_GimGeometry_AABB_COPY($dest_aabb, $src_aabb) {
    $dest_aabb.$minX = $src_aabb.$minX;
    $dest_aabb.$maxX = $src_aabb.$maxX;
    $dest_aabb.$minY = $src_aabb.$minY;
    $dest_aabb.$maxY = $src_aabb.$maxY;
    $dest_aabb.$minZ = $src_aabb.$minZ;
    $dest_aabb.$maxZ = $src_aabb.$maxZ;
}
function oooig_GimGeometry_COMPUTEAABB_FOR_TRIANGLE($aabb, $V1, $V2, $V3) {
    $aabb.$minX = oooig_GimMath_MIN3($V1.$f.data[0], $V2.$f.data[0], $V3.$f.data[0]);
    $aabb.$maxX = oooig_GimMath_MAX3($V1.$f.data[0], $V2.$f.data[0], $V3.$f.data[0]);
    $aabb.$minY = oooig_GimMath_MIN3($V1.$f.data[1], $V2.$f.data[1], $V3.$f.data[1]);
    $aabb.$maxY = oooig_GimMath_MAX3($V1.$f.data[1], $V2.$f.data[1], $V3.$f.data[1]);
    $aabb.$minZ = oooig_GimMath_MIN3($V1.$f.data[2], $V2.$f.data[2], $V3.$f.data[2]);
    $aabb.$maxZ = oooig_GimMath_MAX3($V1.$f.data[2], $V2.$f.data[2], $V3.$f.data[2]);
}
function oooig_GimGeometry_MERGEBOXES($destaabb, $aabb) {
    $destaabb.$minX = oooig_GimMath_MIN($aabb.$minX, $destaabb.$minX);
    $destaabb.$minY = oooig_GimMath_MIN($aabb.$minY, $destaabb.$minY);
    $destaabb.$minZ = oooig_GimMath_MIN($aabb.$minZ, $destaabb.$minZ);
    $destaabb.$maxX = oooig_GimMath_MAX($aabb.$maxX, $destaabb.$maxX);
    $destaabb.$maxY = oooig_GimMath_MAX($aabb.$maxY, $destaabb.$maxY);
    $destaabb.$maxZ = oooig_GimMath_MAX($aabb.$maxZ, $destaabb.$maxZ);
}
function oooig_GimGeometry_BOXINTERSECTION($aabb1, $aabb2, $iaabb) {
    $iaabb.$minX = oooig_GimMath_MAX($aabb1.$minX, $aabb2.$minX);
    $iaabb.$minY = oooig_GimMath_MAX($aabb1.$minY, $aabb2.$minY);
    $iaabb.$minZ = oooig_GimMath_MAX($aabb1.$minZ, $aabb2.$minZ);
    $iaabb.$maxX = oooig_GimMath_MIN($aabb1.$maxX, $aabb2.$maxX);
    $iaabb.$maxY = oooig_GimMath_MIN($aabb1.$maxY, $aabb2.$maxY);
    $iaabb.$maxZ = oooig_GimMath_MIN($aabb1.$maxZ, $aabb2.$maxZ);
}
function oooig_GimGeometry_AABBCOLLISION($aabb1, $aabb2) {
    if ($aabb1.$minX <= $aabb2.$maxX && $aabb1.$maxX >= $aabb2.$minX && $aabb1.$minY <= $aabb2.$maxY && $aabb1.$maxY >= $aabb2.$minY && $aabb1.$minZ <= $aabb2.$maxZ && $aabb1.$maxZ >= $aabb2.$minZ)
        return 1;
    return 0;
}
function oooig_GimGeometry_AXIS_INTERSECT($min, $max, $a, $d, $tfirst, $tlast, $is_intersected) {
    var $a0, $a1, var$10;
    if (oooig_GimMath_IS_ZERO($d))
        $is_intersected.$b = $a >= $min && $a <= $max ? 1 : 0;
    else {
        $a0 = ($min - $a) / $d;
        $a1 = ($max - $a) / $d;
        if ($a0 <= $a1) {
            var$10 = $a1;
            $a1 = $a0;
            $a0 = var$10;
        }
        $tfirst.$d0 = oooig_GimMath_MAX($a1, $tfirst.$d0);
        $tlast.$d0 = oooig_GimMath_MIN($a0, $tlast.$d0);
        if ($tlast.$d0 >= $tfirst.$d0)
            $is_intersected.$b = 1;
        else
            $is_intersected.$b = 0;
    }
}
function oooig_GimGeometry_BOX_INTERSECTS_RAY($aabb, $vorigin, $vdir, $tparam, $tmax, $is_intersected) {
    var $_tfirst, $_tlast;
    $_tfirst = oooicj_RefFloat__init_(0.0);
    $_tlast = oooicj_RefFloat__init_($tmax);
    oooig_GimGeometry_AXIS_INTERSECT($aabb.$minX, $aabb.$maxX, $vorigin.$f.data[0], $vdir.$f.data[0], $_tfirst, $_tlast, $is_intersected);
    if ($is_intersected.$b)
        oooig_GimGeometry_AXIS_INTERSECT($aabb.$minY, $aabb.$maxY, $vorigin.$f.data[1], $vdir.$f.data[1], $_tfirst, $_tlast, $is_intersected);
    if ($is_intersected.$b)
        oooig_GimGeometry_AXIS_INTERSECT($aabb.$minZ, $aabb.$maxZ, $vorigin.$f.data[2], $vdir.$f.data[2], $_tfirst, $_tlast, $is_intersected);
    $tparam.$d0 = $_tfirst.$d0;
}
function oooig_GimGeometry_AABB_PROJECTION_INTERVAL($aabb, $direction, $vmin, $vmax) {
    var $_center, var$6, $_extend, var$8, $_fOrigin, var$10, var$11, var$12, $_fMaximumExtent;
    $_center = $rt_createFloatArray(3);
    var$6 = $_center.data;
    var$6[0] = ($aabb.$minX + $aabb.$maxX) * 0.5;
    var$6[1] = ($aabb.$minY + $aabb.$maxY) * 0.5;
    var$6[2] = ($aabb.$minZ + $aabb.$maxZ) * 0.5;
    $_extend = $rt_createFloatArray(3);
    var$8 = $_extend.data;
    var$8[0] = $aabb.$maxX - var$6[0];
    var$8[1] = $aabb.$maxY - var$6[1];
    var$8[2] = $aabb.$maxZ - var$6[2];
    $_fOrigin = oooig_GimGeometry_VEC_DOT2($direction, $_center);
    var$10 = var$8[0] * jl_Math_abs0($direction.$f0.data[0]);
    var$11 = var$8[1];
    var$12 = $direction.$f0.data[1];
    var$10 = var$10 + var$11 * jl_Math_abs0(var$12);
    var$11 = var$8[2];
    var$12 = $direction.$f0.data[2];
    $_fMaximumExtent = var$10 + var$11 * jl_Math_abs0(var$12);
    $vmin.$d0 = $_fOrigin - $_fMaximumExtent;
    $vmax.$d0 = $_fOrigin + $_fMaximumExtent;
}
function oooig_GimGeometry_PLANE_CLASSIFY_BOX($plane, $aabb) {
    var $_fmin, $_fmax;
    $_fmin = oooicj_RefFloat__init_0();
    $_fmax = oooicj_RefFloat__init_0();
    oooig_GimGeometry_AABB_PROJECTION_INTERVAL($aabb, $plane, $_fmin, $_fmax);
    if ($plane.$f0.data[3] >= $_fmax.$d0)
        return 0;
    if ($plane.$f0.data[3] + 9.999999974752427E-7 < $_fmin.$d0)
        return 2;
    return 1;
}
function oooig_GimGeometry_TRIANGLE_NORMAL($v1, $v2, $v3, $n) {
    var $_dif1, $_dif2;
    $_dif1 = oooig_GimGeometry$vec3f__init_();
    $_dif2 = oooig_GimGeometry$vec3f__init_();
    oooig_GimGeometry_VEC_DIFF($_dif1, $v2, $v1);
    oooig_GimGeometry_VEC_DIFF($_dif2, $v3, $v1);
    oooig_GimGeometry_VEC_CROSS0($n, $_dif1, $_dif2);
    oooig_GimGeometry_VEC_NORMALIZE($n);
}
function oooig_GimGeometry_TRIANGLE_PLANE($v1, $v2, $v3, $plane) {
    oooig_GimGeometry_TRIANGLE_NORMAL($v1, $v2, $v3, $plane);
    $plane.$f0.data[3] = oooig_GimGeometry_VEC_DOT0($plane, $v1);
}
function oooig_GimGeometry_EDGE_PLANE($e1, $e2, $n, $plane) {
    var $_dif;
    $_dif = oooig_GimGeometry$vec3f__init_();
    oooig_GimGeometry_VEC_DIFF($_dif, $e2, $e1);
    oooig_GimGeometry_VEC_CROSS1($plane, $_dif, $n);
    oooig_GimGeometry_VEC_NORMALIZE($plane);
    $plane.$f0.data[3] = oooig_GimGeometry_VEC_DOT0($plane, $e1);
}
function oooig_GimGeometry_DISTANCE_PLANE_POINT($plane, $point) {
    return oooig_GimGeometry_VEC_DOT0($plane, $point) - $plane.$f0.data[3];
}
function oooig_GimGeometry_POINT_IN_HULL_TZ($point, $planes, $pos, $plane_count) {
    var $outside, $_i, $_dis;
    $outside = 0;
    $_i = 0;
    while (true) {
        $_dis = oooig_GimGeometry_DISTANCE_PLANE_POINT($planes.data[$_i + $pos | 0], $point);
        if ($_dis > 0.0)
            $outside = 1;
        $_i = $_i + 1 | 0;
        if ($_i >= $plane_count)
            break;
        if ($outside)
            break;
    }
    return $outside;
}
function oooig_GimGeometry_PLANE_CLIP_SEGMENT($s1, $s2, $plane, $clipped) {
    var $_dis1, $_dis2;
    $_dis1 = oooig_GimGeometry_DISTANCE_PLANE_POINT($plane, $s1);
    oooig_GimGeometry_VEC_DIFF($clipped, $s2, $s1);
    $_dis2 = oooig_GimGeometry_VEC_DOT0($plane, $clipped);
    oooig_GimGeometry_VEC_SCALE($clipped,  -$_dis1 / $_dis2, $clipped);
    oooig_GimGeometry_VEC_SUM($clipped, $clipped, $s1);
}
function oooig_GimGeometry_PLANE_CLIP_SEGMENT2($s1, $s2, $plane, $clipped) {
    var $_dis1, $_dis2, $intersection_type, var$8;
    $_dis1 = oooig_GimGeometry_DISTANCE_PLANE_POINT($plane, $s1);
    $_dis2 = oooig_GimGeometry_DISTANCE_PLANE_POINT($plane, $s2);
    if ($_dis1 > (-1.0000000116860974E-7) && $_dis2 > (-1.0000000116860974E-7))
        $intersection_type = $_dis1 >= $_dis2 ? 1 : 0;
    else if ($_dis1 < 1.0000000116860974E-7 && $_dis2 < 1.0000000116860974E-7)
        $intersection_type = $_dis1 <= $_dis2 ? 3 : 2;
    else {
        $intersection_type = $_dis1 >= $_dis2 ? 5 : 4;
        oooig_GimGeometry_VEC_DIFF($clipped, $s2, $s1);
        var$8 = oooig_GimGeometry_VEC_DOT0($plane, $clipped);
        oooig_GimGeometry_VEC_SCALE($clipped,  -$_dis1 / var$8, $clipped);
        oooig_GimGeometry_VEC_SUM($clipped, $clipped, $s1);
    }
    return $intersection_type;
}
function oooig_GimGeometry_PLANE_CLIP_SEGMENT_CLOSEST($s1, $s2, $plane, $clipped1, $clipped2) {
    var $intersection_type;
    $intersection_type = oooig_GimGeometry_PLANE_CLIP_SEGMENT2($s1, $s2, $plane, $clipped1);
    if (!$intersection_type) {
        oooig_GimGeometry_VEC_COPY($clipped1, $s1);
        oooig_GimGeometry_VEC_COPY($clipped2, $s2);
    } else if ($intersection_type == 1) {
        oooig_GimGeometry_VEC_COPY($clipped1, $s2);
        oooig_GimGeometry_VEC_COPY($clipped2, $s1);
    } else if ($intersection_type == 2) {
        oooig_GimGeometry_VEC_COPY($clipped1, $s1);
        oooig_GimGeometry_VEC_COPY($clipped2, $s2);
    } else if ($intersection_type == 3) {
        oooig_GimGeometry_VEC_COPY($clipped1, $s2);
        oooig_GimGeometry_VEC_COPY($clipped2, $s1);
    } else if ($intersection_type == 4)
        oooig_GimGeometry_VEC_COPY($clipped2, $s1);
    else if ($intersection_type == 5)
        oooig_GimGeometry_VEC_COPY($clipped2, $s2);
    return $intersection_type;
}
function oooig_GimGeometry_PLANE_MINOR_AXES($plane, $i0, $i1) {
    var $A, var$5;
    $A = $rt_createFloatArray(3);
    var$5 = $A.data;
    var$5[0] = jl_Math_abs0($plane.$f0.data[0]);
    var$5[1] = jl_Math_abs0($plane.$f0.data[1]);
    var$5[2] = jl_Math_abs0($plane.$f0.data[2]);
    if (var$5[0] <= var$5[1]) {
        if (var$5[2] <= var$5[1]) {
            $i0.$i = 0;
            $i1.$i = 2;
        } else {
            $i0.$i = 0;
            $i1.$i = 1;
        }
    } else if (var$5[0] <= var$5[2]) {
        $i0.$i = 0;
        $i1.$i = 1;
    } else {
        $i0.$i = 1;
        $i1.$i = 2;
    }
}
function oooig_GimGeometry_RAY_PLANE_COLLISION($plane, $vDir, $vPoint, $pout, $tparam, $does_intersect) {
    var $_dotdir, $_dis;
    $_dotdir = oooig_GimGeometry_VEC_DOT0($plane, $vDir);
    if ($_dotdir < 1.0000000116860974E-7)
        $does_intersect.$b = 0;
    else {
        $_dis = oooig_GimGeometry_DISTANCE_PLANE_POINT($plane, $vPoint);
        $tparam.$d0 =  -$_dis / $_dotdir;
        oooig_GimGeometry_VEC_SCALE($pout, $tparam.$d0, $vDir);
        oooig_GimGeometry_VEC_SUM($pout, $vPoint, $pout);
        $does_intersect.$b = 1;
    }
}
function oooig_GimGeometry_LINE_PLANE_COLLISION($plane, $vDir, $vPoint, $pout, $tparam, $tmin, $tmax) {
    $tparam.$d0 =  -oooig_GimGeometry_DISTANCE_PLANE_POINT($plane, $vPoint);
    $tparam.$d0 = $tparam.$d0 / oooig_GimGeometry_VEC_DOT0($plane, $vDir);
    $tparam.$d0 = oooig_GimMath_CLAMP($tparam.$d0, $tmin, $tmax);
    oooig_GimGeometry_VEC_SCALE($pout, $tparam.$d0, $vDir);
    oooig_GimGeometry_VEC_SUM($pout, $vPoint, $pout);
}
function oooig_GimGeometry_CLOSEST_POINT_ON_SEGMENT($cp, $v, $e1, $e2) {
    var $_n, $_scalar, var$7;
    $_n = oooig_GimGeometry$vec3f__init_();
    oooig_GimGeometry_VEC_DIFF($_n, $e2, $e1);
    oooig_GimGeometry_VEC_DIFF($cp, $v, $e1);
    $_scalar = oooig_GimGeometry_VEC_DOT($cp, $_n);
    var$7 = $_scalar / oooig_GimGeometry_VEC_DOT($_n, $_n);
    if (var$7 < 0.0)
        oooig_GimGeometry_VEC_COPY($cp, $e1);
    else if (var$7 > 1.0)
        oooig_GimGeometry_VEC_COPY($cp, $e2);
    else {
        oooig_GimGeometry_VEC_SCALE($cp, var$7, $_n);
        oooig_GimGeometry_VEC_SUM($cp, $cp, $e1);
    }
}
function oooig_GimGeometry_SEGMENT_COLLISION($vA1, $vA2, $vB1, $vB2, $vPointA, $vPointB) {
    var $_AD, $_BD, $_N, $_M, $_tp;
    $_AD = oooig_GimGeometry$vec3f__init_();
    $_BD = oooig_GimGeometry$vec3f__init_();
    $_N = oooig_GimGeometry$vec3f__init_();
    $_M = oooig_GimGeometry$vec4f__init_();
    oooig_GimGeometry_VEC_DIFF($_AD, $vA2, $vA1);
    oooig_GimGeometry_VEC_DIFF($_BD, $vB2, $vB1);
    oooig_GimGeometry_VEC_CROSS($_N, $_AD, $_BD);
    oooig_GimGeometry_VEC_CROSS0($_M, $_N, $_BD);
    $_M.$f0.data[3] = oooig_GimGeometry_VEC_DOT0($_M, $vB1);
    $_tp = oooicj_RefFloat__init_0();
    oooig_GimGeometry_LINE_PLANE_COLLISION($_M, $_AD, $vA1, $vPointA, $_tp, 0.0, 1.0);
    oooig_GimGeometry_VEC_DIFF($vPointB, $vPointA, $vB1);
    $_tp.$d0 = oooig_GimGeometry_VEC_DOT($vPointB, $_BD);
    $_tp.$d0 = $_tp.$d0 / oooig_GimGeometry_VEC_DOT($_BD, $_BD);
    $_tp.$d0 = oooig_GimMath_CLAMP($_tp.$d0, 0.0, 1.0);
    oooig_GimGeometry_VEC_SCALE($vPointB, $_tp.$d0, $_BD);
    oooig_GimGeometry_VEC_SUM($vPointB, $vPointB, $vB1);
}
function oktu_IAsyncList$DefaultImpls() {
    jl_Object.call(this);
}
function oktu_IAsyncList$DefaultImpls_ready($$this, $index) {
    var $tmp_0, $$this$forEach$iv, var$5, $element$iv, $it;
    $$this.$getReady().$add1(jl_Integer_valueOf($index));
    $tmp_0 = ju_ArrayList__init_();
    $$this$forEach$iv = $$this.$getRequests();
    var$5 = $$this$forEach$iv.$iterator();
    while (var$5.$hasNext()) {
        $element$iv = var$5.$next();
        $it = $element$iv;
        if (k_Pair_getFirst($it).$intValue() != $index)
            $tmp_0.$add1($it);
        else
            k_Pair_getSecond($it).$invoke6();
    }
    $$this.$getRequests().$clear();
    $$this.$getRequests().$addAll($tmp_0);
    $tmp_0.$clear();
}
function oktu_IAsyncList$DefaultImpls_getOrWait($$this, $index, $call) {
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    if ($$this.$getReady().$contains1(jl_Integer_valueOf($index)))
        $call.$invoke1($$this.$get1($index));
    else
        $$this.$getRequests().$add1(k_Pair__init_(jl_Integer_valueOf($index), oktu_IAsyncList$getOrWait$1__init_($$this, $call, $index)));
}
function ju_Iterator() {
}
function ju_AbstractList$1() {
    var a = this; jl_Object.call(a);
    a.$index0 = 0;
    a.$modCount1 = 0;
    a.$size2 = 0;
    a.$removeIndex = 0;
    a.$this$036 = null;
}
function ju_AbstractList$1__init_(var_0) {
    var var_1 = new ju_AbstractList$1();
    ju_AbstractList$1__init_0(var_1, var_0);
    return var_1;
}
function ju_AbstractList$1__init_0($this, $this$0) {
    $this.$this$036 = $this$0;
    jl_Object__init_0($this);
    $this.$modCount1 = $this.$this$036.$modCount2;
    $this.$size2 = $this.$this$036.$size();
    $this.$removeIndex = (-1);
}
function ju_AbstractList$1_hasNext($this) {
    return $this.$index0 >= $this.$size2 ? 0 : 1;
}
function ju_AbstractList$1_next($this) {
    var var$1, var$2;
    ju_AbstractList$1_checkConcurrentModification($this);
    $this.$removeIndex = $this.$index0;
    var$1 = $this.$this$036;
    var$2 = $this.$index0;
    $this.$index0 = var$2 + 1 | 0;
    return var$1.$get1(var$2);
}
function ju_AbstractList$1_checkConcurrentModification($this) {
    if ($this.$modCount1 >= $this.$this$036.$modCount2)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
}
function oktgg_GLTFCamera$read$3$4() {
    kji_Lambda.call(this);
    this.$this$037 = null;
}
function oktgg_GLTFCamera$read$3$4__init_(var_0) {
    var var_1 = new oktgg_GLTFCamera$read$3$4();
    oktgg_GLTFCamera$read$3$4__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFCamera$read$3$4_invoke(var$0, var$1) {
    oktgg_GLTFCamera$read$3$4_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFCamera$read$3$4_invoke0($this, $it) {
    oktgg_GLTFCamera_setZnear($this.$this$037.$this$038, $it);
    oktgg_GLTFCamera_getCamera($this.$this$037.$this$038).$setNear($it);
}
function oktgg_GLTFCamera$read$3$4__init_0(var$0, var$1) {
    var$0.$this$037 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFCamera$read$3$3() {
    kji_Lambda.call(this);
    this.$this$039 = null;
}
function oktgg_GLTFCamera$read$3$3__init_(var_0) {
    var var_1 = new oktgg_GLTFCamera$read$3$3();
    oktgg_GLTFCamera$read$3$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFCamera$read$3$3_invoke(var$0, var$1) {
    oktgg_GLTFCamera$read$3$3_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFCamera$read$3$3_invoke0($this, $it) {
    oktgg_GLTFCamera_setZfar($this.$this$039.$this$038, $it);
    oktgg_GLTFCamera_getCamera($this.$this$039.$this$038).$setFar($it);
}
function oktgg_GLTFCamera$read$3$3__init_0(var$0, var$1) {
    var$0.$this$039 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFCamera$read$3$2() {
    kji_Lambda.call(this);
    this.$this$040 = null;
}
function oktgg_GLTFCamera$read$3$2__init_(var_0) {
    var var_1 = new oktgg_GLTFCamera$read$3$2();
    oktgg_GLTFCamera$read$3$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFCamera$read$3$2_invoke(var$0, var$1) {
    oktgg_GLTFCamera$read$3$2_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFCamera$read$3$2_invoke0($this, $it) {
    oktgg_GLTFCamera_setYmag($this.$this$040.$this$038, $it);
}
function oktgg_GLTFCamera$read$3$2__init_0(var$0, var$1) {
    var$0.$this$040 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFCamera$read$3$1() {
    kji_Lambda.call(this);
    this.$this$041 = null;
}
function oktgg_GLTFCamera$read$3$1__init_(var_0) {
    var var_1 = new oktgg_GLTFCamera$read$3$1();
    oktgg_GLTFCamera$read$3$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFCamera$read$3$1_invoke(var$0, var$1) {
    oktgg_GLTFCamera$read$3$1_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFCamera$read$3$1_invoke0($this, $it) {
    oktgg_GLTFCamera_setXmag($this.$this$041.$this$038, $it);
}
function oktgg_GLTFCamera$read$3$1__init_0(var$0, var$1) {
    var$0.$this$041 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFCamera() {
    var a = this; jl_Object.call(a);
    a.$name14 = null;
    a.$type3 = null;
    a.$aspectRatio = 0.0;
    a.$yfov = 0.0;
    a.$zfar = 0.0;
    a.$znear = 0.0;
    a.$xmag = 0.0;
    a.$ymag = 0.0;
    a.$gltf1 = null;
    a.$elementIndex1 = 0;
    a.$camera0 = null;
}
function oktgg_GLTFCamera__init_(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFCamera();
    oktgg_GLTFCamera__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTFCamera__init_1(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgg_GLTFCamera();
    oktgg_GLTFCamera__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktgg_GLTFCamera_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name14 = $_set___;
}
function oktgg_GLTFCamera_setAspectRatio($this, $_set___) {
    $this.$aspectRatio = $_set___;
}
function oktgg_GLTFCamera_setYfov($this, $_set___) {
    $this.$yfov = $_set___;
}
function oktgg_GLTFCamera_setZfar($this, $_set___) {
    $this.$zfar = $_set___;
}
function oktgg_GLTFCamera_setZnear($this, $_set___) {
    $this.$znear = $_set___;
}
function oktgg_GLTFCamera_setXmag($this, $_set___) {
    $this.$xmag = $_set___;
}
function oktgg_GLTFCamera_setYmag($this, $_set___) {
    $this.$ymag = $_set___;
}
function oktgg_GLTFCamera_read($this, $json) {
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $json.$string($rt_s(17), oktgg_GLTFCamera$read$1__init_($this));
    $this.$type3 = $json.$string1($rt_s(370));
    $json.$obj($rt_s(441), oktgg_GLTFCamera$read$2__init_($this, $json));
    $json.$obj($rt_s(442), oktgg_GLTFCamera$read$3__init_($this, $json));
    oktgg_GLTFCamera_getGltf($this).$getCameras().$ready(oktgg_GLTFCamera_getElementIndex($this));
}
function oktgg_GLTFCamera_getGltf($this) {
    return $this.$gltf1;
}
function oktgg_GLTFCamera_getElementIndex($this) {
    return $this.$elementIndex1;
}
function oktgg_GLTFCamera_getCamera($this) {
    return $this.$camera0;
}
function oktgg_GLTFCamera__init_0($this, $gltf, $elementIndex, $camera) {
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($camera, $rt_s(42));
    jl_Object__init_0($this);
    $this.$gltf1 = $gltf;
    $this.$elementIndex1 = $elementIndex;
    $this.$camera0 = $camera;
    $this.$name14 = $rt_s(6);
    $this.$type3 = $rt_s(6);
}
function oktgg_GLTFCamera__init_2(var$0, var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 4)
        var$3 = oktgc_Camera__init_(null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null);
    oktgg_GLTFCamera__init_0(var$0, var$1, var$2, var$3);
}
function oooi_CollideTrimeshPlane() {
    jl_Object.call(this);
}
function oooi_CollideTrimeshPlane__init_() {
    var var_0 = new oooi_CollideTrimeshPlane();
    oooi_CollideTrimeshPlane__init_0(var_0);
    return var_0;
}
function oooi_CollideTrimeshPlane__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollideTrimeshPlane_dCollideTrimeshPlane($this, $o1, $o2, $flags, $contacts, $skip) {
    var var$6, $plane, $collision_result, $contactcount, $planecontact_results, $i, $pcontact;
    oooi_Common_dIASSERT($skip != 1 ? 0 : 1);
    var$6 = $flags & 65535;
    oooi_Common_dIASSERT(var$6 < 1 ? 0 : 1);
    $plane = oom_DVector4__init_();
    $o2.$getParams($plane);
    $o1.$recomputeAABB();
    $o2.$recomputeAABB();
    $collision_result = oooig_GimTrimesh_GIM_CREATE_TRIMESHPLANE_CONTACTS();
    oooi_DxGimpactCollision_gim_trimesh_plane_collisionODE($o1.$m_collision_trimesh, $plane, $collision_result);
    if (!$collision_result.$size()) {
        $collision_result.$GIM_DYNARRAY_DESTROY();
        return 0;
    }
    $contactcount = $collision_result.$size();
    if ($contactcount <= var$6)
        var$6 = $contactcount;
    else {
        ooo_OdeConfig_$callClinit();
        if (ooo_OdeConfig_ENABLE_CONTACT_SORTING)
            ju_Arrays_sort0($collision_result.$GIM_DYNARRAY_POINTER(), 0, $contactcount, oooi_CollideTrimeshPlane$1__init_($this));
    }
    $planecontact_results = $collision_result.$GIM_DYNARRAY_POINTER_V();
    $i = 0;
    while ($i < var$6) {
        $pcontact = ooo_DContactGeomBuffer_getSafe($contacts, $flags, $i);
        $pcontact.$pos0.$set14($planecontact_results.$at($i).$f0);
        oom_DVector3_set0($pcontact.$normal, $plane.$get01(), $plane.$get10(), $plane.$get20());
        $pcontact.$depth = $planecontact_results.$at($i).$f0.data[3];
        $pcontact.$g1 = $o1;
        $pcontact.$g2 = $o2;
        $pcontact.$side1 = (-1);
        $pcontact.$side2 = (-1);
        $i = $i + 1 | 0;
    }
    $collision_result.$GIM_DYNARRAY_DESTROY();
    return var$6;
}
function oooi_CollideTrimeshPlane_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideTrimeshPlane($o1, $o2, $flags, $contacts, 1);
}
function ooo_DContactGeom() {
    var a = this; jl_Object.call(a);
    a.$pos0 = null;
    a.$normal = null;
    a.$depth = 0.0;
    a.$g1 = null;
    a.$g2 = null;
    a.$side1 = 0;
    a.$side2 = 0;
}
function ooo_DContactGeom__init_() {
    var var_0 = new ooo_DContactGeom();
    ooo_DContactGeom__init_0(var_0);
    return var_0;
}
function ooo_DContactGeom__init_0($this) {
    jl_Object__init_0($this);
    $this.$pos0 = oom_DVector3__init_();
    $this.$normal = oom_DVector3__init_();
}
function ooo_DGeom$DNearCallback() {
}
function oooi_DxSpace$2() {
    jl_Object.call(this);
}
function oooi_DxSpace$2__init_() {
    var var_0 = new oooi_DxSpace$2();
    oooi_DxSpace$2__init_0(var_0);
    return var_0;
}
function oooi_DxSpace$2__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxSpace$2_call($this, $data, $g1, $g2) {
    oooi_DxSpace_swap_callback($data, $g1, $g2);
}
function oooi_DxSpace$1() {
    jl_Object.call(this);
}
function oooi_DxSpace$1__init_() {
    var var_0 = new oooi_DxSpace$1();
    oooi_DxSpace$1__init_0(var_0);
    return var_0;
}
function oooi_DxSpace$1__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxSpace$1_call($this, $data, $g1, $g2) {
    oooi_DxSpace_swap_callback($data, $g1, $g2);
}
function oooi_DxHashSpace$dxAABB() {
    var a = this; jl_Object.call(a);
    a.$level = 0;
    a.$dbounds = null;
    a.$geom0 = null;
    a.$index1 = 0;
}
function oooi_DxHashSpace$dxAABB__init_() {
    var var_0 = new oooi_DxHashSpace$dxAABB();
    oooi_DxHashSpace$dxAABB__init_0(var_0);
    return var_0;
}
function oooi_DxHashSpace$dxAABB__init_1(var_0) {
    var var_1 = new oooi_DxHashSpace$dxAABB();
    oooi_DxHashSpace$dxAABB__init_2(var_1, var_0);
    return var_1;
}
function oooi_DxHashSpace$dxAABB__init_0($this) {
    jl_Object__init_0($this);
    $this.$dbounds = $rt_createIntArray(6);
}
function oooi_DxHashSpace$dxAABB__init_2($this, $x0) {
    oooi_DxHashSpace$dxAABB__init_0($this);
}
function jnci_BufferedDecoder$Controller() {
    var a = this; jl_Object.call(a);
    a.$in = null;
    a.$out0 = null;
    a.$inPosition0 = 0;
    a.$outPosition0 = 0;
}
function jnci_BufferedDecoder$Controller__init_(var_0, var_1) {
    var var_2 = new jnci_BufferedDecoder$Controller();
    jnci_BufferedDecoder$Controller__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnci_BufferedDecoder$Controller__init_0($this, $in, $out) {
    jl_Object__init_0($this);
    $this.$in = $in;
    $this.$out0 = $out;
}
function jnci_BufferedDecoder$Controller_hasMoreInput($this) {
    return jn_Buffer_hasRemaining($this.$in);
}
function jnci_BufferedDecoder$Controller_hasMoreOutput($this, $sz) {
    return jn_Buffer_remaining($this.$out0) < $sz ? 0 : 1;
}
function jnci_BufferedDecoder$Controller_setInPosition($this, $inPosition) {
    $this.$inPosition0 = $inPosition;
}
function jnci_BufferedDecoder$Controller_setOutPosition($this, $outPosition) {
    $this.$outPosition0 = $outPosition;
}
function jur_PossessiveQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
}
function jur_PossessiveQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveQuantifierSet();
    jur_PossessiveQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_PossessiveQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    a: {
        while (true) {
            if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound())
                break a;
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$4 < 1)
                break;
            $stringIndex = $stringIndex + var$4 | 0;
        }
    }
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
}
function jl_Short() {
    jl_Number.call(this);
    this.$value4 = 0;
}
var jl_Short_TYPE = null;
function jl_Short_$callClinit() {
    jl_Short_$callClinit = $rt_eraseClinit(jl_Short);
    jl_Short__clinit_();
}
function jl_Short__init_(var_0) {
    var var_1 = new jl_Short();
    jl_Short__init_0(var_1, var_0);
    return var_1;
}
function jl_Short__init_0($this, $value) {
    jl_Short_$callClinit();
    jl_Number__init_0($this);
    $this.$value4 = $value;
}
function jl_Short_intValue($this) {
    return $this.$value4;
}
function jl_Short_floatValue($this) {
    return $this.$value4;
}
function jl_Short_shortValue($this) {
    return $this.$value4;
}
function jl_Short_valueOf($value) {
    jl_Short_$callClinit();
    return jl_Short__init_($value);
}
function jl_Short_equals($this, $other) {
    return $other instanceof jl_Short && $other.$value4 == $this.$value4 ? 1 : 0;
}
function jl_Short_hashCode($this) {
    return $this.$value4;
}
function jl_Short_compare($a, $b) {
    jl_Short_$callClinit();
    return $a - $b | 0;
}
function jl_Short_compareTo($this, $other) {
    return jl_Short_compare($this.$value4, $other.$value4);
}
function jl_Short_compareTo0($this, var$1) {
    return $this.$compareTo4(var$1);
}
function jl_Short__clinit_() {
    jl_Short_TYPE = $rt_cls($rt_shortcls());
}
function jl_ReflectiveOperationException() {
    jl_Exception.call(this);
}
function jl_ReflectiveOperationException__init_() {
    var var_0 = new jl_ReflectiveOperationException();
    jl_ReflectiveOperationException__init_0(var_0);
    return var_0;
}
function jl_ReflectiveOperationException__init_0($this) {
    jl_Exception__init_0($this);
}
function jl_InstantiationException() {
    jl_ReflectiveOperationException.call(this);
}
function jl_InstantiationException__init_() {
    var var_0 = new jl_InstantiationException();
    jl_InstantiationException__init_0(var_0);
    return var_0;
}
function jl_InstantiationException__init_0($this) {
    jl_ReflectiveOperationException__init_0($this);
}
function ooo_OdeHelper() {
    jl_Object.call(this);
}
var ooo_OdeHelper_ODE = null;
function ooo_OdeHelper_$callClinit() {
    ooo_OdeHelper_$callClinit = $rt_eraseClinit(ooo_OdeHelper);
    ooo_OdeHelper__clinit_();
}
function ooo_OdeHelper__init_() {
    var var_0 = new ooo_OdeHelper();
    ooo_OdeHelper__init_0(var_0);
    return var_0;
}
function ooo_OdeHelper__init_0($this) {
    ooo_OdeHelper_$callClinit();
    jl_Object__init_0($this);
}
function ooo_OdeHelper_createJointGroup() {
    ooo_OdeHelper_$callClinit();
    return oooij_DxJointGroup_dJointGroupCreate((-1));
}
function ooo_OdeHelper_createContactJoint($world, $group, $c) {
    ooo_OdeHelper_$callClinit();
    return ooo_OdeHelper_ODE.$dJointCreateContact($world, $group, $c);
}
function ooo_OdeHelper_createWorld() {
    ooo_OdeHelper_$callClinit();
    return oooi_DxWorld_dWorldCreate();
}
function ooo_OdeHelper_createMass() {
    ooo_OdeHelper_$callClinit();
    return oooi_DxMass__init_();
}
function ooo_OdeHelper_createBody($w) {
    ooo_OdeHelper_$callClinit();
    return oooi_DxBody_dBodyCreate($w);
}
function ooo_OdeHelper_createHashSpace($space) {
    ooo_OdeHelper_$callClinit();
    return oooi_DxHashSpace_dHashSpaceCreate($space);
}
function ooo_OdeHelper_createBox($space, $lx, $ly, $lz) {
    ooo_OdeHelper_$callClinit();
    return oooi_DxBox_dCreateBox($space, $lx, $ly, $lz);
}
function ooo_OdeHelper_createSphere($space, $radius) {
    ooo_OdeHelper_$callClinit();
    return oooi_DxSphere_dCreateSphere($space, $radius);
}
function ooo_OdeHelper_initODE2($uiInitFlags) {
    ooo_OdeHelper_$callClinit();
    return !oooi_OdeInit_dInitODE2($uiInitFlags) ? 0 : 1;
}
function ooo_OdeHelper_collide($o1, $o2, $flags, $contacts) {
    ooo_OdeHelper_$callClinit();
    return oooi_DxGeom_dCollide($o1, $o2, $flags, $contacts, 1);
}
function ooo_OdeHelper_areConnectedExcluding($body1, $body2, $jointType) {
    var var$4, var$5;
    ooo_OdeHelper_$callClinit();
    var$4 = ooo_OdeHelper_ODE;
    var$5 = $rt_createArray(jl_Class, 1);
    var$5.data[0] = $jointType;
    return var$4.$_dAreConnectedExcluding($body1, $body2, var$5);
}
function ooo_OdeHelper_createTriMesh($space, $data, $callback, $arrayCallback, $rayCallback) {
    ooo_OdeHelper_$callClinit();
    return oooi_DxTriMesh_dCreateTriMesh($space, $data, $callback, $arrayCallback, $rayCallback);
}
function ooo_OdeHelper_createTriMeshData() {
    ooo_OdeHelper_$callClinit();
    return oooi_DxTriMeshData_dGeomTriMeshDataCreate();
}
function ooo_OdeHelper__clinit_() {
    ooo_OdeHelper_ODE = oooi_OdeFactoryImpl__init_();
}
function oooij_OdeJointsFactoryImpl() {
    ooo_OdeHelper.call(this);
}
function oooij_OdeJointsFactoryImpl__init_() {
    var var_0 = new oooij_OdeJointsFactoryImpl();
    oooij_OdeJointsFactoryImpl__init_0(var_0);
    return var_0;
}
function oooij_OdeJointsFactoryImpl__init_0($this) {
    ooo_OdeHelper__init_0($this);
}
function oooij_OdeJointsFactoryImpl_createJoint($this, $j, $group) {
    if ($group !== null)
        $group.$addJoint($j);
    return $j;
}
function oooij_OdeJointsFactoryImpl_dJointCreateContact($this, $w, $group, $c) {
    var var$4, var$5, $j;
    var$4 = $rt_createArray(jl_Object, 2);
    var$5 = var$4.data;
    var$5[0] = $w;
    var$5[1] = $c;
    oooi_Common_dAASSERT(var$4);
    $j = oooij_OdeJointsFactoryImpl_createJoint($this, oooij_DxJointContact__init_($w), $group);
    $j.$contact = $c;
    return $j;
}
function oooij_OdeJointsFactoryImpl__dAreConnectedExcluding($this, $b1, $b2, $jointType) {
    var $n, var$5, $found, $clsJoint, var$8, var$9, $cls;
    $n = oooicj_Ref_get($b1.$firstjoint);
    while ($n !== null) {
        if ($n.$body0 === $b2) {
            var$5 = $jointType.data;
            $found = 0;
            $clsJoint = jl_Object_getClass($n.$joint);
            var$8 = var$5.length;
            var$9 = 0;
            a: {
                while (var$9 < var$8) {
                    $cls = var$5[var$9];
                    if ($cls === $clsJoint) {
                        $found = 1;
                        break a;
                    }
                    var$9 = var$9 + 1 | 0;
                }
            }
            if (!$found)
                return 1;
        }
        $n = $n.$next2;
    }
    return 0;
}
function oooi_OdeFactoryImpl() {
    oooij_OdeJointsFactoryImpl.call(this);
}
var oooi_OdeFactoryImpl_g_world_check_tag_generator = 0;
var oooi_OdeFactoryImpl_ode_configuration = null;
function oooi_OdeFactoryImpl_$callClinit() {
    oooi_OdeFactoryImpl_$callClinit = $rt_eraseClinit(oooi_OdeFactoryImpl);
    oooi_OdeFactoryImpl__clinit_();
}
function oooi_OdeFactoryImpl__init_() {
    var var_0 = new oooi_OdeFactoryImpl();
    oooi_OdeFactoryImpl__init_0(var_0);
    return var_0;
}
function oooi_OdeFactoryImpl__init_0($this) {
    oooi_OdeFactoryImpl_$callClinit();
    oooij_OdeJointsFactoryImpl__init_0($this);
}
function oooi_OdeFactoryImpl_REGISTER_EXTENSION($s) {
    oooi_OdeFactoryImpl_$callClinit();
    oooi_OdeFactoryImpl_ode_configuration = jl_StringBuilder__init_().$append(oooi_OdeFactoryImpl_ode_configuration).$append($s).$append($rt_s(443)).$toString();
}
function oooi_OdeFactoryImpl__clinit_() {
    oooi_OdeFactoryImpl_g_world_check_tag_generator = 0;
    oooi_OdeFactoryImpl_ode_configuration = $rt_s(444);
    oooi_OdeFactoryImpl_REGISTER_EXTENSION($rt_s(445));
    oooi_OdeFactoryImpl_REGISTER_EXTENSION($rt_s(446));
    oooi_OdeFactoryImpl_ode_configuration = jl_StringBuilder__init_().$append(oooi_OdeFactoryImpl_ode_configuration).$append($rt_s(447)).$toString();
}
function oktu_Pool() {
    var a = this; jl_Object.call(a);
    a.$freeInternal = null;
    a.$usedInternal = null;
    a.$create = null;
    a.$reset0 = null;
}
function oktu_Pool__init_0(var_0, var_1) {
    var var_2 = new oktu_Pool();
    oktu_Pool__init_1(var_2, var_0, var_1);
    return var_2;
}
function oktu_Pool__init_(var_0) {
    var var_1 = new oktu_Pool();
    oktu_Pool__init_2(var_1, var_0);
    return var_1;
}
function oktu_Pool_getFree($this) {
    return $this.$freeInternal;
}
function oktu_Pool_getUsed($this) {
    return $this.$usedInternal;
}
function oktu_Pool_get($this) {
    var $obj, var$2;
    if (!(oktu_Pool_getFree($this).$isEmpty() ? 0 : 1))
        $obj = $this.$create.$invoke6();
    else {
        $obj = oktu_Pool_getFree($this).$get1(0);
        $this.$freeInternal.$remove1($obj);
    }
    var$2 = $this.$reset0;
    if (var$2 !== null)
        var$2.$invoke1($obj);
    $this.$usedInternal.$add1($obj);
    return $obj;
}
function oktu_Pool_free($this, $instance) {
    $this.$freeInternal.$add1($instance);
    $this.$usedInternal.$remove1($instance);
}
function oktu_Pool__init_1($this, $create, $reset) {
    kji_Intrinsics_checkParameterIsNotNull($create, $rt_s(448));
    jl_Object__init_0($this);
    $this.$create = $create;
    $this.$reset0 = $reset;
    $this.$freeInternal = ju_ArrayList__init_();
    $this.$usedInternal = ju_ArrayList__init_();
}
function oktu_Pool__init_2($this, $create) {
    kji_Intrinsics_checkParameterIsNotNull($create, $rt_s(448));
    oktu_Pool__init_1($this, $create, null);
}
function oooi_DxSpace$3() {
    jl_Object.call(this);
    this.$this$042 = null;
}
function oooi_DxSpace$3__init_(var_0) {
    var var_1 = new oooi_DxSpace$3();
    oooi_DxSpace$3__init_0(var_1, var_0);
    return var_1;
}
function oooi_DxSpace$3__init_0($this, $this$0) {
    $this.$this$042 = $this$0;
    jl_Object__init_0($this);
}
function oooi_DxSpace$3_iterator($this) {
    return oooi_DxSpace$3$1__init_($this);
}
function oooig_GimTrimeshCapsuleCollision() {
    jl_Object.call(this);
}
function oooig_GimTrimeshCapsuleCollision__init_() {
    var var_0 = new oooig_GimTrimeshCapsuleCollision();
    oooig_GimTrimeshCapsuleCollision__init_0(var_0);
    return var_0;
}
function oooig_GimTrimeshCapsuleCollision__init_0($this) {
    jl_Object__init_0($this);
}
function oooig_GimTrimeshCapsuleCollision_CALC_CAPSULE_AABB($capsule, $aabb) {
    if ($capsule.$m_point1.$f.data[0] >= $capsule.$m_point2.$f.data[0]) {
        $aabb.$minX = $capsule.$m_point2.$f.data[0] - $capsule.$m_radius;
        $aabb.$maxX = $capsule.$m_point1.$f.data[0] + $capsule.$m_radius;
    } else {
        $aabb.$minX = $capsule.$m_point1.$f.data[0] - $capsule.$m_radius;
        $aabb.$maxX = $capsule.$m_point2.$f.data[0] + $capsule.$m_radius;
    }
    if ($capsule.$m_point1.$f.data[1] >= $capsule.$m_point2.$f.data[1]) {
        $aabb.$minY = $capsule.$m_point2.$f.data[1] - $capsule.$m_radius;
        $aabb.$maxY = $capsule.$m_point1.$f.data[1] + $capsule.$m_radius;
    } else {
        $aabb.$minY = $capsule.$m_point1.$f.data[1] - $capsule.$m_radius;
        $aabb.$maxY = $capsule.$m_point2.$f.data[1] + $capsule.$m_radius;
    }
    if ($capsule.$m_point1.$f.data[2] >= $capsule.$m_point2.$f.data[2]) {
        $aabb.$minZ = $capsule.$m_point2.$f.data[2] - $capsule.$m_radius;
        $aabb.$maxZ = $capsule.$m_point1.$f.data[2] + $capsule.$m_radius;
    } else {
        $aabb.$minZ = $capsule.$m_point1.$f.data[2] - $capsule.$m_radius;
        $aabb.$maxZ = $capsule.$m_point2.$f.data[2] + $capsule.$m_radius;
    }
}
function oooig_GimTrimeshCapsuleCollision_gim_closest_point_triangle_segment($triangle, $s1, $s2, $contacts) {
    var $segment_points, var$6, $closest_points, var$8, $out_edge, $sdiff, $dis, $dis_temp, $perpend, $intersection_type, var$15, var$16, var$17, var$18, $i, var$20, var$21, $i_0;
    $segment_points = $rt_createArray(oooig_GimGeometry$vec3f, 4);
    var$6 = $segment_points.data;
    var$6[0] = oooig_GimGeometry$vec3f__init_();
    var$6[1] = oooig_GimGeometry$vec3f__init_();
    var$6[2] = oooig_GimGeometry$vec3f__init_();
    var$6[3] = oooig_GimGeometry$vec3f__init_();
    $closest_points = $rt_createArray(oooig_GimGeometry$vec3f, 2);
    var$8 = $closest_points.data;
    var$8[0] = oooig_GimGeometry$vec3f__init_();
    var$8[1] = oooig_GimGeometry$vec3f__init_();
    $out_edge = 10;
    $sdiff = oooig_GimGeometry$vec4f__init_();
    $dis = oooig_GimGeometry_DISTANCE_PLANE_POINT($triangle.$m_planes.$m_planes0.data[0], $s1);
    $dis_temp = oooig_GimGeometry_DISTANCE_PLANE_POINT($triangle.$m_planes.$m_planes0.data[0], $s2);
    if ($dis <= 0.0 && $dis_temp <= 0.0)
        return;
    a: {
        oooig_GimGeometry_VEC_DIFF0($sdiff, $s2, $s1);
        $perpend = oooig_GimGeometry_VEC_DOT1($sdiff, $triangle.$m_planes.$m_planes0.data[0]);
        if (!oooig_GimMath_IS_ZERO($perpend)) {
            if ($dis < $dis_temp)
                oooig_GimGeometry_VEC_COPY(var$8[0], $s1);
            else {
                oooig_GimGeometry_VEC_COPY(var$8[0], $s2);
                $dis = $dis_temp;
            }
            if ($dis >= 0.0 && $dis_temp >= 0.0) {
                if (oooig_GimGeometry_POINT_IN_HULL_TZ(var$8[0], $triangle.$m_planes.$m_planes0, 1, 3))
                    break a;
                oooig_GimContact_GIM_PUSH_CONTACT($contacts, var$8[0], $triangle.$m_planes.$m_planes0.data[0], $dis, null, null, 0, 0);
                return;
            }
            oooig_GimGeometry_PLANE_CLIP_SEGMENT($s1, $s2, $triangle.$m_planes.$m_planes0.data[0], var$8[1]);
            if (oooig_GimGeometry_POINT_IN_HULL_TZ(var$8[1], $triangle.$m_planes.$m_planes0, 1, 3))
                break a;
            oooig_GimContact_GIM_PUSH_CONTACT($contacts, var$8[0], $triangle.$m_planes.$m_planes0.data[0], $dis, null, null, 0, 0);
            return;
        }
        $intersection_type = oooig_GimGeometry_PLANE_CLIP_SEGMENT_CLOSEST($s1, $s2, $triangle.$m_planes.$m_planes0.data[1], var$6[0], var$6[1]);
        if ($intersection_type && $intersection_type != 1) {
            var$15 = oooig_GimGeometry_PLANE_CLIP_SEGMENT_CLOSEST(var$6[0], var$6[1], $triangle.$m_planes.$m_planes0.data[2], var$6[2], var$6[3]);
            if (var$15 && var$15 != 1) {
                var$15 = oooig_GimGeometry_PLANE_CLIP_SEGMENT_CLOSEST(var$6[2], var$6[3], $triangle.$m_planes.$m_planes0.data[3], var$8[0], var$8[1]);
                if (!(var$15 && var$15 != 1))
                    $out_edge = 2;
            } else {
                $out_edge = 1;
                oooig_GimGeometry_VEC_COPY(var$8[0], var$6[3]);
            }
        } else {
            $out_edge = 0;
            oooig_GimGeometry_VEC_COPY(var$8[0], var$6[0]);
        }
        if ($out_edge > 2) {
            var$16 = oooig_GimGeometry_DISTANCE_PLANE_POINT($triangle.$m_planes.$m_planes0.data[0], var$8[0]);
            oooig_GimContact_GIM_PUSH_CONTACT($contacts, var$8[0], $triangle.$m_planes.$m_planes0.data[0], var$16, null, null, 0, 0);
            oooig_GimContact_GIM_PUSH_CONTACT($contacts, var$8[1], $triangle.$m_planes.$m_planes0.data[0], var$16, null, null, 0, 0);
            return;
        }
    }
    var$17 = 10;
    var$18 = Infinity;
    $i = 0;
    while ($i < 3) {
        var$20 = $triangle.$m_vertices.data[$i];
        var$21 = $triangle.$m_vertices.data;
        $i_0 = $i + 1 | 0;
        oooig_GimGeometry_SEGMENT_COLLISION($s1, $s2, var$20, var$21[$i_0 % 3 | 0], var$6[0], var$6[1]);
        oooig_GimGeometry_VEC_DIFF0($sdiff, var$6[0], var$6[1]);
        var$16 = oooig_GimGeometry_VEC_DOT1($sdiff, $sdiff);
        if (var$16 < var$18) {
            oooig_GimGeometry_VEC_COPY(var$8[0], var$6[0]);
            oooig_GimGeometry_VEC_COPY0(var$8[1], $sdiff);
            var$18 = var$16;
            var$17 = $i;
        }
        $i = $i_0;
    }
    if (var$17 > 2)
        return;
    if (oooig_GimMath_IS_ZERO(var$18))
        oooig_GimContact_GIM_PUSH_CONTACT($contacts, var$8[0], $triangle.$m_planes.$m_planes0.data[0], 0.0, null, null, 0, 0);
    else {
        var$16 = oooig_GimMath_GIM_SQRT(var$18);
        oooig_GimGeometry_VEC_SCALE(var$8[1], 1.0 / var$16, var$8[1]);
        oooig_GimContact_GIM_PUSH_CONTACT0($contacts, var$8[0], var$8[1], var$16, null, null, 0, 0);
    }
}
function oooig_GimTrimeshCapsuleCollision_gim_triangle_capsule_collision($triangle, $capsule, $contacts) {
    var $old_contact_size, $pcontacts, $vec, $pcontact;
    $old_contact_size = $contacts.$size();
    oooig_GimTrimeshCapsuleCollision_gim_closest_point_triangle_segment($triangle, $capsule.$m_point1, $capsule.$m_point2, $contacts);
    if ($contacts.$size() == $old_contact_size)
        return 0;
    $pcontacts = $contacts.$GIM_DYNARRAY_POINTER_V();
    $pcontacts.$inc($old_contact_size);
    if ($pcontacts.$at0().$m_depth > $capsule.$m_radius) {
        $contacts.$m_size = $old_contact_size;
        return 0;
    }
    $vec = oooig_GimGeometry$vec3f__init_();
    while ($old_contact_size < $contacts.$size()) {
        $pcontact = $pcontacts.$at0();
        oooig_GimGeometry_VEC_SCALE($pcontact.$m_normal, (-1.0), $pcontact.$m_normal);
        oooig_GimGeometry_VEC_SCALE($vec, $capsule.$m_radius, $pcontact.$m_normal);
        oooig_GimGeometry_VEC_SUM($pcontact.$m_point, $vec, $pcontact.$m_point);
        $pcontact.$m_depth = $capsule.$m_radius - $pcontact.$m_depth;
        $pcontacts.$inc0();
        $old_contact_size = $old_contact_size + 1 | 0;
    }
    return 1;
}
function oooig_GimTrimeshCapsuleCollision_gim_trimesh_capsule_collision($trimesh, $capsule, $contacts) {
    var $test_aabb, $collision_result, $dummycontacts, $boxesresult, $tri_data, $i, var$10, $old_contact_size, $cresult, $pcontacts, $pcontact;
    $contacts.$m_size = 0;
    $test_aabb = oooig_GimGeometry$aabb3f__init_();
    oooig_GimTrimeshCapsuleCollision_CALC_CAPSULE_AABB($capsule, $test_aabb);
    $collision_result = oooig_GimDynArrayInt_GIM_CREATE_BOXQUERY_LIST();
    $trimesh.$m_aabbset.$gim_aabbset_box_collision($test_aabb, $collision_result);
    if (!$collision_result.$size())
        $collision_result.$GIM_DYNARRAY_DESTROY();
    $trimesh.$gim_trimesh_locks_work_data();
    $dummycontacts = oooig_GimContact_GIM_CREATE_CONTACT_LIST();
    $boxesresult = $collision_result.$GIM_DYNARRAY_POINTER0();
    $tri_data = oooig_GimTriCollision$GIM_TRIANGLE_DATA__init_();
    $i = 0;
    while ($i < $collision_result.$size()) {
        a: {
            var$10 = $boxesresult.data;
            $old_contact_size = $dummycontacts.$size();
            $trimesh.$gim_trimesh_get_triangle_data(var$10[$i], $tri_data);
            $cresult = oooig_GimTrimeshCapsuleCollision_gim_triangle_capsule_collision($tri_data, $capsule, $dummycontacts);
            if ($cresult) {
                $pcontacts = $dummycontacts.$GIM_DYNARRAY_POINTER_V();
                $pcontacts.$inc($old_contact_size);
                while (true) {
                    if ($old_contact_size >= $dummycontacts.$size())
                        break a;
                    $pcontact = $pcontacts.$at0();
                    $pcontact.$m_handle1 = $trimesh;
                    $pcontact.$m_handle2 = $capsule;
                    $pcontact.$m_feature1 = var$10[$i];
                    $pcontact.$m_feature2 = 0;
                    $pcontacts.$inc0();
                    $old_contact_size = $old_contact_size + 1 | 0;
                }
            }
        }
        $i = $i + 1 | 0;
    }
    $trimesh.$gim_trimesh_unlocks_work_data();
    $collision_result.$GIM_DYNARRAY_DESTROY();
    oooig_GimContact_gim_merge_contacts($dummycontacts, $contacts);
    $dummycontacts.$GIM_DYNARRAY_DESTROY();
}
function okti_IMouse() {
}
function oooi_DxTriMeshDisabled$dxTriMeshDisabledData() {
    oooi_DxTriMeshData.call(this);
}
function oooi_DxTriMeshDisabled$dxTriMeshDisabledData__init_() {
    var var_0 = new oooi_DxTriMeshDisabled$dxTriMeshDisabledData();
    oooi_DxTriMeshDisabled$dxTriMeshDisabledData__init_0(var_0);
    return var_0;
}
function oooi_DxTriMeshDisabled$dxTriMeshDisabledData__init_0($this) {
    oooi_DxTriMeshData__init_0($this);
}
function oooi_DxTriMeshDisabled$dxTriMeshDisabledData_preprocess($this) {
    $rt_throw(jl_UnsupportedOperationException__init_0());
}
function oooi_DxTriMeshDisabled$dxTriMeshDisabledData_build($this, $Vertices, $Indices) {
    return;
}
function oooi_DxCollisionUtil() {
    jl_Object.call(this);
}
function oooi_DxCollisionUtil__init_() {
    var var_0 = new oooi_DxCollisionUtil();
    oooi_DxCollisionUtil__init_0(var_0);
    return var_0;
}
function oooi_DxCollisionUtil__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxCollisionUtil_dVector3Subtract($a, $b, $c) {
    oom_DVector3_eqDiff($c, $a, $b);
}
function oooi_DxCollisionUtil_dVector3Scale($this, $a, $nScale) {
    oom_DVector3_scale($a, $nScale);
}
function oooi_DxCollisionUtil_dVector3Add($this, $a, $b, $c) {
    oom_DVector3_eqSum1($c, $a, $b);
}
function oooi_DxCollisionUtil_dVector3Copy($a, $c) {
    oom_DVector3_set($c, $a);
}
function oooi_DxCollisionUtil_dVector3Cross($a, $b, $c) {
    ooo_OdeMath_dCalcVectorCross3($c, $a, $b);
}
function oooi_DxCollisionUtil_dVector3Length($this, $a) {
    return oom_DVector3_length($a);
}
function oooi_DxCollisionUtil_dVector3Dot($this, $a, $b) {
    return $a.$dot($b);
}
function oooi_DxCollisionUtil_dVector3Inv($a) {
    oom_DVector3_scale($a, (-1.0));
}
function oooi_DxCollisionUtil_dVector3LengthSquare($this, $a) {
    return oom_DVector3_lengthSquared($a);
}
function oooi_DxCollisionUtil_dMat3GetCol($m, $col, $v) {
    if (!$col)
        oom_DVector3_set0($v, oom_DMatrix3_get00($m), oom_DMatrix3_get10($m), oom_DMatrix3_get20($m));
    else if ($col == 1)
        oom_DVector3_set0($v, oom_DMatrix3_get01($m), oom_DMatrix3_get11($m), oom_DMatrix3_get21($m));
    else {
        if ($col != 2)
            $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(449)).$append1($col).$toString()));
        oom_DVector3_set0($v, oom_DMatrix3_get02($m), oom_DMatrix3_get12($m), oom_DMatrix3_get22($m));
    }
}
function oooi_DxCollisionUtil_dVector3CrossMat3Col($this, $m, $col, $v, $r) {
    if (!$col) {
        oom_DVector3_set00($r, $v.$get10() * $m.$get200() - $v.$get20() * $m.$get100());
        oom_DVector3_set10($r, $v.$get20() * $m.$get00() - $v.$get01() * $m.$get200());
        oom_DVector3_set20($r, $v.$get01() * $m.$get100() - $v.$get10() * $m.$get00());
    } else if ($col == 1) {
        oom_DVector3_set00($r, $v.$get10() * $m.$get21() - $v.$get20() * $m.$get11());
        oom_DVector3_set10($r, $v.$get20() * $m.$get010() - $v.$get01() * $m.$get21());
        oom_DVector3_set20($r, $v.$get01() * $m.$get11() - $v.$get10() * $m.$get010());
    } else {
        if ($col != 2)
            $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(449)).$append1($col).$toString()));
        oom_DVector3_set00($r, $v.$get10() * $m.$get22() - $v.$get20() * $m.$get12());
        oom_DVector3_set10($r, $v.$get20() * $m.$get02() - $v.$get01() * $m.$get22());
        oom_DVector3_set20($r, $v.$get01() * $m.$get12() - $v.$get10() * $m.$get02());
    }
}
function oooi_DxCollisionUtil_dMultiplyMat3Vec3($this, $m, $v, $r) {
    ooo_OdeMath_dMultiply0_331($r, $m, $v);
}
function oooi_DxCollisionUtil_dPointPlaneDistance($point, $plane) {
    return $plane.$get01() * oom_DVector3_get0($point) + $plane.$get10() * oom_DVector3_get1($point) + $plane.$get20() * oom_DVector3_get2($point) + $plane.$get30();
}
function oooi_DxCollisionUtil_dConstructPlane($normal, $distance, $plane) {
    var var$4, var$5, var$6;
    var$4 = oom_DVector3_get0($normal);
    var$5 = oom_DVector3_get1($normal);
    var$6 = oom_DVector3_get2($normal);
    $plane.$set16(var$4, var$5, var$6, $distance);
}
function oooi_DxCollisionUtil_dMatrix3Det($this, $mat) {
    var var$2, $det;
    var$2 = oom_DMatrix3_get00($mat) * (oom_DMatrix3_get11($mat) * oom_DMatrix3_get22($mat) - oom_DMatrix3_get21($mat) * oom_DMatrix3_get12($mat));
    var$2 = var$2 - oom_DMatrix3_get01($mat) * (oom_DMatrix3_get10($mat) * oom_DMatrix3_get22($mat) - oom_DMatrix3_get20($mat) * oom_DMatrix3_get12($mat));
    $det = var$2 + oom_DMatrix3_get02($mat) * (oom_DMatrix3_get10($mat) * oom_DMatrix3_get21($mat) - oom_DMatrix3_get20($mat) * oom_DMatrix3_get11($mat));
    return $det;
}
function oooi_DxCollisionUtil_dMatrix3Inv($this, $ma, $dst) {
    var $det, $detRecip;
    $det = $this.$dMatrix3Det($ma);
    if (oooi_Common_dFabs($det) < 5.0E-4) {
        oom_DMatrix3_setIdentity($dst);
        return;
    }
    $detRecip = 1.0 / $det;
    oom_DMatrix3_set00($dst, (oom_DMatrix3_get11($ma) * oom_DMatrix3_get22($ma) - oom_DMatrix3_get12($ma) * oom_DMatrix3_get21($ma)) * $detRecip);
    oom_DMatrix3_set01($dst, (oom_DMatrix3_get21($ma) * oom_DMatrix3_get02($ma) - oom_DMatrix3_get01($ma) * oom_DMatrix3_get22($ma)) * $detRecip);
    oom_DMatrix3_set02($dst, (oom_DMatrix3_get01($ma) * oom_DMatrix3_get12($ma) - oom_DMatrix3_get11($ma) * oom_DMatrix3_get02($ma)) * $detRecip);
    oom_DMatrix3_set10($dst, (oom_DMatrix3_get12($ma) * oom_DMatrix3_get20($ma) - oom_DMatrix3_get10($ma) * oom_DMatrix3_get22($ma)) * $detRecip);
    oom_DMatrix3_set11($dst, (oom_DMatrix3_get00($ma) * oom_DMatrix3_get22($ma) - oom_DMatrix3_get20($ma) * oom_DMatrix3_get02($ma)) * $detRecip);
    oom_DMatrix3_set12($dst, (oom_DMatrix3_get10($ma) * oom_DMatrix3_get02($ma) - oom_DMatrix3_get00($ma) * oom_DMatrix3_get12($ma)) * $detRecip);
    oom_DMatrix3_set20($dst, (oom_DMatrix3_get10($ma) * oom_DMatrix3_get21($ma) - oom_DMatrix3_get20($ma) * oom_DMatrix3_get11($ma)) * $detRecip);
    oom_DMatrix3_set21($dst, (oom_DMatrix3_get20($ma) * oom_DMatrix3_get01($ma) - oom_DMatrix3_get00($ma) * oom_DMatrix3_get21($ma)) * $detRecip);
    oom_DMatrix3_set22($dst, (oom_DMatrix3_get00($ma) * oom_DMatrix3_get11($ma) - oom_DMatrix3_get01($ma) * oom_DMatrix3_get10($ma)) * $detRecip);
}
function oooi_DxCollisionUtil_dQuatTransform($quat, $source, $dest) {
    var $x0, $x1, $x2, $x3;
    $x0 = oom_DVector3_get0($source) * $quat.$get01() + oom_DVector3_get2($source) * $quat.$get20() - oom_DVector3_get1($source) * $quat.$get30();
    $x1 = oom_DVector3_get1($source) * $quat.$get01() + oom_DVector3_get0($source) * $quat.$get30() - oom_DVector3_get2($source) * $quat.$get10();
    $x2 = oom_DVector3_get2($source) * $quat.$get01() + oom_DVector3_get1($source) * $quat.$get10() - oom_DVector3_get0($source) * $quat.$get20();
    $x3 = oom_DVector3_get0($source) * $quat.$get10() + oom_DVector3_get1($source) * $quat.$get20() + oom_DVector3_get2($source) * $quat.$get30();
    oom_DVector3_set00($dest, $quat.$get01() * $x0 + $quat.$get10() * $x3 + $quat.$get20() * $x2 - $quat.$get30() * $x1);
    oom_DVector3_set10($dest, $quat.$get01() * $x1 + $quat.$get20() * $x3 + $quat.$get30() * $x0 - $quat.$get10() * $x2);
    oom_DVector3_set20($dest, $quat.$get01() * $x2 + $quat.$get30() * $x3 + $quat.$get10() * $x1 - $quat.$get20() * $x0);
}
function oooi_DxCollisionUtil_dQuatInv($source, $dest) {
    var $norm, $invNorm;
    $norm = $source.$get01() * $source.$get01() + $source.$get10() * $source.$get10() + $source.$get20() * $source.$get20() + $source.$get30() * $source.$get30();
    if ($norm <= 0.0)
        $dest.$set17(1.0, 0.0, 0.0, 0.0);
    else {
        $invNorm = 1.0 / $norm;
        $dest.$set00($source.$get01() * $invNorm);
        $dest.$set15( -$source.$get10() * $invNorm);
        $dest.$set20( -$source.$get20() * $invNorm);
        $dest.$set30( -$source.$get30() * $invNorm);
    }
}
function oooi_DxCollisionUtil_dCollideSpheres($p1, $r1, $p2, $r2, $cb) {
    var $c, $d, var$8, $d1, $k;
    $c = ooo_DContactGeomBuffer_get0($cb);
    $d = $p1.$distance($p2);
    var$8 = $r1 + $r2;
    if ($d > var$8)
        return 0;
    if ($d <= 0.0) {
        oom_DVector3_set($c.$pos0, $p1);
        oom_DVector3_set0($c.$normal, 1.0, 0.0, 0.0);
        $c.$depth = var$8;
    } else {
        $d1 = oooi_Common_dRecip($d);
        oom_DVector3_set00($c.$normal, ($p1.$get01() - $p2.$get01()) * $d1);
        oom_DVector3_set10($c.$normal, ($p1.$get10() - $p2.$get10()) * $d1);
        oom_DVector3_set20($c.$normal, ($p1.$get20() - $p2.$get20()) * $d1);
        $k = 0.5 * ($r2 - $r1 - $d);
        oom_DVector3_eqSum0($c.$pos0, $p1, $c.$normal, $k);
        $c.$depth = var$8 - $d;
    }
    return 1;
}
function oooi_DxCollisionUtil_dLineClosestApproach($pa, $ua, $pb, $ub, $alpha, $beta) {
    var $p, $uaub, $q1, $q2, $d, var$12;
    $p = oom_DVector3__init_();
    oom_DVector3_eqDiff($p, $pb, $pa);
    $uaub = ooo_OdeMath_dCalcVectorDot3($ua, $ub);
    $q1 = ooo_OdeMath_dCalcVectorDot3($ua, $p);
    $q2 =  -ooo_OdeMath_dCalcVectorDot3($ub, $p);
    $d = 1.0 - $uaub * $uaub;
    if ($d <= 1.0E-4) {
        oooicj_RefDouble_set($alpha, 0.0);
        oooicj_RefDouble_set($beta, 0.0);
    } else {
        var$12 = oooi_Common_dRecip($d);
        oooicj_RefDouble_set($alpha, ($q1 + $uaub * $q2) * var$12);
        oooicj_RefDouble_set($beta, ($uaub * $q1 + $q2) * var$12);
    }
}
function oooi_DxCollisionUtil_SET2($a, $b) {
    oom_DVector3_set($a, $b);
}
function oooi_DxCollisionUtil_SET3_SUB($a, $b, $c) {
    oooi_DxCollisionUtil_SET3_SUB0($a, 1.0, $b, 1.0, $c);
}
function oooi_DxCollisionUtil_SET3_SUB0($a, $f1, $b, $f2, $c) {
    oom_DVector3_set00($a, oom_DVector3_get0($b) * $f1 - oom_DVector3_get0($c) * $f2);
    oom_DVector3_set10($a, oom_DVector3_get1($b) * $f1 - oom_DVector3_get1($c) * $f2);
    oom_DVector3_set20($a, oom_DVector3_get2($b) * $f1 - oom_DVector3_get2($c) * $f2);
}
function oooi_DxCollisionUtil_SET3_ADD($a, $f1, $b, $f2, $c) {
    oom_DVector3_set00($a, oom_DVector3_get0($b) * $f1 + oom_DVector3_get0($c) * $f2);
    oom_DVector3_set10($a, oom_DVector3_get1($b) * $f1 + oom_DVector3_get1($c) * $f2);
    oom_DVector3_set20($a, oom_DVector3_get2($b) * $f1 + oom_DVector3_get2($c) * $f2);
}
function oooi_DxCollisionUtil_dClosestLineSegmentPoints($a1, $a2, $b1, $b2, $cp1, $cp2) {
    var $a1a2, $b1b2, $a1b1, $a1b2, $a2b1, $a2b2, $n, $da1, $db1, var$16, $da2, $db2, var$19, $da3, $db3, var$22, $da4, $db4, var$25, $la, $k, $lb, $det, var$30, $alpha, $beta;
    $a1a2 = oom_DVector3__init_();
    $b1b2 = oom_DVector3__init_();
    $a1b1 = oom_DVector3__init_();
    $a1b2 = oom_DVector3__init_();
    $a2b1 = oom_DVector3__init_();
    $a2b2 = oom_DVector3__init_();
    $n = oom_DVector3__init_();
    oooi_DxCollisionUtil_SET3_SUB($a1a2, $a2, $a1);
    oooi_DxCollisionUtil_SET3_SUB($b1b2, $b2, $b1);
    oooi_DxCollisionUtil_SET3_SUB($a1b1, $b1, $a1);
    $da1 = ooo_OdeMath_dCalcVectorDot3($a1a2, $a1b1);
    $db1 = ooo_OdeMath_dCalcVectorDot3($b1b2, $a1b1);
    var$16 = $rt_compare($da1, 0.0);
    if (var$16 <= 0 && $db1 >= 0.0) {
        oooi_DxCollisionUtil_SET2($cp1, $a1);
        oooi_DxCollisionUtil_SET2($cp2, $b1);
        return;
    }
    oooi_DxCollisionUtil_SET3_SUB($a1b2, $b2, $a1);
    $da2 = ooo_OdeMath_dCalcVectorDot3($a1a2, $a1b2);
    $db2 = ooo_OdeMath_dCalcVectorDot3($b1b2, $a1b2);
    var$19 = $rt_compare($da2, 0.0);
    if (var$19 <= 0 && $db2 <= 0.0) {
        oooi_DxCollisionUtil_SET2($cp1, $a1);
        oooi_DxCollisionUtil_SET2($cp2, $b2);
        return;
    }
    oooi_DxCollisionUtil_SET3_SUB($a2b1, $b1, $a2);
    $da3 = ooo_OdeMath_dCalcVectorDot3($a1a2, $a2b1);
    $db3 = ooo_OdeMath_dCalcVectorDot3($b1b2, $a2b1);
    var$22 = $rt_compare($da3, 0.0);
    if (var$22 >= 0 && $db3 >= 0.0) {
        oooi_DxCollisionUtil_SET2($cp1, $a2);
        oooi_DxCollisionUtil_SET2($cp2, $b1);
        return;
    }
    oooi_DxCollisionUtil_SET3_SUB($a2b2, $b2, $a2);
    $da4 = ooo_OdeMath_dCalcVectorDot3($a1a2, $a2b2);
    $db4 = ooo_OdeMath_dCalcVectorDot3($b1b2, $a2b2);
    var$25 = $rt_compare($da4, 0.0);
    if (var$25 >= 0 && $db4 <= 0.0) {
        oooi_DxCollisionUtil_SET2($cp1, $a2);
        oooi_DxCollisionUtil_SET2($cp2, $b2);
        return;
    }
    $la = ooo_OdeMath_dCalcVectorDot3($a1a2, $a1a2);
    if (var$16 >= 0 && var$22 <= 0) {
        $k = $da1 / $la;
        oooi_DxCollisionUtil_SET3_SUB0($n, 1.0, $a1b1, $k, $a1a2);
        if (ooo_OdeMath_dCalcVectorDot3($b1b2, $n) >= 0.0) {
            oooi_DxCollisionUtil_SET3_ADD($cp1, 1.0, $a1, $k, $a1a2);
            oooi_DxCollisionUtil_SET2($cp2, $b1);
            return;
        }
    }
    if (var$19 >= 0 && var$25 <= 0) {
        $k = $da2 / $la;
        oooi_DxCollisionUtil_SET3_SUB0($n, 1.0, $a1b2, $k, $a1a2);
        if (ooo_OdeMath_dCalcVectorDot3($b1b2, $n) <= 0.0) {
            oooi_DxCollisionUtil_SET3_ADD($cp1, 1.0, $a1, $k, $a1a2);
            oooi_DxCollisionUtil_SET2($cp2, $b2);
            return;
        }
    }
    $lb = ooo_OdeMath_dCalcVectorDot3($b1b2, $b1b2);
    if ($db1 <= 0.0 && $db2 >= 0.0) {
        $k =  -$db1 / $lb;
        oooi_DxCollisionUtil_SET3_SUB0($n, (-1.0), $a1b1, $k, $b1b2);
        if (ooo_OdeMath_dCalcVectorDot3($a1a2, $n) >= 0.0) {
            oooi_DxCollisionUtil_SET2($cp1, $a1);
            oooi_DxCollisionUtil_SET3_ADD($cp2, 1.0, $b1, $k, $b1b2);
            return;
        }
    }
    if ($db3 <= 0.0 && $db4 >= 0.0) {
        $k =  -$db3 / $lb;
        oooi_DxCollisionUtil_SET3_SUB0($n, (-1.0), $a2b1, $k, $b1b2);
        if (ooo_OdeMath_dCalcVectorDot3($a1a2, $n) <= 0.0) {
            oooi_DxCollisionUtil_SET2($cp1, $a2);
            oooi_DxCollisionUtil_SET3_ADD($cp2, 1.0, $b1, $k, $b1b2);
            return;
        }
    }
    $k = ooo_OdeMath_dCalcVectorDot3($a1a2, $b1b2);
    $det = $la * $lb - $k * $k;
    if ($det <= 0.0) {
        oooi_DxCollisionUtil_SET2($cp1, $a1);
        oooi_DxCollisionUtil_SET2($cp2, $b1);
        return;
    }
    var$30 = oooi_Common_dRecip($det);
    $alpha = ($lb * $da1 - $k * $db1) * var$30;
    $beta = ($k * $da1 - $la * $db1) * var$30;
    oooi_DxCollisionUtil_SET3_ADD($cp1, 1.0, $a1, $alpha, $a1a2);
    oooi_DxCollisionUtil_SET3_ADD($cp2, 1.0, $b1, $beta, $b1b2);
}
function oooi_DxCollisionUtil_dClosestLineBoxPoints($p1, $p2, $c, $R, $side, $lret, $bret) {
    var $tmp_0, $s, $v, $sign, $i, $v2, $h, $region, $tanchor, var$17, var$18, var$19, $t, $dd2dt, $next_t, var$23, $next_dd2dt, $m, var$26, var$27;
    $tmp_0 = oom_DVector3__init_();
    $s = oom_DVector3__init_();
    $v = oom_DVector3__init_();
    oom_DVector3_eqDiff($tmp_0, $p1, $c);
    ooo_OdeMath_dMultiply1_331($s, $R, $tmp_0);
    oom_DVector3_eqDiff($tmp_0, $p2, $p1);
    ooo_OdeMath_dMultiply1_331($v, $R, $tmp_0);
    $sign = oom_DVector3__init_();
    $i = 0;
    while ($i < 3) {
        if (oom_DVector3_get($v, $i) >= 0.0)
            oom_DVector3_set2($sign, $i, 1.0);
        else {
            oom_DVector3_set2($s, $i,  -oom_DVector3_get($s, $i));
            oom_DVector3_set2($v, $i,  -oom_DVector3_get($v, $i));
            oom_DVector3_set2($sign, $i, (-1.0));
        }
        $i = $i + 1 | 0;
    }
    $v2 = oom_DVector3__init_();
    oom_DVector3_set00($v2, oom_DVector3_get0($v) * oom_DVector3_get0($v));
    oom_DVector3_set10($v2, oom_DVector3_get1($v) * oom_DVector3_get1($v));
    oom_DVector3_set20($v2, oom_DVector3_get2($v) * oom_DVector3_get2($v));
    $h = oom_DVector3__init_();
    oom_DVector3_scale(oom_DVector3_set($h, $side), 0.5);
    $region = $rt_createIntArray(3);
    $tanchor = $rt_createDoubleArray(3);
    var$17 = 0;
    while (var$17 < 3) {
        if (oom_DVector3_get($v, var$17) <= 1.0E-307) {
            var$18 = $tanchor.data;
            $region.data[var$17] = 0;
            var$18[var$17] = 2.0;
        } else if (oom_DVector3_get($s, var$17) <  -oom_DVector3_get($h, var$17)) {
            var$18 = $tanchor.data;
            $region.data[var$17] = (-1);
            var$18[var$17] = ( -oom_DVector3_get($h, var$17) - oom_DVector3_get($s, var$17)) / oom_DVector3_get($v, var$17);
        } else {
            var$19 = oom_DVector3_get($s, var$17) <= oom_DVector3_get($h, var$17) ? 0 : 1;
            var$18 = $tanchor.data;
            $region.data[var$17] = var$19;
            var$18[var$17] = (oom_DVector3_get($h, var$17) - oom_DVector3_get($s, var$17)) / oom_DVector3_get($v, var$17);
        }
        var$17 = var$17 + 1 | 0;
    }
    $t = 0.0;
    $dd2dt = 0.0;
    var$17 = 0;
    while (var$17 < 3) {
        $dd2dt = $dd2dt - (!$region.data[var$17] ? 0.0 : oom_DVector3_get($v2, var$17)) * $tanchor.data[var$17];
        var$17 = var$17 + 1 | 0;
    }
    if ($dd2dt >= 0.0) {
        oooi_DxCollisionUtil_answer($t, $tmp_0, $sign, $p1, $s, $R, $lret, $h, $c, $v, $bret);
        return;
    }
    while (true) {
        $next_t = 1.0;
        var$17 = 0;
        while (var$17 < 3) {
            var$23 = $tanchor.data;
            if (var$23[var$17] > $t && var$23[var$17] < 1.0 && var$23[var$17] < $next_t)
                $next_t = var$23[var$17];
            var$17 = var$17 + 1 | 0;
        }
        $next_dd2dt = 0.0;
        var$17 = 0;
        while (var$17 < 3) {
            $next_dd2dt = $next_dd2dt + (!$region.data[var$17] ? 0.0 : oom_DVector3_get($v2, var$17)) * ($next_t - $tanchor.data[var$17]);
            var$17 = var$17 + 1 | 0;
        }
        if ($next_dd2dt >= 0.0) {
            $m = ($next_dd2dt - $dd2dt) / ($next_t - $t);
            var$26 = $t - $dd2dt / $m;
            oooi_DxCollisionUtil_answer(var$26, $tmp_0, $sign, $p1, $s, $R, $lret, $h, $c, $v, $bret);
            return;
        }
        var$27 = 0;
        while (var$27 < 3) {
            var$23 = $tanchor.data;
            if (var$23[var$27] === $next_t) {
                var$18 = $region.data;
                var$23[var$27] = (oom_DVector3_get($h, var$27) - oom_DVector3_get($s, var$27)) / oom_DVector3_get($v, var$27);
                var$18[var$27] = var$18[var$27] + 1 | 0;
            }
            var$27 = var$27 + 1 | 0;
        }
        if ($next_t >= 1.0)
            break;
        $t = $next_t;
        $dd2dt = $next_dd2dt;
    }
    oooi_DxCollisionUtil_answer(1.0, $tmp_0, $sign, $p1, $s, $R, $lret, $h, $c, $v, $bret);
}
function oooi_DxCollisionUtil_answer($t, $tmp_0, $sign, $p1, $s, $R, $lret, $h, $c, $v, $bret) {
    var $i;
    oom_DVector3_eqSum0($lret, $p1, $tmp_0, $t);
    $i = 0;
    while ($i < 3) {
        oom_DVector3_set2($tmp_0, $i, $sign.$get5($i) * (oom_DVector3_get($s, $i) + $t * $v.$get5($i)));
        if (oom_DVector3_get($tmp_0, $i) <  -$h.$get5($i))
            oom_DVector3_set2($tmp_0, $i,  -$h.$get5($i));
        else if (oom_DVector3_get($tmp_0, $i) > $h.$get5($i))
            oom_DVector3_set2($tmp_0, $i, $h.$get5($i));
        $i = $i + 1 | 0;
    }
    ooo_OdeMath_dMultiply0_331($s, $R, $tmp_0);
    oom_DVector3_eqSum1($bret, $s, $c);
}
function oooi_DxCollisionUtil_dClipEdgeToPlane($vEpnt0, $vEpnt1, $plPlane) {
    var $fDistance0, $fDistance1, var$6, var$7, var$8, var$9, $a0, $a1, $a2;
    $fDistance0 = oooi_DxCollisionUtil_dPointPlaneDistance($vEpnt0, $plPlane);
    $fDistance1 = oooi_DxCollisionUtil_dPointPlaneDistance($vEpnt1, $plPlane);
    var$6 = $rt_compare($fDistance0, 0.0);
    if (var$6 < 0 && $fDistance1 < 0.0)
        return 0;
    if (var$6 > 0 && $fDistance1 > 0.0)
        return 1;
    if (!(var$6 > 0 && $fDistance1 < 0.0) && !(var$6 < 0 && $fDistance1 > 0.0))
        return 1;
    var$7 = oom_DVector3_get0($vEpnt0);
    var$8 = (oom_DVector3_get0($vEpnt0) - oom_DVector3_get0($vEpnt1)) * $fDistance0;
    var$9 = $fDistance0 - $fDistance1;
    $a0 = var$7 - var$8 / var$9;
    $a1 = oom_DVector3_get1($vEpnt0) - (oom_DVector3_get1($vEpnt0) - oom_DVector3_get1($vEpnt1)) * $fDistance0 / var$9;
    $a2 = oom_DVector3_get2($vEpnt0) - (oom_DVector3_get2($vEpnt0) - oom_DVector3_get2($vEpnt1)) * $fDistance0 / var$9;
    if (var$6 >= 0)
        oom_DVector3_set0($vEpnt1, $a0, $a1, $a2);
    else
        oom_DVector3_set0($vEpnt0, $a0, $a1, $a2);
    return 1;
}
function oooi_DxCollisionUtil_dClipPolyToPlane($avArrayIn, $ctIn, $avArrayOut, $plPlane) {
    var $ctOut, $i0, $i1, var$8, $fDistance0, $fDistance1, var$11, var$12, $vIntersectionPoint, $f001, var$15, var$16, $i1_0;
    $ctOut = 0;
    $i0 = $ctIn - 1 | 0;
    $i1 = 0;
    while ($i1 < $ctIn) {
        var$8 = $avArrayIn.data;
        $fDistance0 = oooi_DxCollisionUtil_dPointPlaneDistance(var$8[$i0], $plPlane);
        $fDistance1 = oooi_DxCollisionUtil_dPointPlaneDistance(var$8[$i1], $plPlane);
        var$11 = $rt_compare($fDistance0, 0.0);
        if (var$11 >= 0) {
            oom_DVector3_set($avArrayOut.data[$ctOut], var$8[$i0]);
            $ctOut = $ctOut + 1 | 0;
        }
        a: {
            if (!(var$11 > 0 && $fDistance1 < 0.0)) {
                if (var$11 >= 0)
                    break a;
                if ($fDistance1 <= 0.0)
                    break a;
            }
            var$12 = $avArrayOut.data;
            $vIntersectionPoint = oom_DVector3__init_();
            $f001 = $fDistance0 / ($fDistance0 - $fDistance1);
            var$15 = oom_DVector3_get0(var$8[$i0]);
            var$16 = var$8[$i0];
            var$15 = var$15 - (oom_DVector3_get0(var$16) - oom_DVector3_get0(var$8[$i1])) * $f001;
            oom_DVector3_set00($vIntersectionPoint, var$15);
            var$15 = oom_DVector3_get1(var$8[$i0]);
            var$16 = var$8[$i0];
            var$15 = var$15 - (oom_DVector3_get1(var$16) - oom_DVector3_get1(var$8[$i1])) * $f001;
            oom_DVector3_set10($vIntersectionPoint, var$15);
            var$15 = oom_DVector3_get2(var$8[$i0]);
            var$16 = var$8[$i0];
            var$15 = var$15 - (oom_DVector3_get2(var$16) - oom_DVector3_get2(var$8[$i1])) * $f001;
            oom_DVector3_set20($vIntersectionPoint, var$15);
            oom_DVector3_set(var$12[$ctOut], $vIntersectionPoint);
            $ctOut = $ctOut + 1 | 0;
        }
        $i1_0 = $i1 + 1 | 0;
        $i0 = $i1;
        $i1 = $i1_0;
    }
    return $ctOut;
}
function oooi_CollideCylinderPlane() {
    oooi_DxCollisionUtil.call(this);
}
var oooi_CollideCylinderPlane_toleranz = 0.0;
function oooi_CollideCylinderPlane_$callClinit() {
    oooi_CollideCylinderPlane_$callClinit = $rt_eraseClinit(oooi_CollideCylinderPlane);
    oooi_CollideCylinderPlane__clinit_();
}
function oooi_CollideCylinderPlane__init_() {
    var var_0 = new oooi_CollideCylinderPlane();
    oooi_CollideCylinderPlane__init_0(var_0);
    return var_0;
}
function oooi_CollideCylinderPlane__init_0($this) {
    oooi_CollideCylinderPlane_$callClinit();
    oooi_DxCollisionUtil__init_0($this);
}
function oooi_CollideCylinderPlane_dCollideCylinderPlane($this, $cylinder, $plane, $flags, $contacts, $skip) {
    var var$6, $GeomCount, $radius, $length, $cylpos, $planevec, $planeDepth, $PlaneNormal, $contact, $contactPos, $G1Pos1, $G1Pos2, $vDir1, $s, var$20, var$21, $P, $t, $V1, $V2, var$26, $C;
    oooi_Common_dIASSERT($skip != 1 ? 0 : 1);
    var$6 = $flags & 65535;
    oooi_Common_dIASSERT(var$6 < 1 ? 0 : 1);
    $GeomCount = 0;
    $radius = $cylinder.$getRadius();
    $length = $cylinder.$getLength();
    $cylpos = $cylinder.$final_posr().$pos();
    $planevec = $plane.$getNormal();
    $planeDepth = $plane.$getDepth();
    $PlaneNormal = oom_DVector3__init_0($planevec);
    $contact = ooo_DContactGeomBuffer_get0($contacts);
    $contactPos = 0;
    $G1Pos1 = oom_DVector3__init_();
    $G1Pos2 = oom_DVector3__init_();
    $vDir1 = $cylinder.$final_posr().$R().$columnAsNewVector(2);
    $s = $length * 0.5;
    oom_DVector3_eqSum0($G1Pos2, $cylpos, $vDir1, $s);
    oom_DVector3_eqSum0($G1Pos1, $cylpos, $vDir1,  -$s);
    var$20 = $vDir1.$dot($PlaneNormal);
    var$21 = var$20 >= 0.0 ? var$20 - 1.0 : var$20 + 1.0;
    if (var$21 < oooi_CollideCylinderPlane_toleranz && var$21 >  -oooi_CollideCylinderPlane_toleranz) {
        $P = oom_DVector3__init_();
        var$21 = $planeDepth - $planevec.$dot($G1Pos1);
        $t = $planeDepth - $planevec.$dot($G1Pos2);
        if (var$21 < $t) {
            if ($t < 0.0)
                return $GeomCount;
            oom_DVector3_set($P, $G1Pos2);
        } else {
            if (var$21 < 0.0)
                return $GeomCount;
            oom_DVector3_set($P, $G1Pos1);
        }
        $V1 = oom_DVector3__init_();
        $V2 = oom_DVector3__init_();
        if ($vDir1.$get01() < oooi_CollideCylinderPlane_toleranz && $vDir1.$get01() >  -oooi_CollideCylinderPlane_toleranz)
            oom_DVector3_add0(oom_DVector3_set($V1, $vDir1), 0, 1.0);
        else
            oom_DVector3_add0(oom_DVector3_set($V1, $vDir1), 1, 1.0);
        oooi_DxCollisionUtil_dVector3Cross($V1, $vDir1, $V2);
        var$21 = $this.$dVector3Length($V2);
        var$21 = $radius / var$21;
        $this.$dVector3Scale($V2, var$21);
        oooi_DxCollisionUtil_dVector3Cross($V2, $vDir1, $V1);
        $this.$dVector3Add($P, $V1, $contact.$pos0);
        $contact.$depth = $planeDepth - $planevec.$dot($contact.$pos0);
        if ($contact.$depth > 0.0) {
            oooi_DxCollisionUtil_dVector3Copy($PlaneNormal, $contact.$normal);
            $contact.$g1 = $cylinder;
            $contact.$g2 = $plane;
            $contact.$side1 = (-1);
            $contact.$side2 = (-1);
            $GeomCount = 1;
            if ($GeomCount >= var$6)
                return $GeomCount;
            $contactPos = $contactPos + $skip | 0;
            $contact = ooo_DContactGeomBuffer_get($contacts, $contactPos);
        }
        oooi_DxCollisionUtil_dVector3Subtract($P, $V1, $contact.$pos0);
        $contact.$depth = $planeDepth - $this.$dVector3Dot($planevec, $contact.$pos0);
        if ($contact.$depth > 0.0) {
            oooi_DxCollisionUtil_dVector3Copy($PlaneNormal, $contact.$normal);
            $contact.$g1 = $cylinder;
            $contact.$g2 = $plane;
            $contact.$side1 = (-1);
            $contact.$side2 = (-1);
            $GeomCount = $GeomCount + 1 | 0;
            if ($GeomCount >= var$6)
                return $GeomCount;
            $contactPos = $contactPos + $skip | 0;
            $contact = ooo_DContactGeomBuffer_get($contacts, $contactPos);
        }
        $this.$dVector3Add($P, $V2, $contact.$pos0);
        $contact.$depth = $planeDepth - $this.$dVector3Dot($planevec, $contact.$pos0);
        if ($contact.$depth > 0.0) {
            oooi_DxCollisionUtil_dVector3Copy($PlaneNormal, $contact.$normal);
            $contact.$g1 = $cylinder;
            $contact.$g2 = $plane;
            $contact.$side1 = (-1);
            $contact.$side2 = (-1);
            $GeomCount = $GeomCount + 1 | 0;
            if ($GeomCount >= var$6)
                return $GeomCount;
            var$26 = $contactPos + $skip | 0;
            $contact = ooo_DContactGeomBuffer_get($contacts, var$26);
        }
        oooi_DxCollisionUtil_dVector3Subtract($P, $V2, $contact.$pos0);
        $contact.$depth = $planeDepth - $this.$dVector3Dot($planevec, $contact.$pos0);
        if ($contact.$depth > 0.0) {
            oooi_DxCollisionUtil_dVector3Copy($PlaneNormal, $contact.$normal);
            $contact.$g1 = $cylinder;
            $contact.$g2 = $plane;
            $contact.$side1 = (-1);
            $contact.$side2 = (-1);
            $GeomCount = $GeomCount + 1 | 0;
            if ($GeomCount >= var$6)
                return $GeomCount;
        }
    } else {
        $t = $this.$dVector3Dot($PlaneNormal, $vDir1);
        $C = oom_DVector3__init_();
        oom_DVector3_eqSum($C, $vDir1, $t, $PlaneNormal, (-1.0));
        var$21 = $this.$dVector3Length($C);
        var$21 = $radius / var$21;
        $this.$dVector3Scale($C, var$21);
        $this.$dVector3Add($C, $G1Pos1, $contact.$pos0);
        $contact.$depth = $planeDepth - $this.$dVector3Dot($planevec, $contact.$pos0);
        if ($contact.$depth >= 0.0) {
            oooi_DxCollisionUtil_dVector3Copy($PlaneNormal, $contact.$normal);
            $contact.$g1 = $cylinder;
            $contact.$g2 = $plane;
            $contact.$side1 = (-1);
            $contact.$side2 = (-1);
            $GeomCount = 1;
            if ($GeomCount >= var$6)
                return $GeomCount;
            var$26 = $contactPos + $skip | 0;
            $contact = ooo_DContactGeomBuffer_get($contacts, var$26);
        }
        $this.$dVector3Add($C, $G1Pos2, $contact.$pos0);
        $contact.$depth = $planeDepth - $planevec.$dot($contact.$pos0);
        if ($contact.$depth >= 0.0) {
            oooi_DxCollisionUtil_dVector3Copy($PlaneNormal, $contact.$normal);
            $contact.$g1 = $cylinder;
            $contact.$g2 = $plane;
            $contact.$side1 = (-1);
            $contact.$side2 = (-1);
            $GeomCount = $GeomCount + 1 | 0;
            if ($GeomCount >= var$6)
                return $GeomCount;
        }
    }
    return $GeomCount;
}
function oooi_CollideCylinderPlane_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideCylinderPlane($o1, $o2, $flags, $contacts, 1);
}
function oooi_CollideCylinderPlane__clinit_() {
    oooi_CollideCylinderPlane_toleranz = 1.0E-4;
}
function oooig_GimConstants() {
}
function oooig_GimBufferArrayFloat() {
    var a = this; jl_Object.call(a);
    a.$m_buffer_data = null;
    a.$m_byte_stride = 0;
    a.$m_byte_offset = 0;
    a.$m_element_count = 0;
}
function oooig_GimBufferArrayFloat__init_() {
    var var_0 = new oooig_GimBufferArrayFloat();
    oooig_GimBufferArrayFloat__init_0(var_0);
    return var_0;
}
function oooig_GimBufferArrayFloat__init_0($this) {
    var var$1;
    jl_Object__init_0($this);
    var$1 = $rt_createArray(oooig_GimGeometry$vec3f, 1);
    var$1.data[0] = oooig_GimGeometry$vec3f__init_();
    $this.$m_buffer_data = var$1;
    $this.$m_byte_stride = 1;
    $this.$m_byte_offset = 0;
}
function oooig_GimBufferArrayFloat_GIM_BUFFER_ARRAY_POINTER($this, $_index) {
    return oooicj_ObjArray__init_($this.$m_buffer_data, $rt_imul($_index, $this.$m_byte_stride));
}
function oooig_GimBufferArrayFloat_GIM_PROCESS_BUFFER_ARRAY($_uniform_data, $_src_array, $_dst_array, $_kernel) {
    var $_count_, $_source_vert_, $_dest_vert_, $_i_;
    $_count_ = $_src_array.$m_element_count;
    $_source_vert_ = $_src_array.$GIM_BUFFER_ARRAY_POINTER(0);
    $_dest_vert_ = $_dst_array.$GIM_BUFFER_ARRAY_POINTER(0);
    $_i_ = 0;
    while ($_i_ < $_count_) {
        $_kernel.$run0($_uniform_data, $_source_vert_.$at0(), $_dest_vert_.$at0());
        $_source_vert_.$inc0();
        $_dest_vert_.$inc0();
        $_i_ = $_i_ + 1 | 0;
    }
}
function oooig_GimBufferArrayFloat_GIM_BUFFER_ARRAY_DESTROY($this) {
    return;
}
function oooig_GimBufferArrayFloat_cloneRefs($this) {
    var $c;
    $c = oooig_GimBufferArrayFloat__init_();
    $c.$m_buffer_data = $this.$m_buffer_data;
    $c.$m_element_count = $this.$m_element_count;
    $c.$m_byte_offset = $this.$m_byte_offset;
    $c.$m_byte_stride = $this.$m_byte_stride;
    return $c;
}
function oooig_GimBufferArrayFloat_cloneValues($this) {
    var $c, $i, $v2, $v;
    $c = oooig_GimBufferArrayFloat__init_();
    $c.$m_buffer_data = $rt_createArray(oooig_GimGeometry$vec3f, $this.$m_buffer_data.data.length);
    $i = 0;
    while ($i < $this.$m_buffer_data.data.length) {
        $v2 = oooig_GimGeometry$vec3f__init_();
        $v = $this.$m_buffer_data.data[$i];
        $v2.$f.data[0] = $v.$f.data[0];
        $v2.$f.data[1] = $v.$f.data[1];
        $v2.$f.data[2] = $v.$f.data[2];
        $c.$m_buffer_data.data[$i] = $v2;
        $i = $i + 1 | 0;
    }
    $c.$m_element_count = $this.$m_element_count;
    $c.$m_byte_offset = $this.$m_byte_offset;
    $c.$m_byte_stride = $this.$m_byte_stride;
    return $c;
}
function oooig_GimBufferArrayFloat_createCopy($array) {
    var var$2, $c, $va, $i, var$6, var$7, $v, var$9;
    var$2 = $array.data;
    $c = oooig_GimBufferArrayFloat__init_();
    $va = $rt_createArray(oooig_GimGeometry$vec3f, var$2.length / 3 | 0);
    $i = 0;
    while (true) {
        var$6 = $va.data;
        var$7 = var$6.length;
        if ($i >= var$7)
            break;
        $v = oooig_GimGeometry$vec3f__init_();
        var$9 = $v.$f.data;
        var$7 = $i * 3 | 0;
        var$9[0] = var$2[var$7];
        $v.$f.data[1] = var$2[var$7 + 1 | 0];
        $v.$f.data[2] = var$2[var$7 + 2 | 0];
        var$6[$i] = $v;
        $i = $i + 1 | 0;
    }
    $c.$m_buffer_data = $va;
    $c.$m_element_count = var$7;
    return $c;
}
function oooig_GimBufferArrayFloat_createRef($array) {
    var var$2, $c, $va, $i, var$6, var$7, $v, var$9;
    var$2 = $array.data;
    $c = oooig_GimBufferArrayFloat__init_();
    $va = $rt_createArray(oooig_GimGeometry$vec3f, var$2.length / 3 | 0);
    $i = 0;
    while (true) {
        var$6 = $va.data;
        var$7 = var$6.length;
        if ($i >= var$7)
            break;
        $v = oooig_GimGeometry$vec3f__init_();
        var$9 = $v.$f.data;
        var$7 = $i * 3 | 0;
        var$9[0] = var$2[var$7];
        $v.$f.data[1] = var$2[var$7 + 1 | 0];
        $v.$f.data[2] = var$2[var$7 + 2 | 0];
        var$6[$i] = $v;
        $i = $i + 1 | 0;
    }
    $c.$m_buffer_data = $va;
    $c.$m_element_count = var$7;
    return $c;
}
function oooig_GimBufferArrayFloat_size($this) {
    return $this.$m_element_count;
}
function oktgg_GLTFAnimation$read$2$1() {
    kji_Lambda.call(this);
    this.$this$043 = null;
}
function oktgg_GLTFAnimation$read$2$1__init_(var_0) {
    var var_1 = new oktgg_GLTFAnimation$read$2$1();
    oktgg_GLTFAnimation$read$2$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFAnimation$read$2$1_invoke(var$0, var$1) {
    oktgg_GLTFAnimation$read$2$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAnimation$read$2$1_invoke0($this, $$this$objs) {
    var var$2, $animationSampler;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    var$2 = $this.$this$043.$$animationSamplers.$get1($$this$objs.$int0($rt_s(450)));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(451));
    $animationSampler = var$2;
    oktgg_GLTFAnimation_access$asFloatBuffer($this.$this$043.$this$044, oktgg_GLTFAnimationSampler_getInput($animationSampler), oktgg_GLTFAnimation$read$2$1$1__init_($this, $$this$objs, $animationSampler));
}
function oktgg_GLTFAnimation$read$2$1__init_0(var$0, var$1) {
    var$0.$this$043 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktd_IShortData() {
}
function ooo_DContactGeomBuffer() {
    var a = this; jl_Object.call(a);
    a.$_buf = null;
    a.$_ofs = 0;
}
function ooo_DContactGeomBuffer__init_(var_0) {
    var var_1 = new ooo_DContactGeomBuffer();
    ooo_DContactGeomBuffer__init_0(var_1, var_0);
    return var_1;
}
function ooo_DContactGeomBuffer__init_1(var_0) {
    var var_1 = new ooo_DContactGeomBuffer();
    ooo_DContactGeomBuffer__init_2(var_1, var_0);
    return var_1;
}
function ooo_DContactGeomBuffer__init_3(var_0, var_1) {
    var var_2 = new ooo_DContactGeomBuffer();
    ooo_DContactGeomBuffer__init_4(var_2, var_0, var_1);
    return var_2;
}
function ooo_DContactGeomBuffer__init_0($this, $size) {
    jl_Object__init_0($this);
    $this.$_ofs = 0;
    $this.$_buf = ooo_DContactBuffer__init_($size);
}
function ooo_DContactGeomBuffer__init_2($this, $contactBuffer) {
    jl_Object__init_0($this);
    $this.$_ofs = 0;
    $this.$_buf = $contactBuffer;
}
function ooo_DContactGeomBuffer__init_4($this, $contactBuffer, $ofs) {
    jl_Object__init_0($this);
    $this.$_ofs = 0;
    $this.$_buf = $contactBuffer.$_buf;
    $this.$_ofs = $contactBuffer.$_ofs + $ofs | 0;
}
function ooo_DContactGeomBuffer_get0($this) {
    return ooo_DContactGeomBuffer_get($this, 0);
}
function ooo_DContactGeomBuffer_get($this, $i) {
    return $this.$_buf.$get18($i + $this.$_ofs | 0).$geom1;
}
function ooo_DContactGeomBuffer_createView($this, $skip) {
    return ooo_DContactGeomBuffer__init_3($this, $skip);
}
function ooo_DContactGeomBuffer_getSafe($this, $flags, $index) {
    if ($index >= 0 && $index < ($flags & 65535))
        return ooo_DContactGeomBuffer_get($this, $index);
    $rt_throw(jl_IllegalStateException__init_(jl_StringBuilder__init_().$append($rt_s(452)).$append1($index).$append($rt_s(453)).$append1($flags).$toString()));
}
function oktm_IVec2$Companion() {
    jl_Object.call(this);
}
var oktm_IVec2$Companion_Pool = null;
var oktm_IVec2$Companion_Zero = null;
var oktm_IVec2$Companion_AllOne = null;
var oktm_IVec2$Companion_$$INSTANCE = null;
function oktm_IVec2$Companion_$callClinit() {
    oktm_IVec2$Companion_$callClinit = $rt_eraseClinit(oktm_IVec2$Companion);
    oktm_IVec2$Companion__clinit_();
}
function oktm_IVec2$Companion__init_() {
    var var_0 = new oktm_IVec2$Companion();
    oktm_IVec2$Companion__init_0(var_0);
    return var_0;
}
function oktm_IVec2$Companion__init_0($this) {
    oktm_IVec2$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktm_IVec2$Companion__clinit_() {
    var var$1, var$2;
    oktm_IVec2$Companion_$$INSTANCE = oktm_IVec2$Companion__init_();
    var$1 = new oktu_Pool;
    oktm_IVec2$Companion$Pool$1_$callClinit();
    var$2 = oktm_IVec2$Companion$Pool$1_INSTANCE;
    oktm_IVec2$Companion$Pool$2_$callClinit();
    oktu_Pool__init_1(var$1, var$2, oktm_IVec2$Companion$Pool$2_INSTANCE);
    oktm_IVec2$Companion_Pool = var$1;
    oktm_IVec2$Companion_Zero = oktm_Vec2__init_(0.0, 0.0);
    oktm_IVec2$Companion_AllOne = oktm_Vec2__init_(1.0, 1.0);
}
function oooij_Info2Descr() {
}
function ju_HashSet() {
    ju_AbstractSet.call(this);
    this.$backingMap = null;
}
function ju_HashSet__init_() {
    var var_0 = new ju_HashSet();
    ju_HashSet__init_0(var_0);
    return var_0;
}
function ju_HashSet__init_1(var_0) {
    var var_1 = new ju_HashSet();
    ju_HashSet__init_2(var_1, var_0);
    return var_1;
}
function ju_HashSet__init_0($this) {
    ju_HashSet__init_2($this, ju_HashMap__init_());
}
function ju_HashSet__init_2($this, $backingMap) {
    ju_AbstractSet__init_0($this);
    $this.$backingMap = $backingMap;
}
function ju_HashSet_add($this, $object) {
    return $this.$backingMap.$put3($object, $this) !== null ? 0 : 1;
}
function ju_HashSet_clear($this) {
    $this.$backingMap.$clear();
}
function ju_HashSet_contains($this, $object) {
    return $this.$backingMap.$containsKey($object);
}
function ju_HashSet_iterator($this) {
    return $this.$backingMap.$keySet().$iterator();
}
function ju_HashSet_remove($this, $object) {
    return $this.$backingMap.$remove0($object) === null ? 0 : 1;
}
function ju_HashSet_size($this) {
    return $this.$backingMap.$size();
}
function oktgg_GLTF$read$16$1() {
    kji_Lambda.call(this);
    this.$this$045 = null;
}
function oktgg_GLTF$read$16$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$16$1();
    oktgg_GLTF$read$16$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$16$1_invoke(var$0) {
    oktgg_GLTF$read$16$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$16$1_invoke0($this) {
    var $$this$forEach$iv, var$2, $element$iv, $it;
    $$this$forEach$iv = $this.$this$045.$this$046.$getMaterials();
    var$2 = $$this$forEach$iv.$iterator();
    while (var$2.$hasNext()) {
        $element$iv = var$2.$next();
        $it = $element$iv;
        $it.$buildShaders();
    }
}
function oktgg_GLTF$read$16$1__init_0(var$0, var$1) {
    var$0.$this$045 = var$1;
    kji_Lambda__init_0(var$0, 0);
}
function oktgg_GLTFAnimation$read$2$1$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$047 = null;
    a.$$this_objs = null;
    a.$$animationSampler = null;
}
function oktgg_GLTFAnimation$read$2$1$1__init_(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFAnimation$read$2$1$1();
    oktgg_GLTFAnimation$read$2$1$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTFAnimation$read$2$1$1_invoke(var$0, var$1) {
    oktgg_GLTFAnimation$read$2$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAnimation$read$2$1$1_invoke0($this, $inputData) {
    kji_Intrinsics_checkParameterIsNotNull($inputData, $rt_s(454));
    oktgg_GLTFAnimation_access$asFloatBuffer($this.$this$047.$this$043.$this$044, oktgg_GLTFAnimationSampler_getOutput($this.$$animationSampler), oktgg_GLTFAnimation$read$2$1$1$1__init_($this, $inputData));
}
function oktgg_GLTFAnimation$read$2$1$1__init_0(var$0, var$1, var$2, var$3) {
    var$0.$this$047 = var$1;
    var$0.$$this_objs = var$2;
    var$0.$$animationSampler = var$3;
    kji_Lambda__init_0(var$0, 1);
}
function oooig_GimTrimeshRayCollision() {
    jl_Object.call(this);
}
function oooig_GimTrimeshRayCollision__init_() {
    var var_0 = new oooig_GimTrimeshRayCollision();
    oooig_GimTrimeshRayCollision__init_0(var_0);
    return var_0;
}
function oooig_GimTrimeshRayCollision__init_0($this) {
    jl_Object__init_0($this);
}
function oooig_GimTrimeshRayCollision_gim_trimesh_ray_collision($trimesh, $origin, $dir, $tmax, $contact) {
    var $collision_result, $boxesresult, $tridata, $pout, $tparam, $u, $v, $does_intersect, $i, var$15, $flippedPlane;
    $collision_result = oooig_GimDynArrayInt_GIM_CREATE_BOXQUERY_LIST();
    $trimesh.$m_aabbset.$gim_aabbset_ray_collision($origin, $dir, $tmax, $collision_result);
    if (!$collision_result.$size()) {
        $collision_result.$GIM_DYNARRAY_DESTROY();
        return 0;
    }
    $boxesresult = $collision_result.$GIM_DYNARRAY_POINTER0();
    $tridata = oooig_GimTriCollision$GIM_TRIANGLE_DATA__init_();
    $pout = oooig_GimGeometry$vec3f__init_();
    $tparam = oooicj_RefFloat__init_(0.0);
    $u = oooicj_RefFloat__init_(0.0);
    $v = oooicj_RefFloat__init_(0.0);
    $does_intersect = oooicj_RefBoolean__init_(0);
    $trimesh.$gim_trimesh_locks_work_data();
    $i = 0;
    while ($i < $collision_result.$size()) {
        var$15 = $boxesresult.data;
        $trimesh.$gim_trimesh_get_triangle_data(var$15[$i], $tridata);
        $flippedPlane = oooig_GimGeometry$vec4f__init_();
        oooig_GimGeometry_VEC_SCALE_4($flippedPlane, (-1.0), $tridata.$m_planes.$m_planes0.data[0]);
        oooig_GimTriCollision_RAY_TRIANGLE_INTERSECTION($origin, $dir, $tridata.$m_vertices.data[0], $tridata.$m_vertices.data[1], $tridata.$m_vertices.data[2], $flippedPlane, $pout, $u, $v, $tparam, $tmax, $does_intersect);
        if ($does_intersect.$b) {
            $contact.$tparam = $tparam.$d0;
            $contact.$u = $u.$d0;
            $contact.$v0 = $v.$d0;
            $contact.$m_face_id = var$15[$i];
            oooig_GimGeometry_VEC_COPY($contact.$m_point0, $pout);
            oooig_GimGeometry_VEC_COPY0($contact.$m_normal0, $flippedPlane);
            $trimesh.$gim_trimesh_unlocks_work_data();
            $collision_result.$GIM_DYNARRAY_DESTROY();
            return 1;
        }
        $i = $i + 1 | 0;
    }
    $trimesh.$gim_trimesh_unlocks_work_data();
    $collision_result.$GIM_DYNARRAY_DESTROY();
    return 0;
}
function oooig_GimTrimeshRayCollision_gim_trimesh_ray_closest_collision($trimesh, $origin, $dir, $tmax, $contact) {
    var $collision_result, $boxesresult, $tridata, $pout, $tparam, $u, $v, $does_intersect, $i, var$15, $flippedPlane;
    $collision_result = oooig_GimDynArrayInt_GIM_CREATE_BOXQUERY_LIST();
    $trimesh.$m_aabbset.$gim_aabbset_ray_collision($origin, $dir, $tmax, $collision_result);
    if (!$collision_result.$size()) {
        $collision_result.$GIM_DYNARRAY_DESTROY();
        return 0;
    }
    $boxesresult = $collision_result.$GIM_DYNARRAY_POINTER0();
    $tridata = oooig_GimTriCollision$GIM_TRIANGLE_DATA__init_();
    $pout = oooig_GimGeometry$vec3f__init_();
    $tparam = oooicj_RefFloat__init_(0.0);
    $u = oooicj_RefFloat__init_(0.0);
    $v = oooicj_RefFloat__init_(0.0);
    $does_intersect = oooicj_RefBoolean__init_(0);
    $contact.$tparam = $tmax + 0.10000000149011612;
    $trimesh.$gim_trimesh_locks_work_data();
    $i = 0;
    while ($i < $collision_result.$size()) {
        var$15 = $boxesresult.data;
        $trimesh.$gim_trimesh_get_triangle_data(var$15[$i], $tridata);
        $flippedPlane = oooig_GimGeometry$vec4f__init_();
        oooig_GimGeometry_VEC_SCALE_4($flippedPlane, (-1.0), $tridata.$m_planes.$m_planes0.data[0]);
        oooig_GimTriCollision_RAY_TRIANGLE_INTERSECTION($origin, $dir, $tridata.$m_vertices.data[0], $tridata.$m_vertices.data[1], $tridata.$m_vertices.data[2], $flippedPlane, $pout, $u, $v, $tparam, $tmax, $does_intersect);
        if ($does_intersect.$b && $tparam.$d0 < $contact.$tparam) {
            $contact.$tparam = $tparam.$d0;
            $contact.$u = $u.$d0;
            $contact.$v0 = $v.$d0;
            $contact.$m_face_id = var$15[$i];
            oooig_GimGeometry_VEC_COPY($contact.$m_point0, $pout);
            oooig_GimGeometry_VEC_COPY0($contact.$m_normal0, $flippedPlane);
        }
        $i = $i + 1 | 0;
    }
    $trimesh.$gim_trimesh_unlocks_work_data();
    $collision_result.$GIM_DYNARRAY_DESTROY();
    if ($contact.$tparam <= $tmax)
        return 1;
    return 0;
}
function okttm_BoxMeshBuilderTest() {
    jl_Object.call(this);
}
function okttm_BoxMeshBuilderTest__init_() {
    var var_0 = new okttm_BoxMeshBuilderTest();
    okttm_BoxMeshBuilderTest__init_0(var_0);
    return var_0;
}
function okttm_BoxMeshBuilderTest_getName($this) {
    return $rt_s(455);
}
function okttm_BoxMeshBuilderTest_testMain($this) {
    var $shader, var$2, var$3, var$4, var$5, var$6, var$7, $mesh, $cubeMatrix4, $temp;
    $shader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($shader, $rt_s(456), $rt_s(457), var$2, 0, var$3, 0, var$4, 124, var$5);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, okts_IShader$DefaultImpls_sourceCode$default($shader, 0, 1, null), null, 2, null);
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    var$6 = oktmb_BoxMeshBuilder__init_(0.0, 0.0, 0.0, 7, null);
    oktmb_BoxMeshBuilder_setXSize(var$6, 2.0);
    oktmb_BoxMeshBuilder_setYSize(var$6, 1.0);
    oktmb_BoxMeshBuilder_setZSize(var$6, 1.0);
    var$7 = null;
    var$2 = null;
    $mesh = oktmb_MeshBuilder_build$default(var$6, var$7, 1, var$2);
    oktgc_ActiveCamera_$callClinit();
    var$7 = oktgc_ActiveCamera_INSTANCE;
    var$2 = oktgc_Camera__init_(null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null);
    var$6 = oktm_Vec3__init_0(0.0, 3.0, (-3.0));
    oktm_IVec3_$callClinit();
    oktgc_ICamera$DefaultImpls_lookAt$default(var$2, var$6, oktm_IVec3$Companion_getZero(oktm_IVec3_Companion), null, 4, null);
    oktgc_Camera_setNear(var$2, 0.10000000149011612);
    oktgc_Camera_setFar(var$2, 100.0);
    var$2.$update0();
    oktgc_ActiveCamera_setApi(var$7, var$2);
    $cubeMatrix4 = oktm_Mat4__init_();
    $temp = oktm_Mat4__init_();
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttm_BoxMeshBuilderTest$testMain$2__init_($cubeMatrix4, $shader, $temp, $mesh), 1, null);
}
function okttm_BoxMeshBuilderTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_GLSLValue() {
    var a = this; oktsg_ShaderData.call(a);
    a.$name15 = null;
    a.$type4 = 0;
}
function oktsg_GLSLValue__init_(var_0, var_1) {
    var var_2 = new oktsg_GLSLValue();
    oktsg_GLSLValue__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktsg_GLSLValue_asFloat($this) {
    return oktsg_GLSLValue_getType($this) == 3 ? $this.$getRef0() : jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(321)).$toString();
}
function oktsg_GLSLValue_asVec2($this) {
    var var$1;
    a: {
        switch (oktsg_GLSLValue_getType($this)) {
            case 3:
                var$1 = jl_StringBuilder__init_().$append($rt_s(267)).$append($this.$getRef0()).$append($rt_s(341)).$toString();
                break a;
            case 4:
                break;
            default:
                var$1 = jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(322)).$toString();
                break a;
        }
        var$1 = $this.$getRef0();
    }
    return var$1;
}
function oktsg_GLSLValue_asVec3($this) {
    var var$1;
    a: {
        switch (oktsg_GLSLValue_getType($this)) {
            case 3:
                var$1 = jl_StringBuilder__init_().$append($rt_s(269)).$append($this.$getRef0()).$append($rt_s(458)).$toString();
                break a;
            case 4:
                var$1 = jl_StringBuilder__init_().$append($rt_s(269)).$append($this.$getRef0()).$append($rt_s(341)).$toString();
                break a;
            case 5:
                break;
            default:
                var$1 = jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(323)).$toString();
                break a;
        }
        var$1 = $this.$getRef0();
    }
    return var$1;
}
function oktsg_GLSLValue_asVec4($this) {
    var var$1;
    a: {
        switch (oktsg_GLSLValue_getType($this)) {
            case 3:
                var$1 = jl_StringBuilder__init_().$append($rt_s(270)).$append($this.$getRef0()).$append($rt_s(459)).$toString();
                break a;
            case 4:
                var$1 = jl_StringBuilder__init_().$append($rt_s(270)).$append($this.$getRef0()).$append($rt_s(342)).$toString();
                break a;
            case 5:
                var$1 = jl_StringBuilder__init_().$append($rt_s(270)).$append($this.$getRef0()).$append($rt_s(271)).$toString();
                break a;
            default:
        }
        var$1 = $this.$getRef0();
    }
    return var$1;
}
function oktsg_GLSLValue_getName($this) {
    return $this.$name15;
}
function oktsg_GLSLValue_getType($this) {
    return $this.$type4;
}
function oktsg_GLSLValue__init_0($this, $name, $type) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktsg_ShaderData__init_0($this);
    $this.$name15 = $name;
    $this.$type4 = $type;
}
function cgcj_JsonException$Problems() {
    jl_Enum.call(this);
}
var cgcj_JsonException$Problems_DISALLOWED_TOKEN = null;
var cgcj_JsonException$Problems_IOEXCEPTION = null;
var cgcj_JsonException$Problems_UNEXPECTED_CHARACTER = null;
var cgcj_JsonException$Problems_UNEXPECTED_EXCEPTION = null;
var cgcj_JsonException$Problems_UNEXPECTED_TOKEN = null;
var cgcj_JsonException$Problems_$VALUES = null;
function cgcj_JsonException$Problems_$callClinit() {
    cgcj_JsonException$Problems_$callClinit = $rt_eraseClinit(cgcj_JsonException$Problems);
    cgcj_JsonException$Problems__clinit_();
}
function cgcj_JsonException$Problems__init_(var_0, var_1) {
    var var_2 = new cgcj_JsonException$Problems();
    cgcj_JsonException$Problems__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgcj_JsonException$Problems_values() {
    cgcj_JsonException$Problems_$callClinit();
    return cgcj_JsonException$Problems_$VALUES.$clone();
}
function cgcj_JsonException$Problems__init_0($this, var$1, var$2) {
    cgcj_JsonException$Problems_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function cgcj_JsonException$Problems__clinit_() {
    var var$1, var$2;
    cgcj_JsonException$Problems_DISALLOWED_TOKEN = cgcj_JsonException$Problems__init_($rt_s(460), 0);
    cgcj_JsonException$Problems_IOEXCEPTION = cgcj_JsonException$Problems__init_($rt_s(461), 1);
    cgcj_JsonException$Problems_UNEXPECTED_CHARACTER = cgcj_JsonException$Problems__init_($rt_s(462), 2);
    cgcj_JsonException$Problems_UNEXPECTED_EXCEPTION = cgcj_JsonException$Problems__init_($rt_s(463), 3);
    cgcj_JsonException$Problems_UNEXPECTED_TOKEN = cgcj_JsonException$Problems__init_($rt_s(464), 4);
    var$1 = $rt_createArray(cgcj_JsonException$Problems, 5);
    var$2 = var$1.data;
    var$2[0] = cgcj_JsonException$Problems_DISALLOWED_TOKEN;
    var$2[1] = cgcj_JsonException$Problems_IOEXCEPTION;
    var$2[2] = cgcj_JsonException$Problems_UNEXPECTED_CHARACTER;
    var$2[3] = cgcj_JsonException$Problems_UNEXPECTED_EXCEPTION;
    var$2[4] = cgcj_JsonException$Problems_UNEXPECTED_TOKEN;
    cgcj_JsonException$Problems_$VALUES = var$1;
}
function oooip_DxWorldProcessContext() {
    var a = this; jl_Object.call(a);
    a.$m_pmaIslandsArena = null;
    a.$m_pmaStepperArenas = null;
    a.$m_pswObjectsAllocWorld = null;
    a.$m_pmgStepperMutexGroup = null;
}
function oooip_DxWorldProcessContext__init_() {
    var var_0 = new oooip_DxWorldProcessContext();
    oooip_DxWorldProcessContext__init_0(var_0);
    return var_0;
}
function oooip_DxWorldProcessContext_SetIslandsMemArena($this, $pmaInstance) {
    $this.$m_pmaIslandsArena = $pmaInstance;
}
function oooip_DxWorldProcessContext_GetIslandsMemArena($this) {
    return $this.$m_pmaIslandsArena;
}
function oooip_DxWorldProcessContext_SetStepperArenasList($this, $pmaInstance) {
    $this.$m_pmaStepperArenas = $pmaInstance;
}
function oooip_DxWorldProcessContext_GetStepperArenasList($this) {
    return $this.$m_pmaStepperArenas;
}
function oooip_DxWorldProcessContext__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_pmaIslandsArena = null;
    $this.$m_pswObjectsAllocWorld = null;
    $this.$m_pmgStepperMutexGroup = null;
}
function oooip_DxWorldProcessContext_EnsureStepperSyncObjectsAreAllocated($this, $pswWorldInstance) {
    var var$2;
    oooi_Common_dIASSERT(($this.$m_pswObjectsAllocWorld === null ? 0 : 1) != ($this.$m_pmgStepperMutexGroup === null ? 0 : 1) ? 0 : 1);
    if ($this.$m_pswObjectsAllocWorld === null) {
        var$2 = ooot_MutexGroupImpl__init_();
        $this.$m_pswObjectsAllocWorld = $pswWorldInstance;
        $this.$m_pmgStepperMutexGroup = var$2;
    }
    return 1;
}
function oooip_DxWorldProcessContext_ObtainStepperMemArena($this) {
    var $pmaArenaInstance, $pmaRawArenasHead, var$3, $pmaArenasHead, $bExchangeResult;
    $pmaArenaInstance = null;
    a: {
        while (true) {
            $pmaRawArenasHead = $this.$GetStepperArenasHead();
            if ($pmaRawArenasHead === null)
                break;
            var$3 = $this.$m_pmgStepperMutexGroup;
            ooot_MutexGroup$dxProcessContextMutex_$callClinit();
            var$3.$lock0(ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_ARENA_OBTAIN);
            $pmaArenasHead = $this.$GetStepperArenasHead();
            $bExchangeResult = $pmaArenasHead !== null && $this.$TryExtractingStepperArenasHead($pmaArenasHead) ? 1 : 0;
            $this.$m_pmgStepperMutexGroup.$unlock(ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_ARENA_OBTAIN);
            if ($bExchangeResult) {
                oooip_DxWorldProcessMemArena_ResetState($pmaArenasHead);
                $pmaArenaInstance = $pmaArenasHead;
                break a;
            }
        }
    }
    return $pmaArenaInstance;
}
function oooip_DxWorldProcessContext_ReturnStepperMemArena($this, $pmaArenaInstance) {
    var $pmaArenasHead;
    while (true) {
        $pmaArenasHead = $this.$GetStepperArenasHead();
        oooip_DxWorldProcessMemArena_SetNextMemArena($pmaArenaInstance, $pmaArenasHead);
        if ($this.$TryInsertingStepperArenasHead($pmaArenaInstance, $pmaArenasHead))
            break;
    }
}
function oooip_DxWorldProcessContext_ReallocateIslandsMemArena($this, $nMemoryRequirement, $pmmMemortManager, $fReserveFactor, $uiReserveMinimum) {
    var $pmaExistingArena, $pmaNewMemArena;
    $pmaExistingArena = $this.$GetIslandsMemArena();
    $pmaNewMemArena = oooip_DxWorldProcessMemArena_ReallocateMemArena($pmaExistingArena, $nMemoryRequirement, $pmmMemortManager, $fReserveFactor, $uiReserveMinimum);
    oooip_DxWorldProcessContext_SetIslandsMemArena($this, $pmaNewMemArena);
    oooip_DxWorldProcessMemArena_ResetState($pmaNewMemArena);
    return $pmaNewMemArena;
}
function oooip_DxWorldProcessContext_ReallocateStepperMemArenas($this, $world, $nArenasToProcess, $nMemoryRequirement, $pmmMemortManager, $fReserveFactor, $uiReserveMinimum) {
    var $pmaRebuiltArenasHead, $pmaRebuiltArenasTail, $pmaExistingArenas, var$10, $pmaNewMemArena, var$12, $bResult;
    $pmaRebuiltArenasHead = null;
    $pmaRebuiltArenasTail = null;
    $pmaExistingArenas = $this.$GetStepperArenasList();
    a: {
        while (true) {
            if (!$nArenasToProcess) {
                $this.$FreeArenasList($pmaExistingArenas);
                break a;
            }
            if ($pmaExistingArenas !== null)
                var$10 = oooip_DxWorldProcessMemArena_GetNextMemArena($pmaExistingArenas);
            else if ($pmaRebuiltArenasTail === null)
                var$10 = $pmaExistingArenas;
            else {
                oooip_DxWorldProcessMemArena_SetNextMemArena($pmaRebuiltArenasTail, null);
                $pmaRebuiltArenasTail = null;
                var$10 = $pmaExistingArenas;
            }
            $pmaNewMemArena = oooip_DxWorldProcessMemArena_ReallocateMemArena($pmaExistingArenas, $nMemoryRequirement, $pmmMemortManager, $fReserveFactor, $uiReserveMinimum);
            if ($pmaNewMemArena === null) {
                if ($pmaExistingArenas === null)
                    break;
                $pmaNewMemArena = $pmaRebuiltArenasTail;
            } else {
                if ($pmaRebuiltArenasTail !== null)
                    oooip_DxWorldProcessMemArena_SetNextMemArena($pmaRebuiltArenasTail, $pmaNewMemArena);
                else if ($pmaRebuiltArenasHead !== null) {
                    oooip_DxWorldProcessMemArena_SetNextMemArena($pmaNewMemArena, $pmaRebuiltArenasHead);
                    $pmaRebuiltArenasHead = $pmaNewMemArena;
                    $pmaNewMemArena = $pmaRebuiltArenasTail;
                } else {
                    var$12 = $pmaNewMemArena;
                    $pmaRebuiltArenasHead = $pmaNewMemArena;
                    $pmaNewMemArena = var$12;
                }
                $nArenasToProcess = $nArenasToProcess + (-1) | 0;
            }
            $pmaRebuiltArenasTail = $pmaNewMemArena;
            $pmaExistingArenas = var$10;
        }
    }
    if ($pmaRebuiltArenasTail !== null)
        oooip_DxWorldProcessMemArena_SetNextMemArena($pmaRebuiltArenasTail, null);
    $this.$SetStepperArenasList($pmaRebuiltArenasHead);
    $bResult = $nArenasToProcess ? 0 : 1;
    return $bResult;
}
function oooip_DxWorldProcessContext_FreeArenasList($this, $pmaExistingArenas) {
    return;
}
function oooip_DxWorldProcessContext_GetStepperArenasHead($this) {
    return $this.$m_pmaStepperArenas;
}
function oooip_DxWorldProcessContext_TryExtractingStepperArenasHead($this, $pmaHeadInstance) {
    var $pmaNextInstance;
    $pmaNextInstance = oooip_DxWorldProcessMemArena_GetNextMemArena($pmaHeadInstance);
    $this.$m_pmaStepperArenas = $pmaNextInstance;
    return 1;
}
function oooip_DxWorldProcessContext_TryInsertingStepperArenasHead($this, $pmaArenaInstance, $pmaExistingHead) {
    $this.$m_pmaStepperArenas = $pmaArenaInstance;
    return 1;
}
function oooip_DxWorldProcessContext_LockForStepbodySerialization($this) {
    var var$1;
    var$1 = $this.$m_pmgStepperMutexGroup;
    ooot_MutexGroup$dxProcessContextMutex_$callClinit();
    var$1.$lock0(ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_STEPBODY_SERIALIZE);
}
function oooip_DxWorldProcessContext_UnlockForStepbodySerialization($this) {
    var var$1;
    var$1 = $this.$m_pmgStepperMutexGroup;
    ooot_MutexGroup$dxProcessContextMutex_$callClinit();
    var$1.$unlock(ooot_MutexGroup$dxProcessContextMutex_dxPCM_STEPPER_STEPBODY_SERIALIZE);
}
function oooip_DxWorldProcessContext_dxReallocateWorldProcessContext($world, $islandsInfo, $stepSize, $stepperEstimate) {
    var $result, $wmem, $context, $reserveInfo, $memmgr, $islandsReq, var$11, $islandsArena, $stepperReq, $stepperReqWithCallContext, $islandThreadsCount;
    $result = 0;
    $wmem = $world.$wmem !== null ? $world.$wmem : oooip_DxStepWorkingMemory__init_();
    $world.$wmem = $wmem;
    if ($wmem !== null) {
        $context = $wmem.$SureGetWorldProcessingContext();
        if ($context !== null && $context.$EnsureStepperSyncObjectsAreAllocated($world)) {
            $reserveInfo = $wmem.$SureGetMemoryReserveInfo();
            $memmgr = $wmem.$SureGetMemoryManager();
            $islandsReq = $world.$EstimateIslandProcessingMemoryRequirements();
            oooi_Common_dIASSERT($islandsReq != oooip_DxUtil_dEFFICIENT_SIZE($islandsReq) ? 0 : 1);
            var$11 = $reserveInfo.$m_uiReserveMinimum;
            $islandsArena = $context.$ReallocateIslandsMemArena($islandsReq, $memmgr, 1.0, var$11);
            if ($islandsArena !== null) {
                oooi_Common_dIASSERT(oooip_DxWorldProcessMemArena_IsStructureValid($islandsArena));
                $stepperReq = oooip_DxWorldProcessIslandsInfo_BuildIslandsAndEstimateStepperMemoryRequirements($islandsInfo, $islandsArena, $world, $stepSize, $stepperEstimate);
                oooi_Common_dIASSERT($stepperReq != oooip_DxUtil_dEFFICIENT_SIZE($stepperReq) ? 0 : 1);
                $stepperReqWithCallContext = $stepperReq + oooip_DxUtil_dEFFICIENT_SIZE(1) | 0;
                $islandThreadsCount = $world.$GetThreadingIslandsMaxThreadsCount(null);
                if ($context.$ReallocateStepperMemArenas($world, $islandThreadsCount, $stepperReqWithCallContext, $memmgr, $reserveInfo.$m_fReserveFactor, $reserveInfo.$m_uiReserveMinimum))
                    $result = 1;
            }
        }
    }
    return $result;
}
function oktt_Texture2DTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$screenQuad2 = null;
    a.$$texture = null;
}
function oktt_Texture2DTest$testMain$1__init_(var_0, var_1) {
    var var_2 = new oktt_Texture2DTest$testMain$1();
    oktt_Texture2DTest$testMain$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktt_Texture2DTest$testMain$1_invoke(var$0) {
    oktt_Texture2DTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktt_Texture2DTest$testMain$1_invoke0($this) {
    oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad2, $this.$$texture, null, null, null, 14, null);
}
function oktt_Texture2DTest$testMain$1__init_0(var$0, var$1, var$2) {
    var$0.$$screenQuad2 = var$1;
    var$0.$$texture = var$2;
    kji_Lambda__init_0(var$0, 0);
}
function okt_IApp() {
}
function okt_APP() {
    jl_Object.call(this);
}
var okt_APP_api = null;
var okt_APP_INSTANCE = null;
function okt_APP_$callClinit() {
    okt_APP_$callClinit = $rt_eraseClinit(okt_APP);
    okt_APP__clinit_();
}
function okt_APP__init_() {
    var var_0 = new okt_APP();
    okt_APP__init_0(var_0);
    return var_0;
}
function okt_APP_setApi($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    okt_APP_api = $_set___;
}
function okt_APP_getPlatformType($this) {
    return okt_APP_api.$getPlatformType();
}
function okt_APP_getDeltaTime($this) {
    return okt_APP_api.$getDeltaTime();
}
function okt_APP_getWidth($this) {
    return okt_APP_api.$getWidth();
}
function okt_APP_getHeight($this) {
    return okt_APP_api.$getHeight();
}
function okt_APP_messageBox($this, $title, $message) {
    kji_Intrinsics_checkParameterIsNotNull($title, $rt_s(465));
    kji_Intrinsics_checkParameterIsNotNull($message, $rt_s(466));
    okt_APP_api.$messageBox($title, $message);
}
function okt_APP__init_0($this) {
    okt_APP_$callClinit();
    jl_Object__init_0($this);
}
function okt_APP__clinit_() {
    okt_APP_INSTANCE = okt_APP__init_();
    okt_APP_api = okt_APP$api$1__init_();
}
function jur_AbstractCharClass$LazyJavaTitleCase() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaTitleCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaTitleCase();
    jur_AbstractCharClass$LazyJavaTitleCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaTitleCase__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaTitleCase_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaTitleCase$1__init_($this);
}
function jur_PreviousMatch() {
    jur_AbstractSet.call(this);
}
function jur_PreviousMatch__init_() {
    var var_0 = new jur_PreviousMatch();
    jur_PreviousMatch__init_0(var_0);
    return var_0;
}
function jur_PreviousMatch__init_0($this) {
    jur_AbstractSet__init_0($this);
}
function jur_PreviousMatch_matches($this, $stringIndex, $testString, $matchResult) {
    if ($stringIndex != $matchResult.$getPreviousMatchEnd())
        return (-1);
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
}
function jur_PreviousMatch_hasConsumed($this, $matchResult) {
    return 0;
}
function ooo_DAABBC() {
}
function ooo_DAABB() {
    var a = this; jl_Object.call(a);
    a.$_min = null;
    a.$_max = null;
}
function ooo_DAABB__init_() {
    var var_0 = new ooo_DAABB();
    ooo_DAABB__init_0(var_0);
    return var_0;
}
function ooo_DAABB__init_0($this) {
    jl_Object__init_0($this);
    $this.$_min = oom_DVector3__init_();
    $this.$_max = oom_DVector3__init_();
}
function ooo_DAABB_len0($this) {
    return $this.$getMax0() - $this.$getMin0();
}
function ooo_DAABB_len1($this) {
    return $this.$getMax1() - $this.$getMin1();
}
function ooo_DAABB_len2($this) {
    return $this.$getMax2() - $this.$getMin2();
}
function ooo_DAABB_isValid($this) {
    if (!(isNaN($this.$getMin0()) ? 1 : 0) && !(isNaN($this.$getMax0()) ? 1 : 0) && !(isNaN($this.$getMin1()) ? 1 : 0) && !(isNaN($this.$getMax1()) ? 1 : 0) && !(isNaN($this.$getMin2()) ? 1 : 0) && !(isNaN($this.$getMax2()) ? 1 : 0))
        return 1;
    return 0;
}
function ooo_DAABB_isDisjoint($this, $aabb2) {
    if ($this.$getMin0() <= $aabb2.$getMax0() && $this.$getMax0() >= $aabb2.$getMin0() && $this.$getMin1() <= $aabb2.$getMax1() && $this.$getMax1() >= $aabb2.$getMin1() && $this.$getMin2() <= $aabb2.$getMax2() && $this.$getMax2() >= $aabb2.$getMin2())
        return 0;
    return 1;
}
function ooo_DAABB_setMin0($this, $d) {
    oom_DVector3_set00($this.$_min, $d);
}
function ooo_DAABB_setMin1($this, $d) {
    oom_DVector3_set10($this.$_min, $d);
}
function ooo_DAABB_setMin2($this, $d) {
    oom_DVector3_set20($this.$_min, $d);
}
function ooo_DAABB_setMax0($this, $d) {
    oom_DVector3_set00($this.$_max, $d);
}
function ooo_DAABB_setMax1($this, $d) {
    oom_DVector3_set10($this.$_max, $d);
}
function ooo_DAABB_setMax2($this, $d) {
    oom_DVector3_set20($this.$_max, $d);
}
function ooo_DAABB_getMin0($this) {
    return oom_DVector3_get0($this.$_min);
}
function ooo_DAABB_getMin1($this) {
    return oom_DVector3_get1($this.$_min);
}
function ooo_DAABB_getMin2($this) {
    return oom_DVector3_get2($this.$_min);
}
function ooo_DAABB_getMax0($this) {
    return oom_DVector3_get0($this.$_max);
}
function ooo_DAABB_getMax1($this) {
    return oom_DVector3_get1($this.$_max);
}
function ooo_DAABB_getMax2($this) {
    return oom_DVector3_get2($this.$_max);
}
function ooo_DAABB_getMax($this, $i) {
    return oom_DVector3_get($this.$_max, $i);
}
function ooo_DAABB_getMin($this, $i) {
    return oom_DVector3_get($this.$_min, $i);
}
function ooo_DAABB_set($this, $aabb) {
    $this.$setMin0($aabb.$getMin0());
    $this.$setMin1($aabb.$getMin1());
    $this.$setMin2($aabb.$getMin2());
    $this.$setMax0($aabb.$getMax0());
    $this.$setMax1($aabb.$getMax1());
    $this.$setMax2($aabb.$getMax2());
}
function ooo_DAABB_set0($this, $min0, $max0, $min1, $max1, $min2, $max2) {
    oom_DVector3_set0($this.$_min, $min0, $min1, $min2);
    oom_DVector3_set0($this.$_max, $max0, $max1, $max2);
}
function ooo_DAABB_setZero($this) {
    oom_DVector3_setZero($this.$_min);
    oom_DVector3_setZero($this.$_max);
}
function ooo_DAABB_expand($this, $aabb) {
    if ($aabb.$getMin0() < oom_DVector3_get0($this.$_min))
        oom_DVector3_set00($this.$_min, $aabb.$getMin0());
    if ($aabb.$getMin1() < oom_DVector3_get1($this.$_min))
        oom_DVector3_set10($this.$_min, $aabb.$getMin1());
    if ($aabb.$getMin2() < oom_DVector3_get2($this.$_min))
        oom_DVector3_set20($this.$_min, $aabb.$getMin2());
    if ($aabb.$getMax0() > oom_DVector3_get0($this.$_max))
        oom_DVector3_set00($this.$_max, $aabb.$getMax0());
    if ($aabb.$getMax1() > oom_DVector3_get1($this.$_max))
        oom_DVector3_set10($this.$_max, $aabb.$getMax1());
    if ($aabb.$getMax2() > oom_DVector3_get2($this.$_max))
        oom_DVector3_set20($this.$_max, $aabb.$getMax2());
}
function jur_NonCapFSet() {
    jur_FSet.call(this);
}
function jur_NonCapFSet__init_(var_0) {
    var var_1 = new jur_NonCapFSet();
    jur_NonCapFSet__init_0(var_1, var_0);
    return var_1;
}
function jur_NonCapFSet__init_0($this, $groupIndex) {
    jur_FSet__init_0($this, $groupIndex);
}
function jur_NonCapFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr;
    $gr = $this.$getGroupIndex();
    $matchResult.$setConsumed($gr, $stringIndex - $matchResult.$getConsumed($gr) | 0);
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
}
function jur_NonCapFSet_hasConsumed($this, $mr) {
    return 0;
}
function oktgg_GLTFAnimation$asFloatBuffer$1() {
    var a = this; kji_Lambda.call(a);
    a.$$bufferView = null;
    a.$$accessor = null;
    a.$$loaded = null;
}
function oktgg_GLTFAnimation$asFloatBuffer$1__init_(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFAnimation$asFloatBuffer$1();
    oktgg_GLTFAnimation$asFloatBuffer$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTFAnimation$asFloatBuffer$1_invoke(var$0, var$1) {
    oktgg_GLTFAnimation$asFloatBuffer$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAnimation$asFloatBuffer$1_invoke0($this, $buffer) {
    var $view;
    kji_Intrinsics_checkParameterIsNotNull($buffer, $rt_s(467));
    oktgg_GLTFBuffer_getBytes($buffer).$setPosition(oktgg_GLTFBufferView_getByteOffset($this.$$bufferView) + oktgg_GLTFAccessor_getByteOffset($this.$$accessor) | 0);
    $view = oktgg_GLTFBuffer_getBytes($buffer).$floatView();
    $view.$setSize(oktgg_GLTFAccessor_size($this.$$accessor) / 4 | 0);
    $this.$$loaded.$invoke1($view);
}
function oktgg_GLTFAnimation$asFloatBuffer$1__init_0(var$0, var$1, var$2, var$3) {
    var$0.$$bufferView = var$1;
    var$0.$$accessor = var$2;
    var$0.$$loaded = var$3;
    kji_Lambda__init_0(var$0, 1);
}
function oktgn_ITransformNode$Companion() {
    jl_Object.call(this);
}
var oktgn_ITransformNode$Companion_Build = null;
var oktgn_ITransformNode$Companion_Cap = null;
var oktgn_ITransformNode$Companion_tmp = null;
var oktgn_ITransformNode$Companion_tmp2 = null;
var oktgn_ITransformNode$Companion_tmpM = null;
var oktgn_ITransformNode$Companion_$$INSTANCE = null;
function oktgn_ITransformNode$Companion_$callClinit() {
    oktgn_ITransformNode$Companion_$callClinit = $rt_eraseClinit(oktgn_ITransformNode$Companion);
    oktgn_ITransformNode$Companion__clinit_();
}
function oktgn_ITransformNode$Companion__init_() {
    var var_0 = new oktgn_ITransformNode$Companion();
    oktgn_ITransformNode$Companion__init_0(var_0);
    return var_0;
}
function oktgn_ITransformNode$Companion_getCap($this) {
    return oktgn_ITransformNode$Companion_Cap;
}
function oktgn_ITransformNode$Companion__init_0($this) {
    oktgn_ITransformNode$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktgn_ITransformNode$Companion__clinit_() {
    oktgn_ITransformNode$Companion_$$INSTANCE = oktgn_ITransformNode$Companion__init_();
    oktgn_ITransformNode$Companion$Build$1_$callClinit();
    oktgn_ITransformNode$Companion_Build = oktgn_ITransformNode$Companion$Build$1_INSTANCE;
    oktgn_ITransformNode$Companion_Cap = oktgn_AdapterTransformNode__init_();
    oktgn_ITransformNode$Companion_tmp = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktgn_ITransformNode$Companion_tmp2 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktgn_ITransformNode$Companion_tmpM = oktm_Mat4__init_();
}
function oktgn_ITransformNode$Companion_access$getTmp$p($$this) {
    oktgn_ITransformNode$Companion_$callClinit();
    return oktgn_ITransformNode$Companion_tmp;
}
function oktgn_ITransformNode$Companion_access$getTmpM$p($$this) {
    oktgn_ITransformNode$Companion_$callClinit();
    return oktgn_ITransformNode$Companion_tmpM;
}
function oktsg_GLSLFloatInline() {
    var a = this; oktsg_ShaderData.call(a);
    a.$value5 = 0.0;
    a.$name16 = null;
}
function oktsg_GLSLFloatInline__init_(var_0, var_1) {
    var var_2 = new oktsg_GLSLFloatInline();
    oktsg_GLSLFloatInline__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktsg_GLSLFloatInline__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new oktsg_GLSLFloatInline();
    oktsg_GLSLFloatInline__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktsg_GLSLFloatInline__init_3() {
    var var_0 = new oktsg_GLSLFloatInline();
    oktsg_GLSLFloatInline__init_4(var_0);
    return var_0;
}
function oktsg_GLSLFloatInline_getInlineCode($this) {
    return oktsg_GLSLFloatInline_asFloat($this);
}
function oktsg_GLSLFloatInline_getType($this) {
    return 3;
}
function oktsg_GLSLFloatInline_getScope($this) {
    return 0;
}
function oktsg_GLSLFloatInline_asFloat($this) {
    return jl_String_valueOf0($this.$value5);
}
function oktsg_GLSLFloatInline_asVec2($this) {
    return jl_StringBuilder__init_().$append($rt_s(267)).$append11($this.$value5).$append($rt_s(268)).$append11($this.$value5).$append12(41).$toString();
}
function oktsg_GLSLFloatInline_asVec3($this) {
    return jl_StringBuilder__init_().$append($rt_s(269)).$append11($this.$value5).$append($rt_s(268)).$append11($this.$value5).$append($rt_s(268)).$append11($this.$value5).$append12(41).$toString();
}
function oktsg_GLSLFloatInline_asVec4($this) {
    return jl_StringBuilder__init_().$append($rt_s(270)).$append11($this.$value5).$append($rt_s(268)).$append11($this.$value5).$append($rt_s(268)).$append11($this.$value5).$append($rt_s(268)).$append11($this.$value5).$append12(41).$toString();
}
function oktsg_GLSLFloatInline_getName($this) {
    return $this.$name16;
}
function oktsg_GLSLFloatInline__init_0($this, $value, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktsg_ShaderData__init_0($this);
    $this.$value5 = $value;
    $this.$name16 = $name;
}
function oktsg_GLSLFloatInline__init_2(var$0, var$1, var$2, var$3, var$4) {
    if (var$3 & 1)
        var$1 = 0.0;
    if (var$3 & 2)
        var$2 = $rt_s(6);
    oktsg_GLSLFloatInline__init_0(var$0, var$1, var$2);
}
function oktsg_GLSLFloatInline__init_4(var$0) {
    oktsg_GLSLFloatInline__init_2(var$0, 0.0, null, 3, null);
}
function oktt_TvmMouse() {
    var a = this; jl_Object.call(a);
    a.$x1 = 0;
    a.$y1 = 0;
    a.$deltaX = 0;
    a.$deltaY = 0;
    a.$isCursorEnabled = 0;
    a.$pressed = null;
    a.$listeners = null;
    a.$lastButton = 0;
}
function oktt_TvmMouse__init_(var_0) {
    var var_1 = new oktt_TvmMouse();
    oktt_TvmMouse__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmMouse_getX($this) {
    return $this.$x1;
}
function oktt_TvmMouse_setX($this, $_set___) {
    $this.$x1 = $_set___;
}
function oktt_TvmMouse_getY($this) {
    return $this.$y1;
}
function oktt_TvmMouse_setY($this, $_set___) {
    $this.$y1 = $_set___;
}
function oktt_TvmMouse_setDeltaX($this, $_set___) {
    $this.$deltaX = $_set___;
}
function oktt_TvmMouse_setDeltaY($this, $_set___) {
    $this.$deltaY = $_set___;
}
function oktt_TvmMouse_getPressed($this) {
    return $this.$pressed;
}
function oktt_TvmMouse_getListeners($this) {
    return $this.$listeners;
}
function oktt_TvmMouse_getLastButton($this) {
    return $this.$lastButton;
}
function oktt_TvmMouse_setLastButton($this, $_set___) {
    $this.$lastButton = $_set___;
}
function oktt_TvmMouse_getButton($this, $event) {
    var var$2;
    a: {
        kji_Intrinsics_checkParameterIsNotNull($event, $rt_s(468));
        switch ($event.button) {
            case 0:
                break;
            case 1:
                var$2 = 2;
                break a;
            case 2:
                var$2 = 1;
                break a;
            case 3:
                var$2 = 3;
                break a;
            case 4:
                var$2 = 4;
                break a;
            default:
                var$2 = (-1);
                break a;
        }
        var$2 = 0;
    }
    return var$2;
}
function oktt_TvmMouse_updatePos($this, $event) {
    kji_Intrinsics_checkParameterIsNotNull($event, $rt_s(468));
    oktt_TvmMouse_setX($this, $event.screenX);
    oktt_TvmMouse_setY($this, $event.screenY);
    oktt_TvmMouse_setDeltaX($this, $event.movementX | 0);
    oktt_TvmMouse_setDeltaY($this, $event.movementY | 0);
}
function oktt_TvmMouse_addListener($this, $listener) {
    kji_Intrinsics_checkParameterIsNotNull($listener, $rt_s(469));
    $this.$listeners.$add1($listener);
}
function oktt_TvmMouse_reset($this) {
    $this.$listeners.$clear();
}
function oktt_TvmMouse__init_0($this, $canvas) {
    var var$2, var$3;
    kji_Intrinsics_checkParameterIsNotNull($canvas, $rt_s(470));
    jl_Object__init_0($this);
    $this.$isCursorEnabled = 1;
    $this.$pressed = ju_HashSet__init_();
    $this.$listeners = ju_ArrayList__init_();
    $this.$lastButton = (-1);
    var$2 = otji_JS_functionAsObject(oktt_TvmMouse$1__init_($this), "handleEvent");
    $canvas.addEventListener("mousedown", otji_JS_function(var$2, "handleEvent"), !!0);
    var$2 = otji_JS_functionAsObject(oktt_TvmMouse$2__init_($this), "handleEvent");
    $canvas.addEventListener("mouseup", otji_JS_function(var$2, "handleEvent"), !!0);
    var$3 = otji_JS_functionAsObject(oktt_TvmMouse$3__init_($this), "handleEvent");
    $canvas.addEventListener("wheel", otji_JS_function(var$3, "handleEvent"), !!0);
    var$3 = otji_JS_functionAsObject(oktt_TvmMouse$4__init_($this), "handleEvent");
    $canvas.addEventListener("mousemove", otji_JS_function(var$3, "handleEvent"), !!0);
    var$3 = otji_JS_functionAsObject(oktt_TvmMouse$5__init_($this), "handleEvent");
    $canvas.addEventListener("mouseenter", otji_JS_function(var$3, "handleEvent"), !!0);
}
function oooig_GimGeometry$mat4f() {
    jl_Object.call(this);
    this.$f1 = null;
}
function oooig_GimGeometry$mat4f__init_() {
    var var_0 = new oooig_GimGeometry$mat4f();
    oooig_GimGeometry$mat4f__init_0(var_0);
    return var_0;
}
function oooig_GimGeometry$mat4f__init_0($this) {
    jl_Object__init_0($this);
    $this.$f1 = $rt_createFloatArray(16);
}
function oktg_IArmature() {
}
var oktg_IArmature_Companion = null;
function oktg_IArmature_$callClinit() {
    oktg_IArmature_$callClinit = $rt_eraseClinit(oktg_IArmature);
    oktg_IArmature__clinit_();
}
function oktg_IArmature__clinit_() {
    oktg_IArmature$Companion_$callClinit();
    oktg_IArmature_Companion = oktg_IArmature$Companion_$$INSTANCE;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$048 = null;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaLowerCase$1();
    jur_AbstractCharClass$LazyJavaLowerCase$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1__init_0($this, $this$0) {
    $this.$this$048 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLowerCase$1_contains($this, $ch) {
    return jl_Character_isLowerCase($ch);
}
function jl_Object$monitorExit$lambda$_8_0() {
    jl_Object.call(this);
    this.$_01 = null;
}
function jl_Object$monitorExit$lambda$_8_0__init_(var_0) {
    var var_1 = new jl_Object$monitorExit$lambda$_8_0();
    jl_Object$monitorExit$lambda$_8_0__init_0(var_1, var_0);
    return var_1;
}
function jl_Object$monitorExit$lambda$_8_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_01 = var$1;
}
function jl_Object$monitorExit$lambda$_8_0_run(var$0) {
    jl_Object_lambda$monitorExit$2(var$0.$_01);
}
function ji_PrintWriter() {
    var a = this; ji_Writer.call(a);
    a.$out1 = null;
    a.$ioError = 0;
    a.$autoflush = 0;
}
function ji_PrintWriter__init_0(var_0) {
    var var_1 = new ji_PrintWriter();
    ji_PrintWriter__init_(var_1, var_0);
    return var_1;
}
function ji_PrintWriter__init_1(var_0, var_1) {
    var var_2 = new ji_PrintWriter();
    ji_PrintWriter__init_2(var_2, var_0, var_1);
    return var_2;
}
function ji_PrintWriter__init_($this, $wr) {
    ji_PrintWriter__init_2($this, $wr, 0);
}
function ji_PrintWriter__init_2($this, $wr, $autoflush) {
    ji_Writer__init_2($this, $wr);
    $this.$autoflush = $autoflush;
    $this.$out1 = $wr;
}
function ji_PrintWriter_flush($this) {
    var $$je;
    a: {
        if ($this.$out1 === null)
            $this.$setError();
        else {
            try {
                $this.$out1.$flush0();
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                } else {
                    throw $$e;
                }
            }
            $this.$setError();
        }
    }
}
function ji_PrintWriter_print($this, $str) {
    if ($str === null)
        $str = jl_String_valueOf(null);
    $this.$write1($str);
}
function ji_PrintWriter_println($this) {
    $this.$print($rt_s(471));
    if ($this.$autoflush)
        $this.$flush0();
}
function ji_PrintWriter_println0($this, $obj) {
    $this.$println1(jl_String_valueOf($obj));
}
function ji_PrintWriter_println1($this, $str) {
    $this.$print($str);
    $this.$println();
}
function ji_PrintWriter_setError($this) {
    $this.$ioError = 1;
}
function ji_PrintWriter_write($this, $buf) {
    $this.$write2($buf, 0, $buf.data.length);
}
function ji_PrintWriter_write0($this, $buf, $offset, $count) {
    ji_PrintWriter_doWrite($this, $buf, $offset, $count);
}
function ji_PrintWriter_doWrite($this, $buf, $offset, $count) {
    var $$je;
    a: {
        if ($this.$out1 === null)
            $this.$setError();
        else {
            try {
                $this.$out1.$write2($buf, $offset, $count);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                } else {
                    throw $$e;
                }
            }
            $this.$setError();
        }
    }
}
function ji_PrintWriter_write1($this, $str) {
    $this.$write3($str.$toCharArray());
}
function oktgg_GLTFAccessor() {
    var a = this; jl_Object.call(a);
    a.$gltf2 = null;
    a.$elementIndex2 = 0;
    a.$bufferView1 = 0;
    a.$byteOffset1 = 0;
    a.$componentType = 0;
    a.$normalized0 = 0;
    a.$count0 = 0;
    a.$type5 = null;
    a.$max1 = null;
    a.$min1 = null;
    a.$sparse = null;
    a.$name17 = null;
}
function oktgg_GLTFAccessor__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11) {
    var var_12 = new oktgg_GLTFAccessor();
    oktgg_GLTFAccessor__init_0(var_12, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11);
    return var_12;
}
function oktgg_GLTFAccessor__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13) {
    var var_14 = new oktgg_GLTFAccessor();
    oktgg_GLTFAccessor__init_2(var_14, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13);
    return var_14;
}
function oktgg_GLTFAccessor_typeSize($this) {
    var var$1, var$2;
    a: {
        b: {
            c: {
                d: {
                    e: {
                        f: {
                            g: {
                                h: {
                                    i: {
                                        var$1 = $this.$type5;
                                        switch (var$1.$hashCode()) {
                                            case -1854860308:
                                                break;
                                            case 2359026:
                                                break e;
                                            case 2359027:
                                                break i;
                                            case 2359028:
                                                break h;
                                            case 2630462:
                                                break g;
                                            case 2630463:
                                                break f;
                                            case 2630464:
                                                break d;
                                            default:
                                                break a;
                                        }
                                        if (!var$1.$equals0($rt_s(472)))
                                            break a;
                                        var$2 = 1;
                                        break b;
                                    }
                                    if (!var$1.$equals0($rt_s(473)))
                                        break a;
                                    var$2 = 9;
                                    break b;
                                }
                                if (!var$1.$equals0($rt_s(474)))
                                    break a;
                                var$2 = 16;
                                break b;
                            }
                            if (!var$1.$equals0($rt_s(475)))
                                break a;
                            var$2 = 2;
                            break b;
                        }
                        if (!var$1.$equals0($rt_s(476)))
                            break a;
                        var$2 = 3;
                        break b;
                    }
                    if (!var$1.$equals0($rt_s(477)))
                        break a;
                    break c;
                }
                if (!var$1.$equals0($rt_s(478)))
                    break a;
            }
            var$2 = 4;
        }
        return var$2;
    }
    $rt_throw(jl_IllegalStateException__init_(jl_StringBuilder__init_().$append($rt_s(479)).$append($this.$type5).$toString()));
}
function oktgg_GLTFAccessor_componentTypeSize($this) {
    var var$1;
    a: {
        b: {
            switch ($this.$componentType) {
                case 5120:
                    break;
                case 5121:
                    var$1 = 1;
                    break b;
                case 5122:
                    var$1 = 2;
                    break b;
                case 5123:
                    var$1 = 2;
                    break b;
                case 5124:
                    break a;
                case 5125:
                    var$1 = 4;
                    break b;
                case 5126:
                    var$1 = 4;
                    break b;
                default:
                    break a;
            }
            var$1 = 1;
        }
        return var$1;
    }
    $rt_throw(jl_IllegalStateException__init_(jl_StringBuilder__init_().$append($rt_s(479)).$append1($this.$componentType).$toString()));
}
function oktgg_GLTFAccessor_strideSize($this) {
    return $rt_imul(oktgg_GLTFAccessor_typeSize($this), oktgg_GLTFAccessor_componentTypeSize($this));
}
function oktgg_GLTFAccessor_size($this) {
    return $rt_imul(oktgg_GLTFAccessor_strideSize($this), $this.$count0);
}
function oktgg_GLTFAccessor_read($this, $json) {
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $json.$int($rt_s(20), oktgg_GLTFAccessor$read$1__init_($this));
    $json.$int($rt_s(266), oktgg_GLTFAccessor$read$2__init_($this));
    $this.$componentType = $json.$int0($rt_s(480));
    $json.$bool($rt_s(481), oktgg_GLTFAccessor$read$3__init_($this));
    $this.$count0 = $json.$int0($rt_s(482));
    $this.$type5 = $json.$string1($rt_s(370));
    $json.$array($rt_s(483), oktgg_GLTFAccessor$read$4__init_($this));
    $json.$array($rt_s(484), oktgg_GLTFAccessor$read$5__init_($this));
    $json.$get16($rt_s(485), oktgg_GLTFAccessor$read$6__init_($this));
}
function oktgg_GLTFAccessor_getBufferView($this) {
    return $this.$bufferView1;
}
function oktgg_GLTFAccessor_setBufferView($this, $_set___) {
    $this.$bufferView1 = $_set___;
}
function oktgg_GLTFAccessor_getByteOffset($this) {
    return $this.$byteOffset1;
}
function oktgg_GLTFAccessor_setByteOffset($this, $_set___) {
    $this.$byteOffset1 = $_set___;
}
function oktgg_GLTFAccessor_getComponentType($this) {
    return $this.$componentType;
}
function oktgg_GLTFAccessor_getNormalized($this) {
    return $this.$normalized0;
}
function oktgg_GLTFAccessor_setNormalized($this, $_set___) {
    $this.$normalized0 = $_set___;
}
function oktgg_GLTFAccessor_getCount($this) {
    return $this.$count0;
}
function oktgg_GLTFAccessor_getType($this) {
    return $this.$type5;
}
function oktgg_GLTFAccessor_getMax($this) {
    return $this.$max1;
}
function oktgg_GLTFAccessor_setMax($this, $_set___) {
    $this.$max1 = $_set___;
}
function oktgg_GLTFAccessor_setMin($this, $_set___) {
    $this.$min1 = $_set___;
}
function oktgg_GLTFAccessor_getSparse($this) {
    return $this.$sparse;
}
function oktgg_GLTFAccessor_setSparse($this, $_set___) {
    $this.$sparse = $_set___;
}
function oktgg_GLTFAccessor__init_0($this, $gltf, $elementIndex, $bufferView, $byteOffset, $componentType, $normalized, $count, $type, $max, $min, $sparse, $name) {
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($type, $rt_s(370));
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    jl_Object__init_0($this);
    $this.$gltf2 = $gltf;
    $this.$elementIndex2 = $elementIndex;
    $this.$bufferView1 = $bufferView;
    $this.$byteOffset1 = $byteOffset;
    $this.$componentType = $componentType;
    $this.$normalized0 = $normalized;
    $this.$count0 = $count;
    $this.$type5 = $type;
    $this.$max1 = $max;
    $this.$min1 = $min;
    $this.$sparse = $sparse;
    $this.$name17 = $name;
}
function oktgg_GLTFAccessor__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14) {
    if (var$13 & 4)
        var$3 = (-1);
    if (var$13 & 8)
        var$4 = 0;
    if (var$13 & 16)
        var$5 = (-1);
    if (var$13 & 32)
        var$6 = 0;
    if (var$13 & 64)
        var$7 = (-1);
    if (var$13 & 128)
        var$8 = $rt_s(6);
    if (var$13 & 256)
        var$9 = null;
    if (var$13 & 512)
        var$10 = null;
    if (var$13 & 1024)
        var$11 = null;
    if (var$13 & 2048)
        var$12 = $rt_s(6);
    oktgg_GLTFAccessor__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12);
}
function jur_AbstractCharClass$LazyPunct() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyPunct__init_() {
    var var_0 = new jur_AbstractCharClass$LazyPunct();
    jur_AbstractCharClass$LazyPunct__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyPunct__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyPunct_computeValue($this) {
    return jur_CharClass__init_().$add0(33, 64).$add0(91, 96).$add0(123, 126);
}
function oktp_IPhysicsWorld$DefaultImpls() {
    jl_Object.call(this);
}
function oktp_IPhysicsWorld$DefaultImpls_rigidBody$default(var$1, var$2, var$3, var$4, var$5) {
    if (var$5 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(486)));
    if (var$4 & 1)
        var$2 = null;
    if (var$4 & 2)
        var$3 = 1.0;
    return var$1.$rigidBody(var$2, var$3);
}
function oktp_IPhysicsWorld$DefaultImpls_trimeshShape($$this, $vertices, $positionOffset, $vertexSize, $indices, $indexType) {
    var var$7, var$8, var$9, $floatIndex, $verticesNum, var$12, var$13, var$14, $buffer;
    kji_Intrinsics_checkParameterIsNotNull($vertices, $rt_s(487));
    var$7 = $vertices.$getSize() * 3 | 0;
    var$8 = $rt_createFloatArray(var$7);
    var$9 = 0;
    while (var$9 < var$7) {
        var$8.data[var$9] = 0.0;
        var$9 = var$9 + 1 | 0;
    }
    $floatIndex = 0;
    $verticesNum = $vertices.$getSize();
    while ($positionOffset < $verticesNum) {
        var$12 = var$8.data;
        var$12[$floatIndex] = $vertices.$readFloat($positionOffset);
        var$12[$floatIndex + 1 | 0] = $vertices.$readFloat($positionOffset + 4 | 0);
        var$12[$floatIndex + 2 | 0] = $vertices.$readFloat($positionOffset + 8 | 0);
        $floatIndex = $floatIndex + 3 | 0;
        $positionOffset = $positionOffset + $vertexSize | 0;
    }
    if ($indices === null) {
        var$13 = $vertices.$getSize();
        var$12 = $rt_createIntArray(var$13);
        var$7 = 0;
        while (var$7 < var$13) {
            var$12.data[var$7] = var$7;
            var$7 = var$7 + 1 | 0;
        }
        return $$this.$trimeshShape(var$8, var$12);
    }
    a: {
        switch ($indexType) {
            case 5121:
                var$13 = $indices.$getSize();
                var$12 = $rt_createIntArray(var$13);
                var$7 = 0;
                while (var$7 < var$13) {
                    var$12.data[var$7] = $indices.$toInt0(var$7);
                    var$7 = var$7 + 1 | 0;
                }
                var$14 = $$this.$trimeshShape(var$8, var$12);
                break a;
            case 5122:
            case 5124:
                break;
            case 5123:
                $buffer = $indices.$shortView();
                var$13 = $buffer.$getSize();
                var$12 = $rt_createIntArray(var$13);
                var$7 = 0;
                while (var$7 < var$13) {
                    var$12.data[var$7] = $buffer.$toInt0(var$7);
                    var$7 = var$7 + 1 | 0;
                }
                var$14 = $$this.$trimeshShape(var$8, var$12);
                break a;
            case 5125:
                $buffer = $indices.$intView();
                var$13 = $buffer.$getSize();
                var$12 = $rt_createIntArray(var$13);
                var$7 = 0;
                while (var$7 < var$13) {
                    var$12.data[var$7] = $buffer.$toInt0(var$7);
                    var$7 = var$7 + 1 | 0;
                }
                var$14 = $$this.$trimeshShape(var$8, var$12);
                break a;
            default:
        }
        $rt_throw(jl_RuntimeException__init_(jl_StringBuilder__init_().$append($rt_s(488)).$append1($indexType).$append($rt_s(489)).$toString()));
    }
    return var$14;
}
function oktp_IPhysicsWorld$DefaultImpls_trimeshShape0($$this, $vertices, $positionName, $indices) {
    var $inputs, $pos;
    kji_Intrinsics_checkParameterIsNotNull($vertices, $rt_s(487));
    kji_Intrinsics_checkParameterIsNotNull($positionName, $rt_s(490));
    $inputs = $vertices.$getVertexInputs();
    $pos = $inputs.$get19($positionName);
    if ($pos === null)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(491)).$append($positionName).$append12(34).$toString()));
    return $$this.$trimeshShape0($vertices.$getBytes(), $pos.$getByteOffset(), $inputs.$getBytesPerVertex(), $indices === null ? null : $indices.$getBytes(), $indices === null ? 0 : $indices.$getType());
}
function oktp_IPhysicsWorld$DefaultImpls_trimeshShape1($$this, $mesh, $positionName) {
    var var$4, var$5;
    kji_Intrinsics_checkParameterIsNotNull($mesh, $rt_s(43));
    kji_Intrinsics_checkParameterIsNotNull($positionName, $rt_s(490));
    var$4 = $mesh.$getVertices();
    if (var$4 !== null) {
        var$5 = $mesh.$getIndices();
        return $$this.$trimeshShape1(var$4, $positionName, var$5);
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(492)));
}
function ks_SequencesKt__SequenceBuilderKt() {
    jl_Object.call(this);
}
function ks_SequencesKt__SequenceBuilderKt__init_() {
    var var_0 = new ks_SequencesKt__SequenceBuilderKt();
    ks_SequencesKt__SequenceBuilderKt__init_0(var_0);
    return var_0;
}
function ks_SequencesKt__SequenceBuilderKt__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function oooicj_ObjArray() {
    var a = this; jl_Object.call(a);
    a.$_data0 = null;
    a.$_ofs0 = 0;
}
function oooicj_ObjArray__init_0(var_0) {
    var var_1 = new oooicj_ObjArray();
    oooicj_ObjArray__init_1(var_1, var_0);
    return var_1;
}
function oooicj_ObjArray__init_(var_0, var_1) {
    var var_2 = new oooicj_ObjArray();
    oooicj_ObjArray__init_2(var_2, var_0, var_1);
    return var_2;
}
function oooicj_ObjArray__init_1($this, $array) {
    jl_Object__init_0($this);
    $this.$_data0 = $array;
    $this.$_ofs0 = 0;
}
function oooicj_ObjArray__init_2($this, $array, $ofs) {
    jl_Object__init_0($this);
    $this.$_data0 = $array;
    $this.$_ofs0 = $ofs;
}
function oooicj_ObjArray_at0($this) {
    return $this.$_data0.data[$this.$_ofs0];
}
function oooicj_ObjArray_at($this, $ofs) {
    return $this.$_data0.data[$this.$_ofs0 + $ofs | 0];
}
function oooicj_ObjArray_setAt0($this, $d) {
    $this.$_data0.data[$this.$_ofs0] = $d;
}
function oooicj_ObjArray_inc($this) {
    $this.$_ofs0 = $this.$_ofs0 + 1 | 0;
}
function oooicj_ObjArray_inc0($this, $n) {
    $this.$_ofs0 = $this.$_ofs0 + $n | 0;
}
function oktgg_GLTFPrimitive$Companion() {
    jl_Object.call(this);
}
function oktgg_GLTFPrimitive$Companion__init_() {
    var var_0 = new oktgg_GLTFPrimitive$Companion();
    oktgg_GLTFPrimitive$Companion__init_0(var_0);
    return var_0;
}
function oktgg_GLTFPrimitive$Companion__init_1(var_0) {
    var var_1 = new oktgg_GLTFPrimitive$Companion();
    oktgg_GLTFPrimitive$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktgg_GLTFPrimitive$Companion_getInd($this) {
    return oktgg_GLTFPrimitive_access$getInd$cp();
}
function oktgg_GLTFPrimitive$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktgg_GLTFPrimitive$Companion__init_2($this, $$constructor_marker) {
    oktgg_GLTFPrimitive$Companion__init_0($this);
}
function ooot_MutexGroup() {
}
function ooot_MutexGroupImpl() {
    jl_Object.call(this);
}
function ooot_MutexGroupImpl__init_() {
    var var_0 = new ooot_MutexGroupImpl();
    ooot_MutexGroupImpl__init_0(var_0);
    return var_0;
}
function ooot_MutexGroupImpl__init_0($this) {
    jl_Object__init_0($this);
}
function ooot_MutexGroupImpl_lock($this, $mutex_index) {
    return;
}
function ooot_MutexGroupImpl_unlock($this, $mutex_index) {
    return;
}
function jur_AbstractCharClass$LazySpace() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazySpace__init_() {
    var var_0 = new jur_AbstractCharClass$LazySpace();
    jur_AbstractCharClass$LazySpace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazySpace__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazySpace_computeValue($this) {
    return jur_CharClass__init_().$add0(9, 13).$add(32);
}
function okts_IShader() {
}
function okts_Shader() {
    var a = this; jl_Object.call(a);
    a.$logInternal = null;
    a.$isCompiledInternal = 0;
    a.$uniforms = null;
    a.$attributes = null;
    a.$vertexShaderHandle = 0;
    a.$fragmentShaderHandle = 0;
    a.$handle0 = 0;
    a.$nodes = null;
    a.$vertCode = null;
    a.$fragCode = null;
    a.$name18 = null;
    a.$defaultPrecision = null;
    a.$version = 0;
    a.$profile = null;
}
var okts_Shader_showLogs = 0;
var okts_Shader_Companion = null;
function okts_Shader_$callClinit() {
    okts_Shader_$callClinit = $rt_eraseClinit(okts_Shader);
    okts_Shader__clinit_();
}
function okts_Shader__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new okts_Shader();
    okts_Shader__init_1(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function okts_Shader__init_2(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new okts_Shader();
    okts_Shader__init_(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function okts_Shader__init_3() {
    var var_0 = new okts_Shader();
    okts_Shader__init_4(var_0);
    return var_0;
}
function okts_Shader_getLog($this) {
    var var$1;
    if (!$this.$isCompiled())
        var$1 = $this.$logInternal;
    else {
        oktg_GL_$callClinit();
        var$1 = oktg_GL_glGetProgramInfoLog(oktg_GL_INSTANCE, $this.$getHandle());
    }
    return var$1;
}
function okts_Shader_isCompiled($this) {
    return $this.$isCompiledInternal;
}
function okts_Shader_getUniforms($this) {
    return $this.$uniforms;
}
function okts_Shader_getUniforms0(var$0) {
    return var$0.$getUniforms();
}
function okts_Shader_getAttributes($this) {
    return $this.$attributes;
}
function okts_Shader_getAttributes0(var$0) {
    return var$0.$getAttributes0();
}
function okts_Shader_getVertexShaderHandle($this) {
    return $this.$vertexShaderHandle;
}
function okts_Shader_setVertexShaderHandle($this, $_set___) {
    $this.$vertexShaderHandle = $_set___;
}
function okts_Shader_getFragmentShaderHandle($this) {
    return $this.$fragmentShaderHandle;
}
function okts_Shader_setFragmentShaderHandle($this, $_set___) {
    $this.$fragmentShaderHandle = $_set___;
}
function okts_Shader_getHandle($this) {
    return $this.$handle0;
}
function okts_Shader_setHandle($this, $_set___) {
    $this.$handle0 = $_set___;
}
function okts_Shader_getNodes($this) {
    return $this.$nodes;
}
function okts_Shader_vertSourceCode($this, $title, $pad) {
    kji_Intrinsics_checkParameterIsNotNull($title, $rt_s(465));
    return $this.$numerateLines($title, jl_StringBuilder__init_().$append(okts_Shader_getVersionStr($this)).$append($this.$defaultPrecision).$append($this.$getVertCode()).$toString(), $pad);
}
function okts_Shader_fragSourceCode($this, $title, $pad) {
    kji_Intrinsics_checkParameterIsNotNull($title, $rt_s(465));
    return $this.$numerateLines($title, jl_StringBuilder__init_().$append(okts_Shader_getVersionStr($this)).$append($this.$defaultPrecision).$append($this.$getFragCode()).$toString(), $pad);
}
function okts_Shader_getVersionStr($this) {
    var var$1;
    okt_APP_$callClinit();
    var$1 = okt_APP_getPlatformType(okt_APP_INSTANCE) ? ($this.$getVersion() >= 330 ? $rt_s(493) : $rt_s(494)) : !($this.$getProfile().$length() <= 0 ? 0 : 1) ? jl_StringBuilder__init_().$append($rt_s(495)).$append1($this.$getVersion()).$append12(10).$toString() : jl_StringBuilder__init_().$append($rt_s(495)).$append1($this.$getVersion()).$append12(32).$append($this.$getProfile()).$append12(10).$toString();
    return var$1;
}
function okts_Shader_load($this, $vertexShader, $fragmentShader) {
    var $ver, $fullVertCode, $fullFragCode, $params, var$7, $type, $numAttributes, $i, var$11, $name, $location, $numUniforms;
    a: {
        kji_Intrinsics_checkParameterIsNotNull($vertexShader, $rt_s(496));
        kji_Intrinsics_checkParameterIsNotNull($fragmentShader, $rt_s(497));
        $ver = okts_Shader_getVersionStr($this);
        $fullVertCode = jl_StringBuilder__init_().$append($ver).$append($this.$defaultPrecision).$append($vertexShader).$toString();
        $fullFragCode = jl_StringBuilder__init_().$append($ver).$append($this.$defaultPrecision).$append($fragmentShader).$toString();
        okts_Shader_compileShaders($this, $fullVertCode, $fullFragCode);
        if ($this.$isCompiled()) {
            $params = $rt_createIntArray(1);
            var$7 = $params.data;
            $type = $rt_createIntArray(1);
            oktg_GL_$callClinit();
            oktg_GL_glGetProgramiv(oktg_GL_INSTANCE, $this.$getHandle(), 35721, $params);
            $numAttributes = var$7[0];
            $i = 0;
            while ($i < $numAttributes) {
                var$11 = $type.data;
                var$7[0] = 1;
                var$11[0] = 0;
                $name = oktg_GL_glGetActiveAttrib(oktg_GL_INSTANCE, $this.$getHandle(), $i, $params, $type);
                $location = oktg_GL_glGetAttribLocation(oktg_GL_INSTANCE, $this.$getHandle(), $name);
                $this.$getAttributes0().$put3($name, jl_Integer_valueOf($location));
                $i = $i + 1 | 0;
            }
            var$7[0] = 0;
            oktg_GL_glGetProgramiv(oktg_GL_INSTANCE, $this.$getHandle(), 35718, $params);
            $numUniforms = var$7[0];
            $i = 0;
            while (true) {
                if ($i >= $numUniforms)
                    break a;
                var$11 = $type.data;
                var$7[0] = 1;
                var$11[0] = 0;
                $name = oktg_GL_glGetActiveUniform(oktg_GL_INSTANCE, $this.$getHandle(), $i, $params, $type);
                $location = oktg_GL_glGetUniformLocation(oktg_GL_INSTANCE, $this.$getHandle(), $name);
                $this.$getUniforms().$put3($name, jl_Integer_valueOf($location));
                $i = $i + 1 | 0;
            }
        }
        if (!($this.$getName().$length() <= 0 ? 0 : 1)) {
            oktu_LOG_$callClinit();
            oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, $rt_s(498), null, 2, null);
        } else {
            oktu_LOG_$callClinit();
            oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append($rt_s(499)).$append($this.$getName()).$append($rt_s(500)).$toString(), null, 2, null);
        }
        oktu_LOG_$callClinit();
        oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, $this.$getLog(), null, 2, null);
        oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, okts_IShader$DefaultImpls_sourceCode$default($this, 0, 1, null), null, 2, null);
    }
}
function okts_Shader_compileShaders($this, $vertexShader, $fragmentShader) {
    $this.$setVertexShaderHandle(okts_Shader_loadShader($this, 35633, $vertexShader));
    $this.$setFragmentShaderHandle(okts_Shader_loadShader($this, 35632, $fragmentShader));
    if ($this.$getVertexShaderHandle() != (-1) && $this.$getFragmentShaderHandle() != (-1)) {
        $this.$setHandle(okts_Shader_linkProgram($this, okts_Shader_createProgram($this)));
        if ($this.$getHandle() != (-1)) {
            $this.$isCompiledInternal = 1;
            return;
        }
        $this.$isCompiledInternal = 0;
        return;
    }
    $this.$isCompiledInternal = 0;
}
function okts_Shader_loadShader($this, $type, $source) {
    var $intbuf, $shader, var$5, $compiled, $infoLog, var$8, $logs;
    $intbuf = $rt_createIntArray(1);
    oktg_GL_$callClinit();
    $shader = oktg_GL_glCreateShader(oktg_GL_INSTANCE, $type);
    if (!$shader)
        return (-1);
    var$5 = $intbuf.data;
    oktg_GL_glShaderSource(oktg_GL_INSTANCE, $shader, $source);
    oktg_GL_glCompileShader(oktg_GL_INSTANCE, $shader);
    oktg_GL_glGetShaderiv(oktg_GL_INSTANCE, $shader, 35713, $intbuf);
    $compiled = var$5[0];
    if (!$compiled) {
        $infoLog = oktg_GL_glGetShaderInfoLog(oktg_GL_INSTANCE, $shader);
        var$8 = $this.$logInternal;
        $this.$logInternal = jl_StringBuilder__init_().$append(var$8).$append($type != 35633 ? $rt_s(501) : $rt_s(502)).$toString();
        var$8 = $this.$logInternal;
        $this.$logInternal = jl_StringBuilder__init_().$append(var$8).$append($infoLog).$toString();
        return (-1);
    }
    if (okts_Shader_showLogs) {
        $logs = oktg_GL_glGetShaderInfoLog(oktg_GL_INSTANCE, $shader);
        if ($logs.$length() <= 0 ? 0 : 1) {
            oktu_LOG_$callClinit();
            oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, $type != 35633 ? $rt_s(501) : $rt_s(502), null, 2, null);
            oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, $logs, null, 2, null);
        }
    }
    return $shader;
}
function okts_Shader_createProgram($this) {
    var $program;
    oktg_GL_$callClinit();
    $program = oktg_GL_glCreateProgram(oktg_GL_INSTANCE);
    if (!$program)
        $program = (-1);
    return $program;
}
function okts_Shader_linkProgram($this, $program) {
    var $tmp_0, var$3, $linked;
    if ($program == (-1))
        return (-1);
    oktg_GL_$callClinit();
    oktg_GL_glAttachShader(oktg_GL_INSTANCE, $program, $this.$getVertexShaderHandle());
    oktg_GL_glAttachShader(oktg_GL_INSTANCE, $program, $this.$getFragmentShaderHandle());
    oktg_GL_glLinkProgram(oktg_GL_INSTANCE, $program);
    oktg_GL_glDetachShader(oktg_GL_INSTANCE, $program, $this.$getVertexShaderHandle());
    oktg_GL_glDetachShader(oktg_GL_INSTANCE, $program, $this.$getFragmentShaderHandle());
    $tmp_0 = $rt_createIntArray(1);
    var$3 = $tmp_0.data;
    oktg_GL_glGetProgramiv(oktg_GL_INSTANCE, $program, 35714, $tmp_0);
    $linked = var$3[0];
    if ($linked)
        return $program;
    $this.$logInternal = oktg_GL_glGetProgramInfoLog(oktg_GL_INSTANCE, $program);
    return (-1);
}
function okts_Shader_buildSourceCode($this) {
    var $uid, $$this$forEach$iv, var$3, $element$iv, $node, var$6, $it, $countMap, $$this$sortBy$iv, $vertDecl, $vertExe, $fragDecl, $fragExe;
    $uid = 0;
    $$this$forEach$iv = $this.$getNodes0();
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $node = $element$iv;
        $node.$setShaderOrNull($this);
        $$this$forEach$iv = $node.$getOutput();
        var$6 = $$this$forEach$iv.$entrySet().$iterator();
        while (var$6.$hasNext()) {
            $element$iv = var$6.$next();
            $element$iv.$getValue().$setUid($uid);
            $uid = $uid + 1 | 0;
        }
    }
    $$this$forEach$iv = $this.$getNodes0();
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $it = $element$iv;
        $it.$prepareToBuild();
    }
    $countMap = ju_HashMap__init_();
    $$this$forEach$iv = $this.$getNodes0();
    var$6 = $$this$forEach$iv.$iterator();
    while (var$6.$hasNext()) {
        $element$iv = var$6.$next();
        $it = $element$iv;
        $countMap.$put3($it, jl_Integer_valueOf(okts_Shader_findMaxChildrenTreeDepth$default($this, $it, 0, 2, null)));
    }
    $$this$sortBy$iv = $this.$getNodes0();
    if ($$this$sortBy$iv.$size() > 1)
        kc_CollectionsKt__MutableCollectionsJVMKt_sortWith($$this$sortBy$iv, okts_Shader$buildSourceCode$$inlined$sortBy$1__init_($countMap));
    $vertDecl = jl_StringBuilder__init_();
    $vertExe = jl_StringBuilder__init_();
    $fragDecl = jl_StringBuilder__init_();
    $fragExe = jl_StringBuilder__init_();
    $$this$forEach$iv = $this.$getNodes0();
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $it = $element$iv;
        $it.$declarationVert($vertDecl);
        $it.$executionVert($vertExe);
        $it.$declarationFrag($fragDecl);
        $it.$executionFrag($fragExe);
    }
    kt_StringsKt__StringBuilderJVMKt_appendln($vertDecl);
    var$6 = $vertDecl.$append($rt_s(503));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$6, $rt_s(504));
    kt_StringsKt__StringBuilderJVMKt_appendln(var$6);
    var$3 = $vertDecl.$append15($vertExe);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(504));
    kt_StringsKt__StringBuilderJVMKt_appendln(var$3);
    var$3 = $vertDecl.$append($rt_s(399));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(504));
    kt_StringsKt__StringBuilderJVMKt_appendln(var$3);
    var$6 = $vertDecl.$toString();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$6, $rt_s(505));
    $this.$setVertCode(var$6);
    kt_StringsKt__StringBuilderJVMKt_appendln($fragDecl);
    var$3 = $fragDecl.$append($rt_s(503));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(504));
    kt_StringsKt__StringBuilderJVMKt_appendln(var$3);
    var$3 = $fragDecl.$append15($fragExe);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(504));
    kt_StringsKt__StringBuilderJVMKt_appendln(var$3);
    var$3 = $fragDecl.$append($rt_s(399));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(504));
    kt_StringsKt__StringBuilderJVMKt_appendln(var$3);
    var$3 = $fragDecl.$toString();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(506));
    $this.$setFragCode(var$3);
}
function okts_Shader_build($this) {
    var $$this$forEach$iv, var$2, $element$iv, $it;
    $this.$buildSourceCode();
    if ($this.$isCompiled())
        $this.$destroy0();
    okts_Shader_load($this, $this.$getVertCode(), $this.$getFragCode());
    if (!$this.$isCompiled()) {
        oktu_LOG_$callClinit();
        oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, okts_IShader$DefaultImpls_sourceCode$default($this, 0, 1, null), null, 2, null);
        $rt_throw(jl_RuntimeException__init_($rt_s(507)));
    }
    $this.$bind();
    $$this$forEach$iv = $this.$getNodes0();
    var$2 = $$this$forEach$iv.$iterator();
    while (var$2.$hasNext()) {
        $element$iv = var$2.$next();
        $it = $element$iv;
        $it.$shaderCompiled();
    }
}
function okts_Shader_findMaxChildrenTreeDepth($this, $node, $count) {
    var $incCount, $$this$forEach$iv, var$5, var$6, $element$iv, $it, $container, $childCount;
    if (!($node.$getInput().$isEmpty() ? 0 : 1))
        return $count;
    $incCount = $count + 1 | 0;
    $$this$forEach$iv = $node.$getInput().$values();
    var$5 = $$this$forEach$iv.$iterator();
    var$6 = $incCount;
    while (var$5.$hasNext()) {
        $element$iv = var$5.$next();
        $it = $element$iv;
        $container = $it.$getContainer();
        if (kji_Intrinsics_areEqual($container, $node) ^ 1 && $container !== null) {
            $childCount = okts_Shader_findMaxChildrenTreeDepth($this, $container, $incCount);
            if ($childCount > var$6)
                var$6 = $childCount;
        }
    }
    return var$6;
}
function okts_Shader_findMaxChildrenTreeDepth$default(var$1, var$2, var$3, var$4, var$5) {
    okts_Shader_$callClinit();
    if (var$5 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(508)));
    if (var$4 & 2)
        var$3 = 0;
    return okts_Shader_findMaxChildrenTreeDepth(var$1, var$2, var$3);
}
function okts_Shader_destroy($this) {
    $this.$isCompiledInternal = 0;
    $this.$logInternal = $rt_s(6);
    $this.$setVertexShaderHandle(0);
    $this.$setFragmentShaderHandle(0);
    $this.$setHandle(0);
    okts_IShader$DefaultImpls_destroy($this);
}
function okts_Shader_getVertCode($this) {
    return $this.$vertCode;
}
function okts_Shader_setVertCode($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$vertCode = $_set___;
}
function okts_Shader_getFragCode($this) {
    return $this.$fragCode;
}
function okts_Shader_setFragCode($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$fragCode = $_set___;
}
function okts_Shader_getName($this) {
    return $this.$name18;
}
function okts_Shader_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name18 = $_set___;
}
function okts_Shader_getVersion($this) {
    return $this.$version;
}
function okts_Shader_getProfile($this) {
    return $this.$profile;
}
function okts_Shader__init_1($this, $vertCode, $fragCode, $name, $compile, $defaultPrecision, $version, $profile) {
    okts_Shader_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($vertCode, $rt_s(509));
    kji_Intrinsics_checkParameterIsNotNull($fragCode, $rt_s(510));
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($defaultPrecision, $rt_s(511));
    kji_Intrinsics_checkParameterIsNotNull($profile, $rt_s(512));
    jl_Object__init_0($this);
    $this.$vertCode = $vertCode;
    $this.$fragCode = $fragCode;
    $this.$name18 = $name;
    $this.$defaultPrecision = $defaultPrecision;
    $this.$version = $version;
    $this.$profile = $profile;
    $this.$logInternal = $rt_s(6);
    $this.$uniforms = ju_HashMap__init_();
    $this.$attributes = ju_HashMap__init_();
    $this.$nodes = ju_ArrayList__init_();
    if ($compile && ($this.$getVertCode().$length() <= 0 ? 0 : 1) && ($this.$getFragCode().$length() <= 0 ? 0 : 1))
        okts_Shader_load($this, $this.$getVertCode(), $this.$getFragCode());
}
function okts_Shader__init_(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9) {
    okts_Shader_$callClinit();
    if (var$8 & 1)
        var$1 = $rt_s(6);
    if (var$8 & 2)
        var$2 = $rt_s(6);
    if (var$8 & 4)
        var$3 = $rt_s(6);
    if (var$8 & 8)
        var$4 = 1;
    if (var$8 & 16) {
        okt_APP_$callClinit();
        var$5 = !okt_APP_getPlatformType(okt_APP_INSTANCE) ? $rt_s(6) : $rt_s(513);
    }
    if (var$8 & 32)
        var$6 = 110;
    if (var$8 & 64)
        var$7 = $rt_s(6);
    okts_Shader__init_1(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7);
}
function okts_Shader__init_4(var$0) {
    okts_Shader_$callClinit();
    okts_Shader__init_(var$0, null, null, null, 0, null, 0, null, 127, null);
}
function okts_Shader__clinit_() {
    okts_Shader_Companion = okts_Shader$Companion__init_(null);
}
function okts_Shader_prepareSceneData($this, $scene) {
    kji_Intrinsics_checkParameterIsNotNull($scene, $rt_s(328));
    okts_IShader$DefaultImpls_prepareSceneData($this, $scene);
}
function okts_Shader_prepareObjectData($this, $object3D) {
    kji_Intrinsics_checkParameterIsNotNull($object3D, $rt_s(514));
    okts_IShader$DefaultImpls_prepareObjectData($this, $object3D);
}
function okts_Shader_prepareToDrawMesh($this, $mesh) {
    kji_Intrinsics_checkParameterIsNotNull($mesh, $rt_s(43));
    okts_IShader$DefaultImpls_prepareToDrawMesh($this, $mesh);
}
function okts_Shader_numerateLines($this, $title, $text, $pad) {
    kji_Intrinsics_checkParameterIsNotNull($title, $rt_s(465));
    kji_Intrinsics_checkParameterIsNotNull($text, $rt_s(295));
    return okts_IShader$DefaultImpls_numerateLines($this, $title, $text, $pad);
}
function okts_Shader_sourceCode($this, $pad) {
    return okts_IShader$DefaultImpls_sourceCode($this, $pad);
}
function okts_Shader_bind($this) {
    okts_IShader$DefaultImpls_bind($this);
}
function okts_Shader_get($this, $uniformName) {
    kji_Intrinsics_checkParameterIsNotNull($uniformName, $rt_s(515));
    return okts_IShader$DefaultImpls_get($this, $uniformName);
}
function okts_Shader_set($this, $location, $mat, $transpose) {
    kji_Intrinsics_checkParameterIsNotNull($mat, $rt_s(516));
    okts_IShader$DefaultImpls_set($this, $location, $mat, $transpose);
}
function okts_Shader_set0($this, $location, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    okts_IShader$DefaultImpls_set0($this, $location, $value);
}
function okts_Shader_set1($this, $name, $value1, $value2) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    okts_IShader$DefaultImpls_set1($this, $name, $value1, $value2);
}
function okts_Shader_set2($this, $name, $value1, $value2, $value3) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    okts_IShader$DefaultImpls_set2($this, $name, $value1, $value2, $value3);
}
function okts_Shader_set3($this, $name, $value1, $value2, $value3, $value4) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    okts_IShader$DefaultImpls_set3($this, $name, $value1, $value2, $value3, $value4);
}
function okts_Shader_set4($this, $name, $mat, $transpose) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($mat, $rt_s(516));
    okts_IShader$DefaultImpls_set4($this, $name, $mat, $transpose);
}
function okts_Shader_set5($this, $name, $value) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    okts_IShader$DefaultImpls_set5($this, $name, $value);
}
function okts_Shader_set6($this, $name, $value) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    okts_IShader$DefaultImpls_set6($this, $name, $value);
}
function okts_Shader_set7($this, $name, $values) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    okts_IShader$DefaultImpls_set7($this, $name, $values);
}
function okts_Shader_set8($this, $name, $values) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    okts_IShader$DefaultImpls_set8($this, $name, $values);
}
function okts_Shader_set9($this, $name, $values) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    okts_IShader$DefaultImpls_set9($this, $name, $values);
}
function okts_Shader_set10($this, $name, $value) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    okts_IShader$DefaultImpls_set10($this, $name, $value);
}
function okts_Shader_set30($this, $name, $values, $offset, $length) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    okts_IShader$DefaultImpls_set30($this, $name, $values, $offset, $length);
}
function okts_Shader_setMatrix4($this, $location, $values, $offset, $length) {
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    okts_IShader$DefaultImpls_setMatrix4($this, $location, $values, $offset, $length);
}
function okts_Shader_setMatrix40($this, $name, $values, $offset, $length) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    okts_IShader$DefaultImpls_setMatrix40($this, $name, $values, $offset, $length);
}
function okts_Shader_getUniformLocation($this, $name, $pedantic) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    return okts_IShader$DefaultImpls_getUniformLocation($this, $name, $pedantic);
}
function okts_Shader_setUniformi($this, $name, $value) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    okts_IShader$DefaultImpls_setUniformi($this, $name, $value);
}
function okts_Shader_addNode($this, $node) {
    kji_Intrinsics_checkParameterIsNotNull($node, $rt_s(45));
    return okts_IShader$DefaultImpls_addNode($this, $node);
}
function oktsp_PostShader() {
    okts_Shader.call(this);
}
function oktsp_PostShader__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktsp_PostShader();
    oktsp_PostShader__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktsp_PostShader__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new oktsp_PostShader();
    oktsp_PostShader__init_2(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function oktsp_PostShader__init_0($this, $fragCode, $name, $compile, $defaultPrecision, $uvName, $version) {
    var var$7, var$8, var$9;
    kji_Intrinsics_checkParameterIsNotNull($fragCode, $rt_s(510));
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($defaultPrecision, $rt_s(511));
    kji_Intrinsics_checkParameterIsNotNull($uvName, $rt_s(517));
    var$7 = jl_StringBuilder__init_().$append($rt_s(518));
    var$7 = var$7.$append($uvName).$append($rt_s(519));
    var$8 = var$7.$append($uvName).$append($rt_s(520)).$toString();
    var$7 = null;
    var$9 = null;
    okts_Shader__init_($this, var$8, $fragCode, $name, $compile, $defaultPrecision, $version, var$7, 64, var$9);
}
function oktsp_PostShader__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    if (var$7 & 2)
        var$2 = $rt_s(6);
    if (var$7 & 4)
        var$3 = 1;
    if (var$7 & 8) {
        okt_APP_$callClinit();
        var$4 = !okt_APP_getPlatformType(okt_APP_INSTANCE) ? $rt_s(6) : $rt_s(513);
    }
    if (var$7 & 16)
        var$5 = $rt_s(333);
    if (var$7 & 32)
        var$6 = 110;
    oktsp_PostShader__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6);
}
function oktsp_SSAO() {
    var a = this; oktsp_PostShader.call(a);
    a.$noiseTexture = null;
    a.$uProjectionMatrix = 0;
    a.$noiseMapUnit = 0;
    a.$normalMapUnit = 0;
    a.$positionMapUnit = 0;
    a.$auxBufferSsaoUnit = 0;
    a.$auxBufferBlurUnit = 0;
    a.$colorMapUnit = 0;
    a.$blurShader = null;
    a.$combineShader = null;
    a.$radius2 = 0.0;
    a.$range = 0.0;
    a.$bias = 0.0;
    a.$auxBufferSsao = null;
    a.$visualizeSsao = 0;
    a.$colorMap = null;
    a.$normalMap = null;
    a.$viewSpacePositionMap = null;
    a.$auxBufferBlur = null;
    a.$noiseTextureSideSize = 0;
}
var oktsp_SSAO_ssaoBlurCode = null;
var oktsp_SSAO_ssaoCombineCode = null;
var oktsp_SSAO_Companion = null;
function oktsp_SSAO_$callClinit() {
    oktsp_SSAO_$callClinit = $rt_eraseClinit(oktsp_SSAO);
    oktsp_SSAO__clinit_();
}
function oktsp_SSAO__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktsp_SSAO();
    oktsp_SSAO__init_0(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function oktsp_SSAO__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new oktsp_SSAO();
    oktsp_SSAO__init_2(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function oktsp_SSAO_getNoiseTexture($this) {
    return $this.$noiseTexture;
}
function oktsp_SSAO_getNoiseMapUnit($this) {
    return $this.$noiseMapUnit;
}
function oktsp_SSAO_getNormalMapUnit($this) {
    return $this.$normalMapUnit;
}
function oktsp_SSAO_getPositionMapUnit($this) {
    return $this.$positionMapUnit;
}
function oktsp_SSAO_getAuxBufferSsaoUnit($this) {
    return $this.$auxBufferSsaoUnit;
}
function oktsp_SSAO_getAuxBufferBlurUnit($this) {
    return $this.$auxBufferBlurUnit;
}
function oktsp_SSAO_getColorMapUnit($this) {
    return $this.$colorMapUnit;
}
function oktsp_SSAO_getAuxBufferSsao($this) {
    return $this.$auxBufferSsao;
}
function oktsp_SSAO_getVisualizeSsao($this) {
    return $this.$visualizeSsao;
}
function oktsp_SSAO_setVisualizeSsao($this, $_set___) {
    $this.$visualizeSsao = $_set___;
}
function oktsp_SSAO_render($this, $screenQuad, $out) {
    var $camera;
    kji_Intrinsics_checkParameterIsNotNull($screenQuad, $rt_s(523));
    oktgc_ActiveCamera_$callClinit();
    $camera = oktgc_ActiveCamera_INSTANCE;
    if ($this.$visualizeSsao)
        oktm_IScreenQuad$DefaultImpls_render$default($screenQuad, $this, null, null, oktsp_SSAO$render$1__init_($this, $camera), 4, null);
    else {
        oktm_IScreenQuad$DefaultImpls_render$default($screenQuad, $this, $this.$auxBufferSsao, null, oktsp_SSAO$render$2__init_($this, $camera), 4, null);
        oktm_IScreenQuad$DefaultImpls_render$default($screenQuad, $this.$blurShader, $this.$auxBufferBlur, null, oktsp_SSAO$render$3__init_($this), 4, null);
        oktm_IScreenQuad$DefaultImpls_render$default($screenQuad, $this.$combineShader, $out, null, oktsp_SSAO$render$4__init_($this), 4, null);
    }
}
function oktsp_SSAO_getColorMap($this) {
    return $this.$colorMap;
}
function oktsp_SSAO_getNormalMap($this) {
    return $this.$normalMap;
}
function oktsp_SSAO_getViewSpacePositionMap($this) {
    return $this.$viewSpacePositionMap;
}
function oktsp_SSAO_getAuxBufferBlur($this) {
    return $this.$auxBufferBlur;
}
function oktsp_SSAO__init_0($this, $colorMap, $normalMap, $viewSpacePositionMap, $auxBufferSSAO, $auxBufferBlur, $noiseTextureSideSize, $occlusionSamplesNum) {
    var $ssaoNoiseBuffer, $index, $i, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, $numOffsets, $startOffset, $offset;
    oktsp_SSAO_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($colorMap, $rt_s(524));
    kji_Intrinsics_checkParameterIsNotNull($normalMap, $rt_s(525));
    kji_Intrinsics_checkParameterIsNotNull($viewSpacePositionMap, $rt_s(526));
    kji_Intrinsics_checkParameterIsNotNull($auxBufferSSAO, $rt_s(527));
    kji_Intrinsics_checkParameterIsNotNull($auxBufferBlur, $rt_s(528));
    oktsp_PostShader__init_2($this, oktsp_SSAO$Companion_ssaoCode(oktsp_SSAO_Companion, $occlusionSamplesNum), null, 0, null, null, 0, 62, null);
    $this.$colorMap = $colorMap;
    $this.$normalMap = $normalMap;
    $this.$viewSpacePositionMap = $viewSpacePositionMap;
    $this.$auxBufferBlur = $auxBufferBlur;
    $this.$noiseTextureSideSize = $noiseTextureSideSize;
    $this.$noiseTexture = oktt_Texture2D__init_(0, 1, null);
    $this.$uProjectionMatrix = (-1);
    oktg_GL_$callClinit();
    $this.$noiseMapUnit = oktg_GL_grabTextureUnit(oktg_GL_INSTANCE);
    $this.$normalMapUnit = oktg_GL_grabTextureUnit(oktg_GL_INSTANCE);
    $this.$positionMapUnit = oktg_GL_grabTextureUnit(oktg_GL_INSTANCE);
    $this.$auxBufferSsaoUnit = oktg_GL_grabTextureUnit(oktg_GL_INSTANCE);
    $this.$auxBufferBlurUnit = oktg_GL_grabTextureUnit(oktg_GL_INSTANCE);
    $this.$colorMapUnit = oktg_GL_grabTextureUnit(oktg_GL_INSTANCE);
    $this.$blurShader = oktsp_PostShader__init_1(oktsp_SSAO_ssaoBlurCode, null, 0, null, null, 0, 62, null);
    $this.$combineShader = oktsp_PostShader__init_1(oktsp_SSAO_ssaoCombineCode, null, 0, null, null, 0, 62, null);
    $this.$radius2 = 0.10000000149011612;
    $this.$range = 300.0;
    $this.$bias = 0.05000000074505806;
    $this.$auxBufferSsao = $auxBufferSSAO;
    $this.$uProjectionMatrix = $this.$get24($rt_s(529));
    oktd_DATA_$callClinit();
    $ssaoNoiseBuffer = oktd_DATA_bytes(oktd_DATA_INSTANCE, ($rt_imul($this.$noiseTextureSideSize, $this.$noiseTextureSideSize) * 3 | 0) * 4 | 0);
    $index = 0;
    $i = 0;
    var$11 = $rt_imul($this.$noiseTextureSideSize, $this.$noiseTextureSideSize);
    while ($i < var$11) {
        kr_Random_$callClinit();
        $ssaoNoiseBuffer.$put10($index, jl_Byte_valueOf(kr_Random$Default_nextBits(kr_Random_Default, 8) << 24 >> 24));
        var$12 = $index + 1 | 0;
        $ssaoNoiseBuffer.$put10(var$12, jl_Byte_valueOf(kr_Random$Default_nextBits(kr_Random_Default, 8) << 24 >> 24));
        var$12 = var$12 + 1 | 0;
        $ssaoNoiseBuffer.$put10(var$12, jl_Byte_valueOf(0));
        $index = var$12 + 1 | 0;
        $i = $i + 1 | 0;
    }
    $ssaoNoiseBuffer.$setPosition(0);
    var$13 = $this.$noiseTexture;
    var$14 = $this.$noiseTextureSideSize;
    var$15 = $this.$noiseTextureSideSize;
    var$16 = null;
    oktt_ITexture2D$DefaultImpls_load$default0(var$13, var$14, var$15, $ssaoNoiseBuffer, 0, 6407, 6407, 5121, 9728, 9728, 10497, 10497, 0.0, 0, 6152, var$16);
    $this.$bind();
    $this.$set1($rt_s(530), $this.$radius2);
    $this.$set1($rt_s(531), $this.$range);
    $this.$set1($rt_s(532), $this.$bias);
    $this.$set35($rt_s(533), $this.$normalMapUnit);
    $this.$set35($rt_s(534), $this.$noiseMapUnit);
    $this.$set35($rt_s(535), $this.$positionMapUnit);
    var$11 = $occlusionSamplesNum * 3 | 0;
    var$17 = $rt_createFloatArray(var$11);
    var$12 = 0;
    while (var$12 < var$11) {
        var$18 = var$17.data;
        kr_Random_$callClinit();
        var$18[var$12] = kr_Random$Default_nextFloat(kr_Random_Default);
        var$12 = var$12 + 1 | 0;
    }
    okts_IShader$DefaultImpls_set3$default($this, $rt_s(536), var$17, 0, 0, 12, null);
    $this.$set36($rt_s(537), $auxBufferSSAO.$getWidth() / $this.$noiseTextureSideSize, $auxBufferSSAO.$getHeight() / $this.$noiseTextureSideSize);
    $this.$blurShader.$bind();
    $this.$blurShader.$set35($rt_s(538), $this.$auxBufferSsaoUnit);
    $numOffsets = 4;
    $startOffset = (-4.0) * 0.5 + 0.5;
    $i = 0;
    while ($i < $numOffsets) {
        $offset = $startOffset + $i;
        $this.$blurShader.$set1(jl_StringBuilder__init_().$append($rt_s(539)).$append1($i).$append12(93).$toString(), $offset / $this.$auxBufferBlur.$getWidth());
        $this.$blurShader.$set1(jl_StringBuilder__init_().$append($rt_s(540)).$append1($i).$append12(93).$toString(), $offset / $this.$auxBufferBlur.$getHeight());
        $i = $i + 1 | 0;
    }
    $this.$combineShader.$bind();
    $this.$combineShader.$set35($rt_s(541), $this.$colorMapUnit);
    $this.$combineShader.$set35($rt_s(538), $this.$auxBufferBlurUnit);
}
function oktsp_SSAO__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9) {
    var var$10, var$11;
    oktsp_SSAO_$callClinit();
    if (var$8 & 8) {
        var$9 = new oktt_SimpleFrameBuffer;
        oktg_GL_$callClinit();
        var$10 = oktg_GL_getMainFrameBufferWidth(oktg_GL_INSTANCE);
        var$11 = oktg_GL_getMainFrameBufferHeight(oktg_GL_INSTANCE);
        var$4 = null;
        oktt_SimpleFrameBuffer__init_(var$9, var$10, var$11, 6407, 0, 0, 0, 0, 120, var$4);
        var$4 = var$9;
    }
    if (var$8 & 16) {
        var$5 = new oktt_SimpleFrameBuffer;
        oktg_GL_$callClinit();
        var$10 = oktg_GL_getMainFrameBufferWidth(oktg_GL_INSTANCE);
        var$11 = oktg_GL_getMainFrameBufferHeight(oktg_GL_INSTANCE);
        var$9 = null;
        oktt_SimpleFrameBuffer__init_(var$5, var$10, var$11, 6407, 0, 0, 0, 0, 120, var$9);
        var$5 = var$5;
    }
    if (var$8 & 32)
        var$6 = 4;
    if (var$8 & 64)
        var$7 = 64;
    oktsp_SSAO__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7);
}
function oktsp_SSAO__clinit_() {
    oktsp_SSAO_Companion = oktsp_SSAO$Companion__init_(null);
    oktsp_SSAO_ssaoBlurCode = $rt_s(521);
    oktsp_SSAO_ssaoCombineCode = $rt_s(522);
}
function oktsp_SSAO_access$getUProjectionMatrix$p($$this) {
    oktsp_SSAO_$callClinit();
    return $$this.$uProjectionMatrix;
}
function okttsg_SkyboxVertexNodeTest() {
    jl_Object.call(this);
}
function okttsg_SkyboxVertexNodeTest__init_() {
    var var_0 = new okttsg_SkyboxVertexNodeTest();
    okttsg_SkyboxVertexNodeTest__init_0(var_0);
    return var_0;
}
function okttsg_SkyboxVertexNodeTest_getName($this) {
    return $rt_s(542);
}
function okttsg_SkyboxVertexNodeTest_testMain($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, $cameraDataNode, $vertexNode, var$9, var$10, $textureNode, $scene, $control;
    var$1 = oktg_Object3D__init_(null, null, null, 0, null, null, null, 127, null);
    var$2 = var$1.$getMeshes0();
    oktmb_BoxMeshBuilder_$callClinit();
    var$3 = oktmb_BoxMeshBuilder$Companion_skyboxBuilder(oktmb_BoxMeshBuilder_Companion);
    oktmb_MeshBuilder_setPositionName(var$3, $rt_s(543));
    var$4 = oktmb_MeshBuilder_getMaterial(var$3);
    var$5 = okts_Shader__init_2(null, null, null, 0, null, 0, null, 127, null);
    var$6 = new oktsg_CameraDataNode;
    oktsg_GLSL_$callClinit();
    oktsg_CameraDataNode__init_(var$6, oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE));
    $cameraDataNode = var$5.$addNode0(var$6);
    $vertexNode = var$5.$addNode0(oktsg_SkyboxVertexNode__init_(oktsg_CameraDataNode_getViewProjectionMatrix($cameraDataNode)));
    oktsg_SkyboxVertexNode_setAPositionName($vertexNode, $rt_s(543));
    var$9 = oktsg_SkyboxVertexNode_getAttributePosition($vertexNode);
    var$10 = oktt_TextureCube__init_(0, 1, null);
    var$6 = null;
    oktt_TextureCube_load$default(var$10, $rt_s(544), $rt_s(545), $rt_s(546), $rt_s(547), $rt_s(548), $rt_s(549), 0, 0, 0, 0, 0, 1984, var$6);
    var$6 = var$10;
    $textureNode = var$5.$addNode0(oktsg_TextureNode__init_(var$9, var$6, 0, 14));
    var$5.$addNode0(oktsg_OutputNode__init_(oktsg_SkyboxVertexNode_getClipSpacePosition($vertexNode), oktsg_TextureNode_getColor($textureNode)));
    var$5.$build0();
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, okts_IShader$DefaultImpls_sourceCode$default(var$5, 0, 1, null), null, 2, null);
    var$4.$setShader(var$5);
    var$6 = null;
    var$10 = null;
    var$6 = oktmb_MeshBuilder_build$default(var$3, var$6, 1, var$10);
    var$2.$add1(var$6);
    $scene = oktg_Scene__init_(null, null, 3, null);
    $scene.$getObjects().$add1(var$1);
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_setApi(oktgc_ActiveCamera_INSTANCE, oktgc_Camera__init_(null, null, null, 0.10000000149011612, 100.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4071, null));
    $control = oktgc_OrbitCameraControl__init_0(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, null, 0, null, 8191, null);
    oktgc_OrbitCameraControl_listenToMouse($control);
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, oktgc_OrbitCameraControl_getHelp($control), null, 2, null);
    oktg_GL_$callClinit();
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttsg_SkyboxVertexNodeTest$testMain$1__init_($control, $scene), 1, null);
}
function okttsg_SkyboxVertexNodeTest__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$CollideConvexBoxCCD() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$CollideConvexBoxCCD__init_() {
    var var_0 = new oooi_CollisionLibccd$CollideConvexBoxCCD();
    oooi_CollisionLibccd$CollideConvexBoxCCD__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$CollideConvexBoxCCD__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$CollideConvexBoxCCD_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    var $box, $conv, var$7, var$8, var$9, var$10;
    $box = oooi_CollisionLibccd$ccd_box_t__init_(null);
    $conv = oooi_CollisionLibccd$ccd_convex_t__init_(null);
    oooi_CollisionLibccd_ccdGeomToConvex($o1, $conv);
    oooi_CollisionLibccd_ccdGeomToBox($o2, $box);
    var$7 = oooi_CollisionLibccd_access$500();
    var$8 = oooi_CollisionLibccd_access$100();
    var$9 = oooi_CollisionLibccd_access$300();
    var$10 = oooi_CollisionLibccd_access$100();
    return oooi_CollisionLibccd_ccdCollide($o1, $o2, $flags, $contacts, $conv, var$7, var$8, $box, var$9, var$10);
}
function jm_Elementary() {
    jl_Object.call(this);
}
function jm_Elementary__init_() {
    var var_0 = new jm_Elementary();
    jm_Elementary__init_0(var_0);
    return var_0;
}
function jm_Elementary__init_0($this) {
    jl_Object__init_0($this);
}
function jm_Elementary_compareArrays($a, $b, $size) {
    var $i, var$5, var$6, var$7;
    $i = $size - 1 | 0;
    while ($i >= 0) {
        var$5 = $b.data;
        if ($a.data[$i] != var$5[$i])
            break;
        $i = $i + (-1) | 0;
    }
    if ($i < 0)
        var$6 = 0;
    else {
        var$7 = $b.data;
        var$6 = Long_ge(Long_and(Long_fromInt($a.data[$i]), new Long(4294967295, 0)), Long_and(Long_fromInt(var$7[$i]), new Long(4294967295, 0))) ? 1 : (-1);
    }
    return var$6;
}
function jm_Elementary_add($op1, $op2) {
    var $op1Sign, $op2Sign, $op1Len, $op2Len, $a, $b, $res, $valueLo, $valueHi, var$12, var$13, var$14, $resDigits, var$16, $cmp, $res_0;
    $op1Sign = $op1.$sign1;
    $op2Sign = $op2.$sign1;
    if (!$op1Sign)
        return $op2;
    if (!$op2Sign)
        return $op1;
    $op1Len = $op1.$numberLength;
    $op2Len = $op2.$numberLength;
    if (($op1Len + $op2Len | 0) == 2) {
        $a = Long_and(Long_fromInt($op1.$digits.data[0]), new Long(4294967295, 0));
        $b = Long_and(Long_fromInt($op2.$digits.data[0]), new Long(4294967295, 0));
        if ($op1Sign != $op2Sign)
            return jm_BigInteger_valueOf($op1Sign >= 0 ? Long_sub($a, $b) : Long_sub($b, $a));
        $res = Long_add($a, $b);
        $valueLo = $res.lo;
        $valueHi = $res.hi;
        if (!$valueHi)
            var$12 = jm_BigInteger__init_0($op1Sign, $valueLo);
        else {
            var$12 = new jm_BigInteger;
            var$13 = $rt_createIntArray(2);
            var$14 = var$13.data;
            var$14[0] = $valueLo;
            var$14[1] = $valueHi;
            jm_BigInteger__init_1(var$12, $op1Sign, 2, var$13);
        }
        return var$12;
    }
    if ($op1Sign == $op2Sign)
        $resDigits = $op1Len < $op2Len ? jm_Elementary_add0($op2.$digits, $op2Len, $op1.$digits, $op1Len) : jm_Elementary_add0($op1.$digits, $op1Len, $op2.$digits, $op2Len);
    else {
        var$16 = $rt_compare($op1Len, $op2Len);
        if (!var$16) {
            var$13 = $op1.$digits;
            var$14 = $op2.$digits;
            $cmp = jm_Elementary_compareArrays(var$13, var$14, $op1Len);
        } else
            $cmp = var$16 <= 0 ? (-1) : 1;
        if (!$cmp) {
            jm_BigInteger_$callClinit();
            return jm_BigInteger_ZERO;
        }
        if ($cmp != 1) {
            $resDigits = jm_Elementary_subtract($op2.$digits, $op2Len, $op1.$digits, $op1Len);
            $op1Sign = $op2Sign;
        } else
            $resDigits = jm_Elementary_subtract($op1.$digits, $op1Len, $op2.$digits, $op2Len);
    }
    var$13 = $resDigits.data;
    $res_0 = jm_BigInteger__init_($op1Sign, var$13.length, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($res_0);
    return $res_0;
}
function jm_Elementary_add1($res, $a, $aSize, $b, $bSize) {
    var var$6, var$7, var$8, $carry, var$10, $i, var$12;
    var$6 = $res.data;
    var$7 = $b.data;
    var$8 = $a.data;
    $carry = Long_add(Long_and(Long_fromInt(var$8[0]), new Long(4294967295, 0)), Long_and(Long_fromInt(var$7[0]), new Long(4294967295, 0)));
    var$6[0] = $carry.lo;
    var$10 = Long_shr($carry, 32);
    if ($aSize < $bSize) {
        $i = 1;
        while ($i < $aSize) {
            var$12 = Long_add(var$10, Long_add(Long_and(Long_fromInt(var$8[$i]), new Long(4294967295, 0)), Long_and(Long_fromInt(var$7[$i]), new Long(4294967295, 0))));
            var$6[$i] = var$12.lo;
            var$10 = Long_shr(var$12, 32);
            $i = $i + 1 | 0;
        }
        while ($i < $bSize) {
            var$12 = Long_add(var$10, Long_and(Long_fromInt(var$7[$i]), new Long(4294967295, 0)));
            var$6[$i] = var$12.lo;
            var$10 = Long_shr(var$12, 32);
            $i = $i + 1 | 0;
        }
    } else {
        $i = 1;
        while ($i < $bSize) {
            var$12 = Long_add(var$10, Long_add(Long_and(Long_fromInt(var$8[$i]), new Long(4294967295, 0)), Long_and(Long_fromInt(var$7[$i]), new Long(4294967295, 0))));
            var$6[$i] = var$12.lo;
            var$10 = Long_shr(var$12, 32);
            $i = $i + 1 | 0;
        }
        while ($i < $aSize) {
            var$12 = Long_add(var$10, Long_and(Long_fromInt(var$8[$i]), new Long(4294967295, 0)));
            var$6[$i] = var$12.lo;
            var$10 = Long_shr(var$12, 32);
            $i = $i + 1 | 0;
        }
    }
    if (Long_ne(var$10, Long_ZERO))
        var$6[$i] = var$10.lo;
}
function jm_Elementary_subtract0($op1, $op2) {
    var $op1Sign, $op2Sign, $op1Len, $op2Len, $a, $b, var$9, var$10, var$11, $cmp, $resSign, $resDigits, $res;
    $op1Sign = $op1.$sign1;
    $op2Sign = $op2.$sign1;
    if (!$op2Sign)
        return $op1;
    if (!$op1Sign)
        return $op2.$negate();
    $op1Len = $op1.$numberLength;
    $op2Len = $op2.$numberLength;
    if (($op1Len + $op2Len | 0) == 2) {
        $a = Long_and(Long_fromInt($op1.$digits.data[0]), new Long(4294967295, 0));
        $b = Long_and(Long_fromInt($op2.$digits.data[0]), new Long(4294967295, 0));
        if ($op1Sign < 0)
            $a = Long_neg($a);
        if ($op2Sign < 0)
            $b = Long_neg($b);
        return jm_BigInteger_valueOf(Long_sub($a, $b));
    }
    var$9 = $rt_compare($op1Len, $op2Len);
    if (!var$9) {
        var$10 = $op1.$digits;
        var$11 = $op2.$digits;
        $cmp = jm_Elementary_compareArrays(var$10, var$11, $op1Len);
    } else
        $cmp = var$9 <= 0 ? (-1) : 1;
    if ($cmp == (-1)) {
        $resSign =  -$op2Sign;
        $resDigits = $op1Sign != $op2Sign ? jm_Elementary_add0($op2.$digits, $op2Len, $op1.$digits, $op1Len) : jm_Elementary_subtract($op2.$digits, $op2Len, $op1.$digits, $op1Len);
    } else if ($op1Sign != $op2Sign) {
        $resDigits = jm_Elementary_add0($op1.$digits, $op1Len, $op2.$digits, $op2Len);
        $resSign = $op1Sign;
    } else {
        if (!$cmp) {
            jm_BigInteger_$callClinit();
            return jm_BigInteger_ZERO;
        }
        $resDigits = jm_Elementary_subtract($op1.$digits, $op1Len, $op2.$digits, $op2Len);
        $resSign = $op1Sign;
    }
    var$10 = $resDigits.data;
    $res = jm_BigInteger__init_($resSign, var$10.length, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($res);
    return $res;
}
function jm_Elementary_subtract1($res, $a, $aSize, $b, $bSize) {
    var $borrow, $i, var$8, var$9, var$10;
    $borrow = Long_ZERO;
    $i = 0;
    while ($i < $bSize) {
        var$8 = $res.data;
        var$9 = $b.data;
        var$10 = Long_add($borrow, Long_sub(Long_and(Long_fromInt($a.data[$i]), new Long(4294967295, 0)), Long_and(Long_fromInt(var$9[$i]), new Long(4294967295, 0))));
        var$8[$i] = var$10.lo;
        $borrow = Long_shr(var$10, 32);
        $i = $i + 1 | 0;
    }
    while ($i < $aSize) {
        var$9 = $res.data;
        var$10 = Long_add($borrow, Long_and(Long_fromInt($a.data[$i]), new Long(4294967295, 0)));
        var$9[$i] = var$10.lo;
        $borrow = Long_shr(var$10, 32);
        $i = $i + 1 | 0;
    }
}
function jm_Elementary_add0($a, $aSize, $b, $bSize) {
    var $res;
    $res = $rt_createIntArray($aSize + 1 | 0);
    jm_Elementary_add1($res, $a, $aSize, $b, $bSize);
    return $res;
}
function jm_Elementary_inplaceAdd($a, $aSize, $addend) {
    var $carry, $i, var$6, var$7;
    $carry = Long_and(Long_fromInt($addend), new Long(4294967295, 0));
    $i = 0;
    while (Long_ne($carry, Long_ZERO) && $i < $aSize) {
        var$6 = $a.data;
        var$7 = Long_add($carry, Long_and(Long_fromInt(var$6[$i]), new Long(4294967295, 0)));
        var$6[$i] = var$7.lo;
        $carry = Long_shr(var$7, 32);
        $i = $i + 1 | 0;
    }
    return $carry.lo;
}
function jm_Elementary_subtract($a, $aSize, $b, $bSize) {
    var $res;
    $res = $rt_createIntArray($aSize);
    jm_Elementary_subtract1($res, $a, $aSize, $b, $bSize);
    return $res;
}
function ju_LinkedHashMap$2() {
    ju_AbstractCollection.call(this);
    this.$this$049 = null;
}
function ju_LinkedHashMap$2__init_(var_0) {
    var var_1 = new ju_LinkedHashMap$2();
    ju_LinkedHashMap$2__init_0(var_1, var_0);
    return var_1;
}
function ju_LinkedHashMap$2__init_0($this, $this$0) {
    $this.$this$049 = $this$0;
    ju_AbstractCollection__init_0($this);
}
function ju_LinkedHashMap$2_contains($this, $object) {
    return $this.$this$049.$containsValue($object);
}
function ju_LinkedHashMap$2_size($this) {
    return $this.$this$049.$size();
}
function ju_LinkedHashMap$2_iterator($this) {
    return ju_LinkedHashMap$ValueIterator__init_($this.$this$049);
}
function ju_ListIterator() {
}
function ju_LinkedList$SequentialListIterator() {
    var a = this; jl_Object.call(a);
    a.$nextEntry = null;
    a.$prevEntry = null;
    a.$currentEntry = null;
    a.$index2 = 0;
    a.$version0 = 0;
    a.$this$050 = null;
}
function ju_LinkedList$SequentialListIterator__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new ju_LinkedList$SequentialListIterator();
    ju_LinkedList$SequentialListIterator__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function ju_LinkedList$SequentialListIterator__init_0($this, var$1, $nextEntry, $prevEntry, $index) {
    $this.$this$050 = var$1;
    jl_Object__init_0($this);
    $this.$version0 = $this.$this$050.$modCount2;
    $this.$nextEntry = $nextEntry;
    $this.$prevEntry = $prevEntry;
    $this.$index2 = $index;
}
function ju_LinkedList$SequentialListIterator_next($this) {
    var $result;
    ju_LinkedList$SequentialListIterator_checkConcurrentModification($this);
    if ($this.$nextEntry === null)
        $rt_throw(ju_NoSuchElementException__init_());
    $result = $this.$nextEntry.$item;
    $this.$currentEntry = $this.$nextEntry;
    $this.$prevEntry = $this.$nextEntry;
    $this.$nextEntry = $this.$nextEntry.$next4;
    $this.$index2 = $this.$index2 + 1 | 0;
    return $result;
}
function ju_LinkedList$SequentialListIterator_add($this, $e) {
    var $newEntry, var$3;
    ju_LinkedList$SequentialListIterator_checkConcurrentModification($this);
    $newEntry = ju_LinkedList$Entry__init_();
    $newEntry.$item = $e;
    $newEntry.$previous = $this.$prevEntry;
    $newEntry.$next4 = $this.$nextEntry;
    if ($this.$prevEntry === null)
        ju_LinkedList_access$202($this.$this$050, $newEntry);
    else
        $this.$prevEntry.$next4 = $newEntry;
    if ($this.$nextEntry === null)
        ju_LinkedList_access$302($this.$this$050, $newEntry);
    else
        $this.$nextEntry.$previous = $newEntry;
    $this.$prevEntry = $newEntry;
    ju_LinkedList_access$404($this.$this$050);
    var$3 = $this.$this$050;
    var$3.$modCount2 = var$3.$modCount2 + 1 | 0;
    $this.$version0 = $this.$this$050.$modCount2;
    $this.$currentEntry = null;
}
function ju_LinkedList$SequentialListIterator_checkConcurrentModification($this) {
    if ($this.$version0 >= $this.$this$050.$modCount2)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
}
function oktpo_OdePhysicsWorld$Companion() {
    jl_Object.call(this);
}
function oktpo_OdePhysicsWorld$Companion__init_() {
    var var_0 = new oktpo_OdePhysicsWorld$Companion();
    oktpo_OdePhysicsWorld$Companion__init_0(var_0);
    return var_0;
}
function oktpo_OdePhysicsWorld$Companion__init_1(var_0) {
    var var_1 = new oktpo_OdePhysicsWorld$Companion();
    oktpo_OdePhysicsWorld$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktpo_OdePhysicsWorld$Companion_getBodyPairsPool($this) {
    return oktpo_OdePhysicsWorld_access$getBodyPairsPool$cp();
}
function oktpo_OdePhysicsWorld$Companion_getGeomPairsPool($this) {
    return oktpo_OdePhysicsWorld_access$getGeomPairsPool$cp();
}
function oktpo_OdePhysicsWorld$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktpo_OdePhysicsWorld$Companion__init_2($this, $$constructor_marker) {
    oktpo_OdePhysicsWorld$Companion__init_0($this);
}
function oooi_CollideTrimeshTrimesh$1() {
    jl_Object.call(this);
    this.$this$051 = null;
}
function oooi_CollideTrimeshTrimesh$1__init_(var_0) {
    var var_1 = new oooi_CollideTrimeshTrimesh$1();
    oooi_CollideTrimeshTrimesh$1__init_0(var_1, var_0);
    return var_1;
}
function oooi_CollideTrimeshTrimesh$1__init_0($this, $this$0) {
    $this.$this$051 = $this$0;
    jl_Object__init_0($this);
}
function oooi_CollideTrimeshTrimesh$1_compare($this, $o1, $o2) {
    return jl_Float_compare($o2.$getDepth0(), $o1.$getDepth0());
}
function okti_IImg$DefaultImpls() {
    jl_Object.call(this);
}
function okti_IImg$DefaultImpls_load$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$7 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(550)));
    if (var$6 & 2)
        var$3 = var$1.$createImage();
    if (var$6 & 4)
        var$4 = 1;
    if (var$6 & 8) {
        okti_IImg$load$1_$callClinit();
        var$5 = okti_IImg$load$1_INSTANCE;
    }
    return var$1.$load(var$2, var$3, var$4, var$5);
}
function okti_IMouseListener$DefaultImpls() {
    jl_Object.call(this);
}
function okti_IMouseListener$DefaultImpls_buttonDown($$this, $button, $screenX, $screenY, $pointer) {
    return;
}
function okti_IMouseListener$DefaultImpls_buttonUp($$this, $button, $screenX, $screenY, $pointer) {
    return;
}
function okti_IMouseListener$DefaultImpls_dragged($$this, $screenX, $screenY, $pointer) {
    return;
}
function okti_IMouseListener$DefaultImpls_moved($$this, $screenX, $screenY) {
    return;
}
function okti_IMouseListener$DefaultImpls_scrolled($$this, $amount) {
    return;
}
function oooicj_RefDouble() {
    jl_Object.call(this);
    this.$d1 = 0.0;
}
function oooicj_RefDouble__init_0() {
    var var_0 = new oooicj_RefDouble();
    oooicj_RefDouble__init_1(var_0);
    return var_0;
}
function oooicj_RefDouble__init_(var_0) {
    var var_1 = new oooicj_RefDouble();
    oooicj_RefDouble__init_2(var_1, var_0);
    return var_1;
}
function oooicj_RefDouble__init_1($this) {
    jl_Object__init_0($this);
    $this.$d1 = 0.0;
}
function oooicj_RefDouble__init_2($this, $d) {
    jl_Object__init_0($this);
    $this.$d1 = $d;
}
function oooicj_RefDouble_set($this, $d) {
    $this.$d1 = $d;
}
function oooicj_RefDouble_get($this) {
    return $this.$d1;
}
function oktd_IFloatData() {
}
function oktt_TvmFloat32Array() {
    var a = this; oktt_TvmArrayBufferView.call(a);
    a.$size3 = 0;
    a.$floatArray = null;
}
function oktt_TvmFloat32Array__init_0(var_0) {
    var var_1 = new oktt_TvmFloat32Array();
    oktt_TvmFloat32Array__init_(var_1, var_0);
    return var_1;
}
function oktt_TvmFloat32Array_getSize($this) {
    return $this.$size3;
}
function oktt_TvmFloat32Array_setSize($this, $_set___) {
    $this.$size3 = $_set___;
}
function oktt_TvmFloat32Array_set($this, $index, $value) {
    $this.$floatArray[$index] = $value;
}
function oktt_TvmFloat32Array_set0(var$0, var$1, var$2) {
    oktt_TvmFloat32Array_set(var$0, var$1, var$2.$floatValue());
}
function oktt_TvmFloat32Array_get($this, $index) {
    return jl_Float_valueOf($this.$floatArray[$index]);
}
function oktt_TvmFloat32Array_get0(var$0, var$1) {
    return oktt_TvmFloat32Array_get(var$0, var$1);
}
function oktt_TvmFloat32Array_get1($this) {
    var $value;
    $value = $this.$floatArray[$this.$getPosition()];
    $this.$setPosition($this.$getPosition() + 1 | 0);
    return jl_Float_valueOf($value);
}
function oktt_TvmFloat32Array_get2(var$0) {
    return oktt_TvmFloat32Array_get1(var$0);
}
function oktt_TvmFloat32Array_put($this, $value) {
    $this.$floatArray[$this.$getPosition()] = $value;
    $this.$setPosition($this.$getPosition() + 1 | 0);
}
function oktt_TvmFloat32Array_put0(var$0, var$1) {
    oktt_TvmFloat32Array_put(var$0, var$1.$floatValue());
}
function oktt_TvmFloat32Array__init_($this, $floatArray) {
    kji_Intrinsics_checkParameterIsNotNull($floatArray, $rt_s(551));
    oktt_TvmArrayBufferView__init_0($this);
    $this.$floatArray = $floatArray;
    $this.$size3 = $this.$floatArray.length;
}
function oktt_TvmFloat32Array_get3($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    oktd_IFloatData$DefaultImpls_get($this, $out);
}
function oktt_TvmFloat32Array_put1($this, $values) {
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    oktd_IFloatData$DefaultImpls_put($this, $values);
}
function oktt_TvmFloat32Array_put2(var$0, var$1) {
    oktt_TvmFloat32Array_put1(var$0, var$1);
}
function oktt_KeyboardTest() {
    jl_Object.call(this);
}
function oktt_KeyboardTest__init_() {
    var var_0 = new oktt_KeyboardTest();
    oktt_KeyboardTest__init_0(var_0);
    return var_0;
}
function oktt_KeyboardTest_getName($this) {
    return $rt_s(552);
}
function oktt_KeyboardTest_testMain($this) {
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, $rt_s(553), null, 2, null);
    okti_KB_$callClinit();
    okti_KB_addListener(okti_KB_INSTANCE, oktt_KeyboardTest$testMain$1__init_());
}
function oktt_KeyboardTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktg_IObject3D$Companion() {
    jl_Object.call(this);
}
var oktg_IObject3D$Companion_Build = null;
var oktg_IObject3D$Companion_preparedShaders = null;
var oktg_IObject3D$Companion_$$INSTANCE = null;
function oktg_IObject3D$Companion_$callClinit() {
    oktg_IObject3D$Companion_$callClinit = $rt_eraseClinit(oktg_IObject3D$Companion);
    oktg_IObject3D$Companion__clinit_();
}
function oktg_IObject3D$Companion__init_() {
    var var_0 = new oktg_IObject3D$Companion();
    oktg_IObject3D$Companion__init_0(var_0);
    return var_0;
}
function oktg_IObject3D$Companion__init_0($this) {
    oktg_IObject3D$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktg_IObject3D$Companion__clinit_() {
    oktg_IObject3D$Companion_$$INSTANCE = oktg_IObject3D$Companion__init_();
    oktg_IObject3D$Companion$Build$1_$callClinit();
    oktg_IObject3D$Companion_Build = oktg_IObject3D$Companion$Build$1_INSTANCE;
    oktg_IObject3D$Companion_preparedShaders = ju_HashSet__init_();
}
function oktg_IObject3D$Companion_access$getPreparedShaders$p($$this) {
    oktg_IObject3D$Companion_$callClinit();
    return oktg_IObject3D$Companion_preparedShaders;
}
function ju_AbstractList() {
    ju_AbstractCollection.call(this);
    this.$modCount2 = 0;
}
function ju_AbstractList__init_() {
    var var_0 = new ju_AbstractList();
    ju_AbstractList__init_0(var_0);
    return var_0;
}
function ju_AbstractList__init_0($this) {
    ju_AbstractCollection__init_0($this);
}
function ju_AbstractList_add($this, $e) {
    $this.$add2($this.$size(), $e);
    return 1;
}
function ju_AbstractList_iterator($this) {
    return ju_AbstractList$1__init_($this);
}
function ju_AbstractList_indexOf($this, $o) {
    var $sz, $i, $e;
    $sz = $this.$size();
    $i = 0;
    a: {
        while ($i < $sz) {
            b: {
                $e = $this.$get1($i);
                if ($o !== null) {
                    if (!$o.$equals0($e))
                        break b;
                    else
                        break a;
                }
                if ($e === null)
                    break a;
            }
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return $i;
}
function ju_AbstractList_hashCode($this) {
    var $hashCode, $iter, $elem;
    $hashCode = 1;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        $elem = $iter.$next();
        $hashCode = (31 * $hashCode | 0) + ($elem === null ? 0 : $elem.$hashCode()) | 0;
    }
    return $hashCode;
}
function ju_AbstractList_equals($this, $other) {
    var $list, $i;
    if (!$rt_isInstance($other, ju_List))
        return 0;
    $list = $other;
    if ($this.$size() != $list.$size())
        return 0;
    $i = 0;
    while ($i < $list.$size()) {
        if (!ju_Objects_equals($this.$get1($i), $list.$get1($i)))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function jur_ReluctantCompositeQuantifierSet() {
    jur_CompositeQuantifierSet.call(this);
}
function jur_ReluctantCompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_ReluctantCompositeQuantifierSet();
    jur_ReluctantCompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_ReluctantCompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type);
}
function jur_ReluctantCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, var$7, var$8;
    $min = $this.$quantifier.$min0();
    $max = $this.$quantifier.$max0();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    var$7 = $this.$next0.$matches($stringIndex, $testString, $matchResult);
                    if (var$7 >= 0)
                        break;
                    if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
                        var$7 = $this.$leaf.$accepts($stringIndex, $testString);
                        $stringIndex = $stringIndex + var$7 | 0;
                        $i = $i + 1 | 0;
                    }
                    if (var$7 < 1)
                        break a;
                    if ($i > $max)
                        break a;
                }
                return var$7;
            }
            return (-1);
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        var$8 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$8 < 1)
            break;
        $stringIndex = $stringIndex + var$8 | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function okttsg_SSAOTest$testMain$1() {
    kji_Lambda.call(this);
}
var okttsg_SSAOTest$testMain$1_INSTANCE = null;
function okttsg_SSAOTest$testMain$1_$callClinit() {
    okttsg_SSAOTest$testMain$1_$callClinit = $rt_eraseClinit(okttsg_SSAOTest$testMain$1);
    okttsg_SSAOTest$testMain$1__clinit_();
}
function okttsg_SSAOTest$testMain$1__init_() {
    var var_0 = new okttsg_SSAOTest$testMain$1();
    okttsg_SSAOTest$testMain$1__init_0(var_0);
    return var_0;
}
function okttsg_SSAOTest$testMain$1_invoke(var$0, var$1) {
    okttsg_SSAOTest$testMain$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttsg_SSAOTest$testMain$1_invoke0($this, $model) {
    var $screenQuad, $gBuffer, $ssao, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $vertexNode, $cameraDataNode, var$17;
    kji_Intrinsics_checkParameterIsNotNull($model, $rt_s(5));
    $screenQuad = oktm_ScreenQuad$TextureRenderer__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    $gBuffer = oktt_GBuffer__init_(0, 0, 0, 0, 0, 31, null);
    $ssao = oktsp_SSAO__init_1(oktt_GBuffer_getColorMap($gBuffer), oktt_GBuffer_getNormalMap($gBuffer), oktt_GBuffer_getPositionMap($gBuffer), null, null, 0, 0, 120, null);
    var$5 = oktt_GLTFModel_getScene($model);
    if (var$5 !== null) {
        var$6 = var$5.$getObjects();
        if (var$6 !== null) {
            var$7 = null;
            var$8 = null;
            var$9 = null;
            var$10 = $rt_createArray(oktm_IMesh, 1);
            var$11 = var$10.data;
            var$12 = oktmb_PlaneMeshBuilder__init_(5.0, 5.0, 0, 0, null, null, 60, null);
            oktmb_MeshBuilder_setPositionName(var$12, $rt_s(543));
            var$13 = oktmb_MeshBuilder_getMaterial(var$12);
            var$14 = okts_Shader__init_2(null, null, null, 0, null, 330, null, 95, null);
            $vertexNode = var$14.$addNode0(oktsg_VertexNode__init_(0, 0, 0, 7, null));
            oktsg_VertexNode_setAPositionName($vertexNode, $rt_s(543));
            $cameraDataNode = var$14.$addNode0(oktsg_CameraDataNode__init_0(oktsg_VertexNode_getPosition($vertexNode)));
            var$5 = oktsg_GBufferOutputNode__init_();
            oktsg_GBufferOutputNode_setVertPosition(var$5, oktsg_CameraDataNode_getClipSpacePosition($cameraDataNode));
            oktsg_GLSL_$callClinit();
            oktsg_GBufferOutputNode_setFragColor(var$5, oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE));
            oktsg_GBufferOutputNode_setFragNormal(var$5, oktsg_VertexNode_getNormal($vertexNode));
            oktsg_GBufferOutputNode_setFragPosition(var$5, oktsg_CameraDataNode_getViewSpacePosition($cameraDataNode));
            var$14.$addNode0(var$5);
            var$14.$build0();
            var$13.$setShader(var$14);
            var$5 = null;
            var$17 = null;
            var$11[0] = oktmb_MeshBuilder_build$default(var$12, var$5, 1, var$17);
            var$5 = kc_CollectionsKt__CollectionsKt_arrayListOf(var$10);
            var$17 = null;
            var$12 = null;
            var$13 = null;
            var$14 = oktg_Object3D__init_(var$7, var$8, var$9, 0, var$5, var$17, var$12, 111, var$13);
            var$6.$add1(var$14);
        }
    }
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    okti_MOUSE_$callClinit();
    okti_MOUSE_addListener(okti_MOUSE_INSTANCE, okttsg_SSAOTest$testMain$1$2__init_($ssao));
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttsg_SSAOTest$testMain$1$3__init_($gBuffer, $model, $ssao, $screenQuad), 1, null);
}
function okttsg_SSAOTest$testMain$1__init_0(var$0) {
    okttsg_SSAOTest$testMain$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function okttsg_SSAOTest$testMain$1__clinit_() {
    okttsg_SSAOTest$testMain$1_INSTANCE = okttsg_SSAOTest$testMain$1__init_();
}
function jn_Buffer() {
    var a = this; jl_Object.call(a);
    a.$capacity0 = 0;
    a.$position4 = 0;
    a.$limit0 = 0;
    a.$mark = 0;
}
function jn_Buffer__init_(var_0) {
    var var_1 = new jn_Buffer();
    jn_Buffer__init_0(var_1, var_0);
    return var_1;
}
function jn_Buffer__init_0($this, $capacity) {
    jl_Object__init_0($this);
    $this.$mark = (-1);
    $this.$capacity0 = $capacity;
    $this.$limit0 = $capacity;
}
function jn_Buffer_capacity($this) {
    return $this.$capacity0;
}
function jn_Buffer_position($this) {
    return $this.$position4;
}
function jn_Buffer_position0($this, $newPosition) {
    if ($newPosition >= 0 && $newPosition <= $this.$limit0) {
        $this.$position4 = $newPosition;
        if ($newPosition < $this.$mark)
            $this.$mark = 0;
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(554)).$append1($newPosition).$append($rt_s(555)).$append1($this.$limit0).$append($rt_s(400)).$toString()));
}
function jn_Buffer_limit($this) {
    return $this.$limit0;
}
function jn_Buffer_clear($this) {
    $this.$position4 = 0;
    $this.$limit0 = $this.$capacity0;
    $this.$mark = (-1);
    return $this;
}
function jn_Buffer_flip($this) {
    $this.$limit0 = $this.$position4;
    $this.$position4 = 0;
    $this.$mark = (-1);
    return $this;
}
function jn_Buffer_remaining($this) {
    return $this.$limit0 - $this.$position4 | 0;
}
function jn_Buffer_hasRemaining($this) {
    return $this.$position4 >= $this.$limit0 ? 0 : 1;
}
function jn_ByteBuffer() {
    var a = this; jn_Buffer.call(a);
    a.$start2 = 0;
    a.$array1 = null;
    a.$order = null;
}
function jn_ByteBuffer__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jn_ByteBuffer();
    jn_ByteBuffer__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jn_ByteBuffer__init_0($this, $start, $capacity, $array, $position, $limit) {
    jn_Buffer__init_0($this, $capacity);
    jn_ByteOrder_$callClinit();
    $this.$order = jn_ByteOrder_BIG_ENDIAN;
    $this.$start2 = $start;
    $this.$array1 = $array;
    $this.$position4 = $position;
    $this.$limit0 = $limit;
}
function jn_ByteBuffer_wrap0($array, $offset, $length) {
    return jn_ByteBufferImpl__init_(0, $array.data.length, $array, $offset, $offset + $length | 0, 0, 0);
}
function jn_ByteBuffer_wrap($array) {
    return jn_ByteBuffer_wrap0($array, 0, $array.data.length);
}
function jn_ByteBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i, var$9;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(556)).$append1(var$6).$append($rt_s(557)).$append1(var$5).$toString()));
            if (jn_Buffer_remaining($this) < $length)
                $rt_throw(jn_BufferUnderflowException__init_());
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(558)).$append1($length).$append($rt_s(559)).$toString()));
            $pos = $this.$position4 + $this.$start2 | 0;
            $i = 0;
            while ($i < $length) {
                var$6 = $offset + 1 | 0;
                var$9 = $this.$array1.data;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = var$9[$pos];
                $i = $i + 1 | 0;
                $offset = var$6;
                $pos = var$5;
            }
            $this.$position4 = $this.$position4 + $length | 0;
            return $this;
        }
    }
    var$4 = $dst.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(560)).$append1($offset).$append($rt_s(555)).$append1(var$4.length).$append($rt_s(561)).$toString()));
}
function jn_ByteBuffer_put0($this, $src, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i, var$9;
    if (!$length)
        return $this;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(562)).$append1(var$6).$append($rt_s(557)).$append1(var$5).$toString()));
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(558)).$append1($length).$append($rt_s(559)).$toString()));
            $pos = $this.$position4 + $this.$start2 | 0;
            $i = 0;
            while ($i < $length) {
                var$9 = $this.$array1.data;
                var$6 = $pos + 1 | 0;
                var$5 = $offset + 1 | 0;
                var$9[$pos] = var$4[$offset];
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$5;
            }
            $this.$position4 = $this.$position4 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(560)).$append1($offset).$append($rt_s(555)).$append1(var$4.length).$append($rt_s(561)).$toString()));
}
function jn_ByteBuffer_put($this, $src) {
    return $this.$put6($src, 0, $src.data.length);
}
function jn_ByteBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_ByteBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function oktp_IPhysicsWorld() {
}
function oktpo_OdePhysicsWorld() {
    var a = this; jl_Object.call(a);
    a.$world = null;
    a.$space = null;
    a.$contactGroup = null;
    a.$maxContacts = 0;
    a.$contactMaxLifeTime = 0.0;
    a.$aliveContacts = null;
    a.$newContacts = null;
    a.$oldContacts = null;
    a.$geomAliveContacts = null;
    a.$geomNewContacts = null;
    a.$geomOldContacts = null;
    a.$listeners0 = null;
    a.$minStep = 0.0;
    a.$nearCallback = null;
}
var oktpo_OdePhysicsWorld_tmp = null;
var oktpo_OdePhysicsWorld_bodyPairsPool = null;
var oktpo_OdePhysicsWorld_geomPairsPool = null;
var oktpo_OdePhysicsWorld_Companion = null;
function oktpo_OdePhysicsWorld_$callClinit() {
    oktpo_OdePhysicsWorld_$callClinit = $rt_eraseClinit(oktpo_OdePhysicsWorld);
    oktpo_OdePhysicsWorld__clinit_();
}
function oktpo_OdePhysicsWorld__init_() {
    var var_0 = new oktpo_OdePhysicsWorld();
    oktpo_OdePhysicsWorld__init_0(var_0);
    return var_0;
}
function oktpo_OdePhysicsWorld_getWorld($this) {
    return $this.$world;
}
function oktpo_OdePhysicsWorld_getSpace($this) {
    return $this.$space;
}
function oktpo_OdePhysicsWorld_getContactGroup($this) {
    return $this.$contactGroup;
}
function oktpo_OdePhysicsWorld_getMaxContacts($this) {
    return $this.$maxContacts;
}
function oktpo_OdePhysicsWorld_getContactMaxLifeTime($this) {
    return $this.$contactMaxLifeTime;
}
function oktpo_OdePhysicsWorld_getAliveContacts($this) {
    return $this.$aliveContacts;
}
function oktpo_OdePhysicsWorld_getNewContacts($this) {
    return $this.$newContacts;
}
function oktpo_OdePhysicsWorld_getGeomAliveContacts($this) {
    return $this.$geomAliveContacts;
}
function oktpo_OdePhysicsWorld_getGeomNewContacts($this) {
    return $this.$geomNewContacts;
}
function oktpo_OdePhysicsWorld_getSourceObject($this) {
    var var$1;
    var$1 = $this.$world;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(563));
    return var$1;
}
function oktpo_OdePhysicsWorld_setGravity($this, $x, $y, $z) {
    $this.$world.$setGravity($x, $y, $z);
}
function oktpo_OdePhysicsWorld_step($this, $delta) {
    var $$this$forEach$iv, var$3, $element$iv, $pair, $$this$traverseSafe$iv, $i$iv, $item$iv, $it, var$10, var$11;
    $this.$newContacts.$clear();
    $this.$space.$collide(null, $this.$nearCallback);
    $this.$world.$quickStep($this.$minStep);
    $this.$contactGroup.$empty();
    $this.$oldContacts.$clear();
    $this.$oldContacts.$addAll($this.$aliveContacts.$values());
    $$this$forEach$iv = $this.$oldContacts;
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $pair = $element$iv;
        oktpo_BodyContactPair_setLifeTime($pair, oktpo_BodyContactPair_getLifeTime($pair) - $delta);
        if (oktpo_BodyContactPair_getLifeTime($pair) < 0.0) {
            $this.$aliveContacts.$remove0($pair);
            $$this$traverseSafe$iv = $this.$listeners0;
            $i$iv = 0;
            while ($i$iv < $$this$traverseSafe$iv.$size()) {
                $item$iv = $$this$traverseSafe$iv.$get1($i$iv);
                if ($item$iv !== null) {
                    $it = $item$iv;
                    $it.$collisionEnd(oktpo_BodyContactPair_getA($pair), oktpo_BodyContactPair_getB($pair));
                }
                $i$iv = $i$iv + 1 | 0;
            }
            oktu_Pool_free(oktpo_OdePhysicsWorld_bodyPairsPool, $pair);
        }
    }
    var$10 = $this.$newContacts;
    var$11 = $this.$aliveContacts.$values();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$11, $rt_s(564));
    var$10.$removeAll(var$11);
    $$this$forEach$iv = $this.$newContacts;
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $pair = $element$iv;
        $this.$aliveContacts.$put3($pair, $pair);
        $$this$traverseSafe$iv = $this.$listeners0;
        $i$iv = 0;
        while ($i$iv < $$this$traverseSafe$iv.$size()) {
            $item$iv = $$this$traverseSafe$iv.$get1($i$iv);
            if ($item$iv !== null) {
                $it = $item$iv;
                $it.$collisionBegin(oktpo_BodyContactPair_getA($pair), oktpo_BodyContactPair_getB($pair), oktpo_BodyContactPair_getDepth($pair));
            }
            $i$iv = $i$iv + 1 | 0;
        }
    }
    $this.$geomOldContacts.$clear();
    $this.$geomOldContacts.$addAll($this.$geomAliveContacts.$values());
    $$this$forEach$iv = $this.$geomOldContacts;
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $pair = $element$iv;
        oktpo_GeomContactPair_setLifeTime($pair, oktpo_GeomContactPair_getLifeTime($pair) - $delta);
        if (oktpo_GeomContactPair_getLifeTime($pair) < 0.0) {
            $this.$geomAliveContacts.$remove0($pair);
            $$this$traverseSafe$iv = $this.$listeners0;
            $i$iv = 0;
            while ($i$iv < $$this$traverseSafe$iv.$size()) {
                $item$iv = $$this$traverseSafe$iv.$get1($i$iv);
                if ($item$iv !== null) {
                    $it = $item$iv;
                    $it.$collisionEnd0(oktpo_GeomContactPair_getA($pair), oktpo_GeomContactPair_getB($pair));
                }
                $i$iv = $i$iv + 1 | 0;
            }
            oktu_Pool_free(oktpo_OdePhysicsWorld_geomPairsPool, $pair);
        }
    }
    var$3 = $this.$geomNewContacts;
    var$10 = $this.$geomAliveContacts.$values();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$10, $rt_s(565));
    var$3.$removeAll(var$10);
    $$this$forEach$iv = $this.$geomNewContacts;
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $pair = $element$iv;
        $this.$geomAliveContacts.$put3($pair, $pair);
        $$this$traverseSafe$iv = $this.$listeners0;
        $i$iv = 0;
        while ($i$iv < $$this$traverseSafe$iv.$size()) {
            $item$iv = $$this$traverseSafe$iv.$get1($i$iv);
            if ($item$iv !== null) {
                $it = $item$iv;
                $it.$collisionBegin0(oktpo_GeomContactPair_getA($pair), oktpo_GeomContactPair_getB($pair), oktpo_GeomContactPair_getDepth($pair));
            }
            $i$iv = $i$iv + 1 | 0;
        }
    }
}
function oktpo_OdePhysicsWorld_rigidBody($this, $shape, $mass) {
    var $body;
    $body = oktpo_OdeRigidBody__init_($this, $mass, 0.0, 4, null);
    oktpo_OdeRigidBody_setShape($body, $shape);
    return $body;
}
function oktpo_OdePhysicsWorld_boxShape($this, $xSize, $ySize, $zSize) {
    return oktpo_OdeBoxShape__init_($this, $xSize, $ySize, $zSize);
}
function oktpo_OdePhysicsWorld_sphereShape($this, $radius) {
    return oktpo_OdeSphereShape__init_($this, $radius);
}
function oktpo_OdePhysicsWorld_trimeshShape($this, $vertices, $indices) {
    kji_Intrinsics_checkParameterIsNotNull($vertices, $rt_s(487));
    kji_Intrinsics_checkParameterIsNotNull($indices, $rt_s(566));
    return oktpo_OdeTrimeshShape__init_($this, $vertices, $indices);
}
function oktpo_OdePhysicsWorld__init_0($this) {
    var var$1;
    oktpo_OdePhysicsWorld_$callClinit();
    jl_Object__init_0($this);
    var$1 = ooo_OdeHelper_createWorld();
    var$1.$setERP(0.2);
    var$1.$setCFM(1.0E-4);
    $this.$world = var$1;
    $this.$space = ooo_OdeHelper_createHashSpace(null);
    $this.$contactGroup = ooo_OdeHelper_createJointGroup();
    $this.$maxContacts = 40;
    $this.$contactMaxLifeTime = 0.10000000149011612;
    $this.$aliveContacts = ju_HashMap__init_();
    $this.$newContacts = ju_HashSet__init_();
    $this.$oldContacts = ju_HashSet__init_();
    $this.$geomAliveContacts = ju_HashMap__init_();
    $this.$geomNewContacts = ju_HashSet__init_();
    $this.$geomOldContacts = ju_HashSet__init_();
    $this.$listeners0 = ju_ArrayList__init_();
    $this.$minStep = 0.02;
    $this.$nearCallback = oktpo_OdePhysicsWorld$nearCallback$1__init_($this);
}
function oktpo_OdePhysicsWorld__clinit_() {
    var var$1;
    oktpo_OdePhysicsWorld_Companion = oktpo_OdePhysicsWorld$Companion__init_1(null);
    oktpo_OdePhysicsWorld_tmp = oom_DVector3__init_();
    var$1 = new oktu_Pool;
    oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_$callClinit();
    oktu_Pool__init_2(var$1, oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_INSTANCE);
    oktpo_OdePhysicsWorld_bodyPairsPool = var$1;
    var$1 = new oktu_Pool;
    oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_$callClinit();
    oktu_Pool__init_2(var$1, oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_INSTANCE);
    oktpo_OdePhysicsWorld_geomPairsPool = var$1;
}
function oktpo_OdePhysicsWorld_trimeshShape0($this, $vertices, $positionOffset, $vertexSize, $indices, $indexType) {
    kji_Intrinsics_checkParameterIsNotNull($vertices, $rt_s(487));
    return oktp_IPhysicsWorld$DefaultImpls_trimeshShape($this, $vertices, $positionOffset, $vertexSize, $indices, $indexType);
}
function oktpo_OdePhysicsWorld_trimeshShape1($this, $mesh, $positionName) {
    kji_Intrinsics_checkParameterIsNotNull($mesh, $rt_s(43));
    kji_Intrinsics_checkParameterIsNotNull($positionName, $rt_s(490));
    return oktp_IPhysicsWorld$DefaultImpls_trimeshShape1($this, $mesh, $positionName);
}
function oktpo_OdePhysicsWorld_trimeshShape2($this, $vertices, $positionName, $indices) {
    kji_Intrinsics_checkParameterIsNotNull($vertices, $rt_s(487));
    kji_Intrinsics_checkParameterIsNotNull($positionName, $rt_s(490));
    return oktp_IPhysicsWorld$DefaultImpls_trimeshShape0($this, $vertices, $positionName, $indices);
}
function oktpo_OdePhysicsWorld_access$getBodyPairsPool$cp() {
    oktpo_OdePhysicsWorld_$callClinit();
    return oktpo_OdePhysicsWorld_bodyPairsPool;
}
function oktpo_OdePhysicsWorld_access$getGeomPairsPool$cp() {
    oktpo_OdePhysicsWorld_$callClinit();
    return oktpo_OdePhysicsWorld_geomPairsPool;
}
function jur_SOLSet() {
    jur_AbstractSet.call(this);
}
function jur_SOLSet__init_() {
    var var_0 = new jur_SOLSet();
    jur_SOLSet__init_0(var_0);
    return var_0;
}
function jur_SOLSet__init_0($this) {
    jur_AbstractSet__init_0($this);
}
function jur_SOLSet_matches($this, $strIndex, $testString, $matchResult) {
    if ($strIndex && !($matchResult.$hasAnchoringBounds() && $strIndex == $matchResult.$getLeftBound()))
        return (-1);
    return $this.$next0.$matches($strIndex, $testString, $matchResult);
}
function jur_SOLSet_hasConsumed($this, $matchResult) {
    return 0;
}
function oktgg_IGLTFMaterial$read$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$052 = null;
    a.$$material = null;
}
function oktgg_IGLTFMaterial$read$1__init_(var_0, var_1) {
    var var_2 = new oktgg_IGLTFMaterial$read$1();
    oktgg_IGLTFMaterial$read$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_IGLTFMaterial$read$1_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    $this.$this$052.$setName($it);
    $this.$$material.$setName($it);
}
function oktgg_IGLTFMaterial$read$1__init_0(var$0, var$1, var$2) {
    var$0.$this$052 = var$1;
    var$0.$$material = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_IGLTFMaterial$read$3() {
    kji_Lambda.call(this);
    this.$this$053 = null;
}
function oktgg_IGLTFMaterial$read$3__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$3();
    oktgg_IGLTFMaterial$read$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_IGLTFMaterial$read$3_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$3_invoke0(var$0, var$1.$booleanValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$3_invoke0($this, $it) {
    $this.$this$053.$setDoubleSided($it);
}
function oktgg_IGLTFMaterial$read$3__init_0(var$0, var$1) {
    var$0.$this$053 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_IGLTFMaterial$read$2() {
    kji_Lambda.call(this);
    this.$this$054 = null;
}
function oktgg_IGLTFMaterial$read$2__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$2();
    oktgg_IGLTFMaterial$read$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_IGLTFMaterial$read$2_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$2_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    $this.$this$054.$setAlphaMode($it);
}
function oktgg_IGLTFMaterial$read$2__init_0(var$0, var$1) {
    var$0.$this$054 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_IGLTFMaterial$read$5() {
    var a = this; kji_Lambda.call(a);
    a.$this$023 = null;
    a.$$shader1 = null;
    a.$$uvNodes = null;
    a.$$alphaNodes = null;
    a.$$baseColorValue = null;
    a.$$occlusionValue = null;
    a.$$roughnessValue = null;
    a.$$metallicValue = null;
}
function oktgg_IGLTFMaterial$read$5__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new oktgg_IGLTFMaterial$read$5();
    oktgg_IGLTFMaterial$read$5__init_0(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function oktgg_IGLTFMaterial$read$5_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$5_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$5_invoke0($this, $$this$get) {
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    $$this$get.$get16($rt_s(567), oktgg_IGLTFMaterial$read$5$1__init_($this));
    $$this$get.$array($rt_s(568), oktgg_IGLTFMaterial$read$5$2__init_($this));
    $$this$get.$get16($rt_s(569), oktgg_IGLTFMaterial$read$5$3__init_($this));
    $$this$get.$float($rt_s(570), oktgg_IGLTFMaterial$read$5$4__init_($this));
    $$this$get.$float($rt_s(571), oktgg_IGLTFMaterial$read$5$5__init_($this));
}
function oktgg_IGLTFMaterial$read$5__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    var$0.$this$023 = var$1;
    var$0.$$shader1 = var$2;
    var$0.$$uvNodes = var$3;
    var$0.$$alphaNodes = var$4;
    var$0.$$baseColorValue = var$5;
    var$0.$$occlusionValue = var$6;
    var$0.$$roughnessValue = var$7;
    var$0.$$metallicValue = var$8;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_IGLTFMaterial$read$4() {
    var a = this; kji_Lambda.call(a);
    a.$this$055 = null;
    a.$$shader2 = null;
    a.$$uvNodes0 = null;
    a.$$vertexNode = null;
    a.$$cameraDataNode = null;
    a.$$normalValue = null;
}
function oktgg_IGLTFMaterial$read$4__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktgg_IGLTFMaterial$read$4();
    oktgg_IGLTFMaterial$read$4__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktgg_IGLTFMaterial$read$4_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$4_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$4_invoke0($this, $$this$get) {
    var $uvNode, $textureNode, var$4, var$5;
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    $$this$get.$float($rt_s(40), oktgg_IGLTFMaterial$read$4$1__init_($this));
    $$this$get.$int($rt_s(572), oktgg_IGLTFMaterial$read$4$2__init_($this));
    $uvNode = oktgg_IGLTFMaterial$DefaultImpls_access$getOrCreateUVNode($this.$this$055, $this.$$shader2, jl_StringBuilder__init_().$append($rt_s(573)).$append1($this.$this$055.$getNormalTextureUV()).$toString(), $this.$$uvNodes0);
    $this.$this$055.$setNormalTexture($$this$get.$int0($rt_s(574)));
    $textureNode = $this.$$shader2.$addNode0(oktsg_TextureNode__init_0(oktsg_UVNode_getUv($uvNode), oktgg_GLTFTexture_getTexture($this.$this$055.$getGltf0().$getTextures().$get1($this.$this$055.$getNormalTexture())), 0, 0, 8, null));
    var$4 = $this.$$shader2;
    var$5 = oktsg_NormalMapNode__init_(oktsg_VertexNode_getPosition($this.$$vertexNode));
    oktsg_NormalMapNode_setUv(var$5, oktsg_TextureNode_getUv($textureNode));
    oktsg_NormalMapNode_setTbn(var$5, oktsg_VertexNode_getTbn($this.$$vertexNode));
    oktsg_NormalMapNode_setNormalizedViewVector(var$5, oktsg_CameraDataNode_getNormalizedViewVector($this.$$cameraDataNode));
    oktsg_NormalMapNode_setNormalColor(var$5, oktsg_TextureNode_getColor($textureNode));
    $this.$$normalValue.$element0 = oktsg_NormalMapNode_getNormalResult(var$5);
    var$4.$addNode0(var$5);
}
function oktgg_IGLTFMaterial$read$4__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6) {
    var$0.$this$055 = var$1;
    var$0.$$shader2 = var$2;
    var$0.$$uvNodes0 = var$3;
    var$0.$$vertexNode = var$4;
    var$0.$$cameraDataNode = var$5;
    var$0.$$normalValue = var$6;
    kji_Lambda__init_0(var$0, 1);
}
function oktsg_ToneMapNode() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$result = null;
    a.$toneMapType = 0;
}
var oktsg_ToneMapNode_InputForm = null;
var oktsg_ToneMapNode_Companion = null;
function oktsg_ToneMapNode_$callClinit() {
    oktsg_ToneMapNode_$callClinit = $rt_eraseClinit(oktsg_ToneMapNode);
    oktsg_ToneMapNode__clinit_();
}
function oktsg_ToneMapNode__init_(var_0, var_1) {
    var var_2 = new oktsg_ToneMapNode();
    oktsg_ToneMapNode__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktsg_ToneMapNode__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new oktsg_ToneMapNode();
    oktsg_ToneMapNode__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktsg_ToneMapNode__init_3() {
    var var_0 = new oktsg_ToneMapNode();
    oktsg_ToneMapNode__init_4(var_0);
    return var_0;
}
function oktsg_ToneMapNode_getInputColor($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(575));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_ToneMapNode_setInputColor($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(575), $value);
}
function oktsg_ToneMapNode_getResult($this) {
    return $this.$result;
}
function oktsg_ToneMapNode_prepareToDrawScene($this, $scene) {
    kji_Intrinsics_checkParameterIsNotNull($scene, $rt_s(328));
    oktsg_ShaderNode_prepareToDrawScene($this, $scene);
    $this.$getShader().$set1($rt_s(576), $scene.$getWorld().$getExposure());
}
function oktsg_ToneMapNode_declarationFrag($this, $out) {
    var var$2;
    a: {
        kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
        $out.$append($rt_s(577));
        $out.$append(jl_StringBuilder__init_().$append($this.$result.$getTypedRef0()).$append($rt_s(578)).$toString());
        $out.$append($rt_s(579));
        $out.$append($rt_s(580));
        switch ($this.$toneMapType) {
            case 1:
                $out.$append($rt_s(581));
                $out.$append($rt_s(582));
                $out.$append($rt_s(583));
                $out.$append($rt_s(584));
                $out.$append($rt_s(585));
                $out.$append($rt_s(586));
                $out.$append($rt_s(587));
                $out.$append($rt_s(588));
                var$2 = $out.$append($rt_s(589));
                break a;
            case 2:
                $out.$append($rt_s(590));
                var$2 = $out.$append($rt_s(591));
                break a;
            case 3:
                $out.$append($rt_s(592));
                $out.$append($rt_s(593));
                $out.$append($rt_s(594));
                $out.$append($rt_s(595));
                $out.$append($rt_s(596));
                $out.$append($rt_s(597));
                var$2 = $out.$append($rt_s(598));
                break a;
            default:
        }
        var$2 = $rt_s(598);
    }
    $out.$append14(var$2);
    $out.$append($rt_s(599));
}
function oktsg_ToneMapNode_executionFrag($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $out.$append(jl_StringBuilder__init_().$append($this.$result.$getRef0()).$append($rt_s(600)).$append(oktsg_ToneMapNode_getInputColor($this).$asVec3()).$append($rt_s(601)).$append(oktsg_ToneMapNode_getInputColor($this).$getRef0()).$append($rt_s(602)).$toString());
}
function oktsg_ToneMapNode__init_0($this, $inputColor, $toneMapType) {
    oktsg_ToneMapNode_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($inputColor, $rt_s(575));
    oktsg_ShaderNode__init_0($this);
    $this.$toneMapType = $toneMapType;
    $this.$result = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec4__init_($rt_s(603)));
    $this.$setInput($rt_s(575), $inputColor);
}
function oktsg_ToneMapNode__init_2(var$0, var$1, var$2, var$3, var$4) {
    oktsg_ToneMapNode_$callClinit();
    if (var$3 & 1) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    if (var$3 & 2)
        var$2 = 0;
    oktsg_ToneMapNode__init_0(var$0, var$1, var$2);
}
function oktsg_ToneMapNode__init_4(var$0) {
    oktsg_ToneMapNode_$callClinit();
    oktsg_ToneMapNode__init_2(var$0, null, 0, 3, null);
}
function oktsg_ToneMapNode__clinit_() {
    var var$1;
    oktsg_ToneMapNode_Companion = oktsg_ToneMapNode$Companion__init_(null);
    var$1 = ju_LinkedHashMap__init_();
    var$1.$put3($rt_s(575), jl_Integer_valueOf(6));
    oktsg_ToneMapNode_InputForm = var$1;
}
function oktgg_IGLTFMaterial$read$9() {
    var a = this; kji_Lambda.call(a);
    a.$this$056 = null;
    a.$$shader3 = null;
    a.$$uvNodes1 = null;
    a.$$emissiveValue = null;
}
function oktgg_IGLTFMaterial$read$9__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktgg_IGLTFMaterial$read$9();
    oktgg_IGLTFMaterial$read$9__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktgg_IGLTFMaterial$read$9_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$9_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$9_invoke0($this, $$this$get) {
    var $uvNode, $textureNode;
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    $$this$get.$int($rt_s(572), oktgg_IGLTFMaterial$read$9$1__init_($this));
    $uvNode = oktgg_IGLTFMaterial$DefaultImpls_access$getOrCreateUVNode($this.$this$056, $this.$$shader3, jl_StringBuilder__init_().$append($rt_s(573)).$append1($this.$this$056.$getEmissiveTextureUV()).$toString(), $this.$$uvNodes1);
    $this.$this$056.$setEmissiveTexture($$this$get.$int0($rt_s(574)));
    $textureNode = $this.$$shader3.$addNode0(oktsg_TextureNode__init_0(oktsg_UVNode_getUv($uvNode), oktgg_GLTFTexture_getTexture($this.$this$056.$getGltf0().$getTextures().$get1($this.$this$056.$getEmissiveTexture())), 0, 0, 12, null));
    $this.$$emissiveValue.$element0 = oktsg_TextureNode_getColor($textureNode);
}
function oktgg_IGLTFMaterial$read$9__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$this$056 = var$1;
    var$0.$$shader3 = var$2;
    var$0.$$uvNodes1 = var$3;
    var$0.$$emissiveValue = var$4;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_IGLTFMaterial$read$8() {
    var a = this; kji_Lambda.call(a);
    a.$this$057 = null;
    a.$$shader4 = null;
    a.$$uvNodes2 = null;
    a.$$principledBSDF = null;
}
function oktgg_IGLTFMaterial$read$8__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktgg_IGLTFMaterial$read$8();
    oktgg_IGLTFMaterial$read$8__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktgg_IGLTFMaterial$read$8_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$8_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$8_invoke0($this, $$this$get) {
    var $uvNode, $textureNode;
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    $$this$get.$float($rt_s(604), oktgg_IGLTFMaterial$read$8$1__init_($this));
    $$this$get.$int($rt_s(572), oktgg_IGLTFMaterial$read$8$2__init_($this));
    $uvNode = oktgg_IGLTFMaterial$DefaultImpls_access$getOrCreateUVNode($this.$this$057, $this.$$shader4, jl_StringBuilder__init_().$append($rt_s(573)).$append1($this.$this$057.$getOcclusionTextureUV()).$toString(), $this.$$uvNodes2);
    $this.$this$057.$setOcclusionTexture($$this$get.$int0($rt_s(574)));
    $textureNode = $this.$$shader4.$addNode0(oktsg_TextureNode__init_0(oktsg_UVNode_getUv($uvNode), oktgg_GLTFTexture_getTexture($this.$this$057.$getGltf0().$getTextures().$get1($this.$this$057.$getOcclusionTexture())), 0, 0, 8, null));
    oktsg_PrincipledBSDF_setOcclusion($this.$$principledBSDF, oktsg_TextureNode_getColor($textureNode));
}
function oktgg_IGLTFMaterial$read$8__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$this$057 = var$1;
    var$0.$$shader4 = var$2;
    var$0.$$uvNodes2 = var$3;
    var$0.$$principledBSDF = var$4;
    kji_Lambda__init_0(var$0, 1);
}
function oooi_CollideSpaceGeom() {
    jl_Object.call(this);
}
function oooi_CollideSpaceGeom__init_() {
    var var_0 = new oooi_CollideSpaceGeom();
    oooi_CollideSpaceGeom__init_0(var_0);
    return var_0;
}
function oooi_CollideSpaceGeom__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollideSpaceGeom_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideSpaceGeom($o1, $o2, $flags, $contacts, 1);
}
function oooi_CollideSpaceGeom_dClearPosrCache() {
    return;
}
function oooi_CollideSpaceGeom_space_geom_collider($data, $o1, $o2) {
    var $d, $n;
    $d = $data;
    if ($d.$flags & 65535) {
        $n = oooi_DxGeom_dCollide($o1, $o2, $d.$flags, oooi_CollideSpaceGeom$SpaceGeomColliderData_access$000($d), $d.$skip);
        oooi_CollideSpaceGeom$SpaceGeomColliderData_access$002($d, ooo_DContactGeomBuffer_createView(oooi_CollideSpaceGeom$SpaceGeomColliderData_access$000($d), $n));
        $d.$flags = $d.$flags - $n | 0;
    }
}
function oooi_CollideSpaceGeom_dCollideSpaceGeom($this, $o1, $o2, $flags, $contact, $skip) {
    var $data;
    $data = oooi_CollideSpaceGeom$SpaceGeomColliderData__init_($this, null);
    $data.$flags = $flags;
    oooi_CollideSpaceGeom$SpaceGeomColliderData_access$002($data, $contact);
    $data.$skip = $skip;
    oooi_DxSpace_dSpaceCollide2($o1, $o2, $data, oooi_CollideSpaceGeom$1__init_($this));
    return ($flags & 65535) - ($data.$flags & 65535) | 0;
}
function ks_Sequence() {
}
function oktg_GL() {
    jl_Object.call(this);
}
var oktg_GL_api = null;
var oktg_GL_singleCallRequests = null;
var oktg_GL_renderCallRequests = null;
var oktg_GL_enableGlCall = 0;
var oktg_GL_maxAnisotropicFilterLevel = 0.0;
var oktg_GL_shader = 0;
var oktg_GL_activeTexture = 0;
var oktg_GL_arrayBuffer = 0;
var oktg_GL_elementArrayBuffer = 0;
var oktg_GL_textureUnitsInternal = null;
var oktg_GL_isCullFaceEnabled = 0;
var oktg_GL_cullFaceMode = 0;
var oktg_GL_isBlendEnabled = 0;
var oktg_GL_blendFactorS = 0;
var oktg_GL_blendFactorD = 0;
var oktg_GL_isDepthTestEnabled = 0;
var oktg_GL_depthFunc = 0;
var oktg_GL_isDepthMaskEnabled = 0;
var oktg_GL_samplerCounter = 0;
var oktg_GL_INSTANCE = null;
function oktg_GL_$callClinit() {
    oktg_GL_$callClinit = $rt_eraseClinit(oktg_GL);
    oktg_GL__clinit_();
}
function oktg_GL__init_() {
    var var_0 = new oktg_GL();
    oktg_GL__init_0(var_0);
    return var_0;
}
function oktg_GL_setApi($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    oktg_GL_api = $_set___;
}
function oktg_GL_getMainFrameBufferWidth($this) {
    return oktg_GL_api.$getMainFrameBufferWidth0();
}
function oktg_GL_getMainFrameBufferHeight($this) {
    return oktg_GL_api.$getMainFrameBufferHeight0();
}
function oktg_GL_getMainFrameBufferHandle($this) {
    return oktg_GL_api.$getMainFrameBufferHandle0();
}
function oktg_GL_getGlesMajVer($this) {
    return oktg_GL_api.$getGlesMajVer();
}
function oktg_GL_isGLES($this) {
    return oktg_GL_api.$isGLES();
}
function oktg_GL_getSingleCallRequests($this) {
    return oktg_GL_singleCallRequests;
}
function oktg_GL_getRenderCallRequests($this) {
    return oktg_GL_renderCallRequests;
}
function oktg_GL_getMaxAnisotropicFilterLevel($this) {
    return oktg_GL_maxAnisotropicFilterLevel;
}
function oktg_GL_getShader($this) {
    return oktg_GL_shader;
}
function oktg_GL_setShader($this, $value) {
    if (oktg_GL_shader != $value) {
        oktg_GL_shader = $value;
        oktg_GL_api.$glUseProgram0($value);
    }
}
function oktg_GL_setActiveTexture($this, $value) {
    if (oktg_GL_activeTexture != $value) {
        oktg_GL_activeTexture = $value;
        oktg_GL_api.$glActiveTexture0(33984 + $value | 0);
    }
}
function oktg_GL_getArrayBuffer($this) {
    return oktg_GL_arrayBuffer;
}
function oktg_GL_setArrayBuffer($this, $value) {
    if (oktg_GL_arrayBuffer != $value) {
        oktg_GL_arrayBuffer = $value;
        oktg_GL_api.$glBindBuffer(34962, $value);
    }
}
function oktg_GL_setElementArrayBuffer($this, $value) {
    if (oktg_GL_elementArrayBuffer != $value) {
        oktg_GL_elementArrayBuffer = $value;
        oktg_GL_api.$glBindBuffer(34963, $value);
    }
}
function oktg_GL_getTextureUnits($this) {
    return oktg_GL_textureUnitsInternal;
}
function oktg_GL_isCullFaceEnabled0($this) {
    return oktg_GL_isCullFaceEnabled;
}
function oktg_GL_setCullFaceEnabled($this, $value) {
    if (oktg_GL_isCullFaceEnabled != $value) {
        oktg_GL_isCullFaceEnabled = $value;
        if (!$value)
            oktg_GL_api.$glDisable0(2884);
        else
            oktg_GL_api.$glEnable0(2884);
    }
}
function oktg_GL_getCullFaceMode($this) {
    return oktg_GL_cullFaceMode;
}
function oktg_GL_setCullFaceMode($this, $value) {
    if (oktg_GL_cullFaceMode != $value) {
        oktg_GL_cullFaceMode = $value;
        oktg_GL_api.$glCullFace0($value);
    }
}
function oktg_GL_isBlendEnabled0($this) {
    return oktg_GL_isBlendEnabled;
}
function oktg_GL_setBlendEnabled($this, $value) {
    if (oktg_GL_isBlendEnabled != $value) {
        oktg_GL_isBlendEnabled = $value;
        if (!$value)
            oktg_GL_api.$glDisable0(3042);
        else
            oktg_GL_api.$glEnable0(3042);
    }
}
function oktg_GL_setBlendFactorS($this, $value) {
    if (oktg_GL_blendFactorS != $value) {
        oktg_GL_blendFactorS = $value;
        if (oktg_GL_enableGlCall)
            oktg_GL_api.$glBlendFunc0($value, oktg_GL_blendFactorD);
    }
}
function oktg_GL_setBlendFactorD($this, $value) {
    if (oktg_GL_blendFactorD != $value) {
        oktg_GL_blendFactorD = $value;
        if (oktg_GL_enableGlCall)
            oktg_GL_api.$glBlendFunc0(oktg_GL_blendFactorS, $value);
    }
}
function oktg_GL_setDepthTestEnabled($this, $value) {
    if (oktg_GL_isDepthTestEnabled != $value) {
        oktg_GL_isDepthTestEnabled = $value;
        if (!$value)
            oktg_GL_api.$glDisable0(2929);
        else
            oktg_GL_api.$glEnable0(2929);
    }
}
function oktg_GL_grabTextureUnit($this) {
    var $unit;
    $unit = oktg_GL_samplerCounter;
    oktg_GL_samplerCounter = oktg_GL_samplerCounter + 1 | 0;
    if (oktg_GL_samplerCounter >= oktg_GL_getTextureUnits($this).$size())
        oktg_GL_samplerCounter = 0;
    return $unit;
}
function oktg_GL_initTextureUnits($this) {
    var $buffer, var$2, $units, $num, $i;
    a: {
        $buffer = $rt_createIntArray(1);
        var$2 = $buffer.data;
        oktg_GL_glGetIntegerv($this, 35661, $buffer);
        $units = var$2[0];
        if (oktg_GL_textureUnitsInternal.$size() < $units) {
            $num = $units - oktg_GL_textureUnitsInternal.$size() | 0;
            $i = 0;
            while (true) {
                if ($i >= $num)
                    break a;
                oktg_GL_textureUnitsInternal.$add1(jl_Integer_valueOf(0));
                $i = $i + 1 | 0;
            }
        }
        if (oktg_GL_textureUnitsInternal.$size() > $units) {
            $num = oktg_GL_textureUnitsInternal.$size() - $units | 0;
            $i = 0;
            while (true) {
                if ($i >= $num)
                    break a;
                oktg_GL_textureUnitsInternal.$remove(kc_CollectionsKt__CollectionsKt_getLastIndex(oktg_GL_textureUnitsInternal));
                $i = $i + 1 | 0;
            }
        }
    }
}
function oktg_GL_initGL($this) {
    var $buffer, var$2;
    oktg_GL_api.$initGL0();
    oktg_GL_initTextureUnits($this);
    if (oktg_GL_isExtensionSupported($this, $rt_s(605))) {
        $buffer = $rt_createFloatArray(16);
        var$2 = $buffer.data;
        oktg_GL_glGetFloatv($this, 34047, $buffer);
        oktg_GL_maxAnisotropicFilterLevel = var$2[0];
    }
}
function oktg_GL_setSimpleAlphaBlending($this) {
    oktg_GL_glBlendFunc($this, 770, 771);
}
function oktg_GL_call($this, $name, $call) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktg_GL_singleCallRequests.$add1(oktg_GL$Request__init_($name, $call));
}
function oktg_GL_call$default(var$1, var$2, var$3, var$4, var$5) {
    oktg_GL_$callClinit();
    if (var$4 & 1)
        var$2 = $rt_s(6);
    oktg_GL_call(var$1, var$2, var$3);
}
function oktg_GL_render($this, $name, $call) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktg_GL_renderCallRequests.$add1(oktg_GL$Request__init_($name, $call));
}
function oktg_GL_render$default(var$1, var$2, var$3, var$4, var$5) {
    oktg_GL_$callClinit();
    if (var$4 & 1)
        var$2 = $rt_s(6);
    oktg_GL_render(var$1, var$2, var$3);
}
function oktg_GL_doSingleCalls($this) {
    var $$this$traverseSafe$iv, $i$iv, $item$iv, $it;
    $$this$traverseSafe$iv = oktg_GL_singleCallRequests;
    $i$iv = 0;
    while ($i$iv < $$this$traverseSafe$iv.$size()) {
        $item$iv = $$this$traverseSafe$iv.$get1($i$iv);
        if ($item$iv !== null) {
            $it = $item$iv;
            oktg_GL$Request_getCall($it).$invoke6();
            if (oktg_GL$Request_getName($it).$length() <= 0 ? 0 : 1) {
                oktu_LOG_$callClinit();
                oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append12(34).$append(oktg_GL$Request_getName($it)).$append($rt_s(606)).$toString(), null, 2, null);
            }
        }
        $i$iv = $i$iv + 1 | 0;
    }
    oktg_GL_singleCallRequests.$clear();
}
function oktg_GL_doRenderCalls($this) {
    var $$this$traverseSafe$iv, $i$iv, $item$iv, $it;
    $$this$traverseSafe$iv = oktg_GL_renderCallRequests;
    $i$iv = 0;
    while ($i$iv < $$this$traverseSafe$iv.$size()) {
        $item$iv = $$this$traverseSafe$iv.$get1($i$iv);
        if ($item$iv !== null) {
            $it = $item$iv;
            oktg_GL$Request_getCall($it).$invoke6();
        }
        $i$iv = $i$iv + 1 | 0;
    }
}
function oktg_GL_isExtensionSupported($this, $extension) {
    kji_Intrinsics_checkParameterIsNotNull($extension, $rt_s(366));
    return oktg_GL_api.$isExtensionSupported0($extension);
}
function oktg_GL_enableExtension($this, $extension) {
    kji_Intrinsics_checkParameterIsNotNull($extension, $rt_s(366));
    return oktg_GL_api.$enableExtension($extension);
}
function oktg_GL_glDrawBuffers($this, $n, $bufs) {
    kji_Intrinsics_checkParameterIsNotNull($bufs, $rt_s(367));
    oktg_GL_api.$glDrawBuffers0($n, $bufs);
}
function oktg_GL_glDrawArraysInstanced($this, $mode, $first, $count, $instanceCount) {
    oktg_GL_api.$glDrawArraysInstanced0($mode, $first, $count, $instanceCount);
}
function oktg_GL_glDrawElementsInstanced($this, $mode, $count, $type, $indicesOffset, $instanceCount) {
    oktg_GL_api.$glDrawElementsInstanced0($mode, $count, $type, $indicesOffset, $instanceCount);
}
function oktg_GL_glVertexAttribDivisor($this, $index, $divisor) {
    oktg_GL_api.$glVertexAttribDivisor($index, $divisor);
}
function oktg_GL_glBindTexture($this, $target, $texture) {
    var var$3;
    var$3 = oktg_GL_textureUnitsInternal.$get1(oktg_GL_activeTexture);
    if (!(var$3 !== null && var$3.$intValue() == $texture)) {
        oktg_GL_textureUnitsInternal.$set38(oktg_GL_activeTexture, jl_Integer_valueOf($texture));
        oktg_GL_api.$glBindTexture($target, $texture);
    }
}
function oktg_GL_glBlendFunc($this, $sfactor, $dfactor) {
    oktg_GL_enableGlCall = 0;
    oktg_GL_api.$glBlendFunc0($sfactor, $dfactor);
    oktg_GL_setBlendFactorS($this, $sfactor);
    oktg_GL_setBlendFactorD($this, $sfactor);
    oktg_GL_enableGlCall = 1;
}
function oktg_GL_glClear($this, $mask) {
    oktg_GL_api.$glClear($mask);
}
function oktg_GL_glClearColor($this, $red, $green, $blue, $alpha) {
    oktg_GL_api.$glClearColor($red, $green, $blue, $alpha);
}
function oktg_GL_glDeleteTexture($this, $texture) {
    oktg_GL_api.$glDeleteTexture0($texture);
}
function oktg_GL_glDrawArrays($this, $mode, $first, $count) {
    oktg_GL_api.$glDrawArrays0($mode, $first, $count);
}
function oktg_GL_glGenTexture($this) {
    return oktg_GL_api.$glGenTexture();
}
function oktg_GL_glGetIntegerv($this, $pname, $params) {
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    oktg_GL_api.$glGetIntegerv0($pname, $params);
}
function oktg_GL_glTexImage2D0($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
    oktg_GL_api.$glTexImage2D0($target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
}
function oktg_GL_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $image) {
    oktg_GL_api.$glTexImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, $image);
}
function oktg_GL_glTexParameterf($this, $target, $pname, $param) {
    oktg_GL_api.$glTexParameterf($target, $pname, $param);
}
function oktg_GL_glViewport($this, $x, $y, $width, $height) {
    oktg_GL_api.$glViewport0($x, $y, $width, $height);
}
function oktg_GL_glAttachShader($this, $program, $shader) {
    oktg_GL_api.$glAttachShader0($program, $shader);
}
function oktg_GL_glBindBuffer($this, $target, $buffer) {
    a: {
        switch ($target) {
            case 34962:
                break;
            case 34963:
                oktg_GL_setElementArrayBuffer($this, $buffer);
                break a;
            default:
                oktg_GL_api.$glBindBuffer($target, $buffer);
                break a;
        }
        oktg_GL_setArrayBuffer($this, $buffer);
    }
}
function oktg_GL_glBindFramebuffer($this, $target, $framebuffer) {
    oktg_GL_api.$glBindFramebuffer0($target, $framebuffer);
}
function oktg_GL_glBindRenderbuffer($this, $target, $renderbuffer) {
    oktg_GL_api.$glBindRenderbuffer0($target, $renderbuffer);
}
function oktg_GL_glBufferData($this, $target, $size, $data, $usage) {
    oktg_GL_api.$glBufferData($target, $size, $data, $usage);
}
function oktg_GL_glCheckFramebufferStatus($this, $target) {
    return oktg_GL_api.$glCheckFramebufferStatus0($target);
}
function oktg_GL_glCompileShader($this, $shader) {
    oktg_GL_api.$glCompileShader0($shader);
}
function oktg_GL_glCreateProgram($this) {
    return oktg_GL_api.$glCreateProgram0();
}
function oktg_GL_glCreateShader($this, $type) {
    return oktg_GL_api.$glCreateShader0($type);
}
function oktg_GL_glDeleteFramebuffer($this, $framebuffer) {
    oktg_GL_api.$glDeleteFramebuffer0($framebuffer);
}
function oktg_GL_glDeleteProgram($this, $program) {
    oktg_GL_api.$glDeleteProgram0($program);
}
function oktg_GL_glDeleteRenderbuffer($this, $renderbuffer) {
    oktg_GL_api.$glDeleteRenderbuffer0($renderbuffer);
}
function oktg_GL_glDeleteShader($this, $shader) {
    oktg_GL_api.$glDeleteShader0($shader);
}
function oktg_GL_glDetachShader($this, $program, $shader) {
    oktg_GL_api.$glDetachShader0($program, $shader);
}
function oktg_GL_glDrawElements($this, $mode, $count, $type, $indices) {
    oktg_GL_api.$glDrawElements0($mode, $count, $type, $indices);
}
function oktg_GL_glEnableVertexAttribArray($this, $index) {
    oktg_GL_api.$glEnableVertexAttribArray($index);
}
function oktg_GL_glFramebufferRenderbuffer($this, $target, $attachment, $renderbuffertarget, $renderbuffer) {
    oktg_GL_api.$glFramebufferRenderbuffer0($target, $attachment, $renderbuffertarget, $renderbuffer);
}
function oktg_GL_glFramebufferTexture2D($this, $target, $attachment, $textarget, $texture, $level) {
    oktg_GL_api.$glFramebufferTexture2D0($target, $attachment, $textarget, $texture, $level);
}
function oktg_GL_glGenBuffer($this) {
    return oktg_GL_api.$glGenBuffer();
}
function oktg_GL_glGenerateMipmap($this, $target) {
    oktg_GL_api.$glGenerateMipmap0($target);
}
function oktg_GL_glGenFramebuffer($this) {
    return oktg_GL_api.$glGenFramebuffer0();
}
function oktg_GL_glGenRenderbuffer($this) {
    return oktg_GL_api.$glGenRenderbuffer0();
}
function oktg_GL_glGetActiveAttrib($this, $program, $index, $size, $type) {
    kji_Intrinsics_checkParameterIsNotNull($size, $rt_s(369));
    kji_Intrinsics_checkParameterIsNotNull($type, $rt_s(370));
    return oktg_GL_api.$glGetActiveAttrib0($program, $index, $size, $type);
}
function oktg_GL_glGetActiveUniform($this, $program, $index, $size, $type) {
    kji_Intrinsics_checkParameterIsNotNull($size, $rt_s(369));
    kji_Intrinsics_checkParameterIsNotNull($type, $rt_s(370));
    return oktg_GL_api.$glGetActiveUniform0($program, $index, $size, $type);
}
function oktg_GL_glGetAttribLocation($this, $program, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    return oktg_GL_api.$glGetAttribLocation0($program, $name);
}
function oktg_GL_glGetFloatv($this, $pname, $params) {
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    oktg_GL_api.$glGetFloatv0($pname, $params);
}
function oktg_GL_glGetProgramiv($this, $program, $pname, $params) {
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    oktg_GL_api.$glGetProgramiv0($program, $pname, $params);
}
function oktg_GL_glGetProgramInfoLog($this, $program) {
    return oktg_GL_api.$glGetProgramInfoLog0($program);
}
function oktg_GL_glGetShaderiv($this, $shader, $pname, $params) {
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    oktg_GL_api.$glGetShaderiv0($shader, $pname, $params);
}
function oktg_GL_glGetShaderInfoLog($this, $shader) {
    return oktg_GL_api.$glGetShaderInfoLog0($shader);
}
function oktg_GL_glGetUniformLocation($this, $program, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    return oktg_GL_api.$glGetUniformLocation0($program, $name);
}
function oktg_GL_glLinkProgram($this, $program) {
    oktg_GL_api.$glLinkProgram0($program);
}
function oktg_GL_glRenderbufferStorage($this, $target, $internalformat, $width, $height) {
    oktg_GL_api.$glRenderbufferStorage0($target, $internalformat, $width, $height);
}
function oktg_GL_glShaderSource($this, $shader, $string) {
    kji_Intrinsics_checkParameterIsNotNull($string, $rt_s(371));
    oktg_GL_api.$glShaderSource0($shader, $string);
}
function oktg_GL_glTexParameteri($this, $target, $pname, $param) {
    oktg_GL_api.$glTexParameteri($target, $pname, $param);
}
function oktg_GL_glUniform1f($this, $location, $x) {
    oktg_GL_api.$glUniform1f0($location, $x);
}
function oktg_GL_glUniform1i($this, $location, $x) {
    oktg_GL_api.$glUniform1i0($location, $x);
}
function oktg_GL_glUniform2f($this, $location, $x, $y) {
    oktg_GL_api.$glUniform2f0($location, $x, $y);
}
function oktg_GL_glUniform3f($this, $location, $x, $y, $z) {
    oktg_GL_api.$glUniform3f0($location, $x, $y, $z);
}
function oktg_GL_glUniform3fv($this, $location, $count, $v, $offset) {
    kji_Intrinsics_checkParameterIsNotNull($v, $rt_s(372));
    oktg_GL_api.$glUniform3fv0($location, $count, $v, $offset);
}
function oktg_GL_glUniform4f($this, $location, $x, $y, $z, $w) {
    oktg_GL_api.$glUniform4f0($location, $x, $y, $z, $w);
}
function oktg_GL_glUniformMatrix4fv($this, $location, $count, $transpose, $value, $offset) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    oktg_GL_api.$glUniformMatrix4fv0($location, $count, $transpose, $value, $offset);
}
function oktg_GL_glUseProgram($this, $program) {
    oktg_GL_setShader($this, $program);
}
function oktg_GL_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0) {
    oktg_GL_api.$glVertexAttribPointer($indx, $size, $type, $normalized, $stride, $ptr_0);
}
function oktg_GL__init_0($this) {
    oktg_GL_$callClinit();
    jl_Object__init_0($this);
}
function oktg_GL__clinit_() {
    var var$1, $i;
    oktg_GL_INSTANCE = oktg_GL__init_();
    oktg_GL_api = oktg_GL$api$1__init_();
    oktg_GL_singleCallRequests = ju_ArrayList__init_();
    oktg_GL_renderCallRequests = ju_ArrayList__init_();
    oktg_GL_maxAnisotropicFilterLevel = 1.0;
    var$1 = ju_ArrayList__init_1(16);
    $i = 0;
    while ($i < 16) {
        var$1.$add1(jl_Integer_valueOf(0));
        $i = $i + 1 | 0;
    }
    oktg_GL_textureUnitsInternal = var$1;
    oktg_GL_cullFaceMode = 1029;
    oktg_GL_blendFactorS = 1;
    oktg_GL_depthFunc = 513;
    oktg_GL_isDepthMaskEnabled = 1;
}
function oktts_CascadedShadowMappingBaseTest$testMain$1$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$058 = null;
    a.$$i = 0;
}
function oktts_CascadedShadowMappingBaseTest$testMain$1$1__init_(var_0, var_1) {
    var var_2 = new oktts_CascadedShadowMappingBaseTest$testMain$1$1();
    oktts_CascadedShadowMappingBaseTest$testMain$1$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktts_CascadedShadowMappingBaseTest$testMain$1$1_invoke(var$0, var$1) {
    oktts_CascadedShadowMappingBaseTest$testMain$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktts_CascadedShadowMappingBaseTest$testMain$1$1_invoke0($this, $$this$render) {
    var $shader, var$3, var$4, $xi, $zi;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktg_GL_setCullFaceMode(oktg_GL_INSTANCE, 1028);
    $shader = $this.$this$058.$$depthRenderShader;
    $shader.$bind();
    $shader.$set12($rt_s(607), oktts_CascadedShadowMappingBaseTest_getLightProj($this.$this$058.$this$059).data[$this.$$i]);
    $shader.$set39($rt_s(608), 0.0, 0.0, 0.0);
    var$3 = $this.$this$058.$$plane;
    var$4 = $shader;
    oktm_IMesh$DefaultImpls_render$default(var$3, var$4, 0, 0, 0, 0, 30, null);
    $xi = $this.$this$058.$$cubesStartX;
    while ($xi < $this.$this$058.$$cubesEndX) {
        $zi = $this.$this$058.$$cubesStartZ;
        while ($zi < $this.$this$058.$$cubesEndZ) {
            $shader.$set39($rt_s(608), $xi, $this.$this$058.$$cubesY, $zi);
            oktm_IMesh$DefaultImpls_render$default($this.$this$058.$$cube0, var$4, 0, 0, 0, 0, 30, null);
            $zi = $zi + $this.$this$058.$$cubesStepZ;
        }
        $xi = $xi + $this.$this$058.$$cubesStepX;
    }
    oktg_GL_setCullFaceMode(oktg_GL_INSTANCE, 1029);
}
function oktts_CascadedShadowMappingBaseTest$testMain$1$1__init_0(var$0, var$1, var$2) {
    var$0.$this$058 = var$1;
    var$0.$$i = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function kjf_Function18() {
}
function kjf_Function19() {
}
function kc_ArraysUtilJVM() {
    jl_Object.call(this);
}
function kc_ArraysUtilJVM__init_() {
    var var_0 = new kc_ArraysUtilJVM();
    kc_ArraysUtilJVM__init_0(var_0);
    return var_0;
}
function kc_ArraysUtilJVM__init_0($this) {
    jl_Object__init_0($this);
}
function kc_ArraysUtilJVM_asList($array) {
    return ju_Arrays_asList($array);
}
function oktgg_GLTFBuffer() {
    var a = this; jl_Object.call(a);
    a.$gltf3 = null;
    a.$elementIndex3 = 0;
    a.$uri0 = null;
    a.$bytes1 = null;
    a.$byteLength = 0;
    a.$name19 = null;
}
function oktgg_GLTFBuffer__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktgg_GLTFBuffer();
    oktgg_GLTFBuffer__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktgg_GLTFBuffer__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new oktgg_GLTFBuffer();
    oktgg_GLTFBuffer__init_2(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function oktgg_GLTFBuffer_read($this, $json) {
    var var$2, $file, $$this$toTypedArray$iv, var$5, $headerBody, $body;
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $json.$string($rt_s(18), oktgg_GLTFBuffer$read$1__init_($this));
    $json.$int($rt_s(609), oktgg_GLTFBuffer$read$2__init_($this));
    oktd_DATA_$callClinit();
    $this.$bytes1 = oktd_DATA_bytes(oktd_DATA_INSTANCE, $this.$byteLength);
    var$2 = $this.$bytes1;
    oktd_DataByteOrder_$callClinit();
    var$2.$setOrder(oktd_DataByteOrder_LittleEndian);
    if (!kt_StringsKt__StringsJVMKt_startsWith$default($this.$uri0, $rt_s(610), 0, 2, null)) {
        $file = oktgg_GLTFBuffer_getGltf($this).$getDirectory().$child(oktd_DATA_decodeURI(oktd_DATA_INSTANCE, $this.$uri0));
        $file.$readBytes(oktgg_GLTFBuffer$read$3__init_($this));
    } else {
        var$2 = $this.$uri0;
        $$this$toTypedArray$iv = kt_Regex_split(kt_Regex__init_1($rt_s(396)), var$2, 2);
        var$5 = $$this$toTypedArray$iv.$toArray0($rt_createArray(jl_String, 0));
        if (var$5 === null)
            $rt_throw(k_TypeCastException__init_($rt_s(611)));
        $headerBody = var$5;
        var$5 = $headerBody.data;
        $body = var$5[1];
        oktd_DATA_decodeBase64(oktd_DATA_INSTANCE, $body, $this.$bytes1);
    }
}
function oktgg_GLTFBuffer_getGltf($this) {
    return $this.$gltf3;
}
function oktgg_GLTFBuffer_getElementIndex($this) {
    return $this.$elementIndex3;
}
function oktgg_GLTFBuffer_getUri($this) {
    return $this.$uri0;
}
function oktgg_GLTFBuffer_setUri($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$uri0 = $_set___;
}
function oktgg_GLTFBuffer_getBytes($this) {
    return $this.$bytes1;
}
function oktgg_GLTFBuffer_setByteLength($this, $_set___) {
    $this.$byteLength = $_set___;
}
function oktgg_GLTFBuffer__init_0($this, $gltf, $elementIndex, $uri, $bytes, $byteLength, $name) {
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($uri, $rt_s(18));
    kji_Intrinsics_checkParameterIsNotNull($bytes, $rt_s(8));
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    jl_Object__init_0($this);
    $this.$gltf3 = $gltf;
    $this.$elementIndex3 = $elementIndex;
    $this.$uri0 = $uri;
    $this.$bytes1 = $bytes;
    $this.$byteLength = $byteLength;
    $this.$name19 = $name;
    oktgg_GLTFBuffer_getGltf($this).$getBuffers0().$add1($this);
}
function oktgg_GLTFBuffer__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    if (var$7 & 4)
        var$3 = $rt_s(6);
    if (var$7 & 8) {
        oktd_DATA_$callClinit();
        var$4 = oktd_DATA_bytes(oktd_DATA_INSTANCE, 0);
    }
    if (var$7 & 16)
        var$5 = var$4.$getSize();
    if (var$7 & 32)
        var$6 = $rt_s(6);
    oktgg_GLTFBuffer__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6);
}
function okta_IMusic() {
}
function kjf_Function14() {
}
function kjf_Function15() {
}
function oktj_IJsonArrayIO() {
}
function kjf_Function16() {
}
function oktgg_GLTFNode$read$3$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$060 = null;
    a.$$i0 = null;
}
function oktgg_GLTFNode$read$3$1__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFNode$read$3$1();
    oktgg_GLTFNode$read$3$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFNode$read$3$1_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$3$1_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$3$1_invoke0($this, $it) {
    var var$2;
    oktgg_GLTFNode_getNode($this.$this$060.$this$061).$getWorldMatrix().$getValues().data[$this.$$i0.$element] = $it;
    var$2 = $this.$$i0;
    var$2.$element = var$2.$element + 1 | 0;
}
function oktgg_GLTFNode$read$3$1__init_0(var$0, var$1, var$2) {
    var$0.$this$060 = var$1;
    var$0.$$i0 = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function kjf_Function17() {
}
function kc_ArraysKt___ArraysKt() {
    kc_ArraysKt___ArraysJvmKt.call(this);
}
function kc_ArraysKt___ArraysKt__init_() {
    var var_0 = new kc_ArraysKt___ArraysKt();
    kc_ArraysKt___ArraysKt__init_0(var_0);
    return var_0;
}
function kc_ArraysKt___ArraysKt_contains($$this$contains, $element) {
    kji_Intrinsics_checkParameterIsNotNull($$this$contains, $rt_s(612));
    return kc_ArraysKt___ArraysKt_indexOf($$this$contains, $element) < 0 ? 0 : 1;
}
function kc_ArraysKt___ArraysKt_indexOf($$this$indexOf, $element) {
    var var$3, $index, var$5;
    a: {
        kji_Intrinsics_checkParameterIsNotNull($$this$indexOf, $rt_s(426));
        if ($element === null) {
            var$3 = $$this$indexOf.data;
            $index = 0;
            var$5 = var$3.length;
            while (true) {
                if ($index >= var$5)
                    break a;
                if (var$3[$index] === null)
                    break;
                $index = $index + 1 | 0;
            }
            return $index;
        }
        var$3 = $$this$indexOf.data;
        $index = 0;
        var$5 = var$3.length;
        while (true) {
            if ($index >= var$5)
                break a;
            if (kji_Intrinsics_areEqual($element, var$3[$index]))
                break;
            $index = $index + 1 | 0;
        }
        return $index;
    }
    return (-1);
}
function kc_ArraysKt___ArraysKt_single($$this$single) {
    var var$2, var$3;
    var$2 = $$this$single.data;
    kji_Intrinsics_checkParameterIsNotNull($$this$single, $rt_s(613));
    switch (var$2.length) {
        case 0:
            $rt_throw(ju_NoSuchElementException__init_0($rt_s(614)));
        case 1:
            break;
        default:
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(615)));
    }
    var$3 = var$2[0];
    return var$3;
}
function kc_ArraysKt___ArraysKt__init_0(var$0) {
    kc_ArraysKt___ArraysJvmKt__init_0(var$0);
}
function kc_ArraysKt() {
    kc_ArraysKt___ArraysKt.call(this);
}
function kc_ArraysKt__init_() {
    var var_0 = new kc_ArraysKt();
    kc_ArraysKt__init_0(var_0);
    return var_0;
}
function kc_ArraysKt__init_0(var$0) {
    kc_ArraysKt___ArraysKt__init_0(var$0);
}
function kjf_Function10() {
}
function kjf_Function11() {
}
function kjf_Function12() {
}
function kjf_Function13() {
}
function otcit_DoubleAnalyzer() {
    jl_Object.call(this);
}
var otcit_DoubleAnalyzer_mantissa10Table = null;
var otcit_DoubleAnalyzer_exp10Table = null;
function otcit_DoubleAnalyzer_$callClinit() {
    otcit_DoubleAnalyzer_$callClinit = $rt_eraseClinit(otcit_DoubleAnalyzer);
    otcit_DoubleAnalyzer__clinit_();
}
function otcit_DoubleAnalyzer__init_() {
    var var_0 = new otcit_DoubleAnalyzer();
    otcit_DoubleAnalyzer__init_0(var_0);
    return var_0;
}
function otcit_DoubleAnalyzer__init_0($this) {
    otcit_DoubleAnalyzer_$callClinit();
    jl_Object__init_0($this);
}
function otcit_DoubleAnalyzer_analyze($d, $result) {
    var $bits, $mantissa, $exponent, $errorShift, var$7, $decExponent, $binExponentCorrection, $mantissaShift, $decMantissa, var$12, $error, $upError, $downError, $lowerPos, $upperPos;
    otcit_DoubleAnalyzer_$callClinit();
    $bits = $rt_doubleToLongBits($d);
    $result.$sign0 = Long_eq(Long_and($bits, new Long(0, 2147483648)), Long_ZERO) ? 0 : 1;
    $mantissa = Long_and($bits, new Long(4294967295, 1048575));
    $exponent = Long_shr($bits, 52).lo & 2047;
    if (Long_eq($mantissa, Long_ZERO) && !$exponent) {
        $result.$mantissa0 = Long_ZERO;
        $result.$exponent0 = 0;
        return;
    }
    $errorShift = 0;
    if ($exponent)
        var$7 = Long_or($mantissa, new Long(0, 1048576));
    else {
        var$7 = Long_shl($mantissa, 1);
        while (Long_eq(Long_and(var$7, new Long(0, 1048576)), Long_ZERO)) {
            var$7 = Long_shl(var$7, 1);
            $exponent = $exponent + (-1) | 0;
            $errorShift = $errorShift + 1 | 0;
        }
    }
    $decExponent = ju_Arrays_binarySearch(otcit_DoubleAnalyzer_exp10Table, $exponent);
    if ($decExponent < 0)
        $decExponent =  -$decExponent - 2 | 0;
    $binExponentCorrection = $exponent - otcit_DoubleAnalyzer_exp10Table.data[$decExponent] | 0;
    $mantissaShift = 12 + $binExponentCorrection | 0;
    $decMantissa = otcit_DoubleAnalyzer_mulAndShiftRight(var$7, otcit_DoubleAnalyzer_mantissa10Table.data[$decExponent], $mantissaShift);
    if (Long_ge($decMantissa, new Long(2808348672, 232830643))) {
        $decExponent = $decExponent + 1 | 0;
        var$12 = $exponent - otcit_DoubleAnalyzer_exp10Table.data[$decExponent] | 0;
        $mantissaShift = 12 + var$12 | 0;
        $decMantissa = otcit_DoubleAnalyzer_mulAndShiftRight(var$7, otcit_DoubleAnalyzer_mantissa10Table.data[$decExponent], $mantissaShift);
    }
    $error = Long_shru(otcit_DoubleAnalyzer_mantissa10Table.data[$decExponent], (63 - $mantissaShift | 0) - $errorShift | 0);
    $upError = Long_shr(Long_add($error, Long_fromInt(1)), 1);
    $downError = Long_shr($error, 1);
    if (Long_eq(var$7, new Long(0, 1048576)))
        $downError = Long_shr($downError, 2);
    $lowerPos = otcit_DoubleAnalyzer_findLowerDistanceToZero($decMantissa, $downError);
    $upperPos = otcit_DoubleAnalyzer_findUpperDistanceToZero($decMantissa, $upError);
    var$12 = Long_compare($lowerPos, $upperPos);
    var$7 = var$12 > 0 ? Long_mul(Long_div($decMantissa, $lowerPos), $lowerPos) : var$12 < 0 ? Long_add(Long_mul(Long_div($decMantissa, $upperPos), $upperPos), $upperPos) : Long_mul(Long_div(Long_add($decMantissa, Long_div($upperPos, Long_fromInt(2))), $upperPos), $upperPos);
    if (Long_ge(var$7, new Long(2808348672, 232830643))) {
        $decExponent = $decExponent + 1 | 0;
        var$7 = Long_div(var$7, Long_fromInt(10));
    } else if (Long_lt(var$7, new Long(1569325056, 23283064))) {
        $decExponent = $decExponent + (-1) | 0;
        var$7 = Long_mul(var$7, Long_fromInt(10));
    }
    $result.$mantissa0 = var$7;
    $result.$exponent0 = $decExponent - 330 | 0;
}
function otcit_DoubleAnalyzer_findLowerDistanceToZero($mantissa, $error) {
    var $pos, $mantissaRight;
    otcit_DoubleAnalyzer_$callClinit();
    $pos = Long_fromInt(10);
    while (Long_le($pos, $error)) {
        $pos = Long_mul($pos, Long_fromInt(10));
    }
    $mantissaRight = Long_rem($mantissa, $pos);
    if (Long_ge($mantissaRight, Long_div($error, Long_fromInt(2))))
        $pos = Long_div($pos, Long_fromInt(10));
    return $pos;
}
function otcit_DoubleAnalyzer_findUpperDistanceToZero($mantissa, $error) {
    var $pos, $mantissaRight;
    otcit_DoubleAnalyzer_$callClinit();
    $pos = Long_fromInt(1);
    while (Long_le($pos, $error)) {
        $pos = Long_mul($pos, Long_fromInt(10));
    }
    $mantissaRight = Long_rem($mantissa, $pos);
    if (Long_gt(Long_sub($pos, $mantissaRight), Long_div($error, Long_fromInt(2))))
        $pos = Long_div($pos, Long_fromInt(10));
    return $pos;
}
function otcit_DoubleAnalyzer_mulAndShiftRight($a, $b, $shift) {
    var $a1, $a2, $a3, $a4, $b1, $b2, $b3, $b4, $cm, $c0, $c1, $c2, $c3, $c, var$18;
    otcit_DoubleAnalyzer_$callClinit();
    $a1 = Long_and($a, Long_fromInt(65535));
    $a2 = Long_and(Long_shru($a, 16), Long_fromInt(65535));
    $a3 = Long_and(Long_shru($a, 32), Long_fromInt(65535));
    $a4 = Long_and(Long_shru($a, 48), Long_fromInt(65535));
    $b1 = Long_and($b, Long_fromInt(65535));
    $b2 = Long_and(Long_shru($b, 16), Long_fromInt(65535));
    $b3 = Long_and(Long_shru($b, 32), Long_fromInt(65535));
    $b4 = Long_and(Long_shru($b, 48), Long_fromInt(65535));
    $cm = Long_add(Long_add(Long_mul($b3, $a1), Long_mul($b2, $a2)), Long_mul($b1, $a3));
    $c0 = Long_add(Long_add(Long_add(Long_mul($b4, $a1), Long_mul($b3, $a2)), Long_mul($b2, $a3)), Long_mul($b1, $a4));
    $c1 = Long_add(Long_add(Long_mul($b4, $a2), Long_mul($b3, $a3)), Long_mul($b2, $a4));
    $c2 = Long_add(Long_mul($b4, $a3), Long_mul($b3, $a4));
    $c3 = Long_mul($b4, $a4);
    $c = Long_add(Long_add(Long_shl($c3, 32 + $shift | 0), Long_shl($c2, 16 + $shift | 0)), Long_shl($c1, $shift));
    var$18 = $shift > 16 ? Long_add($c, Long_shl($c0, $shift - 16 | 0)) : Long_add($c, Long_shru($c0, 16 - $shift | 0));
    var$18 = Long_add(var$18, Long_shru($cm, 32 - $shift | 0));
    return var$18;
}
function otcit_DoubleAnalyzer__clinit_() {
    var $decimalMantissaOne, $exponent, $i, var$4, var$5, var$6, var$7, $maxMantissa, var$9, $shift, $shiftedOffPart;
    otcit_DoubleAnalyzer_mantissa10Table = $rt_createLongArray(660);
    otcit_DoubleAnalyzer_exp10Table = $rt_createIntArray(660);
    $decimalMantissaOne = new Long(991952896, 1862645149);
    $exponent = 1023;
    $i = 0;
    var$4 = $decimalMantissaOne;
    while ($i < 330) {
        var$5 = otcit_DoubleAnalyzer_mantissa10Table.data;
        var$6 = $i + 330 | 0;
        var$5[var$6] = jl_Long_divideUnsigned(var$4, Long_fromInt(80));
        otcit_DoubleAnalyzer_exp10Table.data[var$6] = $exponent;
        var$4 = jl_Long_divideUnsigned(var$4, Long_fromInt(10));
        var$7 = jl_Long_remainderUnsigned(var$4, Long_fromInt(10));
        while (Long_le(var$4, $decimalMantissaOne) && Long_eq(Long_and(var$4, new Long(0, 2147483648)), Long_ZERO)) {
            var$4 = Long_shl(var$4, 1);
            $exponent = $exponent + 1 | 0;
            var$7 = Long_shl(var$7, 1);
        }
        var$4 = Long_add(var$4, Long_div(var$7, Long_fromInt(10)));
        $i = $i + 1 | 0;
    }
    $maxMantissa = new Long(3435973836, 214748364);
    var$9 = 1023;
    $i = 0;
    while ($i < 330) {
        $shift = 0;
        var$4 = $decimalMantissaOne;
        while (Long_gt(var$4, $maxMantissa)) {
            var$4 = Long_shr(var$4, 1);
            $shift = $shift + 1 | 0;
            var$9 = var$9 + (-1) | 0;
        }
        var$7 = Long_mul(var$4, Long_fromInt(10));
        if ($shift <= 0)
            $decimalMantissaOne = var$7;
        else {
            $shiftedOffPart = Long_and($decimalMantissaOne, Long_fromInt((1 << $shift) - 1 | 0));
            $decimalMantissaOne = Long_add(var$7, Long_shr(Long_mul($shiftedOffPart, Long_fromInt(10)), $shift));
        }
        var$5 = otcit_DoubleAnalyzer_mantissa10Table.data;
        var$6 = (330 - $i | 0) - 1 | 0;
        var$5[var$6] = jl_Long_divideUnsigned($decimalMantissaOne, Long_fromInt(80));
        otcit_DoubleAnalyzer_exp10Table.data[var$6] = var$9;
        $i = $i + 1 | 0;
    }
}
function jur_EOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter = 0;
}
function jur_EOLSet__init_(var_0) {
    var var_1 = new jur_EOLSet();
    jur_EOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_EOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_0($this);
    $this.$consCounter = $counter;
}
function jur_EOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, var$5, var$6, $ch;
    $rightBound = !$matchResult.$hasAnchoringBounds() ? $testString.$length() : $matchResult.$getRightBound();
    if ($strIndex >= $rightBound) {
        $matchResult.$setConsumed($this.$consCounter, 0);
        return $this.$next0.$matches($strIndex, $testString, $matchResult);
    }
    var$5 = $rightBound - $strIndex | 0;
    if (var$5 == 2 && $testString.$charAt($strIndex) == 13) {
        var$6 = $strIndex + 1 | 0;
        if ($testString.$charAt(var$6) == 10) {
            $matchResult.$setConsumed($this.$consCounter, 0);
            return $this.$next0.$matches($strIndex, $testString, $matchResult);
        }
    }
    a: {
        if (var$5 == 1) {
            $ch = $testString.$charAt($strIndex);
            if ($ch == 10)
                break a;
            if ($ch == 13)
                break a;
            if ($ch == 133)
                break a;
            if (($ch | 1) == 8233)
                break a;
        }
        return (-1);
    }
    $matchResult.$setConsumed($this.$consCounter, 0);
    return $this.$next0.$matches($strIndex, $testString, $matchResult);
}
function jur_EOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter, (-1));
    return $res;
}
function jur_Lexer() {
    var a = this; jl_Object.call(a);
    a.$pattern = null;
    a.$flags0 = 0;
    a.$mode1 = 0;
    a.$savedMode = 0;
    a.$lookBack = 0;
    a.$ch = 0;
    a.$lookAhead = 0;
    a.$patternFullLength = 0;
    a.$curST = null;
    a.$lookAheadST = null;
    a.$index3 = 0;
    a.$prevNW = 0;
    a.$curToc = 0;
    a.$lookAheadToc = 0;
    a.$orig = null;
}
var jur_Lexer_decompTable = null;
var jur_Lexer_singleDecompTable = null;
var jur_Lexer_singleDecompTableSize = 0;
function jur_Lexer__init_(var_0, var_1) {
    var var_2 = new jur_Lexer();
    jur_Lexer__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Lexer__init_0($this, $pattern, $flags) {
    jl_Object__init_0($this);
    $this.$mode1 = 1;
    $this.$orig = $pattern;
    if (($flags & 16) > 0)
        $pattern = jur_Pattern_quote($pattern);
    else if (($flags & 128) > 0)
        $pattern = jur_Lexer_normalize($pattern);
    $this.$pattern = $rt_createCharArray($pattern.$length() + 2 | 0);
    jl_System_arraycopy($pattern.$toCharArray(), 0, $this.$pattern, 0, $pattern.$length());
    $this.$pattern.data[$this.$pattern.data.length - 1 | 0] = 0;
    $this.$pattern.data[$this.$pattern.data.length - 2 | 0] = 0;
    $this.$patternFullLength = $this.$pattern.data.length;
    $this.$flags0 = $flags;
    jur_Lexer_movePointer($this);
    jur_Lexer_movePointer($this);
}
function jur_Lexer_peek($this) {
    return $this.$ch;
}
function jur_Lexer_setMode($this, $mode) {
    if ($mode > 0 && $mode < 3)
        $this.$mode1 = $mode;
    if ($mode == 1)
        jur_Lexer_reread($this);
}
function jur_Lexer_restoreFlags($this, $flags) {
    $this.$flags0 = $flags;
    $this.$lookAhead = $this.$ch;
    $this.$lookAheadST = $this.$curST;
    $this.$index3 = $this.$curToc + 1 | 0;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
}
function jur_Lexer_peekSpecial($this) {
    return $this.$curST;
}
function jur_Lexer_isSpecial($this) {
    return $this.$curST === null ? 0 : 1;
}
function jur_Lexer_isNextSpecial($this) {
    return $this.$lookAheadST === null ? 0 : 1;
}
function jur_Lexer_next($this) {
    jur_Lexer_movePointer($this);
    return $this.$lookBack;
}
function jur_Lexer_nextSpecial($this) {
    var $res;
    $res = $this.$curST;
    jur_Lexer_movePointer($this);
    return $res;
}
function jur_Lexer_lookAhead($this) {
    return $this.$lookAhead;
}
function jur_Lexer_back($this) {
    return $this.$lookBack;
}
function jur_Lexer_normalize($input) {
    return $input;
}
function jur_Lexer_reread($this) {
    $this.$lookAhead = $this.$ch;
    $this.$lookAheadST = $this.$curST;
    $this.$index3 = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
}
function jur_Lexer_movePointer($this) {
    var $reread, $nonCap, $behind, $mod, var$5, $cs, $negative, $$je;
    $this.$lookBack = $this.$ch;
    $this.$ch = $this.$lookAhead;
    $this.$curST = $this.$lookAheadST;
    $this.$curToc = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$index3;
    while (true) {
        $reread = 0;
        $this.$lookAhead = $this.$index3 >= $this.$pattern.data.length ? 0 : jur_Lexer_nextCodePoint($this);
        $this.$lookAheadST = null;
        if ($this.$mode1 == 4) {
            if ($this.$lookAhead != 92)
                return;
            $this.$lookAhead = $this.$index3 >= $this.$pattern.data.length ? 0 : $this.$pattern.data[jur_Lexer_nextIndex($this)];
            switch ($this.$lookAhead) {
                case 69:
                    break;
                default:
                    $this.$lookAhead = 92;
                    $this.$index3 = $this.$prevNW;
                    return;
            }
            $this.$mode1 = $this.$savedMode;
            $this.$lookAhead = $this.$index3 > ($this.$pattern.data.length - 2 | 0) ? 0 : jur_Lexer_nextCodePoint($this);
        }
        a: {
            if ($this.$lookAhead != 92) {
                if ($this.$mode1 == 1)
                    switch ($this.$lookAhead) {
                        case 36:
                            $this.$lookAhead = (-536870876);
                            break a;
                        case 40:
                            if ($this.$pattern.data[$this.$index3] != 63) {
                                $this.$lookAhead = (-2147483608);
                                break a;
                            }
                            jur_Lexer_nextIndex($this);
                            $nonCap = $this.$pattern.data[$this.$index3];
                            $behind = 0;
                            while (true) {
                                b: {
                                    if ($behind) {
                                        $behind = 0;
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 61:
                                                $this.$lookAhead = (-134217688);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
                                        }
                                        $this.$lookAhead = (-67108824);
                                        jur_Lexer_nextIndex($this);
                                    } else {
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 60:
                                                jur_Lexer_nextIndex($this);
                                                $nonCap = $this.$pattern.data[$this.$index3];
                                                $behind = 1;
                                                break b;
                                            case 61:
                                                $this.$lookAhead = (-536870872);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            case 62:
                                                $this.$lookAhead = (-33554392);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $this.$lookAhead = jur_Lexer_readFlags($this);
                                                if ($this.$lookAhead < 256) {
                                                    $this.$flags0 = $this.$lookAhead;
                                                    $this.$lookAhead = $this.$lookAhead << 16;
                                                    $this.$lookAhead = (-1073741784) | $this.$lookAhead;
                                                    break b;
                                                }
                                                $this.$lookAhead = $this.$lookAhead & 255;
                                                $this.$flags0 = $this.$lookAhead;
                                                $this.$lookAhead = $this.$lookAhead << 16;
                                                $this.$lookAhead = (-16777176) | $this.$lookAhead;
                                                break b;
                                        }
                                        $this.$lookAhead = (-268435416);
                                        jur_Lexer_nextIndex($this);
                                    }
                                }
                                if (!$behind)
                                    break;
                            }
                            break a;
                        case 41:
                            $this.$lookAhead = (-536870871);
                            break a;
                        case 42:
                        case 43:
                        case 63:
                            $mod = $this.$index3 >= $this.$pattern.data.length ? 42 : $this.$pattern.data[$this.$index3];
                            switch ($mod) {
                                case 43:
                                    $this.$lookAhead = $this.$lookAhead | (-2147483648);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                case 63:
                                    $this.$lookAhead = $this.$lookAhead | (-1073741824);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                default:
                            }
                            $this.$lookAhead = $this.$lookAhead | (-536870912);
                            break a;
                        case 46:
                            $this.$lookAhead = (-536870866);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            $this.$setMode(2);
                            break a;
                        case 93:
                            if ($this.$mode1 != 2)
                                break a;
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        case 123:
                            $this.$lookAheadST = jur_Lexer_processQuantifier($this, $this.$lookAhead);
                            break a;
                        case 124:
                            $this.$lookAhead = (-536870788);
                            break a;
                        default:
                    }
                else if ($this.$mode1 == 2)
                    switch ($this.$lookAhead) {
                        case 38:
                            $this.$lookAhead = (-536870874);
                            break a;
                        case 45:
                            $this.$lookAhead = (-536870867);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            break a;
                        case 93:
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        default:
                    }
            } else {
                var$5 = $this.$index3 >= ($this.$pattern.data.length - 2 | 0) ? (-1) : jur_Lexer_nextCodePoint($this);
                c: {
                    $this.$lookAhead = var$5;
                    switch ($this.$lookAhead) {
                        case -1:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 118:
                            break;
                        case 48:
                            $this.$lookAhead = jur_Lexer_readOctals($this);
                            break a;
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                            if ($this.$mode1 != 1)
                                break a;
                            $this.$lookAhead = (-2147483648) | $this.$lookAhead;
                            break a;
                        case 65:
                            $this.$lookAhead = (-2147483583);
                            break a;
                        case 66:
                            $this.$lookAhead = (-2147483582);
                            break a;
                        case 67:
                        case 69:
                        case 70:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 88:
                        case 89:
                        case 103:
                        case 104:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 109:
                        case 111:
                        case 113:
                        case 121:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
                        case 68:
                        case 83:
                        case 87:
                        case 100:
                        case 115:
                        case 119:
                            $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass(jl_String__init_0($this.$pattern, $this.$prevNW, 1), 0);
                            $this.$lookAhead = 0;
                            break a;
                        case 71:
                            $this.$lookAhead = (-2147483577);
                            break a;
                        case 80:
                        case 112:
                            break c;
                        case 81:
                            $this.$savedMode = $this.$mode1;
                            $this.$mode1 = 4;
                            $reread = 1;
                            break a;
                        case 90:
                            $this.$lookAhead = (-2147483558);
                            break a;
                        case 97:
                            $this.$lookAhead = 7;
                            break a;
                        case 98:
                            $this.$lookAhead = (-2147483550);
                            break a;
                        case 99:
                            if ($this.$index3 >= ($this.$pattern.data.length - 2 | 0))
                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
                            $this.$lookAhead = $this.$pattern.data[jur_Lexer_nextIndex($this)] & 31;
                            break a;
                        case 101:
                            $this.$lookAhead = 27;
                            break a;
                        case 102:
                            $this.$lookAhead = 12;
                            break a;
                        case 110:
                            $this.$lookAhead = 10;
                            break a;
                        case 114:
                            $this.$lookAhead = 13;
                            break a;
                        case 116:
                            $this.$lookAhead = 9;
                            break a;
                        case 117:
                            $this.$lookAhead = jur_Lexer_readHex($this, 4);
                            break a;
                        case 120:
                            $this.$lookAhead = jur_Lexer_readHex($this, 2);
                            break a;
                        case 122:
                            $this.$lookAhead = (-2147483526);
                            break a;
                        default:
                    }
                    break a;
                }
                $cs = jur_Lexer_parseCharClassName($this);
                $negative = 0;
                if ($this.$lookAhead == 80)
                    $negative = 1;
                try {
                    $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass($cs, $negative);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ju_MissingResourceException) {
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
                    } else {
                        throw $$e;
                    }
                }
                $this.$lookAhead = 0;
            }
        }
        if ($reread)
            continue;
        else
            break;
    }
}
function jur_Lexer_parseCharClassName($this) {
    var $sb, $ch, $res;
    $sb = jl_StringBuilder__init_0(10);
    if ($this.$index3 < ($this.$pattern.data.length - 2 | 0)) {
        if ($this.$pattern.data[$this.$index3] != 123)
            return jl_StringBuilder__init_().$append($rt_s(616)).$append(jl_String__init_0($this.$pattern, jur_Lexer_nextIndex($this), 1)).$toString();
        jur_Lexer_nextIndex($this);
        $ch = 0;
        a: {
            while ($this.$index3 < ($this.$pattern.data.length - 2 | 0)) {
                $ch = $this.$pattern.data[jur_Lexer_nextIndex($this)];
                if ($ch == 125)
                    break a;
                $sb.$append12($ch);
            }
        }
        if ($ch != 125)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
    }
    if (!$sb.$length())
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
    $res = $sb.$toString();
    if ($res.$length() == 1)
        return jl_StringBuilder__init_().$append($rt_s(616)).$append($res).$toString();
    b: {
        c: {
            if ($res.$length() > 3) {
                if ($res.$startsWith0($rt_s(616)))
                    break c;
                if ($res.$startsWith0($rt_s(617)))
                    break c;
            }
            break b;
        }
        $res = $res.$substring1(2);
    }
    return $res;
}
function jur_Lexer_processQuantifier($this, $ch) {
    var $sb, $min, $max, $mod, $$je;
    $sb = jl_StringBuilder__init_0(4);
    $min = (-1);
    $max = 2147483647;
    a: {
        while (true) {
            if ($this.$index3 >= $this.$pattern.data.length)
                break a;
            $ch = $this.$pattern.data[jur_Lexer_nextIndex($this)];
            if ($ch == 125)
                break a;
            if ($ch == 44 && $min < 0)
                try {
                    $min = jl_Integer_parseInt($sb.$toString(), 10);
                    $sb.$delete(0, $sb.$length());
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                        break;
                    } else {
                        throw $$e;
                    }
                }
            $sb.$append12($ch & 65535);
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
    }
    if ($ch != 125)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
    if ($sb.$length() > 0)
        b: {
            try {
                $max = jl_Integer_parseInt($sb.$toString(), 10);
                if ($min >= 0)
                    break b;
                $min = $max;
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
        }
    else if ($min < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
    if (($min | $max | ($max - $min | 0)) < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
    $mod = $this.$index3 >= $this.$pattern.data.length ? 42 : $this.$pattern.data[$this.$index3];
    c: {
        switch ($mod) {
            case 43:
                $this.$lookAhead = (-2147483525);
                jur_Lexer_nextIndex($this);
                break c;
            case 63:
                $this.$lookAhead = (-1073741701);
                jur_Lexer_nextIndex($this);
                break c;
            default:
        }
        $this.$lookAhead = (-536870789);
    }
    return jur_Quantifier__init_($min, $max);
}
function jur_Lexer_toString($this) {
    return $this.$orig;
}
function jur_Lexer_isEmpty($this) {
    return !$this.$ch && !$this.$lookAhead && $this.$index3 == $this.$patternFullLength && !$this.$isSpecial() ? 1 : 0;
}
function jur_Lexer_isLetter($ch) {
    return $ch < 0 ? 0 : 1;
}
function jur_Lexer_isLetter0($this) {
    return !$this.$isEmpty() && !$this.$isSpecial() && jur_Lexer_isLetter($this.$ch) ? 1 : 0;
}
function jur_Lexer_isHighSurrogate0($this) {
    return $this.$ch <= 56319 && $this.$ch >= 55296 ? 1 : 0;
}
function jur_Lexer_isLowSurrogate0($this) {
    return $this.$ch <= 57343 && $this.$ch >= 56320 ? 1 : 0;
}
function jur_Lexer_isHighSurrogate($ch) {
    return $ch <= 56319 && $ch >= 55296 ? 1 : 0;
}
function jur_Lexer_isLowSurrogate($ch) {
    return $ch <= 57343 && $ch >= 56320 ? 1 : 0;
}
function jur_Lexer_readHex($this, $max) {
    var $st, $length, $i, var$5, $$je;
    $st = jl_StringBuilder__init_0($max);
    $length = $this.$pattern.data.length - 2 | 0;
    $i = 0;
    while (true) {
        var$5 = $rt_compare($i, $max);
        if (var$5 >= 0)
            break;
        if ($this.$index3 >= $length)
            break;
        $st.$append12($this.$pattern.data[jur_Lexer_nextIndex($this)]);
        $i = $i + 1 | 0;
    }
    if (!var$5)
        a: {
            try {
                var$5 = jl_Integer_parseInt($st.$toString(), 16);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$5;
        }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
}
function jur_Lexer_readOctals($this) {
    var $max, $i, $length, $res, var$5;
    $max = 3;
    $i = 1;
    $length = $this.$pattern.data.length - 2 | 0;
    $res = jl_Character_digit($this.$pattern.data[$this.$index3], 8);
    switch ($res) {
        case -1:
            break;
        default:
            if ($res > 3)
                $max = 2;
            jur_Lexer_nextIndex($this);
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if ($this.$index3 >= $length)
                        break a;
                    var$5 = jl_Character_digit($this.$pattern.data[$this.$index3], 8);
                    if (var$5 < 0)
                        break;
                    $res = ($res * 8 | 0) + var$5 | 0;
                    jur_Lexer_nextIndex($this);
                    $i = $i + 1 | 0;
                }
            }
            return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
}
function jur_Lexer_readFlags($this) {
    var $pos, $res, $ch;
    $pos = 1;
    $res = $this.$flags0;
    a: while (true) {
        if ($this.$index3 >= $this.$pattern.data.length)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
        b: {
            c: {
                $ch = $this.$pattern.data[$this.$index3];
                switch ($ch) {
                    case 41:
                        jur_Lexer_nextIndex($this);
                        return $res | 256;
                    case 45:
                        if (!$pos)
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$toString(), $this.$index3));
                        $pos = 0;
                        break b;
                    case 58:
                        break a;
                    case 100:
                        break c;
                    case 105:
                        $res = $pos ? $res | 2 : ($res ^ 2) & $res;
                        break b;
                    case 109:
                        $res = $pos ? $res | 8 : ($res ^ 8) & $res;
                        break b;
                    case 115:
                        $res = $pos ? $res | 32 : ($res ^ 32) & $res;
                        break b;
                    case 117:
                        $res = $pos ? $res | 64 : ($res ^ 64) & $res;
                        break b;
                    case 120:
                        $res = $pos ? $res | 4 : ($res ^ 4) & $res;
                        break b;
                    default:
                }
                break b;
            }
            $res = $pos ? $res | 1 : ($res ^ 1) & $res;
        }
        jur_Lexer_nextIndex($this);
    }
    jur_Lexer_nextIndex($this);
    return $res;
}
function jur_Lexer_nextIndex($this) {
    $this.$prevNW = $this.$index3;
    if ($this.$flags0 & 4)
        jur_Lexer_skipComments($this);
    else
        $this.$index3 = $this.$index3 + 1 | 0;
    return $this.$prevNW;
}
function jur_Lexer_skipComments($this) {
    var $length;
    $length = $this.$pattern.data.length - 2 | 0;
    $this.$index3 = $this.$index3 + 1 | 0;
    a: while (true) {
        if ($this.$index3 < $length && jl_Character_isWhitespace($this.$pattern.data[$this.$index3])) {
            $this.$index3 = $this.$index3 + 1 | 0;
            continue;
        }
        if ($this.$index3 >= $length)
            break;
        if ($this.$pattern.data[$this.$index3] != 35)
            break;
        $this.$index3 = $this.$index3 + 1 | 0;
        while (true) {
            if ($this.$index3 >= $length)
                continue a;
            if (jur_Lexer_isLineSeparator($this, $this.$pattern.data[$this.$index3]))
                continue a;
            $this.$index3 = $this.$index3 + 1 | 0;
        }
    }
    return $this.$index3;
}
function jur_Lexer_isLineSeparator($this, $ch) {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
}
function jur_Lexer_getDecomposition($ch) {
    return jur_Lexer_decompTable.$get28($ch);
}
function jur_Lexer_getHangulDecomposition($ch) {
    var $sIndex, $l, $v, $t, $decomp, var$7, var$8;
    $sIndex = $ch - 44032 | 0;
    if ($sIndex >= 0 && $sIndex < 11172) {
        $l = 4352 + ($sIndex / 588 | 0) | 0;
        $v = 4449 + (($sIndex % 588 | 0) / 28 | 0) | 0;
        $t = $sIndex % 28 | 0;
        if (!$t) {
            $decomp = $rt_createIntArray(2);
            var$7 = $decomp.data;
            var$7[0] = $l;
            var$7[1] = $v;
        } else {
            var$8 = 4519 + $t | 0;
            $decomp = $rt_createIntArray(3);
            var$7 = $decomp.data;
            var$7[0] = $l;
            var$7[1] = $v;
            var$7[2] = var$8;
        }
        return $decomp;
    }
    return null;
}
function jur_Lexer_hasSingleCodepointDecomposition($ch) {
    var $hasSingleDecomp;
    $hasSingleDecomp = jur_Lexer_singleDecompTable.$get29($ch);
    return $hasSingleDecomp == jur_Lexer_singleDecompTableSize ? 0 : 1;
}
function jur_Lexer_hasDecompositionNonNullCanClass($ch) {
    return ($ch != 832 ? 0 : 1) | ($ch != 833 ? 0 : 1) | ($ch != 835 ? 0 : 1) | ($ch != 836 ? 0 : 1);
}
function jur_Lexer_nextCodePoint($this) {
    var $high, $lowExpectedIndex, $low;
    $high = $this.$pattern.data[jur_Lexer_nextIndex($this)];
    if (jl_Character_isHighSurrogate($high)) {
        $lowExpectedIndex = $this.$prevNW + 1 | 0;
        if ($lowExpectedIndex < $this.$pattern.data.length) {
            $low = $this.$pattern.data[$lowExpectedIndex];
            if (jl_Character_isLowSurrogate($low)) {
                jur_Lexer_nextIndex($this);
                return jl_Character_toCodePoint($high, $low);
            }
        }
    }
    return $high;
}
function jur_Lexer_getIndex($this) {
    return $this.$curToc;
}
function oooi_DxQuickStep$ReorderingMethod() {
    jl_Enum.call(this);
}
var oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__DONT_REORDER = null;
var oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__BY_ERROR = null;
var oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__RANDOMLY = null;
var oooi_DxQuickStep$ReorderingMethod_$VALUES = null;
function oooi_DxQuickStep$ReorderingMethod_$callClinit() {
    oooi_DxQuickStep$ReorderingMethod_$callClinit = $rt_eraseClinit(oooi_DxQuickStep$ReorderingMethod);
    oooi_DxQuickStep$ReorderingMethod__clinit_();
}
function oooi_DxQuickStep$ReorderingMethod__init_(var_0, var_1) {
    var var_2 = new oooi_DxQuickStep$ReorderingMethod();
    oooi_DxQuickStep$ReorderingMethod__init_0(var_2, var_0, var_1);
    return var_2;
}
function oooi_DxQuickStep$ReorderingMethod_values() {
    oooi_DxQuickStep$ReorderingMethod_$callClinit();
    return oooi_DxQuickStep$ReorderingMethod_$VALUES.$clone();
}
function oooi_DxQuickStep$ReorderingMethod__init_0($this, var$1, var$2) {
    oooi_DxQuickStep$ReorderingMethod_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function oooi_DxQuickStep$ReorderingMethod__clinit_() {
    var var$1, var$2;
    oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__DONT_REORDER = oooi_DxQuickStep$ReorderingMethod__init_($rt_s(618), 0);
    oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__BY_ERROR = oooi_DxQuickStep$ReorderingMethod__init_($rt_s(619), 1);
    oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__RANDOMLY = oooi_DxQuickStep$ReorderingMethod__init_($rt_s(620), 2);
    var$1 = $rt_createArray(oooi_DxQuickStep$ReorderingMethod, 3);
    var$2 = var$1.data;
    var$2[0] = oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__DONT_REORDER;
    var$2[1] = oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__BY_ERROR;
    var$2[2] = oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__RANDOMLY;
    oooi_DxQuickStep$ReorderingMethod_$VALUES = var$1;
}
function jur_AbstractCharClass$LazyNonSpace() {
    jur_AbstractCharClass$LazySpace.call(this);
}
function jur_AbstractCharClass$LazyNonSpace__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonSpace();
    jur_AbstractCharClass$LazyNonSpace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonSpace__init_0($this) {
    jur_AbstractCharClass$LazySpace__init_0($this);
}
function jur_AbstractCharClass$LazyNonSpace_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazySpace_computeValue($this).$setNegative(1);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
}
function ooo_DJointGroup() {
}
function oooij_DxJointGroup() {
    oooi_DBase.call(this);
    this.$_stack = null;
}
function oooij_DxJointGroup__init_() {
    var var_0 = new oooij_DxJointGroup();
    oooij_DxJointGroup__init_0(var_0);
    return var_0;
}
function oooij_DxJointGroup__init_0($this) {
    oooi_DBase__init_0($this);
    $this.$_stack = ju_ArrayList__init_();
}
function oooij_DxJointGroup_dJointGroupCreate($max_size) {
    var $group;
    $group = oooij_DxJointGroup__init_();
    return $group;
}
function oooij_DxJointGroup_dJointGroupEmpty($this) {
    var $i, $j;
    $i = $this.$_stack.$size() - 1 | 0;
    while ($i >= 0) {
        $j = $this.$_stack.$get1($i);
        $j.$FinalizeAndDestroyJointInstance(0);
        $i = $i + (-1) | 0;
    }
    $this.$_stack.$clear();
}
function oooij_DxJointGroup_addJoint($this, $j) {
    $this.$_stack.$add1($j);
    $j.$setFlagsInGroup();
}
function oooij_DxJointGroup_empty($this) {
    $this.$dJointGroupEmpty();
}
function kjf_Function21() {
}
function kjf_Function22() {
}
function kjf_Function20() {
}
function oktgg_GLTFImage$read$5() {
    kji_Lambda.call(this);
    this.$this$062 = null;
}
function oktgg_GLTFImage$read$5__init_(var_0) {
    var var_1 = new oktgg_GLTFImage$read$5();
    oktgg_GLTFImage$read$5__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFImage$read$5_invoke(var$0, var$1) {
    oktgg_GLTFImage$read$5_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFImage$read$5_invoke0($this, $uri) {
    var $decoded, var$3, var$4;
    kji_Intrinsics_checkParameterIsNotNull($uri, $rt_s(18));
    if (kt_StringsKt__StringsJVMKt_startsWith$default($uri, $rt_s(610), 0, 2, null))
        $rt_throw(jl_RuntimeException__init_($rt_s(621)));
    $decoded = jn_URLDecoder_decode($uri, $rt_s(355));
    okti_IMG_$callClinit();
    var$3 = okti_IMG_INSTANCE;
    var$4 = oktgg_GLTFImage_getGltf($this.$this$062).$getDirectory();
    kji_Intrinsics_checkExpressionValueIsNotNull($decoded, $rt_s(622));
    okti_IMG_load0(var$3, var$4.$child($decoded), oktgg_GLTFImage_getImage($this.$this$062), oktgg_GLTFImage$read$5$1__init_($this));
}
function oktgg_GLTFImage$read$5__init_0(var$0, var$1) {
    var$0.$this$062 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktpo_OdeRigidBody$Companion() {
    jl_Object.call(this);
}
function oktpo_OdeRigidBody$Companion__init_() {
    var var_0 = new oktpo_OdeRigidBody$Companion();
    oktpo_OdeRigidBody$Companion__init_0(var_0);
    return var_0;
}
function oktpo_OdeRigidBody$Companion__init_1(var_0) {
    var var_1 = new oktpo_OdeRigidBody$Companion();
    oktpo_OdeRigidBody$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktpo_OdeRigidBody$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktpo_OdeRigidBody$Companion__init_2($this, $$constructor_marker) {
    oktpo_OdeRigidBody$Companion__init_0($this);
}
function oktgg_GLTFImage$read$1() {
    kji_Lambda.call(this);
    this.$this$063 = null;
}
function oktgg_GLTFImage$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFImage$read$1();
    oktgg_GLTFImage$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFImage$read$1_invoke(var$0, var$1) {
    oktgg_GLTFImage$read$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFImage$read$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    oktgg_GLTFImage_setName($this.$this$063, $it);
}
function oktgg_GLTFImage$read$1__init_0(var$0, var$1) {
    var$0.$this$063 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFImage$read$2() {
    kji_Lambda.call(this);
    this.$this$064 = null;
}
function oktgg_GLTFImage$read$2__init_(var_0) {
    var var_1 = new oktgg_GLTFImage$read$2();
    oktgg_GLTFImage$read$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFImage$read$2_invoke(var$0, var$1) {
    oktgg_GLTFImage$read$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFImage$read$2_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    oktgg_GLTFImage_setUri($this.$this$064, $it);
}
function oktgg_GLTFImage$read$2__init_0(var$0, var$1) {
    var$0.$this$064 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFImage$read$3() {
    kji_Lambda.call(this);
    this.$this$065 = null;
}
function oktgg_GLTFImage$read$3__init_(var_0) {
    var var_1 = new oktgg_GLTFImage$read$3();
    oktgg_GLTFImage$read$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFImage$read$3_invoke(var$0, var$1) {
    oktgg_GLTFImage$read$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFImage$read$3_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    oktgg_GLTFImage_setMimeType($this.$this$065, $it);
}
function oktgg_GLTFImage$read$3__init_0(var$0, var$1) {
    var$0.$this$065 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFImage$read$4() {
    kji_Lambda.call(this);
    this.$this$066 = null;
}
function oktgg_GLTFImage$read$4__init_(var_0) {
    var var_1 = new oktgg_GLTFImage$read$4();
    oktgg_GLTFImage$read$4__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFImage$read$4_invoke(var$0, var$1) {
    oktgg_GLTFImage$read$4_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFImage$read$4_invoke0($this, $it) {
    oktgg_GLTFImage_setBufferView($this.$this$066, $it);
}
function oktgg_GLTFImage$read$4__init_0(var$0, var$1) {
    var$0.$this$066 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktt_CascadedShadowMatricesTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$067 = null;
    a.$$control0 = null;
    a.$$shader5 = null;
    a.$$colors = null;
}
function oktt_CascadedShadowMatricesTest$testMain$1__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktt_CascadedShadowMatricesTest$testMain$1();
    oktt_CascadedShadowMatricesTest$testMain$1__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktt_CascadedShadowMatricesTest$testMain$1_invoke(var$0) {
    oktt_CascadedShadowMatricesTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktt_CascadedShadowMatricesTest$testMain$1_invoke0($this) {
    var $delta, $i, var$3, var$4;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    okt_APP_$callClinit();
    $delta = okt_APP_getDeltaTime(okt_APP_INSTANCE);
    $this.$$control0.$update($delta);
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    okti_KB_$callClinit();
    if (okti_KB_isKeyPressed(okti_KB_INSTANCE, 29)) {
        oktgc_Camera_getDirection(oktt_CascadedShadowMatricesTest_getSceneCamera($this.$this$067)).$rotate0($delta, 0.0, 1.0, 0.0);
        oktt_CascadedShadowMatricesTest_updateFrustums($this.$this$067);
    } else if (okti_KB_isKeyPressed(okti_KB_INSTANCE, 32)) {
        oktgc_Camera_getDirection(oktt_CascadedShadowMatricesTest_getSceneCamera($this.$this$067)).$rotate0( -$delta, 0.0, 1.0, 0.0);
        oktt_CascadedShadowMatricesTest_updateFrustums($this.$this$067);
    }
    if (okti_KB_isKeyPressed(okti_KB_INSTANCE, 51)) {
        oktgc_Camera_getPosition(oktt_CascadedShadowMatricesTest_getSceneCamera($this.$this$067)).$add8(oktt_CascadedShadowMatricesTest_getTmpVec($this.$this$067).$set11(oktgc_Camera_getDirection(oktt_CascadedShadowMatricesTest_getSceneCamera($this.$this$067))).$scl($delta * 5.0));
        oktt_CascadedShadowMatricesTest_updateFrustums($this.$this$067);
    } else if (okti_KB_isKeyPressed(okti_KB_INSTANCE, 47)) {
        oktgc_Camera_getPosition(oktt_CascadedShadowMatricesTest_getSceneCamera($this.$this$067)).$sub0(oktt_CascadedShadowMatricesTest_getTmpVec($this.$this$067).$set11(oktgc_Camera_getDirection(oktt_CascadedShadowMatricesTest_getSceneCamera($this.$this$067))).$scl($delta * 5.0));
        oktt_CascadedShadowMatricesTest_updateFrustums($this.$this$067);
    }
    $this.$$shader5.$bind();
    $this.$$shader5.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $i = 0;
    var$3 = oktt_CascadedShadowMatricesTest_getSceneCameraFrustumMeshes($this.$this$067).data.length;
    while ($i < var$3) {
        $this.$$shader5.$set40($rt_s(623), $this.$$colors.data[$i]);
        oktm_IMesh$DefaultImpls_render$default(oktt_CascadedShadowMatricesTest_getSceneCameraFrustumMeshes($this.$this$067).data[$i], $this.$$shader5, 0, 0, 0, 0, 30, null);
        $i = $i + 1 | 0;
    }
    $i = 0;
    var$4 = oktt_CascadedShadowMatricesTest_getCascadeFrustumMeshes($this.$this$067).data.length;
    while ($i < var$4) {
        $this.$$shader5.$set40($rt_s(623), $this.$$colors.data[$i + oktt_CascadedShadowMatricesTest_getSceneCameraFrustumMeshes($this.$this$067).data.length | 0]);
        oktm_IMesh$DefaultImpls_render$default(oktt_CascadedShadowMatricesTest_getCascadeFrustumMeshes($this.$this$067).data[$i], $this.$$shader5, 0, 0, 0, 0, 30, null);
        $i = $i + 1 | 0;
    }
}
function oktt_CascadedShadowMatricesTest$testMain$1__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$this$067 = var$1;
    var$0.$$control0 = var$2;
    var$0.$$shader5 = var$3;
    var$0.$$colors = var$4;
    kji_Lambda__init_0(var$0, 0);
}
function oktm_IIndexBufferObject$Companion$Build$1() {
    kji_Lambda.call(this);
}
var oktm_IIndexBufferObject$Companion$Build$1_INSTANCE = null;
function oktm_IIndexBufferObject$Companion$Build$1_$callClinit() {
    oktm_IIndexBufferObject$Companion$Build$1_$callClinit = $rt_eraseClinit(oktm_IIndexBufferObject$Companion$Build$1);
    oktm_IIndexBufferObject$Companion$Build$1__clinit_();
}
function oktm_IIndexBufferObject$Companion$Build$1__init_() {
    var var_0 = new oktm_IIndexBufferObject$Companion$Build$1();
    oktm_IIndexBufferObject$Companion$Build$1__init_0(var_0);
    return var_0;
}
function oktm_IIndexBufferObject$Companion$Build$1__init_0(var$0) {
    oktm_IIndexBufferObject$Companion$Build$1_$callClinit();
    kji_Lambda__init_0(var$0, 4);
}
function oktm_IIndexBufferObject$Companion$Build$1__clinit_() {
    oktm_IIndexBufferObject$Companion$Build$1_INSTANCE = oktm_IIndexBufferObject$Companion$Build$1__init_();
}
function oktjj_JsonSimple3Object$Companion() {
    jl_Object.call(this);
}
function oktjj_JsonSimple3Object$Companion__init_() {
    var var_0 = new oktjj_JsonSimple3Object$Companion();
    oktjj_JsonSimple3Object$Companion__init_0(var_0);
    return var_0;
}
function oktjj_JsonSimple3Object$Companion__init_1(var_0) {
    var var_1 = new oktjj_JsonSimple3Object$Companion();
    oktjj_JsonSimple3Object$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktjj_JsonSimple3Object$Companion_parseObject($this, $text) {
    var var$2, var$3;
    kji_Intrinsics_checkParameterIsNotNull($text, $rt_s(295));
    var$2 = new oktjj_JsonSimple3Object;
    var$3 = cgcj_Jsoner_deserialize0($text, cgcj_JsonObject__init_());
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(624));
    oktjj_JsonSimple3Object__init_(var$2, var$3);
    return var$2;
}
function oktjj_JsonSimple3Object$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktjj_JsonSimple3Object$Companion__init_2($this, $$constructor_marker) {
    oktjj_JsonSimple3Object$Companion__init_0($this);
}
function oktm_IVec3$Companion$Build$1() {
    kji_Lambda.call(this);
}
var oktm_IVec3$Companion$Build$1_INSTANCE = null;
function oktm_IVec3$Companion$Build$1_$callClinit() {
    oktm_IVec3$Companion$Build$1_$callClinit = $rt_eraseClinit(oktm_IVec3$Companion$Build$1);
    oktm_IVec3$Companion$Build$1__clinit_();
}
function oktm_IVec3$Companion$Build$1__init_() {
    var var_0 = new oktm_IVec3$Companion$Build$1();
    oktm_IVec3$Companion$Build$1__init_0(var_0);
    return var_0;
}
function oktm_IVec3$Companion$Build$1_invoke(var$0) {
    return oktm_IVec3$Companion$Build$1_invoke0(var$0);
}
function oktm_IVec3$Companion$Build$1_invoke0($this) {
    return oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
}
function oktm_IVec3$Companion$Build$1__init_0(var$0) {
    oktm_IVec3$Companion$Build$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktm_IVec3$Companion$Build$1__clinit_() {
    oktm_IVec3$Companion$Build$1_INSTANCE = oktm_IVec3$Companion$Build$1__init_();
}
function oktp_ITrimeshShape() {
}
function oktpo_OdeTrimeshShape() {
    var a = this; oktpo_OdeGeom.call(a);
    a.$trimeshData = null;
    a.$trimesh = null;
    a.$friction0 = 0.0;
    a.$userObject0 = null;
}
function oktpo_OdeTrimeshShape__init_(var_0, var_1, var_2) {
    var var_3 = new oktpo_OdeTrimeshShape();
    oktpo_OdeTrimeshShape__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktpo_OdeTrimeshShape_getTrimesh($this) {
    return $this.$trimesh;
}
function oktpo_OdeTrimeshShape_getGeom($this) {
    var var$1;
    var$1 = $this.$trimesh;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(625));
    return var$1;
}
function oktpo_OdeTrimeshShape_getFriction($this) {
    return $this.$friction0;
}
function oktpo_OdeTrimeshShape__init_0($this, $world, $vertices, $indices) {
    var var$4;
    kji_Intrinsics_checkParameterIsNotNull($world, $rt_s(563));
    kji_Intrinsics_checkParameterIsNotNull($vertices, $rt_s(487));
    kji_Intrinsics_checkParameterIsNotNull($indices, $rt_s(566));
    oktpo_OdeGeom__init_0($this);
    var$4 = ooo_OdeHelper_createTriMeshData();
    var$4.$build1($vertices, $indices);
    var$4.$preprocess();
    $this.$trimeshData = var$4;
    $this.$trimesh = ooo_OdeHelper_createTriMesh(oktpo_OdePhysicsWorld_getSpace($world), $this.$trimeshData, null, null, null);
    $this.$friction0 = 1.0;
    $this.$userObject0 = $this;
    oktpo_OdeTrimeshShape_getGeom($this).$setData($this);
}
function jl_AbstractStringBuilder$Constants() {
    jl_Object.call(this);
}
var jl_AbstractStringBuilder$Constants_intPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_longPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_longLogPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_doubleAnalysisResult = null;
var jl_AbstractStringBuilder$Constants_floatAnalysisResult = null;
function jl_AbstractStringBuilder$Constants_$callClinit() {
    jl_AbstractStringBuilder$Constants_$callClinit = $rt_eraseClinit(jl_AbstractStringBuilder$Constants);
    jl_AbstractStringBuilder$Constants__clinit_();
}
function jl_AbstractStringBuilder$Constants__init_() {
    var var_0 = new jl_AbstractStringBuilder$Constants();
    jl_AbstractStringBuilder$Constants__init_0(var_0);
    return var_0;
}
function jl_AbstractStringBuilder$Constants__init_0($this) {
    jl_AbstractStringBuilder$Constants_$callClinit();
    jl_Object__init_0($this);
}
function jl_AbstractStringBuilder$Constants__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(10);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 10;
    var$2[2] = 100;
    var$2[3] = 1000;
    var$2[4] = 10000;
    var$2[5] = 100000;
    var$2[6] = 1000000;
    var$2[7] = 10000000;
    var$2[8] = 100000000;
    var$2[9] = 1000000000;
    jl_AbstractStringBuilder$Constants_intPowersOfTen = var$1;
    var$1 = $rt_createLongArray(19);
    var$2 = var$1.data;
    var$2[0] = Long_fromInt(1);
    var$2[1] = Long_fromInt(10);
    var$2[2] = Long_fromInt(100);
    var$2[3] = Long_fromInt(1000);
    var$2[4] = Long_fromInt(10000);
    var$2[5] = Long_fromInt(100000);
    var$2[6] = Long_fromInt(1000000);
    var$2[7] = Long_fromInt(10000000);
    var$2[8] = Long_fromInt(100000000);
    var$2[9] = Long_fromInt(1000000000);
    var$2[10] = new Long(1410065408, 2);
    var$2[11] = new Long(1215752192, 23);
    var$2[12] = new Long(3567587328, 232);
    var$2[13] = new Long(1316134912, 2328);
    var$2[14] = new Long(276447232, 23283);
    var$2[15] = new Long(2764472320, 232830);
    var$2[16] = new Long(1874919424, 2328306);
    var$2[17] = new Long(1569325056, 23283064);
    var$2[18] = new Long(2808348672, 232830643);
    jl_AbstractStringBuilder$Constants_longPowersOfTen = var$1;
    var$1 = $rt_createLongArray(6);
    var$2 = var$1.data;
    var$2[0] = Long_fromInt(1);
    var$2[1] = Long_fromInt(10);
    var$2[2] = Long_fromInt(100);
    var$2[3] = Long_fromInt(10000);
    var$2[4] = Long_fromInt(100000000);
    var$2[5] = new Long(1874919424, 2328306);
    jl_AbstractStringBuilder$Constants_longLogPowersOfTen = var$1;
    jl_AbstractStringBuilder$Constants_doubleAnalysisResult = otcit_DoubleAnalyzer$Result__init_();
    jl_AbstractStringBuilder$Constants_floatAnalysisResult = otcit_FloatAnalyzer$Result__init_();
}
function jur_SingleSet() {
    jur_JointSet.call(this);
    this.$kid = null;
}
function jur_SingleSet__init_(var_0, var_1) {
    var var_2 = new jur_SingleSet();
    jur_SingleSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_SingleSet__init_0($this, $child, $fSet) {
    jur_JointSet__init_0($this);
    $this.$kid = $child;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$getGroupIndex();
}
function jur_SingleSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $shift;
    $start = $matchResult.$getStart($this.$groupIndex0);
    $matchResult.$setStart($this.$groupIndex0, $stringIndex);
    $shift = $this.$kid.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    $matchResult.$setStart($this.$groupIndex0, $start);
    return (-1);
}
function jur_SingleSet_find($this, $stringIndex, $testString, $matchResult) {
    var $res;
    $res = $this.$kid.$find($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        $matchResult.$setStart($this.$groupIndex0, $res);
    return $res;
}
function jur_SingleSet_findBack($this, $stringIndex, $lastIndex, $testString, $matchResult) {
    var $res;
    $res = $this.$kid.$findBack($stringIndex, $lastIndex, $testString, $matchResult);
    if ($res >= 0)
        $matchResult.$setStart($this.$groupIndex0, $res);
    return $res;
}
function jur_SingleSet_first($this, $set) {
    return $this.$kid.$first($set);
}
function jur_SingleSet_processBackRefReplacement($this) {
    var $set;
    $set = jur_BackReferencedSingleSet__init_($this);
    $this.$next0 = $set;
    return $set;
}
function jur_SingleSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        $this.$fSet.$processSecondPass();
    if ($this.$kid !== null && !$this.$kid.$isSecondPassVisited) {
        $set = $this.$kid.$processBackRefReplacement();
        if ($set !== null) {
            $this.$kid.$isSecondPassVisited = 1;
            $this.$kid = $set;
        }
        $this.$kid.$processSecondPass();
    }
}
function jur_BackReferencedSingleSet() {
    jur_SingleSet.call(this);
}
function jur_BackReferencedSingleSet__init_(var_0) {
    var var_1 = new jur_BackReferencedSingleSet();
    jur_BackReferencedSingleSet__init_0(var_1, var_0);
    return var_1;
}
function jur_BackReferencedSingleSet__init_0($this, $node) {
    jur_SingleSet__init_0($this, $node.$kid, $node.$fSet);
}
function jur_BackReferencedSingleSet_find($this, $startSearch, $testString, $matchResult) {
    var $res, $lastIndex, $saveStart;
    $res = 0;
    $lastIndex = $matchResult.$getRightBound();
    a: {
        while (true) {
            if ($startSearch > $lastIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = $matchResult.$getStart($this.$groupIndex0);
            $matchResult.$setStart($this.$groupIndex0, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            $matchResult.$setStart($this.$groupIndex0, $saveStart);
            $startSearch = $startSearch + 1 | 0;
        }
    }
    return $startSearch;
}
function jur_BackReferencedSingleSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    var $res, $saveStart;
    $res = 0;
    a: {
        while (true) {
            if ($startSearch < $stringIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = $matchResult.$getStart($this.$groupIndex0);
            $matchResult.$setStart($this.$groupIndex0, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            $matchResult.$setStart($this.$groupIndex0, $saveStart);
            $startSearch = $startSearch + (-1) | 0;
        }
    }
    return $startSearch;
}
function jur_BackReferencedSingleSet_processBackRefReplacement($this) {
    return null;
}
function otp_PlatformQueue() {
    jl_Object.call(this);
}
function otp_PlatformQueue_wrap($obj) {
    return $obj;
}
function otp_PlatformQueue_isEmpty$static($this) {
    return $this.length ? 0 : 1;
}
function otp_PlatformQueue_add$static($this, $e) {
    var var$3;
    var$3 = otp_PlatformQueue_wrap($e);
    $this.push(var$3);
}
function otp_PlatformQueue_remove$static($this) {
    return $this.shift();
}
function oktsg_PrincipledBSDF$Companion() {
    jl_Object.call(this);
}
function oktsg_PrincipledBSDF$Companion__init_() {
    var var_0 = new oktsg_PrincipledBSDF$Companion();
    oktsg_PrincipledBSDF$Companion__init_0(var_0);
    return var_0;
}
function oktsg_PrincipledBSDF$Companion__init_1(var_0) {
    var var_1 = new oktsg_PrincipledBSDF$Companion();
    oktsg_PrincipledBSDF$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_PrincipledBSDF$Companion_getShadowCascadesNum($this) {
    return oktsg_PrincipledBSDF_access$getShadowCascadesNum$cp();
}
function oktsg_PrincipledBSDF$Companion_getVisualizeCascadeFields($this) {
    return oktsg_PrincipledBSDF_access$getVisualizeCascadeFields$cp();
}
function oktsg_PrincipledBSDF$Companion_cascadedShadowsExe($this, $maxNumDirLights, $clipSpacePos, $use, $visualizeCascadeFields) {
    var var$5, var$6;
    kji_Intrinsics_checkParameterIsNotNull($clipSpacePos, $rt_s(626));
    if (!$use)
        var$5 = $rt_s(6);
    else {
        var$5 = jl_StringBuilder__init_().$append($rt_s(627));
        var$6 = !$visualizeCascadeFields ? $rt_s(6) : $rt_s(628);
        var$5 = var$5.$append(var$6).$append($rt_s(629));
        var$5 = var$5.$append1($maxNumDirLights).$append($rt_s(630));
        var$6 = $this;
        var$5 = var$5.$append1($rt_imul(oktsg_PrincipledBSDF$Companion_getShadowCascadesNum(var$6), $maxNumDirLights)).$append($rt_s(631));
        var$5 = var$5.$append($clipSpacePos).$append($rt_s(632)).$append1(oktsg_PrincipledBSDF$Companion_getShadowCascadesNum(var$6)).$append($rt_s(633));
        var$6 = !$visualizeCascadeFields ? $rt_s(6) : $rt_s(634);
        var$5 = var$5.$append(var$6).$append($rt_s(635));
        var$5 = var$5.$append(!$visualizeCascadeFields ? $rt_s(6) : $rt_s(636)).$append($rt_s(637)).$toString();
    }
    return var$5;
}
function oktsg_PrincipledBSDF$Companion_cascadedShadowsExe$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$6 & 4)
        var$4 = 0;
    if (var$6 & 8)
        var$5 = oktsg_PrincipledBSDF$Companion_getVisualizeCascadeFields(var$1);
    return oktsg_PrincipledBSDF$Companion_cascadedShadowsExe(var$1, var$2, var$3, var$4, var$5);
}
function oktsg_PrincipledBSDF$Companion_pbrCode($this, $maxNumDirLights, $maxNumPointLights, $maxNumSpotLights, $clipSpacePos, $receiveShadow) {
    var var$6;
    kji_Intrinsics_checkParameterIsNotNull($clipSpacePos, $rt_s(626));
    var$6 = jl_StringBuilder__init_().$append($rt_s(638));
    var$6 = var$6.$append1($maxNumDirLights).$append($rt_s(639));
    var$6 = var$6.$append1($maxNumDirLights).$append($rt_s(640));
    var$6 = var$6.$append1($maxNumDirLights).$append($rt_s(641));
    var$6 = var$6.$append1($maxNumPointLights).$append($rt_s(642));
    var$6 = var$6.$append1($maxNumPointLights).$append($rt_s(643));
    var$6 = var$6.$append1($maxNumPointLights).$append($rt_s(644));
    var$6 = var$6.$append1($maxNumPointLights).$append($rt_s(645));
    var$6 = var$6.$append1($maxNumSpotLights).$append($rt_s(646));
    var$6 = var$6.$append1($maxNumSpotLights).$append($rt_s(647));
    var$6 = var$6.$append1($maxNumSpotLights).$append($rt_s(648));
    var$6 = var$6.$append1($maxNumSpotLights).$append($rt_s(649));
    var$6 = var$6.$append1($maxNumDirLights).$append($rt_s(650));
    var$6 = var$6.$append1($maxNumSpotLights).$append($rt_s(651));
    var$6 = var$6.$append1($maxNumSpotLights).$append($rt_s(652));
    var$6 = var$6.$append1($maxNumSpotLights).$append($rt_s(653));
    var$6 = var$6.$append1($maxNumDirLights).$append($rt_s(654));
    var$6 = var$6.$append(oktsg_PrincipledBSDF$Companion_cascadedShadowsExe$default($this, $maxNumDirLights, $clipSpacePos, $receiveShadow, 0, 8, null)).$append($rt_s(655));
    var$6 = var$6.$append1($maxNumPointLights).$append($rt_s(656));
    return var$6.$append1($maxNumSpotLights).$append($rt_s(657)).$toString();
}
function oktsg_PrincipledBSDF$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_PrincipledBSDF$Companion__init_2($this, $$constructor_marker) {
    oktsg_PrincipledBSDF$Companion__init_0($this);
}
function oktj_IJsonArray$DefaultImpls() {
    jl_Object.call(this);
}
function oktj_IJsonArray$DefaultImpls_float($$this, $index) {
    return $$this.$get1($index).$floatValue();
}
function oktj_IJsonArray$DefaultImpls_float0($$this, $index, $default) {
    var var$4;
    var$4 = $$this.$getSize();
    if (0 <= $index && var$4 > $index)
        $default = $$this.$float0($index);
    return $default;
}
function oktj_IJsonArray$DefaultImpls_ints($$this, $call) {
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    $$this.$values3($call);
}
function oktj_IJsonArray$DefaultImpls_floats($$this, $call) {
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    $$this.$values3($call);
}
function oktgg_GLTFMesh$read$2$1() {
    kji_Lambda.call(this);
    this.$this$068 = null;
}
function oktgg_GLTFMesh$read$2$1__init_(var_0) {
    var var_1 = new oktgg_GLTFMesh$read$2$1();
    oktgg_GLTFMesh$read$2$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFMesh$read$2$1_invoke(var$0, var$1) {
    oktgg_GLTFMesh$read$2$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFMesh$read$2$1_invoke0($this, $$this$objs) {
    var $primitive, var$3, var$4, var$5, var$6, var$7;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $primitive = new oktgg_GLTFPrimitive;
    var$3 = oktgg_GLTFMesh_getGltf($this.$this$068.$this$069);
    var$4 = oktgg_GLTFArray_size(oktgg_GLTFMesh_getPrimitives($this.$this$068.$this$069));
    var$5 = oktgg_GLTFMesh_getElementIndex($this.$this$068.$this$069);
    var$6 = null;
    var$7 = null;
    oktgg_GLTFPrimitive__init_($primitive, var$3, var$4, var$5, var$6, 8, var$7);
    oktgg_GLTFMesh_getPrimitives($this.$this$068.$this$069).$add1($primitive);
    oktgg_GLTFPrimitive_read($primitive, $$this$objs);
}
function oktgg_GLTFMesh$read$2$1__init_0(var$0, var$1) {
    var$0.$this$068 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktga_IAnimTrack() {
}
function oktga_Vec4Track() {
    var a = this; jl_Object.call(a);
    a.$interpolation = 0;
    a.$nodeIndex = 0;
    a.$times = null;
    a.$values4 = null;
    a.$inTangents = null;
    a.$outTangents = null;
    a.$duration0 = 0.0;
}
function oktga_Vec4Track__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktga_Vec4Track();
    oktga_Vec4Track__init_0(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function oktga_Vec4Track__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new oktga_Vec4Track();
    oktga_Vec4Track__init_2(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function oktga_Vec4Track__init_3() {
    var var_0 = new oktga_Vec4Track();
    oktga_Vec4Track__init_4(var_0);
    return var_0;
}
function oktga_Vec4Track_getNodeIndex($this) {
    return $this.$nodeIndex;
}
function oktga_Vec4Track_getTimes($this) {
    return $this.$times;
}
function oktga_Vec4Track_getValues($this) {
    return $this.$values4;
}
function oktga_Vec4Track_getInTangents($this) {
    return $this.$inTangents;
}
function oktga_Vec4Track_getOutTangents($this) {
    return $this.$outTangents;
}
function oktga_Vec4Track_getDuration($this) {
    return $this.$duration0;
}
function oktga_Vec4Track_setDuration($this, $_set___) {
    $this.$duration0 = $_set___;
}
function oktga_Vec4Track__init_0($this, $interpolation, $nodeIndex, $times, $values, $inTangents, $outTangents, $duration) {
    kji_Intrinsics_checkParameterIsNotNull($times, $rt_s(658));
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    kji_Intrinsics_checkParameterIsNotNull($inTangents, $rt_s(659));
    kji_Intrinsics_checkParameterIsNotNull($outTangents, $rt_s(660));
    jl_Object__init_0($this);
    $this.$interpolation = $interpolation;
    $this.$nodeIndex = $nodeIndex;
    $this.$times = $times;
    $this.$values4 = $values;
    $this.$inTangents = $inTangents;
    $this.$outTangents = $outTangents;
    $this.$duration0 = $duration;
}
function oktga_Vec4Track__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9) {
    if (var$8 & 1)
        var$1 = 0;
    if (var$8 & 2)
        var$2 = 0;
    if (var$8 & 4)
        var$3 = ju_ArrayList__init_();
    if (var$8 & 8)
        var$4 = ju_ArrayList__init_();
    if (var$8 & 16)
        var$5 = ju_ArrayList__init_();
    if (var$8 & 32)
        var$6 = ju_ArrayList__init_();
    if (var$8 & 64)
        var$7 = 0.0;
    oktga_Vec4Track__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7);
}
function oktga_Vec4Track__init_4(var$0) {
    oktga_Vec4Track__init_2(var$0, 0, 0, null, null, null, null, 0.0, 127, null);
}
function oktga_Vec4Track_calculateDuration($this) {
    return oktga_IAnimTrack$DefaultImpls_calculateDuration($this);
}
function ju_MissingResourceException() {
    var a = this; jl_RuntimeException.call(a);
    a.$className = null;
    a.$key0 = null;
}
function ju_MissingResourceException__init_(var_0, var_1, var_2) {
    var var_3 = new ju_MissingResourceException();
    ju_MissingResourceException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function ju_MissingResourceException__init_0($this, $s, $className, $key) {
    jl_RuntimeException__init_2($this, $s);
    $this.$className = $className;
    $this.$key0 = $key;
}
function okta_ISound$DefaultImpls() {
    jl_Object.call(this);
}
function okta_ISound$DefaultImpls_play$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$7 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(661)));
    if (var$6 & 1)
        var$2 = 1.0;
    if (var$6 & 2)
        var$3 = 1.0;
    if (var$6 & 4)
        var$4 = 0.0;
    if (var$6 & 8)
        var$5 = 0;
    return var$1.$play(var$2, var$3, var$4, var$5);
}
function okttt_MainTeaVMTests$main$1() {
    var a = this; jl_Object.call(a);
    a.$$document = null;
    a.$$button = null;
    a.$$test = null;
}
function okttt_MainTeaVMTests$main$1__init_(var_0, var_1, var_2) {
    var var_3 = new okttt_MainTeaVMTests$main$1();
    okttt_MainTeaVMTests$main$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function okttt_MainTeaVMTests$main$1_handleEvent($this, $it) {
    var var$2, $canvas, var$4;
    okttt_MainTeaVMTests_$callClinit();
    if (okttt_MainTeaVMTests_getCurrentApp(okttt_MainTeaVMTests_INSTANCE) === null) {
        oktu_LOG_$callClinit();
        oktu_LOG_setCollectLogs(oktu_LOG_INSTANCE, 1);
        var$2 = $this.$$document.getElementById("canvas");
        if (var$2 === null)
            $rt_throw(k_TypeCastException__init_($rt_s(662)));
        $canvas = var$2;
        okttt_MainTeaVMTests_setCurrentApp(okttt_MainTeaVMTests_INSTANCE, oktt_TeaVMApp__init_($canvas, 0, 0, null, 14, null));
        oktp_PHYS_$callClinit();
        oktp_PHYS_setApi(oktp_PHYS_INSTANCE, oktpo_OdePhys__init_());
    }
    var$2 = okttt_MainTeaVMTests_getCurrentButton(okttt_MainTeaVMTests_INSTANCE);
    if (var$2 !== null) {
        var$4 = var$2.style;
        if (var$4 !== null)
            var$4.setProperty("text-decoration", "none");
    }
    $this.$$button.style.setProperty("text-decoration", "underline");
    okttt_MainTeaVMTests_setCurrentButton(okttt_MainTeaVMTests_INSTANCE, $this.$$button);
    okti_KB_$callClinit();
    okti_KB_reset(okti_KB_INSTANCE);
    okti_MOUSE_$callClinit();
    okti_MOUSE_reset(okti_MOUSE_INSTANCE);
    oktg_GL_$callClinit();
    oktg_GL_getSingleCallRequests(oktg_GL_INSTANCE).$clear();
    oktg_GL_getRenderCallRequests(oktg_GL_INSTANCE).$clear();
    $this.$$test.$testMain();
}
function okttt_MainTeaVMTests$main$1__init_0(var$0, var$1, var$2, var$3) {
    var$0.$$document = var$1;
    var$0.$$button = var$2;
    var$0.$$test = var$3;
    jl_Object__init_0(var$0);
}
function okttt_MainTeaVMTests$main$1_handleEvent$exported$0(var$0, var$1) {
    okttt_MainTeaVMTests$main$1_handleEvent(var$0, var$1);
}
function jn_ByteOrder() {
    jl_Object.call(this);
    this.$name20 = null;
}
var jn_ByteOrder_BIG_ENDIAN = null;
var jn_ByteOrder_LITTLE_ENDIAN = null;
function jn_ByteOrder_$callClinit() {
    jn_ByteOrder_$callClinit = $rt_eraseClinit(jn_ByteOrder);
    jn_ByteOrder__clinit_();
}
function jn_ByteOrder__init_(var_0) {
    var var_1 = new jn_ByteOrder();
    jn_ByteOrder__init_0(var_1, var_0);
    return var_1;
}
function jn_ByteOrder__init_0($this, $name) {
    jn_ByteOrder_$callClinit();
    jl_Object__init_0($this);
    $this.$name20 = $name;
}
function jn_ByteOrder__clinit_() {
    jn_ByteOrder_BIG_ENDIAN = jn_ByteOrder__init_($rt_s(663));
    jn_ByteOrder_LITTLE_ENDIAN = jn_ByteOrder__init_($rt_s(664));
}
function oooic_Ctype() {
    jl_Object.call(this);
}
function oooic_Ctype__init_() {
    var var_0 = new oooic_Ctype();
    oooic_Ctype__init_0(var_0);
    return var_0;
}
function oooic_Ctype__init_0($this) {
    jl_Object__init_0($this);
}
function oktm_IScreenQuad() {
}
function oktts_BloomTest() {
    jl_Object.call(this);
}
function oktts_BloomTest__init_() {
    var var_0 = new oktts_BloomTest();
    oktts_BloomTest__init_0(var_0);
    return var_0;
}
function oktts_BloomTest_getName($this) {
    return $rt_s(665);
}
function oktts_BloomTest_testMain($this) {
    var $model, $sceneBuffer, var$3, var$4, var$5, $screenQuad, $bloom, var$8, var$9;
    $model = oktt_CubeModel__init_(null, 1, null);
    $sceneBuffer = new oktt_SimpleFrameBuffer;
    okt_APP_$callClinit();
    var$3 = okt_APP_getWidth(okt_APP_INSTANCE);
    var$4 = okt_APP_getHeight(okt_APP_INSTANCE);
    var$5 = null;
    oktt_SimpleFrameBuffer__init_($sceneBuffer, var$3, var$4, 0, 0, 0, 1, 0, 92, var$5);
    $screenQuad = oktm_ScreenQuad__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    $bloom = new oktsp_Bloom;
    var$8 = oktt_SimpleFrameBuffer_getWidth($sceneBuffer);
    var$9 = oktt_SimpleFrameBuffer_getHeight($sceneBuffer);
    var$5 = null;
    oktsp_Bloom__init_($bloom, var$8, var$9, 6, 2, 0.0, 0, 0, 0, 240, var$5);
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktts_BloomTest$testMain$1__init_($model, $sceneBuffer, $bloom, $screenQuad), 1, null);
}
function oktts_BloomTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktm_IMat4() {
}
var oktm_IMat4_Companion = null;
function oktm_IMat4_$callClinit() {
    oktm_IMat4_$callClinit = $rt_eraseClinit(oktm_IMat4);
    oktm_IMat4__clinit_();
}
function oktm_IMat4__clinit_() {
    oktm_IMat4$Companion_$callClinit();
    oktm_IMat4_Companion = oktm_IMat4$Companion_$$INSTANCE;
}
function oooip_DxUtil$alloc_block_fn_t() {
}
function okti_IKB() {
}
function okti_KB() {
    jl_Object.call(this);
}
var okti_KB_api = null;
var okti_KB_INSTANCE = null;
function okti_KB_$callClinit() {
    okti_KB_$callClinit = $rt_eraseClinit(okti_KB);
    okti_KB__clinit_();
}
function okti_KB__init_() {
    var var_0 = new okti_KB();
    okti_KB__init_0(var_0);
    return var_0;
}
function okti_KB_setApi($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    okti_KB_api = $_set___;
}
function okti_KB_getShift($this) {
    var var$1;
    var$1 = okti_KB_api;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$1.$getShift();
}
function okti_KB_toString($this, $keycode) {
    var var$2;
    if (!($keycode < 0 ? 0 : 1)) {
        var$2 = jl_StringBuilder__init_().$append($rt_s(666)).$append1($keycode).$toString();
        $rt_throw(jl_IllegalArgumentException__init_(var$2.$toString()));
    }
    if (!($keycode > 255 ? 0 : 1)) {
        var$2 = jl_StringBuilder__init_().$append($rt_s(667)).$append1($keycode).$toString();
        $rt_throw(jl_IllegalArgumentException__init_(var$2.$toString()));
    }
    a: {
        b: {
            switch ($keycode) {
                case 0:
                    break;
                case 1:
                    var$2 = $rt_s(668);
                    break a;
                case 2:
                    var$2 = $rt_s(669);
                    break a;
                case 3:
                    var$2 = $rt_s(670);
                    break a;
                case 4:
                    var$2 = $rt_s(671);
                    break a;
                case 5:
                    var$2 = $rt_s(672);
                    break a;
                case 6:
                    var$2 = $rt_s(673);
                    break a;
                case 7:
                    var$2 = $rt_s(674);
                    break a;
                case 8:
                    var$2 = $rt_s(675);
                    break a;
                case 9:
                    var$2 = $rt_s(676);
                    break a;
                case 10:
                    var$2 = $rt_s(677);
                    break a;
                case 11:
                    var$2 = $rt_s(678);
                    break a;
                case 12:
                    var$2 = $rt_s(679);
                    break a;
                case 13:
                    var$2 = $rt_s(680);
                    break a;
                case 14:
                    var$2 = $rt_s(681);
                    break a;
                case 15:
                    var$2 = $rt_s(682);
                    break a;
                case 16:
                    var$2 = $rt_s(683);
                    break a;
                case 17:
                    var$2 = $rt_s(684);
                    break a;
                case 18:
                    var$2 = $rt_s(685);
                    break a;
                case 19:
                    var$2 = $rt_s(686);
                    break a;
                case 20:
                    var$2 = $rt_s(687);
                    break a;
                case 21:
                    var$2 = $rt_s(688);
                    break a;
                case 22:
                    var$2 = $rt_s(689);
                    break a;
                case 23:
                    var$2 = $rt_s(690);
                    break a;
                case 24:
                    var$2 = $rt_s(691);
                    break a;
                case 25:
                    var$2 = $rt_s(692);
                    break a;
                case 26:
                    var$2 = $rt_s(693);
                    break a;
                case 27:
                    var$2 = $rt_s(694);
                    break a;
                case 28:
                    var$2 = $rt_s(695);
                    break a;
                case 29:
                    var$2 = $rt_s(696);
                    break a;
                case 30:
                    var$2 = $rt_s(697);
                    break a;
                case 31:
                    var$2 = $rt_s(698);
                    break a;
                case 32:
                    var$2 = $rt_s(106);
                    break a;
                case 33:
                    var$2 = $rt_s(699);
                    break a;
                case 34:
                    var$2 = $rt_s(700);
                    break a;
                case 35:
                    var$2 = $rt_s(701);
                    break a;
                case 36:
                    var$2 = $rt_s(702);
                    break a;
                case 37:
                    var$2 = $rt_s(703);
                    break a;
                case 38:
                    var$2 = $rt_s(704);
                    break a;
                case 39:
                    var$2 = $rt_s(705);
                    break a;
                case 40:
                    var$2 = $rt_s(706);
                    break a;
                case 41:
                    var$2 = $rt_s(707);
                    break a;
                case 42:
                    var$2 = $rt_s(240);
                    break a;
                case 43:
                    var$2 = $rt_s(708);
                    break a;
                case 44:
                    var$2 = $rt_s(709);
                    break a;
                case 45:
                    var$2 = $rt_s(710);
                    break a;
                case 46:
                    var$2 = $rt_s(711);
                    break a;
                case 47:
                    var$2 = $rt_s(104);
                    break a;
                case 48:
                    var$2 = $rt_s(712);
                    break a;
                case 49:
                    var$2 = $rt_s(713);
                    break a;
                case 50:
                    var$2 = $rt_s(714);
                    break a;
                case 51:
                    var$2 = $rt_s(102);
                    break a;
                case 52:
                    var$2 = $rt_s(715);
                    break a;
                case 53:
                    var$2 = $rt_s(716);
                    break a;
                case 54:
                    var$2 = $rt_s(717);
                    break a;
                case 55:
                    var$2 = $rt_s(396);
                    break a;
                case 56:
                    var$2 = $rt_s(718);
                    break a;
                case 57:
                    var$2 = $rt_s(719);
                    break a;
                case 58:
                    var$2 = $rt_s(720);
                    break a;
                case 59:
                    var$2 = $rt_s(721);
                    break a;
                case 60:
                    var$2 = $rt_s(722);
                    break a;
                case 61:
                    var$2 = $rt_s(723);
                    break a;
                case 62:
                    var$2 = $rt_s(100);
                    break a;
                case 63:
                    var$2 = $rt_s(724);
                    break a;
                case 64:
                    var$2 = $rt_s(725);
                    break a;
                case 65:
                    var$2 = $rt_s(726);
                    break a;
                case 66:
                    var$2 = $rt_s(727);
                    break a;
                case 67:
                    var$2 = $rt_s(728);
                    break a;
                case 68:
                    var$2 = $rt_s(729);
                    break a;
                case 69:
                    var$2 = $rt_s(730);
                    break a;
                case 70:
                    var$2 = $rt_s(731);
                    break a;
                case 71:
                    var$2 = $rt_s(398);
                    break a;
                case 72:
                    var$2 = $rt_s(400);
                    break a;
                case 73:
                    var$2 = $rt_s(732);
                    break a;
                case 74:
                    var$2 = $rt_s(733);
                    break a;
                case 75:
                    var$2 = $rt_s(734);
                    break a;
                case 76:
                    var$2 = $rt_s(735);
                    break a;
                case 77:
                    var$2 = $rt_s(1);
                    break a;
                case 78:
                    var$2 = $rt_s(736);
                    break a;
                case 79:
                    var$2 = $rt_s(737);
                    break a;
                case 80:
                    var$2 = $rt_s(738);
                    break a;
                case 81:
                    var$2 = $rt_s(739);
                    break a;
                case 82:
                    var$2 = $rt_s(740);
                    break a;
                case 83:
                    var$2 = $rt_s(741);
                    break a;
                case 84:
                    var$2 = $rt_s(742);
                    break a;
                case 85:
                    var$2 = $rt_s(743);
                    break a;
                case 86:
                    var$2 = $rt_s(744);
                    break a;
                case 87:
                    var$2 = $rt_s(745);
                    break a;
                case 88:
                    var$2 = $rt_s(746);
                    break a;
                case 89:
                    var$2 = $rt_s(747);
                    break a;
                case 90:
                    var$2 = $rt_s(748);
                    break a;
                case 91:
                    var$2 = $rt_s(749);
                    break a;
                case 92:
                    var$2 = $rt_s(750);
                    break a;
                case 93:
                    var$2 = $rt_s(751);
                    break a;
                case 94:
                    var$2 = $rt_s(752);
                    break a;
                case 95:
                    var$2 = $rt_s(753);
                    break a;
                case 96:
                    var$2 = $rt_s(754);
                    break a;
                case 97:
                    var$2 = $rt_s(755);
                    break a;
                case 98:
                    var$2 = $rt_s(756);
                    break a;
                case 99:
                    var$2 = $rt_s(757);
                    break a;
                case 100:
                    var$2 = $rt_s(758);
                    break a;
                case 101:
                    var$2 = $rt_s(759);
                    break a;
                case 102:
                    var$2 = $rt_s(760);
                    break a;
                case 103:
                    var$2 = $rt_s(761);
                    break a;
                case 104:
                    var$2 = $rt_s(762);
                    break a;
                case 105:
                    var$2 = $rt_s(763);
                    break a;
                case 106:
                    var$2 = $rt_s(764);
                    break a;
                case 107:
                    var$2 = $rt_s(765);
                    break a;
                case 108:
                    var$2 = $rt_s(766);
                    break a;
                case 109:
                    var$2 = $rt_s(767);
                    break a;
                case 110:
                    var$2 = $rt_s(768);
                    break a;
                case 111:
                case 113:
                case 114:
                case 115:
                case 116:
                case 117:
                case 118:
                case 119:
                case 120:
                case 121:
                case 122:
                case 123:
                case 124:
                case 125:
                case 126:
                case 127:
                case 128:
                case 134:
                case 135:
                case 136:
                case 137:
                case 138:
                case 139:
                case 140:
                case 141:
                case 142:
                case 143:
                case 154:
                case 155:
                case 156:
                case 157:
                case 158:
                case 159:
                case 160:
                case 161:
                case 162:
                case 163:
                case 164:
                case 165:
                case 166:
                case 167:
                case 168:
                case 169:
                case 170:
                case 171:
                case 172:
                case 173:
                case 174:
                case 175:
                case 176:
                case 177:
                case 178:
                case 179:
                case 180:
                case 181:
                case 182:
                case 183:
                case 184:
                case 185:
                case 186:
                case 187:
                case 188:
                case 189:
                case 190:
                case 191:
                case 192:
                case 193:
                case 194:
                case 195:
                case 196:
                case 197:
                case 198:
                case 199:
                case 200:
                case 201:
                case 202:
                case 203:
                case 204:
                case 205:
                case 206:
                case 207:
                case 208:
                case 209:
                case 210:
                case 211:
                case 212:
                case 213:
                case 214:
                case 215:
                case 216:
                case 217:
                case 218:
                case 219:
                case 220:
                case 221:
                case 222:
                case 223:
                case 224:
                case 225:
                case 226:
                case 227:
                case 228:
                case 229:
                case 230:
                case 231:
                case 232:
                case 233:
                case 234:
                case 235:
                case 236:
                case 237:
                case 238:
                case 239:
                case 240:
                case 241:
                case 242:
                    break b;
                case 112:
                    var$2 = $rt_s(769);
                    break a;
                case 129:
                    var$2 = $rt_s(770);
                    break a;
                case 130:
                    var$2 = $rt_s(771);
                    break a;
                case 131:
                    var$2 = $rt_s(772);
                    break a;
                case 132:
                    var$2 = $rt_s(773);
                    break a;
                case 133:
                    var$2 = $rt_s(774);
                    break a;
                case 144:
                    var$2 = $rt_s(775);
                    break a;
                case 145:
                    var$2 = $rt_s(776);
                    break a;
                case 146:
                    var$2 = $rt_s(777);
                    break a;
                case 147:
                    var$2 = $rt_s(778);
                    break a;
                case 148:
                    var$2 = $rt_s(779);
                    break a;
                case 149:
                    var$2 = $rt_s(780);
                    break a;
                case 150:
                    var$2 = $rt_s(781);
                    break a;
                case 151:
                    var$2 = $rt_s(782);
                    break a;
                case 152:
                    var$2 = $rt_s(783);
                    break a;
                case 153:
                    var$2 = $rt_s(784);
                    break a;
                case 243:
                    var$2 = $rt_s(395);
                    break a;
                case 244:
                    var$2 = $rt_s(785);
                    break a;
                case 245:
                    var$2 = $rt_s(786);
                    break a;
                case 246:
                    var$2 = $rt_s(787);
                    break a;
                case 247:
                    var$2 = $rt_s(788);
                    break a;
                case 248:
                    var$2 = $rt_s(789);
                    break a;
                case 249:
                    var$2 = $rt_s(790);
                    break a;
                case 250:
                    var$2 = $rt_s(791);
                    break a;
                case 251:
                    var$2 = $rt_s(792);
                    break a;
                case 252:
                    var$2 = $rt_s(793);
                    break a;
                case 253:
                    var$2 = $rt_s(794);
                    break a;
                case 254:
                    var$2 = $rt_s(795);
                    break a;
                case 255:
                    var$2 = $rt_s(796);
                    break a;
                default:
                    break b;
            }
            var$2 = $rt_s(797);
            break a;
        }
        var$2 = $rt_s(6);
    }
    return var$2;
}
function okti_KB_isKeyPressed($this, $keycode) {
    var var$2;
    var$2 = okti_KB_api;
    if (var$2 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$2.$isKeyPressed($keycode);
}
function okti_KB_addListener($this, $listener) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($listener, $rt_s(469));
    var$2 = okti_KB_api;
    if (var$2 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    var$2.$addListener($listener);
}
function okti_KB_reset($this) {
    var var$1;
    var$1 = okti_KB_api;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    var$1.$reset1();
}
function okti_KB__init_0($this) {
    okti_KB_$callClinit();
    jl_Object__init_0($this);
}
function okti_KB__clinit_() {
    okti_KB_INSTANCE = okti_KB__init_();
}
function oktt_GLTFModel() {
    var a = this; jl_Object.call(a);
    a.$rotationY = 0.0;
    a.$root = null;
    a.$scene = null;
    a.$player = null;
    a.$gltf4 = null;
    a.$light = null;
    a.$rotate1 = 0;
    a.$conf = null;
    a.$response = null;
}
function oktt_GLTFModel__init_0(var_0, var_1, var_2) {
    var var_3 = new oktt_GLTFModel();
    oktt_GLTFModel__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktt_GLTFModel__init_2(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktt_GLTFModel();
    oktt_GLTFModel__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktt_GLTFModel__init_3() {
    var var_0 = new oktt_GLTFModel();
    oktt_GLTFModel__init_4(var_0);
    return var_0;
}
function oktt_GLTFModel_getRoot($this) {
    return $this.$root;
}
function oktt_GLTFModel_getScene($this) {
    return $this.$scene;
}
function oktt_GLTFModel_setScene($this, $_set___) {
    $this.$scene = $_set___;
}
function oktt_GLTFModel_getPlayer($this) {
    return $this.$player;
}
function oktt_GLTFModel_setPlayer($this, $_set___) {
    $this.$player = $_set___;
}
function oktt_GLTFModel_getGltf($this) {
    return $this.$gltf4;
}
function oktt_GLTFModel_getLight($this) {
    return $this.$light;
}
function oktt_GLTFModel_update($this, $delta) {
    var var$2;
    if ($this.$rotate1) {
        oktm_Vec4_setQuaternion(oktgn_Node_getRotation($this.$root), 0.0, 1.0, 0.0, $this.$rotationY);
        $this.$rotationY = $this.$rotationY + $delta;
    }
    var$2 = $this.$player;
    if (var$2 !== null)
        oktga_AnimPlayer_update(var$2, $delta);
    var$2 = $this.$scene;
    if (var$2 !== null)
        var$2.$update($delta);
    oktgn_ITransformNode$DefaultImpls_updateTransform$default($this.$root, 0, 1, null);
}
function oktt_GLTFModel_update$default(var$1, var$2, var$3, var$4) {
    if (var$3 & 1) {
        okt_APP_$callClinit();
        var$2 = okt_APP_getDeltaTime(okt_APP_INSTANCE);
    }
    oktt_GLTFModel_update(var$1, var$2);
}
function oktt_GLTFModel_render($this) {
    var var$1;
    var$1 = $this.$scene;
    if (var$1 !== null)
        var$1.$render0();
}
function oktt_GLTFModel_setRotate($this, $_set___) {
    $this.$rotate1 = $_set___;
}
function oktt_GLTFModel_getConf($this) {
    return $this.$conf;
}
function oktt_GLTFModel_getResponse($this) {
    return $this.$response;
}
function oktt_GLTFModel__init_1($this, $rotate, $conf, $response) {
    var var$4, var$5, var$6, var$7;
    kji_Intrinsics_checkParameterIsNotNull($conf, $rt_s(798));
    kji_Intrinsics_checkParameterIsNotNull($response, $rt_s(281));
    jl_Object__init_0($this);
    $this.$rotate1 = $rotate;
    $this.$conf = $conf;
    $this.$response = $response;
    $this.$root = oktgn_Node__init_();
    var$4 = new oktgg_GLTF;
    oktf_FS_$callClinit();
    oktgg_GLTF__init_(var$4, oktf_FS_internal(oktf_FS_INSTANCE, $rt_s(799)), null, null, 6, null);
    $this.$gltf4 = var$4;
    var$5 = oktgl_DirectionalLight__init_(0.0, null, null, null, 0, 0, 63, null);
    oktgl_DirectionalLight_setLightIntensity(var$5, 1.0);
    $this.$light = var$5;
    oktgc_ActiveCamera_$callClinit();
    var$6 = oktgc_ActiveCamera_INSTANCE;
    var$7 = oktgc_Camera__init_(null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null);
    oktgc_ICamera$DefaultImpls_lookAt$default(var$7, oktm_Vec3__init_0(1.5, 1.7999999523162842, 1.5), oktm_Vec3__init_0(0.0, 1.149999976158142, 0.0), null, 4, null);
    oktgc_Camera_setNear(var$7, 0.10000000149011612);
    oktgc_Camera_setFar(var$7, 100.0);
    var$7.$update0();
    oktgc_ActiveCamera_setApi(var$6, var$7);
    $this.$gltf4.$setConf($this.$conf);
    $this.$gltf4.$load2(oktt_GLTFModel$3__init_($this));
}
function oktt_GLTFModel__init_(var$0, var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 1)
        var$1 = 1;
    if (var$4 & 2)
        var$2 = oktgg_GLTFConf__init_1(0, 0, 0, 0, 0, 0, 0, 0, 0, 503, null);
    if (var$4 & 4) {
        oktt_GLTFModel$1_$callClinit();
        var$3 = oktt_GLTFModel$1_INSTANCE;
    }
    oktt_GLTFModel__init_1(var$0, var$1, var$2, var$3);
}
function oktt_GLTFModel__init_4(var$0) {
    oktt_GLTFModel__init_(var$0, 0, null, null, 7, null);
}
function oooi_DxSpace() {
    var a = this; oooi_DxGeom.call(a);
    a.$count1 = 0;
    a.$_first = null;
    a.$cleanup = 0;
    a.$sublevel = 0;
    a.$tls_kind = 0;
    a.$current_index = 0;
    a.$current_geom = null;
    a.$lock_count = 0;
}
var oooi_DxSpace_dSPACE_TLS_KIND_INIT_VALUE = 0;
var oooi_DxSpace_dSPACE_TLS_KIND_MANUAL_VALUE = 0;
function oooi_DxSpace_$callClinit() {
    oooi_DxSpace_$callClinit = $rt_eraseClinit(oooi_DxSpace);
    oooi_DxSpace__clinit_();
}
function oooi_DxSpace__init_(var_0) {
    var var_1 = new oooi_DxSpace();
    oooi_DxSpace__init_0(var_1, var_0);
    return var_1;
}
function oooi_DxSpace_dSpaceAdd($this, $g) {
    $this.$CHECK_NOT_LOCKED0();
    $this.$add9($g);
}
function oooi_DxSpace_swap_callback($data, $g1, $g2) {
    var $dc;
    oooi_DxSpace_$callClinit();
    $dc = $data;
    $dc.$callback.$call($dc.$data1, $g2, $g1);
}
function oooi_DxSpace_dSpaceCollide2($g1, $g2, $data, $callback) {
    var $s1, $s2, $l1, $l2, var$9, $dc, var$11, $g, var$13;
    oooi_DxSpace_$callClinit();
    oooi_Common_dAASSERT1($callback);
    $s1 = !($g1 instanceof oooi_DxSpace) ? null : $g1;
    $s2 = !($g2 instanceof oooi_DxSpace) ? null : $g2;
    if ($s1 !== null && $s2 !== null) {
        $l1 = $s1.$getSublevel();
        $l2 = $s2.$getSublevel();
        var$9 = $rt_compare($l1, $l2);
        if (var$9) {
            if (var$9 <= 0)
                $s1 = null;
            else
                $s2 = null;
        }
    }
    if ($s1 === null) {
        if ($s2 === null) {
            $g1.$recomputeAABB();
            $g2.$recomputeAABB();
            oooi_DxGeom_collideAABBs($g1, $g2, $data, $callback);
        } else {
            $dc = oooi_DxSpace$DataCallback__init_($data, $callback);
            $s2.$collide2($dc, $g1, oooi_DxSpace$2__init_());
        }
    } else if ($s2 === null)
        $s1.$collide2($data, $g2, $callback);
    else if ($s1 === $s2)
        $s1.$collide($data, $callback);
    else if ($s1.$count1 >= $s2.$count1) {
        var$11 = $s2.$getGeoms().$iterator();
        while (var$11.$hasNext()) {
            $g = var$11.$next();
            $s1.$collide2($data, $g, $callback);
        }
    } else {
        $dc = oooi_DxSpace$DataCallback__init_($data, $callback);
        var$13 = $s1.$getGeoms().$iterator();
        while (var$13.$hasNext()) {
            $g = var$13.$next();
            $s2.$collide2($dc, $g, oooi_DxSpace$1__init_());
        }
    }
}
function oooi_DxSpace__init_0($this, $_space) {
    oooi_DxSpace_$callClinit();
    oooi_DxGeom__init_0($this, $_space, 0);
    $this.$_first = null;
    $this.$count1 = 0;
    $this.$cleanup = 1;
    $this.$sublevel = 0;
    $this.$tls_kind = oooi_DxSpace_dSPACE_TLS_KIND_INIT_VALUE;
    $this.$current_index = 0;
    $this.$current_geom = null;
    $this.$lock_count = 0;
}
function oooi_DxSpace_computeAABB($this) {
    var $aabb, $g;
    if ($this.$_first === null)
        $this.$_aabb.$setZero();
    else {
        $aabb = ooo_DAABB__init_();
        $aabb.$set6(Infinity, (-Infinity), Infinity, (-Infinity), Infinity, (-Infinity));
        $g = $this.$_first;
        while ($g !== null) {
            $g.$recomputeAABB();
            $aabb.$expand($g.$getAABB());
            $g = oooi_DxGeom_getNext($g);
        }
        $this.$_aabb.$set41($aabb);
    }
}
function oooi_DxSpace_getSublevel($this) {
    return $this.$sublevel;
}
function oooi_DxSpace_getNumGeoms($this) {
    return $this.$count1;
}
function oooi_DxSpace_add($this, $geom) {
    $this.$CHECK_NOT_LOCKED0();
    oooi_Common_dUASSERT($geom.$parent_space === null && oooi_DxGeom_getNext($geom) === null ? 1 : 0, $rt_s(800));
    $geom.$parent_space = $this;
    $geom.$spaceAdd($this.$_first, $this);
    $this.$count1 = $this.$count1 + 1 | 0;
    $this.$current_geom = null;
    oooi_DxGeom_setFlagDirtyAndBad($geom);
    $this.$dGeomMoved();
}
function oooi_DxSpace_dirty($this, $geom) {
    $geom.$spaceRemove($this);
    $geom.$spaceAdd($this.$_first, $this);
}
function oooi_DxSpace_CHECK_NOT_LOCKED0($this) {
    oooi_Common_dUASSERT($this.$lock_count ? 0 : 1, $rt_s(801));
}
function oooi_DxSpace_CHECK_NOT_LOCKED($s) {
    oooi_DxSpace_$callClinit();
    oooi_Common_dUASSERT($s !== null && $s.$lock_count ? 0 : 1, $rt_s(801));
}
function oooi_DxSpace_setFirst($this, $dxGeom) {
    $this.$_first = $dxGeom;
}
function oooi_DxSpace_getGeoms($this) {
    return oooi_DxSpace$3__init_($this);
}
function oooi_DxSpace__clinit_() {
    oooi_DxSpace_dSPACE_TLS_KIND_INIT_VALUE = 0;
    oooi_DxSpace_dSPACE_TLS_KIND_MANUAL_VALUE = 0;
}
function oooi_DxHashSpace() {
    var a = this; oooi_DxSpace.call(a);
    a.$global_minlevel = 0;
    a.$global_maxlevel = 0;
}
var oooi_DxHashSpace_prime = null;
function oooi_DxHashSpace_$callClinit() {
    oooi_DxHashSpace_$callClinit = $rt_eraseClinit(oooi_DxHashSpace);
    oooi_DxHashSpace__clinit_();
}
function oooi_DxHashSpace__init_(var_0) {
    var var_1 = new oooi_DxHashSpace();
    oooi_DxHashSpace__init_0(var_1, var_0);
    return var_1;
}
function oooi_DxHashSpace_findLevel($boundsV) {
    var $q, $q2, var$4, $level;
    oooi_DxHashSpace_$callClinit();
    if (!$boundsV.$isValid())
        return 2147483647;
    $q = $boundsV.$len0();
    $q2 = $boundsV.$len1();
    if ($q2 <= $q)
        $q2 = $q;
    var$4 = $boundsV.$len2();
    if (var$4 <= $q2)
        var$4 = $q2;
    $level = oooicj_RefInt__init_();
    oooic_Cmath_frexp(var$4, $level);
    return $level.$i;
}
function oooi_DxHashSpace_getVirtualAddress($level, $x, $y, $z) {
    var $r;
    oooi_DxHashSpace_$callClinit();
    $r = ((($level * 1000 | 0) + ($x * 100 | 0) | 0) + ($y * 10 | 0) | 0) + $z | 0;
    if ($r < 2147483647)
        return jl_Math_abs1($r);
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(802)).$append1($level).$append($rt_s(803)).$append1($x).$append($rt_s(804)).$append1($y).$append($rt_s(805)).$append1($z).$toString()));
}
function oooi_DxHashSpace__init_0($this, $_space) {
    oooi_DxHashSpace_$callClinit();
    oooi_DxSpace__init_0($this, $_space);
    $this.$type0 = 11;
    $this.$global_minlevel = (-3);
    $this.$global_maxlevel = 10;
}
function oooi_DxHashSpace_cleanGeoms($this) {
    var var$1, $g;
    $this.$lock_count = $this.$lock_count + 1 | 0;
    var$1 = $this.$getGeoms().$iterator();
    a: {
        while (true) {
            if (!var$1.$hasNext())
                break a;
            $g = var$1.$next();
            if (!oooi_DxGeom_hasFlagDirty($g))
                break;
            if ($g instanceof oooi_DxSpace)
                $g.$cleanGeoms();
            $g.$recomputeAABB();
            oooi_DxGeom_unsetFlagDirtyAndBad($g);
        }
    }
    $this.$lock_count = $this.$lock_count - 1 | 0;
}
function oooi_DxHashSpace_collide($this, $data, $callback) {
    var $hash_boxes, $big_boxes, $maxlevel, var$6, $geom, $aabb, $level, $cellsize, $i, var$12, var$13, $n, $tested_rowsize, var$16, $tested, $sz, $table, var$20, $dbounds, $xi, $yi, $zi, var$25, $hi, $node, $db, var$29, var$30, $mask, $aabb2;
    oooi_Common_dAASSERT1($callback);
    if ($this.$getNumGeoms() < 2)
        return;
    $this.$lock_count = $this.$lock_count + 1 | 0;
    $this.$cleanGeoms();
    $hash_boxes = ju_ArrayList__init_();
    $big_boxes = ju_ArrayList__init_();
    $maxlevel = $this.$global_minlevel - 1 | 0;
    var$6 = $this.$getGeoms().$iterator();
    while (var$6.$hasNext()) {
        $geom = var$6.$next();
        if (!$this.$GEOM_ENABLED($geom))
            continue;
        $aabb = oooi_DxHashSpace$dxAABB__init_1(null);
        $aabb.$geom0 = $geom;
        $level = oooi_DxHashSpace_findLevel($geom.$_aabb);
        if ($level < $this.$global_minlevel)
            $level = $this.$global_minlevel;
        if ($level > $this.$global_maxlevel)
            $big_boxes.$add1($aabb);
        else {
            $aabb.$level = $level;
            if ($level > $maxlevel)
                $maxlevel = $level;
            $cellsize = oooic_Cmath_ldexp(1.0, $level);
            $i = 0;
            while ($i < 3) {
                var$12 = $aabb.$dbounds.data;
                var$13 = 2 * $i | 0;
                var$12[var$13] = jl_Math_floor($geom.$_aabb.$getMin($i) / $cellsize) | 0;
                $aabb.$dbounds.data[var$13 + 1 | 0] = jl_Math_floor($geom.$_aabb.$getMax($i) / $cellsize) | 0;
                $i = $i + 1 | 0;
            }
            $aabb.$index1 = $hash_boxes.$size();
            $hash_boxes.$add1($aabb);
        }
    }
    $n = $hash_boxes.$size();
    $tested_rowsize = ($n + 7 | 0) >> 3;
    var$16 = $rt_imul($n, $tested_rowsize);
    $tested = $rt_createIntArray(var$16);
    $i = 0;
    a: {
        while (true) {
            var$13 = $rt_compare($i, 31);
            if (var$13 >= 0)
                break a;
            if (oooi_DxHashSpace_prime.data[$i] >= (8 * $n | 0))
                break;
            $i = $i + 1 | 0;
        }
    }
    if (var$13 >= 0)
        $i = 30;
    $sz = oooi_DxHashSpace_prime.data[$i];
    $table = $rt_createArray(oooi_DxHashSpace$Node, $sz);
    var$20 = $hash_boxes.$iterator();
    while (var$20.$hasNext()) {
        $aabb = var$20.$next();
        $dbounds = $aabb.$dbounds;
        var$12 = $dbounds.data;
        $xi = var$12[0];
        while ($xi <= var$12[1]) {
            $yi = var$12[2];
            while ($yi <= var$12[3]) {
                $zi = var$12[4];
                while ($zi <= var$12[5]) {
                    var$25 = $table.data;
                    $hi = oooi_DxHashSpace_getVirtualAddress($aabb.$level, $xi, $yi, $zi) % $sz | 0;
                    $node = oooi_DxHashSpace$Node__init_(null);
                    $node.$x2 = $xi;
                    $node.$y2 = $yi;
                    $node.$z1 = $zi;
                    $node.$aabb = $aabb;
                    $node.$next5 = var$25[$hi];
                    var$25[$hi] = $node;
                    $zi = $zi + 1 | 0;
                }
                $yi = $yi + 1 | 0;
            }
            $xi = $xi + 1 | 0;
        }
    }
    $db = $rt_createIntArray(6);
    var$29 = $hash_boxes.$iterator();
    while (var$29.$hasNext()) {
        $aabb = var$29.$next();
        var$30 = 0;
        while (var$30 < 6) {
            $db.data[var$30] = $aabb.$dbounds.data[var$30];
            var$30 = var$30 + 1 | 0;
        }
        $level = $aabb.$level;
        while ($level <= $maxlevel) {
            var$25 = $db.data;
            $xi = var$25[0];
            while ($xi <= var$25[1]) {
                $yi = var$25[2];
                while ($yi <= var$25[3]) {
                    $zi = var$25[4];
                    while ($zi <= var$25[5]) {
                        var$12 = $table.data;
                        $hi = oooi_DxHashSpace_getVirtualAddress($level, $xi, $yi, $zi) % $sz | 0;
                        $node = var$12[$hi];
                        while ($node !== null) {
                            if ($node.$aabb !== $aabb && $node.$aabb.$level == $level && $node.$x2 == $xi && $node.$y2 == $yi && $node.$z1 == $zi) {
                                if ($aabb.$index1 > $node.$aabb.$index1) {
                                    var$13 = $rt_imul($node.$aabb.$index1, $tested_rowsize) + ($aabb.$index1 >> 3) | 0;
                                    $mask = 1 << ($aabb.$index1 & 7);
                                } else {
                                    var$13 = $rt_imul($aabb.$index1, $tested_rowsize) + ($node.$aabb.$index1 >> 3) | 0;
                                    $mask = 1 << ($node.$aabb.$index1 & 7);
                                }
                                var$30 = var$13 >= 0 && var$13 < var$16 ? 1 : 0;
                                var$12 = $tested.data;
                                oooi_Common_dIASSERT(var$30);
                                if (!(var$12[var$13] & $mask))
                                    oooi_DxGeom_collideAABBs($aabb.$geom0, $node.$aabb.$geom0, $data, $callback);
                                var$12[var$13] = var$12[var$13] | $mask;
                            }
                            $node = $node.$next5;
                        }
                        $zi = $zi + 1 | 0;
                    }
                    $yi = $yi + 1 | 0;
                }
                $xi = $xi + 1 | 0;
            }
            var$13 = 0;
            while (var$13 < 6) {
                var$25[var$13] = var$25[var$13] >> 1;
                var$13 = var$13 + 1 | 0;
            }
            $level = $level + 1 | 0;
        }
    }
    var$6 = $hash_boxes.$iterator();
    while (var$6.$hasNext()) {
        $aabb = var$6.$next();
        var$20 = $big_boxes.$iterator();
        while (var$20.$hasNext()) {
            $aabb2 = var$20.$next();
            oooi_DxGeom_collideAABBs($aabb.$geom0, $aabb2.$geom0, $data, $callback);
        }
    }
    var$6 = $big_boxes.$iterator();
    while (var$6.$hasNext()) {
        $aabb = var$6.$next();
        var$20 = $big_boxes.$iterator();
        while (var$20.$hasNext()) {
            $aabb2 = var$20.$next();
            oooi_DxGeom_collideAABBs($aabb.$geom0, $aabb2.$geom0, $data, $callback);
        }
    }
    $this.$lock_count = $this.$lock_count - 1 | 0;
}
function oooi_DxHashSpace_collide2($this, $data, $geom, $callback) {
    var var$4, var$5, var$6, $g;
    var$4 = $rt_createArray(jl_Object, 2);
    var$5 = var$4.data;
    var$5[0] = $geom;
    var$5[1] = $callback;
    oooi_Common_dAASSERT(var$4);
    $this.$lock_count = $this.$lock_count + 1 | 0;
    $this.$cleanGeoms();
    $geom.$recomputeAABB();
    var$6 = $this.$getGeoms().$iterator();
    while (var$6.$hasNext()) {
        $g = var$6.$next();
        if ($this.$GEOM_ENABLED($g))
            oooi_DxGeom_collideAABBs($g, $geom, $data, $callback);
    }
    $this.$lock_count = $this.$lock_count - 1 | 0;
}
function oooi_DxHashSpace_dHashSpaceCreate($space) {
    oooi_DxHashSpace_$callClinit();
    return oooi_DxHashSpace__init_($space);
}
function oooi_DxHashSpace__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(31);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 2;
    var$2[2] = 3;
    var$2[3] = 7;
    var$2[4] = 13;
    var$2[5] = 31;
    var$2[6] = 61;
    var$2[7] = 127;
    var$2[8] = 251;
    var$2[9] = 509;
    var$2[10] = 1021;
    var$2[11] = 2039;
    var$2[12] = 4093;
    var$2[13] = 8191;
    var$2[14] = 16381;
    var$2[15] = 32749;
    var$2[16] = 65521;
    var$2[17] = 131071;
    var$2[18] = 262139;
    var$2[19] = 524287;
    var$2[20] = 1048573;
    var$2[21] = 2097143;
    var$2[22] = 4194301;
    var$2[23] = 8388593;
    var$2[24] = 16777213;
    var$2[25] = 33554393;
    var$2[26] = 67108859;
    var$2[27] = 134217689;
    var$2[28] = 268435399;
    var$2[29] = 536870909;
    var$2[30] = 1073741789;
    oooi_DxHashSpace_prime = var$1;
}
function jur_ReluctantGroupQuantifierSet() {
    jur_GroupQuantifierSet.call(this);
}
function jur_ReluctantGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantGroupQuantifierSet();
    jur_ReluctantGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_ReluctantGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $res;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    $res = $this.$next0.$matches($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        return $res;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
}
function oktgg_GLTF$read$2$1() {
    kji_Lambda.call(this);
    this.$this$070 = null;
}
function oktgg_GLTF$read$2$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$2$1();
    oktgg_GLTF$read$2$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$2$1_invoke(var$0, var$1) {
    oktgg_GLTF$read$2$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$2$1_invoke0($this, $$this$objs) {
    var $buffer;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $buffer = oktgg_GLTF_createArrayElement($this.$this$070.$this$071, oktgg_GLTFArray_getName($this.$this$070.$this$071.$getBuffers()), oktgg_GLTFArray_size($this.$this$070.$this$071.$getBuffers()));
    $buffer.$read($$this$objs);
}
function oktgg_GLTF$read$2$1__init_0(var$0, var$1) {
    var$0.$this$070 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktt_IFrameBufferAttachment$DefaultImpls() {
    jl_Object.call(this);
}
function oktt_IFrameBufferAttachment$DefaultImpls_isRenderBuffer($$this) {
    return $$this.$getTarget() != 36161 ? 0 : 1;
}
function oktt_TvmGL$buffers$1() {
    kji_Lambda.call(this);
}
var oktt_TvmGL$buffers$1_INSTANCE = null;
function oktt_TvmGL$buffers$1_$callClinit() {
    oktt_TvmGL$buffers$1_$callClinit = $rt_eraseClinit(oktt_TvmGL$buffers$1);
    oktt_TvmGL$buffers$1__clinit_();
}
function oktt_TvmGL$buffers$1__init_() {
    var var_0 = new oktt_TvmGL$buffers$1();
    oktt_TvmGL$buffers$1__init_0(var_0);
    return var_0;
}
function oktt_TvmGL$buffers$1_invoke(var$0, var$1) {
    return oktt_TvmGL$buffers$1_invoke0(var$0, var$1);
}
function oktt_TvmGL$buffers$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    return oktt_TvmGL$BufferWrap__init_($it);
}
function oktt_TvmGL$buffers$1__init_0(var$0) {
    oktt_TvmGL$buffers$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktt_TvmGL$buffers$1__clinit_() {
    oktt_TvmGL$buffers$1_INSTANCE = oktt_TvmGL$buffers$1__init_();
}
function oktgg_GLTFPrimitive$read$2() {
    var a = this; kji_Lambda.call(a);
    a.$this$072 = null;
    a.$$vertexInputs = null;
    a.$$hasNormals = null;
    a.$$hasTangents = null;
}
function oktgg_GLTFPrimitive$read$2__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktgg_GLTFPrimitive$read$2();
    oktgg_GLTFPrimitive$read$2__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktgg_GLTFPrimitive$read$2_invoke(var$0, var$1) {
    oktgg_GLTFPrimitive$read$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFPrimitive$read$2_invoke0($this, $$this$get) {
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    $$this$get.$ints0(oktgg_GLTFPrimitive$read$2$1__init_($this));
}
function oktgg_GLTFPrimitive$read$2__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$this$072 = var$1;
    var$0.$$vertexInputs = var$2;
    var$0.$$hasNormals = var$3;
    var$0.$$hasTangents = var$4;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFPrimitive$read$1() {
    kji_Lambda.call(this);
    this.$this$073 = null;
}
function oktgg_GLTFPrimitive$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFPrimitive$read$1();
    oktgg_GLTFPrimitive$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFPrimitive$read$1_invoke(var$0, var$1) {
    oktgg_GLTFPrimitive$read$1_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFPrimitive$read$1_invoke0($this, $it) {
    oktgg_GLTFPrimitive_setMaterial($this.$this$073, $it);
    oktgg_GLTFPrimitive_getMesh($this.$this$073).$setMaterial(oktgg_GLTFPrimitive_getGltf($this.$this$073).$getMaterials().$get1($it).$getMaterial());
}
function oktgg_GLTFPrimitive$read$1__init_0(var$0, var$1) {
    var$0.$this$073 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function ju_LinkedHashMap$AbstractMapIterator() {
    var a = this; jl_Object.call(a);
    a.$expectedModCount = 0;
    a.$futureEntry = null;
    a.$currentEntry0 = null;
    a.$associatedMap = null;
}
function ju_LinkedHashMap$AbstractMapIterator__init_(var_0) {
    var var_1 = new ju_LinkedHashMap$AbstractMapIterator();
    ju_LinkedHashMap$AbstractMapIterator__init_0(var_1, var_0);
    return var_1;
}
function ju_LinkedHashMap$AbstractMapIterator__init_0($this, $map) {
    jl_Object__init_0($this);
    $this.$expectedModCount = $map.$modCount;
    $this.$futureEntry = ju_LinkedHashMap_access$000($map);
    $this.$associatedMap = $map;
}
function ju_LinkedHashMap$AbstractMapIterator_hasNext($this) {
    return $this.$futureEntry === null ? 0 : 1;
}
function ju_LinkedHashMap$AbstractMapIterator_checkConcurrentMod($this) {
    if ($this.$expectedModCount == $this.$associatedMap.$modCount)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
}
function ju_LinkedHashMap$AbstractMapIterator_makeNext($this) {
    ju_LinkedHashMap$AbstractMapIterator_checkConcurrentMod($this);
    if (!$this.$hasNext())
        $rt_throw(ju_NoSuchElementException__init_());
    $this.$currentEntry0 = $this.$futureEntry;
    $this.$futureEntry = $this.$futureEntry.$chainForward;
}
function ju_LinkedHashMap$EntryIterator() {
    ju_LinkedHashMap$AbstractMapIterator.call(this);
}
function ju_LinkedHashMap$EntryIterator__init_(var_0) {
    var var_1 = new ju_LinkedHashMap$EntryIterator();
    ju_LinkedHashMap$EntryIterator__init_0(var_1, var_0);
    return var_1;
}
function ju_LinkedHashMap$EntryIterator__init_0($this, $map) {
    ju_LinkedHashMap$AbstractMapIterator__init_0($this, $map);
}
function ju_LinkedHashMap$EntryIterator_next($this) {
    ju_LinkedHashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry0;
}
function ju_LinkedHashMap$EntryIterator_next0($this) {
    return $this.$next6();
}
function oktt_TvmSound$1() {
    kji_Lambda.call(this);
    this.$this$074 = null;
}
function oktt_TvmSound$1__init_(var_0) {
    var var_1 = new oktt_TvmSound$1();
    oktt_TvmSound$1__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmSound$1_invoke(var$0) {
    return oktt_TvmSound$1_invoke0(var$0);
}
function oktt_TvmSound$1_invoke0($this) {
    var var$1, var$2, $element, $source, $gain, $panner, $instance;
    var$1 = window;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(380));
    var$2 = var$1.document.createElement("audio");
    if (var$2 === null)
        $rt_throw(k_TypeCastException__init_($rt_s(806)));
    $element = var$2;
    var$2 = $rt_ustr(oktt_TvmSound_getSrc($this.$this$074));
    $element.src = var$2;
    var$2 = !!1;
    $element.autoplay = var$2;
    var$2 = oktt_TvmAL_getContext(oktt_TvmSound_getAl($this.$this$074));
    var$1 = $element;
    $source = var$2.createMediaElementSource(var$1);
    $gain = oktt_TvmAL_getContext(oktt_TvmSound_getAl($this.$this$074)).createGain();
    $panner = oktt_TvmAL_getContext(oktt_TvmSound_getAl($this.$this$074)).createStereoPanner();
    var$2 = $gain;
    $source.connect(var$2);
    var$2 = $panner;
    $gain.connect(var$2);
    var$1 = oktt_TvmAL_getContext(oktt_TvmSound_getAl($this.$this$074));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(807));
    var$2 = var$1.destination;
    $panner.connect(var$2);
    $instance = new oktt_SoundInstance;
    kji_Intrinsics_checkExpressionValueIsNotNull($source, $rt_s(808));
    kji_Intrinsics_checkExpressionValueIsNotNull($gain, $rt_s(809));
    kji_Intrinsics_checkExpressionValueIsNotNull($panner, $rt_s(810));
    oktt_SoundInstance__init_($instance, $element, $source, $gain, $panner);
    var$1 = otji_JS_functionAsObject(oktt_TvmSound$1$1__init_($this, $instance), "handleEvent");
    $element.addEventListener("ended", otji_JS_function(var$1, "handleEvent"));
    return $instance;
}
function oktt_TvmSound$1__init_0(var$0, var$1) {
    var$0.$this$074 = var$1;
    kji_Lambda__init_0(var$0, 0);
}
function oktts_SSAOBaseTest() {
    jl_Object.call(this);
}
function oktts_SSAOBaseTest__init_() {
    var var_0 = new oktts_SSAOBaseTest();
    oktts_SSAOBaseTest__init_0(var_0);
    return var_0;
}
function oktts_SSAOBaseTest_getName($this) {
    return $rt_s(811);
}
function oktts_SSAOBaseTest_testMain($this) {
    var $sceneShader, var$2, var$3, var$4, var$5, $screenQuad, $gBuffer, $ssao, var$9, var$10, $cube, $plane, $cubeMatrix, $planeMatrix;
    oktg_GL_$callClinit();
    if (oktg_GL_isGLES(oktg_GL_INSTANCE)) {
        if (oktg_GL_getGlesMajVer(oktg_GL_INSTANCE) < 3) {
            okt_APP_$callClinit();
            okt_APP_messageBox(okt_APP_INSTANCE, $rt_s(335), $rt_s(336));
            return;
        }
        if (!oktg_GL_enableExtension(oktg_GL_INSTANCE, $rt_s(337))) {
            okt_APP_$callClinit();
            okt_APP_messageBox(okt_APP_INSTANCE, $rt_s(335), $rt_s(338));
            return;
        }
    }
    $sceneShader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($sceneShader, $rt_s(812), $rt_s(813), var$2, 0, var$3, 330, var$4, 92, var$5);
    $screenQuad = oktm_ScreenQuad__init_(0.0, 0.0, 1.0, 1.0, null, null, 48, null);
    $gBuffer = oktt_GBuffer__init_(0, 0, 0, 0, 0, 31, null);
    $ssao = oktsp_SSAO__init_1(oktt_GBuffer_getColorMap($gBuffer), oktt_GBuffer_getNormalMap($gBuffer), oktt_GBuffer_getPositionMap($gBuffer), null, null, 0, 0, 120, null);
    oktgc_ActiveCamera_$callClinit();
    var$9 = oktgc_ActiveCamera_INSTANCE;
    var$2 = new oktgc_Camera;
    var$3 = oktm_Vec3__init_0(0.0, 3.0, (-3.0));
    oktm_IVec3_$callClinit();
    var$10 = oktm_IVec3$Companion_getZero(oktm_IVec3_Companion);
    oktgc_Camera__init_6(var$2, var$3, var$10, 0.10000000149011612, 100.0);
    oktgc_ActiveCamera_setApi(var$9, var$2);
    $cube = oktmb_MeshBuilder_build$default(oktmb_BoxMeshBuilder__init_(0.0, 0.0, 0.0, 7, null), null, 1, null);
    $plane = oktmb_MeshBuilder_build$default(oktmb_PlaneMeshBuilder__init_(5.0, 5.0, 0, 0, null, null, 60, null), null, 1, null);
    $cubeMatrix = oktm_Mat4__init_();
    $planeMatrix = oktm_Mat4__init_();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktts_SSAOBaseTest$testMain$1__init_($cubeMatrix, $gBuffer, $sceneShader, $cube, $planeMatrix, $plane, $ssao, $screenQuad), 1, null);
}
function oktts_SSAOBaseTest__init_0($this) {
    jl_Object__init_0($this);
}
function kt_StringsKt___StringsKt() {
    kt_StringsKt___StringsJvmKt.call(this);
}
function kt_StringsKt___StringsKt__init_() {
    var var_0 = new kt_StringsKt___StringsKt();
    kt_StringsKt___StringsKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt___StringsKt__init_0(var$0) {
    kt_StringsKt___StringsJvmKt__init_0(var$0);
}
function kt_StringsKt() {
    kt_StringsKt___StringsKt.call(this);
}
function kt_StringsKt__init_() {
    var var_0 = new kt_StringsKt();
    kt_StringsKt__init_0(var_0);
    return var_0;
}
function kt_StringsKt__init_0(var$0) {
    kt_StringsKt___StringsKt__init_0(var$0);
}
function oktt_TvmGL$GLObject() {
    jl_Object.call(this);
}
function oktt_TvmGL$GLObject__init_() {
    var var_0 = new oktt_TvmGL$GLObject();
    oktt_TvmGL$GLObject__init_0(var_0);
    return var_0;
}
function oktt_TvmGL$GLObject__init_0($this) {
    jl_Object__init_0($this);
}
function oktt_TvmGL$FrameBufferWrap() {
    oktt_TvmGL$GLObject.call(this);
    this.$gl = null;
}
function oktt_TvmGL$FrameBufferWrap__init_(var_0) {
    var var_1 = new oktt_TvmGL$FrameBufferWrap();
    oktt_TvmGL$FrameBufferWrap__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmGL$FrameBufferWrap_getGl($this) {
    return $this.$gl;
}
function oktt_TvmGL$FrameBufferWrap_getGl0(var$0) {
    return oktt_TvmGL$FrameBufferWrap_getGl(var$0);
}
function oktt_TvmGL$FrameBufferWrap__init_0($this, $gl) {
    kji_Intrinsics_checkParameterIsNotNull($gl, $rt_s(814));
    oktt_TvmGL$GLObject__init_0($this);
    $this.$gl = $gl;
}
function oooi_DxQuickStep$dxQuickStepperLocalContext() {
    var a = this; jl_Object.call(a);
    a.$m_invI0 = null;
    a.$m_jointinfos0 = null;
    a.$m_nj = 0;
    a.$m_m = 0;
    a.$m_mfb = 0;
    a.$m_mindex = null;
    a.$m_findex = null;
    a.$m_jb = null;
    a.$m_J = null;
    a.$m_Jcopy = null;
    a.$m_valid_findices = null;
}
function oooi_DxQuickStep$dxQuickStepperLocalContext__init_() {
    var var_0 = new oooi_DxQuickStep$dxQuickStepperLocalContext();
    oooi_DxQuickStep$dxQuickStepperLocalContext__init_0(var_0);
    return var_0;
}
function oooi_DxQuickStep$dxQuickStepperLocalContext__init_1(var_0) {
    var var_1 = new oooi_DxQuickStep$dxQuickStepperLocalContext();
    oooi_DxQuickStep$dxQuickStepperLocalContext__init_2(var_1, var_0);
    return var_1;
}
function oooi_DxQuickStep$dxQuickStepperLocalContext__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_valid_findices = juca_AtomicInteger__init_0();
}
function oooi_DxQuickStep$dxQuickStepperLocalContext_Initialize($this, $invI, $jointinfos, $nj, $m, $mfb, $mindex, $findex, $J, $jb, $Jcopy) {
    $this.$m_invI0 = $invI;
    $this.$m_jointinfos0 = $jointinfos;
    $this.$m_nj = $nj;
    $this.$m_m = $m;
    $this.$m_mfb = $mfb;
    juca_AtomicInteger_set($this.$m_valid_findices, 0);
    $this.$m_mindex = $mindex;
    $this.$m_findex = $findex;
    $this.$m_J = $J;
    $this.$m_jb = $jb;
    $this.$m_Jcopy = $Jcopy;
}
function oooi_DxQuickStep$dxQuickStepperLocalContext__init_2($this, $x0) {
    oooi_DxQuickStep$dxQuickStepperLocalContext__init_0($this);
}
function oktgc_OrbitCameraControl$listenToMouse$listener$1() {
    jl_Object.call(this);
    this.$this$075 = null;
}
function oktgc_OrbitCameraControl$listenToMouse$listener$1__init_(var_0) {
    var var_1 = new oktgc_OrbitCameraControl$listenToMouse$listener$1();
    oktgc_OrbitCameraControl$listenToMouse$listener$1__init_0(var_1, var_0);
    return var_1;
}
function oktgc_OrbitCameraControl$listenToMouse$listener$1_buttonDown($this, $button, $screenX, $screenY, $pointer) {
    $this.$this$075.$buttonDown1($screenX, $screenY, $button);
}
function oktgc_OrbitCameraControl$listenToMouse$listener$1_dragged($this, $screenX, $screenY, $pointer) {
    $this.$this$075.$dragged1($screenX, $screenY);
}
function oktgc_OrbitCameraControl$listenToMouse$listener$1_scrolled($this, $amount) {
    var var$2;
    var$2 = $this.$this$075;
    okti_MOUSE_$callClinit();
    var$2.$scrolled1(okti_MOUSE_getX(okti_MOUSE_INSTANCE), okti_MOUSE_getY(okti_MOUSE_INSTANCE), $amount);
}
function oktgc_OrbitCameraControl$listenToMouse$listener$1__init_0($this, $$outer) {
    $this.$this$075 = $$outer;
    jl_Object__init_0($this);
}
function oktgc_OrbitCameraControl$listenToMouse$listener$1_buttonUp($this, $button, $screenX, $screenY, $pointer) {
    okti_IMouseListener$DefaultImpls_buttonUp($this, $button, $screenX, $screenY, $pointer);
}
function oktgc_OrbitCameraControl$listenToMouse$listener$1_moved($this, $screenX, $screenY) {
    okti_IMouseListener$DefaultImpls_moved($this, $screenX, $screenY);
}
function oooi_Matrix() {
    oooi_FastDot.call(this);
}
var oooi_Matrix_D_LDLT = null;
function oooi_Matrix_$callClinit() {
    oooi_Matrix_$callClinit = $rt_eraseClinit(oooi_Matrix);
    oooi_Matrix__clinit_();
}
function oooi_Matrix__init_() {
    var var_0 = new oooi_Matrix();
    oooi_Matrix__init_0(var_0);
    return var_0;
}
function oooi_Matrix__init_0($this) {
    oooi_Matrix_$callClinit();
    oooi_FastDot__init_0($this);
}
function oooi_Matrix_dSetZero($a, $n) {
    oooi_Matrix_$callClinit();
    oooi_Common_dAASSERT0($n < 0 ? 0 : 1);
    while ($n > 0) {
        $a.data[$n - 1 | 0] = 0.0;
        $n = $n + (-1) | 0;
    }
}
function oooi_Matrix_dFactorCholesky($A) {
    var $sum, $recip0, var$4, $recip1;
    oooi_Matrix_$callClinit();
    $sum = oom_DMatrix3_get00($A);
    if ($sum <= 0.0)
        return 0;
    oom_DMatrix3_set00($A, oooi_Common_dSqrt($sum));
    $recip0 = oooi_Common_dRecip(oom_DMatrix3_get00($A));
    oom_DMatrix3_set10($A, oom_DMatrix3_get10($A) * $recip0);
    var$4 = oom_DMatrix3_get11($A) - oom_DMatrix3_get10($A) * oom_DMatrix3_get10($A);
    if (var$4 <= 0.0)
        return 0;
    oom_DMatrix3_set11($A, oooi_Common_dSqrt(var$4));
    $recip1 = oooi_Common_dRecip(oom_DMatrix3_get11($A));
    oom_DMatrix3_set20($A, oom_DMatrix3_get20($A) * $recip0);
    var$4 = oom_DMatrix3_get21($A) - oom_DMatrix3_get20($A) * oom_DMatrix3_get10($A);
    oom_DMatrix3_set21($A, var$4 * $recip1);
    var$4 = oom_DMatrix3_get22($A) - oom_DMatrix3_get20($A) * oom_DMatrix3_get20($A) - oom_DMatrix3_get21($A) * oom_DMatrix3_get21($A);
    if (var$4 <= 0.0)
        return 0;
    oom_DMatrix3_set22($A, oooi_Common_dSqrt(var$4));
    return 1;
}
function oooi_Matrix_dSolveCholesky($L, $b) {
    var $y, $sum, var$5, var$6;
    oooi_Matrix_$callClinit();
    $y = oom_DVector3__init_();
    $sum = 0.0;
    oom_DVector3_set00($y, (oom_DVector3_get($b, 0) - $sum) / $L.$get00());
    var$5 = $L.$get100() * oom_DVector3_get0($y);
    oom_DVector3_set10($y, (oom_DVector3_get($b, 1) - var$5) / $L.$get11());
    var$6 = $L.$get200() * oom_DVector3_get0($y) + $L.$get21() * oom_DVector3_get1($y);
    oom_DVector3_set20($y, (oom_DVector3_get($b, 2) - var$6) / $L.$get22());
    oom_DVector3_set20($b, (oom_DVector3_get2($y) - 0.0) / $L.$get22());
    var$6 = $L.$get21() * oom_DVector3_get2($b);
    oom_DVector3_set10($b, (oom_DVector3_get1($y) - var$6) / $L.$get11());
    var$6 = $L.$get100() * oom_DVector3_get1($b) + $L.$get200() * oom_DVector3_get2($b);
    oom_DVector3_set00($b, (oom_DVector3_get0($y) - var$6) / $L.$get00());
}
function oooi_Matrix_dInvertPDMatrix($A, $Ainv) {
    var $L, $x, $i;
    oooi_Matrix_$callClinit();
    $L = oom_DMatrix3__init_0($A);
    $x = oom_DVector3__init_();
    if (!oooi_Matrix_dFactorCholesky($L))
        return 0;
    oom_DMatrix3_setZero($Ainv);
    $i = 0;
    while ($i < 3) {
        oom_DVector3_setZero($x);
        oom_DVector3_set2($x, $i, 1.0);
        oooi_Matrix_dSolveCholesky($L, $x);
        oom_DMatrix3_setCol($Ainv, $i, $x);
        $i = $i + 1 | 0;
    }
    return 1;
}
function oooi_Matrix_dIsPositiveDefinite($A) {
    oooi_Matrix_$callClinit();
    return oooi_Matrix_dFactorCholesky($A.$clone1());
}
function oooi_Matrix__clinit_() {
    oooi_Matrix_D_LDLT = oooi_FastLDLT__init_();
}
function oktt_TvmGL$ShaderWrap() {
    oktt_TvmGL$GLObject.call(this);
    this.$gl0 = null;
}
function oktt_TvmGL$ShaderWrap__init_(var_0) {
    var var_1 = new oktt_TvmGL$ShaderWrap();
    oktt_TvmGL$ShaderWrap__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmGL$ShaderWrap_getGl($this) {
    return $this.$gl0;
}
function oktt_TvmGL$ShaderWrap_getGl0(var$0) {
    return oktt_TvmGL$ShaderWrap_getGl(var$0);
}
function oktt_TvmGL$ShaderWrap__init_0($this, $gl) {
    kji_Intrinsics_checkParameterIsNotNull($gl, $rt_s(814));
    oktt_TvmGL$GLObject__init_0($this);
    $this.$gl0 = $gl;
}
function ji_Reader() {
    jl_Object.call(this);
    this.$lock1 = null;
}
function ji_Reader__init_() {
    var var_0 = new ji_Reader();
    ji_Reader__init_0(var_0);
    return var_0;
}
function ji_Reader__init_1(var_0) {
    var var_1 = new ji_Reader();
    ji_Reader__init_2(var_1, var_0);
    return var_1;
}
function ji_Reader__init_0($this) {
    ji_Reader__init_2($this, jl_Object__init_());
}
function ji_Reader__init_2($this, $lock) {
    jl_Object__init_0($this);
    $this.$lock1 = $lock;
}
function ji_StringReader() {
    var a = this; ji_Reader.call(a);
    a.$string2 = null;
    a.$index4 = 0;
}
function ji_StringReader__init_0(var_0) {
    var var_1 = new ji_StringReader();
    ji_StringReader__init_(var_1, var_0);
    return var_1;
}
function ji_StringReader__init_($this, $string) {
    ji_Reader__init_0($this);
    if ($string !== null) {
        $this.$string2 = $string;
        return;
    }
    $rt_throw(jl_NullPointerException__init_());
}
function ji_StringReader_read($this) {
    var var$1, var$2;
    ji_StringReader_checkOpened($this);
    if ($this.$index4 >= $this.$string2.$length())
        return (-1);
    var$1 = $this.$string2;
    var$2 = $this.$index4;
    $this.$index4 = var$2 + 1 | 0;
    return var$1.$charAt(var$2);
}
function ji_StringReader_read0($this, $cbuf, $off, $len) {
    var $n, $i, var$6, var$7, var$8, var$9;
    ji_StringReader_checkOpened($this);
    if ($this.$index4 >= $this.$string2.$length())
        return (-1);
    $n = jl_Math_min($this.$string2.$length() - $this.$index4 | 0, $len);
    $i = 0;
    while ($i < $n) {
        var$6 = $cbuf.data;
        var$7 = $off + 1 | 0;
        var$8 = $this.$string2;
        var$9 = $this.$index4;
        $this.$index4 = var$9 + 1 | 0;
        var$6[$off] = var$8.$charAt(var$9);
        $i = $i + 1 | 0;
        $off = var$7;
    }
    return $n;
}
function ji_StringReader_close($this) {
    $this.$string2 = null;
}
function ji_StringReader_checkOpened($this) {
    if ($this.$string2 !== null)
        return;
    $rt_throw(ji_IOException__init_());
}
function okttp_SphereShapeTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$control1 = null;
    a.$$world = null;
    a.$$shader6 = null;
    a.$$static1 = null;
    a.$$tmp = null;
    a.$$mesh0 = null;
    a.$$static2 = null;
    a.$$static3 = null;
    a.$$dynamic = null;
}
function okttp_SphereShapeTest$testMain$1__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new okttp_SphereShapeTest$testMain$1();
    okttp_SphereShapeTest$testMain$1__init_0(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function okttp_SphereShapeTest$testMain$1_invoke(var$0) {
    okttp_SphereShapeTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttp_SphereShapeTest$testMain$1_invoke0($this) {
    var var$1;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$control1;
    okt_APP_$callClinit();
    var$1.$update(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    $this.$$world.$step(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    $this.$$shader6.$bind();
    $this.$$shader6.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $this.$$shader6.$set12($rt_s(563), $this.$$static1.$getWorldTransform($this.$$tmp));
    oktm_IMesh$DefaultImpls_render$default($this.$$mesh0, $this.$$shader6, 0, 0, 0, 0, 30, null);
    $this.$$shader6.$set12($rt_s(563), $this.$$static2.$getWorldTransform($this.$$tmp));
    oktm_IMesh$DefaultImpls_render$default($this.$$mesh0, $this.$$shader6, 0, 0, 0, 0, 30, null);
    $this.$$shader6.$set12($rt_s(563), $this.$$static3.$getWorldTransform($this.$$tmp));
    oktm_IMesh$DefaultImpls_render$default($this.$$mesh0, $this.$$shader6, 0, 0, 0, 0, 30, null);
    $this.$$shader6.$set12($rt_s(563), $this.$$dynamic.$getWorldTransform($this.$$tmp));
    oktm_IMesh$DefaultImpls_render$default($this.$$mesh0, $this.$$shader6, 0, 0, 0, 0, 30, null);
}
function okttp_SphereShapeTest$testMain$1__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9) {
    var$0.$$control1 = var$1;
    var$0.$$world = var$2;
    var$0.$$shader6 = var$3;
    var$0.$$static1 = var$4;
    var$0.$$tmp = var$5;
    var$0.$$mesh0 = var$6;
    var$0.$$static2 = var$7;
    var$0.$$static3 = var$8;
    var$0.$$dynamic = var$9;
    kji_Lambda__init_0(var$0, 0);
}
function oktgg_GLTFTexture$read$2$1() {
    kji_Lambda.call(this);
    this.$this$076 = null;
}
function oktgg_GLTFTexture$read$2$1__init_(var_0) {
    var var_1 = new oktgg_GLTFTexture$read$2$1();
    oktgg_GLTFTexture$read$2$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFTexture$read$2$1_invoke(var$0, var$1) {
    oktgg_GLTFTexture$read$2$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFTexture$read$2$1_invoke0($this, $image) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($image, $rt_s(24));
    oktgg_GLTFTexture_getTexture($this.$this$076.$this$077).$setName(oktgg_GLTFImage_getName($image));
    if (oktgg_GLTFConf_getSeparateThread(oktgg_GLTFTexture_getGltf($this.$this$076.$this$077).$getConf())) {
        oktg_GL_$callClinit();
        oktg_GL_call$default(oktg_GL_INSTANCE, null, oktgg_GLTFTexture$read$2$1$1__init_($this, $image), 1, null);
    } else {
        var$2 = oktgg_GLTFTexture_getTexture($this.$this$076.$this$077);
        oktg_GL_$callClinit();
        var$2.$setTextureHandle(oktg_GL_glGenTexture(oktg_GL_INSTANCE));
        oktt_ITexture2D$DefaultImpls_load$default1(oktgg_GLTFTexture_getTexture($this.$this$076.$this$077), oktgg_GLTFImage_getImage($image), $this.$this$076.$$minFilter.$element, $this.$this$076.$$magFilter.$element, $this.$this$076.$$sWrap.$element, $this.$this$076.$$tWrap.$element, 0.0, $this.$this$076.$$generateMipmaps, 32, null);
        oktgg_GLTFTexture_getGltf($this.$this$076.$this$077).$getTextures().$ready(oktgg_GLTFTexture_getElementIndex($this.$this$076.$this$077));
    }
}
function oktgg_GLTFTexture$read$2$1__init_0(var$0, var$1) {
    var$0.$this$076 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFTexture$read$2$2() {
    kji_Lambda.call(this);
}
var oktgg_GLTFTexture$read$2$2_INSTANCE = null;
function oktgg_GLTFTexture$read$2$2_$callClinit() {
    oktgg_GLTFTexture$read$2$2_$callClinit = $rt_eraseClinit(oktgg_GLTFTexture$read$2$2);
    oktgg_GLTFTexture$read$2$2__clinit_();
}
function oktgg_GLTFTexture$read$2$2__init_() {
    var var_0 = new oktgg_GLTFTexture$read$2$2();
    oktgg_GLTFTexture$read$2$2__init_0(var_0);
    return var_0;
}
function oktgg_GLTFTexture$read$2$2_invoke(var$0, var$1) {
    oktgg_GLTFTexture$read$2$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFTexture$read$2$2_invoke0($this, $$this$get) {
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    oktgg_GLTFTexture$read$2$2$1_$callClinit();
    $$this$get.$get16($rt_s(815), oktgg_GLTFTexture$read$2$2$1_INSTANCE);
}
function oktgg_GLTFTexture$read$2$2__init_0(var$0) {
    oktgg_GLTFTexture$read$2$2_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFTexture$read$2$2__clinit_() {
    oktgg_GLTFTexture$read$2$2_INSTANCE = oktgg_GLTFTexture$read$2$2__init_();
}
function oktgg_GLTF$Companion() {
    jl_Object.call(this);
}
function oktgg_GLTF$Companion__init_() {
    var var_0 = new oktgg_GLTF$Companion();
    oktgg_GLTF$Companion__init_0(var_0);
    return var_0;
}
function oktgg_GLTF$Companion__init_1(var_0) {
    var var_1 = new oktgg_GLTF$Companion();
    oktgg_GLTF$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$Companion_getDefaultTextureMinFilter($this) {
    return oktgg_GLTF_access$getDefaultTextureMinFilter$cp();
}
function oktgg_GLTF$Companion_getDefaultTextureMagFilter($this) {
    return oktgg_GLTF_access$getDefaultTextureMagFilter$cp();
}
function oktgg_GLTF$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktgg_GLTF$Companion__init_2($this, $$constructor_marker) {
    oktgg_GLTF$Companion__init_0($this);
}
function otci_IntegerUtil() {
    jl_Object.call(this);
}
function otci_IntegerUtil__init_() {
    var var_0 = new otci_IntegerUtil();
    otci_IntegerUtil__init_0(var_0);
    return var_0;
}
function otci_IntegerUtil__init_0($this) {
    jl_Object__init_0($this);
}
function otci_IntegerUtil_toUnsignedLogRadixString($value, $radixLog2) {
    var $radix, $mask, $sz, $chars, $pos, $target, var$9, $target_0;
    if (!$value)
        return $rt_s(674);
    $radix = 1 << $radixLog2;
    $mask = $radix - 1 | 0;
    $sz = (((32 - jl_Integer_numberOfLeadingZeros($value) | 0) + $radixLog2 | 0) - 1 | 0) / $radixLog2 | 0;
    $chars = $rt_createCharArray($sz);
    $pos = $rt_imul($sz - 1 | 0, $radixLog2);
    $target = 0;
    while ($pos >= 0) {
        var$9 = $chars.data;
        $target_0 = $target + 1 | 0;
        var$9[$target] = jl_Character_forDigit($value >>> $pos & $mask, $radix);
        $pos = $pos - $radixLog2 | 0;
        $target = $target_0;
    }
    return jl_String__init_($chars);
}
function juca_AtomicInteger() {
    var a = this; jl_Number.call(a);
    a.$value6 = 0;
    a.$version1 = 0;
}
function juca_AtomicInteger__init_0() {
    var var_0 = new juca_AtomicInteger();
    juca_AtomicInteger__init_1(var_0);
    return var_0;
}
function juca_AtomicInteger__init_(var_0) {
    var var_1 = new juca_AtomicInteger();
    juca_AtomicInteger__init_2(var_1, var_0);
    return var_1;
}
function juca_AtomicInteger__init_1($this) {
    jl_Number__init_0($this);
}
function juca_AtomicInteger__init_2($this, $value) {
    jl_Number__init_0($this);
    $this.$value6 = $value;
}
function juca_AtomicInteger_get($this) {
    return $this.$value6;
}
function juca_AtomicInteger_set($this, $newValue) {
    $this.$value6 = $newValue;
    $this.$version1 = $this.$version1 + 1 | 0;
}
function juca_AtomicInteger_getAndSet($this, $newValue) {
    var $result;
    $result = $this.$value6;
    $this.$value6 = $newValue;
    $this.$version1 = $this.$version1 + 1 | 0;
    return $result;
}
function juca_AtomicInteger_compareAndSet($this, $expect, $update) {
    if ($this.$value6 != $expect)
        return 0;
    $this.$value6 = $update;
    $this.$version1 = $this.$version1 + 1 | 0;
    return 1;
}
function juca_AtomicInteger_getAndAdd($this, $delta) {
    var $result;
    $this.$version1 = $this.$version1 + 1 | 0;
    $result = $this.$value6;
    $this.$value6 = $this.$value6 + $delta | 0;
    return $result;
}
function juca_AtomicInteger_incrementAndGet($this) {
    var var$1;
    $this.$version1 = $this.$version1 + 1 | 0;
    var$1 = $this.$value6 + 1 | 0;
    $this.$value6 = var$1;
    return var$1;
}
function juca_AtomicInteger_decrementAndGet($this) {
    var var$1;
    $this.$version1 = $this.$version1 + 1 | 0;
    var$1 = $this.$value6 - 1 | 0;
    $this.$value6 = var$1;
    return var$1;
}
function juca_AtomicInteger_addAndGet($this, $delta) {
    $this.$version1 = $this.$version1 + 1 | 0;
    $this.$value6 = $this.$value6 + $delta | 0;
    return $this.$value6;
}
function jl_Readable() {
}
function oktsg_GLSLMat3() {
    oktsg_ShaderData.call(this);
    this.$name21 = null;
}
function oktsg_GLSLMat3__init_(var_0) {
    var var_1 = new oktsg_GLSLMat3();
    oktsg_GLSLMat3__init_0(var_1, var_0);
    return var_1;
}
function oktsg_GLSLMat3_getType($this) {
    return 8;
}
function oktsg_GLSLMat3_asFloat($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(321)).$toString();
}
function oktsg_GLSLMat3_asVec2($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(322)).$toString();
}
function oktsg_GLSLMat3_asVec3($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(323)).$toString();
}
function oktsg_GLSLMat3_asVec4($this) {
    return jl_StringBuilder__init_().$append($rt_s(270)).$append($this.$getRef0()).$append($rt_s(816)).$toString();
}
function oktsg_GLSLMat3_getName($this) {
    return $this.$name21;
}
function oktsg_GLSLMat3__init_0($this, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktsg_ShaderData__init_0($this);
    $this.$name21 = $name;
}
function oktsg_GLSLMat4() {
    oktsg_ShaderData.call(this);
    this.$name22 = null;
}
function oktsg_GLSLMat4__init_(var_0) {
    var var_1 = new oktsg_GLSLMat4();
    oktsg_GLSLMat4__init_0(var_1, var_0);
    return var_1;
}
function oktsg_GLSLMat4_getType($this) {
    return 9;
}
function oktsg_GLSLMat4_asFloat($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(321)).$toString();
}
function oktsg_GLSLMat4_asVec2($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(322)).$toString();
}
function oktsg_GLSLMat4_asVec3($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(323)).$toString();
}
function oktsg_GLSLMat4_asVec4($this) {
    return jl_StringBuilder__init_().$append($this.$getRef0()).$append($rt_s(817)).$toString();
}
function oktsg_GLSLMat4_getName($this) {
    return $this.$name22;
}
function oktsg_GLSLMat4__init_0($this, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktsg_ShaderData__init_0($this);
    $this.$name22 = $name;
}
function oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD__init_() {
    var var_0 = new oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD();
    oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_collide($this, $o1, $o2, $triindices, $flags, $contacts) {
    var var$6, $c1, $c2, $maxcontacts, $triangle, var$11, $contactcount, $tempContacts, var$14, var$15, $i, $j, var$18, var$19, var$20, var$21, $tempContact, $contact;
    var$6 = $triindices.data;
    $c1 = oooi_CollisionLibccd$ccd_convex_t__init_(null);
    $c2 = oooi_CollisionLibccd$ccd_triangle_t__init_1(null);
    oooi_CollisionLibccd_ccdGeomToConvex($o1, $c1);
    oooi_CollisionLibccd_ccdGeomToObj($o2, $c2);
    $maxcontacts = $flags & 65535;
    $triangle = $rt_createArray(oom_DVector3, 3);
    var$11 = $triangle.data;
    var$11[0] = oom_DVector3__init_();
    var$11[1] = oom_DVector3__init_();
    var$11[2] = oom_DVector3__init_();
    $contactcount = 0;
    $tempContacts = ooo_DContactGeomBuffer__init_(1);
    var$14 = var$6.length;
    var$15 = 0;
    a: {
        while (var$15 < var$14) {
            $i = var$6[var$15];
            $o2.$FetchTransformedTriangle0($i, $triangle);
            $j = 0;
            while ($j < 3) {
                $c2.$vertices.data[$j].$set42(oom_DVector3_get0(var$11[$j]), oom_DVector3_get1(var$11[$j]), oom_DVector3_get2(var$11[$j]));
                $j = $j + 1 | 0;
            }
            oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_setObjPosToTriangleCenter($this, $c2);
            var$18 = oooi_CollisionLibccd_access$500();
            var$19 = oooi_CollisionLibccd_access$100();
            var$20 = oooi_CollisionLibccd_access$700();
            var$21 = oooi_CollisionLibccd_access$100();
            if (oooi_CollisionLibccd_ccdCollide($o1, $o2, $flags, $tempContacts, $c1, var$18, var$19, $c2, var$20, var$21) == 1) {
                $tempContact = ooo_DContactGeomBuffer_get0($tempContacts);
                $tempContact.$side2 = $i;
                if (oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_correctContactNormal($this, $c2, $tempContact, $triangle, $o2, $triindices)) {
                    $contactcount = oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_addUniqueContact($this, $contacts, $tempContact, $contactcount, $maxcontacts);
                    if ($flags & (-2147483648))
                        break a;
                }
            }
            var$15 = var$15 + 1 | 0;
        }
    }
    if ($contactcount == 1 && !($flags & (-2147483648))) {
        $contact = ooo_DContactGeomBuffer_get($contacts, 0);
        $o2.$FetchTransformedTriangle0($contact.$side2, $triangle);
        $contactcount = oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_addPerturbedContacts($this, $o1, $o2, $flags, $c1, $c2, $contacts, $triangle, $contact, $contactcount, $triindices);
        $i = 0;
        while ($i < $contactcount) {
            var$18 = ooo_DContactGeomBuffer_get($contacts, $i);
            oom_DVector3_safeNormalize(var$18.$normal);
            $i = $i + 1 | 0;
        }
    }
    return $contactcount;
}
function oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_setObjPosToTriangleCenter($this, $t) {
    var $j;
    oooil_CCDVec3_ccdVec3Set0($t.$pos1, 0.0, 0.0, 0.0);
    $j = 0;
    while ($j < 3) {
        oooil_CCDVec3_ccdVec3Add($t.$pos1, $t.$vertices.data[$j]);
        $j = $j + 1 | 0;
    }
    oooil_CCDVec3_ccdVec3Scale($t.$pos1, 0.3333333432674408);
}
function oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_correctContactNormal($this, $t, $contact, $triangle, $geom, $indices) {
    var $edge1, $edge2, $contactNormalToUse, $contactNormalToUse_0, $scaledContactNormal, $edgeContact, $i, $edgeAxis, var$14, $i_0, $edgeNormal, $v, $x, $y, $contactNormalToTriangleNormalAngle, $edgeAngle, $targetAngle, $angle, $q, $origContactNormal, var$26, var$27, var$28, var$29;
    $edge1 = oooil_CCDVec3$ccd_vec3_t__init_();
    $edge2 = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDVec3_ccdVec3Copy($edge1, $t.$vertices.data[1]);
    oooil_CCDVec3_ccdVec3Sub($edge1, $t.$vertices.data[0]);
    oooil_CCDVec3_ccdVec3Copy($edge2, $t.$vertices.data[2]);
    oooil_CCDVec3_ccdVec3Sub($edge2, $t.$vertices.data[1]);
    $contactNormalToUse = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDVec3_ccdVec3Cross($contactNormalToUse, $edge1, $edge2);
    if (!oooil_CCDVec3_ccdVec3Normalize($contactNormalToUse))
        return 0;
    $contactNormalToUse_0 = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDVec3_ccdVec3Set($contactNormalToUse_0, $contact.$normal);
    $scaledContactNormal = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDVec3_ccdVec3Copy($scaledContactNormal, $contactNormalToUse_0);
    oooil_CCDVec3_ccdVec3Scale($scaledContactNormal, $contact.$depth);
    $edgeContact = 0;
    $i = 0;
    a: {
        while (true) {
            if ($i >= 3)
                break a;
            $edgeAxis = oooil_CCDVec3$ccd_vec3_t__init_();
            var$14 = $t.$vertices.data;
            $i_0 = $i + 1 | 0;
            oooil_CCDVec3_ccdVec3Copy($edgeAxis, var$14[$i_0 % 3 | 0]);
            oooil_CCDVec3_ccdVec3Sub($edgeAxis, $t.$vertices.data[$i]);
            if (!oooil_CCDVec3_ccdVec3Normalize($edgeAxis))
                break;
            $edgeNormal = oooil_CCDVec3$ccd_vec3_t__init_();
            oooil_CCDVec3_ccdVec3Cross($edgeNormal, $edgeAxis, $contactNormalToUse);
            oooil_CCDVec3_ccdVec3Normalize($edgeNormal);
            $v = oooil_CCDVec3$ccd_vec3_t__init_();
            oooil_CCDVec3_ccdVec3Set($v, $contact.$pos0);
            oooil_CCDVec3_ccdVec3Sub($v, $t.$vertices.data[$i]);
            oooil_CCDVec3_ccdVec3Sub($v, $scaledContactNormal);
            if (oooil_CCDVec3_ccdVec3Dot($edgeNormal, $v) < 0.0) {
                oooil_CCDVec3_ccdVec3Set($v, $contact.$pos0);
                oooil_CCDVec3_ccdVec3Sub($v, $t.$vertices.data[$i]);
                oooil_CCDVec3_ccdVec3Add($v, $scaledContactNormal);
                if (oooil_CCDVec3_ccdVec3Dot($edgeNormal, $v) > 0.0) {
                    $x = oooil_CCDVec3_ccdVec3Dot($contactNormalToUse, $contactNormalToUse_0);
                    $y = oooil_CCDVec3_ccdVec3Dot($edgeNormal, $contactNormalToUse_0);
                    $contactNormalToTriangleNormalAngle = jl_Math_atan2($y, $x);
                    $edgeAngle = $geom.$getEdgeAngle($contact.$side2, $i);
                    $edgeContact = 1;
                    $targetAngle = $edgeAngle <= 0.0 ? 0.0 : jl_Math_min0($contactNormalToTriangleNormalAngle, $edgeAngle);
                    $angle = $targetAngle - $contactNormalToTriangleNormalAngle;
                    if ($angle === 0.0)
                        break a;
                    $q = oooil_CCDQuat$ccd_quat_t__init_();
                    oooil_CCDQuat_ccdQuatSetAngleAxis($q, $angle, $edgeAxis);
                    oooil_CCDQuat_ccdQuatRotVec($contactNormalToUse_0, $q);
                    break a;
                }
            }
            $i = $i_0;
        }
        return 0;
    }
    $origContactNormal = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDVec3_ccdVec3Set($origContactNormal, $contact.$normal);
    if ($edgeContact)
        $contactNormalToUse = $contactNormalToUse_0;
    var$26 = $contact.$normal;
    var$27 = oooil_CCDVec3_ccdVec3X($contactNormalToUse);
    var$28 = oooil_CCDVec3_ccdVec3Y($contactNormalToUse);
    var$29 = oooil_CCDVec3_ccdVec3Z($contactNormalToUse);
    oom_DVector3_set0(var$26, var$27, var$28, var$29);
    $contact.$depth = $contact.$depth * jl_Math_max0(0.0, oooil_CCDVec3_ccdVec3Dot($origContactNormal, $contactNormalToUse));
    return 1;
}
function oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_addUniqueContact($this, $contacts, $c, $contactcount, $maxcontacts) {
    var $minDepth, $unique, $k, var$8, $pc, var$10, $contact;
    $minDepth = $c.$depth;
    $unique = 1;
    $k = 0;
    var$8 = $contactcount;
    a: {
        while ($k < $contactcount) {
            $pc = ooo_DContactGeomBuffer_get($contacts, $k);
            if (jl_Math_abs(oom_DVector3_get0($c.$pos0) - oom_DVector3_get0($pc.$pos0)) < 0.0010000000474974513) {
                var$10 = $c.$pos0;
                if (jl_Math_abs(oom_DVector3_get1(var$10) - oom_DVector3_get1($pc.$pos0)) < 0.0010000000474974513) {
                    var$10 = $c.$pos0;
                    if (jl_Math_abs(oom_DVector3_get2(var$10) - oom_DVector3_get2($pc.$pos0)) < 0.0010000000474974513) {
                        oom_DVector3_add($pc.$normal, $c.$normal);
                        $pc.$depth = jl_Math_max0($pc.$depth, $c.$depth);
                        $unique = 0;
                        break a;
                    }
                }
            }
            if ($contactcount == $maxcontacts && $pc.$depth < $minDepth) {
                $minDepth = $pc.$depth;
                var$8 = $k;
            }
            $k = $k + 1 | 0;
        }
    }
    if ($unique && var$8 < $maxcontacts) {
        $contact = ooo_DContactGeomBuffer_get($contacts, var$8);
        $contact.$g1 = $c.$g1;
        $contact.$g2 = $c.$g2;
        $contact.$depth = $c.$depth;
        $contact.$side1 = $c.$side1;
        $contact.$side2 = $c.$side2;
        oom_DVector3_set($contact.$pos0, $c.$pos0);
        oom_DVector3_set($contact.$normal, $c.$normal);
        if (var$8 == $contactcount)
            $contactcount = $contactcount + 1 | 0;
    }
    return $contactcount;
}
function oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_addPerturbedContacts($this, $o1, $o2, $flags, $c1, $c2, $contacts, $triangle, $contact, $contactcount, $indices) {
    var $maxcontacts, $upAxis, $cross, $perturbed, $pos, $perturbedContacts, $q1, var$18, $q2, var$20, $perturbationAngle, $j, $qr, $p, $k, var$26, var$27, var$28, var$29, $perturbedContact;
    $maxcontacts = $flags & 65535;
    $upAxis = oom_DVector3__init_1(0.0, 1.0, 0.0);
    if (jl_Math_abs(oom_DVector3_dot($contact.$normal, $upAxis)) > 0.7)
        oom_DVector3_set0($upAxis, 0.0, 0.0, 1.0);
    $cross = oom_DVector3__init_();
    oom_DVector3_eqCross($cross, $contact.$normal, $upAxis);
    oom_DVector3_safeNormalize($cross);
    oom_DVector3_eqCross($upAxis, $cross, $contact.$normal);
    oom_DVector3_safeNormalize($upAxis);
    $perturbed = oom_DVector3__init_();
    $pos = oom_DVector3__init_0($contact.$pos0);
    $perturbedContacts = ooo_DContactGeomBuffer__init_(1);
    $q1 = $rt_createArray(oom_DQuaternion, 2);
    var$18 = $q1.data;
    var$18[0] = oom_DQuaternion__init_();
    var$18[1] = oom_DQuaternion__init_();
    $q2 = $rt_createArray(oom_DQuaternion, 2);
    var$20 = $q2.data;
    var$20[0] = oom_DQuaternion__init_();
    var$20[1] = oom_DQuaternion__init_();
    $perturbationAngle = 0.004999999888241291;
    $j = 0;
    while ($j < 2) {
        oooi_Rotation_dQFromAxisAndAngle(var$18[$j], $upAxis, $perturbationAngle);
        oooi_Rotation_dQFromAxisAndAngle(var$20[$j], $cross, $perturbationAngle);
        $perturbationAngle =  -$perturbationAngle;
        $j = $j + 1 | 0;
    }
    $qr = oom_DQuaternion__init_();
    $p = oom_DVector3__init_();
    $k = 0;
    while ($k < 4) {
        oooi_Rotation_dQMultiply0($qr, var$18[$k % 2 | 0], var$20[$k / 2 | 0]);
        $j = 0;
        while ($j < 3) {
            oom_DVector3_eqDiff($p, $triangle.data[$j], $pos);
            oooi_DxCollisionUtil_dQuatTransform($qr, $p, $perturbed);
            oom_DVector3_add($perturbed, $pos);
            $c2.$vertices.data[$j].$set42(oom_DVector3_get0($perturbed), oom_DVector3_get1($perturbed), oom_DVector3_get2($perturbed));
            $j = $j + 1 | 0;
        }
        oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_setObjPosToTriangleCenter($this, $c2);
        var$26 = oooi_CollisionLibccd_access$500();
        var$27 = oooi_CollisionLibccd_access$100();
        var$28 = oooi_CollisionLibccd_access$700();
        var$29 = oooi_CollisionLibccd_access$100();
        if (oooi_CollisionLibccd_ccdCollide($o1, $o2, $flags, $perturbedContacts, $c1, var$26, var$27, $c2, var$28, var$29) == 1) {
            $perturbedContact = ooo_DContactGeomBuffer_get0($perturbedContacts);
            $perturbedContact.$side2 = $contact.$side2;
            if (oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_correctContactNormal($this, $c2, $perturbedContact, $triangle, $o2, $indices))
                $contactcount = oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_addUniqueContact($this, $contacts, $perturbedContact, $contactcount, $maxcontacts);
        }
        $k = $k + 1 | 0;
    }
    return $contactcount;
}
function oktsp_Threshold$render$1() {
    kji_Lambda.call(this);
    this.$$inputMap = null;
}
function oktsp_Threshold$render$1__init_(var_0) {
    var var_1 = new oktsp_Threshold$render$1();
    oktsp_Threshold$render$1__init_0(var_1, var_0);
    return var_1;
}
function oktsp_Threshold$render$1_invoke(var$0, var$1) {
    oktsp_Threshold$render$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktsp_Threshold$render$1_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    $this.$$inputMap.$bind4(0);
}
function oktsp_Threshold$render$1__init_0(var$0, var$1) {
    var$0.$$inputMap = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktu_ILog() {
}
function oooi_DxConvex$CollideConvexCapsule() {
    jl_Object.call(this);
}
function oooi_DxConvex$CollideConvexCapsule__init_() {
    var var_0 = new oooi_DxConvex$CollideConvexCapsule();
    oooi_DxConvex$CollideConvexCapsule__init_0(var_0);
    return var_0;
}
function oooi_DxConvex$CollideConvexCapsule__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxConvex$CollideConvexCapsule_dCollideConvexCapsule($this, $Convex, $Capsule, $flags, $contacts, $skip) {
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    return 0;
}
function oooi_DxConvex$CollideConvexCapsule_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideConvexCapsule($o1, $o2, $flags, $contacts, 1);
}
function oktg_IScene$Companion() {
    jl_Object.call(this);
}
var oktg_IScene$Companion_Build = null;
var oktg_IScene$Companion_$$INSTANCE = null;
function oktg_IScene$Companion_$callClinit() {
    oktg_IScene$Companion_$callClinit = $rt_eraseClinit(oktg_IScene$Companion);
    oktg_IScene$Companion__clinit_();
}
function oktg_IScene$Companion__init_() {
    var var_0 = new oktg_IScene$Companion();
    oktg_IScene$Companion__init_0(var_0);
    return var_0;
}
function oktg_IScene$Companion__init_0($this) {
    oktg_IScene$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktg_IScene$Companion__clinit_() {
    oktg_IScene$Companion_$$INSTANCE = oktg_IScene$Companion__init_();
    oktg_IScene$Companion$Build$1_$callClinit();
    oktg_IScene$Companion_Build = oktg_IScene$Companion$Build$1_INSTANCE;
}
function oktgg_GLTF$destroy$1() {
    kji_Lambda.call(this);
    this.$this$078 = null;
}
function oktgg_GLTF$destroy$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$destroy$1();
    oktgg_GLTF$destroy$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$destroy$1_invoke(var$0) {
    oktgg_GLTF$destroy$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$destroy$1_invoke0($this) {
    var $i, var$2;
    $i = 0;
    var$2 = oktgg_GLTFArray_size($this.$this$078.$getTextures0());
    while ($i < var$2) {
        oktgg_GLTFTexture_destroy($this.$this$078.$getTextures0().$get1($i));
        $i = $i + 1 | 0;
    }
}
function oktgg_GLTF$destroy$1__init_0(var$0, var$1) {
    var$0.$this$078 = var$1;
    kji_Lambda__init_0(var$0, 0);
}
function jur_AbstractCharClass$LazyWord() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyWord__init_() {
    var var_0 = new jur_AbstractCharClass$LazyWord();
    jur_AbstractCharClass$LazyWord__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyWord__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyWord_computeValue($this) {
    return jur_CharClass__init_().$add0(97, 122).$add0(65, 90).$add0(48, 57).$add(95);
}
function kji_ArrayIterator() {
    var a = this; jl_Object.call(a);
    a.$index5 = 0;
    a.$array2 = null;
}
function kji_ArrayIterator__init_(var_0) {
    var var_1 = new kji_ArrayIterator();
    kji_ArrayIterator__init_0(var_1, var_0);
    return var_1;
}
function kji_ArrayIterator_next($this) {
    var var$1, var$2, var$3, $e, $$je;
    a: {
        try {
            var$1 = $this.$array2.data;
            var$2 = $this.$index5;
            $this.$index5 = var$2 + 1 | 0;
            var$3 = var$1[var$2];
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_ArrayIndexOutOfBoundsException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    $this.$index5 = $this.$index5 - 1 | 0;
    $rt_throw(ju_NoSuchElementException__init_0($e.$getMessage()));
}
function kji_ArrayIterator__init_0($this, $array) {
    kji_Intrinsics_checkParameterIsNotNull($array, $rt_s(32));
    jl_Object__init_0($this);
    $this.$array2 = $array;
}
function jur_LeafSet() {
    jur_AbstractSet.call(this);
    this.$charCount0 = 0;
}
function jur_LeafSet__init_(var_0) {
    var var_1 = new jur_LeafSet();
    jur_LeafSet__init_0(var_1, var_0);
    return var_1;
}
function jur_LeafSet__init_1() {
    var var_0 = new jur_LeafSet();
    jur_LeafSet__init_2(var_0);
    return var_0;
}
function jur_LeafSet__init_0($this, $next) {
    jur_AbstractSet__init_2($this, $next);
    $this.$charCount0 = 1;
    $this.$setType(1);
}
function jur_LeafSet__init_2($this) {
    jur_AbstractSet__init_0($this);
    $this.$charCount0 = 1;
}
function jur_LeafSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    if (($stringIndex + $this.$charCount() | 0) > $matchResult.$getRightBound()) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $shift = $this.$accepts($stringIndex, $testString);
    if ($shift < 0)
        return (-1);
    return $this.$next0.$matches($stringIndex + $shift | 0, $testString, $matchResult);
}
function jur_LeafSet_charCount($this) {
    return $this.$charCount0;
}
function jur_LeafSet_hasConsumed($this, $mr) {
    return 1;
}
function jur_SequenceSet() {
    var a = this; jur_LeafSet.call(a);
    a.$string3 = null;
    a.$leftToRight = null;
    a.$rightToLeft = null;
}
function jur_SequenceSet__init_(var_0) {
    var var_1 = new jur_SequenceSet();
    jur_SequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SequenceSet__init_0($this, $substring) {
    var $j;
    jur_LeafSet__init_2($this);
    $this.$string3 = $substring.$toString();
    $this.$charCount0 = $substring.$length();
    $this.$leftToRight = jur_SequenceSet$IntHash__init_($this.$charCount0);
    $this.$rightToLeft = jur_SequenceSet$IntHash__init_($this.$charCount0);
    $j = 0;
    while ($j < ($this.$charCount0 - 1 | 0)) {
        $this.$leftToRight.$put14($this.$string3.$charAt($j), ($this.$charCount0 - $j | 0) - 1 | 0);
        $this.$rightToLeft.$put14($this.$string3.$charAt(($this.$charCount0 - $j | 0) - 1 | 0), ($this.$charCount0 - $j | 0) - 1 | 0);
        $j = $j + 1 | 0;
    }
}
function jur_SequenceSet_accepts($this, $strIndex, $testString) {
    return !$this.$startsWith2($testString, $strIndex) ? (-1) : $this.$charCount0;
}
function jur_SequenceSet_find($this, $strIndex, $testString, $matchResult) {
    var $strLength, var$5;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex > $strLength)
            return (-1);
        var$5 = $this.$indexOf4($testString, $strIndex, $strLength);
        if (var$5 < 0)
            return (-1);
        if ($this.$next0.$matches(var$5 + $this.$charCount0 | 0, $testString, $matchResult) >= 0)
            break;
        $strIndex = var$5 + 1 | 0;
    }
    return var$5;
}
function jur_SequenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var var$5;
    while (true) {
        if ($lastIndex < $strIndex)
            return (-1);
        var$5 = $this.$lastIndexOf3($testString, $strIndex, $lastIndex);
        if (var$5 < 0)
            return (-1);
        if ($this.$next0.$matches(var$5 + $this.$charCount0 | 0, $testString, $matchResult) >= 0)
            break;
        $lastIndex = var$5 + (-1) | 0;
    }
    return var$5;
}
function jur_SequenceSet_first($this, $set) {
    var var$2, var$3, var$4, var$5, var$6;
    if ($set instanceof jur_CharSet)
        return $set.$getChar() != $this.$string3.$charAt(0) ? 0 : 1;
    if ($set instanceof jur_RangeSet)
        return $set.$accepts(0, $this.$string3.$substring(0, 1)) <= 0 ? 0 : 1;
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        a: {
            if ($this.$string3.$length() > 1) {
                var$2 = $set;
                var$3 = var$2.$getCodePoint();
                var$4 = $this.$string3.$charAt(0);
                var$2 = $this.$string3;
                var$5 = var$2.$charAt(1);
                if (var$3 == jl_Character_toCodePoint(var$4, var$5)) {
                    var$4 = 1;
                    break a;
                }
            }
            var$4 = 0;
        }
        return var$4;
    }
    b: {
        c: {
            var$2 = $set;
            if (!var$2.$contains0($this.$string3.$charAt(0))) {
                var$6 = $this.$string3;
                if (var$6.$length() <= 1)
                    break c;
                var$6 = $this.$string3;
                var$4 = jl_Character_toCodePoint(var$6.$charAt(0), $this.$string3.$charAt(1));
                if (!var$2.$contains0(var$4))
                    break c;
            }
            var$4 = 1;
            break b;
        }
        var$4 = 0;
    }
    return var$4;
}
function jur_SequenceSet_indexOf($this, $str, $i, $to) {
    var $last, $ch;
    $last = $this.$string3.$charAt($this.$charCount0 - 1 | 0);
    while (true) {
        if ($i > ($to - $this.$charCount0 | 0))
            return (-1);
        $ch = $str.$charAt(($i + $this.$charCount0 | 0) - 1 | 0);
        if ($ch == $last && $this.$startsWith2($str, $i))
            break;
        $i = $i + $this.$leftToRight.$get29($ch) | 0;
    }
    return $i;
}
function jur_SequenceSet_lastIndexOf($this, $str, $to, $i) {
    var $first, $size, $delta, $ch;
    $first = $this.$string3.$charAt(0);
    $size = $str.$length();
    $delta = ($size - $i | 0) - $this.$charCount0 | 0;
    if ($delta <= 0)
        $i = $i + $delta | 0;
    while (true) {
        if ($i < $to)
            return (-1);
        $ch = $str.$charAt($i);
        if ($ch == $first && $this.$startsWith2($str, $i))
            break;
        $i = $i - $this.$rightToLeft.$get29($ch) | 0;
    }
    return $i;
}
function jur_SequenceSet_startsWith($this, $str, $from) {
    var $i;
    $i = 0;
    while ($i < $this.$charCount0) {
        if ($str.$charAt($i + $from | 0) != $this.$string3.$charAt($i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function kc_CollectionsKt__MutableCollectionsKt() {
    kc_CollectionsKt__MutableCollectionsJVMKt.call(this);
}
function kc_CollectionsKt__MutableCollectionsKt__init_() {
    var var_0 = new kc_CollectionsKt__MutableCollectionsKt();
    kc_CollectionsKt__MutableCollectionsKt__init_0(var_0);
    return var_0;
}
function kc_CollectionsKt__MutableCollectionsKt_addAll($$this$addAll, $elements) {
    kji_Intrinsics_checkParameterIsNotNull($$this$addAll, $rt_s(818));
    kji_Intrinsics_checkParameterIsNotNull($elements, $rt_s(60));
    return $$this$addAll.$addAll(kc_ArraysKt___ArraysJvmKt_asList($elements));
}
function kc_CollectionsKt__MutableCollectionsKt__init_0(var$0) {
    kc_CollectionsKt__MutableCollectionsJVMKt__init_0(var$0);
}
function kc_CollectionsKt__ReversedViewsKt() {
    kc_CollectionsKt__MutableCollectionsKt.call(this);
}
function kc_CollectionsKt__ReversedViewsKt__init_() {
    var var_0 = new kc_CollectionsKt__ReversedViewsKt();
    kc_CollectionsKt__ReversedViewsKt__init_0(var_0);
    return var_0;
}
function kc_CollectionsKt__ReversedViewsKt__init_0(var$0) {
    kc_CollectionsKt__MutableCollectionsKt__init_0(var$0);
}
function kc_CollectionsKt___CollectionsJvmKt() {
    kc_CollectionsKt__ReversedViewsKt.call(this);
}
function kc_CollectionsKt___CollectionsJvmKt__init_() {
    var var_0 = new kc_CollectionsKt___CollectionsJvmKt();
    kc_CollectionsKt___CollectionsJvmKt__init_0(var_0);
    return var_0;
}
function kc_CollectionsKt___CollectionsJvmKt__init_0(var$0) {
    kc_CollectionsKt__ReversedViewsKt__init_0(var$0);
}
function kc_CollectionsKt___CollectionsKt() {
    kc_CollectionsKt___CollectionsJvmKt.call(this);
}
function kc_CollectionsKt___CollectionsKt__init_() {
    var var_0 = new kc_CollectionsKt___CollectionsKt();
    kc_CollectionsKt___CollectionsKt__init_0(var_0);
    return var_0;
}
function kc_CollectionsKt___CollectionsKt_elementAt($$this$elementAt, $index) {
    kji_Intrinsics_checkParameterIsNotNull($$this$elementAt, $rt_s(819));
    if ($rt_isInstance($$this$elementAt, ju_List))
        return $$this$elementAt.$get1($index);
    return kc_CollectionsKt___CollectionsKt_elementAtOrElse($$this$elementAt, $index, kc_CollectionsKt___CollectionsKt$elementAt$1__init_($index));
}
function kc_CollectionsKt___CollectionsKt_elementAtOrElse($$this$elementAtOrElse, $index, $defaultValue) {
    var var$4, $iterator, $count, $element, $count_0;
    kji_Intrinsics_checkParameterIsNotNull($$this$elementAtOrElse, $rt_s(820));
    kji_Intrinsics_checkParameterIsNotNull($defaultValue, $rt_s(821));
    if ($rt_isInstance($$this$elementAtOrElse, ju_List)) {
        var$4 = $$this$elementAtOrElse;
        return $index >= 0 && $index <= kc_CollectionsKt__CollectionsKt_getLastIndex(var$4) ? var$4.$get1($index) : $defaultValue.$invoke1(jl_Integer_valueOf($index));
    }
    if ($index < 0)
        return $defaultValue.$invoke1(jl_Integer_valueOf($index));
    $iterator = $$this$elementAtOrElse.$iterator();
    $count = 0;
    while (true) {
        if (!$iterator.$hasNext())
            return $defaultValue.$invoke1(jl_Integer_valueOf($index));
        $element = $iterator.$next();
        $count_0 = $count + 1 | 0;
        if ($index == $count)
            break;
        $count = $count_0;
    }
    return $element;
}
function kc_CollectionsKt___CollectionsKt_first($$this$first) {
    var $iterator;
    kji_Intrinsics_checkParameterIsNotNull($$this$first, $rt_s(822));
    if ($rt_isInstance($$this$first, ju_List))
        return kc_CollectionsKt___CollectionsKt_first0($$this$first);
    $iterator = $$this$first.$iterator();
    if ($iterator.$hasNext())
        return $iterator.$next();
    $rt_throw(ju_NoSuchElementException__init_0($rt_s(823)));
}
function kc_CollectionsKt___CollectionsKt_first0($$this$first) {
    kji_Intrinsics_checkParameterIsNotNull($$this$first, $rt_s(822));
    if (!$$this$first.$isEmpty())
        return $$this$first.$get1(0);
    $rt_throw(ju_NoSuchElementException__init_0($rt_s(824)));
}
function kc_CollectionsKt___CollectionsKt_getOrNull($$this$getOrNull, $index) {
    kji_Intrinsics_checkParameterIsNotNull($$this$getOrNull, $rt_s(825));
    return $index >= 0 && $index <= kc_CollectionsKt__CollectionsKt_getLastIndex($$this$getOrNull) ? $$this$getOrNull.$get1($index) : null;
}
function kc_CollectionsKt___CollectionsKt_single($$this$single) {
    var $iterator, $single;
    kji_Intrinsics_checkParameterIsNotNull($$this$single, $rt_s(613));
    if ($rt_isInstance($$this$single, ju_List))
        return kc_CollectionsKt___CollectionsKt_single0($$this$single);
    $iterator = $$this$single.$iterator();
    if (!$iterator.$hasNext())
        $rt_throw(ju_NoSuchElementException__init_0($rt_s(823)));
    $single = $iterator.$next();
    if (!$iterator.$hasNext())
        return $single;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(826)));
}
function kc_CollectionsKt___CollectionsKt_single0($$this$single) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$single, $rt_s(613));
    switch ($$this$single.$size()) {
        case 0:
            $rt_throw(ju_NoSuchElementException__init_0($rt_s(824)));
        case 1:
            break;
        default:
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(827)));
    }
    var$2 = $$this$single.$get1(0);
    return var$2;
}
function kc_CollectionsKt___CollectionsKt_sortedWith($$this$sortedWith, $comparator) {
    var var$3, var$4;
    kji_Intrinsics_checkParameterIsNotNull($$this$sortedWith, $rt_s(828));
    kji_Intrinsics_checkParameterIsNotNull($comparator, $rt_s(65));
    if (!$rt_isInstance($$this$sortedWith, ju_Collection)) {
        var$3 = kc_CollectionsKt___CollectionsKt_toMutableList($$this$sortedWith);
        kc_CollectionsKt__MutableCollectionsJVMKt_sortWith(var$3, $comparator);
        return var$3;
    }
    var$3 = $$this$sortedWith;
    if (var$3.$size() <= 1)
        return kc_CollectionsKt___CollectionsKt_toList($$this$sortedWith);
    var$4 = var$3.$toArray0($rt_createArray(jl_Object, 0));
    if (var$4 === null)
        $rt_throw(k_TypeCastException__init_($rt_s(611)));
    if (var$4 === null)
        $rt_throw(k_TypeCastException__init_($rt_s(611)));
    kc_ArraysKt___ArraysJvmKt_sortWith(var$4, $comparator);
    return kc_ArraysKt___ArraysJvmKt_asList(var$4);
}
function kc_CollectionsKt___CollectionsKt_toCollection($$this$toCollection, $destination) {
    var var$3, $item;
    kji_Intrinsics_checkParameterIsNotNull($$this$toCollection, $rt_s(829));
    kji_Intrinsics_checkParameterIsNotNull($destination, $rt_s(830));
    var$3 = $$this$toCollection.$iterator();
    while (var$3.$hasNext()) {
        $item = var$3.$next();
        $destination.$add1($item);
    }
    return $destination;
}
function kc_CollectionsKt___CollectionsKt_toList($$this$toList) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$toList, $rt_s(831));
    if (!$rt_isInstance($$this$toList, ju_Collection))
        return kc_CollectionsKt__CollectionsKt_optimizeReadOnlyList(kc_CollectionsKt___CollectionsKt_toMutableList($$this$toList));
    a: {
        var$2 = $$this$toList;
        switch (var$2.$size()) {
            case 0:
                break;
            case 1:
                var$2 = kc_CollectionsKt__CollectionsJVMKt_listOf(!$rt_isInstance($$this$toList, ju_List) ? $$this$toList.$iterator().$next() : $$this$toList.$get1(0));
                break a;
            default:
                var$2 = kc_CollectionsKt___CollectionsKt_toMutableList0(var$2);
                break a;
        }
        var$2 = kc_CollectionsKt__CollectionsKt_emptyList();
    }
    return var$2;
}
function kc_CollectionsKt___CollectionsKt_toMutableList($$this$toMutableList) {
    kji_Intrinsics_checkParameterIsNotNull($$this$toMutableList, $rt_s(832));
    if ($rt_isInstance($$this$toMutableList, ju_Collection))
        return kc_CollectionsKt___CollectionsKt_toMutableList0($$this$toMutableList);
    return kc_CollectionsKt___CollectionsKt_toCollection($$this$toMutableList, ju_ArrayList__init_());
}
function kc_CollectionsKt___CollectionsKt_toMutableList0($$this$toMutableList) {
    kji_Intrinsics_checkParameterIsNotNull($$this$toMutableList, $rt_s(832));
    return ju_ArrayList__init_0($$this$toMutableList);
}
function kc_CollectionsKt___CollectionsKt__init_0(var$0) {
    kc_CollectionsKt___CollectionsJvmKt__init_0(var$0);
}
function kc_CollectionsKt() {
    kc_CollectionsKt___CollectionsKt.call(this);
}
function kc_CollectionsKt__init_() {
    var var_0 = new kc_CollectionsKt();
    kc_CollectionsKt__init_0(var_0);
    return var_0;
}
function kc_CollectionsKt__init_0(var$0) {
    kc_CollectionsKt___CollectionsKt__init_0(var$0);
}
function ji_DataInput() {
}
function oooig_GimGeometry$aabb3f() {
    var a = this; jl_Object.call(a);
    a.$minX = 0.0;
    a.$maxX = 0.0;
    a.$minY = 0.0;
    a.$maxY = 0.0;
    a.$minZ = 0.0;
    a.$maxZ = 0.0;
}
function oooig_GimGeometry$aabb3f__init_() {
    var var_0 = new oooig_GimGeometry$aabb3f();
    oooig_GimGeometry$aabb3f__init_0(var_0);
    return var_0;
}
function oooig_GimGeometry$aabb3f__init_0($this) {
    jl_Object__init_0($this);
}
function jur_UCIRangeSet() {
    var a = this; jur_LeafSet.call(a);
    a.$chars0 = null;
    a.$alt2 = 0;
}
function jur_UCIRangeSet__init_(var_0) {
    var var_1 = new jur_UCIRangeSet();
    jur_UCIRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCIRangeSet__init_0($this, $cc) {
    jur_LeafSet__init_2($this);
    $this.$chars0 = $cc.$getInstance();
    $this.$alt2 = $cc.$alt0;
}
function jur_UCIRangeSet_accepts($this, $strIndex, $testString) {
    var var$3, var$4;
    var$3 = $this.$chars0;
    var$4 = jl_Character_toUpperCase($testString.$charAt($strIndex));
    return !var$3.$contains0(jl_Character_toLowerCase(var$4)) ? (-1) : 1;
}
function oooi_DxCapsule$CollideCapsuleBox() {
    jl_Object.call(this);
}
function oooi_DxCapsule$CollideCapsuleBox__init_() {
    var var_0 = new oooi_DxCapsule$CollideCapsuleBox();
    oooi_DxCapsule$CollideCapsuleBox__init_0(var_0);
    return var_0;
}
function oooi_DxCapsule$CollideCapsuleBox__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxCapsule$CollideCapsuleBox_dCollideCapsuleBox($this, $o1, $o2, $flags, $contacts, $skip) {
    var $p1, $p2, $clen, $radius, $c, $R, $side, $pl, $pb, $mindist, $normal, $depth, $code, $radiusMul2, $capboxside, var$21, var$22, $num, $i, $cC;
    oooi_Common_dIASSERT($skip != 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    ooo_DContactGeomBuffer_get($contacts, 0).$g1 = $o1;
    ooo_DContactGeomBuffer_get($contacts, 0).$g2 = $o2;
    ooo_DContactGeomBuffer_get($contacts, 0).$side1 = (-1);
    ooo_DContactGeomBuffer_get($contacts, 0).$side2 = (-1);
    $p1 = oom_DVector3__init_();
    $p2 = oom_DVector3__init_();
    $clen = oooi_DxCapsule_access$000($o1) * 0.5;
    oom_DVector3_eqSum0($p1, $o1.$final_posr().$pos(), $o1.$final_posr().$R().$columnAsNewVector(2), $clen);
    oom_DVector3_eqSum0($p2, $o1.$final_posr().$pos(), $o1.$final_posr().$R().$columnAsNewVector(2),  -$clen);
    $radius = oooi_DxCapsule_access$100($o1);
    $c = $o2.$final_posr().$pos();
    $R = $o2.$final_posr().$R();
    $side = $o2.$side;
    $pl = oom_DVector3__init_();
    $pb = oom_DVector3__init_();
    oooi_DxCollisionUtil_dClosestLineBoxPoints($p1, $p2, $c, $R, $side, $pl, $pb);
    $mindist = 1.0E-15;
    if (oom_DVector3_distance($pl, $pb) >= $mindist)
        return oooi_DxCollisionUtil_dCollideSpheres($pl, $radius, $pb, 0.0, $contacts);
    $normal = oom_DVector3__init_();
    $depth = oooicj_RefDouble__init_0();
    $code = oooicj_RefInt__init_();
    $radiusMul2 = $radius * 2.0;
    $capboxside = oom_DVector3__init_1($radiusMul2, $radiusMul2, oooi_DxCapsule_access$000($o1) + $radiusMul2);
    var$21 = $o1.$final_posr().$pos();
    var$22 = $o1.$final_posr().$R();
    $num = oooi_DxBox_dBoxBox($c, $R, $side, var$21, var$22, $capboxside, $normal, $depth, $code, $flags, $contacts, $skip);
    $i = 0;
    while ($i < $num) {
        $cC = ooo_DContactGeomBuffer_get($contacts, $rt_imul($i, $skip));
        oom_DVector3_set($cC.$normal, $normal);
        $cC.$g1 = $o1;
        $cC.$g2 = $o2;
        $cC.$side1 = (-1);
        $cC.$side2 = (-1);
        $i = $i + 1 | 0;
    }
    return $num;
}
function oooi_DxCapsule$CollideCapsuleBox_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideCapsuleBox($o1, $o2, $flags, $contacts, 1);
}
function oktt_TvmFile$readText$1() {
    var a = this; jl_Object.call(a);
    a.$$xhr0 = null;
    a.$$response0 = null;
}
function oktt_TvmFile$readText$1__init_(var_0, var_1) {
    var var_2 = new oktt_TvmFile$readText$1();
    oktt_TvmFile$readText$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktt_TvmFile$readText$1_run($this) {
    var var$1, var$2, var$3, var$4;
    var$1 = $this.$$xhr0;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(401));
    if (var$1.readyState == 4) {
        var$1 = $this.$$response0;
        var$2 = $this.$$xhr0;
        kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(401));
        var$3 = jl_Integer_valueOf(var$2.status);
        var$4 = $this.$$xhr0;
        kji_Intrinsics_checkExpressionValueIsNotNull(var$4, $rt_s(401));
        var$4 = $rt_str(var$4.responseText);
        kji_Intrinsics_checkExpressionValueIsNotNull(var$4, $rt_s(833));
        var$1.$invoke11(var$3, var$4);
    }
}
function oktt_TvmFile$readText$1__init_0(var$0, var$1, var$2) {
    var$0.$$xhr0 = var$1;
    var$0.$$response0 = var$2;
    jl_Object__init_0(var$0);
}
function oktgg_GLTFSourceType() {
    jl_Enum.call(this);
}
var oktgg_GLTFSourceType_None = null;
var oktgg_GLTFSourceType_GLTFFile = null;
var oktgg_GLTFSourceType_GLBFile = null;
var oktgg_GLTFSourceType_JSON = null;
var oktgg_GLTFSourceType_LittleEndianInputStream = null;
var oktgg_GLTFSourceType_$VALUES = null;
function oktgg_GLTFSourceType_$callClinit() {
    oktgg_GLTFSourceType_$callClinit = $rt_eraseClinit(oktgg_GLTFSourceType);
    oktgg_GLTFSourceType__clinit_();
}
function oktgg_GLTFSourceType__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFSourceType();
    oktgg_GLTFSourceType__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFSourceType__clinit_() {
    var var$1, var$2, var$3;
    var$1 = $rt_createArray(oktgg_GLTFSourceType, 5);
    var$2 = var$1.data;
    var$3 = oktgg_GLTFSourceType__init_($rt_s(834), 0);
    oktgg_GLTFSourceType_None = var$3;
    var$2[0] = var$3;
    var$3 = oktgg_GLTFSourceType__init_($rt_s(835), 1);
    oktgg_GLTFSourceType_GLTFFile = var$3;
    var$2[1] = var$3;
    var$3 = oktgg_GLTFSourceType__init_($rt_s(836), 2);
    oktgg_GLTFSourceType_GLBFile = var$3;
    var$2[2] = var$3;
    var$3 = oktgg_GLTFSourceType__init_($rt_s(837), 3);
    oktgg_GLTFSourceType_JSON = var$3;
    var$2[3] = var$3;
    var$3 = oktgg_GLTFSourceType__init_($rt_s(838), 4);
    oktgg_GLTFSourceType_LittleEndianInputStream = var$3;
    var$2[4] = var$3;
    oktgg_GLTFSourceType_$VALUES = var$1;
}
function oktgg_GLTFSourceType__init_0($this, $$enum_name_or_ordinal$0, $$enum_name_or_ordinal$1) {
    oktgg_GLTFSourceType_$callClinit();
    jl_Enum__init_0($this, $$enum_name_or_ordinal$0, $$enum_name_or_ordinal$1);
}
function oktgg_GLTFSourceType_values() {
    oktgg_GLTFSourceType_$callClinit();
    return oktgg_GLTFSourceType_$VALUES.$clone();
}
function oktf_IFile() {
}
function oktt_TvmFile() {
    jl_Object.call(this);
    this.$path = null;
}
function oktt_TvmFile__init_(var_0) {
    var var_1 = new oktt_TvmFile();
    oktt_TvmFile__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmFile_child($this, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    return oktt_TvmFile__init_(kt_StringsKt__StringsKt_endsWith$default0(oktt_TvmFile_getPath($this), 47, 0, 2, null) ? jl_StringBuilder__init_().$append(oktt_TvmFile_getPath($this)).$append($name).$toString() : jl_StringBuilder__init_().$append(oktt_TvmFile_getPath($this)).$append12(47).$append($name).$toString());
}
function oktt_TvmFile_parent($this) {
    if (kji_Intrinsics_areEqual(oktt_TvmFile_getPath($this), oktt_TvmFile_getName($this)))
        $rt_throw(jl_IllegalStateException__init_($rt_s(839)));
    return oktt_TvmFile__init_(kt_StringsKt__StringsKt_removeSuffix(oktt_TvmFile_getPath($this), oktt_TvmFile_getName($this)));
}
function oktt_TvmFile_read($this) {
    $rt_throw(k_NotImplementedError__init_0(jl_StringBuilder__init_().$append($rt_s(840)).$append($rt_s(841)).$toString()));
}
function oktt_TvmFile_readText($this, $charset, $response) {
    var $xhr, var$4;
    kji_Intrinsics_checkParameterIsNotNull($charset, $rt_s(842));
    kji_Intrinsics_checkParameterIsNotNull($response, $rt_s(281));
    $xhr = new XMLHttpRequest();
    var$4 = oktt_TvmFile_getPath($this);
    $xhr.open("GET", $rt_ustr(var$4), !!1);
    otja_XMLHttpRequest_onComplete$static($xhr, oktt_TvmFile$readText$1__init_($xhr, $response));
    $xhr.send();
}
function oktt_TvmFile_readBytes($this, $response) {
    var $xhr, var$3, var$4;
    kji_Intrinsics_checkParameterIsNotNull($response, $rt_s(281));
    $xhr = new XMLHttpRequest();
    var$3 = oktt_TvmFile_getPath($this);
    $xhr.open("GET", $rt_ustr(var$3), !!1);
    kji_Intrinsics_checkExpressionValueIsNotNull($xhr, $rt_s(401));
    var$4 = "arraybuffer";
    $xhr.responseType = var$4;
    otja_XMLHttpRequest_onComplete$static($xhr, oktt_TvmFile$readBytes$1__init_($xhr, $response));
    $xhr.send();
}
function oktt_TvmFile_getPath($this) {
    return $this.$path;
}
function oktt_TvmFile__init_0($this, $path) {
    kji_Intrinsics_checkParameterIsNotNull($path, $rt_s(404));
    jl_Object__init_0($this);
    $this.$path = $path;
}
function oktt_TvmFile_getExtension($this) {
    return oktf_IFile$DefaultImpls_getExtension($this);
}
function oktt_TvmFile_getName($this) {
    return oktf_IFile$DefaultImpls_getName($this);
}
function jl_Boolean() {
    jl_Object.call(this);
    this.$value7 = 0;
}
var jl_Boolean_TRUE = null;
var jl_Boolean_FALSE = null;
var jl_Boolean_TYPE = null;
function jl_Boolean_$callClinit() {
    jl_Boolean_$callClinit = $rt_eraseClinit(jl_Boolean);
    jl_Boolean__clinit_();
}
function jl_Boolean__init_(var_0) {
    var var_1 = new jl_Boolean();
    jl_Boolean__init_0(var_1, var_0);
    return var_1;
}
function jl_Boolean__init_0($this, $value) {
    jl_Boolean_$callClinit();
    jl_Object__init_0($this);
    $this.$value7 = $value;
}
function jl_Boolean_compareTo($this, $other) {
    return jl_Boolean_compare($this.$value7, $other.$value7);
}
function jl_Boolean_compare($x, $y) {
    jl_Boolean_$callClinit();
    a: {
        if (!$x) {
            if (!$y)
                break a;
            return (-1);
        }
        if (!$y)
            return 1;
    }
    return 0;
}
function jl_Boolean_parseBoolean($s) {
    jl_Boolean_$callClinit();
    return $s !== null && $s.$toLowerCase1().$equals0($rt_s(843)) ? 1 : 0;
}
function jl_Boolean_booleanValue($this) {
    return $this.$value7;
}
function jl_Boolean_valueOf($value) {
    jl_Boolean_$callClinit();
    return !$value ? jl_Boolean_FALSE : jl_Boolean_TRUE;
}
function jl_Boolean_valueOf0($value) {
    jl_Boolean_$callClinit();
    return jl_Boolean_valueOf(jl_Boolean_parseBoolean($value));
}
function jl_Boolean_hashCode($this) {
    return !$this.$value7 ? 1237 : 1231;
}
function jl_Boolean_equals($this, $obj) {
    if ($this === $obj)
        return 1;
    return $obj instanceof jl_Boolean && $obj.$value7 == $this.$value7 ? 1 : 0;
}
function jl_Boolean_compareTo0($this, var$1) {
    return $this.$compareTo5(var$1);
}
function jl_Boolean__clinit_() {
    jl_Boolean_TRUE = jl_Boolean__init_(1);
    jl_Boolean_FALSE = jl_Boolean__init_(0);
    jl_Boolean_TYPE = $rt_cls($rt_booleancls());
}
function ju_NoSuchElementException() {
    jl_RuntimeException.call(this);
}
function ju_NoSuchElementException__init_() {
    var var_0 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_1(var_0);
    return var_0;
}
function ju_NoSuchElementException__init_0(var_0) {
    var var_1 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_2(var_1, var_0);
    return var_1;
}
function ju_NoSuchElementException__init_1($this) {
    jl_RuntimeException__init_1($this);
}
function ju_NoSuchElementException__init_2($this, $message) {
    jl_RuntimeException__init_2($this, $message);
}
function oooicj_RefBoolean() {
    jl_Object.call(this);
    this.$b = 0;
}
function oooicj_RefBoolean__init_(var_0) {
    var var_1 = new oooicj_RefBoolean();
    oooicj_RefBoolean__init_0(var_1, var_0);
    return var_1;
}
function oooicj_RefBoolean__init_0($this, $b) {
    jl_Object__init_0($this);
    $this.$b = $b;
}
function oooicj_RefBoolean_set($this, $b) {
    $this.$b = $b;
}
function oooicj_RefBoolean_get($this) {
    return $this.$b;
}
function oktt_TvmGL$VertexArrayWrap() {
    oktt_TvmGL$GLObject.call(this);
    this.$gl1 = null;
}
function oktt_TvmGL$VertexArrayWrap__init_(var_0) {
    var var_1 = new oktt_TvmGL$VertexArrayWrap();
    oktt_TvmGL$VertexArrayWrap__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmGL$VertexArrayWrap_getGl($this) {
    return $this.$gl1;
}
function oktt_TvmGL$VertexArrayWrap_getGl0(var$0) {
    return oktt_TvmGL$VertexArrayWrap_getGl(var$0);
}
function oktt_TvmGL$VertexArrayWrap__init_0($this, $gl) {
    kji_Intrinsics_checkParameterIsNotNull($gl, $rt_s(814));
    oktt_TvmGL$GLObject__init_0($this);
    $this.$gl1 = $gl;
}
function jur_CIBackReferenceSet() {
    var a = this; jur_JointSet.call(a);
    a.$referencedGroup = 0;
    a.$consCounter0 = 0;
}
function jur_CIBackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_CIBackReferenceSet();
    jur_CIBackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_JointSet__init_0($this);
    $this.$referencedGroup = $groupIndex;
    $this.$consCounter0 = $consCounter;
}
function jur_CIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $i, var$6, var$7;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $i = 0;
        while (true) {
            if ($i >= $group.$length()) {
                $matchResult.$setConsumed($this.$consCounter0, $group.$length());
                return $this.$next0.$matches($stringIndex + $group.$length() | 0, $testString, $matchResult);
            }
            var$6 = $group.$charAt($i);
            var$7 = $stringIndex + $i | 0;
            if (var$6 != $testString.$charAt(var$7) && jur_Pattern_getSupplement($group.$charAt($i)) != $testString.$charAt(var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
}
function jur_CIBackReferenceSet_setNext($this, $next) {
    $this.$next0 = $next;
}
function jur_CIBackReferenceSet_getString($this, $matchResult) {
    var $res;
    $res = $matchResult.$getGroupNoCheck($this.$referencedGroup);
    return $res;
}
function jur_CIBackReferenceSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter0) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter0, (-1));
    return $res;
}
function jur_BackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
}
function jur_BackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_BackReferenceSet();
    jur_BackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_BackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter);
}
function jur_BackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $shift;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $shift = !$testString.$toString().$startsWith($group, $stringIndex) ? (-1) : $group.$length();
        if ($shift < 0)
            return (-1);
        $matchResult.$setConsumed($this.$consCounter0, $shift);
        return $this.$next0.$matches($stringIndex + $shift | 0, $testString, $matchResult);
    }
    return (-1);
}
function jur_BackReferenceSet_find($this, $strIndex, $testString, $matchResult) {
    var $group, $strLength, $testStr, var$7;
    $group = $this.$getString($matchResult);
    $strLength = $matchResult.$getLeftBound();
    if ($group !== null && ($strIndex + $group.$length() | 0) <= $strLength) {
        $testStr = $testString.$toString();
        while (true) {
            if ($strIndex > $strLength)
                return (-1);
            var$7 = $testStr.$indexOf1($group, $strIndex);
            if (var$7 < 0)
                return (-1);
            if ($this.$next0.$matches(var$7 + $group.$length() | 0, $testString, $matchResult) >= 0)
                break;
            $strIndex = var$7 + 1 | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_BackReferenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $group, $testStr, var$7;
    $group = $this.$getString($matchResult);
    if ($group === null)
        return (-1);
    $testStr = $testString.$toString();
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf1($group, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$next0.$matches(var$7 + $group.$length() | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_BackReferenceSet_first($this, $set) {
    return 1;
}
function oktgg_GLTF$load$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$079 = null;
    a.$$response1 = null;
    a.$$gltfFile = null;
}
function oktgg_GLTF$load$1__init_(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTF$load$1();
    oktgg_GLTF$load$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTF$load$1_invoke(var$0, var$1, var$2) {
    oktgg_GLTF$load$1_invoke0(var$0, var$1.$intValue(), var$2);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$load$1_invoke0($this, $status, $obj) {
    var var$3;
    kji_Intrinsics_checkParameterIsNotNull($obj, $rt_s(329));
    oktn_NET_$callClinit();
    if (oktn_NET_isSuccess(oktn_NET_INSTANCE, $status)) {
        var$3 = $this.$this$079;
        oktj_JSON_$callClinit();
        var$3.$read(oktj_JSON_parseObject(oktj_JSON_INSTANCE, $obj));
        $this.$$response1.$invoke1(jl_Integer_valueOf($status));
    } else {
        oktu_LOG_$callClinit();
        oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append($this.$$gltfFile.$getPath()).$append($rt_s(844)).$append1($status).$toString(), null, 2, null);
    }
}
function oktgg_GLTF$load$1__init_0(var$0, var$1, var$2, var$3) {
    var$0.$this$079 = var$1;
    var$0.$$response1 = var$2;
    var$0.$$gltfFile = var$3;
    kji_Lambda__init_0(var$0, 2);
}
function oooi_CollideTrimeshCCylinder() {
    jl_Object.call(this);
}
function oooi_CollideTrimeshCCylinder__init_() {
    var var_0 = new oooi_CollideTrimeshCCylinder();
    oooi_CollideTrimeshCCylinder__init_0(var_0);
    return var_0;
}
function oooi_CollideTrimeshCCylinder__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollideTrimeshCCylinder_dCollideCCTL($this, $o1, $o2, $flags, $contacts, $skip) {
    var var$6, $TriMesh, $pRot, $pDst, var$10, $vCapsuleRadius, $fCapsuleSize, var$13, $capsule, $trimeshcontacts, $ptrimeshcontacts, $contactcount, $i, $pcontact;
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    var$6 = $flags & 65535;
    oooi_Common_dIASSERT(var$6 < 1 ? 0 : 1);
    $TriMesh = $o1;
    $pRot = $o2.$getRotation2();
    $pDst = $o2.$getPosition2();
    var$10 = $pRot.$columnAsNewVector(2);
    $vCapsuleRadius = $o2.$getRadius();
    $fCapsuleSize = $o2.$getLength();
    var$13 = $fCapsuleSize * 0.5;
    $capsule = oooig_GimTrimeshCapsuleCollision$GIM_CAPSULE_DATA__init_();
    $capsule.$m_radius = $vCapsuleRadius;
    oooi_CollideTrimeshCCylinder_VEC_SCALE($capsule.$m_point1, var$13, var$10);
    oooi_CollideTrimeshCCylinder_VEC_SUM($capsule.$m_point1, $pDst, $capsule.$m_point1);
    oooi_CollideTrimeshCCylinder_VEC_SCALE($capsule.$m_point2,  -var$13, var$10);
    oooi_CollideTrimeshCCylinder_VEC_SUM($capsule.$m_point2, $pDst, $capsule.$m_point2);
    $trimeshcontacts = oooig_GimContact_GIM_CREATE_CONTACT_LIST();
    $TriMesh.$m_collision_trimesh.$gim_trimesh_capsule_collision($capsule, $trimeshcontacts);
    if (!$trimeshcontacts.$size()) {
        $trimeshcontacts.$GIM_DYNARRAY_DESTROY();
        return 0;
    }
    $ptrimeshcontacts = $trimeshcontacts.$GIM_DYNARRAY_POINTER_V();
    $contactcount = $trimeshcontacts.$size();
    if ($contactcount <= var$6)
        var$6 = $contactcount;
    else {
        ooo_OdeConfig_$callClinit();
        if (ooo_OdeConfig_ENABLE_CONTACT_SORTING)
            ju_Arrays_sort0($trimeshcontacts.$GIM_DYNARRAY_POINTER(), 0, $contactcount, oooi_CollideTrimeshCCylinder$1__init_($this));
    }
    $i = 0;
    while ($i < var$6) {
        $pcontact = ooo_DContactGeomBuffer_getSafe($contacts, $flags, $i);
        $pcontact.$pos0.$set14($ptrimeshcontacts.$at0().$getPoint().$f);
        $pcontact.$normal.$set14($ptrimeshcontacts.$at0().$getNormal1().$f);
        $pcontact.$depth = $ptrimeshcontacts.$at0().$getDepth0();
        $pcontact.$g1 = $TriMesh;
        $pcontact.$g2 = $o2;
        $pcontact.$side1 = $ptrimeshcontacts.$at0().$getFeature1();
        $pcontact.$side2 = (-1);
        $ptrimeshcontacts.$inc0();
        $i = $i + 1 | 0;
    }
    $trimeshcontacts.$GIM_DYNARRAY_DESTROY();
    return var$6;
}
function oooi_CollideTrimeshCCylinder_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideCCTL($o1, $o2, $flags, $contacts, 1);
}
function oooi_CollideTrimeshCCylinder_VEC_SCALE($c, $a, $x) {
    $c.$f.data[0] = $a * $x.$get01();
    $c.$f.data[1] = $a * $x.$get10();
    $c.$f.data[2] = $a * $x.$get20();
}
function oooi_CollideTrimeshCCylinder_VEC_SUM($v21, $v2, $v1) {
    $v21.$f.data[0] = $v2.$get01() + $v1.$f.data[0];
    $v21.$f.data[1] = $v2.$get10() + $v1.$f.data[1];
    $v21.$f.data[2] = $v2.$get20() + $v1.$f.data[2];
}
function oktsg_GLSLFloat() {
    oktsg_ShaderData.call(this);
    this.$name23 = null;
}
function oktsg_GLSLFloat__init_(var_0) {
    var var_1 = new oktsg_GLSLFloat();
    oktsg_GLSLFloat__init_0(var_1, var_0);
    return var_1;
}
function oktsg_GLSLFloat_getType($this) {
    return 3;
}
function oktsg_GLSLFloat_asFloat($this) {
    return $this.$getRef0();
}
function oktsg_GLSLFloat_asVec2($this) {
    return jl_StringBuilder__init_().$append($rt_s(267)).$append($this.$getRef0()).$append12(41).$toString();
}
function oktsg_GLSLFloat_asVec3($this) {
    return jl_StringBuilder__init_().$append($rt_s(269)).$append($this.$getRef0()).$append12(41).$toString();
}
function oktsg_GLSLFloat_asVec4($this) {
    return jl_StringBuilder__init_().$append($rt_s(270)).$append($this.$getRef0()).$append12(41).$toString();
}
function oktsg_GLSLFloat_getName($this) {
    return $this.$name23;
}
function oktsg_GLSLFloat__init_0($this, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktsg_ShaderData__init_0($this);
    $this.$name23 = $name;
}
function oktmb_SphereMeshBuilder() {
    var a = this; oktmb_MeshBuilder.call(a);
    a.$radius3 = 0.0;
    a.$hDivisions = 0;
    a.$vDivisions = 0;
}
function oktmb_SphereMeshBuilder__init_(var_0, var_1, var_2) {
    var var_3 = new oktmb_SphereMeshBuilder();
    oktmb_SphereMeshBuilder__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktmb_SphereMeshBuilder__init_1(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktmb_SphereMeshBuilder();
    oktmb_SphereMeshBuilder__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktmb_SphereMeshBuilder__init_3() {
    var var_0 = new oktmb_SphereMeshBuilder();
    oktmb_SphereMeshBuilder__init_4(var_0);
    return var_0;
}
function oktmb_SphereMeshBuilder_build($this, $out) {
    var $pi, $pi2, $hNum, $vNum;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $pi = 3.1415927410125732;
    $pi2 = 6.2831854820251465;
    $hNum = $this.$hDivisions + 1 | 0;
    $vNum = $this.$vDivisions + 1 | 0;
    $out.$setVertices(oktmb_MeshBuilder_createVerticesFloat($this, $rt_imul($hNum, $vNum), oktmb_SphereMeshBuilder$build$1__init_($this, $vNum, $pi, $hNum, $pi2)));
    $out.$setIndices(oktmb_MeshBuilder_createIndicesShort($this, $rt_imul(6 * ($this.$hDivisions + 1 | 0) | 0, $this.$vDivisions + 1 | 0), oktmb_SphereMeshBuilder$build$2__init_($this)));
    return oktmb_MeshBuilder_build($this, $out);
}
function oktmb_SphereMeshBuilder_getRadius($this) {
    return $this.$radius3;
}
function oktmb_SphereMeshBuilder_getHDivisions($this) {
    return $this.$hDivisions;
}
function oktmb_SphereMeshBuilder_getVDivisions($this) {
    return $this.$vDivisions;
}
function oktmb_SphereMeshBuilder__init_0($this, $radius, $hDivisions, $vDivisions) {
    oktmb_MeshBuilder__init_0($this);
    $this.$radius3 = $radius;
    $this.$hDivisions = $hDivisions;
    $this.$vDivisions = $vDivisions;
}
function oktmb_SphereMeshBuilder__init_2(var$0, var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 1)
        var$1 = 1.0;
    if (var$4 & 2)
        var$2 = 16;
    if (var$4 & 4)
        var$3 = 16;
    oktmb_SphereMeshBuilder__init_0(var$0, var$1, var$2, var$3);
}
function oktmb_SphereMeshBuilder__init_4(var$0) {
    oktmb_SphereMeshBuilder__init_2(var$0, 0.0, 0, 0, 7, null);
}
function ju_Arrays() {
    jl_Object.call(this);
}
function ju_Arrays__init_() {
    var var_0 = new ju_Arrays();
    ju_Arrays__init_0(var_0);
    return var_0;
}
function ju_Arrays__init_0($this) {
    jl_Object__init_0($this);
}
function ju_Arrays_copyOf($array, $length) {
    var var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createCharArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf1($array, $length) {
    var var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createByteArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf0($array, $length) {
    var var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createIntArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf2($original, $newLength) {
    var var$3, $result, $sz, $i;
    var$3 = $original.data;
    $result = jlr_Array_newInstance(jl_Object_getClass($original).$getComponentType(), $newLength);
    $sz = jl_Math_min($newLength, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOfRange($original, $from, $to) {
    var $result, $i, var$6, var$7;
    $result = jlr_Array_newInstance(jl_Object_getClass($original).$getComponentType(), $to - $from | 0);
    $i = $from;
    while ($i < $to) {
        var$6 = $result.data;
        var$7 = $original.data;
        var$6[$i - $from | 0] = var$7[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_fill1($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill0($a, $val) {
    ju_Arrays_fill1($a, 0, $a.data.length, $val);
}
function ju_Arrays_fill2($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill3($a, $val) {
    ju_Arrays_fill2($a, 0, $a.data.length, $val);
}
function ju_Arrays_fill4($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill5($a, $val) {
    ju_Arrays_fill4($a, 0, $a.data.length, $val);
}
function ju_Arrays_fill6($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill($a, $val) {
    ju_Arrays_fill6($a, 0, $a.data.length, $val);
}
function ju_Arrays_sort0($a, $fromIndex, $toIndex, $c) {
    var $subarray, $i, var$7, var$8;
    $subarray = $rt_createArray(jl_Object, $toIndex - $fromIndex | 0);
    $i = $fromIndex;
    while ($i < $toIndex) {
        var$7 = $subarray.data;
        var$8 = $a.data;
        var$7[$i - $fromIndex | 0] = var$8[$i];
        $i = $i + 1 | 0;
    }
    ju_Arrays_sort($subarray, $c);
    $i = $fromIndex;
    while ($i < $toIndex) {
        $a.data[$i] = $subarray.data[$i - $fromIndex | 0];
        $i = $i + 1 | 0;
    }
}
function ju_Arrays_sort($a, $c) {
    var var$3, $second, $chunkSize, var$6, $i, var$8, var$9, $i_0, var$11, var$12;
    var$3 = $a.data.length;
    if (!var$3)
        return;
    $second = $rt_createArray(jl_Object, var$3);
    $chunkSize = 1;
    var$6 = $a;
    while ($chunkSize < var$3) {
        $i = 0;
        while (true) {
            var$8 = var$6.data.length;
            if ($i >= var$8)
                break;
            var$9 = jl_Math_min(var$8, $i + $chunkSize | 0);
            $i_0 = $i + (2 * $chunkSize | 0) | 0;
            var$11 = jl_Math_min(var$8, $i_0);
            ju_Arrays_merge(var$6, $second, $i, var$9, var$11, $c);
            $i = $i_0;
        }
        $chunkSize = $chunkSize * 2 | 0;
        var$12 = var$6;
        var$6 = $second;
        $second = var$12;
    }
    a: {
        if (var$6 !== $a) {
            $i = 0;
            while (true) {
                var$12 = var$6.data;
                if ($i >= var$12.length)
                    break a;
                $second.data[$i] = var$12[$i];
                $i = $i + 1 | 0;
            }
        }
    }
}
function ju_Arrays_merge($a, $b, $from, $split, $to, $comp) {
    var var$7, $from2, var$9, $p, $q, var$12, var$13, var$14;
    var$7 = $from;
    $from2 = $split;
    a: {
        b: {
            while ($from != $split) {
                if ($from2 == $to)
                    break b;
                var$9 = $a.data;
                $p = var$9[$from];
                $q = var$9[$from2];
                if ($comp.$compare5($p, $q) > 0) {
                    var$9 = $b.data;
                    var$12 = var$7 + 1 | 0;
                    var$9[var$7] = $q;
                    $from2 = $from2 + 1 | 0;
                } else {
                    var$9 = $b.data;
                    var$12 = var$7 + 1 | 0;
                    var$9[var$7] = $p;
                    $from = $from + 1 | 0;
                }
                var$7 = var$12;
            }
            while (true) {
                if ($from2 >= $to)
                    break a;
                var$13 = $b.data;
                var$9 = $a.data;
                var$12 = var$7 + 1 | 0;
                var$14 = $from2 + 1 | 0;
                var$13[var$7] = var$9[$from2];
                var$7 = var$12;
                $from2 = var$14;
            }
        }
        while (true) {
            if ($from >= $split)
                break a;
            var$13 = $b.data;
            var$9 = $a.data;
            var$14 = var$7 + 1 | 0;
            var$12 = $from + 1 | 0;
            var$13[var$7] = var$9[$from];
            var$7 = var$14;
            $from = var$12;
        }
    }
}
function ju_Arrays_binarySearch($a, $key) {
    return ju_Arrays_binarySearch0($a, 0, $a.data.length, $key);
}
function ju_Arrays_binarySearch0($a, $fromIndex, $toIndex, $key) {
    var $u, var$6, $i, $e;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $u = $toIndex - 1 | 0;
    while (true) {
        var$6 = $a.data;
        $i = ($fromIndex + $u | 0) / 2 | 0;
        $e = var$6[$i];
        if ($e == $key)
            break;
        if ($key >= $e) {
            $fromIndex = $i + 1 | 0;
            if ($fromIndex > $u)
                return  -$i - 2 | 0;
        } else {
            $u = $i - 1 | 0;
            if ($u < $fromIndex)
                return  -$i - 1 | 0;
        }
    }
    return $i;
}
function ju_Arrays_hashCode($a) {
    var $hash, $i, var$4, $h;
    if ($a === null)
        return 0;
    $hash = (-1515898884);
    $i = 0;
    while (true) {
        var$4 = $a.data;
        if ($i >= var$4.length)
            break;
        $h = ju_Objects_hashCode(var$4[$i]) ^ 528111840;
        $hash = jl_Integer_rotateLeft($h, 4) ^ jl_Integer_rotateRight($h, 7) ^ jl_Integer_rotateLeft($hash, 13);
        $i = $i + 1 | 0;
    }
    return $hash;
}
function ju_Arrays_asList($a) {
    return ju_Arrays$ArrayAsList__init_($a);
}
function oooi_DObject() {
    var a = this; oooi_DBase.call(a);
    a.$world0 = null;
    a.$_next0 = null;
    a.$_tome = null;
    a.$tag = 0;
    a.$userdata = null;
}
function oooi_DObject__init_(var_0) {
    var var_1 = new oooi_DObject();
    oooi_DObject__init_0(var_1, var_0);
    return var_1;
}
function oooi_DObject__init_0($this, $w) {
    oooi_DBase__init_0($this);
    $this.$world0 = $w;
    $this.$_next0 = oooicj_Ref__init_();
    $this.$_tome = null;
    $this.$userdata = null;
    $this.$tag = 0;
}
function oooi_DObject_addObjectToList($obj, $first) {
    $obj.$addObjectToList($first);
}
function oooi_DObject_addObjectToList0($this, $first) {
    oooicj_Ref_set($this.$_next0, oooicj_Ref_get($first));
    $this.$_tome = $first;
    if (oooicj_Ref_get($first) !== null)
        oooicj_Ref_get($first).$setTome($this.$_next0);
    oooicj_Ref_set($first, $this);
}
function oooi_DObject_setTome($this, $obj) {
    $this.$_tome = $obj;
}
function oooi_DObject_removeObjectFromList($this) {
    if (oooicj_Ref_get($this.$_next0) !== null)
        oooicj_Ref_get($this.$_next0).$_tome = $this.$_tome;
    oooicj_Ref_set($this.$_tome, oooicj_Ref_get($this.$_next0));
    oooicj_Ref_set($this.$_next0, null);
    $this.$_tome = null;
}
function oooi_DObject_getWorld($this) {
    return $this.$world0;
}
function oooi_DObject_getNext($this) {
    return oooicj_Ref_get($this.$_next0);
}
function ooo_DJoint() {
}
function oooij_DxJoint() {
    var a = this; oooi_DObject.call(a);
    a.$flags1 = 0;
    a.$node0 = null;
    a.$feedback = null;
    a.$lambda = null;
}
function oooij_DxJoint__init_(var_0) {
    var var_1 = new oooij_DxJoint();
    oooij_DxJoint__init_0(var_1, var_0);
    return var_1;
}
function oooij_DxJoint__init_0($this, $w) {
    oooi_DObject__init_0($this, $w);
    $this.$node0 = $rt_createArray(oooij_DxJointNode, 2);
    oooi_Common_dIASSERT($w === null ? 0 : 1);
    $this.$flags1 = 0;
    $this.$node0.data[0] = oooij_DxJointNode__init_();
    $this.$node0.data[0].$joint = $this;
    $this.$node0.data[0].$body0 = null;
    $this.$node0.data[0].$next2 = null;
    $this.$node0.data[1] = oooij_DxJointNode__init_();
    $this.$node0.data[1].$joint = $this;
    $this.$node0.data[1].$body0 = null;
    $this.$node0.data[1].$next2 = null;
    $this.$lambda = $rt_createDoubleArray(6);
    oooi_DObject_addObjectToList($this, $w.$firstjoint0);
    $w.$nj = $w.$nj + 1 | 0;
    $this.$feedback = null;
}
function oooij_DxJoint_DESTRUCTOR($this) {
    oooi_DDestructible_DESTRUCTOR($this);
}
function oooij_DxJoint_isFlagsReverse($this) {
    return !($this.$flags1 & 2) ? 0 : 1;
}
function oooij_DxJoint_setFlagsInGroup($this) {
    $this.$flags1 = $this.$flags1 | 1;
}
function oooij_DxJoint_dJointAttach($this, $b1, $b2) {
    var $body1, $body2, var$5, $world, var$7;
    $body1 = $b1;
    $body2 = $b2;
    var$5 = $body1 !== null && $body1 === $body2 ? 0 : 1;
    a: {
        b: {
            oooi_Common_dUASSERT(var$5, $rt_s(845));
            $world = $this.$world0;
            if (!($body1 !== null && $body1.$getWorld0() !== $world)) {
                if ($body2 === null)
                    break b;
                if ($body2.$getWorld0() === $world)
                    break b;
            }
            var$5 = 0;
            break a;
        }
        var$5 = 1;
    }
    oooi_Common_dUASSERT(var$5, $rt_s(846));
    oooi_Common_dUASSERT($this.$flags1 & 4 && ($body1 === null ? 0 : 1) ^ ($body2 === null ? 0 : 1) ? 0 : 1, $rt_s(847));
    if (!($this.$node0.data[0].$body0 === null && $this.$node0.data[1].$body0 === null))
        $this.$removeJointReferencesFromAttachedBodies();
    if ($body1 !== null)
        $this.$flags1 = $this.$flags1 & (-3);
    else {
        var$7 = null;
        $this.$flags1 = $this.$flags1 | 2;
        $body1 = $body2;
        $body2 = var$7;
    }
    $this.$node0.data[0].$body0 = $body1;
    $this.$node0.data[1].$body0 = $body2;
    if ($body1 === null)
        $this.$node0.data[1].$next2 = null;
    else {
        $this.$node0.data[1].$next2 = oooicj_Ref_get($body1.$firstjoint);
        oooicj_Ref_set($body1.$firstjoint, $this.$node0.data[1]);
    }
    if ($body2 === null)
        $this.$node0.data[0].$next2 = null;
    else {
        $this.$node0.data[0].$next2 = oooicj_Ref_get($body2.$firstjoint);
        oooicj_Ref_set($body2.$firstjoint, $this.$node0.data[0]);
    }
    if (!($body1 === null && $body2 === null))
        $this.$setRelativeValues();
}
function oooij_DxJoint_setRelativeValues($this) {
    return;
}
function oooij_DxJoint_isEnabled($this) {
    return $this.$flags1 & 8 ? 0 : 1;
}
function oooij_DxJoint_removeJointReferencesFromAttachedBodies($this) {
    var $i, $body, $last, $last_0, var$5;
    $i = 0;
    while ($i < 2) {
        a: {
            $body = $this.$node0.data[$i].$body0;
            if ($body !== null) {
                $last = oooicj_Ref_get($body.$firstjoint);
                $last_0 = null;
                while (true) {
                    if ($last === null)
                        break a;
                    if ($last.$joint === $this)
                        break;
                    var$5 = $last.$next2;
                    $last_0 = $last;
                    $last = var$5;
                }
                if ($last_0 !== null)
                    $last_0.$next2 = $last.$next2;
                else
                    oooicj_Ref_set($body.$firstjoint, $last.$next2);
            }
        }
        $i = $i + 1 | 0;
    }
    $this.$node0.data[0].$body0 = null;
    $this.$node0.data[0].$next2 = null;
    $this.$node0.data[1].$body0 = null;
    $this.$node0.data[1].$next2 = null;
}
function oooij_DxJoint_FinalizeAndDestroyJointInstance($this, $delete_it) {
    var var$2;
    if ($this.$world0 !== null) {
        $this.$removeJointReferencesFromAttachedBodies();
        $this.$removeObjectFromList();
        var$2 = $this.$world0;
        var$2.$nj = var$2.$nj - 1 | 0;
    }
    if (!$delete_it)
        $this.$DESTRUCTOR();
}
function oooij_DxJoint_attach($this, $body1, $body2) {
    $this.$dJointAttach($body1, $body2);
}
function okttt_MainTeaVMTests() {
    oktt_Tests.call(this);
}
var okttt_MainTeaVMTests_currentApp = null;
var okttt_MainTeaVMTests_currentButton = null;
var okttt_MainTeaVMTests_INSTANCE = null;
function okttt_MainTeaVMTests_$callClinit() {
    okttt_MainTeaVMTests_$callClinit = $rt_eraseClinit(okttt_MainTeaVMTests);
    okttt_MainTeaVMTests__clinit_();
}
function okttt_MainTeaVMTests__init_() {
    var var_0 = new okttt_MainTeaVMTests();
    okttt_MainTeaVMTests__init_0(var_0);
    return var_0;
}
function okttt_MainTeaVMTests_getCurrentApp($this) {
    return okttt_MainTeaVMTests_currentApp;
}
function okttt_MainTeaVMTests_setCurrentApp($this, $_set___) {
    okttt_MainTeaVMTests_currentApp = $_set___;
}
function okttt_MainTeaVMTests_getCurrentButton($this) {
    return okttt_MainTeaVMTests_currentButton;
}
function okttt_MainTeaVMTests_setCurrentButton($this, $_set___) {
    okttt_MainTeaVMTests_currentButton = $_set___;
}
function okttt_MainTeaVMTests_main($args) {
    var var$2, $document, $tests, $i, var$6, var$7, $group, $groupName, $j, var$11, $test, $listItem, $button;
    okttt_MainTeaVMTests_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($args, $rt_s(848));
    var$2 = window;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(380));
    $document = var$2.document;
    $tests = $document.getElementById("tests");
    $i = 0;
    var$6 = oktt_Tests_getGroups(okttt_MainTeaVMTests_INSTANCE).$size();
    while ($i < var$6) {
        var$7 = oktt_Tests_getGroups(okttt_MainTeaVMTests_INSTANCE).$get1($i);
        kji_Intrinsics_checkExpressionValueIsNotNull(var$7, $rt_s(849));
        $group = var$7;
        $groupName = $document.createElement("li");
        kji_Intrinsics_checkExpressionValueIsNotNull($groupName, $rt_s(850));
        var$7 = $rt_ustr(oktt_TestGroup_getName($group));
        $groupName.innerHTML = var$7;
        var$7 = "testGroupTitle";
        $groupName.className = var$7;
        var$2 = $groupName;
        $tests.appendChild(var$2);
        $j = 0;
        var$11 = $group.$size();
        while ($j < var$11) {
            var$7 = $group.$get1($j);
            kji_Intrinsics_checkExpressionValueIsNotNull(var$7, $rt_s(851));
            $test = var$7;
            $listItem = $document.createElement("li");
            var$2 = $listItem;
            $tests.appendChild(var$2);
            var$7 = $document.createElement("button");
            if (var$7 === null)
                $rt_throw(k_TypeCastException__init_($rt_s(852)));
            $button = var$7;
            var$7 = $rt_ustr($test.$getName());
            $button.innerHTML = var$7;
            var$7 = "testButton";
            $button.className = var$7;
            var$2 = otji_JS_functionAsObject(okttt_MainTeaVMTests$main$1__init_($document, $button, $test), "handleEvent");
            $button.addEventListener("click", otji_JS_function(var$2, "handleEvent"), !!0);
            var$7 = $button;
            $listItem.appendChild(var$7);
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
}
function okttt_MainTeaVMTests__init_0($this) {
    okttt_MainTeaVMTests_$callClinit();
    oktt_Tests__init_0($this);
}
function okttt_MainTeaVMTests__clinit_() {
    okttt_MainTeaVMTests_INSTANCE = okttt_MainTeaVMTests__init_();
}
function oktgg_GLTFPrimitive$read$2$1() {
    kji_Lambda.call(this);
    this.$this$080 = null;
}
function oktgg_GLTFPrimitive$read$2$1__init_(var_0) {
    var var_1 = new oktgg_GLTFPrimitive$read$2$1();
    oktgg_GLTFPrimitive$read$2$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFPrimitive$read$2$1_invoke(var$0, var$1, var$2) {
    oktgg_GLTFPrimitive$read$2$1_invoke0(var$0, var$1, var$2.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFPrimitive$read$2$1_invoke0($this, $attributeName, $accessorIndex) {
    var $accessor;
    kji_Intrinsics_checkParameterIsNotNull($attributeName, $rt_s(853));
    $accessor = oktgg_GLTFPrimitive_getGltf($this.$this$080.$this$072).$getAccessors().$get1($accessorIndex);
    oktgg_GLTFPrimitive_getAttributesMap($this.$this$080.$this$072).$put3($attributeName, jl_Integer_valueOf($accessorIndex));
    $this.$this$080.$$vertexInputs.$add5(oktm_VertexInput__init_(oktgg_GLTFAccessor_typeSize($accessor), $attributeName, 5126, oktgg_GLTFAccessor_getNormalized($accessor)));
    if (kji_Intrinsics_areEqual($attributeName, $rt_s(854)))
        $this.$this$080.$$hasNormals.$element1 = 1;
    else if (kji_Intrinsics_areEqual($attributeName, $rt_s(855)))
        $this.$this$080.$$hasTangents.$element1 = 1;
}
function oktgg_GLTFPrimitive$read$2$1__init_0(var$0, var$1) {
    var$0.$this$080 = var$1;
    kji_Lambda__init_0(var$0, 2);
}
function jur_DotSet() {
    jur_JointSet.call(this);
    this.$lt = null;
}
function jur_DotSet__init_(var_0) {
    var var_1 = new jur_DotSet();
    jur_DotSet__init_0(var_1, var_0);
    return var_1;
}
function jur_DotSet__init_0($this, $lt) {
    jur_JointSet__init_0($this);
    $this.$lt = $lt;
}
function jur_DotSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength) {
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$lt.$isLineTerminator(jl_Character_toCodePoint($high, $low)) ? (-1) : $this.$next0.$matches(var$7, $testString, $matchResult);
        }
    }
    return $this.$lt.$isLineTerminator($high) ? (-1) : $this.$next0.$matches(var$5, $testString, $matchResult);
}
function jur_DotSet_setNext($this, $next) {
    $this.$next0 = $next;
}
function jur_DotSet_getType($this) {
    return (-2147483602);
}
function jur_DotSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_CICharSet() {
    var a = this; jur_LeafSet.call(a);
    a.$ch0 = 0;
    a.$supplement = 0;
}
function jur_CICharSet__init_(var_0) {
    var var_1 = new jur_CICharSet();
    jur_CICharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CICharSet__init_0($this, $ch) {
    jur_LeafSet__init_2($this);
    $this.$ch0 = $ch;
    $this.$supplement = jur_Pattern_getSupplement($ch);
}
function jur_CICharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch0 != $testString.$charAt($strIndex) && $this.$supplement != $testString.$charAt($strIndex) ? (-1) : 1;
}
function jur_SupplCharSet() {
    var a = this; jur_LeafSet.call(a);
    a.$high = 0;
    a.$low0 = 0;
    a.$ch1 = 0;
}
function jur_SupplCharSet__init_(var_0) {
    var var_1 = new jur_SupplCharSet();
    jur_SupplCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SupplCharSet__init_0($this, $ch) {
    var $chUTF16, var$3;
    jur_LeafSet__init_2($this);
    $this.$charCount0 = 2;
    $this.$ch1 = $ch;
    $chUTF16 = jl_Character_toChars($ch);
    var$3 = $chUTF16.data;
    $this.$high = var$3[0];
    $this.$low0 = var$3[1];
}
function jur_SupplCharSet_accepts($this, $strIndex, $testString) {
    var var$3, $high, $low;
    var$3 = $strIndex + 1 | 0;
    $high = $testString.$charAt($strIndex);
    $low = $testString.$charAt(var$3);
    return $this.$high == $high && $this.$low0 == $low ? 2 : (-1);
}
function jur_SupplCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6, $ch;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while ($strIndex < $strLength) {
        var$6 = $testStr.$indexOf($this.$high, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex >= $strLength)
            continue;
        $ch = $testStr.$charAt($strIndex);
        if ($this.$low0 == $ch && $this.$next0.$matches($strIndex + 1 | 0, $testString, $matchResult) >= 0)
            return $strIndex + (-1) | 0;
        $strIndex = $strIndex + 1 | 0;
    }
    return (-1);
}
function jur_SupplCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = $testStr.$lastIndexOf($this.$low0, $lastIndex);
            var$7 = var$6 + (-1) | 0;
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$high == $testStr.$charAt(var$7) && $this.$next0.$matches(var$7 + 2 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_SupplCharSet_getCodePoint($this) {
    return $this.$ch1;
}
function jur_SupplCharSet_first($this, $set) {
    if ($set instanceof jur_SupplCharSet)
        return $set.$getCodePoint() != $this.$ch1 ? 0 : 1;
    if ($set instanceof jur_SupplRangeSet)
        return $set.$contains0($this.$ch1);
    if ($set instanceof jur_CharSet)
        return 0;
    if (!($set instanceof jur_RangeSet))
        return 1;
    return 0;
}
function oooig_GimAABBSet$PushPairMacro() {
}
function oooig_GimAABBSet$1() {
    jl_Object.call(this);
}
function oooig_GimAABBSet$1__init_() {
    var var_0 = new oooig_GimAABBSet$1();
    oooig_GimAABBSet$1__init_0(var_0);
    return var_0;
}
function oooig_GimAABBSet$1__init_0($this) {
    jl_Object__init_0($this);
}
function oooig_GimAABBSet$1_run($this, $i, $j, $pairset) {
    oooig_GimAABBSet_PUSH_PAIR($i, $j, $pairset);
}
function oooig_GimAABBSet$2() {
    jl_Object.call(this);
}
function oooig_GimAABBSet$2__init_() {
    var var_0 = new oooig_GimAABBSet$2();
    oooig_GimAABBSet$2__init_0(var_0);
    return var_0;
}
function oooig_GimAABBSet$2__init_0($this) {
    jl_Object__init_0($this);
}
function oooig_GimAABBSet$2_run($this, $i, $j, $pairset) {
    oooig_GimAABBSet_PUSH_PAIR_INV($i, $j, $pairset);
}
function okttp_BoxShapeTest() {
    jl_Object.call(this);
}
function okttp_BoxShapeTest__init_() {
    var var_0 = new okttp_BoxShapeTest();
    okttp_BoxShapeTest__init_0(var_0);
    return var_0;
}
function okttp_BoxShapeTest_getName($this) {
    return $rt_s(856);
}
function okttp_BoxShapeTest_testMain($this) {
    var $world, $dynamic, $static1, $static2, var$5, var$6, var$7, $boxMesh, $shader, var$10, $control, $tmp_0;
    oktp_PHYS_$callClinit();
    $world = oktp_PHYS_createWorld(oktp_PHYS_INSTANCE);
    $world.$setGravity0(0.0, (-2.0), 0.0);
    $dynamic = $world.$rigidBody($world.$boxShape(2.0, 2.0, 2.0), 1.0);
    $dynamic.$setPosition1(0.0, 3.0, 0.0);
    $static1 = oktp_IPhysicsWorld$DefaultImpls_rigidBody$default($world, $world.$boxShape(2.0, 2.0, 2.0), 0.0, 2, null);
    $static1.$setPosition1(1.25, 0.0, 0.0);
    $static1.$setGravityEnabled(0);
    $static1.$setStatic(1);
    $static2 = oktp_IPhysicsWorld$DefaultImpls_rigidBody$default($world, $world.$boxShape(2.0, 2.0, 2.0), 0.0, 2, null);
    $static2.$setPosition1((-2.5), 0.0, 0.0);
    $static2.$setGravityEnabled(0);
    $static2.$setStatic(1);
    var$5 = oktmb_BoxMeshBuilder__init_0(2.0, 2.0, 2.0);
    oktmb_MeshBuilder_setPositionName(var$5, $rt_s(543));
    oktmb_MeshBuilder_setUvName(var$5, $rt_s(857));
    var$6 = null;
    var$7 = null;
    $boxMesh = oktmb_MeshBuilder_build$default(var$5, var$6, 1, var$7);
    $shader = new okts_Shader;
    var$10 = null;
    var$6 = null;
    var$7 = null;
    var$5 = null;
    okts_Shader__init_($shader, $rt_s(858), $rt_s(859), var$10, 0, var$6, 0, var$7, 124, var$5);
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_setApi(oktgc_ActiveCamera_INSTANCE, oktgc_Camera__init_(null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null));
    $control = new oktgc_OrbitCameraControl;
    var$6 = null;
    var$7 = null;
    var$5 = null;
    oktgc_OrbitCameraControl__init_($control, 0.0, 2.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, var$6, 0, var$7, 8173, var$5);
    oktgc_OrbitCameraControl_listenToMouse($control);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, oktgc_OrbitCameraControl_getHelp($control), null, 2, null);
    $tmp_0 = oktm_Mat4__init_();
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttp_BoxShapeTest$testMain$1__init_($control, $world, $shader, $static1, $tmp_0, $boxMesh, $static2, $dynamic), 1, null);
}
function okttp_BoxShapeTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktm_IVec4$Companion() {
    jl_Object.call(this);
}
var oktm_IVec4$Companion_One = null;
var oktm_IVec4$Companion_Zero = null;
var oktm_IVec4$Companion_Zero3One1 = null;
var oktm_IVec4$Companion_tmp1 = null;
var oktm_IVec4$Companion_$$INSTANCE = null;
function oktm_IVec4$Companion_$callClinit() {
    oktm_IVec4$Companion_$callClinit = $rt_eraseClinit(oktm_IVec4$Companion);
    oktm_IVec4$Companion__clinit_();
}
function oktm_IVec4$Companion__init_() {
    var var_0 = new oktm_IVec4$Companion();
    oktm_IVec4$Companion__init_0(var_0);
    return var_0;
}
function oktm_IVec4$Companion_getOne($this) {
    return oktm_IVec4$Companion_One;
}
function oktm_IVec4$Companion_getZero($this) {
    return oktm_IVec4$Companion_Zero;
}
function oktm_IVec4$Companion_getZero3One1($this) {
    return oktm_IVec4$Companion_Zero3One1;
}
function oktm_IVec4$Companion_len($this, $x, $y, $z) {
    return jl_Math_sqrt($x * $x + $y * $y + $z * $z);
}
function oktm_IVec4$Companion__init_0($this) {
    oktm_IVec4$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktm_IVec4$Companion__clinit_() {
    oktm_IVec4$Companion_$$INSTANCE = oktm_IVec4$Companion__init_();
    oktm_IVec4$Companion_One = oktm_Vec4__init_0(1.0, 1.0, 1.0, 1.0);
    oktm_IVec4$Companion_Zero = oktm_Vec4__init_0(0.0, 0.0, 0.0, 0.0);
    oktm_IVec4$Companion_Zero3One1 = oktm_Vec4__init_0(0.0, 0.0, 0.0, 1.0);
    oktm_IVec4$Companion_tmp1 = oktm_Vec4__init_0(0.0, 0.0, 0.0, 0.0);
}
function kr_Random$Companion() {
    kr_Random.call(this);
}
var kr_Random$Companion_INSTANCE = null;
function kr_Random$Companion_$callClinit() {
    kr_Random$Companion_$callClinit = $rt_eraseClinit(kr_Random$Companion);
    kr_Random$Companion__clinit_();
}
function kr_Random$Companion__init_() {
    var var_0 = new kr_Random$Companion();
    kr_Random$Companion__init_0(var_0);
    return var_0;
}
function kr_Random$Companion__init_0($this) {
    kr_Random$Companion_$callClinit();
    kr_Random__init_0($this);
}
function kr_Random$Companion__clinit_() {
    kr_Random$Companion_INSTANCE = kr_Random$Companion__init_();
}
function okttm_InstancingTest$testMain$2() {
    var a = this; kji_Lambda.call(a);
    a.$$control2 = null;
    a.$$simpleShader = null;
    a.$$plane0 = null;
    a.$$instancedShader = null;
    a.$$cubes = null;
}
function okttm_InstancingTest$testMain$2__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new okttm_InstancingTest$testMain$2();
    okttm_InstancingTest$testMain$2__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function okttm_InstancingTest$testMain$2_invoke(var$0) {
    okttm_InstancingTest$testMain$2_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttm_InstancingTest$testMain$2_invoke0($this) {
    var var$1;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$control2;
    okt_APP_$callClinit();
    var$1.$update(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    $this.$$simpleShader.$bind();
    $this.$$simpleShader.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    oktm_IMesh$DefaultImpls_render$default($this.$$plane0, $this.$$simpleShader, 0, 0, 0, 0, 30, null);
    $this.$$instancedShader.$bind();
    $this.$$instancedShader.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    oktm_IMesh$DefaultImpls_render$default($this.$$cubes, $this.$$instancedShader, 0, 0, 0, 0, 30, null);
}
function okttm_InstancingTest$testMain$2__init_0(var$0, var$1, var$2, var$3, var$4, var$5) {
    var$0.$$control2 = var$1;
    var$0.$$simpleShader = var$2;
    var$0.$$plane0 = var$3;
    var$0.$$instancedShader = var$4;
    var$0.$$cubes = var$5;
    kji_Lambda__init_0(var$0, 0);
}
function oktgg_GLTF$glCalls$1() {
    kji_Lambda.call(this);
}
var oktgg_GLTF$glCalls$1_INSTANCE = null;
function oktgg_GLTF$glCalls$1_$callClinit() {
    oktgg_GLTF$glCalls$1_$callClinit = $rt_eraseClinit(oktgg_GLTF$glCalls$1);
    oktgg_GLTF$glCalls$1__clinit_();
}
function oktgg_GLTF$glCalls$1__init_() {
    var var_0 = new oktgg_GLTF$glCalls$1();
    oktgg_GLTF$glCalls$1__init_0(var_0);
    return var_0;
}
function oktgg_GLTF$glCalls$1_invoke(var$0, var$1) {
    oktgg_GLTF$glCalls$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$glCalls$1_invoke0($this, $it) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    var$2 = oktgg_GLTFPrimitive_getMesh($it).$getVertices();
    if (var$2 !== null)
        var$2.$initGpuObjects();
    var$2 = oktgg_GLTFPrimitive_getMesh($it).$getIndices();
    if (var$2 !== null)
        var$2.$initGpuObjects();
}
function oktgg_GLTF$glCalls$1__init_0(var$0) {
    oktgg_GLTF$glCalls$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTF$glCalls$1__clinit_() {
    oktgg_GLTF$glCalls$1_INSTANCE = oktgg_GLTF$glCalls$1__init_();
}
function oooip_DxIslandsProcessingCallContext$1() {
    var a = this; jl_Object.call(a);
    a.$val$stepperCallContext = null;
    a.$val$parent = null;
    a.$this$081 = null;
}
function oooip_DxIslandsProcessingCallContext$1__init_(var_0, var_1, var_2) {
    var var_3 = new oooip_DxIslandsProcessingCallContext$1();
    oooip_DxIslandsProcessingCallContext$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oooip_DxIslandsProcessingCallContext$1__init_0($this, $this$0, var$2, var$3) {
    $this.$this$081 = $this$0;
    $this.$val$stepperCallContext = var$2;
    $this.$val$parent = var$3;
    jl_Object__init_0($this);
}
function oooip_DxIslandsProcessingCallContext$1_run($this) {
    oooip_DxIslandsProcessingCallContext_access$000($this.$val$stepperCallContext.$m_islandsProcessingContext, $this.$val$stepperCallContext, $this.$val$parent);
}
function oooip_DxIslandsProcessingCallContext$2() {
    var a = this; jl_Object.call(a);
    a.$val$stepperCallContext0 = null;
    a.$val$parent0 = null;
    a.$this$082 = null;
}
function oooip_DxIslandsProcessingCallContext$2__init_(var_0, var_1, var_2) {
    var var_3 = new oooip_DxIslandsProcessingCallContext$2();
    oooip_DxIslandsProcessingCallContext$2__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oooip_DxIslandsProcessingCallContext$2__init_0($this, $this$0, var$2, var$3) {
    $this.$this$082 = $this$0;
    $this.$val$stepperCallContext0 = var$2;
    $this.$val$parent0 = var$3;
    jl_Object__init_0($this);
}
function oooip_DxIslandsProcessingCallContext$2_run($this) {
    oooip_DxIslandsProcessingCallContext_access$000($this.$val$stepperCallContext0.$m_islandsProcessingContext, $this.$val$stepperCallContext0, $this.$val$parent0);
}
function oktgg_GLTFMesh$read$2() {
    kji_Lambda.call(this);
    this.$this$069 = null;
}
function oktgg_GLTFMesh$read$2__init_(var_0) {
    var var_1 = new oktgg_GLTFMesh$read$2();
    oktgg_GLTFMesh$read$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFMesh$read$2_invoke(var$0, var$1) {
    oktgg_GLTFMesh$read$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFMesh$read$2_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTFMesh$read$2$1__init_($this));
}
function oktgg_GLTFMesh$read$2__init_0(var$0, var$1) {
    var$0.$this$069 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oooip_DxIslandsProcessingCallContext$3() {
    var a = this; jl_Object.call(a);
    a.$val$stepperCallContext1 = null;
    a.$this$083 = null;
}
function oooip_DxIslandsProcessingCallContext$3__init_(var_0, var_1) {
    var var_2 = new oooip_DxIslandsProcessingCallContext$3();
    oooip_DxIslandsProcessingCallContext$3__init_0(var_2, var_0, var_1);
    return var_2;
}
function oooip_DxIslandsProcessingCallContext$3__init_0($this, $this$0, var$2) {
    $this.$this$083 = $this$0;
    $this.$val$stepperCallContext1 = var$2;
    jl_Object__init_0($this);
}
function oooip_DxIslandsProcessingCallContext$3_run($this) {
    oooip_DxIslandsProcessingCallContext_access$100($this.$val$stepperCallContext1.$m_islandsProcessingContext, $this.$val$stepperCallContext1);
}
function oktgg_GLTFMesh$read$1() {
    kji_Lambda.call(this);
    this.$this$084 = null;
}
function oktgg_GLTFMesh$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFMesh$read$1();
    oktgg_GLTFMesh$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFMesh$read$1_invoke(var$0, var$1) {
    oktgg_GLTFMesh$read$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFMesh$read$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    oktgg_GLTFMesh_setName($this.$this$084, $it);
}
function oktgg_GLTFMesh$read$1__init_0(var$0, var$1) {
    var$0.$this$084 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jur_AbstractCharClass$LazyJavaMirrored$1() {
    jur_AbstractCharClass.call(this);
    this.$this$085 = null;
}
function jur_AbstractCharClass$LazyJavaMirrored$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaMirrored$1();
    jur_AbstractCharClass$LazyJavaMirrored$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaMirrored$1__init_0($this, $this$0) {
    $this.$this$085 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaMirrored$1_contains($this, $ch) {
    return 0;
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData() {
    var a = this; jl_Object.call(a);
    a.$m_mHullBoxRot = null;
    a.$m_vHullBoxPos = null;
    a.$m_vBoxHalfSize = null;
    a.$m_vHullDstPos = null;
    a.$m_vBestNormal = null;
    a.$m_fBestDepth = 0.0;
    a.$m_iBestAxis = 0;
    a.$m_iExitAxis = 0;
    a.$m_vE0 = null;
    a.$m_vE1 = null;
    a.$m_vE2 = null;
    a.$m_vN = null;
    a.$m_iFlags = 0;
    a.$m_ContactGeoms = null;
    a.$m_iStride = 0;
    a.$m_Geom1 = null;
    a.$m_Geom2 = null;
    a.$m_TempContactGeoms = null;
    a.$this$086 = null;
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData__init_(var_0) {
    var var_1 = new oooi_CollideTrimeshBox$sTrimeshBoxColliderData();
    oooi_CollideTrimeshBox$sTrimeshBoxColliderData__init_0(var_1, var_0);
    return var_1;
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData__init_0($this, var$1) {
    $this.$this$086 = var$1;
    jl_Object__init_0($this);
    $this.$m_mHullBoxRot = oom_DMatrix3__init_1();
    $this.$m_vHullBoxPos = oom_DVector3__init_();
    $this.$m_vBoxHalfSize = oom_DVector3__init_();
    $this.$m_vHullDstPos = oom_DVector3__init_();
    $this.$m_vBestNormal = oom_DVector3__init_();
    $this.$m_vE0 = oom_DVector3__init_();
    $this.$m_vE1 = oom_DVector3__init_();
    $this.$m_vE2 = oom_DVector3__init_();
    $this.$m_vN = oom_DVector3__init_();
    $this.$m_iBestAxis = 0;
    $this.$m_iExitAxis = 0;
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldTestNormal($this, $fp0, $fR, $vNormal, $iAxis) {
    var $fDepth, $fLength, $fOneOverLength, var$8;
    $fDepth = $fR + $fp0;
    if ($fDepth < 0.0)
        return 0;
    $fLength = oooi_CollideTrimeshBox_access$000($this.$this$086, $vNormal);
    if ($fLength > 0.0) {
        $fOneOverLength = 1.0 / $fLength;
        var$8 = $fDepth * $fOneOverLength;
        if (var$8 < $this.$m_fBestDepth) {
            oom_DVector3_scale(oom_DVector3_set($this.$m_vBestNormal, $vNormal),  -$fOneOverLength);
            $this.$m_iBestAxis = $iAxis;
            $this.$m_fBestDepth = var$8;
        }
    }
    return 1;
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldTestFace($this, $fMax, $fMax_0, $fMax_1, $fR, $fD, $vNormal, $iAxis) {
    var var$8, $fMin, $fDepthMin, $fDepthMax;
    var$8 = $rt_compare($fMax, $fMax_0);
    $fMin = var$8 >= 0 ? ($fMax_0 >= $fMax_1 ? $fMax_1 : $fMax_0) : $fMax >= $fMax_1 ? $fMax_1 : $fMax;
    if (var$8 <= 0) {
        if ($fMax_0 > $fMax_1)
            $fMax_1 = $fMax_0;
    } else if ($fMax > $fMax_1)
        $fMax_1 = $fMax;
    $fDepthMin = $fR - $fMin;
    $fDepthMax = $fMax_1 + $fR;
    if ($fDepthMin >= 0.0 && $fDepthMax >= 0.0) {
        if ($fDepthMin > $fDepthMax) {
            oom_DVector3_scale($vNormal, (-1.0));
            $fDepthMin = $fDepthMax;
        }
        if ($fDepthMin < $this.$m_fBestDepth) {
            oom_DVector3_set($this.$m_vBestNormal, $vNormal);
            $this.$m_iBestAxis = $iAxis;
            $this.$m_fBestDepth = $fDepthMin;
        }
        return 1;
    }
    return 0;
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldTestEdge($this, $fMax, $fp1, $fR, $fD, $vNormal, $iAxis) {
    var $fMin, $fMax_0, $fDepth, $fDepth_0, $fLength, $fOneOverLength, var$13;
    $fMin = oom_DVector3_lengthSquared($vNormal);
    oooi_Common_$callClinit();
    if ($fMin <= oooi_Common_dEpsilon)
        return 1;
    if ($fMax < $fp1) {
        $fMax_0 = $fp1;
        $fp1 = $fMax;
        $fMax = $fMax_0;
    }
    $fDepth = $fR - $fp1;
    $fDepth_0 = $fMax + $fR;
    if ($fDepth >= 0.0 && $fDepth_0 >= 0.0) {
        if ($fDepth > $fDepth_0) {
            oom_DVector3_scale($vNormal, (-1.0));
            $fDepth = $fDepth_0;
        }
        $fLength = oooi_CollideTrimeshBox_access$000($this.$this$086, $vNormal);
        if ($fLength > 0.0) {
            $fOneOverLength = 1.0 / $fLength;
            var$13 = $fDepth * $fOneOverLength;
            if (var$13 * 1.5 < $this.$m_fBestDepth) {
                oom_DVector3_scale(oom_DVector3_set($this.$m_vBestNormal, $vNormal), $fOneOverLength);
                $this.$m_iBestAxis = $iAxis;
                $this.$m_fBestDepth = var$13;
            }
        }
        return 1;
    }
    return 0;
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldClipPolyToPlane($this, $avArrayIn, $ctIn, $avArrayOut, $ctOut, $plPlane) {
    var $i0, $i1, var$8, $fDistance0, $fDistance1, var$11, var$12, $vIntersectionPoint, $i1_0;
    $ctOut.$i = 0;
    $i0 = $ctIn - 1 | 0;
    $i1 = 0;
    while ($i1 < $ctIn) {
        var$8 = $avArrayIn.data;
        $fDistance0 = oooi_CollideTrimeshBox_access$100($this.$this$086, $plPlane, var$8[$i0]);
        $fDistance1 = oooi_CollideTrimeshBox_access$100($this.$this$086, $plPlane, var$8[$i1]);
        var$11 = $rt_compare($fDistance0, 0.0);
        if (var$11 >= 0) {
            oom_DVector3_set($avArrayOut.data[$ctOut.$i], var$8[$i0]);
            $ctOut.$i = $ctOut.$i + 1 | 0;
        }
        a: {
            if (!(var$11 > 0 && $fDistance1 < 0.0)) {
                if (var$11 >= 0)
                    break a;
                if ($fDistance1 <= 0.0)
                    break a;
            }
            var$12 = $avArrayOut.data;
            $vIntersectionPoint = oom_DVector3__init_();
            oom_DVector3_eqDiff($vIntersectionPoint, var$8[$i0], var$8[$i1]);
            oom_DVector3_scale($vIntersectionPoint,  -$fDistance0 / ($fDistance0 - $fDistance1));
            oom_DVector3_add($vIntersectionPoint, var$8[$i0]);
            oom_DVector3_set(var$12[$ctOut.$i], $vIntersectionPoint);
            $ctOut.$i = $ctOut.$i + 1 | 0;
        }
        $i1_0 = $i1 + 1 | 0;
        $i0 = $i1;
        $i1 = $i1_0;
    }
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldTestSeparatingAxes($this, $v0, $v1, $v2) {
    var $fNLen, $vA0, $vA1, $vA2, $fa0, $fa1, $fa2, $vD, $vL, $fp0, $fR, $fD, var$16, var$17, var$18, var$19;
    $this.$m_iBestAxis = 0;
    $this.$m_iExitAxis = (-1);
    $this.$m_fBestDepth = 1.7976931348623157E308;
    oooi_CollideTrimeshBox_access$200($this.$this$086, $v1, $v0, $this.$m_vE0);
    oooi_CollideTrimeshBox_access$200($this.$this$086, $v2, $v0, $this.$m_vE1);
    oooi_CollideTrimeshBox_access$200($this.$this$086, $this.$m_vE1, $this.$m_vE0, $this.$m_vE2);
    oom_DVector3_eqCross($this.$m_vN, $this.$m_vE0, $this.$m_vE1);
    $fNLen = oooi_CollideTrimeshBox_access$000($this.$this$086, $this.$m_vN);
    if ($fNLen === 0.0)
        return 0;
    $vA0 = oom_DVector3__init_();
    $vA1 = oom_DVector3__init_();
    $vA2 = oom_DVector3__init_();
    oooi_CollideTrimeshBox_access$300($this.$this$086, $this.$m_mHullBoxRot, 0, $vA0);
    oooi_CollideTrimeshBox_access$300($this.$this$086, $this.$m_mHullBoxRot, 1, $vA1);
    oooi_CollideTrimeshBox_access$300($this.$this$086, $this.$m_mHullBoxRot, 2, $vA2);
    $fa0 = oom_DVector3_get0($this.$m_vBoxHalfSize);
    $fa1 = oom_DVector3_get1($this.$m_vBoxHalfSize);
    $fa2 = oom_DVector3_get2($this.$m_vBoxHalfSize);
    $vD = oom_DVector3__init_();
    oooi_CollideTrimeshBox_access$200($this.$this$086, $v0, $this.$m_vHullBoxPos, $vD);
    $vL = oom_DVector3__init_();
    oooi_CollideTrimeshBox_access$400($this.$this$086, $vL, $this.$m_vN);
    $fp0 = oom_DVector3_dot($vL, $vD);
    $fR = $fa0 * oooi_Common_dFabs(oom_DVector3_dot($this.$m_vN, $vA0)) + $fa1 * oooi_Common_dFabs(oom_DVector3_dot($this.$m_vN, $vA1)) + $fa2 * oooi_Common_dFabs(oom_DVector3_dot($this.$m_vN, $vA2));
    if (!$this.$_cldTestNormal($fp0, $fR, $vL, 1)) {
        $this.$m_iExitAxis = 1;
        return 0;
    }
    oooi_CollideTrimeshBox_access$400($this.$this$086, $vL, $vA0);
    $fD = oom_DVector3_dot($vL, $this.$m_vN) / $fNLen;
    var$16 = oom_DVector3_dot($vL, $vD);
    var$17 = var$16 + oom_DVector3_dot($vA0, $this.$m_vE0);
    var$18 = var$16 + oom_DVector3_dot($vA0, $this.$m_vE1);
    if (!$this.$_cldTestFace(var$16, var$17, var$18, $fa0, $fD, $vL, 2)) {
        $this.$m_iExitAxis = 2;
        return 0;
    }
    oooi_CollideTrimeshBox_access$400($this.$this$086, $vL, $vA1);
    var$16 = oom_DVector3_dot($vL, $this.$m_vN) / $fNLen;
    var$17 = oom_DVector3_dot($vL, $vD);
    var$18 = var$17 + oom_DVector3_dot($vA1, $this.$m_vE0);
    var$19 = var$17 + oom_DVector3_dot($vA1, $this.$m_vE1);
    if (!$this.$_cldTestFace(var$17, var$18, var$19, $fa1, var$16, $vL, 3)) {
        $this.$m_iExitAxis = 3;
        return 0;
    }
    oooi_CollideTrimeshBox_access$400($this.$this$086, $vL, $vA2);
    var$19 = oom_DVector3_dot($vL, $this.$m_vN) / $fNLen;
    var$16 = oom_DVector3_dot($vL, $vD);
    var$17 = var$16 + oom_DVector3_dot($vA2, $this.$m_vE0);
    var$18 = var$16 + oom_DVector3_dot($vA2, $this.$m_vE1);
    if (!$this.$_cldTestFace(var$16, var$17, var$18, $fa2, var$19, $vL, 4)) {
        $this.$m_iExitAxis = 4;
        return 0;
    }
    oom_DVector3_eqCross($vL, $vA0, $this.$m_vE0);
    var$16 = oom_DVector3_dot($vL, $this.$m_vN) / $fNLen;
    var$17 = oom_DVector3_dot($vL, $vD);
    var$18 = var$17 + oom_DVector3_dot($vA0, $this.$m_vN);
    var$19 = $fa1 * oooi_Common_dFabs(oom_DVector3_dot($vA2, $this.$m_vE0)) + $fa2 * oooi_Common_dFabs(oom_DVector3_dot($vA1, $this.$m_vE0));
    if (!$this.$_cldTestEdge(var$17, var$18, var$19, var$16, $vL, 5)) {
        $this.$m_iExitAxis = 5;
        return 0;
    }
    oom_DVector3_eqCross($vL, $vA0, $this.$m_vE1);
    var$16 = oom_DVector3_dot($vL, $this.$m_vN) / $fNLen;
    var$17 = oom_DVector3_dot($vL, $vD);
    var$18 = var$17 - oom_DVector3_dot($vA0, $this.$m_vN);
    var$19 = $fa1 * oooi_Common_dFabs(oom_DVector3_dot($vA2, $this.$m_vE1)) + $fa2 * oooi_Common_dFabs(oom_DVector3_dot($vA1, $this.$m_vE1));
    if (!$this.$_cldTestEdge(var$17, var$18, var$19, var$16, $vL, 6)) {
        $this.$m_iExitAxis = 6;
        return 0;
    }
    oom_DVector3_eqCross($vL, $vA0, $this.$m_vE2);
    var$16 = oom_DVector3_dot($vL, $this.$m_vN) / $fNLen;
    var$17 = oom_DVector3_dot($vL, $vD);
    var$18 = var$17 - oom_DVector3_dot($vA0, $this.$m_vN);
    oom_DVector3_dot($vA0, $this.$m_vN);
    var$19 = $fa1 * oooi_Common_dFabs(oom_DVector3_dot($vA2, $this.$m_vE2)) + $fa2 * oooi_Common_dFabs(oom_DVector3_dot($vA1, $this.$m_vE2));
    if (!$this.$_cldTestEdge(var$17, var$18, var$19, var$16, $vL, 7)) {
        $this.$m_iExitAxis = 7;
        return 0;
    }
    oom_DVector3_eqCross($vL, $vA1, $this.$m_vE0);
    var$17 = oom_DVector3_dot($vL, $this.$m_vN) / $fNLen;
    var$18 = oom_DVector3_dot($vL, $vD);
    var$19 = var$18 + oom_DVector3_dot($vA1, $this.$m_vN);
    var$16 = $fa0 * oooi_Common_dFabs(oom_DVector3_dot($vA2, $this.$m_vE0)) + $fa2 * oooi_Common_dFabs(oom_DVector3_dot($vA0, $this.$m_vE0));
    if (!$this.$_cldTestEdge(var$18, var$19, var$16, var$17, $vL, 8)) {
        $this.$m_iExitAxis = 8;
        return 0;
    }
    oom_DVector3_eqCross($vL, $vA1, $this.$m_vE1);
    var$16 = oom_DVector3_dot($vL, $this.$m_vN) / $fNLen;
    var$17 = oom_DVector3_dot($vL, $vD);
    var$18 = var$17 - oom_DVector3_dot($vA1, $this.$m_vN);
    var$19 = $fa0 * oooi_Common_dFabs(oom_DVector3_dot($vA2, $this.$m_vE1)) + $fa2 * oooi_Common_dFabs(oom_DVector3_dot($vA0, $this.$m_vE1));
    if (!$this.$_cldTestEdge(var$17, var$18, var$19, var$16, $vL, 9)) {
        $this.$m_iExitAxis = 9;
        return 0;
    }
    oom_DVector3_eqCross($vL, $vA1, $this.$m_vE2);
    var$16 = oom_DVector3_dot($vL, $this.$m_vN) / $fNLen;
    var$17 = oom_DVector3_dot($vL, $vD);
    var$18 = var$17 - oom_DVector3_dot($vA1, $this.$m_vN);
    oom_DVector3_dot($vA1, $this.$m_vN);
    var$19 = $fa0 * oooi_Common_dFabs(oom_DVector3_dot($vA2, $this.$m_vE2)) + $fa2 * oooi_Common_dFabs(oom_DVector3_dot($vA0, $this.$m_vE2));
    if (!$this.$_cldTestEdge(var$17, var$18, var$19, var$16, $vL, 10)) {
        $this.$m_iExitAxis = 10;
        return 0;
    }
    oom_DVector3_eqCross($vL, $vA2, $this.$m_vE0);
    var$16 = oom_DVector3_dot($vL, $this.$m_vN) / $fNLen;
    var$17 = oom_DVector3_dot($vL, $vD);
    var$18 = var$17 + oom_DVector3_dot($vA2, $this.$m_vN);
    var$19 = $fa0 * oooi_Common_dFabs(oom_DVector3_dot($vA1, $this.$m_vE0)) + $fa1 * oooi_Common_dFabs(oom_DVector3_dot($vA0, $this.$m_vE0));
    if (!$this.$_cldTestEdge(var$17, var$18, var$19, var$16, $vL, 11)) {
        $this.$m_iExitAxis = 11;
        return 0;
    }
    oom_DVector3_eqCross($vL, $vA2, $this.$m_vE1);
    var$16 = oom_DVector3_dot($vL, $this.$m_vN) / $fNLen;
    var$17 = oom_DVector3_dot($vL, $vD);
    var$18 = var$17 - oom_DVector3_dot($vA2, $this.$m_vN);
    var$19 = $fa0 * oooi_Common_dFabs(oom_DVector3_dot($vA1, $this.$m_vE1)) + $fa1 * oooi_Common_dFabs(oom_DVector3_dot($vA0, $this.$m_vE1));
    if (!$this.$_cldTestEdge(var$17, var$18, var$19, var$16, $vL, 12)) {
        $this.$m_iExitAxis = 12;
        return 0;
    }
    oom_DVector3_eqCross($vL, $vA2, $this.$m_vE2);
    var$16 = oom_DVector3_dot($vL, $this.$m_vN) / $fNLen;
    var$18 = oom_DVector3_dot($vL, $vD);
    var$19 = var$18 - oom_DVector3_dot($vA2, $this.$m_vN);
    oom_DVector3_dot($vA2, $this.$m_vN);
    var$17 = $fa0 * oooi_Common_dFabs(oom_DVector3_dot($vA1, $this.$m_vE2)) + $fa1 * oooi_Common_dFabs(oom_DVector3_dot($vA0, $this.$m_vE2));
    if ($this.$_cldTestEdge(var$18, var$19, var$17, var$16, $vL, 13))
        return 1;
    $this.$m_iExitAxis = 13;
    return 0;
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldClosestPointOnTwoLines($this, $vPoint1, $vLenVec1, $vPoint2, $vLenVec2, $fvalue1, $fvalue2) {
    var $vp, $fuaub, $fq1, $fq2, $fd, var$12;
    $vp = oom_DVector3__init_();
    oooi_CollideTrimeshBox_access$200($this.$this$086, $vPoint2, $vPoint1, $vp);
    $fuaub = $vLenVec1.$dot($vLenVec2);
    $fq1 = $vLenVec1.$dot($vp);
    $fq2 =  -$vLenVec2.$dot($vp);
    $fd = 1.0 - $fuaub * $fuaub;
    if ($fd <= 0.0) {
        $fvalue1.$d1 = 0.0;
        $fvalue2.$d1 = 0.0;
        return 0;
    }
    var$12 = 1.0 / $fd;
    $fvalue1.$d1 = ($fq1 + $fuaub * $fq2) * var$12;
    $fvalue2.$d1 = ($fuaub * $fq1 + $fq2) * var$12;
    return 1;
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldClipping($this, $v0, $v1, $v2, $TriIndex) {
    var $vub, $vPb, $vPa, $i, $vRotCol, $fSign, $iEdge, $fParam1, $fParam2, $vua, $col, $vPntTmp, $vNormal2, $iA0, $iA1, $iA2, $avPoints, var$22, $avTempArray1, $avTempArray2, $iTempCnt1, $iTempCnt2, $plPlane, $vTemp, $fTempDepth, $mTransposed, $vNr, $vAbsNormal, $iB1, $iB2, $iB0, $vCenter, $vRotCol2, $tz1, $tz2, var$40, var$41, var$42, $vTemp2;
    a: {
        if ($this.$m_iBestAxis > 4) {
            $vub = oom_DVector3__init_();
            $vPb = oom_DVector3__init_();
            $vPa = oom_DVector3__init_();
            oooi_CollideTrimeshBox_access$400($this.$this$086, $vPa, $this.$m_vHullBoxPos);
            $i = 0;
            while ($i < 3) {
                $vRotCol = oom_DVector3__init_();
                oooi_CollideTrimeshBox_access$300($this.$this$086, $this.$m_mHullBoxRot, $i, $vRotCol);
                $fSign = oom_DVector3_dot($this.$m_vBestNormal, $vRotCol) <= 0.0 ? (-1.0) : 1.0;
                oom_DVector3_addScaled($vPa, $vRotCol, $fSign * oom_DVector3_get($this.$m_vBoxHalfSize, $i));
                $i = $i + 1 | 0;
            }
            $iEdge = ($this.$m_iBestAxis - 5 | 0) % 3 | 0;
            if (!$iEdge) {
                oooi_CollideTrimeshBox_access$400($this.$this$086, $vPb, $v0);
                oooi_CollideTrimeshBox_access$400($this.$this$086, $vub, $this.$m_vE0);
            } else if ($iEdge != 1) {
                oooi_CollideTrimeshBox_access$400($this.$this$086, $vPb, $v1);
                oooi_CollideTrimeshBox_access$400($this.$this$086, $vub, $this.$m_vE2);
            } else {
                oooi_CollideTrimeshBox_access$400($this.$this$086, $vPb, $v2);
                oooi_CollideTrimeshBox_access$400($this.$this$086, $vub, $this.$m_vE1);
            }
            oom_DVector3_normalize($vub);
            $fParam1 = oooicj_RefDouble__init_0();
            $fParam2 = oooicj_RefDouble__init_0();
            $vua = oom_DVector3__init_();
            $col = ($this.$m_iBestAxis - 5 | 0) / 3 | 0;
            oooi_CollideTrimeshBox_access$300($this.$this$086, $this.$m_mHullBoxRot, $col, $vua);
            $this.$_cldClosestPointOnTwoLines($vPa, $vua, $vPb, $vub, $fParam1, $fParam2);
            oom_DVector3_addScaled($vPa, $vua, $fParam1.$d1);
            oom_DVector3_addScaled($vPb, $vub, $fParam2.$d1);
            $vPntTmp = oom_DVector3__init_();
            oooi_CollideTrimeshBox_access$500($this.$this$086, $vPa, $vPb, $vPntTmp);
            oom_DVector3_scale($vPntTmp, 0.5);
            oooi_CollideTrimeshBox_GenerateContact($this.$m_iFlags, $this.$m_TempContactGeoms, $this.$m_iStride, $this.$m_Geom1, $this.$m_Geom2, $TriIndex, $vPntTmp, $this.$m_vBestNormal, $this.$m_fBestDepth);
        } else {
            if ($this.$m_iBestAxis != 1) {
                $vNormal2 = oom_DVector3__init_();
                oooi_CollideTrimeshBox_access$400($this.$this$086, $vNormal2, $this.$m_vBestNormal);
                $iA0 = $this.$m_iBestAxis - 2 | 0;
                if (!$iA0) {
                    $iA1 = 1;
                    $iA2 = 2;
                } else if ($iA0 != 1) {
                    $iA1 = 0;
                    $iA2 = 1;
                } else {
                    $iA1 = 0;
                    $iA2 = 2;
                }
                $avPoints = $rt_createArray(oom_DVector3, 3);
                var$22 = $avPoints.data;
                var$22[0] = oom_DVector3__init_();
                var$22[1] = oom_DVector3__init_();
                var$22[2] = oom_DVector3__init_();
                oooi_CollideTrimeshBox_access$200($this.$this$086, $v0, $this.$m_vHullBoxPos, var$22[0]);
                oooi_CollideTrimeshBox_access$200($this.$this$086, $v1, $this.$m_vHullBoxPos, var$22[1]);
                oooi_CollideTrimeshBox_access$200($this.$this$086, $v2, $this.$m_vHullBoxPos, var$22[2]);
                $avTempArray1 = oom_DVector3_newArray(9);
                $avTempArray2 = oom_DVector3_newArray(9);
                $iTempCnt1 = oooicj_RefInt__init_();
                $iTempCnt2 = oooicj_RefInt__init_();
                $plPlane = oom_DVector4__init_();
                $vTemp = oom_DVector3__init_();
                oom_DVector3_scale(oom_DVector3_set($vTemp, $vNormal2), (-1.0));
                oooi_CollideTrimeshBox_access$600($this.$this$086, $plPlane, $vTemp, oom_DVector3_get($this.$m_vBoxHalfSize, $iA0));
                $this.$_cldClipPolyToPlane($avPoints, 3, $avTempArray1, $iTempCnt1, $plPlane);
                oooi_CollideTrimeshBox_access$300($this.$this$086, $this.$m_mHullBoxRot, $iA1, $vTemp);
                oooi_CollideTrimeshBox_access$600($this.$this$086, $plPlane, $vTemp, oom_DVector3_get($this.$m_vBoxHalfSize, $iA1));
                $this.$_cldClipPolyToPlane($avTempArray1, $iTempCnt1.$i, $avTempArray2, $iTempCnt2, $plPlane);
                oooi_CollideTrimeshBox_access$300($this.$this$086, $this.$m_mHullBoxRot, $iA1, $vTemp);
                oom_DVector3_scale($vTemp, (-1.0));
                oooi_CollideTrimeshBox_access$600($this.$this$086, $plPlane, $vTemp, oom_DVector3_get($this.$m_vBoxHalfSize, $iA1));
                $this.$_cldClipPolyToPlane($avTempArray2, $iTempCnt2.$i, $avTempArray1, $iTempCnt1, $plPlane);
                oooi_CollideTrimeshBox_access$300($this.$this$086, $this.$m_mHullBoxRot, $iA2, $vTemp);
                oooi_CollideTrimeshBox_access$600($this.$this$086, $plPlane, $vTemp, oom_DVector3_get($this.$m_vBoxHalfSize, $iA2));
                $this.$_cldClipPolyToPlane($avTempArray1, $iTempCnt1.$i, $avTempArray2, $iTempCnt2, $plPlane);
                oooi_CollideTrimeshBox_access$300($this.$this$086, $this.$m_mHullBoxRot, $iA2, $vTemp);
                oom_DVector3_scale($vTemp, (-1.0));
                oooi_CollideTrimeshBox_access$600($this.$this$086, $plPlane, $vTemp, oom_DVector3_get($this.$m_vBoxHalfSize, $iA2));
                $this.$_cldClipPolyToPlane($avTempArray2, $iTempCnt2.$i, $avTempArray1, $iTempCnt1, $plPlane);
                $i = 0;
                while (true) {
                    if ($i >= $iTempCnt1.$i)
                        break a;
                    var$22 = $avTempArray1.data;
                    $fTempDepth = oom_DVector3_dot($vNormal2, var$22[$i]) - oom_DVector3_get($this.$m_vBoxHalfSize, $iA0);
                    if ($fTempDepth > 0.0)
                        $fTempDepth = 0.0;
                    $vPntTmp = oom_DVector3__init_();
                    oooi_CollideTrimeshBox_access$500($this.$this$086, var$22[$i], $this.$m_vHullBoxPos, $vPntTmp);
                    oooi_CollideTrimeshBox_GenerateContact($this.$m_iFlags, $this.$m_TempContactGeoms, $this.$m_iStride, $this.$m_Geom1, $this.$m_Geom2, $TriIndex, $vPntTmp, $this.$m_vBestNormal,  -$fTempDepth);
                    $i = $i + 1 | 0;
                }
            }
            $vNormal2 = oom_DVector3__init_();
            oom_DVector3_scale(oom_DVector3_set($vNormal2, $this.$m_vBestNormal), (-1.0));
            $mTransposed = oom_DMatrix3_reTranspose($this.$m_mHullBoxRot);
            $vNr = oom_DVector3__init_();
            oom_DVector3_eqProd($vNr, $mTransposed, $vNormal2);
            $vAbsNormal = oom_DVector3__init_();
            oom_DVector3_eqAbs(oom_DVector3_set($vAbsNormal, $vNr));
            if (oom_DVector3_get1($vAbsNormal) <= oom_DVector3_get0($vAbsNormal)) {
                if (oom_DVector3_get0($vAbsNormal) <= oom_DVector3_get2($vAbsNormal)) {
                    $iB1 = 0;
                    $iB2 = 1;
                    $iB0 = 2;
                } else {
                    $iB0 = 0;
                    $iB1 = 1;
                    $iB2 = 2;
                }
            } else if (oom_DVector3_get1($vAbsNormal) <= oom_DVector3_get2($vAbsNormal)) {
                $iB1 = 0;
                $iB2 = 1;
                $iB0 = 2;
            } else {
                $iB1 = 0;
                $iB0 = 1;
                $iB2 = 2;
            }
            $vCenter = oom_DVector3__init_();
            $vRotCol = oom_DVector3__init_();
            oooi_CollideTrimeshBox_access$300($this.$this$086, $this.$m_mHullBoxRot, $iB0, $vRotCol);
            if (oom_DVector3_get($vNr, $iB0) <= 0.0) {
                oom_DVector3_eqSum($vCenter, $v0, (-1.0), $vRotCol, oom_DVector3_get($this.$m_vBoxHalfSize, $iB0));
                oom_DVector3_add($vCenter, $this.$m_vHullBoxPos);
            } else {
                oom_DVector3_eqSum($vCenter, $v0, (-1.0), $vRotCol,  -oom_DVector3_get($this.$m_vBoxHalfSize, $iB0));
                oom_DVector3_add($vCenter, $this.$m_vHullBoxPos);
            }
            $avPoints = $rt_createArray(oom_DVector3, 4);
            var$22 = $avPoints.data;
            var$22[0] = oom_DVector3__init_();
            var$22[1] = oom_DVector3__init_();
            var$22[2] = oom_DVector3__init_();
            var$22[3] = oom_DVector3__init_();
            $vRotCol2 = oom_DVector3__init_();
            oooi_CollideTrimeshBox_access$300($this.$this$086, $this.$m_mHullBoxRot, $iB1, $vRotCol);
            oooi_CollideTrimeshBox_access$300($this.$this$086, $this.$m_mHullBoxRot, $iB2, $vRotCol2);
            $tz1 = oom_DVector3_get($this.$m_vBoxHalfSize, $iB1);
            $tz2 = oom_DVector3_get($this.$m_vBoxHalfSize, $iB2);
            var$40 = var$22[0];
            var$41 =  -$tz2;
            oom_DVector3_add(oom_DVector3_eqSum(var$40, $vRotCol, $tz1, $vRotCol2, var$41), $vCenter);
            var$40 = var$22[1];
            var$42 =  -$tz1;
            oom_DVector3_add(oom_DVector3_eqSum(var$40, $vRotCol, var$42, $vRotCol2, var$41), $vCenter);
            oom_DVector3_add(oom_DVector3_eqSum(var$22[2], $vRotCol, var$42, $vRotCol2, $tz2), $vCenter);
            oom_DVector3_add(oom_DVector3_eqSum(var$22[3], $vRotCol, $tz1, $vRotCol2, $tz2), $vCenter);
            $avTempArray1 = oom_DVector3_newArray(9);
            $avTempArray2 = oom_DVector3_newArray(9);
            $plPlane = oom_DVector4__init_();
            $iTempCnt1 = oooicj_RefInt__init_0(0);
            $iTempCnt2 = oooicj_RefInt__init_0(0);
            $vTemp = oom_DVector3__init_();
            oom_DVector3_scale(oom_DVector3_set($vTemp, $this.$m_vN), (-1.0));
            oom_DVector3_normalize($vTemp);
            oooi_CollideTrimeshBox_access$600($this.$this$086, $plPlane, $vTemp, 0.0);
            $this.$_cldClipPolyToPlane($avPoints, 4, $avTempArray1, $iTempCnt1, $plPlane);
            $vTemp2 = oom_DVector3__init_();
            oooi_CollideTrimeshBox_access$200($this.$this$086, $v1, $v0, $vTemp2);
            oom_DVector3_eqCross($vTemp, $this.$m_vN, $vTemp2);
            oom_DVector3_normalize($vTemp);
            oooi_CollideTrimeshBox_access$600($this.$this$086, $plPlane, $vTemp, 0.0);
            $this.$_cldClipPolyToPlane($avTempArray1, $iTempCnt1.$i, $avTempArray2, $iTempCnt2, $plPlane);
            oooi_CollideTrimeshBox_access$200($this.$this$086, $v2, $v1, $vTemp2);
            oom_DVector3_eqCross($vTemp, $this.$m_vN, $vTemp2);
            oom_DVector3_normalize($vTemp);
            oooi_CollideTrimeshBox_access$200($this.$this$086, $v0, $v2, $vTemp2);
            oooi_CollideTrimeshBox_access$600($this.$this$086, $plPlane, $vTemp, oom_DVector3_dot($vTemp2, $vTemp));
            $this.$_cldClipPolyToPlane($avTempArray2, $iTempCnt2.$i, $avTempArray1, $iTempCnt1, $plPlane);
            oooi_CollideTrimeshBox_access$200($this.$this$086, $v0, $v2, $vTemp2);
            oom_DVector3_eqCross($vTemp, $this.$m_vN, $vTemp2);
            oom_DVector3_normalize($vTemp);
            oooi_CollideTrimeshBox_access$600($this.$this$086, $plPlane, $vTemp, 0.0);
            $this.$_cldClipPolyToPlane($avTempArray1, $iTempCnt1.$i, $avTempArray2, $iTempCnt2, $plPlane);
            $i = 0;
            while ($i < $iTempCnt2.$i) {
                var$22 = $avTempArray2.data;
                $fTempDepth = oom_DVector3_dot($vNormal2, var$22[$i]);
                if ($fTempDepth > 0.0)
                    $fTempDepth = 0.0;
                $vPntTmp = oom_DVector3__init_();
                oooi_CollideTrimeshBox_access$500($this.$this$086, var$22[$i], $v0, $vPntTmp);
                oooi_CollideTrimeshBox_GenerateContact($this.$m_iFlags, $this.$m_TempContactGeoms, $this.$m_iStride, $this.$m_Geom1, $this.$m_Geom2, $TriIndex, $vPntTmp, $this.$m_vBestNormal,  -$fTempDepth);
                $i = $i + 1 | 0;
            }
        }
    }
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldTestOneTriangle($this, $v0, $v1, $v2, $TriIndex) {
    if (!$this.$_cldTestSeparatingAxes($v0, $v1, $v2))
        return;
    if (!$this.$m_iBestAxis)
        return;
    $this.$_cldClipping($v0, $v1, $v2, $TriIndex);
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData_SetupInitialContext($this, $TriMesh, $BoxGeom, $Flags, $Contacts, $Stride) {
    oom_DMatrix3_set($this.$m_mHullBoxRot, $BoxGeom.$getRotation2());
    oom_DVector3_set($this.$m_vHullBoxPos, $BoxGeom.$getPosition2());
    oom_DVector3_set($this.$m_vBoxHalfSize, $BoxGeom.$getLengths0());
    oom_DVector3_scale($this.$m_vBoxHalfSize, 0.5);
    oom_DVector3_set($this.$m_vHullDstPos, $TriMesh.$getPosition2());
    $this.$m_TempContactGeoms = ju_ArrayList__init_();
    if ($Stride != 1)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(860)).$append1($Stride).$toString()));
    $this.$m_iStride = $Stride;
    $this.$m_iFlags = $Flags;
    $this.$m_ContactGeoms = $Contacts;
    $this.$m_Geom1 = $TriMesh;
    $this.$m_Geom2 = $BoxGeom;
    $this.$m_fBestDepth = 1.7976931348623157E308;
    oom_DVector3_setZero($this.$m_vBestNormal);
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData_TestCollisionForSingleTriangle($this, $ctContacts0, $Triint, $dv, $bOutFinishSearching) {
    var var$5, $pContact;
    var$5 = $dv.data;
    oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldTestOneTriangle($this, var$5[0], var$5[1], var$5[2], $Triint);
    while ($ctContacts0 < $this.$m_TempContactGeoms.$size()) {
        $pContact = $this.$m_TempContactGeoms.$get1($ctContacts0);
        $pContact.$side1 = $Triint;
        $pContact.$side2 = (-1);
        $ctContacts0 = $ctContacts0 + 1 | 0;
    }
    return $ctContacts0;
}
function oooi_CollideTrimeshBox$sTrimeshBoxColliderData_access$700($x0, $x1, $x2, $x3, $x4) {
    return oooi_CollideTrimeshBox$sTrimeshBoxColliderData_TestCollisionForSingleTriangle($x0, $x1, $x2, $x3, $x4);
}
function oooig_GimDynArray() {
    var a = this; jl_Object.call(a);
    a.$m_pdata = null;
    a.$m_size = 0;
    a.$m_reserve_size = 0;
}
function oooig_GimDynArray__init_() {
    var var_0 = new oooig_GimDynArray();
    oooig_GimDynArray__init_0(var_0);
    return var_0;
}
function oooig_GimDynArray__init_0($this) {
    jl_Object__init_0($this);
}
function oooig_GimDynArray_GIM_DYNARRAY_CREATE($reserve_size) {
    var $a;
    $a = oooig_GimDynArray__init_();
    $a.$m_pdata = $rt_createArray(jl_Object, $reserve_size);
    $a.$m_size = 0;
    $a.$m_reserve_size = $reserve_size;
    return $a;
}
function oooig_GimDynArray_GIM_DYNARRAY_CREATE_SIZED($size) {
    var $a;
    $a = oooig_GimDynArray__init_();
    $a.$m_pdata = $rt_createArray(jl_Object, $size);
    $a.$m_size = $size;
    $a.$m_reserve_size = $size;
    return $a;
}
function oooig_GimDynArray_GIM_DYNARRAY_RESERVE_SIZE($this, $old_size, $reserve_size) {
    if ($reserve_size > $this.$m_reserve_size) {
        $this.$m_pdata = ju_Arrays_copyOf2($this.$m_pdata, $reserve_size);
        $this.$m_reserve_size = $reserve_size;
    }
}
function oooig_GimDynArray_GIM_DYNARRAY_POINTER($this) {
    return $this.$m_pdata;
}
function oooig_GimDynArray_GIM_DYNARRAY_POINTER_V($this) {
    return oooicj_ObjArray__init_0($this.$m_pdata);
}
function oooig_GimDynArray_GIM_DYNARRAY_PUSH_ITEM_TZ($this, $item) {
    var $_pt, var$3;
    if ($this.$m_reserve_size <= $this.$m_size)
        $this.$GIM_DYNARRAY_RESERVE_SIZE($this.$m_size, $this.$m_size + 64 | 0);
    $_pt = $this.$GIM_DYNARRAY_POINTER();
    var$3 = $_pt.data;
    var$3[$this.$m_size] = $item;
    $this.$m_size = $this.$m_size + 1 | 0;
}
function oooig_GimDynArray_GIM_DYNARRAY_DESTROY($this) {
    if ($this.$m_pdata !== null) {
        $this.$m_pdata = null;
        $this.$m_reserve_size = 0;
        $this.$m_size = 0;
        $this.$m_pdata = null;
    }
}
function oooig_GimDynArray_size($this) {
    return $this.$m_size;
}
function jur_UEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter1 = 0;
}
function jur_UEOLSet__init_(var_0) {
    var var_1 = new jur_UEOLSet();
    jur_UEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_0($this);
    $this.$consCounter1 = $counter;
}
function jur_UEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound;
    $rightBound = !$matchResult.$hasAnchoringBounds() ? $testString.$length() : $matchResult.$getRightBound();
    if ($strIndex >= $rightBound) {
        $matchResult.$setConsumed($this.$consCounter1, 0);
        return $this.$next0.$matches($strIndex, $testString, $matchResult);
    }
    if (($rightBound - $strIndex | 0) == 1 && $testString.$charAt($strIndex) == 10) {
        $matchResult.$setConsumed($this.$consCounter1, 1);
        return $this.$next0.$matches($strIndex + 1 | 0, $testString, $matchResult);
    }
    return (-1);
}
function jur_UEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter1) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter1, (-1));
    return $res;
}
function oktgg_GLTFTexture() {
    var a = this; jl_Object.call(a);
    a.$sampler = 0;
    a.$source = 0;
    a.$gltf5 = null;
    a.$elementIndex4 = 0;
    a.$texture = null;
    a.$name24 = null;
}
function oktgg_GLTFTexture__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktgg_GLTFTexture();
    oktgg_GLTFTexture__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktgg_GLTFTexture__init_1(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktgg_GLTFTexture();
    oktgg_GLTFTexture__init_2(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktgg_GLTFTexture_setSampler($this, $_set___) {
    $this.$sampler = $_set___;
}
function oktgg_GLTFTexture_getSource($this) {
    return $this.$source;
}
function oktgg_GLTFTexture_setSource($this, $_set___) {
    $this.$source = $_set___;
}
function oktgg_GLTFTexture_read($this, $json) {
    var $minFilter, $magFilter, $sWrap, $tWrap, var$6, $generateMipmaps;
    a: {
        kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
        $minFilter = kji_Ref$IntRef__init_();
        oktgg_GLTF_$callClinit();
        $minFilter.$element = oktgg_GLTF$Companion_getDefaultTextureMinFilter(oktgg_GLTF_Companion);
        $magFilter = kji_Ref$IntRef__init_();
        $magFilter.$element = oktgg_GLTF$Companion_getDefaultTextureMagFilter(oktgg_GLTF_Companion);
        $sWrap = kji_Ref$IntRef__init_();
        $sWrap.$element = 10497;
        $tWrap = kji_Ref$IntRef__init_();
        $tWrap.$element = 10497;
        $json.$int($rt_s(450), oktgg_GLTFTexture$read$1__init_($this, $minFilter, $magFilter, $sWrap, $tWrap));
        switch ($minFilter.$element) {
            case 9728:
            case 9729:
                break;
            case 9984:
            case 9985:
            case 9986:
            case 9987:
                var$6 = 1;
                break a;
            default:
                var$6 = 0;
                break a;
        }
        var$6 = 0;
    }
    b: {
        if (!var$6) {
            c: {
                switch ($magFilter.$element) {
                    case 9728:
                    case 9729:
                        break;
                    case 9984:
                    case 9985:
                    case 9986:
                    case 9987:
                        var$6 = 1;
                        break c;
                    default:
                        var$6 = 0;
                        break c;
                }
                var$6 = 0;
            }
            if (!var$6) {
                $generateMipmaps = 0;
                break b;
            }
        }
        $generateMipmaps = 1;
    }
    $json.$int($rt_s(808), oktgg_GLTFTexture$read$2__init_($this, $minFilter, $magFilter, $sWrap, $tWrap, $generateMipmaps, $json));
}
function oktgg_GLTFTexture_destroy($this) {
    $this.$texture.$destroy0();
}
function oktgg_GLTFTexture_getGltf($this) {
    return $this.$gltf5;
}
function oktgg_GLTFTexture_getElementIndex($this) {
    return $this.$elementIndex4;
}
function oktgg_GLTFTexture_getTexture($this) {
    return $this.$texture;
}
function oktgg_GLTFTexture__init_0($this, $gltf, $elementIndex, $texture, $name) {
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($texture, $rt_s(861));
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    jl_Object__init_0($this);
    $this.$gltf5 = $gltf;
    $this.$elementIndex4 = $elementIndex;
    $this.$texture = $texture;
    $this.$name24 = $name;
    $this.$sampler = (-1);
    $this.$source = (-1);
}
function oktgg_GLTFTexture__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$5 & 4)
        var$3 = oktt_Texture2D__init_0((-1));
    if (var$5 & 8)
        var$4 = $rt_s(6);
    oktgg_GLTFTexture__init_0(var$0, var$1, var$2, var$3, var$4);
}
function jur_UCICharSet() {
    jur_LeafSet.call(this);
    this.$ch2 = 0;
}
function jur_UCICharSet__init_(var_0) {
    var var_1 = new jur_UCICharSet();
    jur_UCICharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCICharSet__init_0($this, $ch) {
    jur_LeafSet__init_2($this);
    $this.$ch2 = jl_Character_toLowerCase(jl_Character_toUpperCase($ch));
}
function jur_UCICharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch2 != jl_Character_toLowerCase(jl_Character_toUpperCase($testString.$charAt($strIndex))) ? (-1) : 1;
}
function oktg_IMaterial() {
}
var oktg_IMaterial_Companion = null;
function oktg_IMaterial_$callClinit() {
    oktg_IMaterial_$callClinit = $rt_eraseClinit(oktg_IMaterial);
    oktg_IMaterial__clinit_();
}
function oktg_IMaterial__clinit_() {
    oktg_IMaterial$Companion_$callClinit();
    oktg_IMaterial_Companion = oktg_IMaterial$Companion_$$INSTANCE;
}
function oktgg_GLTF$read$6$1() {
    kji_Lambda.call(this);
    this.$this$087 = null;
}
function oktgg_GLTF$read$6$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$6$1();
    oktgg_GLTF$read$6$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$6$1_invoke(var$0, var$1) {
    oktgg_GLTF$read$6$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$6$1_invoke0($this, $$this$objs) {
    var $image;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $image = oktgg_GLTFImage__init_1($this.$this$087.$this$088, oktgg_GLTFArray_size($this.$this$087.$this$088.$getImages()), null, 4, null);
    $this.$this$087.$this$088.$getImages().$add1($image);
    oktgg_GLTFImage_read($image, $$this$objs);
}
function oktgg_GLTF$read$6$1__init_0(var$0, var$1) {
    var$0.$this$087 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktsg_OutputNode() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$alphaMode = 0;
    a.$alphaCutoff = 0.0;
    a.$cullFaceMode = 0;
}
var oktsg_OutputNode_InputForm = null;
var oktsg_OutputNode_Companion = null;
function oktsg_OutputNode_$callClinit() {
    oktsg_OutputNode_$callClinit = $rt_eraseClinit(oktsg_OutputNode);
    oktsg_OutputNode__clinit_();
}
function oktsg_OutputNode__init_(var_0, var_1) {
    var var_2 = new oktsg_OutputNode();
    oktsg_OutputNode__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktsg_OutputNode__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new oktsg_OutputNode();
    oktsg_OutputNode__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktsg_OutputNode__init_3() {
    var var_0 = new oktsg_OutputNode();
    oktsg_OutputNode__init_4(var_0);
    return var_0;
}
function oktsg_OutputNode_getVertPosition($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(862));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_OutputNode_getFragColor($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(863));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_OutputNode_setAlphaMode($this, $_set___) {
    $this.$alphaMode = $_set___;
}
function oktsg_OutputNode_setAlphaCutoff($this, $_set___) {
    $this.$alphaCutoff = $_set___;
}
function oktsg_OutputNode_setCullFaceMode($this, $_set___) {
    $this.$cullFaceMode = $_set___;
}
function oktsg_OutputNode_prepareToDrawMesh($this, $mesh) {
    kji_Intrinsics_checkParameterIsNotNull($mesh, $rt_s(43));
    oktsg_ShaderNode_prepareToDrawMesh($this, $mesh);
    oktg_GL_$callClinit();
    oktg_GL_setBlendEnabled(oktg_GL_INSTANCE, $this.$alphaMode != 2 ? 0 : 1);
    if (oktg_GL_isBlendEnabled0(oktg_GL_INSTANCE))
        oktg_GL_setSimpleAlphaBlending(oktg_GL_INSTANCE);
    oktg_GL_setCullFaceEnabled(oktg_GL_INSTANCE, oktg_GL_getCullFaceMode(oktg_GL_INSTANCE) ? 0 : 1);
    if (oktg_GL_isCullFaceEnabled0(oktg_GL_INSTANCE))
        oktg_GL_setCullFaceMode(oktg_GL_INSTANCE, $this.$cullFaceMode);
}
function oktsg_OutputNode_executionVert($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $out.$append(jl_StringBuilder__init_().$append($rt_s(864)).$append(oktsg_OutputNode_getVertPosition($this).$asVec4()).$append12(59).$toString());
}
function oktsg_OutputNode_executionFrag($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $out.$append(jl_StringBuilder__init_().$append($rt_s(865)).$append(oktsg_OutputNode_getFragColor($this).$asVec4()).$append($rt_s(330)).$toString());
    if ($this.$alphaMode == 1) {
        $out.$append(jl_StringBuilder__init_().$append($rt_s(866)).$append11($this.$alphaCutoff).$append($rt_s(867)).$toString());
        $out.$append($rt_s(868));
    }
}
function oktsg_OutputNode__init_0($this, $vertPosition, $fragColor) {
    oktsg_OutputNode_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($vertPosition, $rt_s(862));
    kji_Intrinsics_checkParameterIsNotNull($fragColor, $rt_s(863));
    oktsg_ShaderNode__init_0($this);
    $this.$alphaCutoff = 0.5;
    $this.$cullFaceMode = 1029;
    $this.$setInput($rt_s(862), $vertPosition);
    $this.$setInput($rt_s(863), $fragColor);
}
function oktsg_OutputNode__init_2(var$0, var$1, var$2, var$3, var$4) {
    oktsg_OutputNode_$callClinit();
    if (var$3 & 1) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    if (var$3 & 2) {
        oktsg_GLSL_$callClinit();
        var$2 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    oktsg_OutputNode__init_0(var$0, var$1, var$2);
}
function oktsg_OutputNode__init_4(var$0) {
    oktsg_OutputNode_$callClinit();
    oktsg_OutputNode__init_2(var$0, null, null, 3, null);
}
function oktsg_OutputNode__clinit_() {
    var var$1;
    oktsg_OutputNode_Companion = oktsg_OutputNode$Companion__init_(null);
    var$1 = ju_LinkedHashMap__init_();
    var$1.$put3($rt_s(862), jl_Integer_valueOf(6));
    var$1.$put3($rt_s(863), jl_Integer_valueOf(6));
    oktsg_OutputNode_InputForm = var$1;
}
function oktgg_GLTFScene$read$3$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$034 = null;
    a.$$sceneNodes = null;
}
function oktgg_GLTFScene$read$3$1__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFScene$read$3$1();
    oktgg_GLTFScene$read$3$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFScene$read$3$1_invoke(var$0, var$1) {
    oktgg_GLTFScene$read$3$1_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFScene$read$3$1_invoke0($this, $nodeIndex) {
    oktgg_GLTFScene_getNodes($this.$this$034.$this$035).$add1(jl_Integer_valueOf($nodeIndex));
    oktgg_GLTFScene_getGltf($this.$this$034.$this$035).$getNodes1().$getOrWait0($nodeIndex, oktgg_GLTFScene$read$3$1$1__init_($this));
}
function oktgg_GLTFScene$read$3$1__init_0(var$0, var$1, var$2) {
    var$0.$this$034 = var$1;
    var$0.$$sceneNodes = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function otjt_ArrayBufferView() {
    jl_Object.call(this);
}
function otjt_Uint16Array() {
    otjt_ArrayBufferView.call(this);
}
function okta_IAL() {
}
function otjde_FocusEventTarget() {
}
function jur_FSet$PossessiveFSet() {
    jur_AbstractSet.call(this);
}
function jur_FSet$PossessiveFSet__init_() {
    var var_0 = new jur_FSet$PossessiveFSet();
    jur_FSet$PossessiveFSet__init_0(var_0);
    return var_0;
}
function jur_FSet$PossessiveFSet__init_0($this) {
    jur_AbstractSet__init_0($this);
}
function jur_FSet$PossessiveFSet_matches($this, $stringIndex, $testString, $matchResult) {
    return $stringIndex;
}
function jur_FSet$PossessiveFSet_hasConsumed($this, $mr) {
    return 0;
}
function jur_CompositeGroupQuantifierSet() {
    var a = this; jur_GroupQuantifierSet.call(a);
    a.$quantifier0 = null;
    a.$setCounter = 0;
}
function jur_CompositeGroupQuantifierSet__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_CompositeGroupQuantifierSet();
    jur_CompositeGroupQuantifierSet__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_CompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    $this.$quantifier0 = $quant;
    $this.$setCounter = $setCounter;
}
function jur_CompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $enterCounter, var$5, var$6, $nextIndex;
    $enterCounter = $matchResult.$getEnterCounter($this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier0.$max0())
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    var$5 = $this.$setCounter;
    var$6 = $enterCounter + 1 | 0;
    $matchResult.$setEnterCounter(var$5, var$6);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0) {
        $matchResult.$setEnterCounter($this.$setCounter, 0);
        return $nextIndex;
    }
    var$5 = $this.$setCounter;
    var$6 = var$6 + (-1) | 0;
    $matchResult.$setEnterCounter(var$5, var$6);
    if (var$6 >= $this.$quantifier0.$min0())
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    $matchResult.$setEnterCounter($this.$setCounter, 0);
    return (-1);
}
function jur_PosCompositeGroupQuantifierSet() {
    jur_CompositeGroupQuantifierSet.call(this);
}
function jur_PosCompositeGroupQuantifierSet__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_PosCompositeGroupQuantifierSet();
    jur_PosCompositeGroupQuantifierSet__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_PosCompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_CompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PosCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $counter, $max, $nextIndex;
    $counter = 0;
    $max = $this.$quantifier0.$max0();
    a: {
        while (true) {
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
            if ($nextIndex <= $stringIndex)
                break a;
            if ($counter >= $max)
                break;
            $counter = $counter + 1 | 0;
            $stringIndex = $nextIndex;
        }
    }
    if ($nextIndex < 0 && $counter < $this.$quantifier0.$min0())
        return (-1);
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
}
function oktts_MotionBlurBaseTest() {
    jl_Object.call(this);
}
function oktts_MotionBlurBaseTest__init_() {
    var var_0 = new oktts_MotionBlurBaseTest();
    oktts_MotionBlurBaseTest__init_0(var_0);
    return var_0;
}
function oktts_MotionBlurBaseTest_getName($this) {
    return $rt_s(869);
}
function oktts_MotionBlurBaseTest_testMain($this) {
    var $sceneColorShader, var$2, var$3, var$4, var$5, $velocityShader, var$7, var$8, $plane, $screenQuad, $sceneColorBuffer, $velocityMapBuffer, var$13, var$14, $motionBlur, $cube, $cubePos, $cubePrevPos, $moveDir, $movingEnabled, $cubeColor;
    oktg_GL_$callClinit();
    if (oktg_GL_isGLES(oktg_GL_INSTANCE) && oktg_GL_getGlesMajVer(oktg_GL_INSTANCE) == 3 && !oktg_GL_enableExtension(oktg_GL_INSTANCE, $rt_s(337))) {
        okt_APP_$callClinit();
        okt_APP_messageBox(okt_APP_INSTANCE, $rt_s(335), $rt_s(338));
        return;
    }
    $sceneColorShader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($sceneColorShader, $rt_s(870), $rt_s(871), var$2, 0, var$3, 0, var$4, 124, var$5);
    $velocityShader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($velocityShader, $rt_s(872), $rt_s(873), var$2, 0, var$3, 0, var$4, 124, var$5);
    oktgc_ActiveCamera_$callClinit();
    var$7 = oktgc_ActiveCamera_INSTANCE;
    var$8 = new oktgc_Camera;
    var$2 = oktm_Vec3__init_0(5.0, 5.0, 0.0);
    oktm_IVec3_$callClinit();
    var$3 = oktm_IVec3$Companion_getZero(oktm_IVec3_Companion);
    oktgc_Camera__init_6(var$8, var$2, var$3, 0.10000000149011612, 100.0);
    oktgc_ActiveCamera_setApi(var$7, var$8);
    $plane = oktmb_MeshBuilder_build$default(oktmb_PlaneMeshBuilder__init_(5.0, 5.0, 0, 0, null, null, 60, null), null, 1, null);
    $screenQuad = oktm_ScreenQuad$TextureRenderer__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    $sceneColorBuffer = new oktt_SimpleFrameBuffer;
    okt_APP_$callClinit();
    oktt_SimpleFrameBuffer__init_($sceneColorBuffer, okt_APP_getWidth(okt_APP_INSTANCE), okt_APP_getHeight(okt_APP_INSTANCE), 6408, 0, 0, 0, 0, 120, null);
    $velocityMapBuffer = new oktt_SimpleFrameBuffer;
    var$13 = okt_APP_getWidth(okt_APP_INSTANCE);
    var$14 = okt_APP_getHeight(okt_APP_INSTANCE);
    var$7 = null;
    oktt_SimpleFrameBuffer__init_($velocityMapBuffer, var$13, var$14, 33319, 33327, 5126, 0, 0, 96, var$7);
    $motionBlur = new oktsp_MotionBlur;
    var$7 = oktt_SimpleFrameBuffer_getTexture($sceneColorBuffer, 0);
    var$8 = oktt_SimpleFrameBuffer_getTexture($velocityMapBuffer, 0);
    var$2 = null;
    oktsp_MotionBlur__init_($motionBlur, var$7, var$8, 1.0, 16, 0.0, 16, var$2);
    $cube = oktmb_MeshBuilder_build$default(oktmb_BoxMeshBuilder__init_(0.0, 0.0, 0.0, 7, null), null, 1, null);
    $cubePos = oktm_Vec3__init_0(0.0, 1.0, 0.0);
    $cubePrevPos = oktm_Vec3__init_1($cubePos);
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    $moveDir = kji_Ref$FloatRef__init_();
    $moveDir.$element2 = 1.0;
    $movingEnabled = kji_Ref$BooleanRef__init_();
    $movingEnabled.$element1 = 1;
    okti_MOUSE_$callClinit();
    okti_MOUSE_addListener(okti_MOUSE_INSTANCE, oktts_MotionBlurBaseTest$testMain$1__init_($movingEnabled));
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, $rt_s(874), null, 2, null);
    $cubeColor = oktm_Vec3__init_0(1.0, 0.5, 0.0);
    oktgc_ActiveCamera_updatePreviousTransform(oktgc_ActiveCamera_INSTANCE);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktts_MotionBlurBaseTest$testMain$2__init_($movingEnabled, $cubePos, $moveDir, $velocityMapBuffer, $velocityShader, $cubePrevPos, $cube, $plane, $sceneColorBuffer, $sceneColorShader, $cubeColor, $motionBlur, $screenQuad), 1, null);
}
function oktts_MotionBlurBaseTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktgl_DirectionalLight$renderShadowMaps$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$089 = null;
    a.$$i1 = 0;
    a.$$camFarSubNear = 0.0;
    a.$$sceneCameraFrustumPoints = null;
    a.$$scene = null;
}
function oktgl_DirectionalLight$renderShadowMaps$1__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgl_DirectionalLight$renderShadowMaps$1();
    oktgl_DirectionalLight$renderShadowMaps$1__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktgl_DirectionalLight$renderShadowMaps$1_invoke(var$0, var$1) {
    oktgl_DirectionalLight$renderShadowMaps$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgl_DirectionalLight$renderShadowMaps$1_invoke0($this, $$this$render) {
    var $alphaNear, $j, $p, $alphaFar, var$6, var$7, $minX, $maxX, $minY, $maxY, $minZ, $maxZ, var$14, var$15, var$16, $vW, $lightMat, $far;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktgl_DirectionalLight_$callClinit();
    oktgl_DirectionalLight$Companion_getCentroid(oktgl_DirectionalLight_Companion).$set44(0.0, 0.0, 0.0);
    $alphaNear = !$this.$$i1 ? 0.0 : oktgl_DirectionalLight_getShadowCascadeEnd($this.$this$089).data[$this.$$i1 - 1 | 0].$floatValue() / $this.$$camFarSubNear;
    $j = 0;
    while ($j < 4) {
        $p = oktgl_DirectionalLight$Companion_getSubFrustumPoints(oktgl_DirectionalLight_Companion).data[$j];
        $p.$set11($this.$$sceneCameraFrustumPoints.$get1($j)).$lerp($this.$$sceneCameraFrustumPoints.$get1($j + 4 | 0), $alphaNear);
        oktgl_DirectionalLight$Companion_getCentroid(oktgl_DirectionalLight_Companion).$add8($p);
        $j = $j + 1 | 0;
    }
    $alphaFar = oktgl_DirectionalLight_getShadowCascadeEnd($this.$this$089).data[$this.$$i1].$floatValue() / $this.$$camFarSubNear;
    $j = 0;
    while ($j < 4) {
        var$6 = oktgl_DirectionalLight$Companion_getSubFrustumPoints(oktgl_DirectionalLight_Companion).data;
        var$7 = $j + 4 | 0;
        $p = var$6[var$7];
        $p.$set11($this.$$sceneCameraFrustumPoints.$get1($j)).$lerp($this.$$sceneCameraFrustumPoints.$get1(var$7), $alphaFar);
        oktgl_DirectionalLight$Companion_getCentroid(oktgl_DirectionalLight_Companion).$add8($p);
        $j = $j + 1 | 0;
    }
    oktgl_DirectionalLight$Companion_getCentroid(oktgl_DirectionalLight_Companion).$scl(0.125);
    kji_FloatCompanionObject_$callClinit();
    $minX = kji_FloatCompanionObject_getMAX_VALUE(kji_FloatCompanionObject_INSTANCE);
    $maxX = kji_FloatCompanionObject_getMIN_VALUE(kji_FloatCompanionObject_INSTANCE);
    $minY = kji_FloatCompanionObject_getMAX_VALUE(kji_FloatCompanionObject_INSTANCE);
    $maxY = kji_FloatCompanionObject_getMIN_VALUE(kji_FloatCompanionObject_INSTANCE);
    $minZ = kji_FloatCompanionObject_getMAX_VALUE(kji_FloatCompanionObject_INSTANCE);
    $maxZ = kji_FloatCompanionObject_getMIN_VALUE(kji_FloatCompanionObject_INSTANCE);
    var$14 = oktgl_DirectionalLight$Companion_getLightViewTmp(oktgl_DirectionalLight_Companion);
    var$15 = oktgl_DirectionalLight$Companion_getCentroid(oktgl_DirectionalLight_Companion);
    var$16 = oktgl_DirectionalLight_getDirection($this.$this$089);
    oktm_IVec3_$callClinit();
    var$14.$setToLookAt(var$15, var$16, oktm_IVec3$Companion_getY(oktm_IVec3_Companion));
    $j = 0;
    while ($j < 8) {
        $vW = oktgl_DirectionalLight$Companion_getSubFrustumPoints(oktgl_DirectionalLight_Companion).data[$j].$mul0(oktgl_DirectionalLight$Companion_getLightViewTmp(oktgl_DirectionalLight_Companion));
        $minX = jl_Math_min1($minX, $vW.$getX0());
        $maxX = jl_Math_max1($maxX, $vW.$getX0());
        $minY = jl_Math_min1($minY, $vW.$getY0());
        $maxY = jl_Math_max1($maxY, $vW.$getY0());
        $minZ = jl_Math_min1($minZ, $vW.$getZ());
        $maxZ = jl_Math_max1($maxZ, $vW.$getZ());
        $j = $j + 1 | 0;
    }
    $lightMat = oktgl_DirectionalLight_getViewProjectionMatrices($this.$this$089).data[$this.$$i1];
    $far = $maxZ - $minZ + oktgl_DirectionalLight_getLightPositionOffset($this.$this$089);
    $lightMat.$setToOrtho($minX, $maxX, $minY, $maxY, 0.0, $far);
    oktgl_DirectionalLight$Companion_getLightPos(oktgl_DirectionalLight_Companion).$set11(oktgl_DirectionalLight_getDirection($this.$this$089)).$scl( -$maxZ - oktgl_DirectionalLight_getLightPositionOffset($this.$this$089)).$add8(oktgl_DirectionalLight$Companion_getCentroid(oktgl_DirectionalLight_Companion));
    oktgl_DirectionalLight$Companion_getLightViewTmp(oktgl_DirectionalLight_Companion).$setToLookAt(oktgl_DirectionalLight$Companion_getLightPos(oktgl_DirectionalLight_Companion), oktgl_DirectionalLight_getDirection($this.$this$089), oktm_IVec3$Companion_getY(oktm_IVec3_Companion));
    $lightMat.$mul(oktgl_DirectionalLight$Companion_getLightViewTmp(oktgl_DirectionalLight_Companion));
    oktgc_Camera_setFar(oktgl_DirectionalLight$Companion_getTmpCam(oktgl_DirectionalLight_Companion), $far);
    oktgc_Camera_getPosition(oktgl_DirectionalLight$Companion_getTmpCam(oktgl_DirectionalLight_Companion)).$set11(oktgl_DirectionalLight$Companion_getLightPos(oktgl_DirectionalLight_Companion));
    oktgc_Camera_getViewProjectionMatrix(oktgl_DirectionalLight$Companion_getTmpCam(oktgl_DirectionalLight_Companion)).$set3($lightMat);
    $this.$$scene.$render0();
}
function oktgl_DirectionalLight$renderShadowMaps$1__init_0(var$0, var$1, var$2, var$3, var$4, var$5) {
    var$0.$this$089 = var$1;
    var$0.$$i1 = var$2;
    var$0.$$camFarSubNear = var$3;
    var$0.$$sceneCameraFrustumPoints = var$4;
    var$0.$$scene = var$5;
    kji_Lambda__init_0(var$0, 1);
}
function oktsp_Bloom$render$3() {
    var a = this; kji_Lambda.call(a);
    a.$this$090 = null;
    a.$$out = null;
    a.$$upBuffers = null;
    a.$$sceneMap = null;
}
function oktsp_Bloom$render$3__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktsp_Bloom$render$3();
    oktsp_Bloom$render$3__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktsp_Bloom$render$3_invoke(var$0, var$1) {
    oktsp_Bloom$render$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktsp_Bloom$render$3_invoke0($this, $$this$render) {
    var var$2, var$3, var$4, var$5;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    var$2 = oktsp_Bloom_getBlurUp($this.$this$090);
    var$3 = $this.$$out;
    if (var$3 !== null)
        var$4 = var$3.$getWidth();
    else {
        oktg_GL_$callClinit();
        var$4 = oktg_GL_getMainFrameBufferWidth(oktg_GL_INSTANCE);
    }
    var$5 = 1.0 / var$4;
    var$3 = $this.$$out;
    if (var$3 !== null)
        var$4 = var$3.$getHeight();
    else {
        oktg_GL_$callClinit();
        var$4 = oktg_GL_getMainFrameBufferHeight(oktg_GL_INSTANCE);
    }
    var$2.$set36($rt_s(875), var$5, 1.0 / var$4);
    oktt_SimpleFrameBuffer_getTexture($this.$$upBuffers.data[0], 0).$bind4(0);
    $this.$$sceneMap.$bind4(1);
}
function oktsp_Bloom$render$3__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$this$090 = var$1;
    var$0.$$out = var$2;
    var$0.$$upBuffers = var$3;
    var$0.$$sceneMap = var$4;
    kji_Lambda__init_0(var$0, 1);
}
function oooig_GimTriCollision$GIM_TRIANGLE_CONTACT_DATA() {
    var a = this; jl_Object.call(a);
    a.$m_penetration_depth = 0.0;
    a.$m_point_count = 0;
    a.$m_separating_normal = null;
    a.$m_points = null;
}
function oooig_GimTriCollision$GIM_TRIANGLE_CONTACT_DATA__init_() {
    var var_0 = new oooig_GimTriCollision$GIM_TRIANGLE_CONTACT_DATA();
    oooig_GimTriCollision$GIM_TRIANGLE_CONTACT_DATA__init_0(var_0);
    return var_0;
}
function oooig_GimTriCollision$GIM_TRIANGLE_CONTACT_DATA__init_0($this) {
    var $i;
    jl_Object__init_0($this);
    $this.$m_separating_normal = oooig_GimGeometry$vec3f__init_();
    $this.$m_points = $rt_createArray(oooig_GimGeometry$vec3f, 8);
    $i = 0;
    while ($i < $this.$m_points.data.length) {
        $this.$m_points.data[$i] = oooig_GimGeometry$vec3f__init_();
        $i = $i + 1 | 0;
    }
}
function oktsp_Bloom$render$2() {
    var a = this; kji_Lambda.call(a);
    a.$this$091 = null;
    a.$$texelSizes0 = null;
    a.$$i2 = null;
    a.$$downBuffers = null;
    a.$$upBuffers0 = null;
}
function oktsp_Bloom$render$2__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktsp_Bloom$render$2();
    oktsp_Bloom$render$2__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktsp_Bloom$render$2_invoke(var$0, var$1) {
    oktsp_Bloom$render$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktsp_Bloom$render$2_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktsp_Bloom_getBlurUp($this.$this$091).$set45($rt_s(875), $this.$$texelSizes0.data[$this.$$i2.$element - 1 | 0]);
    oktt_SimpleFrameBuffer_getTexture($this.$$downBuffers.data[$this.$$i2.$element], 0).$bind4(0);
    oktt_SimpleFrameBuffer_getTexture($this.$$upBuffers0.data[$this.$$i2.$element], 0).$bind4(1);
}
function oktsp_Bloom$render$2__init_0(var$0, var$1, var$2, var$3, var$4, var$5) {
    var$0.$this$091 = var$1;
    var$0.$$texelSizes0 = var$2;
    var$0.$$i2 = var$3;
    var$0.$$downBuffers = var$4;
    var$0.$$upBuffers0 = var$5;
    kji_Lambda__init_0(var$0, 1);
}
function oktsp_Bloom$render$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$092 = null;
    a.$$texelSizes1 = null;
    a.$$i3 = 0;
    a.$$prevMap = null;
}
function oktsp_Bloom$render$1__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktsp_Bloom$render$1();
    oktsp_Bloom$render$1__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktsp_Bloom$render$1_invoke(var$0, var$1) {
    oktsp_Bloom$render$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktsp_Bloom$render$1_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktsp_Bloom_getBlurDown($this.$this$092).$set45($rt_s(875), $this.$$texelSizes1.data[$this.$$i3]);
    $this.$$prevMap.$element0.$bind4(0);
}
function oktsp_Bloom$render$1__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$this$092 = var$1;
    var$0.$$texelSizes1 = var$2;
    var$0.$$i3 = var$3;
    var$0.$$prevMap = var$4;
    kji_Lambda__init_0(var$0, 1);
}
function oktsp_FXAA$render$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$093 = null;
    a.$$out0 = null;
    a.$$inputMap0 = null;
}
function oktsp_FXAA$render$1__init_(var_0, var_1, var_2) {
    var var_3 = new oktsp_FXAA$render$1();
    oktsp_FXAA$render$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktsp_FXAA$render$1_invoke(var$0, var$1) {
    oktsp_FXAA$render$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktsp_FXAA$render$1_invoke0($this, $$this$render) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    if ($this.$$out0 !== null)
        oktsp_FXAA_access$updateWidthHeight($this.$this$093, $this.$$out0.$getWidth(), $this.$$out0.$getHeight());
    else {
        var$2 = $this.$this$093;
        okt_APP_$callClinit();
        oktsp_FXAA_access$updateWidthHeight(var$2, okt_APP_getWidth(okt_APP_INSTANCE), okt_APP_getHeight(okt_APP_INSTANCE));
    }
    $this.$$inputMap0.$bind4(0);
}
function oktsp_FXAA$render$1__init_0(var$0, var$1, var$2, var$3) {
    var$0.$this$093 = var$1;
    var$0.$$out0 = var$2;
    var$0.$$inputMap0 = var$3;
    kji_Lambda__init_0(var$0, 1);
}
function ks_TransformingSequence() {
    var a = this; jl_Object.call(a);
    a.$sequence = null;
    a.$transformer = null;
}
function ks_TransformingSequence__init_(var_0, var_1) {
    var var_2 = new ks_TransformingSequence();
    ks_TransformingSequence__init_0(var_2, var_0, var_1);
    return var_2;
}
function ks_TransformingSequence_iterator($this) {
    var var$1;
    var$1 = ks_TransformingSequence$iterator$1__init_($this);
    return var$1;
}
function ks_TransformingSequence__init_0($this, $sequence, $transformer) {
    kji_Intrinsics_checkParameterIsNotNull($sequence, $rt_s(876));
    kji_Intrinsics_checkParameterIsNotNull($transformer, $rt_s(877));
    jl_Object__init_0($this);
    $this.$sequence = $sequence;
    $this.$transformer = $transformer;
}
function ks_TransformingSequence_access$getTransformer$p($$this) {
    return $$this.$transformer;
}
function ks_TransformingSequence_access$getSequence$p($$this) {
    return $$this.$sequence;
}
function jur_AbstractCharClass$LazyJavaDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$094 = null;
}
function jur_AbstractCharClass$LazyJavaDigit$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaDigit$1();
    jur_AbstractCharClass$LazyJavaDigit$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaDigit$1__init_0($this, $this$0) {
    $this.$this$094 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaDigit$1_contains($this, $ch) {
    return jl_Character_isDigit($ch);
}
function oktts_ShadowMappingBaseTest$testMain$2$1() {
    kji_Lambda.call(this);
    this.$this$095 = null;
}
function oktts_ShadowMappingBaseTest$testMain$2$1__init_(var_0) {
    var var_1 = new oktts_ShadowMappingBaseTest$testMain$2$1();
    oktts_ShadowMappingBaseTest$testMain$2$1__init_0(var_1, var_0);
    return var_1;
}
function oktts_ShadowMappingBaseTest$testMain$2$1_invoke(var$0, var$1) {
    oktts_ShadowMappingBaseTest$testMain$2$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktts_ShadowMappingBaseTest$testMain$2$1_invoke0($this, $$this$render) {
    var $shader, var$3, var$4, $xi, $zi;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktg_GL_setCullFaceMode(oktg_GL_INSTANCE, 1028);
    $shader = $this.$this$095.$$depthRenderShader0;
    $shader.$bind();
    $shader.$set12($rt_s(607), $this.$this$095.$$lightMatrix);
    $shader.$set39($rt_s(608), 0.0, 0.0, 0.0);
    var$3 = $this.$this$095.$$plane1;
    var$4 = $shader;
    oktm_IMesh$DefaultImpls_render$default(var$3, var$4, 0, 0, 0, 0, 30, null);
    $xi = $this.$this$095.$$cubesStartX0;
    while ($xi < $this.$this$095.$$cubesEndX0) {
        $zi = $this.$this$095.$$cubesStartZ0;
        while ($zi < $this.$this$095.$$cubesEndZ0) {
            $shader.$set39($rt_s(608), $xi, $this.$this$095.$$cubesY0, $zi);
            oktm_IMesh$DefaultImpls_render$default($this.$this$095.$$cube1, var$4, 0, 0, 0, 0, 30, null);
            $zi = $zi + $this.$this$095.$$cubesStepZ0;
        }
        $xi = $xi + $this.$this$095.$$cubesStepX0;
    }
    oktg_GL_setCullFaceMode(oktg_GL_INSTANCE, 1029);
}
function oktts_ShadowMappingBaseTest$testMain$2$1__init_0(var$0, var$1) {
    var$0.$this$095 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktt_TvmGL$RenderBufferWrap() {
    oktt_TvmGL$GLObject.call(this);
    this.$gl2 = null;
}
function oktt_TvmGL$RenderBufferWrap__init_(var_0) {
    var var_1 = new oktt_TvmGL$RenderBufferWrap();
    oktt_TvmGL$RenderBufferWrap__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmGL$RenderBufferWrap_getGl($this) {
    return $this.$gl2;
}
function oktt_TvmGL$RenderBufferWrap_getGl0(var$0) {
    return oktt_TvmGL$RenderBufferWrap_getGl(var$0);
}
function oktt_TvmGL$RenderBufferWrap__init_0($this, $gl) {
    kji_Intrinsics_checkParameterIsNotNull($gl, $rt_s(814));
    oktt_TvmGL$GLObject__init_0($this);
    $this.$gl2 = $gl;
}
function k_Pair() {
    var a = this; jl_Object.call(a);
    a.$first1 = null;
    a.$second = null;
}
function k_Pair__init_(var_0, var_1) {
    var var_2 = new k_Pair();
    k_Pair__init_0(var_2, var_0, var_1);
    return var_2;
}
function k_Pair_getFirst($this) {
    return $this.$first1;
}
function k_Pair_getSecond($this) {
    return $this.$second;
}
function k_Pair__init_0($this, $first, $second) {
    jl_Object__init_0($this);
    $this.$first1 = $first;
    $this.$second = $second;
}
function k_Pair_component1($this) {
    return $this.$first1;
}
function k_Pair_component2($this) {
    return $this.$second;
}
function k_Pair_hashCode(var$0) {
    var var$1, var$2;
    var$1 = var$0.$first1;
    var$2 = (var$1 === null ? 0 : var$1.$hashCode()) * 31 | 0;
    var$1 = var$0.$second;
    return var$2 + (var$1 === null ? 0 : var$1.$hashCode()) | 0;
}
function k_Pair_equals(var$0, var$1) {
    a: {
        if (var$0 !== var$1) {
            if (!(var$1 instanceof k_Pair))
                break a;
            var$1 = var$1;
            if (!kji_Intrinsics_areEqual(var$0.$first1, var$1.$first1))
                break a;
            if (!kji_Intrinsics_areEqual(var$0.$second, var$1.$second))
                break a;
        }
        return 1;
    }
    return 0;
}
function jl_NullPointerException() {
    jl_RuntimeException.call(this);
}
function jl_NullPointerException__init_0(var_0) {
    var var_1 = new jl_NullPointerException();
    jl_NullPointerException__init_1(var_1, var_0);
    return var_1;
}
function jl_NullPointerException__init_() {
    var var_0 = new jl_NullPointerException();
    jl_NullPointerException__init_2(var_0);
    return var_0;
}
function jl_NullPointerException__init_1($this, $message) {
    jl_RuntimeException__init_2($this, $message);
}
function jl_NullPointerException__init_2($this) {
    jl_RuntimeException__init_1($this);
}
function oooil_CCDSupport() {
    jl_Object.call(this);
}
function oooil_CCDSupport__init_() {
    var var_0 = new oooil_CCDSupport();
    oooil_CCDSupport__init_0(var_0);
    return var_0;
}
function oooil_CCDSupport__init_0($this) {
    jl_Object__init_0($this);
}
function oooil_CCDSupport___ccdSupport($obj1, $obj2, $_dir, $ccd, $supp) {
    var $dir;
    $dir = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDVec3_ccdVec3Copy($dir, $_dir);
    $ccd.$support1.$run1($obj1, $dir, $supp.$v1);
    oooil_CCDVec3_ccdVec3Scale($dir, (-1.0));
    $ccd.$support2.$run1($obj2, $dir, $supp.$v2);
    oooil_CCDVec3_ccdVec3Sub2($supp.$v, $supp.$v1, $supp.$v2);
}
function oooil_CCDSupport_ccdSupportCopy($d, $s) {
    oooil_CCDVec3_ccdVec3Copy($d.$v, $s.$v);
    oooil_CCDVec3_ccdVec3Copy($d.$v1, $s.$v1);
    oooil_CCDVec3_ccdVec3Copy($d.$v2, $s.$v2);
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1() {
    jur_AbstractCharClass.call(this);
    this.$this$096 = null;
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaSpaceChar$1();
    jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0($this, $this$0) {
    $this.$this$096 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1_contains($this, $ch) {
    return jl_Character_isSpaceChar($ch);
}
function oktts_SoundWavTest() {
    jl_Object.call(this);
}
function oktts_SoundWavTest__init_() {
    var var_0 = new oktts_SoundWavTest();
    oktts_SoundWavTest__init_0(var_0);
    return var_0;
}
function oktts_SoundWavTest_getName($this) {
    return $rt_s(878);
}
function oktts_SoundWavTest_testMain($this) {
    var var$1;
    okta_AL_$callClinit();
    var$1 = okta_AL_INSTANCE;
    oktf_FS_$callClinit();
    okta_ISound$DefaultImpls_play$default(okta_AL_newSound(var$1, oktf_FS_internal(oktf_FS_INSTANCE, $rt_s(879))), 0.0, 0.0, 0.0, 0, 15, null);
}
function oktts_SoundWavTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktgg_IGLTFMaterial$DefaultImpls() {
    jl_Object.call(this);
}
function oktgg_IGLTFMaterial$DefaultImpls_getOrCreateUVNode($$this, $shader, $attributeName, $map) {
    var $node;
    $node = $map.$get0($attributeName);
    if ($node === null) {
        $node = $shader.$addNode0(oktsg_UVNode__init_());
        oktsg_UVNode_setAUVName($node, $attributeName);
        $map.$put3($attributeName, $node);
    }
    return $node;
}
function oktgg_IGLTFMaterial$DefaultImpls_buildShaders($$this) {
    var $$this$forEach$iv, var$3, $element$iv, $it;
    $$this$forEach$iv = $$this.$getMaterial().$getShaderChannels().$values();
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $it = $element$iv;
        $it.$build0();
    }
}
function oktgg_IGLTFMaterial$DefaultImpls_read($$this, $json) {
    var $material, $uvNodes, $shader, var$6, $vertexNode, $cameraDataNode, $normalValue, $baseColorValue, $occlusionValue, $roughnessValue, $metallicValue, $alphaNodes, var$15, $principledBSDF, $toneMapNode, $outputNode, var$19, $blurCameraDataNode, var$21, var$22, var$23, var$24, var$25, var$26, $velocityNode, var$28, var$29, $alphaOp, $depthCameraDataNode, $emissiveValue, $opNode;
    a: {
        b: {
            c: {
                kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
                $material = $$this.$getMaterial();
                $json.$string($rt_s(17), oktgg_IGLTFMaterial$read$1__init_($$this, $material));
                $uvNodes = ju_HashMap__init_();
                $shader = okts_Shader__init_2(null, null, null, 0, null, oktgg_GLTFConf_getShaderVersion($$this.$getGltf0().$getConf()), null, 95, null);
                $shader.$setName($$this.$getName());
                $material.$setShader($shader);
                var$6 = $material.$getShaderChannels();
                oktg_ShaderChannel_$callClinit();
                var$6.$put3(jl_Integer_valueOf(oktg_ShaderChannel_getDefault(oktg_ShaderChannel_INSTANCE)), $shader);
                $json.$string($rt_s(880), oktgg_IGLTFMaterial$read$2__init_($$this));
                var$6 = $$this.$getAlphaMode();
                switch (var$6.$hashCode()) {
                    case -1957365727:
                        break;
                    case 2359020:
                        break b;
                    case 63285297:
                        break c;
                    default:
                        break a;
                }
                if (!var$6.$equals0($rt_s(881)))
                    break a;
                $material.$setAlphaMode0(0);
                break a;
            }
            if (!var$6.$equals0($rt_s(882)))
                break a;
            $material.$setAlphaMode0(2);
            break a;
        }
        if (var$6.$equals0($rt_s(883))) {
            $$this.$setAlphaCutoff($json.$float1($rt_s(884), 0.5));
            $material.$setAlphaCutoff($$this.$getAlphaCutoff());
            $material.$setAlphaMode0(1);
        }
    }
    $json.$bool($rt_s(885), oktgg_IGLTFMaterial$read$3__init_($$this));
    $material.$setCullFaceMode(!$$this.$getDoubleSided() ? 1029 : 0);
    $vertexNode = $shader.$addNode0(oktsg_VertexNode__init_(0, 0, 0, 7, null));
    oktsg_VertexNode_setABonesName($vertexNode, $rt_s(886));
    oktsg_VertexNode_setABoneWeightsName($vertexNode, $rt_s(887));
    oktsg_VertexNode_setAPositionName($vertexNode, $rt_s(543));
    oktsg_VertexNode_setANormalName($vertexNode, $rt_s(854));
    oktsg_VertexNode_setATangentName($vertexNode, $rt_s(855));
    $cameraDataNode = $shader.$addNode0(oktsg_CameraDataNode__init_0(oktsg_VertexNode_getPosition($vertexNode)));
    $normalValue = kji_Ref$ObjectRef__init_();
    $normalValue.$element0 = oktsg_VertexNode_getNormal($vertexNode);
    $json.$get16($rt_s(888), oktgg_IGLTFMaterial$read$4__init_($$this, $shader, $uvNodes, $vertexNode, $cameraDataNode, $normalValue));
    $baseColorValue = kji_Ref$ObjectRef__init_();
    oktsg_GLSL_$callClinit();
    $baseColorValue.$element0 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    $occlusionValue = kji_Ref$ObjectRef__init_();
    $occlusionValue.$element0 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    $roughnessValue = kji_Ref$ObjectRef__init_();
    $roughnessValue.$element0 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    $metallicValue = kji_Ref$ObjectRef__init_();
    $metallicValue.$element0 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    $alphaNodes = ju_ArrayList__init_();
    $json.$get16($rt_s(889), oktgg_IGLTFMaterial$read$5__init_($$this, $shader, $uvNodes, $alphaNodes, $baseColorValue, $occlusionValue, $roughnessValue, $metallicValue));
    var$15 = oktsg_PrincipledBSDF__init_();
    oktsg_PrincipledBSDF_setNormal(var$15, $normalValue.$element0);
    oktsg_PrincipledBSDF_setWorldPosition(var$15, oktsg_VertexNode_getPosition($vertexNode));
    oktsg_PrincipledBSDF_setNormalizedViewVector(var$15, oktsg_CameraDataNode_getNormalizedViewVector($cameraDataNode));
    oktsg_PrincipledBSDF_setBaseColor(var$15, $baseColorValue.$element0);
    oktsg_PrincipledBSDF_setOcclusion(var$15, $occlusionValue.$element0);
    oktsg_PrincipledBSDF_setRoughness(var$15, $roughnessValue.$element0);
    oktsg_PrincipledBSDF_setMetallic(var$15, $metallicValue.$element0);
    oktsg_PrincipledBSDF_setReceiveShadows(var$15, oktgg_GLTFConf_getReceiveShadows($$this.$getGltf0().$getConf()));
    oktsg_PrincipledBSDF_setClipSpacePosition(var$15, oktsg_CameraDataNode_getClipSpacePosition($cameraDataNode));
    $principledBSDF = $shader.$addNode0(var$15);
    $toneMapNode = $shader.$addNode0(oktsg_ToneMapNode__init_1(oktsg_PrincipledBSDF_getResult($principledBSDF), 0, 2, null));
    if (!oktgg_GLTFConf_getSetupGBufferShader($$this.$getGltf0().$getConf())) {
        $outputNode = $shader.$addNode0(oktsg_OutputNode__init_(oktsg_CameraDataNode_getClipSpacePosition($cameraDataNode), oktsg_ToneMapNode_getResult($toneMapNode)));
        oktsg_OutputNode_setAlphaCutoff($outputNode, $material.$getAlphaCutoff());
        oktsg_OutputNode_setAlphaMode($outputNode, $material.$getAlphaMode0());
        oktsg_OutputNode_setCullFaceMode($outputNode, $material.$getCullFaceMode());
    } else {
        var$6 = oktsg_GBufferOutputNode__init_();
        oktsg_GBufferOutputNode_setVertPosition(var$6, oktsg_CameraDataNode_getClipSpacePosition($cameraDataNode));
        oktsg_GBufferOutputNode_setFragColor(var$6, oktsg_ToneMapNode_getResult($toneMapNode));
        oktsg_GBufferOutputNode_setFragNormal(var$6, $normalValue.$element0);
        oktsg_GBufferOutputNode_setFragPosition(var$6, oktsg_CameraDataNode_getViewSpacePosition($cameraDataNode));
        $outputNode = $shader.$addNode0(var$6);
        oktsg_GBufferOutputNode_setAlphaCutoff($outputNode, $material.$getAlphaCutoff());
        oktsg_GBufferOutputNode_setAlphaMode($outputNode, $material.$getAlphaMode0());
        oktsg_GBufferOutputNode_setCullFaceMode($outputNode, $material.$getCullFaceMode());
    }
    if (oktgg_GLTFConf_getSetupVelocityShader($$this.$getGltf0().$getConf())) {
        var$6 = $material.$getShaderChannels();
        var$15 = jl_Integer_valueOf(oktg_ShaderChannel_getVelocity(oktg_ShaderChannel_INSTANCE));
        var$19 = okts_Shader__init_2(null, null, null, 0, null, 0, null, 127, null);
        var$19.$addNode0($vertexNode);
        $blurCameraDataNode = var$19.$addNode0(oktsg_CameraDataNode__init_0(oktsg_VertexNode_getPosition($vertexNode)));
        var$21 = new oktsg_VelocityNode;
        var$22 = oktsg_VertexNode_getPosition($vertexNode);
        var$23 = oktsg_CameraDataNode_getClipSpacePosition($blurCameraDataNode);
        var$24 = oktsg_CameraDataNode_getPreviousViewProjectionMatrix($blurCameraDataNode);
        var$25 = oktsg_VertexNode_getNormal($vertexNode);
        var$26 = null;
        oktsg_VelocityNode__init_(var$21, var$22, var$23, var$24, var$25, 0, 0, 0, 112, var$26);
        var$21 = var$21;
        $velocityNode = var$19.$addNode0(var$21);
        oktsg_VelocityNode_setABonesName($velocityNode, $rt_s(886));
        oktsg_VelocityNode_setABoneWeightsName($velocityNode, $rt_s(887));
        oktsg_VelocityNode_setAPositionName($velocityNode, $rt_s(543));
        var$21 = new oktsg_OperationNode;
        var$28 = $rt_createArray(oktsg_IShaderData, 2);
        var$29 = var$28.data;
        var$29[0] = oktsg_VelocityNode_getVelocity($velocityNode);
        var$29[1] = $baseColorValue.$element0;
        var$22 = kc_CollectionsKt__CollectionsKt_listOf(var$28);
        oktsg_OperationNode__init_(var$21, var$22, $rt_s(890), 6);
        var$21 = var$21;
        $alphaOp = var$19.$addNode0(var$21);
        oktsg_OperationNode_setVarying($alphaOp, 0);
        oktsg_OperationNode_setFragment($alphaOp, 1);
        var$19.$getNodes0().$addAll($alphaNodes);
        $outputNode = var$19.$addNode0(oktsg_OutputNode__init_(oktsg_VelocityNode_getStretchedClipSpacePosition($velocityNode), oktsg_OperationNode_getResult($alphaOp)));
        oktsg_OutputNode_setAlphaCutoff($outputNode, $material.$getAlphaCutoff());
        oktsg_OutputNode_setAlphaMode($outputNode, $material.$getAlphaMode0());
        oktsg_OutputNode_setCullFaceMode($outputNode, $material.$getCullFaceMode());
        var$6.$put3(var$15, var$19);
    }
    if (oktgg_GLTFConf_getSetupDepthRendering($$this.$getGltf0().$getConf())) {
        var$21 = $material.$getShaderChannels();
        var$22 = jl_Integer_valueOf(oktg_ShaderChannel_getDepth(oktg_ShaderChannel_INSTANCE));
        var$23 = okts_Shader__init_2(null, null, null, 0, null, 0, null, 127, null);
        var$23.$addNode0($vertexNode);
        $depthCameraDataNode = var$23.$addNode0(oktsg_CameraDataNode__init_0(oktsg_VertexNode_getPosition($vertexNode)));
        var$23.$getNodes0().$addAll($alphaNodes);
        $outputNode = var$23.$addNode0(oktsg_OutputNode__init_(oktsg_CameraDataNode_getClipSpacePosition($depthCameraDataNode), $baseColorValue.$element0));
        oktsg_OutputNode_setAlphaCutoff($outputNode, $material.$getAlphaCutoff());
        oktsg_OutputNode_setAlphaMode($outputNode, $material.$getAlphaMode0());
        oktsg_OutputNode_setCullFaceMode($outputNode, $material.$getCullFaceMode());
        var$21.$put3(var$22, var$23);
    }
    $json.$get16($rt_s(891), oktgg_IGLTFMaterial$read$8__init_($$this, $shader, $uvNodes, $principledBSDF));
    if (!(!$json.$contains($rt_s(892)) && !$json.$contains($rt_s(893)))) {
        $emissiveValue = kji_Ref$ObjectRef__init_();
        $emissiveValue.$element0 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
        $json.$get16($rt_s(892), oktgg_IGLTFMaterial$read$9__init_($$this, $shader, $uvNodes, $emissiveValue));
        $json.$array($rt_s(893), oktgg_IGLTFMaterial$read$10__init_($$this, $emissiveValue, $shader));
        if ($emissiveValue.$element0 !== oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE)) {
            var$6 = new oktsg_OperationNode;
            var$28 = $rt_createArray(oktsg_IShaderData, 2);
            var$29 = var$28.data;
            var$29[0] = oktsg_PrincipledBSDF_getResult($principledBSDF);
            var$29[1] = $emissiveValue.$element0;
            var$15 = kc_CollectionsKt__CollectionsKt_listOf(var$28);
            oktsg_OperationNode__init_(var$6, var$15, $rt_s(894), 6);
            var$6 = var$6;
            $opNode = $shader.$addNode0(var$6);
            oktsg_OperationNode_setFragment($opNode, 1);
            oktsg_OperationNode_setVarying($opNode, 0);
            oktsg_ToneMapNode_setInputColor($toneMapNode, oktsg_OperationNode_getResult($opNode));
        }
    }
}
function oktgg_IGLTFMaterial$DefaultImpls_access$getOrCreateUVNode($$this, $shader, $attributeName, $map) {
    return oktgg_IGLTFMaterial$DefaultImpls_getOrCreateUVNode($$this, $shader, $attributeName, $map);
}
function okttm_MeshCubeTest$testMain$4() {
    var a = this; kji_Lambda.call(a);
    a.$$cubeMatrix40 = null;
    a.$$shader7 = null;
    a.$$temp0 = null;
    a.$$mesh1 = null;
}
function okttm_MeshCubeTest$testMain$4__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new okttm_MeshCubeTest$testMain$4();
    okttm_MeshCubeTest$testMain$4__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function okttm_MeshCubeTest$testMain$4_invoke(var$0) {
    okttm_MeshCubeTest$testMain$4_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttm_MeshCubeTest$testMain$4_invoke0($this) {
    var var$1, var$2;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    $this.$$cubeMatrix40.$rotate(0.0, 1.0, 0.0, 0.009999999776482582);
    $this.$$shader7.$bind();
    var$1 = $this.$$shader7;
    var$2 = $this.$$temp0.$set3($this.$$cubeMatrix40);
    oktgc_ActiveCamera_$callClinit();
    var$1.$set12($rt_s(306), var$2.$mulLeft(oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE)));
    oktm_IMesh$DefaultImpls_render$default($this.$$mesh1, $this.$$shader7, 0, 0, 0, 0, 30, null);
}
function okttm_MeshCubeTest$testMain$4__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$$cubeMatrix40 = var$1;
    var$0.$$shader7 = var$2;
    var$0.$$temp0 = var$3;
    var$0.$$mesh1 = var$4;
    kji_Lambda__init_0(var$0, 0);
}
function jl_Math() {
    jl_Object.call(this);
}
function jl_Math__init_() {
    var var_0 = new jl_Math();
    jl_Math__init_0(var_0);
    return var_0;
}
function jl_Math__init_0($this) {
    jl_Object__init_0($this);
}
function jl_Math_sin(var$1) {
    return Math.sin(var$1);
}
function jl_Math_cos(var$1) {
    return Math.cos(var$1);
}
function jl_Math_tan(var$1) {
    return Math.tan(var$1);
}
function jl_Math_acos(var$1) {
    return Math.acos(var$1);
}
function jl_Math_sqrt(var$1) {
    return Math.sqrt(var$1);
}
function jl_Math_ceil(var$1) {
    return Math.ceil(var$1);
}
function jl_Math_floor(var$1) {
    return Math.floor(var$1);
}
function jl_Math_pow(var$1, var$2) {
    return Math.pow(var$1, var$2);
}
function jl_Math_atan2(var$1, var$2) {
    return Math.atan2(var$1, var$2);
}
function jl_Math_round($a) {
    return Long_fromNumber($a + jl_Math_signum($a) * 0.5);
}
function jl_Math_min($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_min0($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max0($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_min1($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max1($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_abs1($n) {
    if ($n <= 0)
        $n =  -$n;
    return $n;
}
function jl_Math_abs0($n) {
    if ($n <= 0.0)
        $n =  -$n;
    return $n;
}
function jl_Math_abs($n) {
    if ($n <= 0.0)
        $n =  -$n;
    return $n;
}
function jl_Math_ulp($d) {
    return jl_Math_pow(2.0, jl_Math_getExponent($d) - 52 | 0);
}
function jl_Math_signum($d) {
    var var$2;
    var$2 = $rt_compare($d, 0.0);
    if (var$2 > 0)
        $d = 1.0;
    else if (var$2 < 0)
        $d = (-1.0);
    return $d;
}
function jl_Math_getExponent($d) {
    var var$2, $exp, $exponents, $negativeExponents, $negativeExponents2, var$7, var$8, $i, $expBit, $offset;
    var$2 = jl_Math_abs($d);
    $exp = 0;
    jl_Math$ExponentConstants_$callClinit();
    $exponents = jl_Math$ExponentConstants_exponents;
    $negativeExponents = jl_Math$ExponentConstants_negativeExponents;
    $negativeExponents2 = jl_Math$ExponentConstants_negativeExponents2;
    var$7 = $rt_compare(var$2, 1.0);
    if (var$7 > 0) {
        var$8 = $exponents.data;
        $i = var$8.length - 1 | 0;
        $expBit = 1 << $i;
        while ($i >= 0) {
            if (var$2 >= var$8[$i]) {
                var$2 = var$2 * $negativeExponents.data[$i];
                $exp = $exp | $expBit;
            }
            $expBit = $expBit >>> 1;
            $i = $i + (-1) | 0;
        }
    } else if (var$7 < 0) {
        $expBit = 1 << ($negativeExponents.data.length - 1 | 0);
        $offset = 0;
        if (var$2 < 2.2250738585072014E-308) {
            var$2 = var$2 * 4.503599627370496E15;
            $offset = 52;
        }
        var$8 = $negativeExponents2.data;
        $i = var$8.length - 1 | 0;
        while ($i >= 0) {
            if (var$2 < var$8[$i]) {
                var$2 = var$2 * $exponents.data[$i];
                $exp = $exp | $expBit;
            }
            $expBit = $expBit >>> 1;
            $i = $i + (-1) | 0;
        }
        $exp =  -($exp + $offset | 0);
    }
    return $exp;
}
function jl_Math_nextAfter($start, $direction) {
    if ($start === $direction)
        return $direction;
    return $direction <= $start ? $start - jl_Math_ulp($start) : $start + jl_Math_ulp($start);
}
function oooi_CollideTrimeshCCylinder$1() {
    jl_Object.call(this);
    this.$this$097 = null;
}
function oooi_CollideTrimeshCCylinder$1__init_(var_0) {
    var var_1 = new oooi_CollideTrimeshCCylinder$1();
    oooi_CollideTrimeshCCylinder$1__init_0(var_1, var_0);
    return var_1;
}
function oooi_CollideTrimeshCCylinder$1__init_0($this, $this$0) {
    $this.$this$097 = $this$0;
    jl_Object__init_0($this);
}
function oooi_CollideTrimeshCCylinder$1_compare($this, $o1, $o2) {
    return jl_Float_compare($o2.$getDepth0(), $o1.$getDepth0());
}
function oktg_IScene$DefaultImpls() {
    jl_Object.call(this);
}
function oktg_IScene$DefaultImpls_getAllObjects($$this, $opaque, $translucent) {
    var $objects, $i, var$6, $obj, $meshes, $isTranslucent, $j, var$11, $mesh, $childScenes;
    kji_Intrinsics_checkParameterIsNotNull($opaque, $rt_s(895));
    kji_Intrinsics_checkParameterIsNotNull($translucent, $rt_s(896));
    $objects = $$this.$getObjects();
    $i = 0;
    var$6 = $objects.$size();
    while ($i < var$6) {
        $obj = $objects.$get1($i);
        $meshes = $obj.$getMeshes0();
        $isTranslucent = 0;
        $j = 0;
        var$11 = $meshes.$size();
        a: {
            while ($j < var$11) {
                $mesh = $meshes.$get1($j);
                if ($mesh.$getMaterial().$getAlphaMode0() == 2) {
                    $isTranslucent = 1;
                    break a;
                }
                $j = $j + 1 | 0;
            }
        }
        if (!$isTranslucent)
            $opaque.$add1($obj);
        else
            $translucent.$add1($obj);
        $i = $i + 1 | 0;
    }
    $i = 0;
    $childScenes = $$this.$getScenes0();
    while ($i < $childScenes.$size()) {
        $childScenes.$get1($i).$getAllObjects($opaque, $translucent);
        $i = $i + 1 | 0;
    }
}
function oktg_IScene$DefaultImpls_update$default(var$1, var$2, var$3, var$4) {
    if (var$4 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(897)));
    if (var$3 & 1) {
        okt_APP_$callClinit();
        var$2 = okt_APP_getDeltaTime(okt_APP_INSTANCE);
    }
    var$1.$update(var$2);
}
function ooo_DPlane() {
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
}
function oktts_BloomTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$model2 = null;
    a.$$sceneBuffer = null;
    a.$$bloom = null;
    a.$$screenQuad3 = null;
}
function oktts_BloomTest$testMain$1__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktts_BloomTest$testMain$1();
    oktts_BloomTest$testMain$1__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktts_BloomTest$testMain$1_invoke(var$0) {
    oktts_BloomTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktts_BloomTest$testMain$1_invoke0($this) {
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_CubeModel_update($this.$$model2);
    oktt_SimpleFrameBuffer_render($this.$$sceneBuffer, oktts_BloomTest$testMain$1$1__init_($this));
    oktsp_Bloom_render($this.$$bloom, $this.$$screenQuad3, oktt_SimpleFrameBuffer_getTexture($this.$$sceneBuffer, 0), oktt_SimpleFrameBuffer_getTexture($this.$$sceneBuffer, 0), null);
}
function oktts_BloomTest$testMain$1__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$$model2 = var$1;
    var$0.$$sceneBuffer = var$2;
    var$0.$$bloom = var$3;
    var$0.$$screenQuad3 = var$4;
    kji_Lambda__init_0(var$0, 0);
}
function oktmb_FrustumMeshBuilder$Companion() {
    jl_Object.call(this);
}
function oktmb_FrustumMeshBuilder$Companion__init_() {
    var var_0 = new oktmb_FrustumMeshBuilder$Companion();
    oktmb_FrustumMeshBuilder$Companion__init_0(var_0);
    return var_0;
}
function oktmb_FrustumMeshBuilder$Companion__init_1(var_0) {
    var var_1 = new oktmb_FrustumMeshBuilder$Companion();
    oktmb_FrustumMeshBuilder$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktmb_FrustumMeshBuilder$Companion_updateMesh($this, $out, $frustumPoints) {
    var var$3, $i, var$5, $p, var$7, var$8;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    kji_Intrinsics_checkParameterIsNotNull($frustumPoints, $rt_s(898));
    var$3 = $out.$getVertices();
    if (var$3 !== null) {
        var$3 = var$3.$getBytes().$floatView();
        var$3.$setPosition(0);
        $i = 0;
        var$5 = $frustumPoints.$size();
        while ($i < var$5) {
            $p = $frustumPoints.$get1($i);
            var$3.$put8(jl_Float_valueOf($p.$getX0()));
            var$3.$put8(jl_Float_valueOf($p.$getY0()));
            var$3.$put8(jl_Float_valueOf($p.$getZ()));
            $i = $i + 1 | 0;
        }
    }
    var$3 = $out.$getIndices();
    if (var$3 !== null) {
        var$3 = var$3.$getBytes().$shortView();
        var$3.$setPosition(0);
        var$7 = $rt_createArray(jl_Short, 24);
        var$8 = var$7.data;
        var$8[0] = jl_Short_valueOf(0);
        var$8[1] = jl_Short_valueOf(1);
        var$8[2] = jl_Short_valueOf(1);
        var$8[3] = jl_Short_valueOf(2);
        var$8[4] = jl_Short_valueOf(2);
        var$8[5] = jl_Short_valueOf(3);
        var$8[6] = jl_Short_valueOf(3);
        var$8[7] = jl_Short_valueOf(0);
        var$8[8] = jl_Short_valueOf(0);
        var$8[9] = jl_Short_valueOf(4);
        var$8[10] = jl_Short_valueOf(1);
        var$8[11] = jl_Short_valueOf(5);
        var$8[12] = jl_Short_valueOf(2);
        var$8[13] = jl_Short_valueOf(6);
        var$8[14] = jl_Short_valueOf(3);
        var$8[15] = jl_Short_valueOf(7);
        var$8[16] = jl_Short_valueOf(4);
        var$8[17] = jl_Short_valueOf(5);
        var$8[18] = jl_Short_valueOf(5);
        var$8[19] = jl_Short_valueOf(6);
        var$8[20] = jl_Short_valueOf(6);
        var$8[21] = jl_Short_valueOf(7);
        var$8[22] = jl_Short_valueOf(7);
        var$8[23] = jl_Short_valueOf(4);
        var$3.$put4(var$7);
    }
}
function oktmb_FrustumMeshBuilder$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktmb_FrustumMeshBuilder$Companion__init_2($this, $$constructor_marker) {
    oktmb_FrustumMeshBuilder$Companion__init_0($this);
}
function okttp_TrimeshShapeTest$testMain$plane$1() {
    kji_Lambda.call(this);
}
var okttp_TrimeshShapeTest$testMain$plane$1_INSTANCE = null;
function okttp_TrimeshShapeTest$testMain$plane$1_$callClinit() {
    okttp_TrimeshShapeTest$testMain$plane$1_$callClinit = $rt_eraseClinit(okttp_TrimeshShapeTest$testMain$plane$1);
    okttp_TrimeshShapeTest$testMain$plane$1__clinit_();
}
function okttp_TrimeshShapeTest$testMain$plane$1__init_() {
    var var_0 = new okttp_TrimeshShapeTest$testMain$plane$1();
    okttp_TrimeshShapeTest$testMain$plane$1__init_0(var_0);
    return var_0;
}
function okttp_TrimeshShapeTest$testMain$plane$1_invoke(var$0, var$1, var$2) {
    return jl_Float_valueOf(okttp_TrimeshShapeTest$testMain$plane$1_invoke0(var$0, var$1.$intValue(), var$2.$intValue()));
}
function okttp_TrimeshShapeTest$testMain$plane$1_invoke0($this, $$noName_0, $$noName_1) {
    kr_Random_$callClinit();
    return kr_Random$Default_nextFloat(kr_Random_Default) * 5.0;
}
function okttp_TrimeshShapeTest$testMain$plane$1__init_0(var$0) {
    okttp_TrimeshShapeTest$testMain$plane$1_$callClinit();
    kji_Lambda__init_0(var$0, 2);
}
function okttp_TrimeshShapeTest$testMain$plane$1__clinit_() {
    okttp_TrimeshShapeTest$testMain$plane$1_INSTANCE = okttp_TrimeshShapeTest$testMain$plane$1__init_();
}
function ju_AbstractSequentialList() {
    ju_AbstractList.call(this);
}
function ju_AbstractSequentialList__init_() {
    var var_0 = new ju_AbstractSequentialList();
    ju_AbstractSequentialList__init_0(var_0);
    return var_0;
}
function ju_AbstractSequentialList__init_0($this) {
    ju_AbstractList__init_0($this);
}
function ju_AbstractSequentialList_get($this, $index) {
    var $iter;
    if ($index < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $iter = $this.$listIterator($index);
    return $iter.$next();
}
function ju_AbstractSequentialList_add($this, $index, $element) {
    var $iter;
    if ($index < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $iter = $this.$listIterator($index);
    $iter.$add10($element);
}
function ju_AbstractSequentialList_iterator($this) {
    return $this.$listIterator0();
}
function jur_AbstractCharClass$LazyJavaDefined() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaDefined__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaDefined();
    jur_AbstractCharClass$LazyJavaDefined__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaDefined__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaDefined_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaDefined$1__init_($this);
    $chCl.$lowHighSurrogates.$set0(0, 2048);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
}
function oktgg_GLTFTexture$read$2$1$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$098 = null;
    a.$$image = null;
}
function oktgg_GLTFTexture$read$2$1$1__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFTexture$read$2$1$1();
    oktgg_GLTFTexture$read$2$1$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFTexture$read$2$1$1_invoke(var$0) {
    oktgg_GLTFTexture$read$2$1$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFTexture$read$2$1$1_invoke0($this) {
    var var$1;
    var$1 = oktgg_GLTFTexture_getTexture($this.$this$098.$this$076.$this$077);
    oktg_GL_$callClinit();
    var$1.$setTextureHandle(oktg_GL_glGenTexture(oktg_GL_INSTANCE));
    oktt_ITexture2D$DefaultImpls_load$default1(oktgg_GLTFTexture_getTexture($this.$this$098.$this$076.$this$077), oktgg_GLTFImage_getImage($this.$$image), $this.$this$098.$this$076.$$minFilter.$element, $this.$this$098.$this$076.$$magFilter.$element, $this.$this$098.$this$076.$$sWrap.$element, $this.$this$098.$this$076.$$tWrap.$element, 0.0, $this.$this$098.$this$076.$$generateMipmaps, 32, null);
    oktgg_GLTFTexture_getGltf($this.$this$098.$this$076.$this$077).$getTextures().$ready(oktgg_GLTFTexture_getElementIndex($this.$this$098.$this$076.$this$077));
}
function oktgg_GLTFTexture$read$2$1$1__init_0(var$0, var$1, var$2) {
    var$0.$this$098 = var$1;
    var$0.$$image = var$2;
    kji_Lambda__init_0(var$0, 0);
}
function oooi_CollideCylinderSphere() {
    oooi_DxCollisionUtil.call(this);
}
var oooi_CollideCylinderSphere_toleranz = 0.0;
function oooi_CollideCylinderSphere_$callClinit() {
    oooi_CollideCylinderSphere_$callClinit = $rt_eraseClinit(oooi_CollideCylinderSphere);
    oooi_CollideCylinderSphere__clinit_();
}
function oooi_CollideCylinderSphere__init_() {
    var var_0 = new oooi_CollideCylinderSphere();
    oooi_CollideCylinderSphere__init_0(var_0);
    return var_0;
}
function oooi_CollideCylinderSphere__init_0($this) {
    oooi_CollideCylinderSphere_$callClinit();
    oooi_DxCollisionUtil__init_0($this);
}
function oooi_CollideCylinderSphere_dCollideCylinderSphere($this, $Cylinder, $Sphere, $flags, $contacts, $skip) {
    var $radius, $length, $cylpos, $radius2, $SpherePos, $G1Pos1, $G1Pos2, $vDir1, $s, $C, var$16, var$17, var$18, var$19, $t, var$21, $contact, var$23, var$24;
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $radius = $Cylinder.$getRadius();
    $length = $Cylinder.$getLength();
    $cylpos = $Cylinder.$final_posr().$pos();
    $radius2 = $Sphere.$dGeomSphereGetRadius();
    $SpherePos = $Sphere.$dGeomGetPosition();
    $G1Pos1 = oom_DVector3__init_();
    $G1Pos2 = oom_DVector3__init_();
    $vDir1 = $Cylinder.$final_posr().$R().$columnAsNewVector(2);
    $s = $length * 0.5;
    oom_DVector3_eqSum0($G1Pos2, $cylpos, $vDir1, $s);
    oom_DVector3_eqSum0($G1Pos1, $cylpos, $vDir1,  -$s);
    $C = oom_DVector3__init_();
    var$16 = ($SpherePos.$get01() - oom_DVector3_get0($G1Pos1)) * $vDir1.$get01();
    var$16 = var$16 - (oom_DVector3_get1($G1Pos1) - $SpherePos.$get10()) * $vDir1.$get10();
    var$17 = var$16 - (oom_DVector3_get2($G1Pos1) - $SpherePos.$get20()) * $vDir1.$get20();
    var$18 =  -$radius2;
    if (var$17 >= var$18) {
        var$19 = $length + $radius2;
        if (var$17 <= var$19) {
            oom_DVector3_sub(oom_DVector3_eqSum0($C, $G1Pos1, $vDir1, var$17), $SpherePos);
            $t = $this.$dVector3Length($C);
            var$21 = $radius + $radius2;
            if ($t > var$21)
                return 0;
            $contact = ooo_DContactGeomBuffer_get0($contacts);
            if ($t > $radius) {
                var$23 = $rt_compare(var$17, 0.0);
                if (!(var$23 >= 0 && var$17 <= $length)) {
                    if (var$23 <= 0) {
                        var$16 = var$17 * var$17;
                        var$24 = $t - $radius;
                        $contact.$depth = $radius2 - oooi_Common_dSqrt(var$16 + var$24 * var$24);
                        if ($contact.$depth < 0.0)
                            return 0;
                        oom_DVector3_eqSum0($contact.$pos0, $G1Pos1, $C,  -$radius / $t);
                        oom_DVector3_scale(oom_DVector3_eqDiff($contact.$normal, $contact.$pos0, $SpherePos), 1.0 / ($radius2 - $contact.$depth));
                        $contact.$g1 = $Cylinder;
                        $contact.$g2 = $Sphere;
                        $contact.$side1 = (-1);
                        $contact.$side2 = (-1);
                        return 1;
                    }
                    var$16 = var$17 - $length;
                    var$16 = var$16 * var$16;
                    var$24 = $t - $radius;
                    $contact.$depth = $radius2 - oooi_Common_dSqrt(var$16 + var$24 * var$24);
                    if ($contact.$depth < 0.0)
                        return 0;
                    oom_DVector3_eqSum0($contact.$pos0, $G1Pos2, $C,  -$radius / $t);
                    oom_DVector3_scale(oom_DVector3_eqDiff($contact.$normal, $contact.$pos0, $SpherePos), 1.0 / ($radius2 - $contact.$depth));
                    $contact.$g1 = $Cylinder;
                    $contact.$g2 = $Sphere;
                    $contact.$side1 = (-1);
                    $contact.$side2 = (-1);
                    return 1;
                }
            }
            var$16 = $radius - $t;
            if (var$16 <= var$17 && var$16 <= $length - var$17) {
                if ($t <= $radius2 + oooi_CollideCylinderSphere_toleranz) {
                    $contact.$depth = var$21 - $t;
                    if ($contact.$depth < 0.0)
                        return 0;
                    oom_DVector3_eqSum1($contact.$pos0, $C, $SpherePos);
                    oom_DVector3_scale(oom_DVector3_set($contact.$normal, $C), 1.0 / $t);
                    $contact.$g1 = $Cylinder;
                    $contact.$g2 = $Sphere;
                    $contact.$side1 = (-1);
                    $contact.$side2 = (-1);
                    return 1;
                }
                $contact.$depth = var$21 - $t;
                if ($contact.$depth < 0.0)
                    return 0;
                oom_DVector3_scale($C, 1.0 / $t);
                oom_DVector3_eqSum0($contact.$pos0, $SpherePos, $C, $radius2);
                oom_DVector3_set($contact.$normal, $C);
                $contact.$g1 = $Cylinder;
                $contact.$g2 = $Sphere;
                $contact.$side1 = (-1);
                $contact.$side2 = (-1);
                return 1;
            }
            if (var$17 <= $s) {
                $contact.$depth = var$17 + $radius2;
                if ($contact.$depth < 0.0)
                    return 0;
                oom_DVector3_eqSum0($contact.$pos0, $SpherePos, $vDir1, $radius2);
                oom_DVector3_set($contact.$normal, $vDir1);
                $contact.$g1 = $Cylinder;
                $contact.$g2 = $Sphere;
                $contact.$side1 = (-1);
                $contact.$side2 = (-1);
                return 1;
            }
            $contact.$depth = var$19 - var$17;
            if ($contact.$depth < 0.0)
                return 0;
            oom_DVector3_eqSum0($contact.$pos0, $SpherePos, $vDir1, var$18);
            oom_DVector3_scale(oom_DVector3_set($contact.$normal, $vDir1), (-1.0));
            $contact.$g1 = $Cylinder;
            $contact.$g2 = $Sphere;
            $contact.$side1 = (-1);
            $contact.$side2 = (-1);
            return 1;
        }
    }
    return 0;
}
function oooi_CollideCylinderSphere_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideCylinderSphere($o1, $o2, $flags, $contacts, 1);
}
function oooi_CollideCylinderSphere__clinit_() {
    oooi_CollideCylinderSphere_toleranz = 1.0E-4;
}
function oooip_DxWorldProcessIslandsInfo$dmemestimate_fn_t() {
}
function jur_AltGroupQuantifierSet() {
    jur_GroupQuantifierSet.call(this);
}
function jur_AltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AltGroupQuantifierSet();
    jur_AltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_AltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
}
function jur_AltGroupQuantifierSet_setNext($this, $next) {
    jur_AbstractSet_setNext($this, $next);
    $this.$innerSet.$setNext($next);
}
function jur_PosAltGroupQuantifierSet() {
    jur_AltGroupQuantifierSet.call(this);
}
function jur_PosAltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PosAltGroupQuantifierSet();
    jur_PosAltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PosAltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PosAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex <= 0)
        $nextIndex = $stringIndex;
    return $this.$next0.$matches($nextIndex, $testString, $matchResult);
}
function jur_PosAltGroupQuantifierSet_setNext($this, $next) {
    $this.$next0 = $next;
}
function oktg_IScene$Companion$Build$1() {
    kji_Lambda.call(this);
}
var oktg_IScene$Companion$Build$1_INSTANCE = null;
function oktg_IScene$Companion$Build$1_$callClinit() {
    oktg_IScene$Companion$Build$1_$callClinit = $rt_eraseClinit(oktg_IScene$Companion$Build$1);
    oktg_IScene$Companion$Build$1__clinit_();
}
function oktg_IScene$Companion$Build$1__init_() {
    var var_0 = new oktg_IScene$Companion$Build$1();
    oktg_IScene$Companion$Build$1__init_0(var_0);
    return var_0;
}
function oktg_IScene$Companion$Build$1__init_0(var$0) {
    oktg_IScene$Companion$Build$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktg_IScene$Companion$Build$1__clinit_() {
    oktg_IScene$Companion$Build$1_INSTANCE = oktg_IScene$Companion$Build$1__init_();
}
function ju_Queue() {
}
function ju_Deque() {
}
function oooi_FastLDLT() {
    jl_Object.call(this);
}
function oooi_FastLDLT__init_() {
    var var_0 = new oooi_FastLDLT();
    oooi_FastLDLT__init_0(var_0);
    return var_0;
}
function oooi_FastLDLT__init_0($this) {
    jl_Object__init_0($this);
}
function oktga_Vec3Track() {
    var a = this; jl_Object.call(a);
    a.$times0 = null;
    a.$values5 = null;
    a.$inTangents0 = null;
    a.$outTangents0 = null;
    a.$duration1 = 0.0;
    a.$interpolation0 = 0;
    a.$nodeIndex0 = 0;
}
function oktga_Vec3Track__init_(var_0, var_1) {
    var var_2 = new oktga_Vec3Track();
    oktga_Vec3Track__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktga_Vec3Track__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new oktga_Vec3Track();
    oktga_Vec3Track__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktga_Vec3Track__init_3() {
    var var_0 = new oktga_Vec3Track();
    oktga_Vec3Track__init_4(var_0);
    return var_0;
}
function oktga_Vec3Track_getTimes($this) {
    return $this.$times0;
}
function oktga_Vec3Track_getValues($this) {
    return $this.$values5;
}
function oktga_Vec3Track_getInTangents($this) {
    return $this.$inTangents0;
}
function oktga_Vec3Track_getOutTangents($this) {
    return $this.$outTangents0;
}
function oktga_Vec3Track_getDuration($this) {
    return $this.$duration1;
}
function oktga_Vec3Track_setDuration($this, $_set___) {
    $this.$duration1 = $_set___;
}
function oktga_Vec3Track_getNodeIndex($this) {
    return $this.$nodeIndex0;
}
function oktga_Vec3Track__init_0($this, $interpolation, $nodeIndex) {
    jl_Object__init_0($this);
    $this.$interpolation0 = $interpolation;
    $this.$nodeIndex0 = $nodeIndex;
    $this.$times0 = ju_ArrayList__init_();
    $this.$values5 = ju_ArrayList__init_();
    $this.$inTangents0 = ju_ArrayList__init_();
    $this.$outTangents0 = ju_ArrayList__init_();
}
function oktga_Vec3Track__init_2(var$0, var$1, var$2, var$3, var$4) {
    if (var$3 & 1)
        var$1 = 0;
    if (var$3 & 2)
        var$2 = 0;
    oktga_Vec3Track__init_0(var$0, var$1, var$2);
}
function oktga_Vec3Track__init_4(var$0) {
    oktga_Vec3Track__init_2(var$0, 0, 0, 3, null);
}
function oktga_Vec3Track_calculateDuration($this) {
    return oktga_IAnimTrack$DefaultImpls_calculateDuration($this);
}
function ooo_DJoint$DJointFeedback() {
    var a = this; jl_Object.call(a);
    a.$f10 = null;
    a.$t1 = null;
    a.$f2 = null;
    a.$t2 = null;
}
function ooo_DJoint$DJointFeedback__init_() {
    var var_0 = new ooo_DJoint$DJointFeedback();
    ooo_DJoint$DJointFeedback__init_0(var_0);
    return var_0;
}
function ooo_DJoint$DJointFeedback__init_0($this) {
    jl_Object__init_0($this);
    $this.$f10 = oom_DVector3__init_();
    $this.$t1 = oom_DVector3__init_();
    $this.$f2 = oom_DVector3__init_();
    $this.$t2 = oom_DVector3__init_();
}
function oooi_CollisionLibccd$ccd_cyl_t() {
    var a = this; oooi_CollisionLibccd$ccd_obj_t.call(a);
    a.$radius0 = 0.0;
    a.$axis0 = null;
    a.$p10 = null;
    a.$p20 = null;
}
function oooi_CollisionLibccd$ccd_cyl_t__init_() {
    var var_0 = new oooi_CollisionLibccd$ccd_cyl_t();
    oooi_CollisionLibccd$ccd_cyl_t__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$ccd_cyl_t__init_0($this) {
    oooi_CollisionLibccd$ccd_obj_t__init_2($this, null);
    $this.$axis0 = oooil_CCDVec3$ccd_vec3_t__init_();
    $this.$p10 = oooil_CCDVec3$ccd_vec3_t__init_();
    $this.$p20 = oooil_CCDVec3$ccd_vec3_t__init_();
}
function oooi_CollideSpaceGeom$SpaceGeomColliderData() {
    var a = this; jl_Object.call(a);
    a.$flags = 0;
    a.$_contacts = null;
    a.$skip = 0;
    a.$this$099 = null;
}
function oooi_CollideSpaceGeom$SpaceGeomColliderData__init_0(var_0) {
    var var_1 = new oooi_CollideSpaceGeom$SpaceGeomColliderData();
    oooi_CollideSpaceGeom$SpaceGeomColliderData__init_1(var_1, var_0);
    return var_1;
}
function oooi_CollideSpaceGeom$SpaceGeomColliderData__init_(var_0, var_1) {
    var var_2 = new oooi_CollideSpaceGeom$SpaceGeomColliderData();
    oooi_CollideSpaceGeom$SpaceGeomColliderData__init_2(var_2, var_0, var_1);
    return var_2;
}
function oooi_CollideSpaceGeom$SpaceGeomColliderData__init_1($this, var$1) {
    $this.$this$099 = var$1;
    jl_Object__init_0($this);
}
function oooi_CollideSpaceGeom$SpaceGeomColliderData_access$000($x0) {
    return $x0.$_contacts;
}
function oooi_CollideSpaceGeom$SpaceGeomColliderData_access$002($x0, $x1) {
    $x0.$_contacts = $x1;
    return $x1;
}
function oooi_CollideSpaceGeom$SpaceGeomColliderData__init_2($this, $x0, $x1) {
    oooi_CollideSpaceGeom$SpaceGeomColliderData__init_1($this, $x0);
}
function oktm_Mat4() {
    jl_Object.call(this);
    this.$values6 = null;
}
var oktm_Mat4_Companion = null;
function oktm_Mat4_$callClinit() {
    oktm_Mat4_$callClinit = $rt_eraseClinit(oktm_Mat4);
    oktm_Mat4__clinit_();
}
function oktm_Mat4__init_() {
    var var_0 = new oktm_Mat4();
    oktm_Mat4__init_0(var_0);
    return var_0;
}
function oktm_Mat4_getValues($this) {
    return $this.$values6;
}
function oktm_Mat4__init_0($this) {
    oktm_Mat4_$callClinit();
    jl_Object__init_0($this);
    $this.$values6 = $rt_createFloatArray(16);
    $this.$setM00(1.0);
    $this.$setM11(1.0);
    $this.$setM22(1.0);
    $this.$setM33(1.0);
}
function oktm_Mat4__clinit_() {
    oktm_Mat4_Companion = oktm_Mat4$Companion__init_1(null);
}
function oktm_Mat4_getM00($this) {
    return oktm_IMat4$DefaultImpls_getM00($this);
}
function oktm_Mat4_setM00($this, $value) {
    oktm_IMat4$DefaultImpls_setM00($this, $value);
}
function oktm_Mat4_getM01($this) {
    return oktm_IMat4$DefaultImpls_getM01($this);
}
function oktm_Mat4_setM01($this, $value) {
    oktm_IMat4$DefaultImpls_setM01($this, $value);
}
function oktm_Mat4_getM02($this) {
    return oktm_IMat4$DefaultImpls_getM02($this);
}
function oktm_Mat4_setM02($this, $value) {
    oktm_IMat4$DefaultImpls_setM02($this, $value);
}
function oktm_Mat4_getM03($this) {
    return oktm_IMat4$DefaultImpls_getM03($this);
}
function oktm_Mat4_setM03($this, $value) {
    oktm_IMat4$DefaultImpls_setM03($this, $value);
}
function oktm_Mat4_getM10($this) {
    return oktm_IMat4$DefaultImpls_getM10($this);
}
function oktm_Mat4_setM10($this, $value) {
    oktm_IMat4$DefaultImpls_setM10($this, $value);
}
function oktm_Mat4_getM11($this) {
    return oktm_IMat4$DefaultImpls_getM11($this);
}
function oktm_Mat4_setM11($this, $value) {
    oktm_IMat4$DefaultImpls_setM11($this, $value);
}
function oktm_Mat4_getM12($this) {
    return oktm_IMat4$DefaultImpls_getM12($this);
}
function oktm_Mat4_setM12($this, $value) {
    oktm_IMat4$DefaultImpls_setM12($this, $value);
}
function oktm_Mat4_getM13($this) {
    return oktm_IMat4$DefaultImpls_getM13($this);
}
function oktm_Mat4_setM13($this, $value) {
    oktm_IMat4$DefaultImpls_setM13($this, $value);
}
function oktm_Mat4_getM20($this) {
    return oktm_IMat4$DefaultImpls_getM20($this);
}
function oktm_Mat4_setM20($this, $value) {
    oktm_IMat4$DefaultImpls_setM20($this, $value);
}
function oktm_Mat4_getM21($this) {
    return oktm_IMat4$DefaultImpls_getM21($this);
}
function oktm_Mat4_setM21($this, $value) {
    oktm_IMat4$DefaultImpls_setM21($this, $value);
}
function oktm_Mat4_getM22($this) {
    return oktm_IMat4$DefaultImpls_getM22($this);
}
function oktm_Mat4_setM22($this, $value) {
    oktm_IMat4$DefaultImpls_setM22($this, $value);
}
function oktm_Mat4_getM23($this) {
    return oktm_IMat4$DefaultImpls_getM23($this);
}
function oktm_Mat4_setM23($this, $value) {
    oktm_IMat4$DefaultImpls_setM23($this, $value);
}
function oktm_Mat4_getM30($this) {
    return oktm_IMat4$DefaultImpls_getM30($this);
}
function oktm_Mat4_setM30($this, $value) {
    oktm_IMat4$DefaultImpls_setM30($this, $value);
}
function oktm_Mat4_getM31($this) {
    return oktm_IMat4$DefaultImpls_getM31($this);
}
function oktm_Mat4_setM31($this, $value) {
    oktm_IMat4$DefaultImpls_setM31($this, $value);
}
function oktm_Mat4_getM32($this) {
    return oktm_IMat4$DefaultImpls_getM32($this);
}
function oktm_Mat4_setM32($this, $value) {
    oktm_IMat4$DefaultImpls_setM32($this, $value);
}
function oktm_Mat4_getM33($this) {
    return oktm_IMat4$DefaultImpls_getM33($this);
}
function oktm_Mat4_setM33($this, $value) {
    oktm_IMat4$DefaultImpls_setM33($this, $value);
}
function oktm_Mat4_getScaleXSquared($this) {
    return oktm_IMat4$DefaultImpls_getScaleXSquared($this);
}
function oktm_Mat4_getScaleYSquared($this) {
    return oktm_IMat4$DefaultImpls_getScaleYSquared($this);
}
function oktm_Mat4_getScaleZSquared($this) {
    return oktm_IMat4$DefaultImpls_getScaleZSquared($this);
}
function oktm_Mat4_getScaleX($this) {
    return oktm_IMat4$DefaultImpls_getScaleX($this);
}
function oktm_Mat4_getScaleY($this) {
    return oktm_IMat4$DefaultImpls_getScaleY($this);
}
function oktm_Mat4_getScaleZ($this) {
    return oktm_IMat4$DefaultImpls_getScaleZ($this);
}
function oktm_Mat4_getCellValue($this, $cellIndex) {
    return oktm_IMat4$DefaultImpls_getCellValue($this, $cellIndex);
}
function oktm_Mat4_setCellValue($this, $cellIndex, $newValue) {
    oktm_IMat4$DefaultImpls_setCellValue($this, $cellIndex, $newValue);
}
function oktm_Mat4_getRow3($this, $rowIndex, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return oktm_IMat4$DefaultImpls_getRow3($this, $rowIndex, $out);
}
function oktm_Mat4_isNotEqualTo($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IMat4$DefaultImpls_isNotEqualTo($this, $other);
}
function oktm_Mat4_set($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IMat4$DefaultImpls_set($this, $other);
}
function oktm_Mat4_set0($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IMat4$DefaultImpls_set0($this, $other);
}
function oktm_Mat4_set1($this, $translationX, $translationY, $translationZ, $quaternionX, $quaternionY, $quaternionZ, $quaternionW) {
    return oktm_IMat4$DefaultImpls_set1($this, $translationX, $translationY, $translationZ, $quaternionX, $quaternionY, $quaternionZ, $quaternionW);
}
function oktm_Mat4_set2($this, $position, $orientation, $scale) {
    kji_Intrinsics_checkParameterIsNotNull($position, $rt_s(53));
    kji_Intrinsics_checkParameterIsNotNull($orientation, $rt_s(899));
    kji_Intrinsics_checkParameterIsNotNull($scale, $rt_s(40));
    return oktm_IMat4$DefaultImpls_set2($this, $position, $orientation, $scale);
}
function oktm_Mat4_set3($this, $translationX, $translationY, $translationZ, $quaternionX, $quaternionY, $quaternionZ, $quaternionW, $scaleX, $scaleY, $scaleZ) {
    return oktm_IMat4$DefaultImpls_set3($this, $translationX, $translationY, $translationZ, $quaternionX, $quaternionY, $quaternionZ, $quaternionW, $scaleX, $scaleY, $scaleZ);
}
function oktm_Mat4_setFromQuaternion($this, $quaternion) {
    kji_Intrinsics_checkParameterIsNotNull($quaternion, $rt_s(900));
    return oktm_IMat4$DefaultImpls_setFromQuaternion($this, $quaternion);
}
function oktm_Mat4_setFromQuaternion0($this, $quaternionX, $quaternionY, $quaternionZ, $quaternionW) {
    return oktm_IMat4$DefaultImpls_setFromQuaternion0($this, $quaternionX, $quaternionY, $quaternionZ, $quaternionW);
}
function oktm_Mat4_mul($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IMat4$DefaultImpls_mul($this, $other);
}
function oktm_Mat4_mulLeft($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IMat4$DefaultImpls_mulLeft($this, $other);
}
function oktm_Mat4_idt($this) {
    return oktm_IMat4$DefaultImpls_idt($this);
}
function oktm_Mat4_inv($this) {
    return oktm_IMat4$DefaultImpls_inv($this);
}
function oktm_Mat4_det($this) {
    return oktm_IMat4$DefaultImpls_det($this);
}
function oktm_Mat4_setToProjection($this, $near, $far, $fovy, $aspectRatio) {
    return oktm_IMat4$DefaultImpls_setToProjection($this, $near, $far, $fovy, $aspectRatio);
}
function oktm_Mat4_setToOrtho($this, $left, $right, $bottom, $top, $near, $far) {
    return oktm_IMat4$DefaultImpls_setToOrtho($this, $left, $right, $bottom, $top, $near, $far);
}
function oktm_Mat4_setToTranslation($this, $x, $y, $z) {
    return oktm_IMat4$DefaultImpls_setToTranslation($this, $x, $y, $z);
}
function oktm_Mat4_setToRotation($this, $axisX, $axisY, $axisZ, $radians) {
    return oktm_IMat4$DefaultImpls_setToRotation($this, $axisX, $axisY, $axisZ, $radians);
}
function oktm_Mat4_setToLookAt($this, $direction, $up) {
    kji_Intrinsics_checkParameterIsNotNull($direction, $rt_s(58));
    kji_Intrinsics_checkParameterIsNotNull($up, $rt_s(57));
    return oktm_IMat4$DefaultImpls_setToLookAt($this, $direction, $up);
}
function oktm_Mat4_setToLookAt0($this, $position, $direction, $up) {
    kji_Intrinsics_checkParameterIsNotNull($position, $rt_s(53));
    kji_Intrinsics_checkParameterIsNotNull($direction, $rt_s(58));
    kji_Intrinsics_checkParameterIsNotNull($up, $rt_s(57));
    return oktm_IMat4$DefaultImpls_setToLookAt0($this, $position, $direction, $up);
}
function oktm_Mat4_getTranslation($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return oktm_IMat4$DefaultImpls_getTranslation($this, $out);
}
function oktm_Mat4_getRotation($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return oktm_IMat4$DefaultImpls_getRotation($this, $out);
}
function oktm_Mat4_getScale($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return oktm_IMat4$DefaultImpls_getScale($this, $out);
}
function oktm_Mat4_rotate($this, $axisX, $axisY, $axisZ, $rad) {
    return oktm_IMat4$DefaultImpls_rotate($this, $axisX, $axisY, $axisZ, $rad);
}
function oktm_Mat4_rotate0($this, $rotation) {
    kji_Intrinsics_checkParameterIsNotNull($rotation, $rt_s(39));
    return oktm_IMat4$DefaultImpls_rotate0($this, $rotation);
}
function oktm_Mat4_project($this, $vec, $out) {
    kji_Intrinsics_checkParameterIsNotNull($vec, $rt_s(901));
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return oktm_IMat4$DefaultImpls_project($this, $vec, $out);
}
function oktgg_GLTF$read$12$1() {
    kji_Lambda.call(this);
    this.$this$0100 = null;
}
function oktgg_GLTF$read$12$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$12$1();
    oktgg_GLTF$read$12$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$12$1_invoke(var$0, var$1) {
    oktgg_GLTF$read$12$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$12$1_invoke0($this, $$this$objs) {
    var $skin;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $skin = oktgg_GLTFSkin__init_($this.$this$0100.$this$0101, oktgg_GLTFArray_size($this.$this$0100.$this$0101.$getSkins0()), null, 4, null);
    $this.$this$0100.$this$0101.$getSkins0().$add1($skin);
    oktgg_GLTFSkin_read($skin, $$this$objs);
}
function oktgg_GLTF$read$12$1__init_0(var$0, var$1) {
    var$0.$this$0100 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function okttsg_CascadedShadowMappingTest$testMain$1$2() {
    var a = this; kji_Lambda.call(a);
    a.$$control3 = null;
    a.$$model3 = null;
    a.$$screenQuad4 = null;
}
function okttsg_CascadedShadowMappingTest$testMain$1$2__init_(var_0, var_1, var_2) {
    var var_3 = new okttsg_CascadedShadowMappingTest$testMain$1$2();
    okttsg_CascadedShadowMappingTest$testMain$1$2__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function okttsg_CascadedShadowMappingTest$testMain$1$2_invoke(var$0) {
    okttsg_CascadedShadowMappingTest$testMain$1$2_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttsg_CascadedShadowMappingTest$testMain$1$2_invoke0($this) {
    var var$1, var$2, $light, $i, var$5;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$control3;
    okt_APP_$callClinit();
    var$1.$update(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    oktt_GLTFModel_update($this.$$model3, okt_APP_getDeltaTime(okt_APP_INSTANCE));
    var$1 = oktt_GLTFModel_getLight($this.$$model3);
    var$2 = oktt_GLTFModel_getScene($this.$$model3);
    if (var$2 === null)
        kji_Intrinsics_throwNpe();
    oktgl_DirectionalLight_renderShadowMaps(var$1, var$2);
    oktt_GLTFModel_render($this.$$model3);
    $light = oktt_GLTFModel_getLight($this.$$model3);
    $i = 0;
    var$5 = oktgl_DirectionalLight_getShadowCascadesNum($light);
    while ($i < var$5) {
        oktm_ScreenQuad$TextureRenderer_setPosition($this.$$screenQuad4, (-0.75) + $i * 0.44999998807907104, (-0.75));
        oktm_ScreenQuad$TextureRenderer_setScale($this.$$screenQuad4, 0.20000000298023224, 0.20000000298023224);
        oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad4, oktgl_DirectionalLight_getShadowMaps($light).data[$i], null, null, null, 10, null);
        $i = $i + 1 | 0;
    }
}
function okttsg_CascadedShadowMappingTest$testMain$1$2__init_0(var$0, var$1, var$2, var$3) {
    var$0.$$control3 = var$1;
    var$0.$$model3 = var$2;
    var$0.$$screenQuad4 = var$3;
    kji_Lambda__init_0(var$0, 0);
}
function ji_IOException() {
    jl_Exception.call(this);
}
function ji_IOException__init_() {
    var var_0 = new ji_IOException();
    ji_IOException__init_0(var_0);
    return var_0;
}
function ji_IOException__init_1(var_0) {
    var var_1 = new ji_IOException();
    ji_IOException__init_2(var_1, var_0);
    return var_1;
}
function ji_IOException__init_0($this) {
    jl_Exception__init_0($this);
}
function ji_IOException__init_2($this, $message) {
    jl_Exception__init_2($this, $message);
}
function jnc_CharacterCodingException() {
    ji_IOException.call(this);
}
function jnc_CharacterCodingException__init_() {
    var var_0 = new jnc_CharacterCodingException();
    jnc_CharacterCodingException__init_0(var_0);
    return var_0;
}
function jnc_CharacterCodingException__init_0($this) {
    ji_IOException__init_0($this);
}
function jnc_UnmappableCharacterException() {
    jnc_CharacterCodingException.call(this);
    this.$length3 = 0;
}
function jnc_UnmappableCharacterException__init_(var_0) {
    var var_1 = new jnc_UnmappableCharacterException();
    jnc_UnmappableCharacterException__init_0(var_1, var_0);
    return var_1;
}
function jnc_UnmappableCharacterException__init_0($this, $length) {
    jnc_CharacterCodingException__init_0($this);
    $this.$length3 = $length;
}
function jnc_UnmappableCharacterException_getMessage($this) {
    return jl_StringBuilder__init_().$append($rt_s(902)).$append1($this.$length3).$toString();
}
function oooig_GimDynArrayInt() {
    var a = this; jl_Object.call(a);
    a.$m_pdata0 = null;
    a.$G_ARRAY_GROW_SIZE = 0;
    a.$m_size0 = 0;
    a.$m_reserve_size0 = 0;
}
function oooig_GimDynArrayInt__init_() {
    var var_0 = new oooig_GimDynArrayInt();
    oooig_GimDynArrayInt__init_0(var_0);
    return var_0;
}
function oooig_GimDynArrayInt__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_size0 = 0;
    $this.$m_reserve_size0 = 0;
}
function oooig_GimDynArrayInt_GIM_CREATE_BOXQUERY_LIST() {
    var $a;
    $a = oooig_GimDynArrayInt__init_();
    $a.$G_ARRAY_GROW_SIZE = 64;
    $a.$m_reserve_size0 = $a.$G_ARRAY_GROW_SIZE;
    $a.$m_pdata0 = $rt_createIntArray($a.$m_reserve_size0);
    $a.$m_size0 = 0;
    return $a;
}
function oooig_GimDynArrayInt_GIM_DYNARRAY_PUSH_ITEM($this, $item) {
    if ($this.$m_reserve_size0 <= $this.$m_size0)
        $this.$GIM_DYNARRAY_RESERVE_SIZE($this.$m_size0, $this.$m_size0 + $this.$G_ARRAY_GROW_SIZE | 0);
    $this.$m_pdata0.data[$this.$m_size0] = $item;
    $this.$m_size0 = $this.$m_size0 + 1 | 0;
}
function oooig_GimDynArrayInt_GIM_DYNARRAY_RESERVE_SIZE($this, $old_size, $reserve_size) {
    if ($reserve_size > $this.$m_reserve_size0) {
        $this.$m_pdata0 = ju_Arrays_copyOf0($this.$m_pdata0, $reserve_size);
        $this.$m_reserve_size0 = $reserve_size;
    }
}
function oooig_GimDynArrayInt_GIM_DYNARRAY_DESTROY($this) {
    return;
}
function oooig_GimDynArrayInt_GIM_DYNARRAY_POINTER($this) {
    return $this.$m_pdata0;
}
function oooig_GimDynArrayInt_size($this) {
    return $this.$m_size0;
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo() {
    jl_Object.call(this);
}
var oooi_DxWorld$DWorldStepMemoryFunctionsInfo_alloc_block = null;
var oooi_DxWorld$DWorldStepMemoryFunctionsInfo_shrink_block = null;
var oooi_DxWorld$DWorldStepMemoryFunctionsInfo_free_block = null;
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo_$callClinit() {
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo_$callClinit = $rt_eraseClinit(oooi_DxWorld$DWorldStepMemoryFunctionsInfo);
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo__clinit_();
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo__init_() {
    var var_0 = new oooi_DxWorld$DWorldStepMemoryFunctionsInfo();
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo__init_0(var_0);
    return var_0;
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo__init_0($this) {
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo_$callClinit();
    jl_Object__init_0($this);
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo__clinit_() {
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo_alloc_block = oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1__init_();
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo_shrink_block = oooi_DxWorld$DWorldStepMemoryFunctionsInfo$2__init_();
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo_free_block = oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3__init_();
}
function oktgg_GLTFAnimationSampler$read$1() {
    kji_Lambda.call(this);
    this.$this$0102 = null;
}
function oktgg_GLTFAnimationSampler$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFAnimationSampler$read$1();
    oktgg_GLTFAnimationSampler$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFAnimationSampler$read$1_invoke(var$0, var$1) {
    oktgg_GLTFAnimationSampler$read$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAnimationSampler$read$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    oktgg_GLTFAnimationSampler_setInterpolation($this.$this$0102, $it);
}
function oktgg_GLTFAnimationSampler$read$1__init_0(var$0, var$1) {
    var$0.$this$0102 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jur_UCIDecomposedCharSet() {
    jur_DecomposedCharSet.call(this);
}
function jur_UCIDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_UCIDecomposedCharSet();
    jur_UCIDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_UCIDecomposedCharSet__init_0($this, $decomp, $decomposedCharLength) {
    jur_DecomposedCharSet__init_0($this, $decomp, $decomposedCharLength);
}
function oktf_IFile$DefaultImpls() {
    jl_Object.call(this);
}
function oktf_IFile$DefaultImpls_getExtension($$this) {
    return kt_StringsKt__StringsKt_substringAfterLast$default($$this.$getName(), 46, null, 2, null);
}
function oktf_IFile$DefaultImpls_getName($$this) {
    return kt_StringsKt__StringsKt_substringAfterLast$default($$this.$getPath(), 47, null, 2, null);
}
function oktt_IFrameBuffer() {
}
function oktt_SimpleFrameBuffer() {
    var a = this; jl_Object.call(a);
    a.$width0 = 0;
    a.$height0 = 0;
    a.$isBound = 0;
    a.$frameBufferHandle = 0;
    a.$attachments = null;
}
function oktt_SimpleFrameBuffer__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktt_SimpleFrameBuffer();
    oktt_SimpleFrameBuffer__init_1(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function oktt_SimpleFrameBuffer__init_2(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new oktt_SimpleFrameBuffer();
    oktt_SimpleFrameBuffer__init_(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function oktt_SimpleFrameBuffer__init_3() {
    var var_0 = new oktt_SimpleFrameBuffer();
    oktt_SimpleFrameBuffer__init_4(var_0);
    return var_0;
}
function oktt_SimpleFrameBuffer_getGlTarget($this) {
    return oktt_SimpleFrameBuffer_getTexture0($this).$getGlTarget();
}
function oktt_SimpleFrameBuffer_getTextureHandle($this) {
    return oktt_SimpleFrameBuffer_getTexture0($this).$getTextureHandle();
}
function oktt_SimpleFrameBuffer_getTexture0($this) {
    return oktt_SimpleFrameBuffer_getTexture($this, 0);
}
function oktt_SimpleFrameBuffer_getWidth($this) {
    return $this.$width0;
}
function oktt_SimpleFrameBuffer_getHeight($this) {
    return $this.$height0;
}
function oktt_SimpleFrameBuffer_isBound($this) {
    return $this.$isBound;
}
function oktt_SimpleFrameBuffer_setBound($this, $_set___) {
    $this.$isBound = $_set___;
}
function oktt_SimpleFrameBuffer_getFrameBufferHandle($this) {
    return $this.$frameBufferHandle;
}
function oktt_SimpleFrameBuffer_getAttachments($this) {
    return $this.$attachments;
}
function oktt_SimpleFrameBuffer_getAttachments0(var$0) {
    return oktt_SimpleFrameBuffer_getAttachments(var$0);
}
function oktt_SimpleFrameBuffer__init_1($this, $width, $height, $pixelFormat, $internalFormat, $type, $hasDepth, $hasStencil) {
    var var$8, var$9, var$10, var$11;
    jl_Object__init_0($this);
    $this.$width0 = $width;
    $this.$height0 = $height;
    oktg_GL_$callClinit();
    $this.$frameBufferHandle = oktg_GL_glGenFramebuffer(oktg_GL_INSTANCE);
    $this.$attachments = ju_ArrayList__init_();
    var$8 = oktt_SimpleFrameBuffer_getAttachments($this);
    var$9 = new oktt_FrameBufferAttachment;
    var$10 = null;
    var$11 = null;
    oktt_FrameBufferAttachment__init_(var$9, 0, 0, 36064, 0, $internalFormat, $pixelFormat, $type, 0, var$10, 395, var$11);
    var$8.$add1(var$9);
    if ($hasDepth && $hasStencil) {
        var$10 = oktt_SimpleFrameBuffer_getAttachments($this);
        oktt_Attachments_$callClinit();
        var$10.$add1(oktt_Attachments_depthStencilRenderBuffer$default(oktt_Attachments_INSTANCE, 0, 0, 3, null));
    } else if ($hasDepth) {
        var$10 = oktt_SimpleFrameBuffer_getAttachments($this);
        oktt_Attachments_$callClinit();
        var$10.$add1(oktt_Attachments_depthRenderBuffer$default(oktt_Attachments_INSTANCE, 0, 0, 3, null));
    } else if ($hasStencil) {
        var$10 = oktt_SimpleFrameBuffer_getAttachments($this);
        oktt_Attachments_$callClinit();
        var$10.$add1(oktt_Attachments_stencilRenderBuffer$default(oktt_Attachments_INSTANCE, 0, 0, 3, null));
    }
    oktt_SimpleFrameBuffer_buildAttachments($this);
}
function oktt_SimpleFrameBuffer__init_(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9) {
    if (var$8 & 1) {
        oktg_GL_$callClinit();
        var$1 = oktg_GL_getMainFrameBufferWidth(oktg_GL_INSTANCE);
    }
    if (var$8 & 2) {
        oktg_GL_$callClinit();
        var$2 = oktg_GL_getMainFrameBufferHeight(oktg_GL_INSTANCE);
    }
    if (var$8 & 4)
        var$3 = 6408;
    if (var$8 & 8)
        var$4 = var$3;
    if (var$8 & 16)
        var$5 = 5121;
    if (var$8 & 32)
        var$6 = 1;
    if (var$8 & 64)
        var$7 = 0;
    oktt_SimpleFrameBuffer__init_1(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7);
}
function oktt_SimpleFrameBuffer__init_4(var$0) {
    oktt_SimpleFrameBuffer__init_(var$0, 0, 0, 0, 0, 0, 0, 0, 127, null);
}
function oktt_SimpleFrameBuffer_bind($this, $block) {
    kji_Intrinsics_checkParameterIsNotNull($block, $rt_s(301));
    oktt_IFrameBuffer$DefaultImpls_bind($this, $block);
}
function oktt_SimpleFrameBuffer_bind0($this, $unit) {
    oktt_ITexture$DefaultImpls_bind0($this, $unit);
}
function oktt_SimpleFrameBuffer_buildAttachments($this) {
    oktt_IFrameBuffer$DefaultImpls_buildAttachments($this);
}
function oktt_SimpleFrameBuffer_getTexture($this, $index) {
    return oktt_IFrameBuffer$DefaultImpls_getTexture($this, $index);
}
function oktt_SimpleFrameBuffer_initBuffersOrder($this, $indices) {
    kji_Intrinsics_checkParameterIsNotNull($indices, $rt_s(566));
    oktt_IFrameBuffer$DefaultImpls_initBuffersOrder($this, $indices);
}
function oktt_SimpleFrameBuffer_render($this, $block) {
    kji_Intrinsics_checkParameterIsNotNull($block, $rt_s(301));
    oktt_IFrameBuffer$DefaultImpls_render($this, $block);
}
function jl_IndexOutOfBoundsException() {
    jl_RuntimeException.call(this);
}
function jl_IndexOutOfBoundsException__init_() {
    var var_0 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_1(var_0);
    return var_0;
}
function jl_IndexOutOfBoundsException__init_0(var_0) {
    var var_1 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_2(var_1, var_0);
    return var_1;
}
function jl_IndexOutOfBoundsException__init_1($this) {
    jl_RuntimeException__init_1($this);
}
function jl_IndexOutOfBoundsException__init_2($this, $message) {
    jl_RuntimeException__init_2($this, $message);
}
function ooott_TaskGroup() {
    ooott_Task.call(this);
}
function ooott_TaskGroup__init_(var_0, var_1, var_2) {
    var var_3 = new ooott_TaskGroup();
    ooott_TaskGroup__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function ooott_TaskGroup__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new ooott_TaskGroup();
    ooott_TaskGroup__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function ooott_TaskGroup__init_0($this, $executor, $name, $runnable) {
    ooott_TaskGroup__init_2($this, $executor, $name, null, $runnable);
}
function ooott_TaskGroup__init_2($this, $executor, $name, $parent, $runnable) {
    ooott_Task__init_0($this, $executor, $name, $parent, $runnable);
    juca_AtomicInteger_incrementAndGet($this.$subtaskCount);
}
function ooott_TaskGroup_subgroup($this, $name, $runnable) {
    var $subgroup;
    $subgroup = ooott_TaskGroup__init_1($this.$executor, $name, $this, $runnable);
    juca_AtomicInteger_incrementAndGet($this.$subtaskCount);
    return $subgroup;
}
function ooott_TaskGroup_subtask($this, $name, $runnable) {
    var $subtask;
    $subtask = ooott_Task__init_($this.$executor, $name, $this, $runnable);
    juca_AtomicInteger_incrementAndGet($this.$subtaskCount);
    return $subtask;
}
function ooott_TaskGroup_submit($this) {
    $this.$subtaskCompleted();
}
function ooott_TaskGroup_subtaskCompleted($this) {
    if (!juca_AtomicInteger_decrementAndGet($this.$subtaskCount))
        ooott_Task_submit($this);
}
function oktts_SSAOBaseTest$testMain$1$1() {
    kji_Lambda.call(this);
    this.$this$0103 = null;
}
function oktts_SSAOBaseTest$testMain$1$1__init_(var_0) {
    var var_1 = new oktts_SSAOBaseTest$testMain$1$1();
    oktts_SSAOBaseTest$testMain$1$1__init_0(var_1, var_0);
    return var_1;
}
function oktts_SSAOBaseTest$testMain$1$1_invoke(var$0, var$1) {
    oktts_SSAOBaseTest$testMain$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktts_SSAOBaseTest$testMain$1$1_invoke0($this, $$this$render) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    $this.$this$0103.$$sceneShader.$bind();
    var$2 = $this.$this$0103.$$sceneShader;
    oktgc_ActiveCamera_$callClinit();
    var$2.$set12($rt_s(903), oktgc_ActiveCamera_getViewMatrix(oktgc_ActiveCamera_INSTANCE));
    $this.$this$0103.$$sceneShader.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $this.$this$0103.$$sceneShader.$set12($rt_s(563), $this.$this$0103.$$cubeMatrix0);
    oktm_IMesh$DefaultImpls_render$default($this.$this$0103.$$cube2, $this.$this$0103.$$sceneShader, 0, 0, 0, 0, 30, null);
    $this.$this$0103.$$sceneShader.$set12($rt_s(563), $this.$this$0103.$$planeMatrix);
    oktm_IMesh$DefaultImpls_render$default($this.$this$0103.$$plane2, $this.$this$0103.$$sceneShader, 0, 0, 0, 0, 30, null);
}
function oktts_SSAOBaseTest$testMain$1$1__init_0(var$0, var$1) {
    var$0.$this$0103 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktt_TvmKB() {
    var a = this; jl_Object.call(a);
    a.$pressed0 = null;
    a.$listeners1 = null;
    a.$auxMap = null;
}
function oktt_TvmKB__init_() {
    var var_0 = new oktt_TvmKB();
    oktt_TvmKB__init_0(var_0);
    return var_0;
}
function oktt_TvmKB_getPressed($this) {
    return $this.$pressed0;
}
function oktt_TvmKB_getListeners($this) {
    return $this.$listeners1;
}
function oktt_TvmKB_getKeyCode($this, $event) {
    var var$2, var$3, var$4;
    a: {
        b: {
            kji_Intrinsics_checkParameterIsNotNull($event, $rt_s(468));
            var$2 = $rt_str($event.code);
            if (var$2 !== null) {
                c: {
                    d: {
                        e: {
                            f: {
                                g: {
                                    h: {
                                        i: {
                                            j: {
                                                k: {
                                                    l: {
                                                        m: {
                                                            n: {
                                                                o: {
                                                                    p: {
                                                                        q: {
                                                                            r: {
                                                                                s: {
                                                                                    t: {
                                                                                        u: {
                                                                                            v: {
                                                                                                w: {
                                                                                                    x: {
                                                                                                        y: {
                                                                                                            z: {
                                                                                                                ba: {
                                                                                                                    bb: {
                                                                                                                        bc: {
                                                                                                                            bd: {
                                                                                                                                be: {
                                                                                                                                    bf: {
                                                                                                                                        bg: {
                                                                                                                                            bh: {
                                                                                                                                                bi: {
                                                                                                                                                    bj: {
                                                                                                                                                        bk: {
                                                                                                                                                            bl: {
                                                                                                                                                                bm: {
                                                                                                                                                                    bn: {
                                                                                                                                                                        bo: {
                                                                                                                                                                            bp: {
                                                                                                                                                                                bq: {
                                                                                                                                                                                    br: {
                                                                                                                                                                                        bs: {
                                                                                                                                                                                            bt: {
                                                                                                                                                                                                bu: {
                                                                                                                                                                                                    bv: {
                                                                                                                                                                                                        bw: {
                                                                                                                                                                                                            bx: {
                                                                                                                                                                                                                by: {
                                                                                                                                                                                                                    bz: {
                                                                                                                                                                                                                        bA: {
                                                                                                                                                                                                                            bB: {
                                                                                                                                                                                                                                bC: {
                                                                                                                                                                                                                                    bD: {
                                                                                                                                                                                                                                        bE: {
                                                                                                                                                                                                                                            bF: {
                                                                                                                                                                                                                                                bG: {
                                                                                                                                                                                                                                                    bH: {
                                                                                                                                                                                                                                                        bI: {
                                                                                                                                                                                                                                                            bJ: {
                                                                                                                                                                                                                                                                bK: {
                                                                                                                                                                                                                                                                    bL: {
                                                                                                                                                                                                                                                                        bM: {
                                                                                                                                                                                                                                                                            bN: {
                                                                                                                                                                                                                                                                                bO: {
                                                                                                                                                                                                                                                                                    bP: {
                                                                                                                                                                                                                                                                                        bQ: {
                                                                                                                                                                                                                                                                                            bR: {
                                                                                                                                                                                                                                                                                                bS: {
                                                                                                                                                                                                                                                                                                    bT: {
                                                                                                                                                                                                                                                                                                        bU: {
                                                                                                                                                                                                                                                                                                            bV: {
                                                                                                                                                                                                                                                                                                                bW: {
                                                                                                                                                                                                                                                                                                                    bX: {
                                                                                                                                                                                                                                                                                                                        bY: {
                                                                                                                                                                                                                                                                                                                            bZ: {
                                                                                                                                                                                                                                                                                                                                b0: {
                                                                                                                                                                                                                                                                                                                                    b1: {
                                                                                                                                                                                                                                                                                                                                        b2: {
                                                                                                                                                                                                                                                                                                                                            b3: {
                                                                                                                                                                                                                                                                                                                                                b4: {
                                                                                                                                                                                                                                                                                                                                                    b5: {
                                                                                                                                                                                                                                                                                                                                                        b6: {
                                                                                                                                                                                                                                                                                                                                                            b7: {
                                                                                                                                                                                                                                                                                                                                                                b8: {
                                                                                                                                                                                                                                                                                                                                                                    b9: {
                                                                                                                                                                                                                                                                                                                                                                        b$: {
                                                                                                                                                                                                                                                                                                                                                                            b_: {
                                                                                                                                                                                                                                                                                                                                                                                ca: {
                                                                                                                                                                                                                                                                                                                                                                                    cb: {
                                                                                                                                                                                                                                                                                                                                                                                        cc: {
                                                                                                                                                                                                                                                                                                                                                                                            cd: {
                                                                                                                                                                                                                                                                                                                                                                                                switch (var$2.$hashCode()) {
                                                                                                                                                                                                                                                                                                                                                                                                    case -2099925287:
                                                                                                                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                                                                                                                    case -1911885398:
                                                                                                                                                                                                                                                                                                                                                                                                        break cd;
                                                                                                                                                                                                                                                                                                                                                                                                    case -1907858975:
                                                                                                                                                                                                                                                                                                                                                                                                        break cc;
                                                                                                                                                                                                                                                                                                                                                                                                    case -1470983457:
                                                                                                                                                                                                                                                                                                                                                                                                        break cb;
                                                                                                                                                                                                                                                                                                                                                                                                    case -1397911671:
                                                                                                                                                                                                                                                                                                                                                                                                        break ca;
                                                                                                                                                                                                                                                                                                                                                                                                    case -939175467:
                                                                                                                                                                                                                                                                                                                                                                                                        break b_;
                                                                                                                                                                                                                                                                                                                                                                                                    case -937610026:
                                                                                                                                                                                                                                                                                                                                                                                                        break b$;
                                                                                                                                                                                                                                                                                                                                                                                                    case -937491361:
                                                                                                                                                                                                                                                                                                                                                                                                        break b9;
                                                                                                                                                                                                                                                                                                                                                                                                    case -379927846:
                                                                                                                                                                                                                                                                                                                                                                                                        break b8;
                                                                                                                                                                                                                                                                                                                                                                                                    case -335449501:
                                                                                                                                                                                                                                                                                                                                                                                                        break b7;
                                                                                                                                                                                                                                                                                                                                                                                                    case -335449500:
                                                                                                                                                                                                                                                                                                                                                                                                        break b6;
                                                                                                                                                                                                                                                                                                                                                                                                    case -335449499:
                                                                                                                                                                                                                                                                                                                                                                                                        break b5;
                                                                                                                                                                                                                                                                                                                                                                                                    case -335449498:
                                                                                                                                                                                                                                                                                                                                                                                                        break b4;
                                                                                                                                                                                                                                                                                                                                                                                                    case -335449497:
                                                                                                                                                                                                                                                                                                                                                                                                        break b3;
                                                                                                                                                                                                                                                                                                                                                                                                    case -335449496:
                                                                                                                                                                                                                                                                                                                                                                                                        break b2;
                                                                                                                                                                                                                                                                                                                                                                                                    case -335449495:
                                                                                                                                                                                                                                                                                                                                                                                                        break b1;
                                                                                                                                                                                                                                                                                                                                                                                                    case -335449494:
                                                                                                                                                                                                                                                                                                                                                                                                        break b0;
                                                                                                                                                                                                                                                                                                                                                                                                    case -335449493:
                                                                                                                                                                                                                                                                                                                                                                                                        break bZ;
                                                                                                                                                                                                                                                                                                                                                                                                    case -335449492:
                                                                                                                                                                                                                                                                                                                                                                                                        break bY;
                                                                                                                                                                                                                                                                                                                                                                                                    case -47633692:
                                                                                                                                                                                                                                                                                                                                                                                                        break bX;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2219:
                                                                                                                                                                                                                                                                                                                                                                                                        break bW;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2220:
                                                                                                                                                                                                                                                                                                                                                                                                        break bV;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2221:
                                                                                                                                                                                                                                                                                                                                                                                                        break bU;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2222:
                                                                                                                                                                                                                                                                                                                                                                                                        break bT;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2223:
                                                                                                                                                                                                                                                                                                                                                                                                        break bS;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2224:
                                                                                                                                                                                                                                                                                                                                                                                                        break bR;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2225:
                                                                                                                                                                                                                                                                                                                                                                                                        break bQ;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2226:
                                                                                                                                                                                                                                                                                                                                                                                                        break bP;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2227:
                                                                                                                                                                                                                                                                                                                                                                                                        break bO;
                                                                                                                                                                                                                                                                                                                                                                                                    case 68837:
                                                                                                                                                                                                                                                                                                                                                                                                        break bN;
                                                                                                                                                                                                                                                                                                                                                                                                    case 68838:
                                                                                                                                                                                                                                                                                                                                                                                                        break bM;
                                                                                                                                                                                                                                                                                                                                                                                                    case 68839:
                                                                                                                                                                                                                                                                                                                                                                                                        break bL;
                                                                                                                                                                                                                                                                                                                                                                                                    case 69819:
                                                                                                                                                                                                                                                                                                                                                                                                        break bK;
                                                                                                                                                                                                                                                                                                                                                                                                    case 83829:
                                                                                                                                                                                                                                                                                                                                                                                                        break bJ;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2255103:
                                                                                                                                                                                                                                                                                                                                                                                                        break bI;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335202:
                                                                                                                                                                                                                                                                                                                                                                                                        break bH;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335203:
                                                                                                                                                                                                                                                                                                                                                                                                        break bG;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335204:
                                                                                                                                                                                                                                                                                                                                                                                                        break bF;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335205:
                                                                                                                                                                                                                                                                                                                                                                                                        break bE;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335206:
                                                                                                                                                                                                                                                                                                                                                                                                        break bD;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335207:
                                                                                                                                                                                                                                                                                                                                                                                                        break bC;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335208:
                                                                                                                                                                                                                                                                                                                                                                                                        break bB;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335209:
                                                                                                                                                                                                                                                                                                                                                                                                        break bA;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335210:
                                                                                                                                                                                                                                                                                                                                                                                                        break bz;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335211:
                                                                                                                                                                                                                                                                                                                                                                                                        break by;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335212:
                                                                                                                                                                                                                                                                                                                                                                                                        break bx;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335213:
                                                                                                                                                                                                                                                                                                                                                                                                        break bw;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335214:
                                                                                                                                                                                                                                                                                                                                                                                                        break bv;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335215:
                                                                                                                                                                                                                                                                                                                                                                                                        break bu;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335216:
                                                                                                                                                                                                                                                                                                                                                                                                        break bt;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335217:
                                                                                                                                                                                                                                                                                                                                                                                                        break bs;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335218:
                                                                                                                                                                                                                                                                                                                                                                                                        break br;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335219:
                                                                                                                                                                                                                                                                                                                                                                                                        break bq;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335220:
                                                                                                                                                                                                                                                                                                                                                                                                        break bp;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335221:
                                                                                                                                                                                                                                                                                                                                                                                                        break bo;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335222:
                                                                                                                                                                                                                                                                                                                                                                                                        break bn;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335223:
                                                                                                                                                                                                                                                                                                                                                                                                        break bm;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335224:
                                                                                                                                                                                                                                                                                                                                                                                                        break bl;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335225:
                                                                                                                                                                                                                                                                                                                                                                                                        break bk;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335226:
                                                                                                                                                                                                                                                                                                                                                                                                        break bj;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2335227:
                                                                                                                                                                                                                                                                                                                                                                                                        break bi;
                                                                                                                                                                                                                                                                                                                                                                                                    case 65290933:
                                                                                                                                                                                                                                                                                                                                                                                                        break bh;
                                                                                                                                                                                                                                                                                                                                                                                                    case 67114680:
                                                                                                                                                                                                                                                                                                                                                                                                        break bg;
                                                                                                                                                                                                                                                                                                                                                                                                    case 67204884:
                                                                                                                                                                                                                                                                                                                                                                                                        break bf;
                                                                                                                                                                                                                                                                                                                                                                                                    case 74348624:
                                                                                                                                                                                                                                                                                                                                                                                                        break be;
                                                                                                                                                                                                                                                                                                                                                                                                    case 78401116:
                                                                                                                                                                                                                                                                                                                                                                                                        break bd;
                                                                                                                                                                                                                                                                                                                                                                                                    case 79966557:
                                                                                                                                                                                                                                                                                                                                                                                                        break bc;
                                                                                                                                                                                                                                                                                                                                                                                                    case 80085222:
                                                                                                                                                                                                                                                                                                                                                                                                        break bb;
                                                                                                                                                                                                                                                                                                                                                                                                    case 126369586:
                                                                                                                                                                                                                                                                                                                                                                                                        break ba;
                                                                                                                                                                                                                                                                                                                                                                                                    case 251549619:
                                                                                                                                                                                                                                                                                                                                                                                                        break z;
                                                                                                                                                                                                                                                                                                                                                                                                    case 759638320:
                                                                                                                                                                                                                                                                                                                                                                                                        break y;
                                                                                                                                                                                                                                                                                                                                                                                                    case 923631601:
                                                                                                                                                                                                                                                                                                                                                                                                        break x;
                                                                                                                                                                                                                                                                                                                                                                                                    case 930625636:
                                                                                                                                                                                                                                                                                                                                                                                                        break w;
                                                                                                                                                                                                                                                                                                                                                                                                    case 977535019:
                                                                                                                                                                                                                                                                                                                                                                                                        break v;
                                                                                                                                                                                                                                                                                                                                                                                                    case 977763216:
                                                                                                                                                                                                                                                                                                                                                                                                        break u;
                                                                                                                                                                                                                                                                                                                                                                                                    case 1149837940:
                                                                                                                                                                                                                                                                                                                                                                                                        break t;
                                                                                                                                                                                                                                                                                                                                                                                                    case 1289876625:
                                                                                                                                                                                                                                                                                                                                                                                                        break s;
                                                                                                                                                                                                                                                                                                                                                                                                    case 1291750699:
                                                                                                                                                                                                                                                                                                                                                                                                        break r;
                                                                                                                                                                                                                                                                                                                                                                                                    case 1422382255:
                                                                                                                                                                                                                                                                                                                                                                                                        break q;
                                                                                                                                                                                                                                                                                                                                                                                                    case 1564800910:
                                                                                                                                                                                                                                                                                                                                                                                                        break p;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2043376075:
                                                                                                                                                                                                                                                                                                                                                                                                        break o;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2046924995:
                                                                                                                                                                                                                                                                                                                                                                                                        break n;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2046924996:
                                                                                                                                                                                                                                                                                                                                                                                                        break m;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2046924997:
                                                                                                                                                                                                                                                                                                                                                                                                        break l;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2046924998:
                                                                                                                                                                                                                                                                                                                                                                                                        break k;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2046924999:
                                                                                                                                                                                                                                                                                                                                                                                                        break j;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2046925000:
                                                                                                                                                                                                                                                                                                                                                                                                        break i;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2046925001:
                                                                                                                                                                                                                                                                                                                                                                                                        break h;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2046925002:
                                                                                                                                                                                                                                                                                                                                                                                                        break g;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2046925003:
                                                                                                                                                                                                                                                                                                                                                                                                        break f;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2046925004:
                                                                                                                                                                                                                                                                                                                                                                                                        break e;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2079612435:
                                                                                                                                                                                                                                                                                                                                                                                                        break d;
                                                                                                                                                                                                                                                                                                                                                                                                    case 2084662433:
                                                                                                                                                                                                                                                                                                                                                                                                        break c;
                                                                                                                                                                                                                                                                                                                                                                                                    default:
                                                                                                                                                                                                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                if (!var$2.$equals0($rt_s(774)))
                                                                                                                                                                                                                                                                                                                                                                                                    break b;
                                                                                                                                                                                                                                                                                                                                                                                                var$3 = 133;
                                                                                                                                                                                                                                                                                                                                                                                                break a;
                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                            if (!var$2.$equals0($rt_s(904)))
                                                                                                                                                                                                                                                                                                                                                                                                break b;
                                                                                                                                                                                                                                                                                                                                                                                            var$3 = 92;
                                                                                                                                                                                                                                                                                                                                                                                            break a;
                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                        if (!var$2.$equals0($rt_s(905)))
                                                                                                                                                                                                                                                                                                                                                                                            break b;
                                                                                                                                                                                                                                                                                                                                                                                        var$3 = 56;
                                                                                                                                                                                                                                                                                                                                                                                        break a;
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                    if (!var$2.$equals0($rt_s(906)))
                                                                                                                                                                                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                                                                                                                                                                                    var$3 = 130;
                                                                                                                                                                                                                                                                                                                                                                                    break a;
                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                if (!var$2.$equals0($rt_s(907)))
                                                                                                                                                                                                                                                                                                                                                                                    break b;
                                                                                                                                                                                                                                                                                                                                                                                var$3 = 59;
                                                                                                                                                                                                                                                                                                                                                                                break a;
                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                            if (!var$2.$equals0($rt_s(908)))
                                                                                                                                                                                                                                                                                                                                                                                break b;
                                                                                                                                                                                                                                                                                                                                                                            var$3 = 68;
                                                                                                                                                                                                                                                                                                                                                                            break a;
                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                        if (!var$2.$equals0($rt_s(909)))
                                                                                                                                                                                                                                                                                                                                                                            break b;
                                                                                                                                                                                                                                                                                                                                                                        var$3 = 73;
                                                                                                                                                                                                                                                                                                                                                                        break a;
                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                    if (!var$2.$equals0($rt_s(910)))
                                                                                                                                                                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                                                                                                                                                                    var$3 = 67;
                                                                                                                                                                                                                                                                                                                                                                    break a;
                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                if (!var$2.$equals0($rt_s(911)))
                                                                                                                                                                                                                                                                                                                                                                    break b;
                                                                                                                                                                                                                                                                                                                                                                var$3 = 60;
                                                                                                                                                                                                                                                                                                                                                                break a;
                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                            if (!var$2.$equals0($rt_s(912)))
                                                                                                                                                                                                                                                                                                                                                                break b;
                                                                                                                                                                                                                                                                                                                                                            var$3 = 144;
                                                                                                                                                                                                                                                                                                                                                            break a;
                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                        if (!var$2.$equals0($rt_s(913)))
                                                                                                                                                                                                                                                                                                                                                            break b;
                                                                                                                                                                                                                                                                                                                                                        var$3 = 145;
                                                                                                                                                                                                                                                                                                                                                        break a;
                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                    if (!var$2.$equals0($rt_s(914)))
                                                                                                                                                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                                                                                                                                                    var$3 = 146;
                                                                                                                                                                                                                                                                                                                                                    break a;
                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                if (!var$2.$equals0($rt_s(915)))
                                                                                                                                                                                                                                                                                                                                                    break b;
                                                                                                                                                                                                                                                                                                                                                var$3 = 147;
                                                                                                                                                                                                                                                                                                                                                break a;
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                            if (!var$2.$equals0($rt_s(916)))
                                                                                                                                                                                                                                                                                                                                                break b;
                                                                                                                                                                                                                                                                                                                                            var$3 = 148;
                                                                                                                                                                                                                                                                                                                                            break a;
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                        if (!var$2.$equals0($rt_s(917)))
                                                                                                                                                                                                                                                                                                                                            break b;
                                                                                                                                                                                                                                                                                                                                        var$3 = 149;
                                                                                                                                                                                                                                                                                                                                        break a;
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    if (!var$2.$equals0($rt_s(918)))
                                                                                                                                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                                                                                                                                    var$3 = 150;
                                                                                                                                                                                                                                                                                                                                    break a;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if (!var$2.$equals0($rt_s(919)))
                                                                                                                                                                                                                                                                                                                                    break b;
                                                                                                                                                                                                                                                                                                                                var$3 = 151;
                                                                                                                                                                                                                                                                                                                                break a;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            if (!var$2.$equals0($rt_s(920)))
                                                                                                                                                                                                                                                                                                                                break b;
                                                                                                                                                                                                                                                                                                                            var$3 = 152;
                                                                                                                                                                                                                                                                                                                            break a;
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        if (!var$2.$equals0($rt_s(921)))
                                                                                                                                                                                                                                                                                                                            break b;
                                                                                                                                                                                                                                                                                                                        var$3 = 153;
                                                                                                                                                                                                                                                                                                                        break a;
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    if (!var$2.$equals0($rt_s(922)))
                                                                                                                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                                                                                                                    var$3 = 129;
                                                                                                                                                                                                                                                                                                                    break a;
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                if (!var$2.$equals0($rt_s(785)))
                                                                                                                                                                                                                                                                                                                    break b;
                                                                                                                                                                                                                                                                                                                var$3 = 244;
                                                                                                                                                                                                                                                                                                                break a;
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            if (!var$2.$equals0($rt_s(786)))
                                                                                                                                                                                                                                                                                                                break b;
                                                                                                                                                                                                                                                                                                            var$3 = 245;
                                                                                                                                                                                                                                                                                                            break a;
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                        if (!var$2.$equals0($rt_s(787)))
                                                                                                                                                                                                                                                                                                            break b;
                                                                                                                                                                                                                                                                                                        var$3 = 246;
                                                                                                                                                                                                                                                                                                        break a;
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    if (!var$2.$equals0($rt_s(788)))
                                                                                                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                                                                                                    var$3 = 247;
                                                                                                                                                                                                                                                                                                    break a;
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                if (!var$2.$equals0($rt_s(789)))
                                                                                                                                                                                                                                                                                                    break b;
                                                                                                                                                                                                                                                                                                var$3 = 248;
                                                                                                                                                                                                                                                                                                break a;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            if (!var$2.$equals0($rt_s(790)))
                                                                                                                                                                                                                                                                                                break b;
                                                                                                                                                                                                                                                                                            var$3 = 249;
                                                                                                                                                                                                                                                                                            break a;
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        if (!var$2.$equals0($rt_s(791)))
                                                                                                                                                                                                                                                                                            break b;
                                                                                                                                                                                                                                                                                        var$3 = 250;
                                                                                                                                                                                                                                                                                        break a;
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    if (!var$2.$equals0($rt_s(792)))
                                                                                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                                                                                    var$3 = 251;
                                                                                                                                                                                                                                                                                    break a;
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                if (!var$2.$equals0($rt_s(793)))
                                                                                                                                                                                                                                                                                    break b;
                                                                                                                                                                                                                                                                                var$3 = 252;
                                                                                                                                                                                                                                                                                break a;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            if (!var$2.$equals0($rt_s(794)))
                                                                                                                                                                                                                                                                                break b;
                                                                                                                                                                                                                                                                            var$3 = 253;
                                                                                                                                                                                                                                                                            break a;
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        if (!var$2.$equals0($rt_s(795)))
                                                                                                                                                                                                                                                                            break b;
                                                                                                                                                                                                                                                                        var$3 = 254;
                                                                                                                                                                                                                                                                        break a;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    if (!var$2.$equals0($rt_s(796)))
                                                                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                                                                    var$3 = 255;
                                                                                                                                                                                                                                                                    break a;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                if (!var$2.$equals0($rt_s(773)))
                                                                                                                                                                                                                                                                    break b;
                                                                                                                                                                                                                                                                var$3 = 132;
                                                                                                                                                                                                                                                                break a;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if (!var$2.$equals0($rt_s(723)))
                                                                                                                                                                                                                                                                break b;
                                                                                                                                                                                                                                                            var$3 = 61;
                                                                                                                                                                                                                                                            break a;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        if (!var$2.$equals0($rt_s(670)))
                                                                                                                                                                                                                                                            break b;
                                                                                                                                                                                                                                                        var$3 = 3;
                                                                                                                                                                                                                                                        break a;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    if (!var$2.$equals0($rt_s(923)))
                                                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                                                    var$3 = 29;
                                                                                                                                                                                                                                                    break a;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if (!var$2.$equals0($rt_s(924)))
                                                                                                                                                                                                                                                    break b;
                                                                                                                                                                                                                                                var$3 = 30;
                                                                                                                                                                                                                                                break a;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            if (!var$2.$equals0($rt_s(925)))
                                                                                                                                                                                                                                                break b;
                                                                                                                                                                                                                                            var$3 = 31;
                                                                                                                                                                                                                                            break a;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if (!var$2.$equals0($rt_s(926)))
                                                                                                                                                                                                                                            break b;
                                                                                                                                                                                                                                        var$3 = 32;
                                                                                                                                                                                                                                        break a;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if (!var$2.$equals0($rt_s(927)))
                                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                                    var$3 = 33;
                                                                                                                                                                                                                                    break a;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if (!var$2.$equals0($rt_s(928)))
                                                                                                                                                                                                                                    break b;
                                                                                                                                                                                                                                var$3 = 34;
                                                                                                                                                                                                                                break a;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (!var$2.$equals0($rt_s(929)))
                                                                                                                                                                                                                                break b;
                                                                                                                                                                                                                            var$3 = 35;
                                                                                                                                                                                                                            break a;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        if (!var$2.$equals0($rt_s(930)))
                                                                                                                                                                                                                            break b;
                                                                                                                                                                                                                        var$3 = 36;
                                                                                                                                                                                                                        break a;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    if (!var$2.$equals0($rt_s(931)))
                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                    var$3 = 37;
                                                                                                                                                                                                                    break a;
                                                                                                                                                                                                                }
                                                                                                                                                                                                                if (!var$2.$equals0($rt_s(932)))
                                                                                                                                                                                                                    break b;
                                                                                                                                                                                                                var$3 = 38;
                                                                                                                                                                                                                break a;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            if (!var$2.$equals0($rt_s(933)))
                                                                                                                                                                                                                break b;
                                                                                                                                                                                                            var$3 = 39;
                                                                                                                                                                                                            break a;
                                                                                                                                                                                                        }
                                                                                                                                                                                                        if (!var$2.$equals0($rt_s(934)))
                                                                                                                                                                                                            break b;
                                                                                                                                                                                                        var$3 = 40;
                                                                                                                                                                                                        break a;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    if (!var$2.$equals0($rt_s(935)))
                                                                                                                                                                                                        break b;
                                                                                                                                                                                                    var$3 = 41;
                                                                                                                                                                                                    break a;
                                                                                                                                                                                                }
                                                                                                                                                                                                if (!var$2.$equals0($rt_s(936)))
                                                                                                                                                                                                    break b;
                                                                                                                                                                                                var$3 = 42;
                                                                                                                                                                                                break a;
                                                                                                                                                                                            }
                                                                                                                                                                                            if (!var$2.$equals0($rt_s(937)))
                                                                                                                                                                                                break b;
                                                                                                                                                                                            var$3 = 43;
                                                                                                                                                                                            break a;
                                                                                                                                                                                        }
                                                                                                                                                                                        if (!var$2.$equals0($rt_s(938)))
                                                                                                                                                                                            break b;
                                                                                                                                                                                        var$3 = 44;
                                                                                                                                                                                        break a;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (!var$2.$equals0($rt_s(939)))
                                                                                                                                                                                        break b;
                                                                                                                                                                                    var$3 = 45;
                                                                                                                                                                                    break a;
                                                                                                                                                                                }
                                                                                                                                                                                if (!var$2.$equals0($rt_s(940)))
                                                                                                                                                                                    break b;
                                                                                                                                                                                var$3 = 46;
                                                                                                                                                                                break a;
                                                                                                                                                                            }
                                                                                                                                                                            if (!var$2.$equals0($rt_s(941)))
                                                                                                                                                                                break b;
                                                                                                                                                                            var$3 = 47;
                                                                                                                                                                            break a;
                                                                                                                                                                        }
                                                                                                                                                                        if (!var$2.$equals0($rt_s(942)))
                                                                                                                                                                            break b;
                                                                                                                                                                        var$3 = 48;
                                                                                                                                                                        break a;
                                                                                                                                                                    }
                                                                                                                                                                    if (!var$2.$equals0($rt_s(943)))
                                                                                                                                                                        break b;
                                                                                                                                                                    var$3 = 49;
                                                                                                                                                                    break a;
                                                                                                                                                                }
                                                                                                                                                                if (!var$2.$equals0($rt_s(944)))
                                                                                                                                                                    break b;
                                                                                                                                                                var$3 = 50;
                                                                                                                                                                break a;
                                                                                                                                                            }
                                                                                                                                                            if (!var$2.$equals0($rt_s(945)))
                                                                                                                                                                break b;
                                                                                                                                                            var$3 = 51;
                                                                                                                                                            break a;
                                                                                                                                                        }
                                                                                                                                                        if (!var$2.$equals0($rt_s(946)))
                                                                                                                                                            break b;
                                                                                                                                                        var$3 = 52;
                                                                                                                                                        break a;
                                                                                                                                                    }
                                                                                                                                                    if (!var$2.$equals0($rt_s(947)))
                                                                                                                                                        break b;
                                                                                                                                                    var$3 = 53;
                                                                                                                                                    break a;
                                                                                                                                                }
                                                                                                                                                if (!var$2.$equals0($rt_s(948)))
                                                                                                                                                    break b;
                                                                                                                                                var$3 = 54;
                                                                                                                                                break a;
                                                                                                                                            }
                                                                                                                                            if (!var$2.$equals0($rt_s(949)))
                                                                                                                                                break b;
                                                                                                                                            var$3 = 55;
                                                                                                                                            break a;
                                                                                                                                        }
                                                                                                                                        if (!var$2.$equals0($rt_s(727)))
                                                                                                                                            break b;
                                                                                                                                        var$3 = 66;
                                                                                                                                        break a;
                                                                                                                                    }
                                                                                                                                    if (!var$2.$equals0($rt_s(950)))
                                                                                                                                        break b;
                                                                                                                                    var$3 = 70;
                                                                                                                                    break a;
                                                                                                                                }
                                                                                                                                if (!var$2.$equals0($rt_s(951)))
                                                                                                                                    break b;
                                                                                                                                var$3 = 69;
                                                                                                                                break a;
                                                                                                                            }
                                                                                                                            if (!var$2.$equals0($rt_s(952)))
                                                                                                                                break b;
                                                                                                                            var$3 = 75;
                                                                                                                            break a;
                                                                                                                        }
                                                                                                                        if (!var$2.$equals0($rt_s(953)))
                                                                                                                            break b;
                                                                                                                        var$3 = 76;
                                                                                                                        break a;
                                                                                                                    }
                                                                                                                    if (!var$2.$equals0($rt_s(100)))
                                                                                                                        break b;
                                                                                                                    var$3 = 62;
                                                                                                                    break a;
                                                                                                                }
                                                                                                                if (!var$2.$equals0($rt_s(954)))
                                                                                                                    break b;
                                                                                                                var$3 = 25;
                                                                                                                break a;
                                                                                                            }
                                                                                                            if (!var$2.$equals0($rt_s(955)))
                                                                                                                break b;
                                                                                                            var$3 = 22;
                                                                                                            break a;
                                                                                                        }
                                                                                                        if (!var$2.$equals0($rt_s(956)))
                                                                                                            break b;
                                                                                                        var$3 = 57;
                                                                                                        break a;
                                                                                                    }
                                                                                                    if (!var$2.$equals0($rt_s(957)))
                                                                                                        break b;
                                                                                                    var$3 = 93;
                                                                                                    break a;
                                                                                                }
                                                                                                if (!var$2.$equals0($rt_s(958)))
                                                                                                    break b;
                                                                                                var$3 = 19;
                                                                                                break a;
                                                                                            }
                                                                                            if (!var$2.$equals0($rt_s(959)))
                                                                                                break b;
                                                                                            var$3 = 20;
                                                                                            break a;
                                                                                        }
                                                                                        if (!var$2.$equals0($rt_s(960)))
                                                                                            break b;
                                                                                        var$3 = 21;
                                                                                        break a;
                                                                                    }
                                                                                    if (!var$2.$equals0($rt_s(961)))
                                                                                        break b;
                                                                                    var$3 = 72;
                                                                                    break a;
                                                                                }
                                                                                if (!var$2.$equals0($rt_s(962)))
                                                                                    break b;
                                                                                var$3 = 74;
                                                                                break a;
                                                                            }
                                                                            if (!var$2.$equals0($rt_s(963)))
                                                                                break b;
                                                                            var$3 = 24;
                                                                            break a;
                                                                        }
                                                                        if (!var$2.$equals0($rt_s(964)))
                                                                            break b;
                                                                        var$3 = 71;
                                                                        break a;
                                                                    }
                                                                    if (!var$2.$equals0($rt_s(965)))
                                                                        break b;
                                                                    var$3 = 82;
                                                                    break a;
                                                                }
                                                                if (!var$2.$equals0($rt_s(728)))
                                                                    break b;
                                                                var$3 = 67;
                                                                break a;
                                                            }
                                                            if (!var$2.$equals0($rt_s(966)))
                                                                break b;
                                                            var$3 = 7;
                                                            break a;
                                                        }
                                                        if (!var$2.$equals0($rt_s(967)))
                                                            break b;
                                                        var$3 = 8;
                                                        break a;
                                                    }
                                                    if (!var$2.$equals0($rt_s(968)))
                                                        break b;
                                                    var$3 = 9;
                                                    break a;
                                                }
                                                if (!var$2.$equals0($rt_s(969)))
                                                    break b;
                                                var$3 = 10;
                                                break a;
                                            }
                                            if (!var$2.$equals0($rt_s(970)))
                                                break b;
                                            var$3 = 11;
                                            break a;
                                        }
                                        if (!var$2.$equals0($rt_s(971)))
                                            break b;
                                        var$3 = 12;
                                        break a;
                                    }
                                    if (!var$2.$equals0($rt_s(972)))
                                        break b;
                                    var$3 = 13;
                                    break a;
                                }
                                if (!var$2.$equals0($rt_s(973)))
                                    break b;
                                var$3 = 14;
                                break a;
                            }
                            if (!var$2.$equals0($rt_s(974)))
                                break b;
                            var$3 = 15;
                            break a;
                        }
                        if (!var$2.$equals0($rt_s(975)))
                            break b;
                        var$3 = 16;
                        break a;
                    }
                    if (!var$2.$equals0($rt_s(976)))
                        break b;
                    var$3 = 58;
                    break a;
                }
                if (var$2.$equals0($rt_s(772))) {
                    var$3 = 131;
                    break a;
                }
            }
        }
        var$4 = $this.$auxMap.$get0($rt_str($event.code));
        if (var$4 === null)
            var$4 = jl_Integer_valueOf(0);
        var$3 = var$4.$intValue();
    }
    return var$3;
}
function oktt_TvmKB_isKeyPressed($this, $keycode) {
    return $this.$pressed0.$contains1(jl_Integer_valueOf($keycode));
}
function oktt_TvmKB_addListener($this, $listener) {
    kji_Intrinsics_checkParameterIsNotNull($listener, $rt_s(469));
    $this.$listeners1.$add1($listener);
}
function oktt_TvmKB_reset($this) {
    $this.$listeners1.$clear();
}
function oktt_TvmKB__init_0($this) {
    var var$1, $document;
    jl_Object__init_0($this);
    $this.$pressed0 = ju_HashSet__init_();
    $this.$listeners1 = ju_ArrayList__init_();
    $this.$auxMap = ju_HashMap__init_();
    var$1 = window;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(380));
    $document = var$1.document;
    var$1 = otji_JS_functionAsObject(oktt_TvmKB$1__init_($this), "handleEvent");
    $document.addEventListener("keydown", otji_JS_function(var$1, "handleEvent"), !!0);
    var$1 = otji_JS_functionAsObject(oktt_TvmKB$2__init_($this), "handleEvent");
    $document.addEventListener("keypress", otji_JS_function(var$1, "handleEvent"), !!0);
    var$1 = otji_JS_functionAsObject(oktt_TvmKB$3__init_($this), "handleEvent");
    $document.addEventListener("keyup", otji_JS_function(var$1, "handleEvent"), !!0);
}
function oktt_TvmKB_getShift($this) {
    return okti_IKB$DefaultImpls_getShift($this);
}
function jl_Long() {
    jl_Number.call(this);
}
var jl_Long_TYPE = null;
function jl_Long_$callClinit() {
    jl_Long_$callClinit = $rt_eraseClinit(jl_Long);
    jl_Long__clinit_();
}
function jl_Long_parseLong($s, $radix) {
    var $negative, $index, $value, var$6, $digit;
    jl_Long_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        if ($s !== null && !$s.$isEmpty()) {
            a: {
                $negative = 0;
                $index = 0;
                switch ($s.$charAt(0)) {
                    case 43:
                        $index = 1;
                        break a;
                    case 45:
                        $negative = 1;
                        $index = 1;
                        break a;
                    default:
                }
            }
            $value = Long_ZERO;
            while ($index < $s.$length()) {
                var$6 = $index + 1 | 0;
                $digit = jl_Character_getNumericValue($s.$charAt($index));
                if ($digit < 0)
                    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(9)).$append($s).$toString()));
                if ($digit >= $radix)
                    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(10)).$append1($radix).$append($rt_s(11)).$append($s).$toString()));
                $value = Long_add(Long_mul(Long_fromInt($radix), $value), Long_fromInt($digit));
                if (Long_lt($value, Long_ZERO)) {
                    if (var$6 == $s.$length() && Long_eq($value, new Long(0, 2147483648)) && $negative)
                        return new Long(0, 2147483648);
                    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(12)).$append($s).$toString()));
                }
                $index = var$6;
            }
            if ($negative)
                $value = Long_neg($value);
            return $value;
        }
        $rt_throw(jl_NumberFormatException__init_0($rt_s(13)));
    }
    $rt_throw(jl_NumberFormatException__init_0(jl_StringBuilder__init_().$append($rt_s(14)).$append1($radix).$toString()));
}
function jl_Long_parseLong0($s) {
    jl_Long_$callClinit();
    return jl_Long_parseLong($s, 10);
}
function jl_Long_numberOfLeadingZeros($i) {
    var $n, var$3, var$4;
    jl_Long_$callClinit();
    if (Long_eq($i, Long_ZERO))
        return 64;
    $n = 0;
    var$3 = Long_shru($i, 32);
    if (Long_ne(var$3, Long_ZERO))
        $n = 32;
    else
        var$3 = $i;
    var$4 = Long_shru(var$3, 16);
    if (Long_eq(var$4, Long_ZERO))
        var$4 = var$3;
    else
        $n = $n | 16;
    var$3 = Long_shru(var$4, 8);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = var$4;
    else
        $n = $n | 8;
    var$4 = Long_shru(var$3, 4);
    if (Long_eq(var$4, Long_ZERO))
        var$4 = var$3;
    else
        $n = $n | 4;
    var$3 = Long_shru(var$4, 2);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = var$4;
    else
        $n = $n | 2;
    if (Long_ne(Long_shru(var$3, 1), Long_ZERO))
        $n = $n | 1;
    return (64 - $n | 0) - 1 | 0;
}
function jl_Long_signum($i) {
    jl_Long_$callClinit();
    return Long_or(Long_shr($i, 63), Long_shru(Long_neg($i), 63)).lo;
}
function jl_Long_divideUnsigned(var$1, var$2) {
    return Long_udiv(var$1, var$2);
}
function jl_Long_remainderUnsigned(var$1, var$2) {
    return Long_urem(var$1, var$2);
}
function jl_Long__clinit_() {
    jl_Long_TYPE = $rt_cls($rt_longcls());
}
function jur_SequenceSet$IntHash() {
    var a = this; jl_Object.call(a);
    a.$table = null;
    a.$values7 = null;
    a.$mask = 0;
    a.$size4 = 0;
}
function jur_SequenceSet$IntHash__init_(var_0) {
    var var_1 = new jur_SequenceSet$IntHash();
    jur_SequenceSet$IntHash__init_0(var_1, var_0);
    return var_1;
}
function jur_SequenceSet$IntHash__init_0($this, $size) {
    jl_Object__init_0($this);
    while ($size >= $this.$mask) {
        $this.$mask = $this.$mask << 1 | 1;
    }
    $this.$mask = $this.$mask << 1 | 1;
    $this.$table = $rt_createIntArray($this.$mask + 1 | 0);
    $this.$values7 = $rt_createIntArray($this.$mask + 1 | 0);
    $this.$size4 = $size;
}
function jur_SequenceSet$IntHash_put($this, $key, $value) {
    var $i, $hashCode, var$5;
    $i = 0;
    $hashCode = $key & $this.$mask;
    while ($this.$table.data[$hashCode] && $this.$table.data[$hashCode] != $key) {
        var$5 = $i + 1 | 0;
        $i = var$5 & $this.$mask;
        var$5 = $hashCode + $i | 0;
        $hashCode = var$5 & $this.$mask;
    }
    $this.$table.data[$hashCode] = $key;
    $this.$values7.data[$hashCode] = $value;
}
function jur_SequenceSet$IntHash_get($this, $key) {
    var $hashCode, $i, $storedKey, var$5;
    $hashCode = $key & $this.$mask;
    $i = 0;
    while (true) {
        $storedKey = $this.$table.data[$hashCode];
        if (!$storedKey)
            break;
        if ($storedKey == $key)
            return $this.$values7.data[$hashCode];
        var$5 = $i + 1 | 0;
        $i = var$5 & $this.$mask;
        var$5 = $hashCode + $i | 0;
        $hashCode = var$5 & $this.$mask;
    }
    return $this.$size4;
}
function oktts_FXAATest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$model4 = null;
    a.$$frameBuffer = null;
    a.$$fxaa = null;
    a.$$screenQuad5 = null;
}
function oktts_FXAATest$testMain$1__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktts_FXAATest$testMain$1();
    oktts_FXAATest$testMain$1__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktts_FXAATest$testMain$1_invoke(var$0) {
    oktts_FXAATest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktts_FXAATest$testMain$1_invoke0($this) {
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_CubeModel_update($this.$$model4);
    oktt_SimpleFrameBuffer_render($this.$$frameBuffer, oktts_FXAATest$testMain$1$1__init_($this));
    oktsp_FXAA_render($this.$$fxaa, $this.$$screenQuad5, oktt_SimpleFrameBuffer_getTexture($this.$$frameBuffer, 0), null);
}
function oktts_FXAATest$testMain$1__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$$model4 = var$1;
    var$0.$$frameBuffer = var$2;
    var$0.$$fxaa = var$3;
    var$0.$$screenQuad5 = var$4;
    kji_Lambda__init_0(var$0, 0);
}
function jl_ArithmeticException() {
    jl_RuntimeException.call(this);
}
function jl_ArithmeticException__init_() {
    var var_0 = new jl_ArithmeticException();
    jl_ArithmeticException__init_0(var_0);
    return var_0;
}
function jl_ArithmeticException__init_1(var_0) {
    var var_1 = new jl_ArithmeticException();
    jl_ArithmeticException__init_2(var_1, var_0);
    return var_1;
}
function jl_ArithmeticException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function jl_ArithmeticException__init_2($this, $message) {
    jl_RuntimeException__init_2($this, $message);
}
function oooi_CollideTrimeshPlane$1() {
    jl_Object.call(this);
    this.$this$0104 = null;
}
function oooi_CollideTrimeshPlane$1__init_(var_0) {
    var var_1 = new oooi_CollideTrimeshPlane$1();
    oooi_CollideTrimeshPlane$1__init_0(var_1, var_0);
    return var_1;
}
function oooi_CollideTrimeshPlane$1__init_0($this, $this$0) {
    $this.$this$0104 = $this$0;
    jl_Object__init_0($this);
}
function oooi_CollideTrimeshPlane$1_compare($this, $o1, $o2) {
    return jl_Float_compare($o2.$f0.data[3], $o1.$f0.data[3]);
}
function oooi_DxConvex$CollideSphereConvex() {
    jl_Object.call(this);
}
function oooi_DxConvex$CollideSphereConvex__init_() {
    var var_0 = new oooi_DxConvex$CollideSphereConvex();
    oooi_DxConvex$CollideSphereConvex__init_0(var_0);
    return var_0;
}
function oooi_DxConvex$CollideSphereConvex__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxConvex$CollideSphereConvex_dCollideSphereConvex($this, $sphere, $convex, $flags, $contacts, $skip) {
    var $closestdist, $planeV, $offsetpos, $out, $temp, $pPolyV, $pPolyPos, $closestplane, $sphereinside, $contact, $i, var$17, var$18, var$19, $planeD, $dist, var$22, var$23;
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $closestdist = Infinity;
    $planeV = oom_DVector3__init_();
    $offsetpos = oom_DVector3__init_();
    $out = oom_DVector3__init_();
    $temp = oom_DVector3__init_();
    $pPolyV = oooi_DxConvex_access$300($convex);
    $pPolyPos = 0;
    $closestplane = (-1);
    $sphereinside = 1;
    $contact = ooo_DContactGeomBuffer_get($contacts, 0);
    oom_DVector3_eqDiff($offsetpos, $sphere.$final_posr().$pos(), $convex.$final_posr().$pos());
    $i = 0;
    while (true) {
        if ($i >= oooi_DxConvex_access$400($convex)) {
            if (!$sphereinside)
                return 0;
            var$17 = $contact.$normal;
            var$18 = $convex.$final_posr().$R();
            var$19 = oooi_DxConvex_access$500($convex).data[$closestplane];
            ooo_OdeMath_dMultiply0_331(var$17, var$18, var$19);
            oom_DVector3_set($contact.$pos0, $sphere.$final_posr().$pos());
            $contact.$depth = $closestdist + $sphere.$getRadius();
            $contact.$g1 = $sphere;
            $contact.$g2 = $convex;
            $contact.$side1 = (-1);
            $contact.$side2 = (-1);
            return 1;
        }
        ooo_OdeMath_dMultiply0_331($planeV, $convex.$final_posr().$R(), oooi_DxConvex_access$500($convex).data[$i]);
        $planeD = oooi_DxConvex_access$600($convex).data[$i];
        $dist = oom_DVector3_dot($planeV, $offsetpos) - $planeD;
        if ($dist > 0.0) {
            if ($dist < $sphere.$getRadius()) {
                if (oooi_DxConvex_access$700($sphere.$final_posr().$pos(), $pPolyV, $pPolyPos, $planeV, $convex, $out))
                    break;
                oom_DVector3_eqDiff($temp, $sphere.$final_posr().$pos(), $out);
                $dist = oom_DVector3_lengthSquared($temp);
                if ($dist < $sphere.$getRadius() * $sphere.$getRadius()) {
                    var$22 = oooi_Common_dSqrt($dist);
                    oom_DVector3_scale(oom_DVector3_set($contact.$normal, $temp), 1.0 / var$22);
                    var$17 = $contact.$pos0;
                    var$18 = $sphere.$final_posr().$pos();
                    var$19 = $contact.$normal;
                    var$23 =  -$sphere.$getRadius();
                    oom_DVector3_eqSum0(var$17, var$18, var$19, var$23);
                    $contact.$depth = $sphere.$getRadius() - var$22;
                    $contact.$g1 = $sphere;
                    $contact.$g2 = $convex;
                    $contact.$side1 = (-1);
                    $contact.$side2 = (-1);
                    return 1;
                }
            }
            $sphereinside = 0;
        }
        if ($sphereinside && $closestdist > oooi_Common_dFabs($dist)) {
            $closestdist = oooi_Common_dFabs($dist);
            $closestplane = $i;
        }
        $pPolyPos = $pPolyPos + ($pPolyV.data[$pPolyPos] + 1 | 0) | 0;
        $i = $i + 1 | 0;
    }
    oom_DVector3_set($contact.$normal, $planeV);
    var$17 = $contact.$pos0;
    var$18 = $sphere.$final_posr().$pos();
    var$19 = $contact.$normal;
    var$22 =  -$sphere.$getRadius();
    oom_DVector3_eqSum0(var$17, var$18, var$19, var$22);
    $contact.$depth = $sphere.$getRadius() - $dist;
    $contact.$g1 = $sphere;
    $contact.$g2 = $convex;
    $contact.$side1 = (-1);
    $contact.$side2 = (-1);
    return 1;
}
function oooi_DxConvex$CollideSphereConvex_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideSphereConvex($o1, $o2, $flags, $contacts, 1);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$0105 = null;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaLetterOrDigit$1();
    jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0($this, $this$0) {
    $this.$this$0105 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains($this, $ch) {
    return jl_Character_isLetterOrDigit($ch);
}
function jur_CharClass$18() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$bs = null;
    a.$this$0106 = null;
}
function jur_CharClass$18__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$18();
    jur_CharClass$18__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$18__init_0($this, $this$0, var$2) {
    $this.$this$0106 = $this$0;
    $this.$val$bs = var$2;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$18_contains($this, $ch) {
    return $this.$alt0 ^ $this.$val$bs.$get17($ch);
}
function jur_CharClass$18_toString($this) {
    var $temp, $i;
    $temp = jl_StringBuilder__init_();
    $i = $this.$val$bs.$nextSetBit(0);
    while ($i >= 0) {
        $temp.$append13(jl_Character_toChars($i));
        $temp.$append12(124);
        $i = $this.$val$bs.$nextSetBit($i + 1 | 0);
    }
    if ($temp.$length() > 0)
        $temp.$deleteCharAt($temp.$length() - 1 | 0);
    return $temp.$toString();
}
function jur_PossessiveGroupQuantifierSet() {
    jur_GroupQuantifierSet.call(this);
}
function jur_PossessiveGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveGroupQuantifierSet();
    jur_PossessiveGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PossessiveGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $stringIndex_0;
    while (true) {
        $stringIndex_0 = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($stringIndex_0 <= 0)
            break;
        $stringIndex = $stringIndex_0;
    }
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
}
function jur_CharClass$13() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz = null;
    a.$this$0107 = null;
}
function jur_CharClass$13__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$13();
    jur_CharClass$13__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$13__init_0($this, $this$0, var$2) {
    $this.$this$0107 = $this$0;
    $this.$val$clazz = var$2;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$13_contains($this, $ch) {
    return $this.$val$clazz.$contains0($ch);
}
function jur_CharClass$12() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz0 = null;
    a.$this$0108 = null;
}
function jur_CharClass$12__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$12();
    jur_CharClass$12__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$12__init_0($this, $this$0, var$2) {
    $this.$this$0108 = $this$0;
    $this.$val$clazz0 = var$2;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$12_contains($this, $ch) {
    return $this.$val$clazz0.$contains0($ch) ? 0 : 1;
}
function jur_CharClass$11() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt = 0;
    a.$val$nb = null;
    a.$val$clazz1 = null;
    a.$this$0109 = null;
}
function jur_CharClass$11__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$11();
    jur_CharClass$11__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$11__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$0109 = $this$0;
    $this.$val$curAlt = var$2;
    $this.$val$nb = var$3;
    $this.$val$clazz1 = var$4;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$11_contains($this, $ch) {
    return !($this.$val$curAlt ^ $this.$val$nb.$contains0($ch)) && !$this.$val$clazz1.$contains0($ch) ? 0 : 1;
}
function jur_CharClass$10() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt0 = 0;
    a.$val$nb0 = null;
    a.$val$clazz2 = null;
    a.$this$0110 = null;
}
function jur_CharClass$10__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$10();
    jur_CharClass$10__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$10__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$0110 = $this$0;
    $this.$val$curAlt0 = var$2;
    $this.$val$nb0 = var$3;
    $this.$val$clazz2 = var$4;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$10_contains($this, $ch) {
    return !($this.$val$curAlt0 ^ $this.$val$nb0.$contains0($ch)) && !$this.$val$clazz2.$contains0($ch) ? 1 : 0;
}
function jur_CharClass$17() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt1 = 0;
    a.$val$nb1 = null;
    a.$val$clazz3 = null;
    a.$this$0111 = null;
}
function jur_CharClass$17__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$17();
    jur_CharClass$17__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$17__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$0111 = $this$0;
    $this.$val$curAlt1 = var$2;
    $this.$val$nb1 = var$3;
    $this.$val$clazz3 = var$4;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$17_contains($this, $ch) {
    return $this.$val$curAlt1 ^ $this.$val$nb1.$contains0($ch) && $this.$val$clazz3.$contains0($ch) ? 1 : 0;
}
function oktgg_GLTFScene$read$1() {
    kji_Lambda.call(this);
    this.$this$0112 = null;
}
function oktgg_GLTFScene$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFScene$read$1();
    oktgg_GLTFScene$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFScene$read$1_invoke(var$0, var$1) {
    oktgg_GLTFScene$read$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFScene$read$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    oktgg_GLTFScene_setName($this.$this$0112, $it);
}
function oktgg_GLTFScene$read$1__init_0(var$0, var$1) {
    var$0.$this$0112 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jur_CharClass$16() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt2 = 0;
    a.$val$nb2 = null;
    a.$val$clazz4 = null;
    a.$this$0113 = null;
}
function jur_CharClass$16__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$16();
    jur_CharClass$16__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$16__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$0113 = $this$0;
    $this.$val$curAlt2 = var$2;
    $this.$val$nb2 = var$3;
    $this.$val$clazz4 = var$4;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$16_contains($this, $ch) {
    return $this.$val$curAlt2 ^ $this.$val$nb2.$contains0($ch) && $this.$val$clazz4.$contains0($ch) ? 0 : 1;
}
function oktm_IVec() {
}
function jur_CharClass$15() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz5 = null;
    a.$val$curAlt3 = 0;
    a.$this$0114 = null;
}
function jur_CharClass$15__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$15();
    jur_CharClass$15__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$15__init_0($this, $this$0, var$2, var$3) {
    $this.$this$0114 = $this$0;
    $this.$val$clazz5 = var$2;
    $this.$val$curAlt3 = var$3;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$15_contains($this, $ch) {
    return $this.$val$clazz5.$contains0($ch) && $this.$val$curAlt3 ^ $this.$this$0114.$bits.$get17($ch) ? 1 : 0;
}
function jur_CharClass$14() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz6 = null;
    a.$val$curAlt4 = 0;
    a.$this$0115 = null;
}
function jur_CharClass$14__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$14();
    jur_CharClass$14__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$14__init_0($this, $this$0, var$2, var$3) {
    $this.$this$0115 = $this$0;
    $this.$val$clazz6 = var$2;
    $this.$val$curAlt4 = var$3;
    jur_AbstractCharClass__init_0($this);
}
function jur_CharClass$14_contains($this, $ch) {
    return $this.$val$clazz6.$contains0($ch) && $this.$val$curAlt4 ^ $this.$this$0115.$bits.$get17($ch) ? 0 : 1;
}
function jl_StringBuilder() {
    jl_AbstractStringBuilder.call(this);
}
function jl_StringBuilder__init_0(var_0) {
    var var_1 = new jl_StringBuilder();
    jl_StringBuilder__init_1(var_1, var_0);
    return var_1;
}
function jl_StringBuilder__init_() {
    var var_0 = new jl_StringBuilder();
    jl_StringBuilder__init_2(var_0);
    return var_0;
}
function jl_StringBuilder__init_1($this, $capacity) {
    jl_AbstractStringBuilder__init_2($this, $capacity);
}
function jl_StringBuilder__init_2($this) {
    jl_AbstractStringBuilder__init_1($this);
}
function jl_StringBuilder_append($this, $string) {
    jl_AbstractStringBuilder_append($this, $string);
    return $this;
}
function jl_StringBuilder_append0($this, $value) {
    jl_AbstractStringBuilder_append0($this, $value);
    return $this;
}
function jl_StringBuilder_append1($this, $value) {
    jl_AbstractStringBuilder_append2($this, $value);
    return $this;
}
function jl_StringBuilder_append2($this, $value) {
    jl_AbstractStringBuilder_append3($this, $value);
    return $this;
}
function jl_StringBuilder_append3($this, $c) {
    jl_AbstractStringBuilder_append4($this, $c);
    return $this;
}
function jl_StringBuilder_append4($this, $chars, $offset, $len) {
    jl_AbstractStringBuilder_append8($this, $chars, $offset, $len);
    return $this;
}
function jl_StringBuilder_append5($this, $chars) {
    jl_AbstractStringBuilder_append9($this, $chars);
    return $this;
}
function jl_StringBuilder_append6($this, $s, $start, $end) {
    jl_AbstractStringBuilder_append6($this, $s, $start, $end);
    return $this;
}
function jl_StringBuilder_append7($this, $s) {
    jl_AbstractStringBuilder_append7($this, $s);
    return $this;
}
function jl_StringBuilder_append8($this, $obj) {
    jl_AbstractStringBuilder_append5($this, $obj);
    return $this;
}
function jl_StringBuilder_insert($this, $target, $value) {
    jl_AbstractStringBuilder_insert1($this, $target, $value);
    return $this;
}
function jl_StringBuilder_insert0($this, $target, $value) {
    jl_AbstractStringBuilder_insert2($this, $target, $value);
    return $this;
}
function jl_StringBuilder_insert1($this, $index, $s, $start, $end) {
    jl_AbstractStringBuilder_insert5($this, $index, $s, $start, $end);
    return $this;
}
function jl_StringBuilder_insert2($this, $index, $chars, $offset, $len) {
    jl_AbstractStringBuilder_insert6($this, $index, $chars, $offset, $len);
    return $this;
}
function jl_StringBuilder_insert3($this, $index, $obj) {
    jl_AbstractStringBuilder_insert4($this, $index, $obj);
    return $this;
}
function jl_StringBuilder_insert4($this, $index, $c) {
    jl_AbstractStringBuilder_insert3($this, $index, $c);
    return $this;
}
function jl_StringBuilder_delete($this, $start, $end) {
    jl_AbstractStringBuilder_delete($this, $start, $end);
    return $this;
}
function jl_StringBuilder_deleteCharAt($this, $index) {
    jl_AbstractStringBuilder_deleteCharAt($this, $index);
    return $this;
}
function jl_StringBuilder_insert5($this, $index, $string) {
    jl_AbstractStringBuilder_insert($this, $index, $string);
    return $this;
}
function jl_StringBuilder_setLength($this, var$1) {
    jl_AbstractStringBuilder_setLength($this, var$1);
}
function jl_StringBuilder_getChars($this, var$1, var$2, var$3, var$4) {
    jl_AbstractStringBuilder_getChars($this, var$1, var$2, var$3, var$4);
}
function jl_StringBuilder_insert6($this, var$1, var$2, var$3, var$4) {
    return $this.$insert11(var$1, var$2, var$3, var$4);
}
function jl_StringBuilder_append9($this, var$1, var$2, var$3) {
    return $this.$append20(var$1, var$2, var$3);
}
function jl_StringBuilder_insert7($this, var$1, var$2, var$3, var$4) {
    return $this.$insert12(var$1, var$2, var$3, var$4);
}
function jl_StringBuilder_append10($this, var$1, var$2, var$3) {
    return $this.$append21(var$1, var$2, var$3);
}
function jl_StringBuilder_charAt($this, var$1) {
    return jl_AbstractStringBuilder_charAt($this, var$1);
}
function jl_StringBuilder_length($this) {
    return jl_AbstractStringBuilder_length($this);
}
function jl_StringBuilder_toString($this) {
    return jl_AbstractStringBuilder_toString($this);
}
function jl_StringBuilder_ensureCapacity($this, var$1) {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
}
function jl_StringBuilder_insert8($this, var$1, var$2) {
    return $this.$insert13(var$1, var$2);
}
function jl_StringBuilder_insert9($this, var$1, var$2) {
    return $this.$insert14(var$1, var$2);
}
function jl_StringBuilder_insert10($this, var$1, var$2) {
    return $this.$insert15(var$1, var$2);
}
function jl_StringBuilder_insert11($this, var$1, var$2) {
    return $this.$insert16(var$1, var$2);
}
function jl_StringBuilder_insert12($this, var$1, var$2) {
    return $this.$insert17(var$1, var$2);
}
function jl_StringBuilder_append11($this, var$1) {
    return $this.$append12(var$1);
}
function jl_StringBuilder_append12($this, var$1) {
    return $this.$append15(var$1);
}
function oooi_Objects_H$DxPosR() {
    var a = this; jl_Object.call(a);
    a.$pos2 = null;
    a.$R0 = null;
}
function oooi_Objects_H$DxPosR__init_() {
    var var_0 = new oooi_Objects_H$DxPosR();
    oooi_Objects_H$DxPosR__init_0(var_0);
    return var_0;
}
function oooi_Objects_H$DxPosR__init_0($this) {
    jl_Object__init_0($this);
    $this.$pos2 = oom_DVector3__init_();
    $this.$R0 = oom_DMatrix3__init_1();
}
function oooi_Objects_H$DxPosR_R($this) {
    return $this.$R0;
}
function oooi_Objects_H$DxPosR_Rw($this) {
    return $this.$R0;
}
function oooi_Objects_H$DxPosR_pos($this) {
    return $this.$pos2;
}
function oktgg_GLTFScene$read$3() {
    kji_Lambda.call(this);
    this.$this$035 = null;
}
function oktgg_GLTFScene$read$3__init_(var_0) {
    var var_1 = new oktgg_GLTFScene$read$3();
    oktgg_GLTFScene$read$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFScene$read$3_invoke(var$0, var$1) {
    oktgg_GLTFScene$read$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFScene$read$3_invoke0($this, $$this$array) {
    var $sceneNodes;
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $sceneNodes = oktgg_GLTFScene_getScene($this.$this$035).$getNodes0();
    $$this$array.$ints1(oktgg_GLTFScene$read$3$1__init_($this, $sceneNodes));
}
function oktgg_GLTFScene$read$3__init_0(var$0, var$1) {
    var$0.$this$035 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oooi_DxSpace$3$1() {
    var a = this; jl_Object.call(a);
    a.$current = null;
    a.$this$1 = null;
}
function oooi_DxSpace$3$1__init_(var_0) {
    var var_1 = new oooi_DxSpace$3$1();
    oooi_DxSpace$3$1__init_0(var_1, var_0);
    return var_1;
}
function oooi_DxSpace$3$1__init_0($this, $this$1) {
    $this.$this$1 = $this$1;
    jl_Object__init_0($this);
    $this.$current = $this.$this$1.$this$042.$_first;
}
function oooi_DxSpace$3$1_hasNext($this) {
    return $this.$current === null ? 0 : 1;
}
function oooi_DxSpace$3$1_next($this) {
    var $g;
    $g = $this.$current;
    $this.$current = oooi_DxGeom_getNext($this.$current);
    return $g;
}
function oooi_DxSpace$3$1_next0($this) {
    return $this.$next7();
}
function oooig_GimRadixSort$GIM_RSORT_TOKEN() {
    var a = this; jl_Object.call(a);
    a.$m_key = Long_ZERO;
    a.$m_value = 0;
}
function oooig_GimRadixSort$GIM_RSORT_TOKEN__init_() {
    var var_0 = new oooig_GimRadixSort$GIM_RSORT_TOKEN();
    oooig_GimRadixSort$GIM_RSORT_TOKEN__init_0(var_0);
    return var_0;
}
function oooig_GimRadixSort$GIM_RSORT_TOKEN__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxConvex$ConvexConvexSATOutput() {
    var a = this; jl_Object.call(a);
    a.$min_depth = 0.0;
    a.$depth_type = 0;
    a.$dist = null;
    a.$e1a = null;
    a.$e1b = null;
    a.$e2a = null;
    a.$e2b = null;
}
function oooi_DxConvex$ConvexConvexSATOutput__init_() {
    var var_0 = new oooi_DxConvex$ConvexConvexSATOutput();
    oooi_DxConvex$ConvexConvexSATOutput__init_0(var_0);
    return var_0;
}
function oooi_DxConvex$ConvexConvexSATOutput__init_1(var_0) {
    var var_1 = new oooi_DxConvex$ConvexConvexSATOutput();
    oooi_DxConvex$ConvexConvexSATOutput__init_2(var_1, var_0);
    return var_1;
}
function oooi_DxConvex$ConvexConvexSATOutput__init_0($this) {
    jl_Object__init_0($this);
    $this.$dist = oom_DVector3__init_();
    $this.$e1a = oom_DVector3__init_();
    $this.$e1b = oom_DVector3__init_();
    $this.$e2a = oom_DVector3__init_();
    $this.$e2b = oom_DVector3__init_();
}
function oooi_DxConvex$ConvexConvexSATOutput__init_2($this, $x0) {
    oooi_DxConvex$ConvexConvexSATOutput__init_0($this);
}
function oktt_FrameBufferTest() {
    jl_Object.call(this);
}
function oktt_FrameBufferTest__init_() {
    var var_0 = new oktt_FrameBufferTest();
    oktt_FrameBufferTest__init_0(var_0);
    return var_0;
}
function oktt_FrameBufferTest_getName($this) {
    return $rt_s(977);
}
function oktt_FrameBufferTest_testMain($this) {
    var $screenQuad, $model, $frameBuffer, var$4;
    $screenQuad = oktm_ScreenQuad$TextureRenderer__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    $model = oktt_CubeModel__init_(null, 1, null);
    $frameBuffer = new oktt_FrameBuffer;
    okt_APP_$callClinit();
    oktt_FrameBuffer__init_($frameBuffer, okt_APP_getWidth(okt_APP_INSTANCE), okt_APP_getHeight(okt_APP_INSTANCE));
    var$4 = oktt_FrameBuffer_getAttachments($frameBuffer);
    oktt_Attachments_$callClinit();
    var$4.$add1(oktt_Attachments_color$default(oktt_Attachments_INSTANCE, 0, 0, 0, 0, 0, 0, 63, null));
    oktt_FrameBuffer_getAttachments($frameBuffer).$add1(oktt_Attachments_depthRenderBuffer$default(oktt_Attachments_INSTANCE, 0, 0, 3, null));
    oktt_FrameBuffer_buildAttachments($frameBuffer);
    oktt_FrameBuffer_checkErrors($frameBuffer);
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktt_FrameBufferTest$testMain$1__init_($model, $frameBuffer, $screenQuad), 1, null);
}
function oktt_FrameBufferTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktt_TvmGL$vertexArrays$1() {
    kji_Lambda.call(this);
}
var oktt_TvmGL$vertexArrays$1_INSTANCE = null;
function oktt_TvmGL$vertexArrays$1_$callClinit() {
    oktt_TvmGL$vertexArrays$1_$callClinit = $rt_eraseClinit(oktt_TvmGL$vertexArrays$1);
    oktt_TvmGL$vertexArrays$1__clinit_();
}
function oktt_TvmGL$vertexArrays$1__init_() {
    var var_0 = new oktt_TvmGL$vertexArrays$1();
    oktt_TvmGL$vertexArrays$1__init_0(var_0);
    return var_0;
}
function oktt_TvmGL$vertexArrays$1_invoke(var$0, var$1) {
    return oktt_TvmGL$vertexArrays$1_invoke0(var$0, var$1);
}
function oktt_TvmGL$vertexArrays$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    return oktt_TvmGL$VertexArrayWrap__init_($it);
}
function oktt_TvmGL$vertexArrays$1__init_0(var$0) {
    oktt_TvmGL$vertexArrays$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktt_TvmGL$vertexArrays$1__clinit_() {
    oktt_TvmGL$vertexArrays$1_INSTANCE = oktt_TvmGL$vertexArrays$1__init_();
}
function oktg_Armature() {
    var a = this; jl_Object.call(a);
    a.$name25 = null;
    a.$node1 = null;
    a.$inverseBoneMatrices = null;
    a.$boneMatrices = null;
    a.$previousBoneMatrices = null;
    a.$boneNames = null;
    a.$bones = null;
}
function oktg_Armature__init_() {
    var var_0 = new oktg_Armature();
    oktg_Armature__init_0(var_0);
    return var_0;
}
function oktg_Armature_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name25 = $_set___;
}
function oktg_Armature_setNode($this, $_set___) {
    $this.$node1 = $_set___;
}
function oktg_Armature_getInverseBoneMatrices($this) {
    return $this.$inverseBoneMatrices;
}
function oktg_Armature_setInverseBoneMatrices($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$inverseBoneMatrices = $_set___;
}
function oktg_Armature_getBoneMatrices($this) {
    return $this.$boneMatrices;
}
function oktg_Armature_setBoneMatrices($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$boneMatrices = $_set___;
}
function oktg_Armature_getPreviousBoneMatrices($this) {
    return $this.$previousBoneMatrices;
}
function oktg_Armature_setPreviousBoneMatrices($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$previousBoneMatrices = $_set___;
}
function oktg_Armature_getBoneNames($this) {
    return $this.$boneNames;
}
function oktg_Armature_setBoneNames($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$boneNames = $_set___;
}
function oktg_Armature_getBones($this) {
    return $this.$bones;
}
function oktg_Armature_setBones($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$bones = $_set___;
}
function oktg_Armature__init_0($this) {
    var var$1, var$2, var$3;
    jl_Object__init_0($this);
    $this.$name25 = $rt_s(6);
    var$1 = $rt_createArray(oktm_IMat4, 0);
    var$2 = 0;
    while (var$2 < 0) {
        var$3 = var$1.data;
        oktm_IMat4_$callClinit();
        var$3[var$2] = oktm_IMat4$Companion_getBuild(oktm_IMat4_Companion).$invoke6();
        var$2 = var$2 + 1 | 0;
    }
    $this.$inverseBoneMatrices = var$1;
    var$1 = $rt_createArray(oktm_IMat4, 0);
    var$2 = 0;
    while (var$2 < 0) {
        var$3 = var$1.data;
        oktm_IMat4_$callClinit();
        var$3[var$2] = oktm_IMat4$Companion_getBuild(oktm_IMat4_Companion).$invoke6();
        var$2 = var$2 + 1 | 0;
    }
    $this.$boneMatrices = var$1;
    oktg_IArmature_$callClinit();
    $this.$previousBoneMatrices = oktg_IArmature$Companion_getPreviousBoneMatricesCap(oktg_IArmature_Companion);
    var$1 = $rt_createArray(jl_String, 0);
    var$2 = 0;
    while (var$2 < 0) {
        var$1.data[var$2] = $rt_s(6);
        var$2 = var$2 + 1 | 0;
    }
    $this.$boneNames = var$1;
    var$1 = $rt_createArray(oktgn_ITransformNode, 0);
    var$2 = 0;
    while (var$2 < 0) {
        var$3 = var$1.data;
        oktgn_ITransformNode_$callClinit();
        var$3[var$2] = oktgn_ITransformNode$Companion_getCap(oktgn_ITransformNode_Companion);
        var$2 = var$2 + 1 | 0;
    }
    $this.$bones = var$1;
}
function oktg_Armature_initBones($this, $bonesNum, $saveLinks) {
    oktg_IArmature$DefaultImpls_initBones($this, $bonesNum, $saveLinks);
}
function oktg_Armature_updatePreviousTransform($this) {
    oktg_IArmature$DefaultImpls_updatePreviousTransform($this);
}
function oktg_Armature_update($this, $delta) {
    oktg_IArmature$DefaultImpls_update($this, $delta);
}
function jl_LinkageError() {
    jl_Error.call(this);
}
function jl_LinkageError__init_() {
    var var_0 = new jl_LinkageError();
    jl_LinkageError__init_0(var_0);
    return var_0;
}
function jl_LinkageError__init_1(var_0) {
    var var_1 = new jl_LinkageError();
    jl_LinkageError__init_2(var_1, var_0);
    return var_1;
}
function jl_LinkageError__init_0($this) {
    jl_Error__init_0($this);
}
function jl_LinkageError__init_2($this, $message) {
    jl_Error__init_4($this, $message);
}
function jl_IncompatibleClassChangeError() {
    jl_LinkageError.call(this);
}
function jl_IncompatibleClassChangeError__init_() {
    var var_0 = new jl_IncompatibleClassChangeError();
    jl_IncompatibleClassChangeError__init_0(var_0);
    return var_0;
}
function jl_IncompatibleClassChangeError__init_1(var_0) {
    var var_1 = new jl_IncompatibleClassChangeError();
    jl_IncompatibleClassChangeError__init_2(var_1, var_0);
    return var_1;
}
function jl_IncompatibleClassChangeError__init_0($this) {
    jl_LinkageError__init_0($this);
}
function jl_IncompatibleClassChangeError__init_2($this, $message) {
    jl_LinkageError__init_2($this, $message);
}
function jur_AbstractCharClass$LazyASCII() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyASCII__init_() {
    var var_0 = new jur_AbstractCharClass$LazyASCII();
    jur_AbstractCharClass$LazyASCII__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyASCII__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyASCII_computeValue($this) {
    return jur_CharClass__init_().$add0(0, 127);
}
function oktt_TvmSound$1$1() {
    var a = this; jl_Object.call(a);
    a.$this$0116 = null;
    a.$$instance = null;
}
function oktt_TvmSound$1$1__init_(var_0, var_1) {
    var var_2 = new oktt_TvmSound$1$1();
    oktt_TvmSound$1$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktt_TvmSound$1$1_handleEvent($this, $it) {
    oktu_Pool_free(oktt_TvmSound_getPool($this.$this$0116.$this$074), $this.$$instance);
}
function oktt_TvmSound$1$1__init_0(var$0, var$1, var$2) {
    var$0.$this$0116 = var$1;
    var$0.$$instance = var$2;
    jl_Object__init_0(var$0);
}
function oktt_TvmSound$1$1_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmSound$1$1_handleEvent(var$0, var$1);
}
function ooo_DSphere() {
}
function oooi_DxSphere() {
    oooi_DxGeom.call(this);
    this.$_radius0 = 0.0;
}
function oooi_DxSphere__init_(var_0, var_1) {
    var var_2 = new oooi_DxSphere();
    oooi_DxSphere__init_0(var_2, var_0, var_1);
    return var_2;
}
function oooi_DxSphere__init_0($this, $space, $radius) {
    var var$3;
    oooi_DxGeom__init_0($this, $space, 1);
    var$3 = $rt_compare($radius, 0.0);
    oooi_Common_dAASSERT0(var$3 < 0 ? 0 : 1);
    $this.$type0 = 0;
    $this.$_radius0 = $radius;
    $this.$updateZeroSizedFlag(var$3 ? 0 : 1);
}
function oooi_DxSphere_computeAABB($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = $this.$_aabb;
    var$2 = $this.$final_posr().$pos().$get01() - $this.$_radius0;
    var$3 = $this.$final_posr().$pos().$get01() + $this.$_radius0;
    var$4 = $this.$final_posr().$pos().$get10() - $this.$_radius0;
    var$5 = $this.$final_posr().$pos().$get10() + $this.$_radius0;
    var$6 = $this.$final_posr().$pos().$get20() - $this.$_radius0;
    var$7 = $this.$final_posr().$pos().$get20() + $this.$_radius0;
    var$1.$set6(var$2, var$3, var$4, var$5, var$6, var$7);
}
function oooi_DxSphere_dCreateSphere($space, $radius) {
    return oooi_DxSphere__init_($space, $radius);
}
function oooi_DxSphere_dGeomSphereGetRadius($this) {
    return $this.$_radius0;
}
function oooi_DxSphere_getRadius($this) {
    return $this.$dGeomSphereGetRadius();
}
function oooi_DxSphere_access$000($x0) {
    return $x0.$_radius0;
}
function jur_Quantifier() {
    var a = this; jur_SpecialToken.call(a);
    a.$min4 = 0;
    a.$max4 = 0;
}
function jur_Quantifier__init_(var_0, var_1) {
    var var_2 = new jur_Quantifier();
    jur_Quantifier__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Quantifier__init_0($this, $min, $max) {
    jur_SpecialToken__init_0($this);
    $this.$min4 = $min;
    $this.$max4 = $max;
}
function jur_Quantifier_min($this) {
    return $this.$min4;
}
function jur_Quantifier_max($this) {
    return $this.$max4;
}
function jur_Quantifier_toString($this) {
    return jl_StringBuilder__init_().$append($rt_s(397)).$append1($this.$min4).$append($rt_s(396)).$append($this.$max4 == 2147483647 ? $rt_s(6) : jl_Integer__init_($this.$max4).$toString()).$append($rt_s(399)).$toString();
}
function kr_IntProgression$Companion() {
    jl_Object.call(this);
}
function kr_IntProgression$Companion__init_() {
    var var_0 = new kr_IntProgression$Companion();
    kr_IntProgression$Companion__init_0(var_0);
    return var_0;
}
function kr_IntProgression$Companion__init_1(var_0) {
    var var_1 = new kr_IntProgression$Companion();
    kr_IntProgression$Companion__init_2(var_1, var_0);
    return var_1;
}
function kr_IntProgression$Companion_fromClosedRange($this, $rangeStart, $rangeEnd, $step) {
    return kr_IntProgression__init_($rangeStart, $rangeEnd, $step);
}
function kr_IntProgression$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function kr_IntProgression$Companion__init_2($this, $$constructor_marker) {
    kr_IntProgression$Companion__init_0($this);
}
function oktgg_GLTFSampler() {
    var a = this; jl_Object.call(a);
    a.$gltf6 = null;
    a.$elementIndex5 = 0;
    a.$minFilter0 = 0;
    a.$magFilter0 = 0;
    a.$wrapS = 0;
    a.$wrapT = 0;
    a.$name26 = null;
}
function oktgg_GLTFSampler__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktgg_GLTFSampler();
    oktgg_GLTFSampler__init_1(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function oktgg_GLTFSampler__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new oktgg_GLTFSampler();
    oktgg_GLTFSampler__init_2(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function oktgg_GLTFSampler_read($this, $json) {
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $json.$int($rt_s(978), oktgg_GLTFSampler$read$1__init_($this));
    $json.$int($rt_s(979), oktgg_GLTFSampler$read$2__init_($this));
    $json.$int($rt_s(980), oktgg_GLTFSampler$read$3__init_($this));
    $json.$int($rt_s(981), oktgg_GLTFSampler$read$4__init_($this));
}
function oktgg_GLTFSampler_getMinFilter($this) {
    return $this.$minFilter0;
}
function oktgg_GLTFSampler_setMinFilter($this, $_set___) {
    $this.$minFilter0 = $_set___;
}
function oktgg_GLTFSampler_getMagFilter($this) {
    return $this.$magFilter0;
}
function oktgg_GLTFSampler_setMagFilter($this, $_set___) {
    $this.$magFilter0 = $_set___;
}
function oktgg_GLTFSampler_getWrapS($this) {
    return $this.$wrapS;
}
function oktgg_GLTFSampler_setWrapS($this, $_set___) {
    $this.$wrapS = $_set___;
}
function oktgg_GLTFSampler_getWrapT($this) {
    return $this.$wrapT;
}
function oktgg_GLTFSampler_setWrapT($this, $_set___) {
    $this.$wrapT = $_set___;
}
function oktgg_GLTFSampler__init_1($this, $gltf, $elementIndex, $minFilter, $magFilter, $wrapS, $wrapT, $name) {
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    jl_Object__init_0($this);
    $this.$gltf6 = $gltf;
    $this.$elementIndex5 = $elementIndex;
    $this.$minFilter0 = $minFilter;
    $this.$magFilter0 = $magFilter;
    $this.$wrapS = $wrapS;
    $this.$wrapT = $wrapT;
    $this.$name26 = $name;
}
function oktgg_GLTFSampler__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9) {
    if (var$8 & 4)
        var$3 = 9729;
    if (var$8 & 8)
        var$4 = 9729;
    if (var$8 & 16)
        var$5 = 10497;
    if (var$8 & 32)
        var$6 = 10497;
    if (var$8 & 64)
        var$7 = $rt_s(6);
    oktgg_GLTFSampler__init_1(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7);
}
function oooic_Ctime() {
    oooic_Ctype.call(this);
}
function oooic_Ctime__init_() {
    var var_0 = new oooic_Ctime();
    oooic_Ctime__init_0(var_0);
    return var_0;
}
function oooic_Ctime__init_0($this) {
    oooic_Ctype__init_0($this);
}
function oooic_Cstring() {
    oooic_Ctime.call(this);
}
function oooic_Cstring__init_() {
    var var_0 = new oooic_Cstring();
    oooic_Cstring__init_0(var_0);
    return var_0;
}
function oooic_Cstring__init_0($this) {
    oooic_Ctime__init_0($this);
}
function oooic_Cstring_memcpy($to, $i, $from, $j, $count) {
    jl_System_arraycopy($from, $j, $to, $i, $count);
}
function oooic_Cstdlib() {
    oooic_Cstring.call(this);
}
var oooic_Cstdlib_RGEN = null;
function oooic_Cstdlib_$callClinit() {
    oooic_Cstdlib_$callClinit = $rt_eraseClinit(oooic_Cstdlib);
    oooic_Cstdlib__clinit_();
}
function oooic_Cstdlib__init_() {
    var var_0 = new oooic_Cstdlib();
    oooic_Cstdlib__init_0(var_0);
    return var_0;
}
function oooic_Cstdlib__init_0($this) {
    oooic_Cstdlib_$callClinit();
    oooic_Cstring__init_0($this);
}
function oooic_Cstdlib__clinit_() {
    oooic_Cstdlib_RGEN = oooic_Cstdlib$Random31__init_(null);
}
function oooic_Cstdio() {
    oooic_Cstdlib.call(this);
}
var oooic_Cstdio_stdout = null;
var oooic_Cstdio_stderr = null;
function oooic_Cstdio_$callClinit() {
    oooic_Cstdio_$callClinit = $rt_eraseClinit(oooic_Cstdio);
    oooic_Cstdio__clinit_();
}
function oooic_Cstdio__init_() {
    var var_0 = new oooic_Cstdio();
    oooic_Cstdio__init_0(var_0);
    return var_0;
}
function oooic_Cstdio__init_0($this) {
    oooic_Cstdio_$callClinit();
    oooic_Cstdlib__init_0($this);
}
function oooic_Cstdio__clinit_() {
    oooic_Cstdio_stdout = oooic_FILE__init_(jl_System_out());
    oooic_Cstdio_stderr = oooic_FILE__init_(jl_System_err());
}
function oooic_Cstdarg() {
    oooic_Cstdio.call(this);
}
function oooic_Cstdarg__init_() {
    var var_0 = new oooic_Cstdarg();
    oooic_Cstdarg__init_0(var_0);
    return var_0;
}
function oooic_Cstdarg__init_0($this) {
    oooic_Cstdio__init_0($this);
}
function oktgg_GLTFAnimationSampler() {
    var a = this; jl_Object.call(a);
    a.$input = 0;
    a.$interpolation1 = null;
    a.$output = 0;
}
function oktgg_GLTFAnimationSampler__init_(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFAnimationSampler();
    oktgg_GLTFAnimationSampler__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTFAnimationSampler__init_1(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgg_GLTFAnimationSampler();
    oktgg_GLTFAnimationSampler__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktgg_GLTFAnimationSampler__init_3() {
    var var_0 = new oktgg_GLTFAnimationSampler();
    oktgg_GLTFAnimationSampler__init_4(var_0);
    return var_0;
}
function oktgg_GLTFAnimationSampler_read($this, $json) {
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $this.$input = $json.$int0($rt_s(374));
    $json.$string($rt_s(982), oktgg_GLTFAnimationSampler$read$1__init_($this));
    $this.$output = $json.$int0($rt_s(983));
}
function oktgg_GLTFAnimationSampler_getInput($this) {
    return $this.$input;
}
function oktgg_GLTFAnimationSampler_getInterpolation($this) {
    return $this.$interpolation1;
}
function oktgg_GLTFAnimationSampler_setInterpolation($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$interpolation1 = $_set___;
}
function oktgg_GLTFAnimationSampler_getOutput($this) {
    return $this.$output;
}
function oktgg_GLTFAnimationSampler__init_0($this, $input, $interpolation, $output) {
    kji_Intrinsics_checkParameterIsNotNull($interpolation, $rt_s(982));
    jl_Object__init_0($this);
    $this.$input = $input;
    $this.$interpolation1 = $interpolation;
    $this.$output = $output;
}
function oktgg_GLTFAnimationSampler__init_2(var$0, var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 1)
        var$1 = (-1);
    if (var$4 & 2)
        var$2 = $rt_s(984);
    if (var$4 & 4)
        var$3 = (-1);
    oktgg_GLTFAnimationSampler__init_0(var$0, var$1, var$2, var$3);
}
function oktgg_GLTFAnimationSampler__init_4(var$0) {
    oktgg_GLTFAnimationSampler__init_2(var$0, 0, null, 0, 7, null);
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData() {
    var a = this; jl_Object.call(a);
    a.$m_mCylinderRot = null;
    a.$m_qCylinderRot = null;
    a.$m_qInvCylinderRot = null;
    a.$m_vCylinderPos = null;
    a.$m_vCylinderAxis = null;
    a.$m_fCylinderRadius = 0.0;
    a.$m_fCylinderSize = 0.0;
    a.$m_avCylinderNormals = null;
    a.$m_qTrimeshRot = null;
    a.$m_mTrimeshRot = null;
    a.$m_vTrimeshPos = null;
    a.$m_vBestPoint = null;
    a.$m_fBestDepth0 = 0.0;
    a.$m_fBestCenter = 0.0;
    a.$m_fBestrt = 0.0;
    a.$m_iBestAxis0 = 0;
    a.$m_vContactNormal = null;
    a.$m_vNormal = null;
    a.$m_vE00 = null;
    a.$m_vE10 = null;
    a.$m_vE20 = null;
    a.$m_iFlags0 = 0;
    a.$m_nContacts = 0;
    a.$m_gLocalContacts = null;
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__init_(var_0, var_1) {
    var var_2 = new oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData();
    oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__init_0(var_2, var_0, var_1);
    return var_2;
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__init_0($this, $flags, $skip) {
    jl_Object__init_0($this);
    $this.$m_mCylinderRot = oom_DMatrix3__init_1();
    $this.$m_qCylinderRot = oom_DQuaternion__init_();
    $this.$m_qInvCylinderRot = oom_DQuaternion__init_();
    $this.$m_vCylinderPos = oom_DVector3__init_();
    $this.$m_vCylinderAxis = oom_DVector3__init_();
    $this.$m_avCylinderNormals = $rt_createArray(oom_DVector3, 8);
    $this.$m_mTrimeshRot = oom_DMatrix3__init_1();
    $this.$m_vTrimeshPos = oom_DVector3__init_();
    $this.$m_vBestPoint = oom_DVector3__init_();
    $this.$m_vContactNormal = oom_DVector3__init_();
    $this.$m_vNormal = oom_DVector3__init_();
    $this.$m_vE00 = oom_DVector3__init_();
    $this.$m_vE10 = oom_DVector3__init_();
    $this.$m_vE20 = oom_DVector3__init_();
    $this.$m_iFlags0 = $flags;
    $this.$m_nContacts = 0;
    $this.$m_gLocalContacts = null;
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__IsNearContacts($c1, $c2) {
    var $bPosNear, $bSameDir, $vDiff;
    $bPosNear = 0;
    $bSameDir = 0;
    $vDiff = oom_DVector3__init_();
    oom_DVector3_eqDiff($vDiff, $c1.$vPos, $c2.$vPos);
    if (jl_Math_abs(oom_DVector3_get0($vDiff)) < 1.0E-4 && jl_Math_abs(oom_DVector3_get1($vDiff)) < 1.0E-4 && jl_Math_abs(oom_DVector3_get2($vDiff)) < 1.0E-4)
        $bPosNear = 1;
    oom_DVector3_eqDiff($vDiff, $c1.$vNormal, $c2.$vNormal);
    if (jl_Math_abs(oom_DVector3_get0($vDiff)) < 1.0E-4 && jl_Math_abs(oom_DVector3_get1($vDiff)) < 1.0E-4 && jl_Math_abs(oom_DVector3_get2($vDiff)) < 1.0E-4)
        $bSameDir = 1;
    return $bPosNear && $bSameDir ? 1 : 0;
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__IsBetter($c1, $c2) {
    return $c1.$fDepth <= $c2.$fDepth ? 0 : 1;
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__OptimizeLocalContacts($this) {
    var $nContacts, $i, $i_0, $j;
    $nContacts = $this.$m_nContacts;
    $i = 0;
    while ($i < ($nContacts - 1 | 0)) {
        $i_0 = $i + 1 | 0;
        $j = $i_0;
        while ($j < $nContacts) {
            if (oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__IsNearContacts($this.$m_gLocalContacts.data[$i], $this.$m_gLocalContacts.data[$j])) {
                if (!oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__IsBetter($this.$m_gLocalContacts.data[$j], $this.$m_gLocalContacts.data[$i]))
                    $this.$m_gLocalContacts.data[$j].$nFlags = 0;
                else
                    $this.$m_gLocalContacts.data[$i].$nFlags = 0;
            }
            $j = $j + 1 | 0;
        }
        $i = $i_0;
    }
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__ProcessLocalContacts($this, $contacts, $Cylinder, $Trimesh) {
    var $nFinalContact, var$5, var$6;
    if ($this.$m_nContacts > 1 && !($this.$m_iFlags0 & (-2147483648)))
        $this.$_OptimizeLocalContacts();
    $nFinalContact = 0;
    var$5 = 0;
    while (var$5 < $this.$m_nContacts) {
        if (1 == $this.$m_gLocalContacts.data[var$5].$nFlags) {
            var$6 = ooo_DContactGeomBuffer_getSafe($contacts, $this.$m_iFlags0, $nFinalContact);
            var$6.$depth = $this.$m_gLocalContacts.data[var$5].$fDepth;
            oom_DVector3_set(var$6.$normal, $this.$m_gLocalContacts.data[var$5].$vNormal);
            oom_DVector3_set(var$6.$pos0, $this.$m_gLocalContacts.data[var$5].$vPos);
            var$6.$g1 = $Cylinder;
            var$6.$g2 = $Trimesh;
            var$6.$side1 = (-1);
            var$6.$side2 = $this.$m_gLocalContacts.data[var$5].$triIndex;
            oom_DVector3_scale(var$6.$normal, (-1.0));
            $nFinalContact = $nFinalContact + 1 | 0;
        }
        var$5 = var$5 + 1 | 0;
    }
    return $nFinalContact;
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__cldTestAxis($this, $v0, $v1, $v2, $vAxis, $iAxis, $bNoFlip) {
    var $fL, $fdot1, $frc, var$10, var$11, var$12, $vV0, $vV1, $vV2, $afv, var$17, $fMin, $fMax, $i, $fCenter, $fTriangleRadius, $fDepth;
    $fL = oom_DVector3_length($vAxis);
    if ($fL < 1.0E-5)
        return 1;
    oom_DVector3_scale($vAxis, 1.0 / $fL);
    $fdot1 = oom_DVector3_dot($this.$m_vCylinderAxis, $vAxis);
    if (jl_Math_abs($fdot1) > 1.0)
        $frc = jl_Math_abs($this.$m_fCylinderSize * 0.5);
    else {
        var$10 = jl_Math_abs($this.$m_fCylinderSize * 0.5 * $fdot1);
        var$11 = $this.$m_fCylinderRadius;
        var$12 = 1.0 - $fdot1 * $fdot1;
        $frc = var$10 + var$11 * jl_Math_sqrt(var$12);
    }
    $vV0 = oom_DVector3__init_();
    oom_DVector3_eqDiff($vV0, $v0, $this.$m_vCylinderPos);
    $vV1 = oom_DVector3__init_();
    oom_DVector3_eqDiff($vV1, $v1, $this.$m_vCylinderPos);
    $vV2 = oom_DVector3__init_();
    oom_DVector3_eqDiff($vV2, $v2, $this.$m_vCylinderPos);
    $afv = $rt_createDoubleArray(3);
    var$17 = $afv.data;
    var$17[0] = oom_DVector3_dot($vV0, $vAxis);
    var$17[1] = oom_DVector3_dot($vV1, $vAxis);
    var$17[2] = oom_DVector3_dot($vV2, $vAxis);
    $fMin = Infinity;
    $fMax = (-Infinity);
    $i = 0;
    while ($i < 3) {
        if (var$17[$i] < $fMin)
            $fMin = var$17[$i];
        if (var$17[$i] > $fMax)
            $fMax = var$17[$i];
        $i = $i + 1 | 0;
    }
    $fCenter = ($fMin + $fMax) * 0.5;
    $fTriangleRadius = ($fMax - $fMin) * 0.5;
    var$10 = jl_Math_abs($fCenter);
    var$12 = $frc + $fTriangleRadius;
    if (var$10 > var$12)
        return 0;
    $fDepth =  -(jl_Math_abs($fCenter) - var$12);
    if ($fDepth < $this.$m_fBestDepth0) {
        $this.$m_fBestDepth0 = $fDepth;
        $this.$m_fBestCenter = $fCenter;
        $this.$m_fBestrt = $frc;
        oooi_DxCollisionUtil_dVector3Copy($vAxis, $this.$m_vContactNormal);
        $this.$m_iBestAxis0 = $iAxis;
        if ($fCenter < 0.0 && !$bNoFlip) {
            oooi_DxCollisionUtil_dVector3Inv($this.$m_vContactNormal);
            $this.$m_fBestCenter =  -$fCenter;
        }
    }
    return 1;
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__cldTestCircleToEdgeAxis($this, $v0, $v1, $v2, $vCenterPoint, $vCylinderAxis1, $vVx0, $vVx1, $iAxis) {
    var $vkl, $vol, $fdot2, $vTemp, $fdot1, $vpnt, $vTangent, $vAxis;
    $vkl = oom_DVector3__init_();
    oooi_DxCollisionUtil_dVector3Subtract($vVx1, $vVx0, $vkl);
    oom_DVector3_normalize($vkl);
    $vol = oom_DVector3__init_();
    oooi_DxCollisionUtil_dVector3Copy($vVx0, $vol);
    $fdot2 = oom_DVector3_dot($vkl, $vCylinderAxis1);
    if (jl_Math_abs($fdot2) < 1.0E-5)
        return 1;
    $vTemp = oom_DVector3__init_();
    oooi_DxCollisionUtil_dVector3Subtract($vCenterPoint, $vol, $vTemp);
    $fdot1 = oom_DVector3_dot($vTemp, $vCylinderAxis1);
    $vpnt = oom_DVector3__init_();
    oom_DVector3_eqSum0($vpnt, $vol, $vkl, $fdot1 / $fdot2);
    $vTangent = oom_DVector3__init_();
    oooi_DxCollisionUtil_dVector3Subtract($vCenterPoint, $vpnt, $vTemp);
    oooi_DxCollisionUtil_dVector3Cross($vTemp, $vCylinderAxis1, $vTangent);
    $vAxis = oom_DVector3__init_();
    oooi_DxCollisionUtil_dVector3Cross($vTangent, $vkl, $vAxis);
    return $this.$_cldTestAxis($v0, $v1, $v2, $vAxis, $iAxis, 0);
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__CalculateAxis($v1, $v2, $v3, $r) {
    var $t1, $t2;
    $t1 = oom_DVector3__init_();
    $t2 = oom_DVector3__init_();
    oom_DVector3_eqDiff($t1, $v1, $v2);
    ooo_OdeMath_dCalcVectorCross3($t2, $t1, $v3);
    ooo_OdeMath_dCalcVectorCross3($r, $t2, $v3);
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__cldTestSeparatingAxes($this, $v0, $v1, $v2) {
    var $vCp0, $vAxis, $vccATop, $vccABottom;
    oooi_DxCollisionUtil_dVector3Subtract($v1, $v0, $this.$m_vE00);
    oooi_DxCollisionUtil_dVector3Subtract($v0, $v2, $this.$m_vE20);
    $vCp0 = oom_DVector3__init_();
    oom_DVector3_eqSum0($vCp0, $this.$m_vCylinderPos, $this.$m_vCylinderAxis, $this.$m_fCylinderSize * 0.5);
    $this.$m_iBestAxis0 = 0;
    $vAxis = oom_DVector3__init_();
    oom_DVector3_scale(oom_DVector3_set($vAxis, $this.$m_vNormal), (-1.0));
    if (!$this.$_cldTestAxis($v0, $v1, $v2, $vAxis, 1, 1))
        return 0;
    oooi_DxCollisionUtil_dVector3Cross($this.$m_vCylinderAxis, $this.$m_vE00, $vAxis);
    if (!$this.$_cldTestAxis($v0, $v1, $v2, $vAxis, 2, 0))
        return 0;
    oooi_DxCollisionUtil_dVector3Cross($this.$m_vCylinderAxis, $this.$m_vE10, $vAxis);
    if (!$this.$_cldTestAxis($v0, $v1, $v2, $vAxis, 3, 0))
        return 0;
    oooi_DxCollisionUtil_dVector3Cross($this.$m_vCylinderAxis, $this.$m_vE20, $vAxis);
    if (!$this.$_cldTestAxis($v0, $v1, $v2, $vAxis, 4, 0))
        return 0;
    oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__CalculateAxis($v0, $vCp0, $this.$m_vCylinderAxis, $vAxis);
    if (!$this.$_cldTestAxis($v0, $v1, $v2, $vAxis, 11, 0))
        return 0;
    oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__CalculateAxis($v1, $vCp0, $this.$m_vCylinderAxis, $vAxis);
    if (!$this.$_cldTestAxis($v0, $v1, $v2, $vAxis, 12, 0))
        return 0;
    oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__CalculateAxis($v2, $vCp0, $this.$m_vCylinderAxis, $vAxis);
    if (!$this.$_cldTestAxis($v0, $v1, $v2, $vAxis, 13, 0))
        return 0;
    oooi_DxCollisionUtil_dVector3Copy($this.$m_vCylinderAxis, $vAxis);
    if (!$this.$_cldTestAxis($v0, $v1, $v2, $vAxis, 14, 0))
        return 0;
    $vccATop = oom_DVector3__init_();
    oom_DVector3_eqSum0($vccATop, $this.$m_vCylinderPos, $this.$m_vCylinderAxis, $this.$m_fCylinderSize * 0.5);
    $vccABottom = oom_DVector3__init_();
    oom_DVector3_eqSum0($vccABottom, $this.$m_vCylinderPos, $this.$m_vCylinderAxis,  -$this.$m_fCylinderSize * 0.5);
    if (!$this.$_cldTestCircleToEdgeAxis($v0, $v1, $v2, $vccATop, $this.$m_vCylinderAxis, $v0, $v1, 15))
        return 0;
    if (!$this.$_cldTestCircleToEdgeAxis($v0, $v1, $v2, $vccATop, $this.$m_vCylinderAxis, $v1, $v2, 16))
        return 0;
    if (!$this.$_cldTestCircleToEdgeAxis($v0, $v1, $v2, $vccATop, $this.$m_vCylinderAxis, $v0, $v2, 17))
        return 0;
    if (!$this.$_cldTestCircleToEdgeAxis($v0, $v1, $v2, $vccABottom, $this.$m_vCylinderAxis, $v0, $v1, 18))
        return 0;
    if (!$this.$_cldTestCircleToEdgeAxis($v0, $v1, $v2, $vccABottom, $this.$m_vCylinderAxis, $v1, $v2, 19))
        return 0;
    if ($this.$_cldTestCircleToEdgeAxis($v0, $v1, $v2, $vccABottom, $this.$m_vCylinderAxis, $v0, $v2, 20))
        return 1;
    return 0;
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__cldClipCylinderEdgeToTriangle($this, $v0, $v1, $v2) {
    var $fTemp, $vN2, var$6, $vCposTrans, $vCEdgePoint0, $vCEdgePoint1, $plPlane, $vPlaneNormal, $vTemp, $fRestDepth0, $fRestDepth1, $fDepth0, $fDepth1;
    $fTemp = oom_DVector3_dot($this.$m_vCylinderAxis, $this.$m_vContactNormal);
    $vN2 = oom_DVector3__init_();
    oom_DVector3_eqSum0($vN2, $this.$m_vContactNormal, $this.$m_vCylinderAxis,  -$fTemp);
    var$6 = oom_DVector3_length($vN2);
    if (var$6 < 1.0E-5)
        return 0;
    oom_DVector3_scale($vN2, 1.0 / var$6);
    $vCposTrans = oom_DVector3__init_();
    oom_DVector3_eqSum0($vCposTrans, $this.$m_vCylinderPos, $vN2, $this.$m_fCylinderRadius);
    $vCEdgePoint0 = oom_DVector3__init_();
    oom_DVector3_eqSum0($vCEdgePoint0, $vCposTrans, $this.$m_vCylinderAxis, $this.$m_fCylinderSize * 0.5);
    $vCEdgePoint1 = oom_DVector3__init_();
    oom_DVector3_eqSum0($vCEdgePoint1, $vCposTrans, $this.$m_vCylinderAxis,  -$this.$m_fCylinderSize * 0.5);
    oom_DVector3_sub($vCEdgePoint0, $v0);
    oom_DVector3_sub($vCEdgePoint1, $v0);
    $plPlane = oom_DVector4__init_();
    $vPlaneNormal = oom_DVector3__init_();
    oom_DVector3_scale(oom_DVector3_set($vPlaneNormal, $this.$m_vNormal), (-1.0));
    oooi_DxCollisionUtil_dConstructPlane($vPlaneNormal, 0.0, $plPlane);
    if (!oooi_DxCollisionUtil_dClipEdgeToPlane($vCEdgePoint0, $vCEdgePoint1, $plPlane))
        return 0;
    oooi_DxCollisionUtil_dVector3Cross($this.$m_vNormal, $this.$m_vE00, $vPlaneNormal);
    oooi_DxCollisionUtil_dConstructPlane($vPlaneNormal, 1.0E-5, $plPlane);
    if (!oooi_DxCollisionUtil_dClipEdgeToPlane($vCEdgePoint0, $vCEdgePoint1, $plPlane))
        return 0;
    oooi_DxCollisionUtil_dVector3Cross($this.$m_vNormal, $this.$m_vE10, $vPlaneNormal);
    var$6 = oom_DVector3_dot($this.$m_vE00, $vPlaneNormal) - 1.0E-5;
    oooi_DxCollisionUtil_dConstructPlane($vPlaneNormal,  -var$6, $plPlane);
    if (!oooi_DxCollisionUtil_dClipEdgeToPlane($vCEdgePoint0, $vCEdgePoint1, $plPlane))
        return 0;
    oooi_DxCollisionUtil_dVector3Cross($this.$m_vNormal, $this.$m_vE20, $vPlaneNormal);
    oooi_DxCollisionUtil_dConstructPlane($vPlaneNormal, 1.0E-5, $plPlane);
    if (!oooi_DxCollisionUtil_dClipEdgeToPlane($vCEdgePoint0, $vCEdgePoint1, $plPlane))
        return 0;
    oom_DVector3_add($vCEdgePoint0, $v0);
    oom_DVector3_add($vCEdgePoint1, $v0);
    $vTemp = oom_DVector3__init_();
    oooi_DxCollisionUtil_dVector3Subtract($vCEdgePoint0, $this.$m_vCylinderPos, $vTemp);
    $fRestDepth0 =  -oom_DVector3_dot($vTemp, $this.$m_vContactNormal) + $this.$m_fBestrt;
    oooi_DxCollisionUtil_dVector3Subtract($vCEdgePoint1, $this.$m_vCylinderPos, $vTemp);
    $fRestDepth1 =  -oom_DVector3_dot($vTemp, $this.$m_vContactNormal) + $this.$m_fBestrt;
    $fDepth0 = $this.$m_fBestDepth0 - $fRestDepth0;
    $fDepth1 = $this.$m_fBestDepth0 - $fRestDepth1;
    if ($fDepth0 < 0.0)
        $fDepth0 = 0.0;
    if ($fDepth1 < 0.0)
        $fDepth1 = 0.0;
    if ($this.$m_gLocalContacts.data[$this.$m_nContacts] === null)
        $this.$m_gLocalContacts.data[$this.$m_nContacts] = oooi_CollideCylinderTrimesh$sLocalContactData__init_(null);
    $this.$m_gLocalContacts.data[$this.$m_nContacts].$fDepth = $fDepth0;
    oooi_DxCollisionUtil_dVector3Copy($this.$m_vContactNormal, $this.$m_gLocalContacts.data[$this.$m_nContacts].$vNormal);
    oooi_DxCollisionUtil_dVector3Copy($vCEdgePoint0, $this.$m_gLocalContacts.data[$this.$m_nContacts].$vPos);
    $this.$m_gLocalContacts.data[$this.$m_nContacts].$nFlags = 1;
    $this.$m_nContacts = $this.$m_nContacts + 1 | 0;
    if ($this.$m_nContacts >= ($this.$m_iFlags0 & 65535))
        return 1;
    $this.$m_gLocalContacts.data[$this.$m_nContacts].$fDepth = $fDepth1;
    oooi_DxCollisionUtil_dVector3Copy($this.$m_vContactNormal, $this.$m_gLocalContacts.data[$this.$m_nContacts].$vNormal);
    oooi_DxCollisionUtil_dVector3Copy($vCEdgePoint1, $this.$m_gLocalContacts.data[$this.$m_nContacts].$vPos);
    $this.$m_gLocalContacts.data[$this.$m_nContacts].$nFlags = 1;
    $this.$m_nContacts = $this.$m_nContacts + 1 | 0;
    return 1;
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__cldClipCylinderToTriangle($this, $v0, $v1, $v2) {
    var $avPoints, var$5, $avTempArray1, $avTempArray2, $vCylinderCirclePos, $vCylinderCircleNormal_Rel, $vTemp, var$11, $iTmpCounter2, $plPlane, var$14, var$15, $vPoint, $ftmpdot, $fTempDepth;
    $avPoints = $rt_createArray(oom_DVector3, 3);
    var$5 = $avPoints.data;
    var$5[0] = oom_DVector3__init_();
    var$5[1] = oom_DVector3__init_();
    var$5[2] = oom_DVector3__init_();
    $avTempArray1 = oom_DVector3_newArray(12);
    $avTempArray2 = oom_DVector3_newArray(12);
    oooi_DxCollisionUtil_dVector3Copy($v0, var$5[0]);
    oooi_DxCollisionUtil_dVector3Copy($v1, var$5[1]);
    oooi_DxCollisionUtil_dVector3Copy($v2, var$5[2]);
    $vCylinderCirclePos = oom_DVector3__init_();
    $vCylinderCircleNormal_Rel = oom_DVector3__init_();
    oom_DVector3_setZero($vCylinderCircleNormal_Rel);
    if (oom_DVector3_dot($this.$m_vCylinderAxis, $this.$m_vContactNormal) > 0.0) {
        oom_DVector3_eqSum0($vCylinderCirclePos, $this.$m_vCylinderPos, $this.$m_vCylinderAxis, $this.$m_fCylinderSize * 0.5);
        oom_DVector3_set2($vCylinderCircleNormal_Rel, 2, (-1.0));
    } else {
        oom_DVector3_eqSum0($vCylinderCirclePos, $this.$m_vCylinderPos, $this.$m_vCylinderAxis,  -$this.$m_fCylinderSize * 0.5);
        oom_DVector3_set2($vCylinderCircleNormal_Rel, 2, 1.0);
    }
    $vTemp = oom_DVector3__init_();
    oooi_DxCollisionUtil_dQuatInv($this.$m_qCylinderRot, $this.$m_qInvCylinderRot);
    var$11 = 0;
    while (var$11 < 3) {
        oooi_DxCollisionUtil_dVector3Subtract(var$5[var$11], $vCylinderCirclePos, $vTemp);
        oooi_DxCollisionUtil_dQuatTransform($this.$m_qInvCylinderRot, $vTemp, var$5[var$11]);
        var$11 = var$11 + 1 | 0;
    }
    $iTmpCounter2 = 0;
    $plPlane = oom_DVector4__init_();
    oooi_DxCollisionUtil_dConstructPlane($vCylinderCircleNormal_Rel, 0.0, $plPlane);
    var$14 = oooi_DxCollisionUtil_dClipPolyToPlane($avPoints, 3, $avTempArray1, $plPlane);
    var$15 = 0;
    while (var$15 < 8) {
        oooi_DxCollisionUtil_dConstructPlane($this.$m_avCylinderNormals.data[var$15], $this.$m_fCylinderRadius, $plPlane);
        if (0 != (var$15 % 2 | 0))
            var$14 = oooi_DxCollisionUtil_dClipPolyToPlane($avTempArray2, $iTmpCounter2, $avTempArray1, $plPlane);
        else
            $iTmpCounter2 = oooi_DxCollisionUtil_dClipPolyToPlane($avTempArray1, var$14, $avTempArray2, $plPlane);
        oooi_Common_dIASSERT(var$14 >= 0 && var$14 <= 12 ? 1 : 0);
        oooi_Common_dIASSERT($iTmpCounter2 >= 0 && $iTmpCounter2 <= 12 ? 1 : 0);
        var$15 = var$15 + 1 | 0;
    }
    a: {
        $vPoint = oom_DVector3__init_();
        if (!(var$15 % 2 | 0)) {
            var$11 = 0;
            while (true) {
                if (var$11 >= var$14)
                    break a;
                var$5 = $avTempArray1.data;
                oooi_DxCollisionUtil_dQuatTransform($this.$m_qCylinderRot, var$5[var$11], $vPoint);
                oom_DVector3_add($vPoint, $vCylinderCirclePos);
                oooi_DxCollisionUtil_dVector3Subtract($vPoint, $this.$m_vCylinderPos, $vTemp);
                $ftmpdot = jl_Math_abs(oom_DVector3_dot($vTemp, $this.$m_vContactNormal));
                $fTempDepth = $this.$m_fBestrt - $ftmpdot;
                if ($fTempDepth > 0.0) {
                    $this.$m_gLocalContacts.data[$this.$m_nContacts].$fDepth = $fTempDepth;
                    oooi_DxCollisionUtil_dVector3Copy($this.$m_vContactNormal, $this.$m_gLocalContacts.data[$this.$m_nContacts].$vNormal);
                    oooi_DxCollisionUtil_dVector3Copy($vPoint, $this.$m_gLocalContacts.data[$this.$m_nContacts].$vPos);
                    $this.$m_gLocalContacts.data[$this.$m_nContacts].$nFlags = 1;
                    $this.$m_nContacts = $this.$m_nContacts + 1 | 0;
                    if ($this.$m_nContacts >= ($this.$m_iFlags0 & 65535))
                        break;
                }
                var$11 = var$11 + 1 | 0;
            }
            return;
        }
        var$11 = 0;
        while (true) {
            if (var$11 >= $iTmpCounter2)
                break a;
            var$5 = $avTempArray2.data;
            oooi_DxCollisionUtil_dQuatTransform($this.$m_qCylinderRot, var$5[var$11], $vPoint);
            oom_DVector3_add($vPoint, $vCylinderCirclePos);
            oooi_DxCollisionUtil_dVector3Subtract($vPoint, $this.$m_vCylinderPos, $vTemp);
            $ftmpdot = jl_Math_abs(oom_DVector3_dot($vTemp, $this.$m_vContactNormal));
            $fTempDepth = $this.$m_fBestrt - $ftmpdot;
            if ($fTempDepth > 0.0) {
                $this.$m_gLocalContacts.data[$this.$m_nContacts].$fDepth = $fTempDepth;
                oooi_DxCollisionUtil_dVector3Copy($this.$m_vContactNormal, $this.$m_gLocalContacts.data[$this.$m_nContacts].$vNormal);
                oooi_DxCollisionUtil_dVector3Copy($vPoint, $this.$m_gLocalContacts.data[$this.$m_nContacts].$vPos);
                $this.$m_gLocalContacts.data[$this.$m_nContacts].$nFlags = 1;
                $this.$m_nContacts = $this.$m_nContacts + 1 | 0;
                if ($this.$m_nContacts >= ($this.$m_iFlags0 & 65535))
                    return;
            }
            var$11 = var$11 + 1 | 0;
        }
    }
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData_TestOneTriangleVsCylinder($this, $v0, $v1, $v2, $bDoubleSided) {
    var $vTemp, $plDistance, $plTrianglePlane, $fDistanceCylinderCenterToPlane, var$9, $vPnt0, $vPnt1, $vPnt2, $fdot;
    oooi_DxCollisionUtil_dVector3Subtract($v2, $v1, $this.$m_vE10);
    $vTemp = oom_DVector3__init_();
    oooi_DxCollisionUtil_dVector3Subtract($v0, $v1, $vTemp);
    oooi_DxCollisionUtil_dVector3Cross($this.$m_vE10, $vTemp, $this.$m_vNormal);
    if (!ooo_OdeMath_dSafeNormalize3($this.$m_vNormal))
        return;
    $plDistance =  -$v0.$dot($this.$m_vNormal);
    $plTrianglePlane = oom_DVector4__init_();
    oooi_DxCollisionUtil_dConstructPlane($this.$m_vNormal, $plDistance, $plTrianglePlane);
    $fDistanceCylinderCenterToPlane = oooi_DxCollisionUtil_dPointPlaneDistance($this.$m_vCylinderPos, $plTrianglePlane);
    var$9 = $rt_compare($fDistanceCylinderCenterToPlane, 0.0);
    if (var$9 < 0 && !$bDoubleSided)
        return;
    $vPnt0 = oom_DVector3__init_();
    $vPnt1 = oom_DVector3__init_();
    $vPnt2 = oom_DVector3__init_();
    if (var$9 >= 0) {
        oooi_DxCollisionUtil_dVector3Copy($v0, $vPnt0);
        oooi_DxCollisionUtil_dVector3Copy($v1, $vPnt1);
        oooi_DxCollisionUtil_dVector3Copy($v2, $vPnt2);
    } else {
        oooi_DxCollisionUtil_dVector3Copy($v0, $vPnt0);
        oooi_DxCollisionUtil_dVector3Copy($v1, $vPnt2);
        oooi_DxCollisionUtil_dVector3Copy($v2, $vPnt1);
    }
    $this.$m_fBestDepth0 = Infinity;
    if (!$this.$_cldTestSeparatingAxes($vPnt0, $vPnt1, $vPnt2))
        return;
    if (!$this.$m_iBestAxis0) {
        oooi_Common_dIASSERT(0);
        return;
    }
    $fdot = oom_DVector3_dot($this.$m_vContactNormal, $this.$m_vCylinderAxis);
    if (jl_Math_abs($fdot) >= 0.9)
        $this.$_cldClipCylinderToTriangle($vPnt0, $vPnt1, $vPnt2);
    else if (!$this.$_cldClipCylinderEdgeToTriangle($vPnt0, $vPnt1, $vPnt2))
        return;
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__InitCylinderTrimeshData($this, $Cylinder, $Trimesh) {
    var $pRotCyc, $pPosCyc, $pRotTris, $pPosTris, $fAngle, $fAngleIncrement, $i;
    $pRotCyc = $Cylinder.$getRotation2();
    oom_DMatrix3_set($this.$m_mCylinderRot, $pRotCyc);
    $this.$m_qCylinderRot.$set51($Cylinder.$getQuaternion());
    $pPosCyc = $Cylinder.$getPosition2();
    oooi_DxCollisionUtil_dVector3Copy($pPosCyc, $this.$m_vCylinderPos);
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mCylinderRot, 2, $this.$m_vCylinderAxis);
    $this.$m_fCylinderRadius = $Cylinder.$getRadius();
    $this.$m_fCylinderSize = $Cylinder.$getLength();
    $pRotTris = $Trimesh.$getRotation2();
    oom_DMatrix3_set($this.$m_mTrimeshRot, $pRotTris);
    $this.$m_qTrimeshRot = $Trimesh.$getQuaternion();
    $pPosTris = $Trimesh.$getPosition2();
    oooi_DxCollisionUtil_dVector3Copy($pPosTris, $this.$m_vTrimeshPos);
    $fAngle = 0.39269908169872414;
    $fAngleIncrement = 0.7853981633974483;
    $i = 0;
    while ($i < 8) {
        $this.$m_avCylinderNormals.data[$i] = oom_DVector3__init_();
        oom_DVector3_set00($this.$m_avCylinderNormals.data[$i],  -jl_Math_cos($fAngle));
        oom_DVector3_set10($this.$m_avCylinderNormals.data[$i],  -jl_Math_sin($fAngle));
        oom_DVector3_set20($this.$m_avCylinderNormals.data[$i], 0.0);
        $fAngle = $fAngle + $fAngleIncrement;
        $i = $i + 1 | 0;
    }
    oom_DVector3_setZero($this.$m_vBestPoint);
    $this.$m_fBestCenter = 0.0;
}
function oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData_TestCollisionForSingleTriangle($this, $ctContacts0, $Triint, $dv, $bOutFinishSearching) {
    var var$5;
    var$5 = $dv.data;
    $this.$TestOneTriangleVsCylinder(var$5[0], var$5[1], var$5[2], 0);
    while ($ctContacts0 < $this.$m_nContacts) {
        $this.$m_gLocalContacts.data[$ctContacts0].$triIndex = $Triint;
        $ctContacts0 = $ctContacts0 + 1 | 0;
    }
    $bOutFinishSearching.$b = $this.$m_nContacts < ($this.$m_iFlags0 & 65535) ? 0 : 1;
    return $ctContacts0;
}
function oktg_Scene$objectSorter$1() {
    jl_Object.call(this);
}
var oktg_Scene$objectSorter$1_INSTANCE = null;
function oktg_Scene$objectSorter$1_$callClinit() {
    oktg_Scene$objectSorter$1_$callClinit = $rt_eraseClinit(oktg_Scene$objectSorter$1);
    oktg_Scene$objectSorter$1__clinit_();
}
function oktg_Scene$objectSorter$1__init_() {
    var var_0 = new oktg_Scene$objectSorter$1();
    oktg_Scene$objectSorter$1__init_0(var_0);
    return var_0;
}
function oktg_Scene$objectSorter$1_compare(var$0, var$1, var$2) {
    return oktg_Scene$objectSorter$1_compare0(var$0, var$1, var$2);
}
function oktg_Scene$objectSorter$1_compare0($this, $o1, $o2) {
    var $result, var$4, $$this$maxBy$iv, $iterator$iv, $maxElem$iv, $it, $maxValue$iv, $e$iv, $maxValue$iv_0, var$12, $mesh1Priority, $mesh2Priority, $dst, var$16;
    $result = 0;
    var$4 = $o1.$getNode();
    oktg_Scene_$callClinit();
    var$4.$getPosition4(oktg_Scene$Companion_getTmpV1(oktg_Scene_Companion), 0);
    $o2.$getNode().$getPosition4(oktg_Scene$Companion_getTmpV2(oktg_Scene_Companion), 0);
    $$this$maxBy$iv = $o1.$getMeshes0();
    $iterator$iv = $$this$maxBy$iv.$iterator();
    if (!$iterator$iv.$hasNext())
        $maxElem$iv = null;
    else {
        $maxElem$iv = $iterator$iv.$next();
        if ($iterator$iv.$hasNext()) {
            $it = $maxElem$iv;
            $maxValue$iv = $it.$getMaterial().$getTranslucentPriority();
            while (true) {
                $e$iv = $iterator$iv.$next();
                $it = $e$iv;
                $maxValue$iv_0 = $it.$getMaterial().$getTranslucentPriority();
                if ($maxValue$iv >= $maxValue$iv_0) {
                    $e$iv = $maxElem$iv;
                    $maxValue$iv_0 = $maxValue$iv;
                }
                if (!$iterator$iv.$hasNext())
                    break;
                $maxElem$iv = $e$iv;
                $maxValue$iv = $maxValue$iv_0;
            }
            $maxElem$iv = $e$iv;
        }
    }
    a: {
        var$12 = $maxElem$iv;
        if (var$12 !== null) {
            var$12 = var$12.$getMaterial();
            if (var$12 !== null) {
                $mesh1Priority = jl_Integer_valueOf(var$12.$getTranslucentPriority());
                break a;
            }
        }
        $mesh1Priority = null;
    }
    $$this$maxBy$iv = $o2.$getMeshes0();
    $iterator$iv = $$this$maxBy$iv.$iterator();
    if (!$iterator$iv.$hasNext())
        $maxElem$iv = null;
    else {
        $maxElem$iv = $iterator$iv.$next();
        if ($iterator$iv.$hasNext()) {
            $it = $maxElem$iv;
            $maxValue$iv = $it.$getMaterial().$getTranslucentPriority();
            while (true) {
                $e$iv = $iterator$iv.$next();
                $it = $e$iv;
                $maxValue$iv_0 = $it.$getMaterial().$getTranslucentPriority();
                if ($maxValue$iv >= $maxValue$iv_0) {
                    $e$iv = $maxElem$iv;
                    $maxValue$iv_0 = $maxValue$iv;
                }
                if (!$iterator$iv.$hasNext())
                    break;
                $maxElem$iv = $e$iv;
                $maxValue$iv = $maxValue$iv_0;
            }
            $maxElem$iv = $e$iv;
        }
    }
    b: {
        var$12 = $maxElem$iv;
        if (var$12 !== null) {
            var$12 = var$12.$getMaterial();
            if (var$12 !== null) {
                $mesh2Priority = jl_Integer_valueOf(var$12.$getTranslucentPriority());
                break b;
            }
        }
        $mesh2Priority = null;
    }
    if ($mesh1Priority !== null && $mesh2Priority !== null) {
        if (kji_Intrinsics_compare($mesh1Priority.$intValue(), $mesh2Priority.$intValue()) > 0)
            $result = 1;
        else if (kji_Intrinsics_compare($mesh1Priority.$intValue(), $mesh2Priority.$intValue()) < 0)
            $result = (-1);
        else {
            oktgc_ActiveCamera_$callClinit();
            $dst = (1000.0 * oktgn_ITransformNode$DefaultImpls_dst2$default(oktgc_ActiveCamera_INSTANCE, oktg_Scene$Companion_getTmpV1(oktg_Scene_Companion), 0, 2, null) | 0) - (1000.0 * oktgn_ITransformNode$DefaultImpls_dst2$default(oktgc_ActiveCamera_INSTANCE, oktg_Scene$Companion_getTmpV2(oktg_Scene_Companion), 0, 2, null) | 0) | 0;
            var$16 = $rt_compare($dst, 0.0);
            $result = var$16 < 0 ? (-1) : var$16 <= 0 ? 0 : 1;
        }
    }
    return $result;
}
function oktg_Scene$objectSorter$1__init_0(var$0) {
    oktg_Scene$objectSorter$1_$callClinit();
    jl_Object__init_0(var$0);
}
function oktg_Scene$objectSorter$1__clinit_() {
    oktg_Scene$objectSorter$1_INSTANCE = oktg_Scene$objectSorter$1__init_();
}
function oktf_IFS() {
}
function oktt_TvmFS() {
    jl_Object.call(this);
}
function oktt_TvmFS__init_() {
    var var_0 = new oktt_TvmFS();
    oktt_TvmFS__init_0(var_0);
    return var_0;
}
function oktt_TvmFS_file($this, $path, $location) {
    kji_Intrinsics_checkParameterIsNotNull($path, $rt_s(404));
    return oktt_TvmFile__init_($path);
}
function oktt_TvmFS__init_0($this) {
    jl_Object__init_0($this);
}
function oktt_TvmFS_internal($this, $path) {
    kji_Intrinsics_checkParameterIsNotNull($path, $rt_s(404));
    return oktf_IFS$DefaultImpls_internal($this, $path);
}
function kt_DelimitedRangesSequence$iterator$1() {
    var a = this; jl_Object.call(a);
    a.$nextState = 0;
    a.$currentStartIndex = 0;
    a.$nextSearchIndex = 0;
    a.$nextItem = null;
    a.$counter = 0;
    a.$this$0117 = null;
}
function kt_DelimitedRangesSequence$iterator$1__init_(var_0) {
    var var_1 = new kt_DelimitedRangesSequence$iterator$1();
    kt_DelimitedRangesSequence$iterator$1__init_0(var_1, var_0);
    return var_1;
}
function kt_DelimitedRangesSequence$iterator$1_calcNext($this) {
    var $match, $index, $length;
    if ($this.$nextSearchIndex < 0) {
        $this.$nextState = 0;
        $this.$nextItem = null;
    } else {
        a: {
            b: {
                if (kt_DelimitedRangesSequence_access$getLimit$p($this.$this$0117) > 0) {
                    $this.$counter = $this.$counter + 1 | 0;
                    if ($this.$counter >= kt_DelimitedRangesSequence_access$getLimit$p($this.$this$0117))
                        break b;
                }
                if ($this.$nextSearchIndex <= kt_DelimitedRangesSequence_access$getInput$p($this.$this$0117).$length()) {
                    $match = kt_DelimitedRangesSequence_access$getGetNextMatch$p($this.$this$0117).$invoke11(kt_DelimitedRangesSequence_access$getInput$p($this.$this$0117), jl_Integer_valueOf($this.$nextSearchIndex));
                    if ($match === null) {
                        $this.$nextItem = kr_IntRange__init_($this.$currentStartIndex, kt_StringsKt__StringsKt_getLastIndex(kt_DelimitedRangesSequence_access$getInput$p($this.$this$0117)));
                        $this.$nextSearchIndex = (-1);
                        break a;
                    }
                    $index = k_Pair_component1($match).$intValue();
                    $length = k_Pair_component2($match).$intValue();
                    $this.$nextItem = kr_RangesKt___RangesKt_until($this.$currentStartIndex, $index);
                    $this.$currentStartIndex = $index + $length | 0;
                    $this.$nextSearchIndex = $this.$currentStartIndex + ($length ? 0 : 1) | 0;
                    break a;
                }
            }
            $this.$nextItem = kr_IntRange__init_($this.$currentStartIndex, kt_StringsKt__StringsKt_getLastIndex(kt_DelimitedRangesSequence_access$getInput$p($this.$this$0117)));
            $this.$nextSearchIndex = (-1);
        }
        $this.$nextState = 1;
    }
}
function kt_DelimitedRangesSequence$iterator$1_next($this) {
    var $result;
    if ($this.$nextState == (-1))
        kt_DelimitedRangesSequence$iterator$1_calcNext($this);
    if (!$this.$nextState)
        $rt_throw(ju_NoSuchElementException__init_());
    $result = $this.$nextItem;
    if ($result === null)
        $rt_throw(k_TypeCastException__init_($rt_s(985)));
    $this.$nextItem = null;
    $this.$nextState = (-1);
    return $result;
}
function kt_DelimitedRangesSequence$iterator$1_next0(var$0) {
    return kt_DelimitedRangesSequence$iterator$1_next(var$0);
}
function kt_DelimitedRangesSequence$iterator$1_hasNext($this) {
    if ($this.$nextState == (-1))
        kt_DelimitedRangesSequence$iterator$1_calcNext($this);
    return $this.$nextState != 1 ? 0 : 1;
}
function kt_DelimitedRangesSequence$iterator$1__init_0($this, $$outer) {
    $this.$this$0117 = $$outer;
    jl_Object__init_0($this);
    $this.$nextState = (-1);
    $this.$currentStartIndex = kr_RangesKt___RangesKt_coerceIn(kt_DelimitedRangesSequence_access$getStartIndex$p($$outer), 0, kt_DelimitedRangesSequence_access$getInput$p($$outer).$length());
    $this.$nextSearchIndex = $this.$currentStartIndex;
}
function oooig_GimGeometry$vec3f() {
    jl_Object.call(this);
    this.$f = null;
}
function oooig_GimGeometry$vec3f__init_() {
    var var_0 = new oooig_GimGeometry$vec3f();
    oooig_GimGeometry$vec3f__init_0(var_0);
    return var_0;
}
function oooig_GimGeometry$vec3f__init_0($this) {
    jl_Object__init_0($this);
    $this.$f = $rt_createFloatArray(3);
}
function jur_ReluctantQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
}
function jur_ReluctantQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantQuantifierSet();
    jur_ReluctantQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_ReluctantQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    while (true) {
        var$4 = $this.$next0.$matches($stringIndex, $testString, $matchResult);
        if (var$4 >= 0)
            break;
        if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            $stringIndex = $stringIndex + var$4 | 0;
        }
        if (var$4 < 1)
            return (-1);
    }
    return var$4;
}
function oktt_TvmGL() {
    var a = this; jl_Object.call(a);
    a.$textures = null;
    a.$programs = null;
    a.$buffers = null;
    a.$vertexArrays = null;
    a.$frameBuffers = null;
    a.$renderBuffers = null;
    a.$shaders0 = null;
    a.$gl3 = null;
    a.$majVer = 0;
    a.$minVer = 0;
    a.$glslVer = 0;
}
function oktt_TvmGL__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktt_TvmGL();
    oktt_TvmGL__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktt_TvmGL__init_1(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktt_TvmGL();
    oktt_TvmGL__init_2(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktt_TvmGL_getMainFrameBufferWidth($this) {
    return $this.$gl3.drawingBufferWidth;
}
function oktt_TvmGL_getMainFrameBufferHeight($this) {
    return $this.$gl3.drawingBufferHeight;
}
function oktt_TvmGL_getMainFrameBufferHandle($this) {
    return 0;
}
function oktt_TvmGL_getGlesMajVer($this) {
    return oktt_TvmGL_getMajVer($this) + 1 | 0;
}
function oktt_TvmGL_isGLES($this) {
    return 1;
}
function oktt_TvmGL_initGL($this) {
    return;
}
function oktt_TvmGL_isExtensionSupported($this, $extension) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($extension, $rt_s(366));
    var$2 = otji_JS_unwrapStringArray($this.$gl3.getSupportedExtensions());
    return var$2 === null ? 0 : kc_ArraysKt___ArraysKt_contains(var$2, $extension);
}
function oktt_TvmGL_enableExtension($this, $extension) {
    kji_Intrinsics_checkParameterIsNotNull($extension, $rt_s(366));
    return $this.$gl3.getExtension($rt_ustr($extension)) === null ? 0 : 1;
}
function oktt_TvmGL_glCreateProgram($this) {
    return oktt_TvmGL$GLObjectArray_new($this.$programs, $this.$gl3.createProgram());
}
function oktt_TvmGL_glClear($this, $mask) {
    $this.$gl3.clear($mask);
}
function oktt_TvmGL_glClearColor($this, $red, $green, $blue, $alpha) {
    $this.$gl3.clearColor($red, $green, $blue, $alpha);
}
function oktt_TvmGL_glUseProgram($this, $program) {
    var var$2, var$3;
    var$2 = $this.$gl3;
    var$3 = oktt_TvmGL$GLObjectArray_gl($this.$programs, $program);
    var$2.useProgram(var$3);
}
function oktt_TvmGL_glCullFace($this, $mode) {
    $this.$gl3.cullFace($mode);
}
function oktt_TvmGL_glActiveTexture($this, $texture) {
    $this.$gl3.activeTexture($texture);
}
function oktt_TvmGL_glDeleteTexture($this, $texture) {
    var var$2, var$3;
    var$2 = $this.$gl3;
    var$3 = oktt_TvmGL$GLObjectArray_gl($this.$textures, $texture);
    var$2.deleteTexture(var$3);
}
function oktt_TvmGL_glDrawArrays($this, $mode, $first, $count) {
    $this.$gl3.drawArrays($mode, $first, $count);
}
function oktt_TvmGL_glEnable($this, $cap) {
    $this.$gl3.enable($cap);
}
function oktt_TvmGL_glDisable($this, $cap) {
    $this.$gl3.disable($cap);
}
function oktt_TvmGL_glLinkProgram($this, $program) {
    var var$2, var$3;
    var$2 = $this.$gl3;
    var$3 = oktt_TvmGL$GLObjectArray_gl($this.$programs, $program);
    var$2.linkProgram(var$3);
}
function oktt_TvmGL_glGenTexture($this) {
    return oktt_TvmGL$GLObjectArray_new($this.$textures, $this.$gl3.createTexture());
}
function oktt_TvmGL_glGetUniformLocation($this, $program, $name) {
    var $programDesc, $newId, $loc, var$6, var$7, $glLoc;
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    $programDesc = oktt_TvmGL$GLObjectArray_wrap($this.$programs, $program);
    if ($programDesc === null)
        $newId = (-1);
    else {
        $loc = oktt_TvmGL$ProgramWrap_getUniformLocationsMap($programDesc).$get0($name);
        if ($loc !== null)
            $newId = oktt_TvmGL$UniformLocationWrap_getId($loc);
        else {
            var$6 = $this.$gl3;
            var$7 = oktt_TvmGL$ProgramWrap_getGl($programDesc);
            $glLoc = var$6.getUniformLocation(var$7, $rt_ustr($name));
            if ($glLoc === null)
                $newId = (-1);
            else {
                $newId = oktt_TvmGL$ProgramWrap_getUniformLocations($programDesc).$size();
                var$6 = oktt_TvmGL$UniformLocationWrap__init_($newId, $glLoc);
                oktt_TvmGL$ProgramWrap_getUniformLocations($programDesc).$add1(var$6);
                oktt_TvmGL$ProgramWrap_getUniformLocationsMap($programDesc).$put3($name, var$6);
            }
        }
    }
    return $newId;
}
function oktt_TvmGL_glBindTexture($this, $target, $texture) {
    var var$3, var$4;
    var$3 = $this.$gl3;
    var$4 = oktt_TvmGL$GLObjectArray_gl($this.$textures, $texture);
    var$3.bindTexture($target, var$4);
}
function oktt_TvmGL_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
    var var$10, var$11;
    var$10 = $this.$gl3;
    var$11 = $pixels === null ? null : $pixels.$getSourceObject0();
    var$10.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, var$11);
}
function oktt_TvmGL_glTexImage2D0($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $image) {
    var var$10, var$11;
    var$10 = $this.$gl3;
    var$11 = $image === null ? null : $image.$getSourceObject0();
    var$10.texImage2D($target, $level, $internalformat, $format, $type, var$11);
}
function oktt_TvmGL_glFramebufferTexture2D($this, $target, $attachment, $textarget, $texture, $level) {
    var var$6, var$7;
    var$6 = $this.$gl3;
    var$7 = oktt_TvmGL$GLObjectArray_gl($this.$textures, $texture);
    var$6.framebufferTexture2D($target, $attachment, $textarget, var$7, $level);
}
function oktt_TvmGL_glGenRenderbuffer($this) {
    return oktt_TvmGL$GLObjectArray_new($this.$renderBuffers, $this.$gl3.createRenderbuffer());
}
function oktt_TvmGL_glBindRenderbuffer($this, $target, $renderbuffer) {
    var var$3, var$4;
    var$3 = $this.$gl3;
    var$4 = oktt_TvmGL$GLObjectArray_gl($this.$renderBuffers, $renderbuffer);
    var$3.bindRenderbuffer($target, var$4);
}
function oktt_TvmGL_glDeleteRenderbuffer($this, $renderbuffer) {
    var var$2, var$3;
    var$2 = $this.$gl3;
    var$3 = oktt_TvmGL$GLObjectArray_gl($this.$renderBuffers, $renderbuffer);
    var$2.deleteRenderbuffer(var$3);
}
function oktt_TvmGL_glFramebufferRenderbuffer($this, $target, $attachment, $renderbuffertarget, $renderbuffer) {
    var var$5, var$6;
    var$5 = $this.$gl3;
    var$6 = oktt_TvmGL$GLObjectArray_gl($this.$renderBuffers, $renderbuffer);
    var$5.framebufferRenderbuffer($target, $attachment, $renderbuffertarget, var$6);
}
function oktt_TvmGL_glRenderbufferStorage($this, $target, $internalformat, $width, $height) {
    $this.$gl3.renderbufferStorage($target, $internalformat, $width, $height);
}
function oktt_TvmGL_glCheckFramebufferStatus($this, $target) {
    return $this.$gl3.checkFramebufferStatus($target);
}
function oktt_TvmGL_glGenerateMipmap($this, $target) {
    $this.$gl3.generateMipmap($target);
}
function oktt_TvmGL_glTexParameterf($this, $target, $pname, $param) {
    $this.$gl3.texParameterf($target, $pname, $param);
}
function oktt_TvmGL_glTexParameteri($this, $target, $pname, $param) {
    $this.$gl3.texParameteri($target, $pname, $param);
}
function oktt_TvmGL_glGetProgramInfoLog($this, $program) {
    var var$2, var$3;
    var$2 = $this.$gl3;
    var$3 = oktt_TvmGL$GLObjectArray_gl($this.$programs, $program);
    var$2 = $rt_str(var$2.getProgramInfoLog(var$3));
    if (var$2 === null)
        var$2 = $rt_s(6);
    return var$2;
}
function oktt_TvmGL_glBindBuffer($this, $target, $buffer) {
    var var$3, var$4;
    var$3 = $this.$gl3;
    var$4 = oktt_TvmGL$GLObjectArray_gl($this.$buffers, $buffer);
    var$3.bindBuffer($target, var$4);
}
function oktt_TvmGL_glGenBuffer($this) {
    return oktt_TvmGL$GLObjectArray_new($this.$buffers, $this.$gl3.createBuffer());
}
function oktt_TvmGL_glViewport($this, $x, $y, $width, $height) {
    $this.$gl3.viewport($x, $y, $width, $height);
}
function oktt_TvmGL_glBufferData($this, $target, $size, $data, $usage) {
    var var$5, var$6;
    var$5 = $this.$gl3;
    var$6 = $data === null ? null : $data.$getSourceObject0();
    var$5.bufferData($target, var$6, $usage);
}
function oktt_TvmGL_glBlendFunc($this, $sfactor, $dfactor) {
    $this.$gl3.blendFunc($sfactor, $dfactor);
}
function oktt_TvmGL_glGetIntegerv($this, $pname, $params) {
    var var$3;
    var$3 = $params.data;
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    var$3[0] = $this.$gl3.getParameter($pname);
}
function oktt_TvmGL_glBindFramebuffer($this, $target, $framebuffer) {
    var var$3, var$4;
    var$3 = $this.$gl3;
    var$4 = oktt_TvmGL$GLObjectArray_gl($this.$frameBuffers, $framebuffer);
    var$3.bindFramebuffer($target, var$4);
}
function oktt_TvmGL_glCompileShader($this, $shader) {
    var var$2, var$3;
    var$2 = $this.$gl3;
    var$3 = oktt_TvmGL$GLObjectArray_gl($this.$shaders0, $shader);
    var$2.compileShader(var$3);
}
function oktt_TvmGL_glCreateShader($this, $type) {
    return oktt_TvmGL$GLObjectArray_new($this.$shaders0, $this.$gl3.createShader($type));
}
function oktt_TvmGL_glDeleteFramebuffer($this, $framebuffer) {
    var var$2, var$3;
    var$2 = $this.$gl3;
    var$3 = oktt_TvmGL$GLObjectArray_delete($this.$frameBuffers, $framebuffer);
    var$2.deleteFramebuffer(var$3);
}
function oktt_TvmGL_glDeleteProgram($this, $program) {
    var var$2, var$3;
    var$2 = $this.$gl3;
    var$3 = oktt_TvmGL$GLObjectArray_delete($this.$programs, $program);
    var$2.deleteProgram(var$3);
}
function oktt_TvmGL_glDrawElements($this, $mode, $count, $type, $indices) {
    $this.$gl3.drawElements($mode, $count, $type, $indices);
}
function oktt_TvmGL_glGenFramebuffer($this) {
    return oktt_TvmGL$GLObjectArray_new($this.$frameBuffers, $this.$gl3.createFramebuffer());
}
function oktt_TvmGL_glDeleteShader($this, $shader) {
    var var$2, var$3;
    var$2 = $this.$gl3;
    var$3 = oktt_TvmGL$GLObjectArray_delete($this.$shaders0, $shader);
    var$2.deleteShader(var$3);
}
function oktt_TvmGL_glDetachShader($this, $program, $shader) {
    var var$3, var$4, var$5;
    var$3 = $this.$gl3;
    var$4 = oktt_TvmGL$GLObjectArray_gl($this.$programs, $program);
    var$5 = oktt_TvmGL$GLObjectArray_gl($this.$shaders0, $shader);
    var$3.detachShader(var$4, var$5);
}
function oktt_TvmGL_glEnableVertexAttribArray($this, $index) {
    $this.$gl3.enableVertexAttribArray($index);
}
function oktt_TvmGL_glGetFloatv($this, $pname, $params) {
    var var$3;
    var$3 = $params.data;
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    var$3[0] = $this.$gl3.getParameter($pname);
}
function oktt_TvmGL_uLoc($this, $location) {
    var var$2, var$3;
    a: {
        var$2 = $this.$programs;
        oktg_GL_$callClinit();
        var$3 = oktt_TvmGL$GLObjectArray_wrap(var$2, oktg_GL_getShader(oktg_GL_INSTANCE));
        if (var$3 !== null) {
            var$3 = oktt_TvmGL$ProgramWrap_getUniformLocations(var$3);
            if (var$3 !== null) {
                var$3 = kc_CollectionsKt___CollectionsKt_getOrNull(var$3, $location);
                if (var$3 !== null) {
                    var$3 = oktt_TvmGL$UniformLocationWrap_getGl(var$3);
                    break a;
                }
            }
        }
        var$3 = null;
    }
    return var$3;
}
function oktt_TvmGL_glUniform1i($this, $location, $x) {
    var var$3, var$4;
    var$3 = $this.$gl3;
    var$4 = oktt_TvmGL_uLoc($this, $location);
    var$3.uniform1i(var$4, $x);
}
function oktt_TvmGL_glUniform1f($this, $location, $x) {
    var var$3, var$4;
    var$3 = $this.$gl3;
    var$4 = oktt_TvmGL_uLoc($this, $location);
    var$3.uniform1f(var$4, $x);
}
function oktt_TvmGL_glUniform2f($this, $location, $x, $y) {
    var var$4, var$5;
    var$4 = $this.$gl3;
    var$5 = oktt_TvmGL_uLoc($this, $location);
    var$4.uniform2f(var$5, $x, $y);
}
function oktt_TvmGL_glUniform3f($this, $location, $x, $y, $z) {
    var var$5, var$6;
    var$5 = $this.$gl3;
    var$6 = oktt_TvmGL_uLoc($this, $location);
    var$5.uniform3f(var$6, $x, $y, $z);
}
function oktt_TvmGL_glUniform4f($this, $location, $x, $y, $z, $w) {
    var var$6, var$7;
    var$6 = $this.$gl3;
    var$7 = oktt_TvmGL_uLoc($this, $location);
    var$6.uniform4f(var$7, $x, $y, $z, $w);
}
function oktt_TvmGL_glUniform3fv($this, $location, $count, $v, $offset) {
    var var$5, var$6;
    kji_Intrinsics_checkParameterIsNotNull($v, $rt_s(372));
    var$5 = $this.$gl3;
    var$6 = oktt_TvmGL_uLoc($this, $location);
    var$5.uniform3fv(var$6, $v.data);
}
function oktt_TvmGL_glUniformMatrix4fv($this, $location, $count, $transpose, $value, $offset) {
    var var$6, var$7;
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    var$6 = $this.$gl3;
    var$7 = oktt_TvmGL_uLoc($this, $location);
    var$6.uniformMatrix4fv(var$7, !!$transpose, $value.data);
}
function oktt_TvmGL_glShaderSource($this, $shader, $string) {
    var var$3, var$4;
    kji_Intrinsics_checkParameterIsNotNull($string, $rt_s(371));
    var$3 = $this.$gl3;
    var$4 = oktt_TvmGL$GLObjectArray_gl($this.$shaders0, $shader);
    var$3.shaderSource(var$4, $rt_ustr($string));
}
function oktt_TvmGL_glGetShaderiv($this, $shader, $pname, $params) {
    var var$4, var$5, var$6;
    var$4 = $params.data;
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    var$5 = $this.$gl3;
    var$6 = oktt_TvmGL$GLObjectArray_gl($this.$shaders0, $shader);
    var$4[0] = var$5.getShaderParameter(var$6, $pname);
}
function oktt_TvmGL_glGetProgramiv($this, $program, $pname, $params) {
    var var$4, var$5, var$6;
    var$4 = $params.data;
    kji_Intrinsics_checkParameterIsNotNull($params, $rt_s(368));
    var$5 = $this.$gl3;
    var$6 = oktt_TvmGL$GLObjectArray_gl($this.$programs, $program);
    var$4[0] = var$5.getProgramParameter(var$6, $pname);
}
function oktt_TvmGL_glGetActiveUniform($this, $program, $index, $size, $type) {
    var var$5, var$6, $info, var$8, var$9;
    kji_Intrinsics_checkParameterIsNotNull($size, $rt_s(369));
    kji_Intrinsics_checkParameterIsNotNull($type, $rt_s(370));
    var$5 = $this.$gl3;
    var$6 = oktt_TvmGL$GLObjectArray_gl($this.$programs, $program);
    $info = var$5.getActiveUniform(var$6, $index);
    if ($info !== null) {
        var$8 = $size.data;
        var$9 = $type.data;
        var$8[0] = $info.size;
        var$9[0] = $info.type;
    }
    a: {
        if ($info !== null) {
            var$5 = $rt_str($info.name);
            if (var$5 !== null)
                break a;
        }
        var$5 = $rt_s(6);
    }
    return var$5;
}
function oktt_TvmGL_glGetShaderInfoLog($this, $shader) {
    var var$2, var$3;
    var$2 = $this.$gl3;
    var$3 = oktt_TvmGL$GLObjectArray_gl($this.$shaders0, $shader);
    var$2 = $rt_str(var$2.getShaderInfoLog(var$3));
    if (var$2 === null)
        var$2 = $rt_s(6);
    return var$2;
}
function oktt_TvmGL_glAttachShader($this, $program, $shader) {
    var var$3, var$4, var$5;
    var$3 = $this.$gl3;
    var$4 = oktt_TvmGL$GLObjectArray_gl($this.$programs, $program);
    var$5 = oktt_TvmGL$GLObjectArray_gl($this.$shaders0, $shader);
    var$3.attachShader(var$4, var$5);
}
function oktt_TvmGL_glGetActiveAttrib($this, $program, $index, $size, $type) {
    var var$5, var$6, $info, var$8, var$9;
    kji_Intrinsics_checkParameterIsNotNull($size, $rt_s(369));
    kji_Intrinsics_checkParameterIsNotNull($type, $rt_s(370));
    var$5 = $this.$gl3;
    var$6 = oktt_TvmGL$GLObjectArray_gl($this.$programs, $program);
    $info = var$5.getActiveAttrib(var$6, $index);
    if ($info !== null) {
        var$8 = $size.data;
        var$9 = $type.data;
        var$8[0] = $info.size;
        var$9[0] = $info.type;
    }
    a: {
        if ($info !== null) {
            var$5 = $rt_str($info.name);
            if (var$5 !== null)
                break a;
        }
        var$5 = $rt_s(6);
    }
    return var$5;
}
function oktt_TvmGL_glGetAttribLocation($this, $program, $name) {
    var var$3, var$4;
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    var$3 = $this.$gl3;
    var$4 = oktt_TvmGL$GLObjectArray_gl($this.$programs, $program);
    return var$3.getAttribLocation(var$4, $rt_ustr($name));
}
function oktt_TvmGL_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0) {
    $this.$gl3.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
}
function oktt_TvmGL_glDrawArraysInstanced($this, $mode, $first, $count, $instanceCount) {
    $this.$gl3.drawArraysInstanced($mode, $first, $count, $instanceCount);
}
function oktt_TvmGL_glDrawBuffers($this, $n, $bufs) {
    kji_Intrinsics_checkParameterIsNotNull($bufs, $rt_s(367));
    $this.$gl3.drawBuffers($bufs.data);
}
function oktt_TvmGL_glDrawElementsInstanced($this, $mode, $count, $type, $indicesOffset, $instanceCount) {
    $this.$gl3.drawElementsInstanced($mode, $count, $type, $indicesOffset, $instanceCount);
}
function oktt_TvmGL_glVertexAttribDivisor($this, $index, $divisor) {
    $this.$gl3.vertexAttribDivisor($index, $divisor);
}
function oktt_TvmGL_getMajVer($this) {
    return $this.$majVer;
}
function oktt_TvmGL__init_0($this, $gl, $majVer, $minVer, $glslVer) {
    var var$5, var$6;
    kji_Intrinsics_checkParameterIsNotNull($gl, $rt_s(814));
    jl_Object__init_0($this);
    $this.$gl3 = $gl;
    $this.$majVer = $majVer;
    $this.$minVer = $minVer;
    $this.$glslVer = $glslVer;
    var$5 = new oktt_TvmGL$GLObjectArray;
    oktt_TvmGL$textures$1_$callClinit();
    oktt_TvmGL$GLObjectArray__init_(var$5, oktt_TvmGL$textures$1_INSTANCE);
    $this.$textures = var$5;
    var$6 = new oktt_TvmGL$GLObjectArray;
    oktt_TvmGL$programs$1_$callClinit();
    oktt_TvmGL$GLObjectArray__init_(var$6, oktt_TvmGL$programs$1_INSTANCE);
    $this.$programs = var$6;
    var$6 = new oktt_TvmGL$GLObjectArray;
    oktt_TvmGL$buffers$1_$callClinit();
    oktt_TvmGL$GLObjectArray__init_(var$6, oktt_TvmGL$buffers$1_INSTANCE);
    $this.$buffers = var$6;
    var$6 = new oktt_TvmGL$GLObjectArray;
    oktt_TvmGL$vertexArrays$1_$callClinit();
    oktt_TvmGL$GLObjectArray__init_(var$6, oktt_TvmGL$vertexArrays$1_INSTANCE);
    $this.$vertexArrays = var$6;
    var$6 = new oktt_TvmGL$GLObjectArray;
    oktt_TvmGL$frameBuffers$1_$callClinit();
    oktt_TvmGL$GLObjectArray__init_(var$6, oktt_TvmGL$frameBuffers$1_INSTANCE);
    $this.$frameBuffers = var$6;
    var$6 = new oktt_TvmGL$GLObjectArray;
    oktt_TvmGL$renderBuffers$1_$callClinit();
    oktt_TvmGL$GLObjectArray__init_(var$6, oktt_TvmGL$renderBuffers$1_INSTANCE);
    $this.$renderBuffers = var$6;
    var$6 = new oktt_TvmGL$GLObjectArray;
    oktt_TvmGL$shaders$1_$callClinit();
    oktt_TvmGL$GLObjectArray__init_(var$6, oktt_TvmGL$shaders$1_INSTANCE);
    $this.$shaders0 = var$6;
}
function oktt_TvmGL__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$5 & 2)
        var$2 = 1;
    if (var$5 & 4)
        var$3 = 0;
    if (var$5 & 8)
        var$4 = 100;
    oktt_TvmGL__init_0(var$0, var$1, var$2, var$3, var$4);
}
function ooo_DContactBuffer() {
    jl_Object.call(this);
    this.$buf0 = null;
}
function ooo_DContactBuffer__init_(var_0) {
    var var_1 = new ooo_DContactBuffer();
    ooo_DContactBuffer__init_0(var_1, var_0);
    return var_1;
}
function ooo_DContactBuffer__init_0($this, $size) {
    var $i;
    jl_Object__init_0($this);
    $this.$buf0 = ju_ArrayList__init_();
    $i = 0;
    while ($i < $size) {
        $this.$buf0.$add1(ooo_DContact__init_());
        $i = $i + 1 | 0;
    }
}
function ooo_DContactBuffer_get($this, $i) {
    return $this.$buf0.$get1($i);
}
function ooo_DContactBuffer_getGeomBuffer($this) {
    return ooo_DContactGeomBuffer__init_1($this);
}
function oktgg_GLTFCamera$read$3() {
    var a = this; kji_Lambda.call(a);
    a.$this$038 = null;
    a.$$json = null;
}
function oktgg_GLTFCamera$read$3__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFCamera$read$3();
    oktgg_GLTFCamera$read$3__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFCamera$read$3_invoke(var$0, var$1) {
    oktgg_GLTFCamera$read$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFCamera$read$3_invoke0($this, $$this$obj) {
    kji_Intrinsics_checkParameterIsNotNull($$this$obj, $rt_s(33));
    $this.$$json.$float($rt_s(986), oktgg_GLTFCamera$read$3$1__init_($this));
    $this.$$json.$float($rt_s(987), oktgg_GLTFCamera$read$3$2__init_($this));
    $this.$$json.$float($rt_s(988), oktgg_GLTFCamera$read$3$3__init_($this));
    $this.$$json.$float($rt_s(989), oktgg_GLTFCamera$read$3$4__init_($this));
}
function oktgg_GLTFCamera$read$3__init_0(var$0, var$1, var$2) {
    var$0.$this$038 = var$1;
    var$0.$$json = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFCamera$read$1() {
    kji_Lambda.call(this);
    this.$this$0118 = null;
}
function oktgg_GLTFCamera$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFCamera$read$1();
    oktgg_GLTFCamera$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFCamera$read$1_invoke(var$0, var$1) {
    oktgg_GLTFCamera$read$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFCamera$read$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    oktgg_GLTFCamera_setName($this.$this$0118, $it);
}
function oktgg_GLTFCamera$read$1__init_0(var$0, var$1) {
    var$0.$this$0118 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFCamera$read$2() {
    var a = this; kji_Lambda.call(a);
    a.$this$0119 = null;
    a.$$json0 = null;
}
function oktgg_GLTFCamera$read$2__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFCamera$read$2();
    oktgg_GLTFCamera$read$2__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFCamera$read$2_invoke(var$0, var$1) {
    oktgg_GLTFCamera$read$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFCamera$read$2_invoke0($this, $$this$obj) {
    kji_Intrinsics_checkParameterIsNotNull($$this$obj, $rt_s(33));
    $this.$$json0.$float($rt_s(990), oktgg_GLTFCamera$read$2$1__init_($this));
    oktgg_GLTFCamera_setYfov($this.$this$0119, $this.$$json0.$float2($rt_s(991)));
    $this.$$json0.$float($rt_s(988), oktgg_GLTFCamera$read$2$2__init_($this));
    $this.$$json0.$float($rt_s(989), oktgg_GLTFCamera$read$2$3__init_($this));
}
function oktgg_GLTFCamera$read$2__init_0(var$0, var$1, var$2) {
    var$0.$this$0119 = var$1;
    var$0.$$json0 = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function oktsg_OutputNode$Companion() {
    jl_Object.call(this);
}
function oktsg_OutputNode$Companion__init_0() {
    var var_0 = new oktsg_OutputNode$Companion();
    oktsg_OutputNode$Companion__init_1(var_0);
    return var_0;
}
function oktsg_OutputNode$Companion__init_(var_0) {
    var var_1 = new oktsg_OutputNode$Companion();
    oktsg_OutputNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_OutputNode$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function oktsg_OutputNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_OutputNode$Companion__init_1($this);
}
function oktgg_GLTFCamera$read$2$3() {
    kji_Lambda.call(this);
    this.$this$0120 = null;
}
function oktgg_GLTFCamera$read$2$3__init_(var_0) {
    var var_1 = new oktgg_GLTFCamera$read$2$3();
    oktgg_GLTFCamera$read$2$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFCamera$read$2$3_invoke(var$0, var$1) {
    oktgg_GLTFCamera$read$2$3_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFCamera$read$2$3_invoke0($this, $it) {
    oktgg_GLTFCamera_setZnear($this.$this$0120.$this$0119, $it);
    oktgg_GLTFCamera_getCamera($this.$this$0120.$this$0119).$setNear($it);
}
function oktgg_GLTFCamera$read$2$3__init_0(var$0, var$1) {
    var$0.$this$0120 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oooig_GimGeometry$vec4f() {
    jl_Object.call(this);
    this.$f0 = null;
}
function oooig_GimGeometry$vec4f__init_() {
    var var_0 = new oooig_GimGeometry$vec4f();
    oooig_GimGeometry$vec4f__init_0(var_0);
    return var_0;
}
function oooig_GimGeometry$vec4f__init_0($this) {
    jl_Object__init_0($this);
    $this.$f0 = $rt_createFloatArray(4);
}
function jur_EOISet() {
    jur_AbstractSet.call(this);
}
function jur_EOISet__init_() {
    var var_0 = new jur_EOISet();
    jur_EOISet__init_0(var_0);
    return var_0;
}
function jur_EOISet__init_0($this) {
    jur_AbstractSet__init_0($this);
}
function jur_EOISet_matches($this, $stringIndex, $testString, $matchResult) {
    var $rightBound;
    $rightBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getRightBound() : $testString.$length();
    if ($stringIndex < $rightBound)
        return (-1);
    $matchResult.$hitEnd = 1;
    $matchResult.$requireEnd = 1;
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
}
function jur_EOISet_hasConsumed($this, $matchResult) {
    return 0;
}
function oktgg_GLTFCamera$read$2$2() {
    kji_Lambda.call(this);
    this.$this$0121 = null;
}
function oktgg_GLTFCamera$read$2$2__init_(var_0) {
    var var_1 = new oktgg_GLTFCamera$read$2$2();
    oktgg_GLTFCamera$read$2$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFCamera$read$2$2_invoke(var$0, var$1) {
    oktgg_GLTFCamera$read$2$2_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFCamera$read$2$2_invoke0($this, $it) {
    oktgg_GLTFCamera_setZfar($this.$this$0121.$this$0119, $it);
    oktgg_GLTFCamera_getCamera($this.$this$0121.$this$0119).$setFar($it);
}
function oktgg_GLTFCamera$read$2$2__init_0(var$0, var$1) {
    var$0.$this$0121 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFCamera$read$2$1() {
    kji_Lambda.call(this);
    this.$this$0122 = null;
}
function oktgg_GLTFCamera$read$2$1__init_(var_0) {
    var var_1 = new oktgg_GLTFCamera$read$2$1();
    oktgg_GLTFCamera$read$2$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFCamera$read$2$1_invoke(var$0, var$1) {
    oktgg_GLTFCamera$read$2$1_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFCamera$read$2$1_invoke0($this, $it) {
    oktgg_GLTFCamera_setAspectRatio($this.$this$0122.$this$0119, $it);
}
function oktgg_GLTFCamera$read$2$1__init_0(var$0, var$1) {
    var$0.$this$0122 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktt_TvmDATA() {
    jl_Object.call(this);
    this.$nullBuffer = null;
}
function oktt_TvmDATA__init_() {
    var var_0 = new oktt_TvmDATA();
    oktt_TvmDATA__init_0(var_0);
    return var_0;
}
function oktt_TvmDATA_getNullBuffer($this) {
    return $this.$nullBuffer;
}
function oktt_TvmDATA_bytes($this, $capacity) {
    var var$2, var$3;
    var$2 = new oktt_TvmUInt8Array;
    var$3 = new Uint8Array($capacity);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(992));
    oktt_TvmUInt8Array__init_0(var$2, var$3);
    return var$2;
}
function oktt_TvmDATA_decodeBase64($this, $text, $out) {
    kji_Intrinsics_checkParameterIsNotNull($text, $rt_s(295));
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $rt_throw(k_NotImplementedError__init_0(jl_StringBuilder__init_().$append($rt_s(840)).$append($rt_s(841)).$toString()));
}
function oktt_TvmDATA_decodeURI($this, $uri) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($uri, $rt_s(18));
    var$2 = $rt_str(decodeURI($rt_ustr($uri)));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(993));
    return var$2;
}
function oktt_TvmDATA__init_0($this) {
    jl_Object__init_0($this);
    $this.$nullBuffer = oktt_TvmDATA_bytes($this, 0);
}
function kt_Regex$Companion() {
    jl_Object.call(this);
}
function kt_Regex$Companion__init_0() {
    var var_0 = new kt_Regex$Companion();
    kt_Regex$Companion__init_1(var_0);
    return var_0;
}
function kt_Regex$Companion__init_(var_0) {
    var var_1 = new kt_Regex$Companion();
    kt_Regex$Companion__init_2(var_1, var_0);
    return var_1;
}
function kt_Regex$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function kt_Regex$Companion__init_2($this, $$constructor_marker) {
    kt_Regex$Companion__init_1($this);
}
function ji_InputStream() {
    jl_Object.call(this);
}
function ji_InputStream__init_() {
    var var_0 = new ji_InputStream();
    ji_InputStream__init_0(var_0);
    return var_0;
}
function ji_InputStream__init_0($this) {
    jl_Object__init_0($this);
}
function ji_FilterInputStream() {
    ji_InputStream.call(this);
    this.$in0 = null;
}
function ji_FilterInputStream__init_(var_0) {
    var var_1 = new ji_FilterInputStream();
    ji_FilterInputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_FilterInputStream__init_0($this, $in) {
    ji_InputStream__init_0($this);
    $this.$in0 = $in;
}
function ji_FilterInputStream_read($this) {
    return $this.$in0.$read0();
}
function ji_FilterInputStream_read0($this, $buffer, $offset, $count) {
    return $this.$in0.$read1($buffer, $offset, $count);
}
function ji_FilterInputStream_skip($this, $count) {
    return $this.$in0.$skip0($count);
}
function jnc_BufferUnderflowException() {
    jl_RuntimeException.call(this);
}
function jnc_BufferUnderflowException__init_() {
    var var_0 = new jnc_BufferUnderflowException();
    jnc_BufferUnderflowException__init_0(var_0);
    return var_0;
}
function jnc_BufferUnderflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function oooi_CollideTrimeshTrimesh() {
    jl_Object.call(this);
}
function oooi_CollideTrimeshTrimesh__init_() {
    var var_0 = new oooi_CollideTrimeshTrimesh();
    oooi_CollideTrimeshTrimesh__init_0(var_0);
    return var_0;
}
function oooi_CollideTrimeshTrimesh__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollideTrimeshTrimesh_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideTTL($o1, $o2, $flags, $contacts, 1);
}
function oooi_CollideTrimeshTrimesh_dCollideTTL($this, $g1, $g2, $Flags, $Contacts, $Stride) {
    var var$6, $trimeshcontacts, $ptrimeshcontacts, $contactcount, $i, $pcontact, $ptrimeshcontact;
    oooi_Common_dIASSERT($Stride != 1 ? 0 : 1);
    var$6 = $Flags & 65535;
    oooi_Common_dIASSERT(var$6 < 1 ? 0 : 1);
    $trimeshcontacts = oooig_GimContact_GIM_CREATE_CONTACT_LIST();
    $g1.$recomputeAABB();
    $g2.$recomputeAABB();
    $g1.$m_collision_trimesh.$gim_trimesh_trimesh_collision($g2.$m_collision_trimesh, $trimeshcontacts);
    if (!$trimeshcontacts.$size()) {
        $trimeshcontacts.$GIM_DYNARRAY_DESTROY();
        return 0;
    }
    $ptrimeshcontacts = $trimeshcontacts.$GIM_DYNARRAY_POINTER_V();
    $contactcount = $trimeshcontacts.$size();
    if ($contactcount <= var$6)
        var$6 = $contactcount;
    else {
        ooo_OdeConfig_$callClinit();
        if (ooo_OdeConfig_ENABLE_CONTACT_SORTING)
            ju_Arrays_sort0($trimeshcontacts.$GIM_DYNARRAY_POINTER(), 0, $contactcount, oooi_CollideTrimeshTrimesh$1__init_($this));
    }
    $i = 0;
    while ($i < var$6) {
        $pcontact = ooo_DContactGeomBuffer_getSafe($Contacts, $Flags, $i);
        $ptrimeshcontact = $ptrimeshcontacts.$at($i);
        $pcontact.$pos0.$set14($ptrimeshcontact.$getPoint().$f);
        $pcontact.$normal.$set14($ptrimeshcontact.$getNormal1().$f);
        $pcontact.$depth = $ptrimeshcontact.$getDepth0();
        $pcontact.$g1 = $g1;
        $pcontact.$g2 = $g2;
        $pcontact.$side1 = $ptrimeshcontact.$getFeature1();
        $pcontact.$side2 = $ptrimeshcontact.$getFeature2();
        $i = $i + 1 | 0;
    }
    $trimeshcontacts.$GIM_DYNARRAY_DESTROY();
    return var$6;
}
function oktu_IResourceLoader() {
}
function oktu_ResourceLoader() {
    var a = this; jl_Object.call(a);
    a.$name27 = null;
    a.$data2 = null;
    a.$requestersInternal = null;
}
function oktu_ResourceLoader__init_() {
    var var_0 = new oktu_ResourceLoader();
    oktu_ResourceLoader__init_0(var_0);
    return var_0;
}
function oktu_ResourceLoader_setData($this, $_set___) {
    $this.$data2 = $_set___;
}
function oktu_ResourceLoader__init_0($this) {
    jl_Object__init_0($this);
    $this.$name27 = $rt_s(6);
    $this.$requestersInternal = ju_ArrayList__init_();
}
function oktgg_IGLTF() {
}
function oktgg_GLTF() {
    var a = this; oktu_ResourceLoader.call(a);
    a.$conf0 = null;
    a.$generator = null;
    a.$version2 = null;
    a.$copyright = null;
    a.$minVersion = null;
    a.$objects = null;
    a.$buffers0 = null;
    a.$bufferViews = null;
    a.$accessors = null;
    a.$samplers = null;
    a.$images = null;
    a.$textures0 = null;
    a.$materials = null;
    a.$meshes0 = null;
    a.$nodes0 = null;
    a.$skins = null;
    a.$animations = null;
    a.$scenes = null;
    a.$cameras = null;
    a.$arrays = null;
    a.$extra0 = null;
    a.$scene0 = null;
    a.$mainSceneIndex = 0;
    a.$isLoading = 0;
    a.$isLoaded = 0;
    a.$name28 = null;
    a.$source0 = null;
    a.$sourceType = null;
    a.$directory = null;
}
var oktgg_GLTF_DefaultTextureMinFilter = 0;
var oktgg_GLTF_DefaultTextureMagFilter = 0;
var oktgg_GLTF_Companion = null;
function oktgg_GLTF_$callClinit() {
    oktgg_GLTF_$callClinit = $rt_eraseClinit(oktgg_GLTF);
    oktgg_GLTF__clinit_();
}
function oktgg_GLTF__init_0(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTF();
    oktgg_GLTF__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTF__init_2(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTF();
    oktgg_GLTF__init_3(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTF__init_4(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgg_GLTF();
    oktgg_GLTF__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktgg_GLTF_getConf($this) {
    return $this.$conf0;
}
function oktgg_GLTF_setConf($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$conf0 = $_set___;
}
function oktgg_GLTF_setGenerator($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$generator = $_set___;
}
function oktgg_GLTF_setVersion($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$version2 = $_set___;
}
function oktgg_GLTF_setCopyright($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$copyright = $_set___;
}
function oktgg_GLTF_setMinVersion($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$minVersion = $_set___;
}
function oktgg_GLTF_getObjects($this) {
    return $this.$objects;
}
function oktgg_GLTF_getObjects0(var$0) {
    return var$0.$getObjects0();
}
function oktgg_GLTF_getBuffers($this) {
    return $this.$buffers0;
}
function oktgg_GLTF_getBuffers0(var$0) {
    return var$0.$getBuffers();
}
function oktgg_GLTF_getBufferViews($this) {
    return $this.$bufferViews;
}
function oktgg_GLTF_getBufferViews0(var$0) {
    return var$0.$getBufferViews();
}
function oktgg_GLTF_getAccessors($this) {
    return $this.$accessors;
}
function oktgg_GLTF_getAccessors0(var$0) {
    return var$0.$getAccessors0();
}
function oktgg_GLTF_getSamplers($this) {
    return $this.$samplers;
}
function oktgg_GLTF_getSamplers0(var$0) {
    return var$0.$getSamplers();
}
function oktgg_GLTF_getImages($this) {
    return $this.$images;
}
function oktgg_GLTF_getImages0(var$0) {
    return var$0.$getImages();
}
function oktgg_GLTF_getTextures($this) {
    return $this.$textures0;
}
function oktgg_GLTF_getTextures0(var$0) {
    return var$0.$getTextures0();
}
function oktgg_GLTF_getMaterials($this) {
    return $this.$materials;
}
function oktgg_GLTF_getMeshes($this) {
    return $this.$meshes0;
}
function oktgg_GLTF_getMeshes0(var$0) {
    return var$0.$getMeshes();
}
function oktgg_GLTF_getNodes($this) {
    return $this.$nodes0;
}
function oktgg_GLTF_getNodes0(var$0) {
    return var$0.$getNodes();
}
function oktgg_GLTF_getSkins($this) {
    return $this.$skins;
}
function oktgg_GLTF_getSkins0(var$0) {
    return var$0.$getSkins0();
}
function oktgg_GLTF_getAnimations($this) {
    return $this.$animations;
}
function oktgg_GLTF_getAnimations0(var$0) {
    return var$0.$getAnimations();
}
function oktgg_GLTF_getScenes($this) {
    return $this.$scenes;
}
function oktgg_GLTF_getCameras($this) {
    return $this.$cameras;
}
function oktgg_GLTF_getCameras0(var$0) {
    return var$0.$getCameras0();
}
function oktgg_GLTF_getScene($this) {
    return $this.$scene0;
}
function oktgg_GLTF_setScene($this, $_set___) {
    $this.$scene0 = $_set___;
}
function oktgg_GLTF_setMainSceneIndex($this, $_set___) {
    $this.$mainSceneIndex = $_set___;
}
function oktgg_GLTF_isLoading($this) {
    return $this.$isLoading;
}
function oktgg_GLTF_setLoading($this, $_set___) {
    $this.$isLoading = $_set___;
}
function oktgg_GLTF_setLoaded($this, $_set___) {
    $this.$isLoaded = $_set___;
}
function oktgg_GLTF_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name28 = $_set___;
}
function oktgg_GLTF_createMaterial($this) {
    return oktgg_GLTFMaterial__init_($this, $this.$getMaterials().$size(), null, 4, null);
}
function oktgg_GLTF_load($this, $response) {
    var var$2, var$3, $gltfFile;
    a: {
        kji_Intrinsics_checkParameterIsNotNull($response, $rt_s(281));
        var$2 = $this.$sourceType;
        oktgg_GLTF$WhenMappings_$callClinit();
        switch (oktgg_GLTF$WhenMappings_$EnumSwitchMapping$0.data[jl_Enum_ordinal(var$2)]) {
            case 1:
                var$2 = $this.$source0;
                if (var$2 === null)
                    $rt_throw(k_TypeCastException__init_($rt_s(994)));
                $this.$read(var$2);
                $response.$invoke1(jl_Integer_valueOf(200));
                break a;
            case 2:
                break;
            case 3:
                var$2 = new oktu_LittleEndianInputStream;
                var$3 = $this.$source0;
                if (var$3 === null)
                    $rt_throw(k_TypeCastException__init_($rt_s(995)));
                oktu_LittleEndianInputStream__init_(var$2, var$3.$read2());
                oktgg_GLTF_load0($this, var$2);
                break a;
            case 4:
                var$2 = $this.$source0;
                if (var$2 === null)
                    $rt_throw(k_TypeCastException__init_($rt_s(995)));
                $gltfFile = var$2;
                $this.$setName($gltfFile.$getPath());
                $gltfFile.$readText($rt_s(996), oktgg_GLTF$load$1__init_($this, $response, $gltfFile));
                break a;
            default:
                break a;
        }
        var$2 = $this.$source0;
        if (var$2 !== null)
            oktgg_GLTF_load0($this, var$2);
        else
            $rt_throw(k_TypeCastException__init_($rt_s(997)));
    }
}
function oktgg_GLTF_createArrayElement($this, $arrayName, $elementIndex) {
    var var$3;
    a: {
        kji_Intrinsics_checkParameterIsNotNull($arrayName, $rt_s(998));
        switch ($arrayName.$hashCode()) {
            case 227996723:
                break;
            default:
                break a;
        }
        if ($arrayName.$equals0($rt_s(999))) {
            var$3 = oktgg_GLTFBuffer__init_1($this, $elementIndex, null, null, 0, null, 60, null);
            return var$3;
        }
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1000)).$append($arrayName).$toString()));
}
function oktgg_GLTF_read($this, $json) {
    var $loadedSkinnedNum, $skinnedNodes, $i, var$5, var$6, $node, var$8, $nodeIndex, $$this$forEach$iv, $element$iv, $it;
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    if (!$this.$isLoading0()) {
        $this.$setLoaded(0);
        $this.$setLoading(1);
        $this.$destroy0();
        $json.$get16($rt_s(1001), oktgg_GLTF$read$1__init_($this));
        if ($json.$contains($rt_s(1002))) {
            oktu_LOG_$callClinit();
            oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, $rt_s(1003), null, 2, null);
        }
        $json.$array(oktgg_GLTFArray_getName($this.$getBuffers()), oktgg_GLTF$read$2__init_($this));
        $json.$array($rt_s(1004), oktgg_GLTF$read$3__init_($this));
        $json.$array($rt_s(1005), oktgg_GLTF$read$4__init_($this));
        $json.$array($rt_s(1006), oktgg_GLTF$read$5__init_($this));
        $json.$array($rt_s(1007), oktgg_GLTF$read$6__init_($this));
        $json.$array($rt_s(1008), oktgg_GLTF$read$7__init_($this));
        $json.$array($rt_s(1009), oktgg_GLTF$read$8__init_($this));
        $json.$array($rt_s(1010), oktgg_GLTF$read$9__init_($this));
        $json.$array($rt_s(1011), oktgg_GLTF$read$10__init_($this));
        $json.$array($rt_s(1012), oktgg_GLTF$read$11__init_($this));
        $json.$array($rt_s(1013), oktgg_GLTF$read$12__init_($this));
        $json.$array($rt_s(1014), oktgg_GLTF$read$13__init_($this));
        $json.$array($rt_s(1015), oktgg_GLTF$read$14__init_($this));
        $json.$int($rt_s(328), oktgg_GLTF$read$15__init_($this));
        $loadedSkinnedNum = kji_Ref$IntRef__init_();
        $loadedSkinnedNum.$element = 0;
        $skinnedNodes = ju_ArrayList__init_();
        $i = 0;
        var$5 = $this.$getNodes().$size();
        while ($i < var$5) {
            var$6 = $this.$getNodes().$get1($i);
            kji_Intrinsics_checkExpressionValueIsNotNull(var$6, $rt_s(1016));
            $node = var$6;
            if (oktgg_GLTFNode_getSkin($node) >= 0 && oktgg_GLTFNode_getMesh($node) >= 0)
                $skinnedNodes.$add1(jl_Integer_valueOf($i));
            $i = $i + 1 | 0;
        }
        $i = 0;
        var$8 = $skinnedNodes.$size();
        while ($i < var$8) {
            var$6 = $skinnedNodes.$get1($i);
            kji_Intrinsics_checkExpressionValueIsNotNull(var$6, $rt_s(1017));
            $nodeIndex = var$6.$intValue();
            oktgg_GLTFArray_getOrWait($this.$getNodes(), $nodeIndex, oktgg_GLTF$read$16__init_($this, $loadedSkinnedNum, $skinnedNodes));
            $i = $i + 1 | 0;
        }
        if (oktgg_GLTFConf_getSeparateThread($this.$getConf())) {
            oktg_GL_$callClinit();
            oktg_GL_call$default(oktg_GL_INSTANCE, null, oktgg_GLTF$read$17__init_($this, $skinnedNodes), 1, null);
        } else {
            $this.$glCalls();
            if ($skinnedNodes.$isEmpty()) {
                $$this$forEach$iv = $this.$getMaterials();
                var$6 = $$this$forEach$iv.$iterator();
                while (var$6.$hasNext()) {
                    $element$iv = var$6.$next();
                    $it = $element$iv;
                    $it.$buildShaders();
                }
            }
        }
        $this.$setLoading(0);
        $this.$setLoaded(1);
    }
}
function oktgg_GLTF_glCalls($this) {
    var $i, var$2, $primitives, $j, var$5;
    $i = 0;
    var$2 = $this.$getMeshes().$size();
    while ($i < var$2) {
        $primitives = oktgg_GLTFMesh_getPrimitives($this.$getMeshes().$get1($i));
        $j = 0;
        var$5 = $primitives.$size();
        while ($j < var$5) {
            oktgg_GLTF$glCalls$1_$callClinit();
            oktgg_GLTFArray_getOrWait($primitives, $j, oktgg_GLTF$glCalls$1_INSTANCE);
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
}
function oktgg_GLTF_load0($this, $streamLittleEndian) {
    var $magic, $version, $length, $jsonData, $i, $chunkLen, $chunkType, var$9, $data, $bufferData, var$12, var$13, var$14, var$15, $j;
    kji_Intrinsics_checkParameterIsNotNull($streamLittleEndian, $rt_s(1018));
    $magic = Long_fromInt(oktu_LittleEndianInputStream_readInt($streamLittleEndian));
    if (Long_ne($magic, Long_fromInt(1179937895)))
        $rt_throw(jl_RuntimeException__init_($rt_s(1019)));
    $version = oktu_LittleEndianInputStream_readInt($streamLittleEndian);
    if ($version != 2)
        $rt_throw(jl_RuntimeException__init_($rt_s(1020)));
    $length = Long_fromInt(oktu_LittleEndianInputStream_readInt($streamLittleEndian));
    $jsonData = null;
    $i = 12;
    while (Long_lt(Long_fromInt($i), $length)) {
        $chunkLen = oktu_LittleEndianInputStream_readInt($streamLittleEndian);
        $chunkType = oktu_LittleEndianInputStream_readInt($streamLittleEndian);
        var$9 = $i + 8 | 0;
        if ($chunkType == 1313821514) {
            $data = $rt_createByteArray($chunkLen);
            $streamLittleEndian.$read1($data, 0, $chunkLen);
            $jsonData = new jl_String;
            kt_Charsets_$callClinit();
            jl_String__init_8($jsonData, $data, kt_Charsets_UTF_8);
        } else if ($chunkType != 5130562) {
            oktu_LOG_$callClinit();
            oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append($rt_s(1021)).$append1($chunkType).$toString(), null, 2, null);
            if ($chunkLen > 0)
                $streamLittleEndian.$skip0(Long_fromInt($chunkLen));
        } else {
            $bufferData = new oktgg_GLTFBuffer;
            var$12 = $this;
            var$13 = oktgg_GLTFArray_size($this.$getBuffers());
            var$14 = null;
            oktd_DATA_$callClinit();
            oktgg_GLTFBuffer__init_2($bufferData, var$12, var$13, var$14, oktd_DATA_bytes(oktd_DATA_INSTANCE, $chunkLen), 0, null, 52, null);
            var$15 = oktgg_GLTFBuffer_getBytes($bufferData);
            oktd_DataByteOrder_$callClinit();
            var$15.$setOrder(oktd_DataByteOrder_LittleEndian);
            $j = 0;
            while ($j < $chunkLen) {
                oktgg_GLTFBuffer_getBytes($bufferData).$put8(jl_Byte_valueOf(oktu_LittleEndianInputStream_readByte($streamLittleEndian)));
                $j = $j + 1 | 0;
            }
            $this.$getBuffers().$add1($bufferData);
        }
        $i = var$9 + $chunkLen | 0;
    }
    if ($jsonData !== null) {
        oktj_JSON_$callClinit();
        $this.$read(oktj_JSON_parseObject(oktj_JSON_INSTANCE, $jsonData));
    }
    return $this;
}
function oktgg_GLTF_destroy($this) {
    var $i, var$2, $$this$forEach$iv, var$4, $element$iv, $it;
    a: {
        $this.$getScenes().$clear();
        $this.$getBuffers().$clear();
        $this.$getBufferViews().$clear();
        $this.$getAccessors0().$clear();
        $this.$getSamplers().$clear();
        if (oktgg_GLTFConf_getSeparateThread($this.$getConf())) {
            oktg_GL_$callClinit();
            oktg_GL_call$default(oktg_GL_INSTANCE, null, oktgg_GLTF$destroy$1__init_($this), 1, null);
        } else {
            $i = 0;
            var$2 = oktgg_GLTFArray_size($this.$getTextures0());
            while (true) {
                if ($i >= var$2)
                    break a;
                oktgg_GLTFTexture_destroy($this.$getTextures0().$get1($i));
                $i = $i + 1 | 0;
            }
        }
    }
    $this.$getTextures0().$clear();
    $i = 0;
    var$2 = $this.$getMaterials().$size();
    while ($i < var$2) {
        $this.$getMaterials().$get1($i).$getMaterial().$getShaderChannels().$clear();
        $i = $i + 1 | 0;
    }
    $this.$getMaterials().$clear();
    $i = 0;
    var$2 = oktgg_GLTFArray_size($this.$getMeshes());
    while ($i < var$2) {
        oktgg_GLTFMesh_getPrimitives($this.$getMeshes().$get1($i)).$clear();
        $i = $i + 1 | 0;
    }
    $this.$getMeshes().$clear();
    $this.$getSkins0().$clear();
    $$this$forEach$iv = $this.$getObjects0();
    var$4 = $$this$forEach$iv.$iterator();
    while (var$4.$hasNext()) {
        $element$iv = var$4.$next();
        $it = $element$iv;
        $it.$clear();
    }
    $this.$getObjects0().$clear();
    $this.$getCameras0().$clear();
    $this.$setData(null);
}
function oktgg_GLTF_getDirectory($this) {
    return $this.$directory;
}
function oktgg_GLTF__init_1($this, $source, $sourceType, $directory) {
    var var$4, var$5;
    oktgg_GLTF_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($source, $rt_s(808));
    kji_Intrinsics_checkParameterIsNotNull($sourceType, $rt_s(1022));
    kji_Intrinsics_checkParameterIsNotNull($directory, $rt_s(1023));
    oktu_ResourceLoader__init_0($this);
    $this.$source0 = $source;
    $this.$sourceType = $sourceType;
    $this.$directory = $directory;
    $this.$conf0 = oktgg_GLTFConf__init_1(0, 0, 0, 0, 0, 0, 0, 0, 0, 511, null);
    $this.$generator = $rt_s(6);
    $this.$version2 = $rt_s(1024);
    $this.$copyright = $rt_s(6);
    $this.$minVersion = $rt_s(6);
    $this.$objects = oktu_AsyncArrayList__init_();
    $this.$buffers0 = oktgg_GLTFArray__init_($rt_s(999));
    $this.$bufferViews = oktgg_GLTFArray__init_($rt_s(1004));
    $this.$accessors = oktgg_GLTFArray__init_($rt_s(1005));
    $this.$samplers = oktgg_GLTFArray__init_($rt_s(1006));
    $this.$images = oktgg_GLTFArray__init_($rt_s(1007));
    $this.$textures0 = oktgg_GLTFArray__init_($rt_s(1008));
    $this.$materials = oktgg_GLTFArray__init_($rt_s(1009));
    $this.$meshes0 = oktgg_GLTFArray__init_($rt_s(1010));
    $this.$nodes0 = oktgg_GLTFArray__init_($rt_s(1012));
    $this.$skins = oktgg_GLTFArray__init_($rt_s(1013));
    $this.$animations = oktgg_GLTFArray__init_($rt_s(1014));
    $this.$scenes = oktgg_GLTFArray__init_($rt_s(1015));
    $this.$cameras = oktgg_GLTFArray__init_($rt_s(1011));
    var$4 = $rt_createArray(oktgg_IGLTFArray, 13);
    var$5 = var$4.data;
    var$5[0] = $this.$getBuffers();
    var$5[1] = $this.$getBufferViews();
    var$5[2] = $this.$getAccessors0();
    var$5[3] = $this.$getSamplers();
    var$5[4] = $this.$getImages();
    var$5[5] = $this.$getTextures0();
    var$5[6] = $this.$getMaterials();
    var$5[7] = $this.$getMeshes();
    var$5[8] = $this.$getNodes();
    var$5[9] = $this.$getSkins0();
    var$5[10] = $this.$getAnimations();
    var$5[11] = $this.$getScenes();
    var$5[12] = $this.$getCameras0();
    $this.$arrays = kc_CollectionsKt__CollectionsKt_arrayListOf(var$4);
    $this.$extra0 = ju_HashMap__init_();
    $this.$mainSceneIndex = (-1);
    $this.$name28 = $rt_s(6);
}
function oktgg_GLTF__init_3($this, $file, $sourceType, $directory) {
    oktgg_GLTF_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($file, $rt_s(282));
    kji_Intrinsics_checkParameterIsNotNull($sourceType, $rt_s(1022));
    kji_Intrinsics_checkParameterIsNotNull($directory, $rt_s(1023));
    oktgg_GLTF__init_1($this, $file, $sourceType, $directory);
}
function oktgg_GLTF__init_(var$0, var$1, var$2, var$3, var$4, var$5) {
    oktgg_GLTF_$callClinit();
    if (var$4 & 2) {
        var$2 = var$1.$getExtension0();
        if (var$2 === null)
            $rt_throw(k_TypeCastException__init_($rt_s(384)));
        var$2 = var$2.$toLowerCase1();
        kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(1025));
        if (!kji_Intrinsics_areEqual(var$2, $rt_s(1026))) {
            oktgg_GLTFSourceType_$callClinit();
            var$2 = oktgg_GLTFSourceType_GLTFFile;
        } else {
            oktgg_GLTFSourceType_$callClinit();
            var$2 = oktgg_GLTFSourceType_GLBFile;
        }
    }
    if (var$4 & 4)
        var$3 = var$1.$parent0();
    oktgg_GLTF__init_3(var$0, var$1, var$2, var$3);
}
function oktgg_GLTF__clinit_() {
    oktgg_GLTF_Companion = oktgg_GLTF$Companion__init_1(null);
    oktgg_GLTF_DefaultTextureMinFilter = 9987;
    oktgg_GLTF_DefaultTextureMagFilter = 9729;
}
function oktgg_GLTF_access$getDefaultTextureMinFilter$cp() {
    oktgg_GLTF_$callClinit();
    return oktgg_GLTF_DefaultTextureMinFilter;
}
function oktgg_GLTF_access$getDefaultTextureMagFilter$cp() {
    oktgg_GLTF_$callClinit();
    return oktgg_GLTF_DefaultTextureMagFilter;
}
function oktsg_VertexNode() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$aPositionName = null;
    a.$aNormalName = null;
    a.$aTangentName = null;
    a.$aBonesName = null;
    a.$aBoneWeightsName = null;
    a.$position6 = null;
    a.$normal1 = null;
    a.$tbn = null;
    a.$bonesTemp = null;
    a.$maxBones = 0;
    a.$worldTransformType = 0;
    a.$bonesSetsNum = 0;
}
var oktsg_VertexNode_InputForm = null;
var oktsg_VertexNode_Companion = null;
function oktsg_VertexNode_$callClinit() {
    oktsg_VertexNode_$callClinit = $rt_eraseClinit(oktsg_VertexNode);
    oktsg_VertexNode__clinit_();
}
function oktsg_VertexNode__init_0(var_0, var_1, var_2) {
    var var_3 = new oktsg_VertexNode();
    oktsg_VertexNode__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktsg_VertexNode__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktsg_VertexNode();
    oktsg_VertexNode__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktsg_VertexNode__init_3() {
    var var_0 = new oktsg_VertexNode();
    oktsg_VertexNode__init_4(var_0);
    return var_0;
}
function oktsg_VertexNode_setAPositionName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$aPositionName = $_set___;
}
function oktsg_VertexNode_setANormalName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$aNormalName = $_set___;
}
function oktsg_VertexNode_setATangentName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$aTangentName = $_set___;
}
function oktsg_VertexNode_setABonesName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$aBonesName = $_set___;
}
function oktsg_VertexNode_setABoneWeightsName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$aBoneWeightsName = $_set___;
}
function oktsg_VertexNode_getPosition($this) {
    return $this.$position6;
}
function oktsg_VertexNode_getNormal($this) {
    return $this.$normal1;
}
function oktsg_VertexNode_getTbn($this) {
    return $this.$tbn;
}
function oktsg_VertexNode_getUBoneMatricesName($this) {
    return jl_StringBuilder__init_().$append($rt_s(1027)).$append1(oktsg_VertexNode_getUid($this)).$toString();
}
function oktsg_VertexNode_getUWorldMatrix($this) {
    return jl_StringBuilder__init_().$append($rt_s(1028)).$append1(oktsg_VertexNode_getUid($this)).$toString();
}
function oktsg_VertexNode_getHasBones($this) {
    return $this.$maxBones > 0 && $this.$bonesSetsNum > 0 ? 1 : 0;
}
function oktsg_VertexNode_getUid($this) {
    return 0;
}
function oktsg_VertexNode_shaderCompiled($this) {
    var $bonesTempNewSize;
    $bonesTempNewSize = $this.$maxBones * 16 | 0;
    if ($this.$bonesTemp.data.length != $bonesTempNewSize)
        $this.$bonesTemp = $rt_createFloatArray($bonesTempNewSize);
}
function oktsg_VertexNode_boneInfluenceCode($this, $component, $bonesName, $weightsName, $sumName) {
    return jl_StringBuilder__init_().$append($rt_s(1029)).$append($weightsName).$append12(46).$append($component).$append($rt_s(1030)).$append($sumName).$append($rt_s(1031)).$append($weightsName).$append12(46).$append($component).$append($rt_s(1032)).$append(oktsg_VertexNode_getUBoneMatricesName($this)).$append($rt_s(1033)).$append($bonesName).$append12(46).$append($component).$append($rt_s(1034)).$toString();
}
function oktsg_VertexNode_skinningSetCode($this, $out, $bonesName, $weightsName, $sumName) {
    $out.$append(oktsg_VertexNode_boneInfluenceCode($this, $rt_s(349), $bonesName, $weightsName, $sumName));
    $out.$append(oktsg_VertexNode_boneInfluenceCode($this, $rt_s(350), $bonesName, $weightsName, $sumName));
    $out.$append(oktsg_VertexNode_boneInfluenceCode($this, $rt_s(351), $bonesName, $weightsName, $sumName));
    $out.$append(oktsg_VertexNode_boneInfluenceCode($this, $rt_s(101), $bonesName, $weightsName, $sumName));
}
function oktsg_VertexNode_prepareObjectData($this, $obj) {
    var $armature, $matrices, var$4, $bonesTemp, $i, var$7, $floatOffset, $values, $j;
    kji_Intrinsics_checkParameterIsNotNull($obj, $rt_s(329));
    oktsg_ShaderNode_prepareObjectData($this, $obj);
    $this.$getShader().$set12(oktsg_VertexNode_getUWorldMatrix($this), $obj.$getWorldMatrix());
    $armature = $obj.$getArmature();
    if ($armature !== null) {
        $matrices = $armature.$getBoneMatrices();
        var$4 = $matrices.data;
        $bonesTemp = $this.$bonesTemp;
        $i = 0;
        var$7 = var$4.length;
        while ($i < var$7) {
            $floatOffset = $i * 16 | 0;
            $values = var$4[$i].$getValues();
            $j = 0;
            while ($j < 16) {
                $bonesTemp.data[$floatOffset + $j | 0] = $values.data[$j];
                $j = $j + 1 | 0;
            }
            $i = $i + 1 | 0;
        }
        okts_IShader$DefaultImpls_setMatrix4$default($this.$getShader(), oktsg_VertexNode_getUBoneMatricesName($this), $bonesTemp, 0, var$7 * 16 | 0, 4, null);
    }
}
function oktsg_VertexNode_mat4ToMat3($this, $mat4) {
    return jl_StringBuilder__init_().$append($rt_s(1035)).$append($mat4).$append($rt_s(1036)).$append($mat4).$append($rt_s(1037)).$append($mat4).$append($rt_s(1038)).$toString();
}
function oktsg_VertexNode_executionVert($this, $out) {
    var $pos, $skinningName, $aBonesName, $aBoneWeightsName, $i, var$7, $index, $aTangentName, $aNormalName, $normalRef, $tbnRef;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if ($this.$position6.$isUsed0()) {
        $pos = jl_StringBuilder__init_().$append($rt_s(608)).$append1(oktsg_VertexNode_getUid($this)).$toString();
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1039)).$append($pos).$append($rt_s(1040)).$append($this.$aPositionName).$append($rt_s(1041)).$toString());
        $skinningName = $rt_s(1042);
        if (oktsg_VertexNode_getHasBones($this)) {
            $aBonesName = $this.$aBonesName;
            $aBoneWeightsName = $this.$aBoneWeightsName;
            $i = 0;
            var$7 = $this.$bonesSetsNum;
            while ($i < var$7) {
                $index = jl_String_valueOf1($i);
                oktsg_VertexNode_skinningSetCode($this, $out, jl_StringBuilder__init_().$append($aBonesName).$append($index).$toString(), jl_StringBuilder__init_().$append($aBoneWeightsName).$append($index).$toString(), $skinningName);
                $i = $i + 1 | 0;
            }
            $out.$append(jl_StringBuilder__init_().$append($pos).$append($rt_s(331)).$append($skinningName).$append($rt_s(1032)).$append($pos).$append($rt_s(330)).$toString());
        }
        a: {
            switch ($this.$worldTransformType) {
                case 1:
                    break;
                case 2:
                    $out.$append(jl_StringBuilder__init_().$append($pos).$append($rt_s(1043)).$append($pos).$append($rt_s(1044)).$append1(oktsg_VertexNode_getUid($this)).$append($rt_s(1045)).$toString());
                    break a;
                case 3:
                    $out.$append(jl_StringBuilder__init_().$append($pos).$append($rt_s(1043)).$append($pos).$append($rt_s(1046)).$append1(oktsg_VertexNode_getUid($this)).$append($rt_s(1047)).$append1(oktsg_VertexNode_getUid($this)).$append($rt_s(1045)).$toString());
                    break a;
                case 4:
                    break a;
                case 5:
                    $out.$append(jl_StringBuilder__init_().$append($pos).$append($rt_s(1048)).$append1(oktsg_VertexNode_getUid($this)).$append($rt_s(1049)).$append1(oktsg_VertexNode_getUid($this)).$append($rt_s(1050)).$append1(oktsg_VertexNode_getUid($this)).$append($rt_s(1045)).$toString());
                    break a;
                default:
                    break a;
            }
            $out.$append(jl_StringBuilder__init_().$append($pos).$append($rt_s(331)).$append(oktsg_VertexNode_getUWorldMatrix($this)).$append($rt_s(1032)).$append($pos).$append($rt_s(330)).$toString());
        }
        $out.$append(jl_StringBuilder__init_().$append($this.$position6.$getRef0()).$append($rt_s(331)).$append($pos).$append($rt_s(1045)).$toString());
        if (!(!$this.$normal1.$isUsed0() && !$this.$tbn.$isUsed0())) {
            $aTangentName = $this.$aTangentName;
            $aNormalName = $this.$aNormalName;
            $normalRef = $this.$normal1.$getRef0();
            $tbnRef = $this.$tbn.$getRef0();
            if (oktsg_VertexNode_getHasBones($this)) {
                $out.$append(jl_StringBuilder__init_().$append($rt_s(1051)).$append(oktsg_VertexNode_mat4ToMat3($this, $skinningName)).$append($rt_s(330)).$toString());
                $out.$append(jl_StringBuilder__init_().$append($normalRef).$append($rt_s(1052)).$append($aNormalName).$append($rt_s(1053)).$toString());
                if ($this.$tbn.$isUsed0()) {
                    $out.$append(jl_StringBuilder__init_().$append($rt_s(1054)).$append($aTangentName).$append($rt_s(1055)).$toString());
                    $out.$append(jl_StringBuilder__init_().$append($rt_s(1056)).$append($normalRef).$append($rt_s(1057)).$append($aTangentName).$append($rt_s(1058)).$toString());
                    $out.$append(jl_StringBuilder__init_().$append($tbnRef).$append($rt_s(1059)).$append($normalRef).$append($rt_s(1053)).$toString());
                }
            } else if ($this.$worldTransformType != 1) {
                $out.$append(jl_StringBuilder__init_().$append($normalRef).$append($rt_s(331)).$append($aNormalName).$append($rt_s(330)).$toString());
                if ($this.$tbn.$isUsed0()) {
                    $out.$append(jl_StringBuilder__init_().$append($rt_s(1060)).$append($aTangentName).$append($rt_s(1045)).$toString());
                    $out.$append(jl_StringBuilder__init_().$append($rt_s(1056)).$append($normalRef).$append($rt_s(1057)).$append($aTangentName).$append($rt_s(1058)).$toString());
                    $out.$append(jl_StringBuilder__init_().$append($tbnRef).$append($rt_s(1059)).$append($normalRef).$append($rt_s(1053)).$toString());
                }
            } else {
                $out.$append(jl_StringBuilder__init_().$append($rt_s(1051)).$append(oktsg_VertexNode_mat4ToMat3($this, oktsg_VertexNode_getUWorldMatrix($this))).$append($rt_s(330)).$toString());
                $out.$append(jl_StringBuilder__init_().$append($normalRef).$append($rt_s(1052)).$append($aNormalName).$append($rt_s(1053)).$toString());
                if ($this.$tbn.$isUsed0()) {
                    $out.$append(jl_StringBuilder__init_().$append($rt_s(1054)).$append($aTangentName).$append($rt_s(1055)).$toString());
                    $out.$append(jl_StringBuilder__init_().$append($rt_s(1056)).$append($normalRef).$append($rt_s(1057)).$append($aTangentName).$append($rt_s(1058)).$toString());
                    $out.$append(jl_StringBuilder__init_().$append($tbnRef).$append($rt_s(1059)).$append($normalRef).$append($rt_s(1053)).$toString());
                }
            }
        }
    }
}
function oktsg_VertexNode_declarationFrag($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if ($this.$position6.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append($rt_s(1061)).$append($this.$position6.$getRef0()).$append($rt_s(330)).$toString());
    if ($this.$normal1.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append($rt_s(1061)).$append($this.$normal1.$getRef0()).$append($rt_s(330)).$toString());
    if ($this.$tbn.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append($rt_s(1062)).$append($this.$tbn.$getRef0()).$append($rt_s(330)).$toString());
}
function oktsg_VertexNode_declarationVert($this, $out) {
    var var$2, $i, var$4;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if ($this.$position6.$isUsed0()) {
        a: {
            $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getAttribute($this)).$append($rt_s(1061)).$append($this.$aPositionName).$append($rt_s(330)).$toString());
            $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append($rt_s(1061)).$append($this.$position6.$getRef0()).$append($rt_s(330)).$toString());
            switch ($this.$worldTransformType) {
                case 1:
                    break;
                case 2:
                    $out.$append(jl_StringBuilder__init_().$append($rt_s(1063)).$append1(oktsg_VertexNode_getUid($this)).$append($rt_s(330)).$toString());
                    break a;
                case 3:
                    $out.$append(jl_StringBuilder__init_().$append($rt_s(1064)).$append1(oktsg_VertexNode_getUid($this)).$append($rt_s(330)).$toString());
                    break a;
                case 4:
                    break a;
                case 5:
                    var$2 = jl_StringBuilder__init_().$append($rt_s(1065));
                    var$2 = var$2.$append1(oktsg_VertexNode_getUid($this)).$append($rt_s(1066)).$toString();
                    $out.$append(var$2);
                    break a;
                default:
                    break a;
            }
            $out.$append(jl_StringBuilder__init_().$append($rt_s(1067)).$append(oktsg_VertexNode_getUWorldMatrix($this)).$append($rt_s(330)).$toString());
        }
        b: {
            if (oktsg_VertexNode_getHasBones($this)) {
                $out.$append(jl_StringBuilder__init_().$append($rt_s(1067)).$append(oktsg_VertexNode_getUBoneMatricesName($this)).$append12(91).$append1($this.$maxBones).$append($rt_s(1068)).$toString());
                $out.$append($rt_s(1069));
                $i = 0;
                var$4 = $this.$bonesSetsNum;
                while (true) {
                    if ($i >= var$4)
                        break b;
                    $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getAttribute($this)).$append($rt_s(1070)).$append($this.$aBonesName).$append1($i).$append($rt_s(330)).$toString());
                    $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getAttribute($this)).$append($rt_s(1070)).$append($this.$aBoneWeightsName).$append1($i).$append($rt_s(330)).$toString());
                    $i = $i + 1 | 0;
                }
            }
        }
        if (!(!$this.$normal1.$isUsed0() && !$this.$tbn.$isUsed0())) {
            $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getAttribute($this)).$append($rt_s(1061)).$append($this.$aNormalName).$append($rt_s(330)).$toString());
            $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append($rt_s(1061)).$append($this.$normal1.$getRef0()).$append($rt_s(330)).$toString());
            $out.$append($rt_s(1071));
            if ($this.$tbn.$isUsed0()) {
                $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getAttribute($this)).$append($rt_s(1070)).$append($this.$aTangentName).$append($rt_s(330)).$toString());
                $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append($rt_s(1062)).$append($this.$tbn.$getRef0()).$append($rt_s(330)).$toString());
            }
        }
    }
}
function oktsg_VertexNode_setMaxBones($this, $_set___) {
    $this.$maxBones = $_set___;
}
function oktsg_VertexNode_setWorldTransformType($this, $_set___) {
    $this.$worldTransformType = $_set___;
}
function oktsg_VertexNode__init_1($this, $maxBones, $worldTransformType, $bonesSetsNum) {
    oktsg_VertexNode_$callClinit();
    oktsg_ShaderNode__init_0($this);
    $this.$maxBones = $maxBones;
    $this.$worldTransformType = $worldTransformType;
    $this.$bonesSetsNum = $bonesSetsNum;
    $this.$aPositionName = $rt_s(543);
    $this.$aNormalName = $rt_s(854);
    $this.$aTangentName = $rt_s(855);
    $this.$aBonesName = $rt_s(886);
    $this.$aBoneWeightsName = $rt_s(887);
    $this.$position6 = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec3__init_($rt_s(53)));
    $this.$normal1 = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec3__init_($rt_s(291)));
    $this.$tbn = oktsg_ShaderNode_defOut($this, oktsg_GLSLMat3__init_($rt_s(1072)));
    $this.$bonesTemp = $rt_createFloatArray($this.$maxBones * 16 | 0);
}
function oktsg_VertexNode__init_2(var$0, var$1, var$2, var$3, var$4, var$5) {
    oktsg_VertexNode_$callClinit();
    if (var$4 & 1)
        var$1 = 0;
    if (var$4 & 2)
        var$2 = 1;
    if (var$4 & 4)
        var$3 = 1;
    oktsg_VertexNode__init_1(var$0, var$1, var$2, var$3);
}
function oktsg_VertexNode__init_4(var$0) {
    oktsg_VertexNode_$callClinit();
    oktsg_VertexNode__init_2(var$0, 0, 0, 0, 7, null);
}
function oktsg_VertexNode__clinit_() {
    oktsg_VertexNode_Companion = oktsg_VertexNode$Companion__init_1(null);
    oktsg_VertexNode_InputForm = ju_HashMap__init_();
}
function ju_RandomAccess() {
}
function ju_ArrayList() {
    var a = this; ju_AbstractList.call(a);
    a.$array3 = null;
    a.$size5 = 0;
}
function ju_ArrayList__init_() {
    var var_0 = new ju_ArrayList();
    ju_ArrayList__init_2(var_0);
    return var_0;
}
function ju_ArrayList__init_1(var_0) {
    var var_1 = new ju_ArrayList();
    ju_ArrayList__init_3(var_1, var_0);
    return var_1;
}
function ju_ArrayList__init_0(var_0) {
    var var_1 = new ju_ArrayList();
    ju_ArrayList__init_4(var_1, var_0);
    return var_1;
}
function ju_ArrayList__init_2($this) {
    ju_ArrayList__init_3($this, 10);
}
function ju_ArrayList__init_3($this, $initialCapacity) {
    ju_AbstractList__init_0($this);
    $this.$array3 = $rt_createArray(jl_Object, $initialCapacity);
}
function ju_ArrayList__init_4($this, $c) {
    var $iter, $i;
    ju_ArrayList__init_3($this, $c.$size());
    $iter = $c.$iterator();
    $i = 0;
    while ($i < $this.$array3.data.length) {
        $this.$array3.data[$i] = $iter.$next();
        $i = $i + 1 | 0;
    }
    $this.$size5 = $this.$array3.data.length;
}
function ju_ArrayList_ensureCapacity($this, $minCapacity) {
    var $newLength, var$3;
    if ($this.$array3.data.length < $minCapacity) {
        if ($this.$array3.data.length >= 1073741823)
            $newLength = 2147483647;
        else {
            var$3 = $this.$array3.data.length * 2 | 0;
            $newLength = jl_Math_max($minCapacity, jl_Math_max(var$3, 5));
        }
        $this.$array3 = ju_Arrays_copyOf2($this.$array3, $newLength);
    }
}
function ju_ArrayList_get($this, $index) {
    ju_ArrayList_checkIndex($this, $index);
    return $this.$array3.data[$index];
}
function ju_ArrayList_size($this) {
    return $this.$size5;
}
function ju_ArrayList_set($this, $index, $element) {
    var $old;
    ju_ArrayList_checkIndex($this, $index);
    $old = $this.$array3.data[$index];
    $this.$array3.data[$index] = $element;
    return $old;
}
function ju_ArrayList_add($this, $element) {
    var var$2, var$3;
    $this.$ensureCapacity($this.$size5 + 1 | 0);
    var$2 = $this.$array3.data;
    var$3 = $this.$size5;
    $this.$size5 = var$3 + 1 | 0;
    var$2[var$3] = $element;
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
    return 1;
}
function ju_ArrayList_add0($this, $index, $element) {
    var $i;
    ju_ArrayList_checkIndexForAdd($this, $index);
    $this.$ensureCapacity($this.$size5 + 1 | 0);
    $i = $this.$size5;
    while ($i > $index) {
        $this.$array3.data[$i] = $this.$array3.data[$i - 1 | 0];
        $i = $i + (-1) | 0;
    }
    $this.$array3.data[$index] = $element;
    $this.$size5 = $this.$size5 + 1 | 0;
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
}
function ju_ArrayList_remove($this, $i) {
    var $old, var$3, var$4, $i_0;
    ju_ArrayList_checkIndex($this, $i);
    $old = $this.$array3.data[$i];
    $this.$size5 = $this.$size5 - 1 | 0;
    while ($i < $this.$size5) {
        var$3 = $this.$array3.data;
        var$4 = $this.$array3.data;
        $i_0 = $i + 1 | 0;
        var$3[$i] = var$4[$i_0];
        $i = $i_0;
    }
    $this.$array3.data[$this.$size5] = null;
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
    return $old;
}
function ju_ArrayList_remove0($this, $o) {
    var $index;
    $index = $this.$indexOf5($o);
    if ($index < 0)
        return 0;
    $this.$remove($index);
    return 1;
}
function ju_ArrayList_clear($this) {
    ju_Arrays_fill6($this.$array3, 0, $this.$size5, null);
    $this.$size5 = 0;
}
function ju_ArrayList_checkIndex($this, $index) {
    if ($index >= 0 && $index < $this.$size5)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function ju_ArrayList_checkIndexForAdd($this, $index) {
    if ($index >= 0 && $index <= $this.$size5)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function oktgg_GLTFArray() {
    var a = this; ju_ArrayList.call(a);
    a.$ready1 = null;
    a.$requests = null;
    a.$name29 = null;
}
function oktgg_GLTFArray__init_(var_0) {
    var var_1 = new oktgg_GLTFArray();
    oktgg_GLTFArray__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFArray_getReady($this) {
    return $this.$ready1;
}
function oktgg_GLTFArray_getRequests($this) {
    return $this.$requests;
}
function oktgg_GLTFArray_getName($this) {
    return $this.$name29;
}
function oktgg_GLTFArray__init_0($this, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    ju_ArrayList__init_2($this);
    $this.$name29 = $name;
    $this.$ready1 = ju_HashSet__init_();
    $this.$requests = ju_ArrayList__init_();
}
function oktgg_GLTFArray_getSize(var$0) {
    return ju_ArrayList_size(var$0);
}
function oktgg_GLTFArray_size(var$0) {
    return oktgg_GLTFArray_getSize(var$0);
}
function oktgg_GLTFArray_getOrWait($this, $index, $call) {
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktgg_IGLTFArray$DefaultImpls_getOrWait($this, $index, $call);
}
function oktgg_GLTFArray_ready($this, $index) {
    oktgg_IGLTFArray$DefaultImpls_ready($this, $index);
}
function oktgg_GLTFAnimation$read$1$1() {
    kji_Lambda.call(this);
    this.$this$0123 = null;
}
function oktgg_GLTFAnimation$read$1$1__init_(var_0) {
    var var_1 = new oktgg_GLTFAnimation$read$1$1();
    oktgg_GLTFAnimation$read$1$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFAnimation$read$1$1_invoke(var$0, var$1) {
    oktgg_GLTFAnimation$read$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAnimation$read$1$1_invoke0($this, $$this$objs) {
    var var$2, var$3;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    var$2 = $this.$this$0123.$$animationSamplers0;
    var$3 = oktgg_GLTFAnimationSampler__init_1(0, null, 0, 7, null);
    oktgg_GLTFAnimationSampler_read(var$3, $$this$objs);
    var$2.$add1(var$3);
}
function oktgg_GLTFAnimation$read$1$1__init_0(var$0, var$1) {
    var$0.$this$0123 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function ooo_DMassC() {
}
function oooi_DxCapsule$CollideCapsuleSphere() {
    jl_Object.call(this);
}
function oooi_DxCapsule$CollideCapsuleSphere__init_() {
    var var_0 = new oooi_DxCapsule$CollideCapsuleSphere();
    oooi_DxCapsule$CollideCapsuleSphere__init_0(var_0);
    return var_0;
}
function oooi_DxCapsule$CollideCapsuleSphere__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxCapsule$CollideCapsuleSphere_dCollideCapsuleSphere($this, $o1, $o2, $flags, $contacts, $skip) {
    var var$6, $alpha, $lz2, $p;
    oooi_Common_dIASSERT($skip != 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    ooo_DContactGeomBuffer_get($contacts, 0).$g1 = $o1;
    ooo_DContactGeomBuffer_get($contacts, 0).$g2 = $o2;
    ooo_DContactGeomBuffer_get($contacts, 0).$side1 = (-1);
    ooo_DContactGeomBuffer_get($contacts, 0).$side2 = (-1);
    var$6 = $o1.$final_posr().$R().$get02() * ($o2.$final_posr().$pos().$get01() - $o1.$final_posr().$pos().$get01());
    var$6 = var$6 + $o1.$final_posr().$R().$get12() * ($o2.$final_posr().$pos().$get10() - $o1.$final_posr().$pos().$get10());
    $alpha = var$6 + $o1.$final_posr().$R().$get22() * ($o2.$final_posr().$pos().$get20() - $o1.$final_posr().$pos().$get20());
    $lz2 = oooi_DxCapsule_access$000($o1) * 0.5;
    if ($alpha > $lz2)
        $alpha = $lz2;
    var$6 =  -$lz2;
    if ($alpha >= var$6)
        var$6 = $alpha;
    $p = oom_DVector3__init_();
    oom_DVector3_eqSum0($p, $o1.$final_posr().$pos(), $o1.$final_posr().$R().$columnAsNewVector(2), var$6);
    return oooi_DxCollisionUtil_dCollideSpheres($p, oooi_DxCapsule_access$100($o1), $o2.$final_posr().$pos(), $o2.$getRadius(), $contacts);
}
function oooi_DxCapsule$CollideCapsuleSphere_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideCapsuleSphere($o1, $o2, $flags, $contacts, 1);
}
function okttp_TrimeshShapeTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$control4 = null;
    a.$$world0 = null;
    a.$$shader8 = null;
    a.$$static = null;
    a.$$tmp0 = null;
    a.$$plane3 = null;
    a.$$dynamic0 = null;
    a.$$mesh2 = null;
}
function okttp_TrimeshShapeTest$testMain$1__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new okttp_TrimeshShapeTest$testMain$1();
    okttp_TrimeshShapeTest$testMain$1__init_0(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function okttp_TrimeshShapeTest$testMain$1_invoke(var$0) {
    okttp_TrimeshShapeTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttp_TrimeshShapeTest$testMain$1_invoke0($this) {
    var var$1;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$control4;
    okt_APP_$callClinit();
    var$1.$update(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    $this.$$world0.$step(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    $this.$$shader8.$bind();
    $this.$$shader8.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $this.$$shader8.$set12($rt_s(563), $this.$$static.$getWorldTransform($this.$$tmp0));
    oktm_IMesh$DefaultImpls_render$default($this.$$plane3, $this.$$shader8, 0, 0, 0, 0, 30, null);
    $this.$$shader8.$set12($rt_s(563), $this.$$dynamic0.$getWorldTransform($this.$$tmp0));
    oktm_IMesh$DefaultImpls_render$default($this.$$mesh2, $this.$$shader8, 0, 0, 0, 0, 30, null);
}
function okttp_TrimeshShapeTest$testMain$1__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    var$0.$$control4 = var$1;
    var$0.$$world0 = var$2;
    var$0.$$shader8 = var$3;
    var$0.$$static = var$4;
    var$0.$$tmp0 = var$5;
    var$0.$$plane3 = var$6;
    var$0.$$dynamic0 = var$7;
    var$0.$$mesh2 = var$8;
    kji_Lambda__init_0(var$0, 0);
}
function ju_LinkedList$Entry() {
    var a = this; jl_Object.call(a);
    a.$item = null;
    a.$next4 = null;
    a.$previous = null;
}
function ju_LinkedList$Entry__init_() {
    var var_0 = new ju_LinkedList$Entry();
    ju_LinkedList$Entry__init_0(var_0);
    return var_0;
}
function ju_LinkedList$Entry__init_0($this) {
    jl_Object__init_0($this);
}
function oktm_IMesh() {
}
var oktm_IMesh_Companion = null;
function oktm_IMesh_$callClinit() {
    oktm_IMesh_$callClinit = $rt_eraseClinit(oktm_IMesh);
    oktm_IMesh__clinit_();
}
function oktm_IMesh__clinit_() {
    oktm_IMesh$Companion_$callClinit();
    oktm_IMesh_Companion = oktm_IMesh$Companion_$$INSTANCE;
}
function oktm_Mesh() {
    var a = this; jl_Object.call(a);
    a.$name30 = null;
    a.$vertices0 = null;
    a.$indices = null;
    a.$material0 = null;
    a.$instances = null;
    a.$primitiveType = 0;
}
function oktm_Mesh__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktm_Mesh();
    oktm_Mesh__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktm_Mesh__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktm_Mesh();
    oktm_Mesh__init_2(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function oktm_Mesh__init_3() {
    var var_0 = new oktm_Mesh();
    oktm_Mesh__init_4(var_0);
    return var_0;
}
function oktm_Mesh_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name30 = $_set___;
}
function oktm_Mesh_getVertices($this) {
    return $this.$vertices0;
}
function oktm_Mesh_setVertices($this, $_set___) {
    $this.$vertices0 = $_set___;
}
function oktm_Mesh_getIndices($this) {
    return $this.$indices;
}
function oktm_Mesh_setIndices($this, $_set___) {
    $this.$indices = $_set___;
}
function oktm_Mesh_getMaterial($this) {
    return $this.$material0;
}
function oktm_Mesh_setMaterial($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$material0 = $_set___;
}
function oktm_Mesh_getInstances($this) {
    return $this.$instances;
}
function oktm_Mesh_setInstances($this, $_set___) {
    $this.$instances = $_set___;
}
function oktm_Mesh_getPrimitiveType($this) {
    return $this.$primitiveType;
}
function oktm_Mesh_setPrimitiveType($this, $_set___) {
    $this.$primitiveType = $_set___;
}
function oktm_Mesh__init_0($this, $vertices, $indices, $material, $instances, $primitiveType) {
    kji_Intrinsics_checkParameterIsNotNull($material, $rt_s(1073));
    jl_Object__init_0($this);
    $this.$vertices0 = $vertices;
    $this.$indices = $indices;
    $this.$material0 = $material;
    $this.$instances = $instances;
    $this.$primitiveType = $primitiveType;
    $this.$name30 = $rt_s(6);
}
function oktm_Mesh__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$6 & 1)
        var$1 = null;
    if (var$6 & 2)
        var$2 = null;
    if (var$6 & 4)
        var$3 = oktg_Material__init_(null, null, 0.0, 0.0, 0.0, 0, 0, 0, 0, null, null, 2047, null);
    if (var$6 & 8)
        var$4 = null;
    if (var$6 & 16)
        var$5 = 4;
    oktm_Mesh__init_0(var$0, var$1, var$2, var$3, var$4, var$5);
}
function oktm_Mesh__init_4(var$0) {
    oktm_Mesh__init_2(var$0, null, null, null, null, 0, 31, null);
}
function oktm_Mesh_bind($this, $shader) {
    kji_Intrinsics_checkParameterIsNotNull($shader, $rt_s(1074));
    oktm_IMesh$DefaultImpls_bind($this, $shader);
}
function oktm_Mesh_render($this, $shader, $primitiveType, $offset, $count, $bind) {
    kji_Intrinsics_checkParameterIsNotNull($shader, $rt_s(1074));
    oktm_IMesh$DefaultImpls_render($this, $shader, $primitiveType, $offset, $count, $bind);
}
function oktsg_ShaderNode$Companion() {
    jl_Object.call(this);
}
function oktsg_ShaderNode$Companion__init_0() {
    var var_0 = new oktsg_ShaderNode$Companion();
    oktsg_ShaderNode$Companion__init_1(var_0);
    return var_0;
}
function oktsg_ShaderNode$Companion__init_(var_0) {
    var var_1 = new oktsg_ShaderNode$Companion();
    oktsg_ShaderNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_ShaderNode$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function oktsg_ShaderNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_ShaderNode$Companion__init_1($this);
}
function oktm_IVertexBuffer$Companion$Build$1() {
    kji_Lambda.call(this);
}
var oktm_IVertexBuffer$Companion$Build$1_INSTANCE = null;
function oktm_IVertexBuffer$Companion$Build$1_$callClinit() {
    oktm_IVertexBuffer$Companion$Build$1_$callClinit = $rt_eraseClinit(oktm_IVertexBuffer$Companion$Build$1);
    oktm_IVertexBuffer$Companion$Build$1__clinit_();
}
function oktm_IVertexBuffer$Companion$Build$1__init_() {
    var var_0 = new oktm_IVertexBuffer$Companion$Build$1();
    oktm_IVertexBuffer$Companion$Build$1__init_0(var_0);
    return var_0;
}
function oktm_IVertexBuffer$Companion$Build$1_invoke(var$0, var$1, var$2, var$3, var$4) {
    return oktm_IVertexBuffer$Companion$Build$1_invoke0(var$0, var$1, var$2, var$3.$intValue(), var$4.$booleanValue());
}
function oktm_IVertexBuffer$Companion$Build$1_invoke0($this, $data, $inputs, $usage, $initGpuObjects) {
    kji_Intrinsics_checkParameterIsNotNull($data, $rt_s(1075));
    kji_Intrinsics_checkParameterIsNotNull($inputs, $rt_s(1076));
    return oktm_VertexBufferObject__init_($inputs, $data, 0, $usage, $initGpuObjects);
}
function oktm_IVertexBuffer$Companion$Build$1__init_0(var$0) {
    oktm_IVertexBuffer$Companion$Build$1_$callClinit();
    kji_Lambda__init_0(var$0, 4);
}
function oktm_IVertexBuffer$Companion$Build$1__clinit_() {
    oktm_IVertexBuffer$Companion$Build$1_INSTANCE = oktm_IVertexBuffer$Companion$Build$1__init_();
}
function okta_AL() {
    jl_Object.call(this);
}
var okta_AL_api = null;
var okta_AL_INSTANCE = null;
function okta_AL_$callClinit() {
    okta_AL_$callClinit = $rt_eraseClinit(okta_AL);
    okta_AL__clinit_();
}
function okta_AL__init_() {
    var var_0 = new okta_AL();
    okta_AL__init_0(var_0);
    return var_0;
}
function okta_AL_setApi($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    okta_AL_api = $_set___;
}
function okta_AL_newSound($this, $file) {
    kji_Intrinsics_checkParameterIsNotNull($file, $rt_s(282));
    return okta_AL_api.$newSound($file);
}
function okta_AL__init_0($this) {
    okta_AL_$callClinit();
    jl_Object__init_0($this);
}
function okta_AL__clinit_() {
    okta_AL_INSTANCE = okta_AL__init_();
    okta_AL_api = oktam_MockAudio__init_();
}
function oooig_GimTrimeshCapsuleCollision$GIM_CAPSULE_DATA() {
    var a = this; jl_Object.call(a);
    a.$m_radius = 0.0;
    a.$m_point1 = null;
    a.$m_point2 = null;
}
function oooig_GimTrimeshCapsuleCollision$GIM_CAPSULE_DATA__init_() {
    var var_0 = new oooig_GimTrimeshCapsuleCollision$GIM_CAPSULE_DATA();
    oooig_GimTrimeshCapsuleCollision$GIM_CAPSULE_DATA__init_0(var_0);
    return var_0;
}
function oooig_GimTrimeshCapsuleCollision$GIM_CAPSULE_DATA__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_point1 = oooig_GimGeometry$vec3f__init_();
    $this.$m_point2 = oooig_GimGeometry$vec3f__init_();
}
function oktgg_GLTFNode$read$6() {
    kji_Lambda.call(this);
    this.$this$0124 = null;
}
function oktgg_GLTFNode$read$6__init_(var_0) {
    var var_1 = new oktgg_GLTFNode$read$6();
    oktgg_GLTFNode$read$6__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFNode$read$6_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$6_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$6_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    oktgg_GLTFNode_getNode($this.$this$0124).$getScale0().$set44($$this$array.$float0(0), $$this$array.$float0(1), $$this$array.$float0(2));
}
function oktgg_GLTFNode$read$6__init_0(var$0, var$1) {
    var$0.$this$0124 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFNode$read$7() {
    kji_Lambda.call(this);
    this.$this$0125 = null;
}
function oktgg_GLTFNode$read$7__init_(var_0) {
    var var_1 = new oktgg_GLTFNode$read$7();
    oktgg_GLTFNode$read$7__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFNode$read$7_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$7_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$7_invoke0($this, $it) {
    oktgg_GLTFNode_getWeights($this.$this$0125).$add1(jl_Float_valueOf($it));
}
function oktgg_GLTFNode$read$7__init_0(var$0, var$1) {
    var$0.$this$0125 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jur_HangulDecomposedCharSet() {
    var a = this; jur_JointSet.call(a);
    a.$decomposedChar0 = null;
    a.$decomposedCharUTF160 = null;
    a.$decomposedCharLength0 = 0;
}
function jur_HangulDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_HangulDecomposedCharSet();
    jur_HangulDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_HangulDecomposedCharSet__init_0($this, $decomposedChar, $decomposedCharLength) {
    jur_JointSet__init_0($this);
    $this.$decomposedChar0 = $decomposedChar;
    $this.$decomposedCharLength0 = $decomposedCharLength;
}
function jur_HangulDecomposedCharSet_setNext($this, $next) {
    $this.$next0 = $next;
}
function jur_HangulDecomposedCharSet_getDecomposedChar($this) {
    if ($this.$decomposedCharUTF160 === null)
        $this.$decomposedCharUTF160 = jl_String__init_($this.$decomposedChar0);
    return $this.$decomposedCharUTF160;
}
function jur_HangulDecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, $syllIndex, $decompSyllable, $vIndex, $tIndex, var$9, $curSymb, $decompCurSymb, var$12, $i, var$14, $lIndex, var$16, var$17, var$18;
    $rightBound = $matchResult.$getRightBound();
    $syllIndex = 0;
    $decompSyllable = $rt_createIntArray(3);
    $vIndex = (-1);
    $tIndex = (-1);
    if ($strIndex >= $rightBound)
        return (-1);
    var$9 = $strIndex + 1 | 0;
    $curSymb = $testString.$charAt($strIndex);
    $decompCurSymb = jur_Lexer_getHangulDecomposition($curSymb);
    if ($decompCurSymb !== null) {
        var$12 = $decompCurSymb.data;
        $i = 0;
        if (var$12.length != $this.$decomposedCharLength0)
            return (-1);
        while (true) {
            if ($i >= $this.$decomposedCharLength0)
                return $this.$next0.$matches(var$9, $testString, $matchResult);
            if (var$12[$i] != $this.$decomposedChar0.data[$i])
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    var$14 = $decompSyllable.data;
    var$14[$syllIndex] = $curSymb;
    $lIndex = $curSymb - 4352 | 0;
    if ($lIndex >= 0 && $lIndex < 19) {
        if (var$9 < $rightBound) {
            $curSymb = $testString.$charAt(var$9);
            $vIndex = $curSymb - 4449 | 0;
        }
        if ($vIndex >= 0 && $vIndex < 21) {
            var$16 = var$9 + 1 | 0;
            var$14[1] = $curSymb;
            if (var$16 < $rightBound) {
                $curSymb = $testString.$charAt(var$16);
                $tIndex = $curSymb - 4519 | 0;
            }
            if ($tIndex >= 0 && $tIndex < 28) {
                var$17 = var$16 + 1 | 0;
                var$14[2] = $curSymb;
                if ($this.$decomposedCharLength0 == 3 && var$14[0] == $this.$decomposedChar0.data[0] && var$14[1] == $this.$decomposedChar0.data[1] && var$14[2] == $this.$decomposedChar0.data[2]) {
                    var$18 = $this.$next0;
                    var$17 = var$18.$matches(var$17, $testString, $matchResult);
                } else
                    var$17 = (-1);
                return var$17;
            }
            if ($this.$decomposedCharLength0 == 2 && var$14[0] == $this.$decomposedChar0.data[0] && var$14[1] == $this.$decomposedChar0.data[1]) {
                var$18 = $this.$next0;
                var$17 = var$18.$matches(var$16, $testString, $matchResult);
            } else
                var$17 = (-1);
            return var$17;
        }
        return (-1);
    }
    return (-1);
}
function jur_HangulDecomposedCharSet_first($this, $set) {
    var var$2, var$3;
    a: {
        if ($set instanceof jur_HangulDecomposedCharSet) {
            var$2 = $set;
            if (!jur_HangulDecomposedCharSet_getDecomposedChar(var$2).$equals0(jur_HangulDecomposedCharSet_getDecomposedChar($this))) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
}
function jur_HangulDecomposedCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function oktu_AsyncArrayList$Companion() {
    jl_Object.call(this);
}
function oktu_AsyncArrayList$Companion__init_() {
    var var_0 = new oktu_AsyncArrayList$Companion();
    oktu_AsyncArrayList$Companion__init_0(var_0);
    return var_0;
}
function oktu_AsyncArrayList$Companion__init_1(var_0) {
    var var_1 = new oktu_AsyncArrayList$Companion();
    oktu_AsyncArrayList$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktu_AsyncArrayList$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktu_AsyncArrayList$Companion__init_2($this, $$constructor_marker) {
    oktu_AsyncArrayList$Companion__init_0($this);
}
function oktgg_GLTFNode$read$4() {
    kji_Lambda.call(this);
    this.$this$0126 = null;
}
function oktgg_GLTFNode$read$4__init_(var_0) {
    var var_1 = new oktgg_GLTFNode$read$4();
    oktgg_GLTFNode$read$4__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFNode$read$4_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$4_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$4_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    oktgg_GLTFNode_getNode($this.$this$0126).$getPosition0().$set44($$this$array.$float0(0), $$this$array.$float0(1), $$this$array.$float0(2));
}
function oktgg_GLTFNode$read$4__init_0(var$0, var$1) {
    var$0.$this$0126 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFNode$read$5() {
    kji_Lambda.call(this);
    this.$this$0127 = null;
}
function oktgg_GLTFNode$read$5__init_(var_0) {
    var var_1 = new oktgg_GLTFNode$read$5();
    oktgg_GLTFNode$read$5__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFNode$read$5_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$5_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$5_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    oktgg_GLTFNode_getNode($this.$this$0127).$getRotation0().$set52($$this$array.$float0(0), $$this$array.$float0(1), $$this$array.$float0(2), $$this$array.$float0(3));
}
function oktgg_GLTFNode$read$5__init_0(var$0, var$1) {
    var$0.$this$0127 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFNode$read$2() {
    kji_Lambda.call(this);
    this.$this$0128 = null;
}
function oktgg_GLTFNode$read$2__init_(var_0) {
    var var_1 = new oktgg_GLTFNode$read$2();
    oktgg_GLTFNode$read$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFNode$read$2_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$2_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$2_invoke0($this, $childIndex) {
    oktgg_GLTFNode_getChildren($this.$this$0128).$add1(jl_Integer_valueOf($childIndex));
    oktgg_GLTFNode_getGltf($this.$this$0128).$getNodes1().$getOrWait0($childIndex, oktgg_GLTFNode$read$2$1__init_($this));
}
function oktgg_GLTFNode$read$2__init_0(var$0, var$1) {
    var$0.$this$0128 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFNode$read$3() {
    kji_Lambda.call(this);
    this.$this$061 = null;
}
function oktgg_GLTFNode$read$3__init_(var_0) {
    var var_1 = new oktgg_GLTFNode$read$3();
    oktgg_GLTFNode$read$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFNode$read$3_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$3_invoke0($this, $$this$array) {
    var $i;
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $i = kji_Ref$IntRef__init_();
    $i.$element = 0;
    $$this$array.$floats0(oktgg_GLTFNode$read$3$1__init_($this, $i));
}
function oktgg_GLTFNode$read$3__init_0(var$0, var$1) {
    var$0.$this$061 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktp_IPhys() {
}
function oktpo_OdePhys() {
    jl_Object.call(this);
}
function oktpo_OdePhys__init_() {
    var var_0 = new oktpo_OdePhys();
    oktpo_OdePhys__init_0(var_0);
    return var_0;
}
function oktpo_OdePhys_createWorld($this) {
    return oktpo_OdePhysicsWorld__init_();
}
function oktpo_OdePhys__init_0($this) {
    jl_Object__init_0($this);
    ooo_OdeConfig_setLibCCDEndabled(1);
    ooo_OdeHelper_initODE2(0);
}
function oktgg_GLTFNode$read$1() {
    kji_Lambda.call(this);
    this.$this$0129 = null;
}
function oktgg_GLTFNode$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFNode$read$1();
    oktgg_GLTFNode$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFNode$read$1_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    oktgg_GLTFNode_setName($this.$this$0129, $it);
    oktgg_GLTFNode_getNode($this.$this$0129).$setName($it);
}
function oktgg_GLTFNode$read$1__init_0(var$0, var$1) {
    var$0.$this$0129 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgc_ICamera$Companion() {
    jl_Object.call(this);
}
var oktgc_ICamera$Companion_tmpVec = null;
var oktgc_ICamera$Companion_Default = null;
var oktgc_ICamera$Companion_$$INSTANCE = null;
function oktgc_ICamera$Companion_$callClinit() {
    oktgc_ICamera$Companion_$callClinit = $rt_eraseClinit(oktgc_ICamera$Companion);
    oktgc_ICamera$Companion__clinit_();
}
function oktgc_ICamera$Companion__init_() {
    var var_0 = new oktgc_ICamera$Companion();
    oktgc_ICamera$Companion__init_0(var_0);
    return var_0;
}
function oktgc_ICamera$Companion_getDefault($this) {
    return oktgc_ICamera$Companion_Default;
}
function oktgc_ICamera$Companion__init_0($this) {
    oktgc_ICamera$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktgc_ICamera$Companion__clinit_() {
    var var$1;
    oktgc_ICamera$Companion_$$INSTANCE = oktgc_ICamera$Companion__init_();
    oktgc_ICamera$Companion_tmpVec = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    var$1 = oktgc_Camera__init_(null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null);
    oktgc_Camera_setName(var$1, $rt_s(1077));
    oktgc_ICamera$Companion_Default = var$1;
}
function oom_DVector3I() {
}
function oom_DVector3View() {
    jl_Object.call(this);
}
function oom_DVector3View__init_() {
    var var_0 = new oom_DVector3View();
    oom_DVector3View__init_0(var_0);
    return var_0;
}
function oom_DVector3View__init_0($this) {
    jl_Object__init_0($this);
}
function oom_DMatrix3$DVector3ColView() {
    var a = this; oom_DVector3View.call(a);
    a.$_column = 0;
    a.$this$0130 = null;
}
function oom_DMatrix3$DVector3ColView__init_(var_0, var_1) {
    var var_2 = new oom_DMatrix3$DVector3ColView();
    oom_DMatrix3$DVector3ColView__init_0(var_2, var_0, var_1);
    return var_2;
}
function oom_DMatrix3$DVector3ColView__init_0($this, $this$0, $c) {
    $this.$this$0130 = $this$0;
    oom_DVector3View__init_0($this);
    $this.$_column = $c;
}
function oom_DMatrix3$DVector3ColView_get0($this) {
    return oom_DMatrix3_access$000($this.$this$0130).data[$this.$_column];
}
function oom_DMatrix3$DVector3ColView_get1($this) {
    return oom_DMatrix3_access$000($this.$this$0130).data[4 + $this.$_column | 0];
}
function oom_DMatrix3$DVector3ColView_get2($this) {
    return oom_DMatrix3_access$000($this.$this$0130).data[8 + $this.$_column | 0];
}
function kji_Intrinsics() {
    jl_Object.call(this);
}
function kji_Intrinsics__init_() {
    var var_0 = new kji_Intrinsics();
    kji_Intrinsics__init_0(var_0);
    return var_0;
}
function kji_Intrinsics__init_0($this) {
    jl_Object__init_0($this);
}
function kji_Intrinsics_throwNpe() {
    $rt_throw(kji_Intrinsics_sanitizeStackTrace(k_KotlinNullPointerException__init_()));
}
function kji_Intrinsics_throwUninitializedProperty($message) {
    $rt_throw(kji_Intrinsics_sanitizeStackTrace(k_UninitializedPropertyAccessException__init_($message)));
}
function kji_Intrinsics_throwUninitializedPropertyAccessException($propertyName) {
    kji_Intrinsics_throwUninitializedProperty(jl_StringBuilder__init_().$append($rt_s(1078)).$append($propertyName).$append($rt_s(1079)).$toString());
}
function kji_Intrinsics_checkExpressionValueIsNotNull($value, $expression) {
    if ($value !== null)
        return;
    $rt_throw(kji_Intrinsics_sanitizeStackTrace(jl_IllegalStateException__init_(jl_StringBuilder__init_().$append($expression).$append($rt_s(1080)).$toString())));
}
function kji_Intrinsics_checkParameterIsNotNull($value, $paramName) {
    if ($value === null)
        kji_Intrinsics_throwParameterIsNullException($paramName);
}
function kji_Intrinsics_throwParameterIsNullException($paramName) {
    var $stackTraceElements, var$3, $caller, $className, $methodName, $exception;
    $stackTraceElements = jl_Thread_currentThread().$getStackTrace();
    var$3 = $stackTraceElements.data;
    $caller = var$3[3];
    $className = jl_StackTraceElement_getClassName($caller);
    $methodName = jl_StackTraceElement_getMethodName($caller);
    $exception = jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1081)).$append($className).$append($rt_s(718)).$append($methodName).$append($rt_s(1082)).$append($paramName).$toString());
    $rt_throw(kji_Intrinsics_sanitizeStackTrace($exception));
}
function kji_Intrinsics_compare($thisVal, $anotherVal) {
    var var$3;
    var$3 = $rt_compare($thisVal, $anotherVal);
    return var$3 < 0 ? (-1) : var$3 ? 1 : 0;
}
function kji_Intrinsics_areEqual($first, $second) {
    return $first !== null ? $first.$equals0($second) : $second !== null ? 0 : 1;
}
function kji_Intrinsics_sanitizeStackTrace($throwable) {
    return kji_Intrinsics_sanitizeStackTrace0($throwable, $rt_cls(kji_Intrinsics).$getName());
}
function kji_Intrinsics_sanitizeStackTrace0($throwable, $classNameToDrop) {
    var $stackTrace, var$4, $size, $lastIntrinsic, $i, $newStackTrace;
    $stackTrace = $throwable.$getStackTrace();
    var$4 = $stackTrace.data;
    $size = var$4.length;
    $lastIntrinsic = (-1);
    $i = 0;
    while ($i < $size) {
        if ($classNameToDrop.$equals0(jl_StackTraceElement_getClassName(var$4[$i])))
            $lastIntrinsic = $i;
        $i = $i + 1 | 0;
    }
    $newStackTrace = ju_Arrays_copyOfRange($stackTrace, $lastIntrinsic + 1 | 0, $size);
    $throwable.$setStackTrace($newStackTrace);
    return $throwable;
}
function oktsg_TextureNode() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$unit = null;
    a.$sampler0 = null;
    a.$color = null;
    a.$alpha = null;
    a.$texture0 = null;
    a.$sRGB = 0;
    a.$textureType = 0;
}
var oktsg_TextureNode_InputForm = null;
var oktsg_TextureNode_Companion = null;
function oktsg_TextureNode_$callClinit() {
    oktsg_TextureNode_$callClinit = $rt_eraseClinit(oktsg_TextureNode);
    oktsg_TextureNode__clinit_();
}
function oktsg_TextureNode__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktsg_TextureNode();
    oktsg_TextureNode__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktsg_TextureNode__init_0(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktsg_TextureNode();
    oktsg_TextureNode__init_2(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktsg_TextureNode__init_3() {
    var var_0 = new oktsg_TextureNode();
    oktsg_TextureNode__init_4(var_0);
    return var_0;
}
function oktsg_TextureNode_getUv($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(333));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_TextureNode_getColor($this) {
    return $this.$color;
}
function oktsg_TextureNode_prepareToBuild($this) {
    var var$1, var$2, var$3;
    oktsg_ShaderNode_prepareToBuild($this);
    var$1 = $this.$unit;
    var$2 = $this.$getShader();
    if (!$this.$color.$isUsed0())
        var$3 = 0;
    else {
        oktg_GL_$callClinit();
        var$3 = oktg_GL_grabTextureUnit(oktg_GL_INSTANCE);
    }
    var$1.$put3(var$2, jl_Integer_valueOf(var$3));
    $this.$alpha.$setInlineCode(jl_StringBuilder__init_().$append($this.$color.$getRef0()).$append($rt_s(1083)).$toString());
}
function oktsg_TextureNode_shaderCompiled($this) {
    var var$1, $u;
    var$1 = $this.$unit.$get0($this.$getShader());
    if (var$1 === null)
        var$1 = jl_Integer_valueOf(0);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(1084));
    $u = var$1.$intValue();
    $this.$getShader().$set35($this.$sampler0.$getRef0(), $u);
}
function oktsg_TextureNode_prepareToDrawMesh($this, $mesh) {
    var var$2, var$3;
    kji_Intrinsics_checkParameterIsNotNull($mesh, $rt_s(43));
    oktsg_ShaderNode_prepareToDrawMesh($this, $mesh);
    var$2 = $this.$texture0;
    if (var$2 !== null) {
        var$3 = $this.$unit.$get0($this.$getShader());
        if (var$3 === null)
            var$3 = jl_Integer_valueOf(0);
        var$2.$bind4(var$3.$intValue());
    }
}
function oktsg_TextureNode_declarationFrag($this, $out) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    var$2 = jl_StringBuilder__init_().$append($rt_s(1085));
    oktsg_GLSLType_$callClinit();
    $out.$append(var$2.$append(oktsg_GLSLType_getTypeName(oktsg_GLSLType_INSTANCE, $this.$textureType)).$append12(32).$append($this.$sampler0.$getRef0()).$append($rt_s(330)).$toString());
    $out.$append(jl_StringBuilder__init_().$append($this.$color.$getTypedRef0()).$append($rt_s(578)).$toString());
}
function oktsg_TextureNode_getSamplerAccessCode($this, $type) {
    var var$2;
    a: {
        if ($this.$getShader().$getVersion() >= 130)
            var$2 = $rt_s(861);
        else {
            switch ($type) {
                case 12:
                    break;
                case 13:
                    var$2 = $rt_s(1086);
                    break a;
                case 14:
                    var$2 = $rt_s(1087);
                    break a;
                default:
                    var$2 = $rt_s(861);
                    break a;
            }
            var$2 = $rt_s(1088);
        }
    }
    return var$2;
}
function oktsg_TextureNode_getCoordinates($this, $type) {
    var var$2;
    a: {
        b: {
            switch ($type) {
                case 12:
                    break;
                case 13:
                    break b;
                case 14:
                    var$2 = oktsg_TextureNode_getUv($this).$asVec3();
                    break a;
                default:
                    break b;
            }
            var$2 = oktsg_TextureNode_getUv($this).$asVec2();
            break a;
        }
        var$2 = oktsg_TextureNode_getUv($this).$getRef0();
    }
    return var$2;
}
function oktsg_TextureNode_executionFrag($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $out.$append(jl_StringBuilder__init_().$append($this.$color.$getRef0()).$append($rt_s(331)).$append(oktsg_TextureNode_getSamplerAccessCode($this, $this.$textureType)).$append12(40).$append($this.$sampler0.$getRef0()).$append($rt_s(268)).$append(oktsg_TextureNode_getCoordinates($this, $this.$textureType)).$append($rt_s(1053)).$toString());
    if ($this.$sRGB)
        $out.$append(jl_StringBuilder__init_().$append($this.$color.$getRef0()).$append($rt_s(1089)).$append($this.$color.$getRef0()).$append($rt_s(1090)).$toString());
}
function oktsg_TextureNode__init_1($this, $uv, $texture, $sRGB, $textureType) {
    var var$5;
    oktsg_TextureNode_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($uv, $rt_s(333));
    oktsg_ShaderNode__init_0($this);
    $this.$texture0 = $texture;
    $this.$sRGB = $sRGB;
    $this.$textureType = $textureType;
    $this.$unit = ju_HashMap__init_();
    $this.$sampler0 = oktsg_ShaderNode_defOut($this, oktsg_GLSLFloat__init_($rt_s(1091)));
    $this.$color = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec4__init_($rt_s(1092)));
    var$5 = oktsg_GLSLFloat__init_($rt_s(1093));
    var$5.$setScope(0);
    $this.$alpha = oktsg_ShaderNode_defOut($this, var$5);
    $this.$setInput($rt_s(333), $uv);
}
function oktsg_TextureNode__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6) {
    oktsg_TextureNode_$callClinit();
    if (var$5 & 1) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    if (var$5 & 2)
        var$2 = null;
    if (var$5 & 4)
        var$3 = 1;
    if (var$5 & 8)
        var$4 = 12;
    oktsg_TextureNode__init_1(var$0, var$1, var$2, var$3, var$4);
}
function oktsg_TextureNode__init_4(var$0) {
    oktsg_TextureNode_$callClinit();
    oktsg_TextureNode__init_2(var$0, null, null, 0, 0, 15, null);
}
function oktsg_TextureNode__clinit_() {
    var var$1;
    oktsg_TextureNode_Companion = oktsg_TextureNode$Companion__init_(null);
    var$1 = ju_LinkedHashMap__init_();
    var$1.$put3($rt_s(333), jl_Integer_valueOf(4));
    oktsg_TextureNode_InputForm = var$1;
}
function oooi_DxQuickStep$dxQuickStepperStage0Outputs() {
    var a = this; jl_Object.call(a);
    a.$nj0 = 0;
    a.$m = 0;
    a.$mfb = 0;
}
function oooi_DxQuickStep$dxQuickStepperStage0Outputs__init_0() {
    var var_0 = new oooi_DxQuickStep$dxQuickStepperStage0Outputs();
    oooi_DxQuickStep$dxQuickStepperStage0Outputs__init_1(var_0);
    return var_0;
}
function oooi_DxQuickStep$dxQuickStepperStage0Outputs__init_(var_0) {
    var var_1 = new oooi_DxQuickStep$dxQuickStepperStage0Outputs();
    oooi_DxQuickStep$dxQuickStepperStage0Outputs__init_2(var_1, var_0);
    return var_1;
}
function oooi_DxQuickStep$dxQuickStepperStage0Outputs__init_1($this) {
    jl_Object__init_0($this);
}
function oooi_DxQuickStep$dxQuickStepperStage0Outputs__init_2($this, $x0) {
    oooi_DxQuickStep$dxQuickStepperStage0Outputs__init_1($this);
}
function oooip_DxSingleIslandCallContext() {
    var a = this; jl_Object.call(a);
    a.$m_islandsProcessingContext = null;
    a.$m_islandIndex = 0;
    a.$m_stepperArena = null;
    a.$m_arenaInitialState = null;
    a.$m_stepperCallContext1 = null;
}
function oooip_DxSingleIslandCallContext__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oooip_DxSingleIslandCallContext();
    oooip_DxSingleIslandCallContext__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oooip_DxSingleIslandCallContext__init_0($this, $islandsProcessingContext, $stepperArena, $arenaInitialState, $islandBodiesStart, $islandJointsStart) {
    jl_Object__init_0($this);
    $this.$m_islandsProcessingContext = $islandsProcessingContext;
    $this.$m_islandIndex = 0;
    $this.$m_stepperArena = $stepperArena;
    $this.$m_arenaInitialState = $arenaInitialState;
    $this.$m_stepperCallContext1 = oooip_DxStepperProcessingCallContext__init_($islandsProcessingContext.$m_world, $islandsProcessingContext.$m_stepSize, $islandsProcessingContext.$m_stepperAllowedThreads, $stepperArena, $islandBodiesStart, $islandJointsStart);
}
function oooip_DxSingleIslandCallContext_AssignIslandSearchProgress($this, $islandIndex) {
    $this.$m_islandIndex = $islandIndex;
}
function oooip_DxSingleIslandCallContext_AssignIslandSelection($this, $islandBodiesStartA, $islandBodiesStartP, $islandJointsStartA, $islandJointsStartP, $islandBodiesCount, $islandJointsCount) {
    oooip_DxStepperProcessingCallContext_AssignIslandSelection($this.$m_stepperCallContext1, $islandBodiesStartA, $islandBodiesStartP, $islandJointsStartA, $islandJointsStartP, $islandBodiesCount, $islandJointsCount);
}
function oooip_DxSingleIslandCallContext_GetSelectedIslandBodiesA($this) {
    return oooip_DxStepperProcessingCallContext_m_islandBodiesStartA($this.$m_stepperCallContext1);
}
function oooip_DxSingleIslandCallContext_GetSelectedIslandBodiesEndP($this) {
    return oooip_DxStepperProcessingCallContext_GetSelectedIslandBodiesEnd($this.$m_stepperCallContext1);
}
function oooip_DxSingleIslandCallContext_GetSelectedIslandJointsA($this) {
    return oooip_DxStepperProcessingCallContext_m_islandJointsStartA($this.$m_stepperCallContext1);
}
function oooip_DxSingleIslandCallContext_GetSelectedIslandJointsEndP($this) {
    return oooip_DxStepperProcessingCallContext_GetSelectedIslandJointsEnd($this.$m_stepperCallContext1);
}
function oooip_DxSingleIslandCallContext_RestoreSavedMemArenaStateForStepper($this) {
    oooip_DxWorldProcessMemArena_RestoreState($this.$m_stepperArena, $this.$m_arenaInitialState);
}
function oktp_ISphereShape() {
}
function oktpo_OdeSphereShape() {
    var a = this; oktpo_OdeGeom.call(a);
    a.$sphere = null;
    a.$friction1 = 0.0;
    a.$userObject1 = null;
}
function oktpo_OdeSphereShape__init_(var_0, var_1) {
    var var_2 = new oktpo_OdeSphereShape();
    oktpo_OdeSphereShape__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktpo_OdeSphereShape_getGeom($this) {
    var var$1;
    var$1 = $this.$sphere;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(1094));
    return var$1;
}
function oktpo_OdeSphereShape_getRadius($this) {
    var var$1;
    var$1 = $this.$sphere;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(1094));
    return var$1.$getRadius();
}
function oktpo_OdeSphereShape_getFriction($this) {
    return $this.$friction1;
}
function oktpo_OdeSphereShape__init_0($this, $world, $radius) {
    kji_Intrinsics_checkParameterIsNotNull($world, $rt_s(563));
    oktpo_OdeGeom__init_0($this);
    $this.$sphere = ooo_OdeHelper_createSphere(oktpo_OdePhysicsWorld_getSpace($world), $radius);
    $this.$friction1 = 1.0;
    $this.$userObject1 = $this;
    oktpo_OdeSphereShape_getGeom($this).$setData($this);
}
function jm_Multiplication() {
    jl_Object.call(this);
}
var jm_Multiplication_tenPows = null;
var jm_Multiplication_fivePows = null;
var jm_Multiplication_bigTenPows = null;
var jm_Multiplication_bigFivePows = null;
function jm_Multiplication_$callClinit() {
    jm_Multiplication_$callClinit = $rt_eraseClinit(jm_Multiplication);
    jm_Multiplication__clinit_();
}
function jm_Multiplication__init_() {
    var var_0 = new jm_Multiplication();
    jm_Multiplication__init_0(var_0);
    return var_0;
}
function jm_Multiplication__init_0($this) {
    jm_Multiplication_$callClinit();
    jl_Object__init_0($this);
}
function jm_Multiplication_multiply($x, $y) {
    jm_Multiplication_$callClinit();
    return jm_Multiplication_karatsuba($x, $y);
}
function jm_Multiplication_karatsuba($op1, $op2) {
    var var$3, $ndiv2, $upperOp1, $upperOp2, $lowerOp1, $lowerOp2, $upper, $lower, $middle, var$12;
    jm_Multiplication_$callClinit();
    if ($op2.$numberLength <= $op1.$numberLength) {
        var$3 = $op2;
        $op2 = $op1;
        $op1 = var$3;
    }
    if ($op1.$numberLength < 63)
        return jm_Multiplication_multiplyPAP($op2, $op1);
    $ndiv2 = ($op2.$numberLength & (-2)) << 4;
    $upperOp1 = $op2.$shiftRight0($ndiv2);
    $upperOp2 = $op1.$shiftRight0($ndiv2);
    $lowerOp1 = $op2.$subtract1($upperOp1.$shiftLeft0($ndiv2));
    $lowerOp2 = $op1.$subtract1($upperOp2.$shiftLeft0($ndiv2));
    $upper = jm_Multiplication_karatsuba($upperOp1, $upperOp2);
    $lower = jm_Multiplication_karatsuba($lowerOp1, $lowerOp2);
    $middle = jm_Multiplication_karatsuba($upperOp1.$subtract1($lowerOp1), $lowerOp2.$subtract1($upperOp2));
    var$3 = $middle.$add11($upper).$add11($lower);
    var$3 = var$3.$shiftLeft0($ndiv2);
    var$12 = $upper.$shiftLeft0($ndiv2 << 1);
    return var$12.$add11(var$3).$add11($lower);
}
function jm_Multiplication_multiplyPAP($a, $b) {
    var $aLen, $bLen, $resLength, $resSign, $aDigits, $bDigits, $resDigits, $result, $val, $valueLo, $valueHi, var$14, var$15, var$16;
    jm_Multiplication_$callClinit();
    $aLen = $a.$numberLength;
    $bLen = $b.$numberLength;
    $resLength = $aLen + $bLen | 0;
    $resSign = $a.$sign1 == $b.$sign1 ? 1 : (-1);
    if ($resLength != 2) {
        $aDigits = $a.$digits;
        $bDigits = $b.$digits;
        $resDigits = $rt_createIntArray($resLength);
        jm_Multiplication_multArraysPAP($aDigits, $aLen, $bDigits, $bLen, $resDigits);
        $result = jm_BigInteger__init_($resSign, $resLength, $resDigits);
        jm_BigInteger_cutOffLeadingZeroes($result);
        return $result;
    }
    $val = jm_Multiplication_unsignedMultAddAdd($a.$digits.data[0], $b.$digits.data[0], 0, 0);
    $valueLo = $val.lo;
    $valueHi = $val.hi;
    if (!$valueHi)
        var$14 = jm_BigInteger__init_0($resSign, $valueLo);
    else {
        var$14 = new jm_BigInteger;
        var$15 = $rt_createIntArray(2);
        var$16 = var$15.data;
        var$16[0] = $valueLo;
        var$16[1] = $valueHi;
        jm_BigInteger__init_1(var$14, $resSign, 2, var$15);
    }
    return var$14;
}
function jm_Multiplication_multArraysPAP($aDigits, $aLen, $bDigits, $bLen, $resDigits) {
    jm_Multiplication_$callClinit();
    if ($aLen && $bLen) {
        if ($aLen == 1)
            $resDigits.data[$bLen] = jm_Multiplication_multiplyByInt($resDigits, $bDigits, $bLen, $aDigits.data[0]);
        else if ($bLen != 1)
            jm_Multiplication_multPAP($aDigits, $bDigits, $resDigits, $aLen, $bLen);
        else
            $resDigits.data[$aLen] = jm_Multiplication_multiplyByInt($resDigits, $aDigits, $aLen, $bDigits.data[0]);
        return;
    }
}
function jm_Multiplication_multPAP($a, $b, $t, $aLen, $bLen) {
    var $i, var$7, $carry, $aI, $j, var$11, var$12, var$13, var$14;
    jm_Multiplication_$callClinit();
    if ($a === $b && $aLen == $bLen) {
        jm_Multiplication_square($a, $aLen, $t);
        return;
    }
    $i = 0;
    while ($i < $aLen) {
        var$7 = $a.data;
        $carry = Long_ZERO;
        $aI = var$7[$i];
        $j = 0;
        while ($j < $bLen) {
            var$11 = $t.data;
            var$12 = $b.data[$j];
            var$13 = $i + $j | 0;
            var$14 = jm_Multiplication_unsignedMultAddAdd($aI, var$12, var$11[var$13], $carry.lo);
            var$11[var$13] = var$14.lo;
            $carry = Long_shru(var$14, 32);
            $j = $j + 1 | 0;
        }
        $t.data[$i + $bLen | 0] = $carry.lo;
        $i = $i + 1 | 0;
    }
}
function jm_Multiplication_multiplyByInt($res, $a, $aSize, $factor) {
    var $carry, $i, var$7, var$8;
    jm_Multiplication_$callClinit();
    $carry = Long_ZERO;
    $i = 0;
    while ($i < $aSize) {
        var$7 = $res.data;
        var$8 = jm_Multiplication_unsignedMultAddAdd($a.data[$i], $factor, $carry.lo, 0);
        var$7[$i] = var$8.lo;
        $carry = Long_shru(var$8, 32);
        $i = $i + 1 | 0;
    }
    return $carry.lo;
}
function jm_Multiplication_multiplyByInt0($a, $aSize, $factor) {
    jm_Multiplication_$callClinit();
    return jm_Multiplication_multiplyByInt($a, $a, $aSize, $factor);
}
function jm_Multiplication_pow($acc, $exponent) {
    var $res, $acc_0, var$5;
    jm_Multiplication_$callClinit();
    jm_BigInteger_$callClinit();
    $res = jm_BigInteger_ONE;
    while ($exponent > 1) {
        if ($exponent & 1)
            $res = $res.$multiply($acc);
        $acc_0 = $acc.$numberLength == 1 ? $acc.$multiply($acc) : jm_BigInteger__init_2(1, jm_Multiplication_square($acc.$digits, $acc.$numberLength, $rt_createIntArray($acc.$numberLength << 1)));
        $exponent = $exponent >> 1;
        $acc = $acc_0;
    }
    var$5 = $res.$multiply($acc);
    return var$5;
}
function jm_Multiplication_square($a, $aLen, $res) {
    var $i, $carry, $i_0, $j, var$8, var$9, var$10, var$11, var$12, var$13, $index;
    jm_Multiplication_$callClinit();
    $i = 0;
    while ($i < $aLen) {
        $carry = Long_ZERO;
        $i_0 = $i + 1 | 0;
        $j = $i_0;
        while ($j < $aLen) {
            var$8 = $res.data;
            var$9 = $a.data;
            var$10 = var$9[$i];
            var$11 = var$9[$j];
            var$12 = $i + $j | 0;
            var$13 = jm_Multiplication_unsignedMultAddAdd(var$10, var$11, var$8[var$12], $carry.lo);
            var$8[var$12] = var$13.lo;
            $carry = Long_shru(var$13, 32);
            $j = $j + 1 | 0;
        }
        $res.data[$i + $aLen | 0] = $carry.lo;
        $i = $i_0;
    }
    jm_BitLevel_shiftLeftOneBit($res, $res, $aLen << 1);
    $carry = Long_ZERO;
    $i = 0;
    $index = 0;
    while ($i < $aLen) {
        var$8 = $res.data;
        var$9 = $a.data;
        var$13 = jm_Multiplication_unsignedMultAddAdd(var$9[$i], var$9[$i], var$8[$index], $carry.lo);
        var$8[$index] = var$13.lo;
        var$13 = Long_shru(var$13, 32);
        var$11 = $index + 1 | 0;
        var$13 = Long_add(var$13, Long_and(Long_fromInt(var$8[var$11]), new Long(4294967295, 0)));
        var$8[var$11] = var$13.lo;
        $carry = Long_shru(var$13, 32);
        $i = $i + 1 | 0;
        $index = var$11 + 1 | 0;
    }
    return $res;
}
function jm_Multiplication_powerOf10($exp) {
    var $intExp, $byteArraySize, $powerOfFive, $longExp, var$6, var$7, var$8;
    jm_Multiplication_$callClinit();
    $intExp = $exp.lo;
    if (Long_lt($exp, Long_fromInt(jm_Multiplication_bigTenPows.data.length)))
        return jm_Multiplication_bigTenPows.data[$intExp];
    if (Long_le($exp, Long_fromInt(50))) {
        jm_BigInteger_$callClinit();
        return jm_BigInteger_TEN.$pow0($intExp);
    }
    if (Long_le($exp, Long_fromInt(1000)))
        return jm_Multiplication_bigFivePows.data[1].$pow0($intExp).$shiftLeft0($intExp);
    $byteArraySize = Long_add(Long_fromInt(1), Long_fromNumber(Long_toNumber($exp) / 2.4082399653118496));
    if (Long_gt($byteArraySize, Long_fromInt(1000000)))
        $rt_throw(jl_ArithmeticException__init_1($rt_s(1095)));
    if (Long_le($exp, Long_fromInt(2147483647)))
        return jm_Multiplication_bigFivePows.data[1].$pow0($intExp).$shiftLeft0($intExp);
    $powerOfFive = jm_Multiplication_bigFivePows.data[1].$pow0(2147483647);
    $longExp = Long_sub($exp, Long_fromInt(2147483647));
    var$6 = Long_rem($exp, Long_fromInt(2147483647)).lo;
    var$7 = $powerOfFive;
    var$8 = $longExp;
    while (Long_gt(var$8, Long_fromInt(2147483647))) {
        var$7 = var$7.$multiply($powerOfFive);
        var$8 = Long_sub(var$8, Long_fromInt(2147483647));
    }
    var$7 = var$7.$multiply(jm_Multiplication_bigFivePows.data[1].$pow0(var$6));
    var$7 = var$7.$shiftLeft0(2147483647);
    while (Long_gt($longExp, Long_fromInt(2147483647))) {
        var$7 = var$7.$shiftLeft0(2147483647);
        $longExp = Long_sub($longExp, Long_fromInt(2147483647));
    }
    var$7 = var$7.$shiftLeft0(var$6);
    return var$7;
}
function jm_Multiplication_unsignedMultAddAdd($a, $b, $c, $d) {
    jm_Multiplication_$callClinit();
    return Long_add(Long_add(Long_mul(Long_and(Long_fromInt($a), new Long(4294967295, 0)), Long_and(Long_fromInt($b), new Long(4294967295, 0))), Long_and(Long_fromInt($c), new Long(4294967295, 0))), Long_and(Long_fromInt($d), new Long(4294967295, 0)));
}
function jm_Multiplication__clinit_() {
    var var$1, var$2, $fivePow, $i, var$5;
    var$1 = $rt_createIntArray(10);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 10;
    var$2[2] = 100;
    var$2[3] = 1000;
    var$2[4] = 10000;
    var$2[5] = 100000;
    var$2[6] = 1000000;
    var$2[7] = 10000000;
    var$2[8] = 100000000;
    var$2[9] = 1000000000;
    jm_Multiplication_tenPows = var$1;
    var$1 = $rt_createIntArray(14);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 5;
    var$2[2] = 25;
    var$2[3] = 125;
    var$2[4] = 625;
    var$2[5] = 3125;
    var$2[6] = 15625;
    var$2[7] = 78125;
    var$2[8] = 390625;
    var$2[9] = 1953125;
    var$2[10] = 9765625;
    var$2[11] = 48828125;
    var$2[12] = 244140625;
    var$2[13] = 1220703125;
    jm_Multiplication_fivePows = var$1;
    jm_Multiplication_bigTenPows = $rt_createArray(jm_BigInteger, 32);
    jm_Multiplication_bigFivePows = $rt_createArray(jm_BigInteger, 32);
    $fivePow = Long_fromInt(1);
    $i = 0;
    while ($i <= 18) {
        jm_Multiplication_bigFivePows.data[$i] = jm_BigInteger_valueOf($fivePow);
        jm_Multiplication_bigTenPows.data[$i] = jm_BigInteger_valueOf(Long_shl($fivePow, $i));
        $fivePow = Long_mul($fivePow, Long_fromInt(5));
        $i = $i + 1 | 0;
    }
    while ($i < jm_Multiplication_bigTenPows.data.length) {
        var$2 = jm_Multiplication_bigFivePows.data;
        var$1 = jm_Multiplication_bigFivePows.data;
        var$5 = $i - 1 | 0;
        var$2[$i] = var$1[var$5].$multiply(jm_Multiplication_bigFivePows.data[1]);
        jm_Multiplication_bigTenPows.data[$i] = jm_Multiplication_bigTenPows.data[var$5].$multiply(jm_BigInteger_TEN);
        $i = $i + 1 | 0;
    }
}
function oktgg_GLTFNode$read$8() {
    kji_Lambda.call(this);
    this.$this$0131 = null;
}
function oktgg_GLTFNode$read$8__init_(var_0) {
    var var_1 = new oktgg_GLTFNode$read$8();
    oktgg_GLTFNode$read$8__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFNode$read$8_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$8_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$8_invoke0($this, $it) {
    oktgg_GLTFNode_setCamera($this.$this$0131, $it);
}
function oktgg_GLTFNode$read$8__init_0(var$0, var$1) {
    var$0.$this$0131 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFNode$read$9() {
    var a = this; kji_Lambda.call(a);
    a.$this$0132 = null;
    a.$$obj0 = null;
}
function oktgg_GLTFNode$read$9__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFNode$read$9();
    oktgg_GLTFNode$read$9__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFNode$read$9_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$9_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$9_invoke0($this, $meshIndex) {
    oktgg_GLTFNode_setMesh($this.$this$0132, $meshIndex);
    oktgg_GLTFNode_getGltf($this.$this$0132).$getMeshes1().$getOrWait0($meshIndex, oktgg_GLTFNode$read$9$1__init_($this));
}
function oktgg_GLTFNode$read$9__init_0(var$0, var$1, var$2) {
    var$0.$this$0132 = var$1;
    var$0.$$obj0 = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function oooi_DxRay$CollideRayCapsule() {
    jl_Object.call(this);
}
function oooi_DxRay$CollideRayCapsule__init_() {
    var var_0 = new oooi_DxRay$CollideRayCapsule();
    oooi_DxRay$CollideRayCapsule__init_0(var_0);
    return var_0;
}
function oooi_DxRay$CollideRayCapsule__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxRay$CollideRayCapsule_dCollideRayCapsule($this, $ray, $ccyl, $flags, $contacts, $skip) {
    var $contact, $lz2, $cs, $q, $r, $k, $C, $inside_ccyl, var$14, var$15, var$16, var$17, $uv, $A, $B, var$21, var$22, $alpha, $nsign;
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $contact = ooo_DContactGeomBuffer_get($contacts, 0);
    $contact.$g1 = $ray;
    $contact.$g2 = $ccyl;
    $contact.$side1 = (-1);
    $contact.$side2 = (-1);
    $lz2 = $ccyl.$getLength() * 0.5;
    $cs = oom_DVector3__init_();
    $q = oom_DVector3__init_();
    $r = oom_DVector3__init_();
    oom_DVector3_eqDiff($cs, $ray.$final_posr().$pos(), $ccyl.$final_posr().$pos());
    $k = ooo_OdeMath_dCalcVectorDot3_41($ccyl.$final_posr().$R(), 2, $cs);
    oom_DVector3_eqSum2($q, $ccyl.$final_posr().$R().$viewCol(2), $k, $cs, (-1.0));
    $C = ooo_OdeMath_dCalcVectorDot3($q, $q) - $ccyl.$getRadius() * $ccyl.$getRadius();
    $inside_ccyl = 0;
    var$14 = $rt_compare($C, 0.0);
    if (var$14 >= 0)
        var$15 = $k;
    else {
        var$15 =  -$lz2;
        if ($k >= var$15)
            var$15 = $k > $lz2 ? $lz2 : $k;
        oom_DVector3_eqSum2($r, $ccyl.$final_posr().$R().$viewCol(2), var$15, $ccyl.$final_posr().$pos(), 1.0);
        var$16 = ($ray.$final_posr().$pos().$get01() - oom_DVector3_get0($r)) * ($ray.$final_posr().$pos().$get01() - oom_DVector3_get0($r));
        var$17 = var$16 + ($ray.$final_posr().$pos().$get10() - oom_DVector3_get1($r)) * ($ray.$final_posr().$pos().$get10() - oom_DVector3_get1($r));
        var$16 = var$17 + ($ray.$final_posr().$pos().$get20() - oom_DVector3_get2($r)) * ($ray.$final_posr().$pos().$get20() - oom_DVector3_get2($r));
        if (var$16 < $ccyl.$getRadius() * $ccyl.$getRadius())
            $inside_ccyl = 1;
    }
    if (!(!$inside_ccyl && var$14 < 0)) {
        $uv = ooo_OdeMath_dCalcVectorDot3_44($ccyl.$final_posr().$R(), 2, $ray.$final_posr().$R(), 2);
        oom_DVector3_eqSum3($r, $ccyl.$final_posr().$R().$viewCol(2), $uv, $ray.$final_posr().$R().$viewCol(2), (-1.0));
        $A = ooo_OdeMath_dCalcVectorDot3($r, $r);
        $B = 2.0 * ooo_OdeMath_dCalcVectorDot3($q, $r);
        var$16 = $B * $B - 4.0 * $A * $C;
        if (var$16 < 0.0) {
            if (!$inside_ccyl)
                return 0;
            if ($uv < 0.0)
                $lz2 =  -$lz2;
        } else {
            var$16 = oooi_Common_dSqrt(var$16);
            var$21 = oooi_Common_dRecip(2.0 * $A);
            var$22 =  -$B;
            $alpha = (var$22 - var$16) * var$21;
            if ($alpha < 0.0) {
                $alpha = (var$22 + var$16) * var$21;
                if ($alpha < 0.0)
                    return 0;
            }
            if ($alpha > oooi_DxRay_access$100($ray))
                return 0;
            oom_DVector3_eqSum2($contact.$pos0, $ray.$final_posr().$R().$viewCol(2), $alpha, $ray.$final_posr().$pos(), 1.0);
            oom_DVector3_eqDiff($q, $contact.$pos0, $ccyl.$final_posr().$pos());
            var$16 = ooo_OdeMath_dCalcVectorDot3_14($q, $ccyl.$final_posr().$R(), 2);
            $nsign = !$inside_ccyl ? 1.0 : (-1.0);
            var$21 =  -$lz2;
            if (var$16 >= var$21 && var$16 <= $lz2) {
                oom_DVector3_eqSum2($contact.$normal, $ccyl.$final_posr().$R().$viewCol(2),  -var$16, $ccyl.$final_posr().$pos(), (-1.0));
                oom_DVector3_scale(oom_DVector3_add($contact.$normal, $contact.$pos0), $nsign);
                oom_DVector3_normalize($contact.$normal);
                $contact.$depth = $alpha;
                return 1;
            }
            if (var$16 < 0.0)
                $lz2 = var$21;
        }
    } else if (var$15 < 0.0)
        $lz2 =  -$lz2;
    oom_DVector3_eqSum2($q, $ccyl.$final_posr().$R().$viewCol(2), $lz2, $ccyl.$final_posr().$pos(), 1.0);
    return oooi_DxRay_access$000($ray, $q, $ccyl.$getRadius(), $contacts, $inside_ccyl);
}
function oooi_DxRay$CollideRayCapsule_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideRayCapsule($o1, $o2, $flags, $contacts, 1);
}
function ju_LinkedHashMap$ValueIterator() {
    ju_LinkedHashMap$AbstractMapIterator.call(this);
}
function ju_LinkedHashMap$ValueIterator__init_(var_0) {
    var var_1 = new ju_LinkedHashMap$ValueIterator();
    ju_LinkedHashMap$ValueIterator__init_0(var_1, var_0);
    return var_1;
}
function ju_LinkedHashMap$ValueIterator__init_0($this, $map) {
    ju_LinkedHashMap$AbstractMapIterator__init_0($this, $map);
}
function ju_LinkedHashMap$ValueIterator_next($this) {
    ju_LinkedHashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry0.$value0;
}
function oktp_ICylinderShape() {
}
function oktpo_OdeCylinderShape() {
    oktpo_OdeGeom.call(this);
}
function oktt_GLTFLoaderAnimTest() {
    jl_Object.call(this);
}
function oktt_GLTFLoaderAnimTest__init_() {
    var var_0 = new oktt_GLTFLoaderAnimTest();
    oktt_GLTFLoaderAnimTest__init_0(var_0);
    return var_0;
}
function oktt_GLTFLoaderAnimTest_getName($this) {
    return $rt_s(1096);
}
function oktt_GLTFLoaderAnimTest_testMain($this) {
    var var$1, var$2;
    var$1 = new oktt_GLTFModel;
    var$2 = null;
    oktt_GLTFLoaderAnimTest$testMain$1_$callClinit();
    oktt_GLTFModel__init_(var$1, 0, var$2, oktt_GLTFLoaderAnimTest$testMain$1_INSTANCE, 3, null);
}
function oktt_GLTFLoaderAnimTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktgg_GLTFImage$read$5$1() {
    kji_Lambda.call(this);
    this.$this$0133 = null;
}
function oktgg_GLTFImage$read$5$1__init_(var_0) {
    var var_1 = new oktgg_GLTFImage$read$5$1();
    oktgg_GLTFImage$read$5$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFImage$read$5$1_invoke(var$0, var$1, var$2) {
    oktgg_GLTFImage$read$5$1_invoke0(var$0, var$1.$intValue(), var$2);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFImage$read$5$1_invoke0($this, $status, $$noName_1) {
    kji_Intrinsics_checkParameterIsNotNull($$noName_1, $rt_s(1097));
    oktn_NET_$callClinit();
    if (oktn_NET_isSuccess(oktn_NET_INSTANCE, $status))
        oktgg_GLTFArray_ready(oktgg_GLTFImage_getGltf($this.$this$0133.$this$062).$getImages(), oktgg_GLTFImage_getElementIndex($this.$this$0133.$this$062));
}
function oktgg_GLTFImage$read$5$1__init_0(var$0, var$1) {
    var$0.$this$0133 = var$1;
    kji_Lambda__init_0(var$0, 2);
}
function okttp_SphereShapeTest() {
    jl_Object.call(this);
}
function okttp_SphereShapeTest__init_() {
    var var_0 = new okttp_SphereShapeTest();
    okttp_SphereShapeTest__init_0(var_0);
    return var_0;
}
function okttp_SphereShapeTest_getName($this) {
    return $rt_s(1098);
}
function okttp_SphereShapeTest_testMain($this) {
    var $world, $dynamic, $static1, $static2, $static3, var$6, var$7, var$8, $mesh, $shader, var$11, var$12, $control, $tmp_0;
    oktp_PHYS_$callClinit();
    $world = oktp_PHYS_createWorld(oktp_PHYS_INSTANCE);
    $world.$setGravity0(0.0, (-2.0), 0.0);
    $dynamic = $world.$rigidBody($world.$sphereShape(1.0), 1.0);
    $dynamic.$setPosition1(0.5, 3.0, 0.5);
    $static1 = oktp_IPhysicsWorld$DefaultImpls_rigidBody$default($world, $world.$sphereShape(1.0), 0.0, 2, null);
    $static1.$setPosition1(1.0, 0.0, 1.5);
    $static1.$setGravityEnabled(0);
    $static1.$setStatic(1);
    $static2 = oktp_IPhysicsWorld$DefaultImpls_rigidBody$default($world, $world.$sphereShape(1.0), 0.0, 2, null);
    $static2.$setPosition1((-2.0), 0.0, 1.5);
    $static2.$setGravityEnabled(0);
    $static2.$setStatic(1);
    $static3 = oktp_IPhysicsWorld$DefaultImpls_rigidBody$default($world, $world.$sphereShape(1.0), 0.0, 2, null);
    $static3.$setPosition1(0.0, 0.0, (-1.5));
    $static3.$setGravityEnabled(0);
    $static3.$setStatic(1);
    var$6 = oktmb_SphereMeshBuilder__init_1(1.0, 0, 0, 6, null);
    oktmb_MeshBuilder_setPositionName(var$6, $rt_s(543));
    oktmb_MeshBuilder_setUvName(var$6, $rt_s(857));
    var$7 = null;
    var$8 = null;
    $mesh = oktmb_MeshBuilder_build$default(var$6, var$7, 1, var$8);
    $shader = new okts_Shader;
    var$11 = null;
    var$12 = null;
    var$7 = null;
    var$6 = null;
    okts_Shader__init_($shader, $rt_s(858), $rt_s(859), var$11, 0, var$12, 0, var$7, 124, var$6);
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_setApi(oktgc_ActiveCamera_INSTANCE, oktgc_Camera__init_(null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null));
    $control = new oktgc_OrbitCameraControl;
    var$7 = null;
    var$6 = null;
    var$8 = null;
    oktgc_OrbitCameraControl__init_($control, 0.0, 2.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, var$7, 0, var$6, 8173, var$8);
    oktgc_OrbitCameraControl_listenToMouse($control);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, oktgc_OrbitCameraControl_getHelp($control), null, 2, null);
    $tmp_0 = oktm_Mat4__init_();
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttp_SphereShapeTest$testMain$1__init_($control, $world, $shader, $static1, $tmp_0, $mesh, $static2, $static3, $dynamic), 1, null);
}
function okttp_SphereShapeTest__init_0($this) {
    jl_Object__init_0($this);
}
function jur_IntHash() {
    jl_Object.call(this);
}
function oktm_IIndexBufferObject() {
}
var oktm_IIndexBufferObject_Companion = null;
function oktm_IIndexBufferObject_$callClinit() {
    oktm_IIndexBufferObject_$callClinit = $rt_eraseClinit(oktm_IIndexBufferObject);
    oktm_IIndexBufferObject__clinit_();
}
function oktm_IIndexBufferObject__clinit_() {
    oktm_IIndexBufferObject$Companion_$callClinit();
    oktm_IIndexBufferObject_Companion = oktm_IIndexBufferObject$Companion_$$INSTANCE;
}
function jur_AltQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
}
function jur_AltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AltQuantifierSet();
    jur_AltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_AltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$next0.$matches($stringIndex, $testString, $matchResult);
    return $shift;
}
function jur_AltQuantifierSet_setNext($this, $next) {
    jur_AbstractSet_setNext($this, $next);
    $this.$innerSet.$setNext($next);
}
function jur_ReluctantAltQuantifierSet() {
    jur_AltQuantifierSet.call(this);
}
function jur_ReluctantAltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantAltQuantifierSet();
    jur_ReluctantAltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantAltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_ReluctantAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$next0.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
}
function jl_UnsupportedOperationException() {
    jl_RuntimeException.call(this);
}
function jl_UnsupportedOperationException__init_0() {
    var var_0 = new jl_UnsupportedOperationException();
    jl_UnsupportedOperationException__init_1(var_0);
    return var_0;
}
function jl_UnsupportedOperationException__init_(var_0) {
    var var_1 = new jl_UnsupportedOperationException();
    jl_UnsupportedOperationException__init_2(var_1, var_0);
    return var_1;
}
function jl_UnsupportedOperationException__init_1($this) {
    jl_RuntimeException__init_1($this);
}
function jl_UnsupportedOperationException__init_2($this, $message) {
    jl_RuntimeException__init_2($this, $message);
}
function cgcj_JsonException() {
    var a = this; jl_Exception.call(a);
    a.$position7 = 0;
    a.$problemType = null;
    a.$unexpectedObject = null;
}
function cgcj_JsonException__init_0(var_0, var_1, var_2) {
    var var_3 = new cgcj_JsonException();
    cgcj_JsonException__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgcj_JsonException__init_($this, $position, $problemType, $unexpectedObject) {
    jl_Exception__init_0($this);
    $this.$position7 = $position;
    $this.$problemType = $problemType;
    $this.$unexpectedObject = $unexpectedObject;
    cgcj_JsonException$Problems_$callClinit();
    if (!(!jl_Enum_equals(cgcj_JsonException$Problems_IOEXCEPTION, $problemType) && !jl_Enum_equals(cgcj_JsonException$Problems_UNEXPECTED_EXCEPTION, $problemType)) && $unexpectedObject instanceof jl_Throwable)
        $this.$initCause($unexpectedObject);
}
function jl_NumberFormatException() {
    jl_IllegalArgumentException.call(this);
}
function jl_NumberFormatException__init_() {
    var var_0 = new jl_NumberFormatException();
    jl_NumberFormatException__init_1(var_0);
    return var_0;
}
function jl_NumberFormatException__init_0(var_0) {
    var var_1 = new jl_NumberFormatException();
    jl_NumberFormatException__init_2(var_1, var_0);
    return var_1;
}
function jl_NumberFormatException__init_1($this) {
    jl_IllegalArgumentException__init_1($this);
}
function jl_NumberFormatException__init_2($this, $message) {
    jl_IllegalArgumentException__init_2($this, $message);
}
function oooi_CollideBoxPlane() {
    jl_Object.call(this);
}
function oooi_CollideBoxPlane__init_() {
    var var_0 = new oooi_CollideBoxPlane();
    oooi_CollideBoxPlane__init_0(var_0);
    return var_0;
}
function oooi_CollideBoxPlane__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollideBoxPlane_dCollideBoxPlane($this, $o1, $o2, $flags, $contacts, $skip) {
    var var$6, $contact, $ret, $R, $n, $Q1, $Q2, $Q3, $A, var$15, $B, var$17, $depth, $p, $i, $p1, $p2, $p3, $go;
    oooi_Common_dIASSERT($skip != 1 ? 0 : 1);
    var$6 = $flags & 65535;
    oooi_Common_dIASSERT(var$6 < 1 ? 0 : 1);
    $contact = ooo_DContactGeomBuffer_get($contacts, 0);
    $contact.$g1 = $o1;
    $contact.$g2 = $o2;
    $contact.$side1 = (-1);
    $contact.$side2 = (-1);
    $ret = oooicj_RefInt__init_();
    $R = $o1.$final_posr().$R();
    $n = $o2.$getNormal();
    $Q1 = ooo_OdeMath_dCalcVectorDot3_14($n, $R, 0);
    $Q2 = ooo_OdeMath_dCalcVectorDot3_14($n, $R, 1);
    $Q3 = ooo_OdeMath_dCalcVectorDot3_14($n, $R, 2);
    $A = $rt_createDoubleArray(3);
    var$15 = $A.data;
    var$15[0] = oom_DVector3_get0($o1.$side) * $Q1;
    var$15[1] = oom_DVector3_get1($o1.$side) * $Q2;
    var$15[2] = oom_DVector3_get2($o1.$side) * $Q3;
    $B = $rt_createDoubleArray(3);
    var$17 = $B.data;
    var$17[0] = oooi_Common_dFabs(var$15[0]);
    var$17[1] = oooi_Common_dFabs(var$15[1]);
    var$17[2] = oooi_Common_dFabs(var$15[2]);
    $depth = oooicj_RefDouble__init_($o2.$getDepth() + 0.5 * (var$17[0] + var$17[1] + var$17[2]) - $n.$dot($o1.$final_posr().$pos()));
    if (oooicj_RefDouble_get($depth) < 0.0)
        return 0;
    if (var$6 > 4)
        var$6 = 4;
    $p = oom_DVector3__init_();
    oom_DVector3_set($p, $o1.$final_posr().$pos());
    $i = 0;
    while ($i < 3) {
        if (var$15[$i] <= 0.0)
            oom_DVector3_eqSum0($p, $p, $R.$columnAsNewVector($i), 0.5 * oom_DVector3_get($o1.$side, $i));
        else
            oom_DVector3_eqSum0($p, $p, $R.$columnAsNewVector($i), (-0.5) * oom_DVector3_get($o1.$side, $i));
        $i = $i + 1 | 0;
    }
    oom_DVector3_set($contact.$pos0, $p);
    $contact.$depth = oooicj_RefDouble_get($depth);
    oooicj_RefInt_set($ret, 1);
    if (var$6 == 1) {
        oooi_CollideBoxPlane_done($this, $ret, $contacts, $skip, $o1, $o2, var$6, oooicj_RefDouble_get($depth), $p, $n);
        return oooicj_RefInt_get($ret);
    }
    if (var$17[0] >= var$17[1]) {
        if (var$17[2] >= var$17[1]) {
            $p1 = 1;
            $p2 = 1;
            $p3 = 2;
            $go = var$17[0] >= var$17[2] ? 23 : 21;
        } else {
            $p1 = 1;
            $p2 = 2;
            $p3 = 3;
            $go = var$17[0] >= var$17[1] ? 22 : 21;
        }
    } else if (var$17[2] >= var$17[0]) {
        $p1 = 1;
        $p2 = 0;
        $p3 = 1;
        $go = var$17[1] >= var$17[2] ? 23 : 22;
    } else {
        $p1 = 1;
        $p2 = 2;
        $p3 = 3;
        $go = var$17[0] >= var$17[1] ? 22 : 21;
    }
    a: {
        oooi_CollideBoxPlane_BAR2($this, $p1, $p2, $p3, $depth, $ret, $contacts, $skip, $A, $B, $o1, $o2, $p, $R, $o1.$side, var$6, $n);
        if (var$6 != 2) {
            if ($go == 21) {
                if (oooi_CollideBoxPlane_BAR2($this, 2, 0, 1, $depth, $ret, $contacts, $skip, $A, $B, $o1, $o2, $p, $R, $o1.$side, var$6, $n))
                    break a;
                return oooicj_RefInt_get($ret);
            }
            if ($go == 22) {
                if (oooi_CollideBoxPlane_BAR2($this, 2, 1, 2, $depth, $ret, $contacts, $skip, $A, $B, $o1, $o2, $p, $R, $o1.$side, var$6, $n))
                    break a;
                return oooicj_RefInt_get($ret);
            }
            if ($go != 23)
                $rt_throw(jl_IllegalStateException__init_(jl_StringBuilder__init_().$append($rt_s(1099)).$append1($go).$toString()));
            if (!oooi_CollideBoxPlane_BAR2($this, 2, 2, 3, $depth, $ret, $contacts, $skip, $A, $B, $o1, $o2, $p, $R, $o1.$side, var$6, $n))
                return oooicj_RefInt_get($ret);
        }
    }
    oooi_CollideBoxPlane_done($this, $ret, $contacts, $skip, $o1, $o2, var$6, oooicj_RefDouble_get($depth), $p, $n);
    return oooicj_RefInt_get($ret);
}
function oooi_CollideBoxPlane_FOO2($this, $i, $j, $op, $contacts, $skip, $p, $R, $side) {
    oom_DVector3_eqSum4(ooo_DContactGeomBuffer_get($contacts, $rt_imul($i, $skip)).$pos0, $p, $R.$viewCol($j), $op * oom_DVector3_get($side, $j));
}
function oooi_CollideBoxPlane_BAR2($this, $ctact, $side, $sideinc, $depth, $ret, $contacts, $skip, $A, $B, $o1, $o2, $p, $R, $boxSide, $maxc, $n) {
    var var$17, var$18, var$19;
    var$17 = $B.data;
    var$18 = oooicj_RefDouble_get($depth);
    var$19 = $sideinc - 1 | 0;
    if (var$18 - var$17[var$19] < 0.0) {
        oooi_CollideBoxPlane_done($this, $ret, $contacts, $skip, $o1, $o2, $maxc, oooicj_RefDouble_get($depth), $p, $n);
        return 0;
    }
    if ($A.data[var$19] <= 0.0)
        oooi_CollideBoxPlane_FOO2($this, $ctact, $side, (-1), $contacts, $skip, $p, $R, $boxSide);
    else
        oooi_CollideBoxPlane_FOO2($this, $ctact, $side, 1, $contacts, $skip, $p, $R, $boxSide);
    ooo_DContactGeomBuffer_get($contacts, $rt_imul($ctact, $skip)).$depth = oooicj_RefDouble_get($depth) - var$17[var$19];
    oooicj_RefInt_inc($ret);
    return 1;
}
function oooi_CollideBoxPlane_done($this, $ret, $contacts, $skip, $o1, $o2, $maxc, $depth, $p, $n) {
    var var$10, var$11, var$12, $d4, $c3, $i, $contact;
    if ($maxc == 4 && oooicj_RefInt_get($ret) == 3) {
        var$10 = 1 * $skip | 0;
        var$11 = ooo_DContactGeomBuffer_get($contacts, var$10).$depth;
        var$12 = 2 * $skip | 0;
        $d4 = var$11 + ooo_DContactGeomBuffer_get($contacts, var$12).$depth - $depth;
        if ($d4 > 0.0) {
            $c3 = ooo_DContactGeomBuffer_get($contacts, 3 * $skip | 0);
            oom_DVector3_sub(oom_DVector3_add(oom_DVector3_set($c3.$pos0, ooo_DContactGeomBuffer_get($contacts, var$10).$pos0), ooo_DContactGeomBuffer_get($contacts, var$12).$pos0), $p);
            $c3.$depth = $d4;
            oooicj_RefInt_inc($ret);
        }
    }
    $i = 0;
    while ($i < oooicj_RefInt_get($ret)) {
        $contact = ooo_DContactGeomBuffer_get($contacts, $rt_imul($i, $skip));
        $contact.$g1 = $o1;
        $contact.$g2 = $o2;
        $contact.$side1 = (-1);
        $contact.$side2 = (-1);
        oom_DVector3_set($contact.$normal, $n);
        $i = $i + 1 | 0;
    }
}
function oooi_CollideBoxPlane_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideBoxPlane($o1, $o2, $flags, $contacts, 1);
}
function oktt_TvmGL$TextureWrap() {
    oktt_TvmGL$GLObject.call(this);
    this.$gl5 = null;
}
function oktt_TvmGL$TextureWrap__init_(var_0) {
    var var_1 = new oktt_TvmGL$TextureWrap();
    oktt_TvmGL$TextureWrap__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmGL$TextureWrap_getGl($this) {
    return $this.$gl5;
}
function oktt_TvmGL$TextureWrap_getGl0(var$0) {
    return oktt_TvmGL$TextureWrap_getGl(var$0);
}
function oktt_TvmGL$TextureWrap__init_0($this, $gl) {
    kji_Intrinsics_checkParameterIsNotNull($gl, $rt_s(814));
    oktt_TvmGL$GLObject__init_0($this);
    $this.$gl5 = $gl;
}
function jur_IntArrHash() {
    jl_Object.call(this);
}
function oktsg_GLSLVec4Inline() {
    var a = this; oktsg_ShaderData.call(a);
    a.$x3 = 0.0;
    a.$y3 = 0.0;
    a.$z2 = 0.0;
    a.$w0 = 0.0;
    a.$name31 = null;
}
function oktsg_GLSLVec4Inline__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktsg_GLSLVec4Inline();
    oktsg_GLSLVec4Inline__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktsg_GLSLVec4Inline__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktsg_GLSLVec4Inline();
    oktsg_GLSLVec4Inline__init_2(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function oktsg_GLSLVec4Inline__init_3() {
    var var_0 = new oktsg_GLSLVec4Inline();
    oktsg_GLSLVec4Inline__init_4(var_0);
    return var_0;
}
function oktsg_GLSLVec4Inline_getInlineCode($this) {
    return oktsg_GLSLVec4Inline_asVec4($this);
}
function oktsg_GLSLVec4Inline_getType($this) {
    return 6;
}
function oktsg_GLSLVec4Inline_getScope($this) {
    return 0;
}
function oktsg_GLSLVec4Inline_asFloat($this) {
    return jl_String_valueOf0($this.$x3);
}
function oktsg_GLSLVec4Inline_asVec2($this) {
    return jl_StringBuilder__init_().$append($rt_s(267)).$append11($this.$x3).$append($rt_s(268)).$append11($this.$y3).$append12(41).$toString();
}
function oktsg_GLSLVec4Inline_asVec3($this) {
    return jl_StringBuilder__init_().$append($rt_s(269)).$append11($this.$x3).$append($rt_s(268)).$append11($this.$y3).$append($rt_s(268)).$append11($this.$z2).$append12(41).$toString();
}
function oktsg_GLSLVec4Inline_asVec4($this) {
    return jl_StringBuilder__init_().$append($rt_s(270)).$append11($this.$x3).$append($rt_s(268)).$append11($this.$y3).$append($rt_s(268)).$append11($this.$z2).$append($rt_s(268)).$append11($this.$w0).$append12(41).$toString();
}
function oktsg_GLSLVec4Inline_getName($this) {
    return $this.$name31;
}
function oktsg_GLSLVec4Inline__init_0($this, $x, $y, $z, $w, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktsg_ShaderData__init_0($this);
    $this.$x3 = $x;
    $this.$y3 = $y;
    $this.$z2 = $z;
    $this.$w0 = $w;
    $this.$name31 = $name;
}
function oktsg_GLSLVec4Inline__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$6 & 1)
        var$1 = 0.0;
    if (var$6 & 2)
        var$2 = 0.0;
    if (var$6 & 4)
        var$3 = 0.0;
    if (var$6 & 8)
        var$4 = 0.0;
    if (var$6 & 16)
        var$5 = $rt_s(6);
    oktsg_GLSLVec4Inline__init_0(var$0, var$1, var$2, var$3, var$4, var$5);
}
function oktsg_GLSLVec4Inline__init_4(var$0) {
    oktsg_GLSLVec4Inline__init_2(var$0, 0.0, 0.0, 0.0, 0.0, null, 31, null);
}
function oktt_TvmAL() {
    jl_Object.call(this);
    this.$context = null;
}
function oktt_TvmAL__init_() {
    var var_0 = new oktt_TvmAL();
    oktt_TvmAL__init_0(var_0);
    return var_0;
}
function oktt_TvmAL_getContext($this) {
    return $this.$context;
}
function oktt_TvmAL_newSound($this, $file) {
    kji_Intrinsics_checkParameterIsNotNull($file, $rt_s(282));
    return oktt_TvmSound__init_($this, $file.$getPath());
}
function oktt_TvmAL__init_0($this) {
    jl_Object__init_0($this);
    $this.$context = otjw_AudioContext_create$js_body$_44();
}
function oktgg_GLTFBufferView() {
    var a = this; jl_Object.call(a);
    a.$gltf7 = null;
    a.$elementIndex6 = 0;
    a.$buffer1 = 0;
    a.$byteLength0 = 0;
    a.$byteOffset2 = 0;
    a.$byteStride = 0;
    a.$target = 0;
    a.$name32 = null;
}
function oktgg_GLTFBufferView__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new oktgg_GLTFBufferView();
    oktgg_GLTFBufferView__init_0(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function oktgg_GLTFBufferView__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) {
    var var_10 = new oktgg_GLTFBufferView();
    oktgg_GLTFBufferView__init_2(var_10, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9);
    return var_10;
}
function oktgg_GLTFBufferView_read($this, $json) {
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $this.$buffer1 = $json.$int0($rt_s(467));
    $this.$byteLength0 = $json.$int0($rt_s(609));
    $json.$int($rt_s(266), oktgg_GLTFBufferView$read$1__init_($this));
    $json.$int($rt_s(1100), oktgg_GLTFBufferView$read$2__init_($this));
    $json.$int($rt_s(1101), oktgg_GLTFBufferView$read$3__init_($this));
    oktgg_GLTFBufferView_getGltf($this).$getBufferViews0().$ready(oktgg_GLTFBufferView_getElementIndex($this));
}
function oktgg_GLTFBufferView_getGltf($this) {
    return $this.$gltf7;
}
function oktgg_GLTFBufferView_getElementIndex($this) {
    return $this.$elementIndex6;
}
function oktgg_GLTFBufferView_getBuffer($this) {
    return $this.$buffer1;
}
function oktgg_GLTFBufferView_getByteLength($this) {
    return $this.$byteLength0;
}
function oktgg_GLTFBufferView_getByteOffset($this) {
    return $this.$byteOffset2;
}
function oktgg_GLTFBufferView_setByteOffset($this, $_set___) {
    $this.$byteOffset2 = $_set___;
}
function oktgg_GLTFBufferView_getByteStride($this) {
    return $this.$byteStride;
}
function oktgg_GLTFBufferView_setByteStride($this, $_set___) {
    $this.$byteStride = $_set___;
}
function oktgg_GLTFBufferView_setTarget($this, $_set___) {
    $this.$target = $_set___;
}
function oktgg_GLTFBufferView__init_0($this, $gltf, $elementIndex, $buffer, $byteLength, $byteOffset, $byteStride, $target, $name) {
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    jl_Object__init_0($this);
    $this.$gltf7 = $gltf;
    $this.$elementIndex6 = $elementIndex;
    $this.$buffer1 = $buffer;
    $this.$byteLength0 = $byteLength;
    $this.$byteOffset2 = $byteOffset;
    $this.$byteStride = $byteStride;
    $this.$target = $target;
    $this.$name32 = $name;
}
function oktgg_GLTFBufferView__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10) {
    if (var$9 & 4)
        var$3 = (-1);
    if (var$9 & 8)
        var$4 = (-1);
    if (var$9 & 16)
        var$5 = 0;
    if (var$9 & 32)
        var$6 = (-1);
    if (var$9 & 64)
        var$7 = (-1);
    if (var$9 & 128)
        var$8 = $rt_s(6);
    oktgg_GLTFBufferView__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8);
}
function oktm_IMesh$Companion() {
    jl_Object.call(this);
}
var oktm_IMesh$Companion_autoBind = 0;
var oktm_IMesh$Companion_Build = null;
var oktm_IMesh$Companion_$$INSTANCE = null;
function oktm_IMesh$Companion_$callClinit() {
    oktm_IMesh$Companion_$callClinit = $rt_eraseClinit(oktm_IMesh$Companion);
    oktm_IMesh$Companion__clinit_();
}
function oktm_IMesh$Companion__init_() {
    var var_0 = new oktm_IMesh$Companion();
    oktm_IMesh$Companion__init_0(var_0);
    return var_0;
}
function oktm_IMesh$Companion_getAutoBind($this) {
    return oktm_IMesh$Companion_autoBind;
}
function oktm_IMesh$Companion_getBuild($this) {
    return oktm_IMesh$Companion_Build;
}
function oktm_IMesh$Companion__init_0($this) {
    oktm_IMesh$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktm_IMesh$Companion__clinit_() {
    oktm_IMesh$Companion_$$INSTANCE = oktm_IMesh$Companion__init_();
    oktm_IMesh$Companion_autoBind = 1;
    oktm_IMesh$Companion$Build$1_$callClinit();
    oktm_IMesh$Companion_Build = oktm_IMesh$Companion$Build$1_INSTANCE;
}
function oti_AsyncCallback() {
}
function otpp_AsyncCallbackWrapper() {
    jl_Object.call(this);
    this.$realAsyncCallback = null;
}
function otpp_AsyncCallbackWrapper__init_(var_0) {
    var var_1 = new otpp_AsyncCallbackWrapper();
    otpp_AsyncCallbackWrapper__init_0(var_1, var_0);
    return var_1;
}
function otpp_AsyncCallbackWrapper__init_0($this, $realAsyncCallback) {
    jl_Object__init_0($this);
    $this.$realAsyncCallback = $realAsyncCallback;
}
function otpp_AsyncCallbackWrapper_create($realAsyncCallback) {
    return otpp_AsyncCallbackWrapper__init_($realAsyncCallback);
}
function otpp_AsyncCallbackWrapper_complete($this, $result) {
    $this.$realAsyncCallback.$complete($result);
}
function otpp_AsyncCallbackWrapper_error($this, $e) {
    $this.$realAsyncCallback.$error($e);
}
function okti_IImg$load$1() {
    kji_Lambda.call(this);
}
var okti_IImg$load$1_INSTANCE = null;
function okti_IImg$load$1_$callClinit() {
    okti_IImg$load$1_$callClinit = $rt_eraseClinit(okti_IImg$load$1);
    okti_IImg$load$1__clinit_();
}
function okti_IImg$load$1__init_() {
    var var_0 = new okti_IImg$load$1();
    okti_IImg$load$1__init_0(var_0);
    return var_0;
}
function okti_IImg$load$1_invoke(var$0, var$1, var$2) {
    okti_IImg$load$1_invoke0(var$0, var$1.$intValue(), var$2);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okti_IImg$load$1_invoke0($this, $$noName_0, $$noName_1) {
    kji_Intrinsics_checkParameterIsNotNull($$noName_1, $rt_s(1097));
}
function okti_IImg$load$1__init_0(var$0) {
    okti_IImg$load$1_$callClinit();
    kji_Lambda__init_0(var$0, 2);
}
function okti_IImg$load$1__clinit_() {
    okti_IImg$load$1_INSTANCE = okti_IImg$load$1__init_();
}
function oktpo_BodyContactPair() {
    var a = this; jl_Object.call(a);
    a.$a = null;
    a.$b0 = null;
    a.$depth0 = 0.0;
    a.$lifeTime = 0.0;
}
function oktpo_BodyContactPair__init_() {
    var var_0 = new oktpo_BodyContactPair();
    oktpo_BodyContactPair__init_0(var_0);
    return var_0;
}
function oktpo_BodyContactPair_getA($this) {
    var var$1;
    var$1 = $this.$a;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1102));
    return var$1;
}
function oktpo_BodyContactPair_setA($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$a = $_set___;
}
function oktpo_BodyContactPair_getB($this) {
    var var$1;
    var$1 = $this.$b0;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1103));
    return var$1;
}
function oktpo_BodyContactPair_setB($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$b0 = $_set___;
}
function oktpo_BodyContactPair_getDepth($this) {
    return $this.$depth0;
}
function oktpo_BodyContactPair_setDepth($this, $_set___) {
    $this.$depth0 = $_set___;
}
function oktpo_BodyContactPair_getLifeTime($this) {
    return $this.$lifeTime;
}
function oktpo_BodyContactPair_setLifeTime($this, $_set___) {
    $this.$lifeTime = $_set___;
}
function oktpo_BodyContactPair_equals($this, $other) {
    var var$2, var$3, var$4, var$5;
    if ($other === null)
        $rt_throw(k_TypeCastException__init_($rt_s(1104)));
    var$2 = $other;
    var$3 = var$2.$a;
    if (var$3 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1102));
    var$4 = $this.$a;
    if (var$4 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1102));
    a: {
        if (kji_Intrinsics_areEqual(var$3, var$4)) {
            var$2 = var$2.$b0;
            if (var$2 === null)
                kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1103));
            var$3 = $this.$b0;
            if (var$3 === null)
                kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1103));
            if (kji_Intrinsics_areEqual(var$2, var$3)) {
                var$5 = 1;
                break a;
            }
        }
        var$5 = 0;
    }
    return var$5;
}
function oktpo_BodyContactPair_hashCode($this) {
    var var$1, var$2;
    var$1 = $this.$a;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1102));
    var$2 = var$1.$hashCode() * 31 | 0;
    var$1 = $this.$b0;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1103));
    return var$2 + var$1.$hashCode() | 0;
}
function oktpo_BodyContactPair__init_0($this) {
    jl_Object__init_0($this);
}
function oktts_SSAOBaseTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$cubeMatrix0 = null;
    a.$$gBuffer1 = null;
    a.$$sceneShader = null;
    a.$$cube2 = null;
    a.$$planeMatrix = null;
    a.$$plane2 = null;
    a.$$ssao = null;
    a.$$screenQuad6 = null;
}
function oktts_SSAOBaseTest$testMain$1__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new oktts_SSAOBaseTest$testMain$1();
    oktts_SSAOBaseTest$testMain$1__init_0(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function oktts_SSAOBaseTest$testMain$1_invoke(var$0) {
    oktts_SSAOBaseTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktts_SSAOBaseTest$testMain$1_invoke0($this) {
    var var$1;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$cubeMatrix0;
    okt_APP_$callClinit();
    var$1.$rotate(0.0, 1.0, 0.0, okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktt_GBuffer_render($this.$$gBuffer1, oktts_SSAOBaseTest$testMain$1$1__init_($this));
    oktsp_SSAO_render($this.$$ssao, $this.$$screenQuad6, null);
}
function oktts_SSAOBaseTest$testMain$1__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    var$0.$$cubeMatrix0 = var$1;
    var$0.$$gBuffer1 = var$2;
    var$0.$$sceneShader = var$3;
    var$0.$$cube2 = var$4;
    var$0.$$planeMatrix = var$5;
    var$0.$$plane2 = var$6;
    var$0.$$ssao = var$7;
    var$0.$$screenQuad6 = var$8;
    kji_Lambda__init_0(var$0, 0);
}
function kr_IntProgression() {
    var a = this; jl_Object.call(a);
    a.$first2 = 0;
    a.$last0 = 0;
    a.$step0 = 0;
}
var kr_IntProgression_Companion = null;
function kr_IntProgression_$callClinit() {
    kr_IntProgression_$callClinit = $rt_eraseClinit(kr_IntProgression);
    kr_IntProgression__clinit_();
}
function kr_IntProgression__init_(var_0, var_1, var_2) {
    var var_3 = new kr_IntProgression();
    kr_IntProgression__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function kr_IntProgression_getFirst($this) {
    return $this.$first2;
}
function kr_IntProgression_getLast($this) {
    return $this.$last0;
}
function kr_IntProgression_getStep($this) {
    return $this.$step0;
}
function kr_IntProgression__init_0($this, $start, $endInclusive, $step) {
    kr_IntProgression_$callClinit();
    jl_Object__init_0($this);
    if (!$step)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1105)));
    if ($step != (-2147483648)) {
        $this.$first2 = $start;
        $this.$last0 = ki_ProgressionUtilKt_getProgressionLastElement($start, $endInclusive, $step);
        $this.$step0 = $step;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1106)));
}
function kr_IntProgression__clinit_() {
    kr_IntProgression_Companion = kr_IntProgression$Companion__init_1(null);
}
function kr_IntRange() {
    kr_IntProgression.call(this);
}
var kr_IntRange_EMPTY = null;
var kr_IntRange_Companion = null;
function kr_IntRange_$callClinit() {
    kr_IntRange_$callClinit = $rt_eraseClinit(kr_IntRange);
    kr_IntRange__clinit_();
}
function kr_IntRange__init_(var_0, var_1) {
    var var_2 = new kr_IntRange();
    kr_IntRange__init_0(var_2, var_0, var_1);
    return var_2;
}
function kr_IntRange_getStart($this) {
    return jl_Integer_valueOf(kr_IntProgression_getFirst($this));
}
function kr_IntRange_getEndInclusive($this) {
    return jl_Integer_valueOf(kr_IntProgression_getLast($this));
}
function kr_IntRange__init_0($this, $start, $endInclusive) {
    kr_IntRange_$callClinit();
    kr_IntProgression__init_0($this, $start, $endInclusive, 1);
}
function kr_IntRange__clinit_() {
    kr_IntRange_Companion = kr_IntRange$Companion__init_(null);
    kr_IntRange_EMPTY = kr_IntRange__init_(1, 0);
}
function kr_IntRange_access$getEMPTY$cp() {
    kr_IntRange_$callClinit();
    return kr_IntRange_EMPTY;
}
function oooicj_IntArray() {
    var a = this; jl_Object.call(a);
    a.$_data1 = null;
    a.$_ofs1 = 0;
}
function oooicj_IntArray__init_(var_0, var_1) {
    var var_2 = new oooicj_IntArray();
    oooicj_IntArray__init_0(var_2, var_0, var_1);
    return var_2;
}
function oooicj_IntArray__init_0($this, $array, $ofs) {
    jl_Object__init_0($this);
    $this.$_data1 = $array;
    $this.$_ofs1 = $ofs;
}
function oooicj_IntArray_at($this, $ofs) {
    return $this.$_data1.data[$this.$_ofs1 + $ofs | 0];
}
function oooicj_IntArray_inc($this, $n) {
    $this.$_ofs1 = $this.$_ofs1 + $n | 0;
}
function oooic_Csetjmp() {
    oooic_Cstdarg.call(this);
}
function oooic_Csetjmp__init_() {
    var var_0 = new oooic_Csetjmp();
    oooic_Csetjmp__init_0(var_0);
    return var_0;
}
function oooic_Csetjmp__init_0($this) {
    oooic_Cstdarg__init_0($this);
}
function oooic_Cmath() {
    oooic_Csetjmp.call(this);
}
function oooic_Cmath__init_() {
    var var_0 = new oooic_Cmath();
    oooic_Cmath__init_0(var_0);
    return var_0;
}
function oooic_Cmath__init_0($this) {
    oooic_Csetjmp__init_0($this);
}
function oooic_Cmath_ldexp($num, $exp) {
    return $num * jl_Math_pow(2.0, $exp);
}
function oooic_Cmath_frexp($num, $exp) {
    var $bits;
    if ($num === 0.0) {
        $exp.$i = 0;
        return 0.0;
    }
    if (isNaN($num) ? 1 : 0)
        return NaN;
    $bits = $rt_doubleToLongBits($num);
    $exp.$i = Long_shr(Long_and(new Long(0, 2146435072), $bits), 52).lo - 1022 | 0;
    return $rt_longBitsToDouble(Long_or(Long_and(new Long(4294967295, 2148532223), $bits), new Long(0, 1071644672)));
}
function oooic_C_All() {
    oooic_Cmath.call(this);
}
function oooic_C_All__init_() {
    var var_0 = new oooic_C_All();
    oooic_C_All__init_0(var_0);
    return var_0;
}
function oooic_C_All__init_0($this) {
    oooic_Cmath__init_0($this);
}
function ooo_DHeightfieldData() {
}
function oktg_World() {
    var a = this; jl_Object.call(a);
    a.$fogColor = null;
    a.$fogHeight = 0.0;
    a.$fogMul = 0.0;
    a.$ambientColor = null;
    a.$exposure = 0.0;
}
function oktg_World__init_() {
    var var_0 = new oktg_World();
    oktg_World__init_0(var_0);
    return var_0;
}
function oktg_World_getAmbientColor($this) {
    return $this.$ambientColor;
}
function oktg_World_getExposure($this) {
    return $this.$exposure;
}
function oktg_World__init_0($this) {
    jl_Object__init_0($this);
    $this.$fogColor = oktm_Vec4__init_0(0.5, 0.5, 0.5, 1.0);
    $this.$fogHeight = 50.0;
    $this.$fogMul = 0.0010000000474974513;
    $this.$ambientColor = oktm_Vec3__init_2(0.029999999329447746);
    $this.$exposure = 1.0;
}
function okttp_BoxShapeTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$control5 = null;
    a.$$world1 = null;
    a.$$shader9 = null;
    a.$$static10 = null;
    a.$$tmp1 = null;
    a.$$boxMesh = null;
    a.$$static20 = null;
    a.$$dynamic1 = null;
}
function okttp_BoxShapeTest$testMain$1__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new okttp_BoxShapeTest$testMain$1();
    okttp_BoxShapeTest$testMain$1__init_0(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function okttp_BoxShapeTest$testMain$1_invoke(var$0) {
    okttp_BoxShapeTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttp_BoxShapeTest$testMain$1_invoke0($this) {
    var var$1;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$control5;
    okt_APP_$callClinit();
    var$1.$update(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    $this.$$world1.$step(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    $this.$$shader9.$bind();
    $this.$$shader9.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $this.$$shader9.$set12($rt_s(563), $this.$$static10.$getWorldTransform($this.$$tmp1));
    oktm_IMesh$DefaultImpls_render$default($this.$$boxMesh, $this.$$shader9, 0, 0, 0, 0, 30, null);
    $this.$$shader9.$set12($rt_s(563), $this.$$static20.$getWorldTransform($this.$$tmp1));
    oktm_IMesh$DefaultImpls_render$default($this.$$boxMesh, $this.$$shader9, 0, 0, 0, 0, 30, null);
    $this.$$shader9.$set12($rt_s(563), $this.$$dynamic1.$getWorldTransform($this.$$tmp1));
    oktm_IMesh$DefaultImpls_render$default($this.$$boxMesh, $this.$$shader9, 0, 0, 0, 0, 30, null);
}
function okttp_BoxShapeTest$testMain$1__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    var$0.$$control5 = var$1;
    var$0.$$world1 = var$2;
    var$0.$$shader9 = var$3;
    var$0.$$static10 = var$4;
    var$0.$$tmp1 = var$5;
    var$0.$$boxMesh = var$6;
    var$0.$$static20 = var$7;
    var$0.$$dynamic1 = var$8;
    kji_Lambda__init_0(var$0, 0);
}
function oooi_DxSphere$CollideSphereSphere() {
    jl_Object.call(this);
}
function oooi_DxSphere$CollideSphereSphere__init_() {
    var var_0 = new oooi_DxSphere$CollideSphereSphere();
    oooi_DxSphere$CollideSphereSphere__init_0(var_0);
    return var_0;
}
function oooi_DxSphere$CollideSphereSphere__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxSphere$CollideSphereSphere_dCollideSphereSphere($this, $sphere1, $sphere2, $flags, $contacts, $skip) {
    var $contact, var$7, var$8, var$9, var$10;
    oooi_Common_dIASSERT($skip != 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $contact = ooo_DContactGeomBuffer_get($contacts, 0);
    $contact.$g1 = $sphere1;
    $contact.$g2 = $sphere2;
    $contact.$side1 = (-1);
    $contact.$side2 = (-1);
    var$7 = $sphere1.$final_posr().$pos();
    var$8 = oooi_DxSphere_access$000($sphere1);
    var$9 = $sphere2.$final_posr().$pos();
    var$10 = oooi_DxSphere_access$000($sphere2);
    return oooi_DxCollisionUtil_dCollideSpheres(var$7, var$8, var$9, var$10, $contacts);
}
function oooi_DxSphere$CollideSphereSphere_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideSphereSphere($o1, $o2, $flags, $contacts, 1);
}
function oooi_CollisionLibccd$CollideConvexCapsuleCCD() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$CollideConvexCapsuleCCD__init_() {
    var var_0 = new oooi_CollisionLibccd$CollideConvexCapsuleCCD();
    oooi_CollisionLibccd$CollideConvexCapsuleCCD__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$CollideConvexCapsuleCCD__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$CollideConvexCapsuleCCD_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    var $cap, $conv, var$7, var$8, var$9, var$10;
    $cap = oooi_CollisionLibccd$ccd_cap_t__init_();
    $conv = oooi_CollisionLibccd$ccd_convex_t__init_(null);
    oooi_CollisionLibccd_ccdGeomToConvex($o1, $conv);
    oooi_CollisionLibccd_ccdGeomToCap($o2, $cap);
    var$7 = oooi_CollisionLibccd_access$500();
    var$8 = oooi_CollisionLibccd_access$100();
    var$9 = oooi_CollisionLibccd_ccdSupportCap;
    var$10 = oooi_CollisionLibccd_access$100();
    return oooi_CollisionLibccd_ccdCollide($o1, $o2, $flags, $contacts, $conv, var$7, var$8, $cap, var$9, var$10);
}
function oktpo_IOdeGeom$DefaultImpls() {
    jl_Object.call(this);
}
function oktpo_IOdeGeom$DefaultImpls_getSourceObject($$this) {
    return $$this.$getGeom();
}
function oktpo_IOdeGeom$DefaultImpls_setPosition($$this, $x, $y, $z) {
    $$this.$getGeom().$setPosition3($x, $y, $z);
    return $$this;
}
function oooi_DxPlane() {
    oooi_DxGeom.call(this);
}
function jur_UMultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter2 = 0;
}
function jur_UMultiLineEOLSet__init_(var_0) {
    var var_1 = new jur_UMultiLineEOLSet();
    jur_UMultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UMultiLineEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_0($this);
    $this.$consCounter2 = $counter;
}
function jur_UMultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $strDif;
    $strDif = !$matchResult.$hasAnchoringBounds() ? $testString.$length() - $strIndex | 0 : $matchResult.$getRightBound() - $strIndex | 0;
    if ($strDif <= 0) {
        $matchResult.$setConsumed($this.$consCounter2, 0);
        return $this.$next0.$matches($strIndex, $testString, $matchResult);
    }
    if ($testString.$charAt($strIndex) != 10)
        return (-1);
    $matchResult.$setConsumed($this.$consCounter2, 1);
    return $this.$next0.$matches($strIndex + 1 | 0, $testString, $matchResult);
}
function jur_UMultiLineEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter2) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter2, (-1));
    return $res;
}
function kji_Ref$FloatRef() {
    jl_Object.call(this);
    this.$element2 = 0.0;
}
function kji_Ref$FloatRef__init_() {
    var var_0 = new kji_Ref$FloatRef();
    kji_Ref$FloatRef__init_0(var_0);
    return var_0;
}
function kji_Ref$FloatRef__init_0($this) {
    jl_Object__init_0($this);
}
function oktsp_SSAO$Companion() {
    jl_Object.call(this);
}
function oktsp_SSAO$Companion__init_0() {
    var var_0 = new oktsp_SSAO$Companion();
    oktsp_SSAO$Companion__init_1(var_0);
    return var_0;
}
function oktsp_SSAO$Companion__init_(var_0) {
    var var_1 = new oktsp_SSAO$Companion();
    oktsp_SSAO$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsp_SSAO$Companion_ssaoCode($this, $occlusionSamplesNum) {
    var var$2;
    var$2 = jl_StringBuilder__init_().$append($rt_s(1107));
    var$2 = var$2.$append1($occlusionSamplesNum).$append($rt_s(1108));
    var$2 = var$2.$append1($occlusionSamplesNum).$append($rt_s(1109));
    var$2 = var$2.$append1($occlusionSamplesNum).$append($rt_s(1110)).$toString();
    return var$2;
}
function oktsp_SSAO$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function oktsp_SSAO$Companion__init_2($this, $$constructor_marker) {
    oktsp_SSAO$Companion__init_1($this);
}
function ooo_DContact() {
    var a = this; jl_Object.call(a);
    a.$surface = null;
    a.$geom1 = null;
    a.$fdir1 = null;
}
function ooo_DContact__init_() {
    var var_0 = new ooo_DContact();
    ooo_DContact__init_0(var_0);
    return var_0;
}
function ooo_DContact__init_0($this) {
    jl_Object__init_0($this);
    $this.$surface = ooo_DContact$DSurfaceParameters__init_();
    $this.$geom1 = ooo_DContactGeom__init_();
    $this.$fdir1 = oom_DVector3__init_();
}
function ooo_DContact_getContactGeom($this) {
    return $this.$geom1;
}
function oooig_GimBufferArrayFloat$GIM_PROCESS_BUFFER_ARRAY_FN() {
}
function oooig_GimTrimesh$1() {
    jl_Object.call(this);
    this.$this$0134 = null;
}
function oooig_GimTrimesh$1__init_(var_0) {
    var var_1 = new oooig_GimTrimesh$1();
    oooig_GimTrimesh$1__init_0(var_1, var_0);
    return var_1;
}
function oooig_GimTrimesh$1__init_0($this, $this$0) {
    $this.$this$0134 = $this$0;
    jl_Object__init_0($this);
}
function oooig_GimTrimesh$1_run($this, $_mat, $_src, $_dst) {
    oooig_GimGeometry_MAT_DOT_VEC_3X4($_dst, $_mat, $_src);
}
function okttsg_GBufferTest$testMain$1$2() {
    kji_Lambda.call(this);
    this.$this$0135 = null;
}
function okttsg_GBufferTest$testMain$1$2__init_(var_0) {
    var var_1 = new okttsg_GBufferTest$testMain$1$2();
    okttsg_GBufferTest$testMain$1$2__init_0(var_1, var_0);
    return var_1;
}
function okttsg_GBufferTest$testMain$1$2_invoke(var$0, var$1) {
    okttsg_GBufferTest$testMain$1$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttsg_GBufferTest$testMain$1$2_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktm_ScreenQuad$TextureRenderer_setPosition($this.$this$0135.$$screenQuad, (-0.5), 0.5);
}
function okttsg_GBufferTest$testMain$1$2__init_0(var$0, var$1) {
    var$0.$this$0135 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function okttsg_GBufferTest$testMain$1$1() {
    kji_Lambda.call(this);
    this.$this$0136 = null;
}
function okttsg_GBufferTest$testMain$1$1__init_(var_0) {
    var var_1 = new okttsg_GBufferTest$testMain$1$1();
    okttsg_GBufferTest$testMain$1$1__init_0(var_1, var_0);
    return var_1;
}
function okttsg_GBufferTest$testMain$1$1_invoke(var$0, var$1) {
    okttsg_GBufferTest$testMain$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttsg_GBufferTest$testMain$1$1_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_GLTFModel_update$default($this.$this$0136.$$model, 0.0, 1, null);
    oktt_GLTFModel_render($this.$this$0136.$$model);
}
function okttsg_GBufferTest$testMain$1$1__init_0(var$0, var$1) {
    var$0.$this$0136 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function okttsg_GBufferTest$testMain$1$4() {
    kji_Lambda.call(this);
    this.$this$0137 = null;
}
function okttsg_GBufferTest$testMain$1$4__init_(var_0) {
    var var_1 = new okttsg_GBufferTest$testMain$1$4();
    okttsg_GBufferTest$testMain$1$4__init_0(var_1, var_0);
    return var_1;
}
function okttsg_GBufferTest$testMain$1$4_invoke(var$0, var$1) {
    okttsg_GBufferTest$testMain$1$4_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttsg_GBufferTest$testMain$1$4_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktm_ScreenQuad$TextureRenderer_setPosition($this.$this$0137.$$screenQuad, (-0.5), (-0.5));
}
function okttsg_GBufferTest$testMain$1$4__init_0(var$0, var$1) {
    var$0.$this$0137 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function okttsg_GBufferTest$testMain$1$3() {
    kji_Lambda.call(this);
    this.$this$0138 = null;
}
function okttsg_GBufferTest$testMain$1$3__init_(var_0) {
    var var_1 = new okttsg_GBufferTest$testMain$1$3();
    okttsg_GBufferTest$testMain$1$3__init_0(var_1, var_0);
    return var_1;
}
function okttsg_GBufferTest$testMain$1$3_invoke(var$0, var$1) {
    okttsg_GBufferTest$testMain$1$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttsg_GBufferTest$testMain$1$3_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktm_ScreenQuad$TextureRenderer_setPosition($this.$this$0138.$$screenQuad, 0.5, 0.5);
}
function okttsg_GBufferTest$testMain$1$3__init_0(var$0, var$1) {
    var$0.$this$0138 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function okttsg_GBufferTest$testMain$1$5() {
    kji_Lambda.call(this);
    this.$this$0139 = null;
}
function okttsg_GBufferTest$testMain$1$5__init_(var_0) {
    var var_1 = new okttsg_GBufferTest$testMain$1$5();
    okttsg_GBufferTest$testMain$1$5__init_0(var_1, var_0);
    return var_1;
}
function okttsg_GBufferTest$testMain$1$5_invoke(var$0, var$1) {
    okttsg_GBufferTest$testMain$1$5_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttsg_GBufferTest$testMain$1$5_invoke0($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktm_ScreenQuad$TextureRenderer_setPosition($this.$this$0139.$$screenQuad, 0.5, (-0.5));
}
function okttsg_GBufferTest$testMain$1$5__init_0(var$0, var$1) {
    var$0.$this$0139 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jl_ConsoleOutputStreamStderr() {
    ji_OutputStream.call(this);
}
function jl_ConsoleOutputStreamStderr__init_() {
    var var_0 = new jl_ConsoleOutputStreamStderr();
    jl_ConsoleOutputStreamStderr__init_0(var_0);
    return var_0;
}
function jl_ConsoleOutputStreamStderr__init_0($this) {
    ji_OutputStream__init_0($this);
}
function jl_ConsoleOutputStreamStderr_write($this, $b) {
    jl_ConsoleOutputStreamStderr_writeImpl($b);
}
function jl_ConsoleOutputStreamStderr_writeImpl($b) {
    $rt_putStderr($b);
}
function oktmb_BoxMeshBuilder() {
    var a = this; oktmb_MeshBuilder.call(a);
    a.$xSize = 0.0;
    a.$ySize = 0.0;
    a.$zSize = 0.0;
}
var oktmb_BoxMeshBuilder_Companion = null;
function oktmb_BoxMeshBuilder_$callClinit() {
    oktmb_BoxMeshBuilder_$callClinit = $rt_eraseClinit(oktmb_BoxMeshBuilder);
    oktmb_BoxMeshBuilder__clinit_();
}
function oktmb_BoxMeshBuilder__init_0(var_0, var_1, var_2) {
    var var_3 = new oktmb_BoxMeshBuilder();
    oktmb_BoxMeshBuilder__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktmb_BoxMeshBuilder__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktmb_BoxMeshBuilder();
    oktmb_BoxMeshBuilder__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktmb_BoxMeshBuilder__init_3() {
    var var_0 = new oktmb_BoxMeshBuilder();
    oktmb_BoxMeshBuilder__init_4(var_0);
    return var_0;
}
function oktmb_BoxMeshBuilder_build($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $out.$setVertices(oktmb_MeshBuilder_createVerticesFloat($this, 24, oktmb_BoxMeshBuilder$build$1__init_($this)));
    oktmb_BoxMeshBuilder$build$2_$callClinit();
    $out.$setIndices(oktmb_MeshBuilder_createIndicesShort($this, 36, oktmb_BoxMeshBuilder$build$2_INSTANCE));
    return oktmb_MeshBuilder_build($this, $out);
}
function oktmb_BoxMeshBuilder_putSide($this, $out, $xn, $yn, $zn, $x1, $y1, $z1, $x2, $y2, $z2, $x3, $y3, $z3, $x4, $y4, $z4) {
    oktmb_BoxMeshBuilder_putVertex($this, $out, $x1, $y1, $z1, 0.0, 0.0, $xn, $yn, $zn);
    oktmb_BoxMeshBuilder_putVertex($this, $out, $x2, $y2, $z2, 1.0, 0.0, $xn, $yn, $zn);
    oktmb_BoxMeshBuilder_putVertex($this, $out, $x3, $y3, $z3, 1.0, 1.0, $xn, $yn, $zn);
    oktmb_BoxMeshBuilder_putVertex($this, $out, $x4, $y4, $z4, 0.0, 1.0, $xn, $yn, $zn);
}
function oktmb_BoxMeshBuilder_putVertex($this, $out, $x, $y, $z, $u, $v, $xn, $yn, $zn) {
    var var$10, var$11;
    var$10 = $rt_createArray(jl_Float, 3);
    var$11 = var$10.data;
    var$11[0] = jl_Float_valueOf($x);
    var$11[1] = jl_Float_valueOf($y);
    var$11[2] = jl_Float_valueOf($z);
    $out.$put4(var$10);
    if ($this.$getUv()) {
        var$10 = $rt_createArray(jl_Float, 2);
        var$11 = var$10.data;
        var$11[0] = jl_Float_valueOf($u);
        var$11[1] = jl_Float_valueOf($v);
        $out.$put4(var$10);
    }
    if ($this.$getNormals()) {
        var$10 = $rt_createArray(jl_Float, 3);
        var$11 = var$10.data;
        var$11[0] = jl_Float_valueOf($xn);
        var$11[1] = jl_Float_valueOf($yn);
        var$11[2] = jl_Float_valueOf($zn);
        $out.$put4(var$10);
    }
}
function oktmb_BoxMeshBuilder_getXSize($this) {
    return $this.$xSize;
}
function oktmb_BoxMeshBuilder_setXSize($this, $_set___) {
    $this.$xSize = $_set___;
}
function oktmb_BoxMeshBuilder_getYSize($this) {
    return $this.$ySize;
}
function oktmb_BoxMeshBuilder_setYSize($this, $_set___) {
    $this.$ySize = $_set___;
}
function oktmb_BoxMeshBuilder_getZSize($this) {
    return $this.$zSize;
}
function oktmb_BoxMeshBuilder_setZSize($this, $_set___) {
    $this.$zSize = $_set___;
}
function oktmb_BoxMeshBuilder__init_1($this, $xSize, $ySize, $zSize) {
    oktmb_BoxMeshBuilder_$callClinit();
    oktmb_MeshBuilder__init_0($this);
    $this.$xSize = $xSize;
    $this.$ySize = $ySize;
    $this.$zSize = $zSize;
}
function oktmb_BoxMeshBuilder__init_2(var$0, var$1, var$2, var$3, var$4, var$5) {
    oktmb_BoxMeshBuilder_$callClinit();
    if (var$4 & 1)
        var$1 = 1.0;
    if (var$4 & 2)
        var$2 = 1.0;
    if (var$4 & 4)
        var$3 = 1.0;
    oktmb_BoxMeshBuilder__init_1(var$0, var$1, var$2, var$3);
}
function oktmb_BoxMeshBuilder__init_4(var$0) {
    oktmb_BoxMeshBuilder_$callClinit();
    oktmb_BoxMeshBuilder__init_2(var$0, 0.0, 0.0, 0.0, 7, null);
}
function oktmb_BoxMeshBuilder__clinit_() {
    oktmb_BoxMeshBuilder_Companion = oktmb_BoxMeshBuilder$Companion__init_(null);
}
function oktmb_BoxMeshBuilder_access$putSide($$this, $out, $xn, $yn, $zn, $x1, $y1, $z1, $x2, $y2, $z2, $x3, $y3, $z3, $x4, $y4, $z4) {
    oktmb_BoxMeshBuilder_$callClinit();
    oktmb_BoxMeshBuilder_putSide($$this, $out, $xn, $yn, $zn, $x1, $y1, $z1, $x2, $y2, $z2, $x3, $y3, $z3, $x4, $y4, $z4);
}
function oktd_IDataArray$DefaultImpls() {
    jl_Object.call(this);
}
function oktd_IDataArray$DefaultImpls_put0($$this, $index, $value) {
    $$this.$set53($index, $value);
}
function oktd_IDataArray$DefaultImpls_put($$this, $values) {
    var var$3, $i, var$5;
    var$3 = $values.data;
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    $i = 0;
    var$5 = var$3.length;
    while ($i < var$5) {
        $$this.$put8(var$3[$i]);
        $i = $i + 1 | 0;
    }
}
function otjb_StorageProvider() {
}
function oktgn_IDelegateTransformNode$DefaultImpls() {
    jl_Object.call(this);
}
function oktgn_IDelegateTransformNode$DefaultImpls_getPosition($$this) {
    return $$this.$getNode().$getPosition0();
}
function oktgn_IDelegateTransformNode$DefaultImpls_getRotation($$this) {
    return $$this.$getNode().$getRotation0();
}
function oktgn_IDelegateTransformNode$DefaultImpls_getScale($$this) {
    return $$this.$getNode().$getScale0();
}
function oktgn_IDelegateTransformNode$DefaultImpls_getWorldMatrix($$this) {
    return $$this.$getNode().$getWorldMatrix();
}
function oktgn_IDelegateTransformNode$DefaultImpls_setParentNode($$this, $value) {
    $$this.$getNode().$setParentNode($value);
}
function oktgn_IDelegateTransformNode$DefaultImpls_updateTransform($$this, $recursive) {
    $$this.$getNode().$updateTransform0($recursive);
}
function oktgn_IDelegateTransformNode$DefaultImpls_getWorldMatrix0($$this, $out, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return $$this.$getNode().$getWorldMatrix0($out, $isLocal);
}
function oktgn_IDelegateTransformNode$DefaultImpls_clear($$this) {
    $$this.$getNode().$clear();
}
function jur_AbstractCharClass$LazyCntrl() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyCntrl__init_() {
    var var_0 = new jur_AbstractCharClass$LazyCntrl();
    jur_AbstractCharClass$LazyCntrl__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyCntrl__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyCntrl_computeValue($this) {
    return jur_CharClass__init_().$add0(0, 31).$add(127);
}
function okttsg_EmissionBloomTest$testMain$1() {
    kji_Lambda.call(this);
}
var okttsg_EmissionBloomTest$testMain$1_INSTANCE = null;
function okttsg_EmissionBloomTest$testMain$1_$callClinit() {
    okttsg_EmissionBloomTest$testMain$1_$callClinit = $rt_eraseClinit(okttsg_EmissionBloomTest$testMain$1);
    okttsg_EmissionBloomTest$testMain$1__clinit_();
}
function okttsg_EmissionBloomTest$testMain$1__init_() {
    var var_0 = new okttsg_EmissionBloomTest$testMain$1();
    okttsg_EmissionBloomTest$testMain$1__init_0(var_0);
    return var_0;
}
function okttsg_EmissionBloomTest$testMain$1_invoke(var$0, var$1) {
    okttsg_EmissionBloomTest$testMain$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttsg_EmissionBloomTest$testMain$1_invoke0($this, $model) {
    var $thresholdBuffer, var$3, var$4, var$5, $sceneBuffer, var$7, var$8, $threshold, $bloom, $screenQuad, $control, var$13, var$14;
    kji_Intrinsics_checkParameterIsNotNull($model, $rt_s(5));
    oktt_GLTFModel_setRotate($model, 0);
    $thresholdBuffer = new oktt_SimpleFrameBuffer;
    okt_APP_$callClinit();
    var$3 = okt_APP_getWidth(okt_APP_INSTANCE);
    var$4 = okt_APP_getHeight(okt_APP_INSTANCE);
    var$5 = null;
    oktt_SimpleFrameBuffer__init_($thresholdBuffer, var$3, var$4, 6408, 34842, 5126, 1, 0, 64, var$5);
    $sceneBuffer = new oktt_SimpleFrameBuffer;
    var$7 = okt_APP_getWidth(okt_APP_INSTANCE);
    var$8 = okt_APP_getHeight(okt_APP_INSTANCE);
    var$5 = null;
    oktt_SimpleFrameBuffer__init_($sceneBuffer, var$7, var$8, 6408, 34842, 5126, 1, 0, 64, var$5);
    $threshold = oktsp_Threshold__init_(0.5);
    $bloom = new oktsp_Bloom;
    var$7 = oktt_SimpleFrameBuffer_getWidth($sceneBuffer);
    var$8 = oktt_SimpleFrameBuffer_getHeight($sceneBuffer);
    var$5 = null;
    oktsp_Bloom__init_($bloom, var$7, var$8, 8, 0, 1.2000000476837158, 0, 34842, 5126, 40, var$5);
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    $screenQuad = oktm_ScreenQuad__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    $control = new oktgc_OrbitCameraControl;
    var$13 = oktm_Vec3__init_0(0.0, 1.0, 0.0);
    var$5 = null;
    var$14 = null;
    oktgc_OrbitCameraControl__init_($control, 1.2000000476837158, 1.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, var$5, 0, var$13, 4076, var$14);
    oktgc_OrbitCameraControl_listenToMouse($control);
    var$5 = oktgc_OrbitCameraControl_getHelp($control);
    jl_System_out().$println0(var$5);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttsg_EmissionBloomTest$testMain$1$1__init_($control, $model, $sceneBuffer, $thresholdBuffer, $threshold, $screenQuad, $bloom), 1, null);
}
function okttsg_EmissionBloomTest$testMain$1__init_0(var$0) {
    okttsg_EmissionBloomTest$testMain$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function okttsg_EmissionBloomTest$testMain$1__clinit_() {
    okttsg_EmissionBloomTest$testMain$1_INSTANCE = okttsg_EmissionBloomTest$testMain$1__init_();
}
function oktgg_GLTF$read$3$1() {
    kji_Lambda.call(this);
    this.$this$0140 = null;
}
function oktgg_GLTF$read$3$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$3$1();
    oktgg_GLTF$read$3$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$3$1_invoke(var$0, var$1) {
    oktgg_GLTF$read$3$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$3$1_invoke0($this, $$this$objs) {
    var $bufferView;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $bufferView = oktgg_GLTFBufferView__init_1($this.$this$0140.$this$0141, oktgg_GLTFArray_size($this.$this$0140.$this$0141.$getBufferViews()), 0, 0, 0, 0, 0, null, 252, null);
    $this.$this$0140.$this$0141.$getBufferViews().$add1($bufferView);
    oktgg_GLTFBufferView_read($bufferView, $$this$objs);
}
function oktgg_GLTF$read$3$1__init_0(var$0, var$1) {
    var$0.$this$0140 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jnci_BufferedEncoder$Controller() {
    var a = this; jl_Object.call(a);
    a.$in1 = null;
    a.$out3 = null;
    a.$inPosition = 0;
    a.$outPosition = 0;
}
function jnci_BufferedEncoder$Controller__init_(var_0, var_1) {
    var var_2 = new jnci_BufferedEncoder$Controller();
    jnci_BufferedEncoder$Controller__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnci_BufferedEncoder$Controller__init_0($this, $in, $out) {
    jl_Object__init_0($this);
    $this.$in1 = $in;
    $this.$out3 = $out;
}
function jnci_BufferedEncoder$Controller_hasMoreInput($this) {
    return jn_Buffer_hasRemaining($this.$in1);
}
function jnci_BufferedEncoder$Controller_hasMoreOutput($this, $sz) {
    return jn_Buffer_remaining($this.$out3) < $sz ? 0 : 1;
}
function jnci_BufferedEncoder$Controller_setInPosition($this, $inPosition) {
    $this.$inPosition = $inPosition;
}
function jnci_BufferedEncoder$Controller_setOutPosition($this, $outPosition) {
    $this.$outPosition = $outPosition;
}
function oooig_GimRadixSort$GimExchangeMacro() {
}
function oktg_IArmature$DefaultImpls() {
    jl_Object.call(this);
}
function oktg_IArmature$DefaultImpls_initBones($$this, $bonesNum, $saveLinks) {
    var var$4, var$5, var$6, var$7, $inverseBoneMatricesOld, $boneMatricesOld, $boneNamesOld, $bonesOld, var$12;
    if (!$saveLinks) {
        var$4 = $rt_createArray(oktm_IMat4, $bonesNum);
        var$5 = 0;
        while (var$5 < $bonesNum) {
            var$4.data[var$5] = oktm_Mat4__init_();
            var$5 = var$5 + 1 | 0;
        }
        $$this.$setInverseBoneMatrices(var$4);
        var$4 = $rt_createArray(oktm_IMat4, $bonesNum);
        var$6 = 0;
        while (var$6 < $bonesNum) {
            var$4.data[var$6] = oktm_Mat4__init_();
            var$6 = var$6 + 1 | 0;
        }
        $$this.$setBoneMatrices(var$4);
        var$4 = $rt_createArray(jl_String, $bonesNum);
        var$5 = 0;
        while (var$5 < $bonesNum) {
            var$4.data[var$5] = $rt_s(6);
            var$5 = var$5 + 1 | 0;
        }
        $$this.$setBoneNames(var$4);
        var$4 = $rt_createArray(oktgn_ITransformNode, $bonesNum);
        var$5 = 0;
        while (var$5 < $bonesNum) {
            var$7 = var$4.data;
            oktgn_ITransformNode_$callClinit();
            var$7[var$5] = oktgn_ITransformNode$Companion_getCap(oktgn_ITransformNode_Companion);
            var$5 = var$5 + 1 | 0;
        }
        $$this.$setBones(var$4);
    } else {
        $inverseBoneMatricesOld = $$this.$getInverseBoneMatrices();
        $boneMatricesOld = $$this.$getBoneMatrices();
        $boneNamesOld = $$this.$getBoneNames();
        $bonesOld = $$this.$getBones();
        var$4 = $rt_createArray(oktm_IMat4, $bonesNum);
        var$5 = 0;
        while (var$5 < $bonesNum) {
            var$7 = $inverseBoneMatricesOld.data;
            var$4.data[var$5] = var$5 < var$7.length ? var$7[var$5] : oktm_Mat4__init_();
            var$5 = var$5 + 1 | 0;
        }
        $$this.$setInverseBoneMatrices(var$4);
        var$4 = $rt_createArray(oktm_IMat4, $bonesNum);
        var$5 = 0;
        while (var$5 < $bonesNum) {
            var$7 = $boneMatricesOld.data;
            var$4.data[var$5] = var$5 < var$7.length ? var$7[var$5] : oktm_Mat4__init_();
            var$5 = var$5 + 1 | 0;
        }
        $$this.$setBoneMatrices(var$4);
        var$4 = $rt_createArray(jl_String, $bonesNum);
        var$5 = 0;
        while (var$5 < $bonesNum) {
            var$7 = $boneNamesOld.data;
            var$4.data[var$5] = var$5 >= var$7.length ? $rt_s(6) : var$7[var$5];
            var$5 = var$5 + 1 | 0;
        }
        $$this.$setBoneNames(var$4);
        var$4 = $rt_createArray(oktgn_ITransformNode, $bonesNum);
        var$5 = 0;
        while (var$5 < $bonesNum) {
            var$7 = $bonesOld.data;
            if (var$5 < var$7.length)
                var$12 = var$7[var$5];
            else {
                oktgn_ITransformNode_$callClinit();
                var$12 = oktgn_ITransformNode$Companion_getCap(oktgn_ITransformNode_Companion);
            }
            var$4.data[var$5] = var$12;
            var$5 = var$5 + 1 | 0;
        }
        $$this.$setBones(var$4);
    }
}
function oktg_IArmature$DefaultImpls_initBones$default(var$1, var$2, var$3, var$4, var$5) {
    if (var$5 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1111)));
    if (var$4 & 2)
        var$3 = 1;
    var$1.$initBones0(var$2, var$3);
}
function oktg_IArmature$DefaultImpls_updatePreviousTransform($$this) {
    var $previousBoneMatrices, var$3, $boneMatrices, var$5, $numBones, $i;
    a: {
        $previousBoneMatrices = $$this.$getPreviousBoneMatrices();
        if ($previousBoneMatrices !== oktg_IArmature$Companion_getPreviousBoneMatricesCap(oktg_IArmature_Companion)) {
            var$3 = $previousBoneMatrices.data;
            $boneMatrices = $$this.$getBoneMatrices();
            var$5 = $boneMatrices.data;
            $numBones = jl_Math_max(var$3.length, var$5.length);
            $i = 0;
            while (true) {
                if ($i >= $numBones)
                    break a;
                var$3[$i].$set3(var$5[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function oktg_IArmature$DefaultImpls_update($$this, $delta) {
    var $i, var$4;
    $i = 0;
    var$4 = $$this.$getBoneMatrices().data.length;
    while ($i < var$4) {
        oktgn_ITransformNode$DefaultImpls_getWorldMatrix$default($$this.$getBones().data[$i], $$this.$getBoneMatrices().data[$i], 0, 2, null).$mul($$this.$getInverseBoneMatrices().data[$i]);
        $i = $i + 1 | 0;
    }
}
function oktp_IRigidBody() {
}
function okti_IKB$DefaultImpls() {
    jl_Object.call(this);
}
function okti_IKB$DefaultImpls_getShift($$this) {
    okti_KB_$callClinit();
    return !okti_KB_isKeyPressed(okti_KB_INSTANCE, 59) && !okti_KB_isKeyPressed(okti_KB_INSTANCE, 60) ? 0 : 1;
}
function okts_Shader$Companion() {
    jl_Object.call(this);
}
function okts_Shader$Companion__init_0() {
    var var_0 = new okts_Shader$Companion();
    okts_Shader$Companion__init_1(var_0);
    return var_0;
}
function okts_Shader$Companion__init_(var_0) {
    var var_1 = new okts_Shader$Companion();
    okts_Shader$Companion__init_2(var_1, var_0);
    return var_1;
}
function okts_Shader$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function okts_Shader$Companion__init_2($this, $$constructor_marker) {
    okts_Shader$Companion__init_1($this);
}
function oooi_DxQuickStep$IndexError() {
    jl_Object.call(this);
    this.$index6 = 0;
}
function oooi_DxQuickStep$IndexError__init_() {
    var var_0 = new oooi_DxQuickStep$IndexError();
    oooi_DxQuickStep$IndexError__init_0(var_0);
    return var_0;
}
function oooi_DxQuickStep$IndexError__init_1(var_0) {
    var var_1 = new oooi_DxQuickStep$IndexError();
    oooi_DxQuickStep$IndexError__init_2(var_1, var_0);
    return var_1;
}
function oooi_DxQuickStep$IndexError__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxQuickStep$IndexError__init_2($this, $x0) {
    oooi_DxQuickStep$IndexError__init_0($this);
}
function oktsg_AttributeNode() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$attributeName = null;
    a.$value8 = null;
}
var oktsg_AttributeNode_InputForm = null;
var oktsg_AttributeNode_Companion = null;
function oktsg_AttributeNode_$callClinit() {
    oktsg_AttributeNode_$callClinit = $rt_eraseClinit(oktsg_AttributeNode);
    oktsg_AttributeNode__clinit_();
}
function oktsg_AttributeNode__init_(var_0, var_1) {
    var var_2 = new oktsg_AttributeNode();
    oktsg_AttributeNode__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktsg_AttributeNode__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new oktsg_AttributeNode();
    oktsg_AttributeNode__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktsg_AttributeNode__init_3() {
    var var_0 = new oktsg_AttributeNode();
    oktsg_AttributeNode__init_4(var_0);
    return var_0;
}
function oktsg_AttributeNode__init_0($this, $attributeName, $type) {
    var var$3;
    oktsg_AttributeNode_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($attributeName, $rt_s(853));
    oktsg_ShaderNode__init_0($this);
    $this.$attributeName = $attributeName;
    var$3 = oktsg_GLSLValue__init_($rt_s(1112), $type);
    oktsg_ShaderNode_defOut($this, var$3);
    $this.$value8 = var$3;
}
function oktsg_AttributeNode__init_2(var$0, var$1, var$2, var$3, var$4) {
    oktsg_AttributeNode_$callClinit();
    if (var$3 & 1)
        var$1 = $rt_s(6);
    if (var$3 & 2)
        var$2 = 3;
    oktsg_AttributeNode__init_0(var$0, var$1, var$2);
}
function oktsg_AttributeNode__init_4(var$0) {
    oktsg_AttributeNode_$callClinit();
    oktsg_AttributeNode__init_2(var$0, null, 0, 3, null);
}
function oktsg_AttributeNode__clinit_() {
    oktsg_AttributeNode_Companion = oktsg_AttributeNode$Companion__init_(null);
    oktsg_AttributeNode_InputForm = ju_HashMap__init_();
}
function jur_AbstractCharClass$LazyNonWord() {
    jur_AbstractCharClass$LazyWord.call(this);
}
function jur_AbstractCharClass$LazyNonWord__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonWord();
    jur_AbstractCharClass$LazyNonWord__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonWord__init_0($this) {
    jur_AbstractCharClass$LazyWord__init_0($this);
}
function jur_AbstractCharClass$LazyNonWord_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyWord_computeValue($this).$setNegative(1);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
}
function jur_CISequenceSet() {
    jur_LeafSet.call(this);
    this.$string4 = null;
}
function jur_CISequenceSet__init_(var_0) {
    var var_1 = new jur_CISequenceSet();
    jur_CISequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CISequenceSet__init_0($this, $substring) {
    jur_LeafSet__init_2($this);
    $this.$string4 = $substring.$toString();
    $this.$charCount0 = $substring.$length();
}
function jur_CISequenceSet_accepts($this, $strIndex, $testString) {
    var $i, var$4, var$5, var$6;
    $i = 0;
    while (true) {
        if ($i >= $this.$string4.$length())
            return $this.$string4.$length();
        var$4 = $this.$string4.$charAt($i);
        var$5 = $strIndex + $i | 0;
        if (var$4 != $testString.$charAt(var$5)) {
            var$6 = $this.$string4;
            if (jur_Pattern_getSupplement(var$6.$charAt($i)) != $testString.$charAt(var$5))
                break;
        }
        $i = $i + 1 | 0;
    }
    return (-1);
}
function oooig_GimBufferArrayInt() {
    var a = this; jl_Object.call(a);
    a.$m_buffer_data0 = null;
    a.$m_byte_stride0 = 1;
    a.$m_element_count0 = 0;
}
function oooig_GimBufferArrayInt__init_() {
    var var_0 = new oooig_GimBufferArrayInt();
    oooig_GimBufferArrayInt__init_0(var_0);
    return var_0;
}
function oooig_GimBufferArrayInt__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_byte_stride0 = 1;
}
function oooig_GimBufferArrayInt_GIM_BUFFER_ARRAY_POINTER($this, $_index) {
    return oooicj_IntArray__init_($this.$m_buffer_data0, $_index * 1 | 0);
}
function oooig_GimBufferArrayInt_GIM_BUFFER_ARRAY_DESTROY($this) {
    return;
}
function oooig_GimBufferArrayInt_createCopy($array) {
    var var$2, $c, var$4;
    var$2 = $array.data;
    $c = oooig_GimBufferArrayInt__init_();
    var$4 = var$2.length;
    $c.$m_buffer_data0 = ju_Arrays_copyOf0($array, var$4);
    $c.$m_element_count0 = var$4;
    return $c;
}
function oooig_GimBufferArrayInt_createRef($array) {
    var var$2, $c;
    var$2 = $array.data;
    $c = oooig_GimBufferArrayInt__init_();
    $c.$m_buffer_data0 = $array;
    $c.$m_element_count0 = var$2.length;
    return $c;
}
function oooig_GimBufferArrayInt_getElementCount($this) {
    return $this.$m_element_count0;
}
function oktgg_IGLTFMaterial$read$5$1() {
    kji_Lambda.call(this);
    this.$this$0142 = null;
}
function oktgg_IGLTFMaterial$read$5$1__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$5$1();
    oktgg_IGLTFMaterial$read$5$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_IGLTFMaterial$read$5$1_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$5$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$5$1_invoke0($this, $$this$get) {
    var $uvNode, $textureNode;
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    $$this$get.$int($rt_s(572), oktgg_IGLTFMaterial$read$5$1$1__init_($this));
    $uvNode = oktgg_IGLTFMaterial$DefaultImpls_access$getOrCreateUVNode($this.$this$0142.$this$023, $this.$this$0142.$$shader1, jl_StringBuilder__init_().$append($rt_s(573)).$append1($this.$this$0142.$this$023.$getBaseColorTextureUV()).$toString(), $this.$this$0142.$$uvNodes);
    $this.$this$0142.$$alphaNodes.$add1($uvNode);
    $this.$this$0142.$this$023.$setBaseColorTexture($$this$get.$int0($rt_s(574)));
    $textureNode = $this.$this$0142.$$shader1.$addNode0(oktsg_TextureNode__init_0(oktsg_UVNode_getUv($uvNode), oktgg_GLTFTexture_getTexture($this.$this$0142.$this$023.$getGltf0().$getTextures().$get1($this.$this$0142.$this$023.$getBaseColorTexture())), 0, 0, 12, null));
    $this.$this$0142.$$alphaNodes.$add1($textureNode);
    $this.$this$0142.$$baseColorValue.$element0 = oktsg_TextureNode_getColor($textureNode);
}
function oktgg_IGLTFMaterial$read$5$1__init_0(var$0, var$1) {
    var$0.$this$0142 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_IGLTFMaterial$read$5$2() {
    kji_Lambda.call(this);
    this.$this$0143 = null;
}
function oktgg_IGLTFMaterial$read$5$2__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$5$2();
    oktgg_IGLTFMaterial$read$5$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_IGLTFMaterial$read$5$2_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$5$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$5$2_invoke0($this, $$this$array) {
    var $color, var$3, var$4, var$5, var$6, $factor, var$8, var$9, var$10, var$11, var$12, var$13, $node;
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $color = new oktm_Vec4;
    var$3 = $$this$array.$float3(0, 0.0);
    var$4 = $$this$array.$float3(1, 0.0);
    var$5 = $$this$array.$float3(2, 0.0);
    var$6 = $$this$array.$float3(3, 0.0);
    oktm_Vec4__init_1($color, var$3, var$4, var$5, var$6);
    $this.$this$0143.$this$023.$setBaseColor0($color);
    $factor = oktsg_GLSLVec4Inline__init_1(oktm_Vec4_getX($color), oktm_Vec4_getY($color), oktm_Vec4_getZ($color), oktm_Vec4_getW($color), null, 16, null);
    var$8 = $this.$this$0143.$$baseColorValue;
    var$9 = $this.$this$0143.$$baseColorValue.$element0;
    oktsg_GLSL_$callClinit();
    if (var$9 === oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE))
        var$9 = $factor;
    else {
        var$10 = $this.$this$0143.$$shader1;
        var$11 = new oktsg_OperationNode;
        var$12 = $rt_createArray(oktsg_IShaderData, 2);
        var$13 = var$12.data;
        var$13[0] = $this.$this$0143.$$baseColorValue.$element0;
        var$13[1] = $factor;
        oktsg_OperationNode__init_(var$11, kc_CollectionsKt__CollectionsKt_listOf(var$12), $rt_s(1113), 6);
        $node = var$10.$addNode0(var$11);
        $this.$this$0143.$$alphaNodes.$add1($node);
        var$9 = oktsg_OperationNode_getResult($node);
    }
    var$8.$element0 = var$9;
}
function oktgg_IGLTFMaterial$read$5$2__init_0(var$0, var$1) {
    var$0.$this$0143 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_IGLTFMaterial$read$5$3() {
    kji_Lambda.call(this);
    this.$this$022 = null;
}
function oktgg_IGLTFMaterial$read$5$3__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$5$3();
    oktgg_IGLTFMaterial$read$5$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_IGLTFMaterial$read$5$3_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$5$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$5$3_invoke0($this, $$this$get) {
    var $uvNode, $textureNode, $splitNode;
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    $$this$get.$int($rt_s(572), oktgg_IGLTFMaterial$read$5$3$1__init_($this));
    $uvNode = oktgg_IGLTFMaterial$DefaultImpls_access$getOrCreateUVNode($this.$this$022.$this$023, $this.$this$022.$$shader1, jl_StringBuilder__init_().$append($rt_s(573)).$append1($this.$this$022.$this$023.$getMetallicRoughnessTextureUV()).$toString(), $this.$this$022.$$uvNodes);
    $this.$this$022.$this$023.$setMetallicRoughnessTexture($$this$get.$int0($rt_s(574)));
    $textureNode = $this.$this$022.$$shader1.$addNode0(oktsg_TextureNode__init_0(oktsg_UVNode_getUv($uvNode), oktgg_GLTFTexture_getTexture($this.$this$022.$this$023.$getGltf0().$getTextures().$get1($this.$this$022.$this$023.$getMetallicRoughnessTexture())), 0, 0, 8, null));
    $splitNode = $this.$this$022.$$shader1.$addNode0(oktsg_SplitVec4Node__init_(oktsg_TextureNode_getColor($textureNode)));
    $this.$this$022.$$occlusionValue.$element0 = oktsg_SplitVec4Node_getX($splitNode);
    $this.$this$022.$$roughnessValue.$element0 = oktsg_SplitVec4Node_getY($splitNode);
    $this.$this$022.$$metallicValue.$element0 = oktsg_SplitVec4Node_getZ($splitNode);
}
function oktgg_IGLTFMaterial$read$5$3__init_0(var$0, var$1) {
    var$0.$this$022 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_IGLTFMaterial$read$5$4() {
    kji_Lambda.call(this);
    this.$this$0144 = null;
}
function oktgg_IGLTFMaterial$read$5$4__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$5$4();
    oktgg_IGLTFMaterial$read$5$4__init_0(var_1, var_0);
    return var_1;
}
function oktgg_IGLTFMaterial$read$5$4_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$5$4_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$5$4_invoke0($this, $it) {
    var $factor, var$3, var$4, var$5, var$6, var$7;
    $this.$this$0144.$this$023.$setRoughness0($it);
    $factor = oktsg_GLSLFloatInline__init_1($it, null, 2, null);
    var$3 = $this.$this$0144.$$roughnessValue;
    var$4 = $this.$this$0144.$$roughnessValue.$element0;
    oktsg_GLSL_$callClinit();
    if (var$4 === oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE))
        var$4 = $factor;
    else {
        var$5 = $this.$this$0144.$$shader1;
        var$4 = new oktsg_OperationNode;
        var$6 = $rt_createArray(oktsg_IShaderData, 2);
        var$7 = var$6.data;
        var$7[0] = $this.$this$0144.$$roughnessValue.$element0;
        var$7[1] = $factor;
        oktsg_OperationNode__init_(var$4, kc_CollectionsKt__CollectionsKt_listOf(var$6), $rt_s(1113), 3);
        var$4 = oktsg_OperationNode_getResult(var$5.$addNode0(var$4));
    }
    var$3.$element0 = var$4;
}
function oktgg_IGLTFMaterial$read$5$4__init_0(var$0, var$1) {
    var$0.$this$0144 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_IGLTFMaterial$read$5$5() {
    kji_Lambda.call(this);
    this.$this$0145 = null;
}
function oktgg_IGLTFMaterial$read$5$5__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$5$5();
    oktgg_IGLTFMaterial$read$5$5__init_0(var_1, var_0);
    return var_1;
}
function oktgg_IGLTFMaterial$read$5$5_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$5$5_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$5$5_invoke0($this, $it) {
    var $factor, var$3, var$4, var$5, var$6, var$7;
    $this.$this$0145.$this$023.$setMetallic0($it);
    $factor = oktsg_GLSLFloatInline__init_1($it, null, 2, null);
    var$3 = $this.$this$0145.$$metallicValue;
    var$4 = $this.$this$0145.$$metallicValue.$element0;
    oktsg_GLSL_$callClinit();
    if (var$4 === oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE))
        var$4 = $factor;
    else {
        var$5 = $this.$this$0145.$$shader1;
        var$4 = new oktsg_OperationNode;
        var$6 = $rt_createArray(oktsg_IShaderData, 2);
        var$7 = var$6.data;
        var$7[0] = $this.$this$0145.$$metallicValue.$element0;
        var$7[1] = $factor;
        oktsg_OperationNode__init_(var$4, kc_CollectionsKt__CollectionsKt_listOf(var$6), $rt_s(1113), 3);
        var$4 = oktsg_OperationNode_getResult(var$5.$addNode0(var$4));
    }
    var$3.$element0 = var$4;
}
function oktgg_IGLTFMaterial$read$5$5__init_0(var$0, var$1) {
    var$0.$this$0145 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktm_IMesh$Companion$Build$1() {
    kji_Lambda.call(this);
}
var oktm_IMesh$Companion$Build$1_INSTANCE = null;
function oktm_IMesh$Companion$Build$1_$callClinit() {
    oktm_IMesh$Companion$Build$1_$callClinit = $rt_eraseClinit(oktm_IMesh$Companion$Build$1);
    oktm_IMesh$Companion$Build$1__clinit_();
}
function oktm_IMesh$Companion$Build$1__init_() {
    var var_0 = new oktm_IMesh$Companion$Build$1();
    oktm_IMesh$Companion$Build$1__init_0(var_0);
    return var_0;
}
function oktm_IMesh$Companion$Build$1_invoke(var$0) {
    return oktm_IMesh$Companion$Build$1_invoke0(var$0);
}
function oktm_IMesh$Companion$Build$1_invoke0($this) {
    var var$1, var$2, var$3;
    var$1 = new oktm_Mesh;
    var$2 = null;
    var$3 = null;
    oktg_IMaterial_$callClinit();
    oktm_Mesh__init_2(var$1, var$2, var$3, oktg_IMaterial$Companion_getDefault(oktg_IMaterial_Companion), null, 0, 27, null);
    return var$1;
}
function oktm_IMesh$Companion$Build$1__init_0(var$0) {
    oktm_IMesh$Companion$Build$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktm_IMesh$Companion$Build$1__clinit_() {
    oktm_IMesh$Companion$Build$1_INSTANCE = oktm_IMesh$Companion$Build$1__init_();
}
function okttsg_MotionBlurTest() {
    jl_Object.call(this);
}
function okttsg_MotionBlurTest__init_() {
    var var_0 = new okttsg_MotionBlurTest();
    okttsg_MotionBlurTest__init_0(var_0);
    return var_0;
}
function okttsg_MotionBlurTest_getName($this) {
    return $rt_s(1114);
}
function okttsg_MotionBlurTest_testMain($this) {
    var $screenQuad, $velocityBuffer, $sceneColorBuffer, $motionBlur, var$5, var$6, var$7, $model, $$this$forEach$iv, $element$iv, $it, $moveEnabled;
    oktg_GL_$callClinit();
    if (oktg_GL_isGLES(oktg_GL_INSTANCE) && oktg_GL_getGlesMajVer(oktg_GL_INSTANCE) == 3 && !oktg_GL_enableExtension(oktg_GL_INSTANCE, $rt_s(337))) {
        okt_APP_$callClinit();
        okt_APP_messageBox(okt_APP_INSTANCE, $rt_s(335), $rt_s(338));
        return;
    }
    $screenQuad = oktm_ScreenQuad$TextureRenderer__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    $velocityBuffer = new oktt_SimpleFrameBuffer;
    okt_APP_$callClinit();
    oktt_SimpleFrameBuffer__init_($velocityBuffer, okt_APP_getWidth(okt_APP_INSTANCE), okt_APP_getHeight(okt_APP_INSTANCE), 6408, 34842, 5126, 1, 0, 64, null);
    $sceneColorBuffer = oktt_SimpleFrameBuffer__init_2(okt_APP_getWidth(okt_APP_INSTANCE), okt_APP_getHeight(okt_APP_INSTANCE), 6408, 0, 0, 0, 0, 120, null);
    $motionBlur = new oktsp_MotionBlur;
    var$5 = oktt_SimpleFrameBuffer_getTexture($sceneColorBuffer, 0);
    var$6 = oktt_SimpleFrameBuffer_getTexture($velocityBuffer, 0);
    var$7 = null;
    oktsp_MotionBlur__init_($motionBlur, var$5, var$6, 1.0, 16, 0.0, 16, var$7);
    $model = oktt_GLTFModel__init_2(0, null, null, 7, null);
    oktt_GLTFModel_setRotate($model, 0);
    $$this$forEach$iv = oktt_GLTFModel_getGltf($model).$getMaterials();
    var$5 = $$this$forEach$iv.$iterator();
    while (var$5.$hasNext()) {
        a: {
            $element$iv = var$5.$next();
            $it = $element$iv;
            oktu_LOG_$callClinit();
            var$6 = oktu_LOG_INSTANCE;
            var$7 = $it.$getMaterial().$getShaderChannels();
            oktg_ShaderChannel_$callClinit();
            var$7 = var$7.$get0(jl_Integer_valueOf(oktg_ShaderChannel_getVelocity(oktg_ShaderChannel_INSTANCE)));
            if (var$7 !== null) {
                var$7 = okts_IShader$DefaultImpls_sourceCode$default(var$7, 0, 1, null);
                if (var$7 !== null)
                    break a;
            }
            var$7 = $rt_s(6);
        }
        oktu_ILog$DefaultImpls_info$default(var$6, var$7, null, 2, null);
    }
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    $moveEnabled = kji_Ref$BooleanRef__init_();
    $moveEnabled.$element1 = 1;
    okti_MOUSE_$callClinit();
    okti_MOUSE_addListener(okti_MOUSE_INSTANCE, okttsg_MotionBlurTest$testMain$2__init_($moveEnabled));
    jl_System_out().$println0($rt_s(874));
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttsg_MotionBlurTest$testMain$3__init_($moveEnabled, $model, $velocityBuffer, $sceneColorBuffer, $motionBlur, $screenQuad), 1, null);
}
function okttsg_MotionBlurTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_CameraDataNode() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$cameraPosition = null;
    a.$viewProjectionMatrix1 = null;
    a.$previousViewProjectionMatrix0 = null;
    a.$viewMatrix1 = null;
    a.$projectionMatrix1 = null;
    a.$inverseViewProjectionMatrix = null;
    a.$normalizedViewVector = null;
    a.$viewZDepth = null;
    a.$clipSpacePosition = null;
    a.$viewSpacePosition = null;
}
var oktsg_CameraDataNode_InputForm = null;
var oktsg_CameraDataNode_Companion = null;
function oktsg_CameraDataNode_$callClinit() {
    oktsg_CameraDataNode_$callClinit = $rt_eraseClinit(oktsg_CameraDataNode);
    oktsg_CameraDataNode__clinit_();
}
function oktsg_CameraDataNode__init_0(var_0) {
    var var_1 = new oktsg_CameraDataNode();
    oktsg_CameraDataNode__init_(var_1, var_0);
    return var_1;
}
function oktsg_CameraDataNode__init_1(var_0, var_1, var_2) {
    var var_3 = new oktsg_CameraDataNode();
    oktsg_CameraDataNode__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktsg_CameraDataNode__init_3() {
    var var_0 = new oktsg_CameraDataNode();
    oktsg_CameraDataNode__init_4(var_0);
    return var_0;
}
function oktsg_CameraDataNode_getVertexPosition($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1115));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_CameraDataNode_getViewProjectionMatrix($this) {
    return $this.$viewProjectionMatrix1;
}
function oktsg_CameraDataNode_getPreviousViewProjectionMatrix($this) {
    return $this.$previousViewProjectionMatrix0;
}
function oktsg_CameraDataNode_getNormalizedViewVector($this) {
    return $this.$normalizedViewVector;
}
function oktsg_CameraDataNode_getClipSpacePosition($this) {
    return $this.$clipSpacePosition;
}
function oktsg_CameraDataNode_getViewSpacePosition($this) {
    return $this.$viewSpacePosition;
}
function oktsg_CameraDataNode_prepareToDrawScene($this, $scene) {
    var $cam;
    kji_Intrinsics_checkParameterIsNotNull($scene, $rt_s(328));
    oktsg_ShaderNode_prepareToDrawScene($this, $scene);
    oktgc_ActiveCamera_$callClinit();
    $cam = oktgc_ActiveCamera_INSTANCE;
    $this.$getShader().$set54($this.$cameraPosition.$getRef0(), oktgc_ActiveCamera_getPosition($cam));
    $this.$getShader().$set12($this.$viewProjectionMatrix1.$getRef0(), oktgc_ActiveCamera_getViewProjectionMatrix($cam));
    $this.$getShader().$set12($this.$previousViewProjectionMatrix0.$getRef0(), oktgc_ActiveCamera_getPreviousViewProjectionMatrix($cam));
    $this.$getShader().$set12($this.$viewMatrix1.$getRef0(), oktgc_ActiveCamera_getViewMatrix($cam));
    $this.$getShader().$set12($this.$projectionMatrix1.$getRef0(), oktgc_ActiveCamera_getProjectionMatrix($cam));
    $this.$getShader().$set12($this.$inverseViewProjectionMatrix.$getRef0(), oktgc_ActiveCamera_getInverseViewProjectionMatrix($cam));
}
function oktsg_CameraDataNode_executionFrag($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if ($this.$normalizedViewVector.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append($this.$normalizedViewVector.$getRef0()).$append($rt_s(1116)).$append($this.$cameraPosition.$asVec3()).$append($rt_s(1117)).$append(oktsg_CameraDataNode_getVertexPosition($this).$asVec3()).$append($rt_s(1053)).$toString());
}
function oktsg_CameraDataNode_executionVert($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if (!(!$this.$clipSpacePosition.$isUsed0() && !$this.$viewZDepth.$isUsed0())) {
        $out.$append(jl_StringBuilder__init_().$append($this.$clipSpacePosition.$getRef0()).$append($rt_s(331)).$append($this.$viewProjectionMatrix1.$getRef0()).$append($rt_s(1032)).$append(oktsg_CameraDataNode_getVertexPosition($this).$asVec4()).$append($rt_s(330)).$toString());
        if ($this.$viewZDepth.$isUsed0())
            $out.$append(jl_StringBuilder__init_().$append($this.$viewZDepth.$getRef0()).$append($rt_s(331)).$append($this.$clipSpacePosition.$getRef0()).$append($rt_s(1118)).$toString());
    }
    if ($this.$viewSpacePosition.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append($this.$viewSpacePosition.$getRef0()).$append($rt_s(331)).$append($this.$viewMatrix1.$getRef0()).$append($rt_s(1032)).$append(oktsg_CameraDataNode_getVertexPosition($this).$asVec4()).$append($rt_s(330)).$toString());
}
function oktsg_CameraDataNode_declarationVert($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if (!(!$this.$cameraPosition.$isUsed0() && !$this.$normalizedViewVector.$isUsed0()))
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1085)).$append($this.$cameraPosition.$getTypedRef0()).$append($rt_s(330)).$toString());
    if (!(!$this.$clipSpacePosition.$isUsed0() && !$this.$viewProjectionMatrix1.$isUsed0()))
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1085)).$append($this.$viewProjectionMatrix1.$getTypedRef0()).$append($rt_s(330)).$toString());
    if ($this.$previousViewProjectionMatrix0.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1085)).$append($this.$previousViewProjectionMatrix0.$getTypedRef0()).$append($rt_s(330)).$toString());
    if (!(!$this.$viewSpacePosition.$isUsed0() && !$this.$viewMatrix1.$isUsed0()))
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1085)).$append($this.$viewMatrix1.$getTypedRef0()).$append($rt_s(330)).$toString());
    if ($this.$projectionMatrix1.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1085)).$append($this.$projectionMatrix1.$getTypedRef0()).$append($rt_s(330)).$toString());
    if ($this.$inverseViewProjectionMatrix.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1085)).$append($this.$inverseViewProjectionMatrix.$getTypedRef0()).$append($rt_s(330)).$toString());
    if (!(!$this.$clipSpacePosition.$isUsed0() && !$this.$viewZDepth.$isUsed0())) {
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append12(32).$append($this.$clipSpacePosition.$getTypedRef0()).$append($rt_s(330)).$toString());
        if ($this.$viewZDepth.$isUsed0())
            $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append12(32).$append($this.$viewZDepth.$getTypedRef0()).$append($rt_s(330)).$toString());
    }
    if ($this.$viewSpacePosition.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append12(32).$append($this.$viewSpacePosition.$getTypedRef0()).$append($rt_s(330)).$toString());
}
function oktsg_CameraDataNode_declarationFrag($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if (!(!$this.$cameraPosition.$isUsed0() && !$this.$normalizedViewVector.$isUsed0()))
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1085)).$append($this.$cameraPosition.$getTypedRef0()).$append($rt_s(330)).$toString());
    if ($this.$normalizedViewVector.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1119)).$append($this.$normalizedViewVector.$getRef0()).$append($rt_s(330)).$toString());
    if ($this.$clipSpacePosition.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append12(32).$append($this.$clipSpacePosition.$getTypedRef0()).$append($rt_s(330)).$toString());
    if ($this.$viewSpacePosition.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append12(32).$append($this.$viewSpacePosition.$getTypedRef0()).$append($rt_s(330)).$toString());
    if ($this.$viewZDepth.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append12(32).$append($this.$viewZDepth.$getTypedRef0()).$append($rt_s(330)).$toString());
}
function oktsg_CameraDataNode__init_($this, $vertexPosition) {
    oktsg_CameraDataNode_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($vertexPosition, $rt_s(1115));
    oktsg_ShaderNode__init_0($this);
    $this.$cameraPosition = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec3__init_($rt_s(1120)));
    $this.$viewProjectionMatrix1 = oktsg_ShaderNode_defOut($this, oktsg_GLSLMat4__init_($rt_s(1121)));
    $this.$previousViewProjectionMatrix0 = oktsg_ShaderNode_defOut($this, oktsg_GLSLMat4__init_($rt_s(1122)));
    $this.$viewMatrix1 = oktsg_ShaderNode_defOut($this, oktsg_GLSLMat4__init_($rt_s(1123)));
    $this.$projectionMatrix1 = oktsg_ShaderNode_defOut($this, oktsg_GLSLMat4__init_($rt_s(1124)));
    $this.$inverseViewProjectionMatrix = oktsg_ShaderNode_defOut($this, oktsg_GLSLMat4__init_($rt_s(1125)));
    $this.$normalizedViewVector = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec3__init_($rt_s(1126)));
    $this.$viewZDepth = oktsg_ShaderNode_defOut($this, oktsg_GLSLFloat__init_($rt_s(1127)));
    $this.$clipSpacePosition = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec4__init_($rt_s(1128)));
    $this.$viewSpacePosition = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec4__init_($rt_s(1129)));
    $this.$setInput($rt_s(1115), $vertexPosition);
}
function oktsg_CameraDataNode__init_2(var$0, var$1, var$2, var$3) {
    oktsg_CameraDataNode_$callClinit();
    if (var$2 & 1) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    oktsg_CameraDataNode__init_(var$0, var$1);
}
function oktsg_CameraDataNode__init_4(var$0) {
    oktsg_CameraDataNode_$callClinit();
    oktsg_CameraDataNode__init_2(var$0, null, 1, null);
}
function oktsg_CameraDataNode__clinit_() {
    var var$1;
    oktsg_CameraDataNode_Companion = oktsg_CameraDataNode$Companion__init_(null);
    var$1 = ju_LinkedHashMap__init_();
    var$1.$put3($rt_s(1115), jl_Integer_valueOf(5));
    oktsg_CameraDataNode_InputForm = var$1;
}
function oktt_TvmGL$frameBuffers$1() {
    kji_Lambda.call(this);
}
var oktt_TvmGL$frameBuffers$1_INSTANCE = null;
function oktt_TvmGL$frameBuffers$1_$callClinit() {
    oktt_TvmGL$frameBuffers$1_$callClinit = $rt_eraseClinit(oktt_TvmGL$frameBuffers$1);
    oktt_TvmGL$frameBuffers$1__clinit_();
}
function oktt_TvmGL$frameBuffers$1__init_() {
    var var_0 = new oktt_TvmGL$frameBuffers$1();
    oktt_TvmGL$frameBuffers$1__init_0(var_0);
    return var_0;
}
function oktt_TvmGL$frameBuffers$1_invoke(var$0, var$1) {
    return oktt_TvmGL$frameBuffers$1_invoke0(var$0, var$1);
}
function oktt_TvmGL$frameBuffers$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    return oktt_TvmGL$FrameBufferWrap__init_($it);
}
function oktt_TvmGL$frameBuffers$1__init_0(var$0) {
    oktt_TvmGL$frameBuffers$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktt_TvmGL$frameBuffers$1__clinit_() {
    oktt_TvmGL$frameBuffers$1_INSTANCE = oktt_TvmGL$frameBuffers$1__init_();
}
function oktgc_ICamera$DefaultImpls() {
    jl_Object.call(this);
}
function oktgc_ICamera$DefaultImpls_getAspectRatio($$this) {
    return $$this.$getViewportWidth() / $$this.$getViewportHeight();
}
function oktgc_ICamera$DefaultImpls_lookAt($$this, $from, $to, $up) {
    kji_Intrinsics_checkParameterIsNotNull($from, $rt_s(55));
    kji_Intrinsics_checkParameterIsNotNull($to, $rt_s(56));
    kji_Intrinsics_checkParameterIsNotNull($up, $rt_s(57));
    $$this.$getDirection().$set11($to).$sub0($from).$nor();
    $$this.$getPosition0().$set11($from);
    $up.$set11($up);
    $$this.$getViewMatrix().$setToLookAt($from, $$this.$getDirection(), $up);
}
function oktgc_ICamera$DefaultImpls_lookAt$default(var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$6 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1130)));
    if (var$5 & 4) {
        oktm_IVec3_$callClinit();
        var$4 = oktm_IVec3$Companion_getY(oktm_IVec3_Companion);
    }
    var$1.$lookAt0(var$2, var$3, var$4);
}
function oktgc_ICamera$DefaultImpls_updatePreviousTransform($$this) {
    $$this.$getPreviousViewProjectionMatrix0().$set3($$this.$getViewProjectionMatrix());
}
function oktgc_ICamera$DefaultImpls_updateTransform($$this, $recursive) {
    oktgn_ITransformNode$DefaultImpls_updateTransform($$this, $recursive);
    $$this.$update0();
}
function oktgc_ICamera$DefaultImpls_update($$this) {
    var $widthHalf, $heightHalf;
    if (!$$this.$isOrthographic0())
        $$this.$getProjectionMatrix().$setToProjection(jl_Math_abs0($$this.$getNear()), jl_Math_abs0($$this.$getFar()), $$this.$getFov(), $$this.$getAspectRatio0());
    else if (!$$this.$isCentered1())
        $$this.$getProjectionMatrix().$setToOrtho(0.0, $$this.$getZoom() * $$this.$getViewportWidth(), 0.0, $$this.$getZoom() * $$this.$getViewportHeight(), $$this.$getNear(), $$this.$getFar());
    else {
        $widthHalf = $$this.$getZoom() * $$this.$getViewportWidth() * 0.5;
        $heightHalf = $$this.$getZoom() * $$this.$getViewportHeight() * 0.5;
        $$this.$getProjectionMatrix().$setToOrtho( -$widthHalf, $widthHalf,  -$heightHalf, $heightHalf, $$this.$getNear(), $$this.$getFar());
    }
    $$this.$getViewProjectionMatrix().$set3($$this.$getProjectionMatrix());
    $$this.$getViewMatrix().$setToLookAt($$this.$getPosition0(), $$this.$getDirection(), $$this.$getUp());
    $$this.$getViewProjectionMatrix().$mul($$this.$getViewMatrix());
}
function oktgc_ICamera$DefaultImpls_getPosition($$this, $out, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return oktgn_ITransformNode$DefaultImpls_getPosition($$this, $out, $isLocal);
}
function oktgc_ICamera$DefaultImpls_dst2($$this, $position, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($position, $rt_s(53));
    return oktgn_ITransformNode$DefaultImpls_dst2($$this, $position, $isLocal);
}
function oktd_IShortData$DefaultImpls() {
    jl_Object.call(this);
}
function oktd_IShortData$DefaultImpls_toInt($$this, $index) {
    return $$this.$get1($index).$shortValue() & 65535;
}
function oktd_IShortData$DefaultImpls_put($$this, $values) {
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    oktd_IDataArray$DefaultImpls_put($$this, $values);
}
function oooil_CCDVec3() {
    jl_Object.call(this);
}
var oooil_CCDVec3_ccd_vec3_origin = null;
var oooil_CCDVec3_points_on_sphere = null;
var oooil_CCDVec3_ccd_points_on_sphere = null;
var oooil_CCDVec3_ccd_points_on_sphere_len = 0;
function oooil_CCDVec3_$callClinit() {
    oooil_CCDVec3_$callClinit = $rt_eraseClinit(oooil_CCDVec3);
    oooil_CCDVec3__clinit_();
}
function oooil_CCDVec3__init_() {
    var var_0 = new oooil_CCDVec3();
    oooil_CCDVec3__init_0(var_0);
    return var_0;
}
function oooil_CCDVec3__init_0($this) {
    oooil_CCDVec3_$callClinit();
    jl_Object__init_0($this);
}
function oooil_CCDVec3_CCD_SQRT($x) {
    oooil_CCDVec3_$callClinit();
    return jl_Math_sqrt($x);
}
function oooil_CCDVec3_CCD_FABS($x) {
    oooil_CCDVec3_$callClinit();
    return jl_Math_abs($x);
}
function oooil_CCDVec3_CCD_FMIN($x, $y) {
    oooil_CCDVec3_$callClinit();
    if ($x < $y)
        $y = $x;
    return $y;
}
function oooil_CCDVec3_CCD_VEC3_STATIC($x, $y, $z) {
    oooil_CCDVec3_$callClinit();
    return oooil_CCDVec3$ccd_vec3_t__init_0($x, $y, $z);
}
function oooil_CCDVec3_CCD_VEC3($x, $y, $z) {
    oooil_CCDVec3_$callClinit();
    return oooil_CCDVec3$ccd_vec3_t__init_0($x, $y, $z);
}
function oooil_CCDVec3_ccdSign($val) {
    oooil_CCDVec3_$callClinit();
    if (oooil_CCDVec3_ccdIsZero($val))
        return 0;
    if ($val >= 0.0)
        return 1;
    return (-1);
}
function oooil_CCDVec3_ccdIsZero($val) {
    oooil_CCDVec3_$callClinit();
    return oooil_CCDVec3_CCD_FABS($val) >= 2.220446049250313E-16 ? 0 : 1;
}
function oooil_CCDVec3_ccdEq($_a, $_b) {
    var $ab, $a, $b;
    oooil_CCDVec3_$callClinit();
    $ab = oooil_CCDVec3_CCD_FABS($_a - $_b);
    if (oooil_CCDVec3_CCD_FABS($ab) < 2.220446049250313E-16)
        return 1;
    $a = oooil_CCDVec3_CCD_FABS($_a);
    $b = oooil_CCDVec3_CCD_FABS($_b);
    if ($b <= $a)
        return $ab >= 2.220446049250313E-16 * $a ? 0 : 1;
    return $ab >= 2.220446049250313E-16 * $b ? 0 : 1;
}
function oooil_CCDVec3_ccdVec3X($v) {
    oooil_CCDVec3_$callClinit();
    return $v.$v00;
}
function oooil_CCDVec3_ccdVec3Y($v) {
    oooil_CCDVec3_$callClinit();
    return $v.$v10;
}
function oooil_CCDVec3_ccdVec3Z($v) {
    oooil_CCDVec3_$callClinit();
    return $v.$v20;
}
function oooil_CCDVec3_ccdVec3Eq($a, $b) {
    oooil_CCDVec3_$callClinit();
    return oooil_CCDVec3_ccdEq(oooil_CCDVec3_ccdVec3X($a), oooil_CCDVec3_ccdVec3X($b)) && oooil_CCDVec3_ccdEq(oooil_CCDVec3_ccdVec3Y($a), oooil_CCDVec3_ccdVec3Y($b)) && oooil_CCDVec3_ccdEq(oooil_CCDVec3_ccdVec3Z($a), oooil_CCDVec3_ccdVec3Z($b)) ? 1 : 0;
}
function oooil_CCDVec3_ccdVec3Len2($v) {
    oooil_CCDVec3_$callClinit();
    return oooil_CCDVec3_ccdVec3Dot($v, $v);
}
function oooil_CCDVec3_ccdVec3Dist2($a, $b) {
    var $ab;
    oooil_CCDVec3_$callClinit();
    $ab = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDVec3_ccdVec3Sub2($ab, $a, $b);
    return oooil_CCDVec3_ccdVec3Len2($ab);
}
function oooil_CCDVec3_ccdVec3Set0($v, $x, $y, $z) {
    oooil_CCDVec3_$callClinit();
    $v.$v00 = $x;
    $v.$v10 = $y;
    $v.$v20 = $z;
}
function oooil_CCDVec3_ccdVec3Set($v, $xyz) {
    oooil_CCDVec3_$callClinit();
    $v.$v00 = $xyz.$get01();
    $v.$v10 = $xyz.$get10();
    $v.$v20 = $xyz.$get20();
}
function oooil_CCDVec3_ccdVec3Copy($v, $w) {
    oooil_CCDVec3_$callClinit();
    $v.$v00 = $w.$v00;
    $v.$v10 = $w.$v10;
    $v.$v20 = $w.$v20;
}
function oooil_CCDVec3_ccdVec3Sub($v, $w) {
    oooil_CCDVec3_$callClinit();
    $v.$v00 = $v.$v00 - $w.$v00;
    $v.$v10 = $v.$v10 - $w.$v10;
    $v.$v20 = $v.$v20 - $w.$v20;
}
function oooil_CCDVec3_ccdVec3Sub2($d, $v, $w) {
    oooil_CCDVec3_$callClinit();
    $d.$v00 = $v.$v00 - $w.$v00;
    $d.$v10 = $v.$v10 - $w.$v10;
    $d.$v20 = $v.$v20 - $w.$v20;
}
function oooil_CCDVec3_ccdVec3Add($v, $w) {
    oooil_CCDVec3_$callClinit();
    $v.$v00 = $v.$v00 + $w.$v00;
    $v.$v10 = $v.$v10 + $w.$v10;
    $v.$v20 = $v.$v20 + $w.$v20;
}
function oooil_CCDVec3_ccdVec3Scale($d, $k) {
    oooil_CCDVec3_$callClinit();
    $d.$v00 = $d.$v00 * $k;
    $d.$v10 = $d.$v10 * $k;
    $d.$v20 = $d.$v20 * $k;
}
function oooil_CCDVec3_ccdVec3Normalize($d) {
    var $len;
    oooil_CCDVec3_$callClinit();
    $len = oooil_CCDVec3_CCD_SQRT(oooil_CCDVec3_ccdVec3Len2($d));
    if ($len <= 2.220446049250313E-16)
        return 0;
    oooil_CCDVec3_ccdVec3Scale($d, 1.0 / $len);
    return 1;
}
function oooil_CCDVec3_ccdVec3Dot($a, $b) {
    var $dot, var$4;
    oooil_CCDVec3_$callClinit();
    $dot = $a.$v00 * $b.$v00;
    var$4 = $dot + $a.$v10 * $b.$v10;
    var$4 = var$4 + $a.$v20 * $b.$v20;
    return var$4;
}
function oooil_CCDVec3_ccdVec3Cross($d, $a, $b) {
    oooil_CCDVec3_$callClinit();
    $d.$v00 = $a.$v10 * $b.$v20 - $a.$v20 * $b.$v10;
    $d.$v10 = $a.$v20 * $b.$v00 - $a.$v00 * $b.$v20;
    $d.$v20 = $a.$v00 * $b.$v10 - $a.$v10 * $b.$v00;
}
function oooil_CCDVec3___ccdVec3PointSegmentDist2($P, $x0, $b, $witness) {
    var $d, $a, $t, var$8, $dist;
    oooil_CCDVec3_$callClinit();
    $d = oooil_CCDVec3$ccd_vec3_t__init_();
    $a = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDVec3_ccdVec3Sub2($d, $b, $x0);
    oooil_CCDVec3_ccdVec3Sub2($a, $x0, $P);
    $t = (-1.0) * oooil_CCDVec3_ccdVec3Dot($a, $d);
    var$8 = $t / oooil_CCDVec3_ccdVec3Len2($d);
    if (var$8 >= 0.0 && !oooil_CCDVec3_ccdIsZero(var$8)) {
        if (var$8 <= 1.0 && !oooil_CCDVec3_ccdEq(var$8, 1.0)) {
            if ($witness === null) {
                oooil_CCDVec3_ccdVec3Scale($d, var$8);
                oooil_CCDVec3_ccdVec3Add($d, $a);
                $dist = oooil_CCDVec3_ccdVec3Len2($d);
            } else {
                oooil_CCDVec3_ccdVec3Copy($witness, $d);
                oooil_CCDVec3_ccdVec3Scale($witness, var$8);
                oooil_CCDVec3_ccdVec3Add($witness, $x0);
                $dist = oooil_CCDVec3_ccdVec3Dist2($witness, $P);
            }
        } else {
            $dist = oooil_CCDVec3_ccdVec3Dist2($b, $P);
            if ($witness !== null)
                oooil_CCDVec3_ccdVec3Copy($witness, $b);
        }
    } else {
        $dist = oooil_CCDVec3_ccdVec3Dist2($x0, $P);
        if ($witness !== null)
            oooil_CCDVec3_ccdVec3Copy($witness, $x0);
    }
    return $dist;
}
function oooil_CCDVec3_ccdVec3PointTriDist2($P, $x0, $B, $C, $witness) {
    var $d1, $d2, $a, $witness2, $u, $v, $w, $p, $q, $r, $s, $t, var$18, $dist, var$20, $dist2;
    oooil_CCDVec3_$callClinit();
    a: {
        $d1 = oooil_CCDVec3$ccd_vec3_t__init_();
        $d2 = oooil_CCDVec3$ccd_vec3_t__init_();
        $a = oooil_CCDVec3$ccd_vec3_t__init_();
        $witness2 = oooil_CCDVec3$ccd_vec3_t__init_();
        oooil_CCDVec3_ccdVec3Sub2($d1, $B, $x0);
        oooil_CCDVec3_ccdVec3Sub2($d2, $C, $x0);
        oooil_CCDVec3_ccdVec3Sub2($a, $x0, $P);
        $u = oooil_CCDVec3_ccdVec3Dot($a, $a);
        $v = oooil_CCDVec3_ccdVec3Dot($d1, $d1);
        $w = oooil_CCDVec3_ccdVec3Dot($d2, $d2);
        $p = oooil_CCDVec3_ccdVec3Dot($a, $d1);
        $q = oooil_CCDVec3_ccdVec3Dot($a, $d2);
        $r = oooil_CCDVec3_ccdVec3Dot($d1, $d2);
        $s = ($q * $r - $w * $p) / ($w * $v - $r * $r);
        $t = ( -$s * $r - $q) / $w;
        if (!(!oooil_CCDVec3_ccdIsZero($s) && $s <= 0.0) && !(!oooil_CCDVec3_ccdEq($s, 1.0) && $s >= 1.0) && !(!oooil_CCDVec3_ccdIsZero($t) && $t <= 0.0) && !(!oooil_CCDVec3_ccdEq($t, 1.0) && $t >= 1.0)) {
            var$18 = $t + $s;
            if (!(!oooil_CCDVec3_ccdEq(var$18, 1.0) && var$18 >= 1.0)) {
                if ($witness !== null) {
                    oooil_CCDVec3_ccdVec3Scale($d1, $s);
                    oooil_CCDVec3_ccdVec3Scale($d2, $t);
                    oooil_CCDVec3_ccdVec3Copy($witness, $x0);
                    oooil_CCDVec3_ccdVec3Add($witness, $d1);
                    oooil_CCDVec3_ccdVec3Add($witness, $d2);
                    $dist = oooil_CCDVec3_ccdVec3Dist2($witness, $P);
                    break a;
                }
                $dist = $s * $s * $v;
                var$20 = $dist + $t * $t * $w;
                var$18 = 2.0 * $s;
                var$20 = var$20 + var$18 * $t * $r;
                var$20 = var$20 + var$18 * $p;
                var$20 = var$20 + 2.0 * $t * $q;
                $dist = var$20 + $u;
                break a;
            }
        }
        $dist = oooil_CCDVec3___ccdVec3PointSegmentDist2($P, $x0, $B, $witness);
        $dist2 = oooil_CCDVec3___ccdVec3PointSegmentDist2($P, $x0, $C, $witness2);
        if ($dist2 >= $dist)
            $dist2 = $dist;
        else if ($witness !== null)
            oooil_CCDVec3_ccdVec3Copy($witness, $witness2);
        $dist = oooil_CCDVec3___ccdVec3PointSegmentDist2($P, $B, $C, $witness2);
        if ($dist >= $dist2)
            $dist = $dist2;
        else if ($witness !== null)
            oooil_CCDVec3_ccdVec3Copy($witness, $witness2);
    }
    return $dist;
}
function oooil_CCDVec3__clinit_() {
    var var$1, var$2;
    oooil_CCDVec3_ccd_vec3_origin = oooil_CCDVec3_CCD_VEC3(0.0, 0.0, 0.0);
    var$1 = $rt_createArray(oooil_CCDVec3$ccd_vec3_t, 42);
    var$2 = var$1.data;
    var$2[0] = oooil_CCDVec3_CCD_VEC3_STATIC(0.0, -0.0, (-1.0));
    var$2[1] = oooil_CCDVec3_CCD_VEC3_STATIC(0.723608, (-0.525725), (-0.447219));
    var$2[2] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.276388), (-0.850649), (-0.447219));
    var$2[3] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.894426), -0.0, (-0.447216));
    var$2[4] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.276388), 0.850649, (-0.44722));
    var$2[5] = oooil_CCDVec3_CCD_VEC3_STATIC(0.723608, 0.525725, (-0.447219));
    var$2[6] = oooil_CCDVec3_CCD_VEC3_STATIC(0.276388, (-0.850649), 0.44722);
    var$2[7] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.723608), (-0.525725), 0.447219);
    var$2[8] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.723608), 0.525725, 0.447219);
    var$2[9] = oooil_CCDVec3_CCD_VEC3_STATIC(0.276388, 0.850649, 0.447219);
    var$2[10] = oooil_CCDVec3_CCD_VEC3_STATIC(0.894426, 0.0, 0.447216);
    var$2[11] = oooil_CCDVec3_CCD_VEC3_STATIC(-0.0, 0.0, 1.0);
    var$2[12] = oooil_CCDVec3_CCD_VEC3_STATIC(0.425323, (-0.309011), (-0.850654));
    var$2[13] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.162456), (-0.499995), (-0.850654));
    var$2[14] = oooil_CCDVec3_CCD_VEC3_STATIC(0.262869, (-0.809012), (-0.525738));
    var$2[15] = oooil_CCDVec3_CCD_VEC3_STATIC(0.425323, 0.309011, (-0.850654));
    var$2[16] = oooil_CCDVec3_CCD_VEC3_STATIC(0.850648, -0.0, (-0.525736));
    var$2[17] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.52573), -0.0, (-0.850652));
    var$2[18] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.68819), (-0.499997), (-0.525736));
    var$2[19] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.162456), 0.499995, (-0.850654));
    var$2[20] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.68819), 0.499997, (-0.525736));
    var$2[21] = oooil_CCDVec3_CCD_VEC3_STATIC(0.262869, 0.809012, (-0.525738));
    var$2[22] = oooil_CCDVec3_CCD_VEC3_STATIC(0.951058, 0.309013, 0.0);
    var$2[23] = oooil_CCDVec3_CCD_VEC3_STATIC(0.951058, (-0.309013), 0.0);
    var$2[24] = oooil_CCDVec3_CCD_VEC3_STATIC(0.587786, (-0.809017), 0.0);
    var$2[25] = oooil_CCDVec3_CCD_VEC3_STATIC(0.0, (-1.0), 0.0);
    var$2[26] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.587786), (-0.809017), 0.0);
    var$2[27] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.951058), (-0.309013), -0.0);
    var$2[28] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.951058), 0.309013, -0.0);
    var$2[29] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.587786), 0.809017, -0.0);
    var$2[30] = oooil_CCDVec3_CCD_VEC3_STATIC(-0.0, 1.0, -0.0);
    var$2[31] = oooil_CCDVec3_CCD_VEC3_STATIC(0.587786, 0.809017, -0.0);
    var$2[32] = oooil_CCDVec3_CCD_VEC3_STATIC(0.68819, (-0.499997), 0.525736);
    var$2[33] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.262869), (-0.809012), 0.525738);
    var$2[34] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.850648), 0.0, 0.525736);
    var$2[35] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.262869), 0.809012, 0.525738);
    var$2[36] = oooil_CCDVec3_CCD_VEC3_STATIC(0.68819, 0.499997, 0.525736);
    var$2[37] = oooil_CCDVec3_CCD_VEC3_STATIC(0.52573, 0.0, 0.850652);
    var$2[38] = oooil_CCDVec3_CCD_VEC3_STATIC(0.162456, (-0.499995), 0.850654);
    var$2[39] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.425323), (-0.309011), 0.850654);
    var$2[40] = oooil_CCDVec3_CCD_VEC3_STATIC((-0.425323), 0.309011, 0.850654);
    var$2[41] = oooil_CCDVec3_CCD_VEC3_STATIC(0.162456, 0.499995, 0.850654);
    oooil_CCDVec3_points_on_sphere = var$1;
    oooil_CCDVec3_ccd_points_on_sphere = oooil_CCDVec3_points_on_sphere;
    oooil_CCDVec3_ccd_points_on_sphere_len = oooil_CCDVec3_points_on_sphere.data.length;
}
function oktgg_GLTFMesh() {
    var a = this; jl_Object.call(a);
    a.$name33 = null;
    a.$primitives = null;
    a.$gltf8 = null;
    a.$elementIndex7 = 0;
}
function oktgg_GLTFMesh__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFMesh();
    oktgg_GLTFMesh__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFMesh_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name33 = $_set___;
}
function oktgg_GLTFMesh_getPrimitives($this) {
    return $this.$primitives;
}
function oktgg_GLTFMesh_read($this, $json) {
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $json.$string($rt_s(17), oktgg_GLTFMesh$read$1__init_($this));
    $json.$array($rt_s(1131), oktgg_GLTFMesh$read$2__init_($this));
    oktgg_GLTFMesh_getGltf($this).$getMeshes1().$ready(oktgg_GLTFMesh_getElementIndex($this));
}
function oktgg_GLTFMesh_getGltf($this) {
    return $this.$gltf8;
}
function oktgg_GLTFMesh_getElementIndex($this) {
    return $this.$elementIndex7;
}
function oktgg_GLTFMesh__init_0($this, $gltf, $elementIndex) {
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    jl_Object__init_0($this);
    $this.$gltf8 = $gltf;
    $this.$elementIndex7 = $elementIndex;
    $this.$name33 = $rt_s(6);
    $this.$primitives = oktgg_GLTFArray__init_($rt_s(1131));
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$0146 = null;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0($this, $this$0) {
    $this.$this$0146 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains($this, $ch) {
    return jl_Character_isUnicodeIdentifierPart($ch);
}
function jur_AbstractCharClass$LazyDigit() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyDigit();
    jur_AbstractCharClass$LazyDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyDigit_computeValue($this) {
    return jur_CharClass__init_().$add0(48, 57);
}
function jur_AbstractCharClass$LazyJavaLetter() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaLetter__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLetter();
    jur_AbstractCharClass$LazyJavaLetter__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLetter__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLetter_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLetter$1__init_($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
}
function jur_AheadFSet() {
    jur_FSet.call(this);
}
function jur_AheadFSet__init_() {
    var var_0 = new jur_AheadFSet();
    jur_AheadFSet__init_0(var_0);
    return var_0;
}
function jur_AheadFSet__init_0($this) {
    jur_FSet__init_0($this, (-1));
}
function jur_AheadFSet_matches($this, $stringIndex, $testString, $matchResult) {
    return $stringIndex;
}
function oktgg_GLTFNode$read$10$1() {
    kji_Lambda.call(this);
    this.$this$0147 = null;
}
function oktgg_GLTFNode$read$10$1__init_(var_0) {
    var var_1 = new oktgg_GLTFNode$read$10$1();
    oktgg_GLTFNode$read$10$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFNode$read$10$1_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$10$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$10$1_invoke0($this, $gltfSkin) {
    var $skin, var$3, $$this$forEach$iv, var$5, $element$iv, $mesh, $$this$first$iv, $it, $vertexNode, var$11, $velocityNode;
    kji_Intrinsics_checkParameterIsNotNull($gltfSkin, $rt_s(1132));
    $skin = oktgg_GLTFSkin_getSkin($gltfSkin);
    var$3 = $this.$this$0147.$$obj.$element0;
    if (var$3 !== null)
        var$3.$setArmature($skin);
    a: {
        var$3 = $this.$this$0147.$$obj.$element0;
        if (var$3 !== null) {
            var$3 = var$3.$getMeshes0();
            if (var$3 !== null) {
                $$this$forEach$iv = var$3;
                var$5 = $$this$forEach$iv.$iterator();
                while (true) {
                    if (!var$5.$hasNext())
                        break a;
                    $element$iv = var$5.$next();
                    $mesh = $element$iv;
                    var$3 = $mesh.$getMaterial().$getShader();
                    if (var$3 !== null) {
                        $$this$first$iv = var$3.$getNodes0();
                        var$3 = $$this$first$iv.$iterator();
                        while (true) {
                            if (!var$3.$hasNext())
                                $rt_throw(ju_NoSuchElementException__init_0($rt_s(1133)));
                            $element$iv = var$3.$next();
                            $it = $element$iv;
                            if (!($it instanceof oktsg_VertexNode))
                                continue;
                            else
                                break;
                        }
                        if ($element$iv === null)
                            $rt_throw(k_TypeCastException__init_($rt_s(1134)));
                        $vertexNode = $element$iv;
                        oktu_LOG_$callClinit();
                        oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_String_valueOf1($skin.$getBoneMatrices().data.length), null, 2, null);
                        oktsg_VertexNode_setMaxBones($vertexNode, $skin.$getBoneMatrices().data.length);
                        oktsg_VertexNode_setWorldTransformType($vertexNode, 0);
                    }
                    if (oktgg_GLTFConf_getSetupVelocityShader(oktgg_GLTFNode_getGltf($this.$this$0147.$this$00).$getConf())) {
                        var$3 = $mesh.$getMaterial().$getShaderChannels();
                        oktg_ShaderChannel_$callClinit();
                        var$3 = var$3.$get0(jl_Integer_valueOf(oktg_ShaderChannel_getVelocity(oktg_ShaderChannel_INSTANCE)));
                        if (var$3 !== null) {
                            $$this$first$iv = var$3.$getNodes0();
                            var$11 = $$this$first$iv.$iterator();
                            while (true) {
                                if (!var$11.$hasNext())
                                    $rt_throw(ju_NoSuchElementException__init_0($rt_s(1133)));
                                $element$iv = var$11.$next();
                                $it = $element$iv;
                                if (!($it instanceof oktsg_VertexNode))
                                    continue;
                                else
                                    break;
                            }
                            if ($element$iv === null)
                                $rt_throw(k_TypeCastException__init_($rt_s(1134)));
                            $vertexNode = $element$iv;
                            oktsg_VertexNode_setMaxBones($vertexNode, $skin.$getBoneMatrices().data.length);
                            oktsg_VertexNode_setWorldTransformType($vertexNode, 0);
                            $$this$first$iv = var$3.$getNodes0();
                            var$3 = $$this$first$iv.$iterator();
                            while (true) {
                                if (!var$3.$hasNext())
                                    $rt_throw(ju_NoSuchElementException__init_0($rt_s(1133)));
                                $element$iv = var$3.$next();
                                $it = $element$iv;
                                if (!($it instanceof oktsg_VelocityNode))
                                    continue;
                                else
                                    break;
                            }
                            if ($element$iv === null)
                                $rt_throw(k_TypeCastException__init_($rt_s(1135)));
                            $velocityNode = $element$iv;
                            oktsg_VelocityNode_setMaxBones($velocityNode, $skin.$getBoneMatrices().data.length);
                            oktsg_VelocityNode_setWorldTransformType($velocityNode, 0);
                        }
                    }
                    if (oktgg_GLTFConf_getSetupDepthRendering(oktgg_GLTFNode_getGltf($this.$this$0147.$this$00).$getConf())) {
                        var$3 = $mesh.$getMaterial().$getShaderChannels();
                        oktg_ShaderChannel_$callClinit();
                        var$3 = var$3.$get0(jl_Integer_valueOf(oktg_ShaderChannel_getDepth(oktg_ShaderChannel_INSTANCE)));
                        if (var$3 !== null) {
                            $$this$first$iv = var$3.$getNodes0();
                            var$3 = $$this$first$iv.$iterator();
                            while (true) {
                                if (!var$3.$hasNext())
                                    $rt_throw(ju_NoSuchElementException__init_0($rt_s(1133)));
                                $element$iv = var$3.$next();
                                $it = $element$iv;
                                if (!($it instanceof oktsg_VertexNode))
                                    continue;
                                else
                                    break;
                            }
                            if ($element$iv === null)
                                break;
                            $vertexNode = $element$iv;
                            oktsg_VertexNode_setMaxBones($vertexNode, $skin.$getBoneMatrices().data.length);
                            oktsg_VertexNode_setWorldTransformType($vertexNode, 0);
                        }
                    }
                }
                $rt_throw(k_TypeCastException__init_($rt_s(1134)));
            }
        }
    }
    oktgg_GLTFNode_getGltf($this.$this$0147.$this$00).$getNodes1().$ready(oktgg_GLTFNode_getElementIndex($this.$this$0147.$this$00));
}
function oktgg_GLTFNode$read$10$1__init_0(var$0, var$1) {
    var$0.$this$0147 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFSkin$read$2() {
    kji_Lambda.call(this);
    this.$this$0148 = null;
}
function oktgg_GLTFSkin$read$2__init_(var_0) {
    var var_1 = new oktgg_GLTFSkin$read$2();
    oktgg_GLTFSkin$read$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFSkin$read$2_invoke(var$0, var$1) {
    oktgg_GLTFSkin$read$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFSkin$read$2_invoke0($this, $$this$array) {
    var $i;
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $i = kji_Ref$IntRef__init_();
    $i.$element = 0;
    $$this$array.$ints1(oktgg_GLTFSkin$read$2$1__init_($this, $i));
}
function oktgg_GLTFSkin$read$2__init_0(var$0, var$1) {
    var$0.$this$0148 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktu_ILog$DefaultImpls() {
    jl_Object.call(this);
}
function oktu_ILog$DefaultImpls_info($$this, $message, $tag) {
    kji_Intrinsics_checkParameterIsNotNull($message, $rt_s(466));
    kji_Intrinsics_checkParameterIsNotNull($tag, $rt_s(1136));
    $$this.$info($message, null, $tag);
}
function oktu_ILog$DefaultImpls_info$default(var$1, var$2, var$3, var$4, var$5) {
    if (var$5 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1137)));
    if (var$4 & 2)
        var$3 = $rt_s(6);
    var$1.$info0(var$2, var$3);
}
function oktgg_GLTFSkin$read$4() {
    var a = this; kji_Lambda.call(a);
    a.$this$0149 = null;
    a.$$ibmBufferView = null;
    a.$$ibmAccessor = null;
}
function oktgg_GLTFSkin$read$4__init_(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFSkin$read$4();
    oktgg_GLTFSkin$read$4__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTFSkin$read$4_invoke(var$0, var$1) {
    oktgg_GLTFSkin$read$4_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFSkin$read$4_invoke0($this, $buffer) {
    var $floatBuffer, $matrices, var$4, $i, var$6;
    kji_Intrinsics_checkParameterIsNotNull($buffer, $rt_s(467));
    oktgg_GLTFBuffer_getBytes($buffer).$setPosition(oktgg_GLTFBufferView_getByteOffset($this.$$ibmBufferView) + oktgg_GLTFAccessor_getByteOffset($this.$$ibmAccessor) | 0);
    $floatBuffer = oktgg_GLTFBuffer_getBytes($buffer).$floatView();
    $matrices = oktgg_GLTFSkin_getSkin($this.$this$0149).$getInverseBoneMatrices();
    var$4 = $matrices.data;
    $i = 0;
    var$6 = var$4.length;
    while ($i < var$6) {
        $floatBuffer.$get32(var$4[$i].$getValues());
        $i = $i + 1 | 0;
    }
    oktgg_GLTFSkin_getGltf($this.$this$0149).$getSkins().$ready(oktgg_GLTFSkin_getElementIndex($this.$this$0149));
}
function oktgg_GLTFSkin$read$4__init_0(var$0, var$1, var$2, var$3) {
    var$0.$this$0149 = var$1;
    var$0.$$ibmBufferView = var$2;
    var$0.$$ibmAccessor = var$3;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFSkin$read$3() {
    kji_Lambda.call(this);
    this.$this$0150 = null;
}
function oktgg_GLTFSkin$read$3__init_(var_0) {
    var var_1 = new oktgg_GLTFSkin$read$3();
    oktgg_GLTFSkin$read$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFSkin$read$3_invoke(var$0, var$1) {
    oktgg_GLTFSkin$read$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFSkin$read$3_invoke0($this, $node) {
    kji_Intrinsics_checkParameterIsNotNull($node, $rt_s(45));
    oktgg_GLTFSkin_getSkin($this.$this$0150).$setNode(oktgg_GLTFNode_getNode($node));
}
function oktgg_GLTFSkin$read$3__init_0(var$0, var$1) {
    var$0.$this$0150 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jur_PositiveLookAhead() {
    jur_AtomicJointSet.call(this);
}
function jur_PositiveLookAhead__init_(var_0, var_1) {
    var var_2 = new jur_PositiveLookAhead();
    jur_PositiveLookAhead__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_PositiveLookAhead__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_PositiveLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e, $shift;
    $size = $this.$children0.$size();
    $i = 0;
    while ($i < $size) {
        $e = $this.$children0.$get1($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $this.$next0.$matches($stringIndex, $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_PositiveLookAhead_hasConsumed($this, $matchResult) {
    return 0;
}
function oktm_IVec2() {
}
var oktm_IVec2_Companion = null;
function oktm_IVec2_$callClinit() {
    oktm_IVec2_$callClinit = $rt_eraseClinit(oktm_IVec2);
    oktm_IVec2__clinit_();
}
function oktm_IVec2__clinit_() {
    oktm_IVec2$Companion_$callClinit();
    oktm_IVec2_Companion = oktm_IVec2$Companion_$$INSTANCE;
}
function oktm_IVec4() {
}
var oktm_IVec4_Companion = null;
function oktm_IVec4_$callClinit() {
    oktm_IVec4_$callClinit = $rt_eraseClinit(oktm_IVec4);
    oktm_IVec4__clinit_();
}
function oktm_IVec4__clinit_() {
    oktm_IVec4$Companion_$callClinit();
    oktm_IVec4_Companion = oktm_IVec4$Companion_$$INSTANCE;
}
function oktm_IVec3() {
}
var oktm_IVec3_Companion = null;
function oktm_IVec3_$callClinit() {
    oktm_IVec3_$callClinit = $rt_eraseClinit(oktm_IVec3);
    oktm_IVec3__clinit_();
}
function oktm_IVec3__clinit_() {
    oktm_IVec3$Companion_$callClinit();
    oktm_IVec3_Companion = oktm_IVec3$Companion_$$INSTANCE;
}
function ooo_DContact$DSurfaceParameters() {
    var a = this; jl_Object.call(a);
    a.$mode2 = 0;
    a.$mu = 0.0;
    a.$mu2 = 0.0;
    a.$rho = 0.0;
    a.$rho2 = 0.0;
    a.$rhoN = 0.0;
    a.$bounce = 0.0;
    a.$bounce_vel = 0.0;
    a.$soft_erp = 0.0;
    a.$soft_cfm = 0.0;
    a.$motion1 = 0.0;
    a.$motion2 = 0.0;
    a.$motionN = 0.0;
    a.$slip1 = 0.0;
    a.$slip2 = 0.0;
}
function ooo_DContact$DSurfaceParameters__init_() {
    var var_0 = new ooo_DContact$DSurfaceParameters();
    ooo_DContact$DSurfaceParameters__init_0(var_0);
    return var_0;
}
function ooo_DContact$DSurfaceParameters__init_0($this) {
    jl_Object__init_0($this);
}
function jn_ReadOnlyBufferException() {
    jl_UnsupportedOperationException.call(this);
}
function jn_ReadOnlyBufferException__init_() {
    var var_0 = new jn_ReadOnlyBufferException();
    jn_ReadOnlyBufferException__init_0(var_0);
    return var_0;
}
function jn_ReadOnlyBufferException__init_0($this) {
    jl_UnsupportedOperationException__init_1($this);
}
function oktgn_Node() {
    var a = this; jl_Object.call(a);
    a.$name34 = null;
    a.$position8 = null;
    a.$rotation0 = null;
    a.$scale1 = null;
    a.$worldMatrix = null;
    a.$parentNode = null;
    a.$childNodes0 = null;
}
function oktgn_Node__init_() {
    var var_0 = new oktgn_Node();
    oktgn_Node__init_0(var_0);
    return var_0;
}
function oktgn_Node_getName($this) {
    return $this.$name34;
}
function oktgn_Node_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name34 = $_set___;
}
function oktgn_Node_getPosition($this) {
    return $this.$position8;
}
function oktgn_Node_getRotation($this) {
    return $this.$rotation0;
}
function oktgn_Node_getRotation0(var$0) {
    return oktgn_Node_getRotation(var$0);
}
function oktgn_Node_getScale($this) {
    return $this.$scale1;
}
function oktgn_Node_getWorldMatrix($this) {
    return $this.$worldMatrix;
}
function oktgn_Node_getWorldMatrix0(var$0) {
    return oktgn_Node_getWorldMatrix(var$0);
}
function oktgn_Node_getParentNode($this) {
    return $this.$parentNode;
}
function oktgn_Node_setParentNode($this, $_set___) {
    $this.$parentNode = $_set___;
}
function oktgn_Node_getChildNodes($this) {
    return $this.$childNodes0;
}
function oktgn_Node_getChildNodes0(var$0) {
    return oktgn_Node_getChildNodes(var$0);
}
function oktgn_Node_addChildNode($this, $node) {
    kji_Intrinsics_checkParameterIsNotNull($node, $rt_s(45));
    oktgn_ITransformNode$DefaultImpls_addChildNode($this, $node);
    oktgn_Node_getChildNodes($this).$add1($node);
}
function oktgn_Node_removeChildNode($this, $node) {
    kji_Intrinsics_checkParameterIsNotNull($node, $rt_s(45));
    oktgn_ITransformNode$DefaultImpls_removeChildNode($this, $node);
    oktgn_Node_getChildNodes($this).$remove1($node);
}
function oktgn_Node_updateTransform($this, $recursive) {
    var $parent, $$this$traverseSafe$iv, $i$iv, $item$iv, $it;
    $parent = oktgn_Node_getParentNode($this);
    if ($parent === null)
        oktgn_Node_getWorldMatrix($this).$set55(oktgn_Node_getPosition($this), oktgn_Node_getRotation($this), oktgn_Node_getScale($this));
    else
        oktgn_Node_getWorldMatrix($this).$set55(oktgn_Node_getPosition($this), oktgn_Node_getRotation($this), oktgn_Node_getScale($this)).$mulLeft(oktgn_ITransformNode$DefaultImpls_getWorldMatrix$default($parent, null, 0, 3, null));
    if ($recursive) {
        $$this$traverseSafe$iv = oktgn_Node_getChildNodes($this);
        $i$iv = 0;
        while ($i$iv < $$this$traverseSafe$iv.$size()) {
            $item$iv = $$this$traverseSafe$iv.$get1($i$iv);
            if ($item$iv !== null) {
                $it = $item$iv;
                $it.$updateTransform0($recursive);
            }
            $i$iv = $i$iv + 1 | 0;
        }
    }
}
function oktgn_Node_getWorldMatrix1($this, $out, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if (!$isLocal)
        $out.$set3(oktgn_Node_getWorldMatrix($this));
    else
        $out.$set55(oktgn_Node_getPosition($this), oktgn_Node_getRotation($this), oktgn_Node_getScale($this));
    return $out;
}
function oktgn_Node__init_0($this) {
    jl_Object__init_0($this);
    $this.$name34 = $rt_s(6);
    $this.$position8 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    $this.$rotation0 = oktm_Vec4__init_(0.0, 0.0, 0.0, 0.0, 15, null);
    $this.$scale1 = oktm_Vec3__init_0(1.0, 1.0, 1.0);
    $this.$worldMatrix = oktm_Mat4__init_();
    $this.$childNodes0 = ju_ArrayList__init_();
}
function oktgn_Node_addChildren($this, $nodes) {
    kji_Intrinsics_checkParameterIsNotNull($nodes, $rt_s(1012));
    oktgn_ITransformNode$DefaultImpls_addChildren($this, $nodes);
}
function oktgn_Node_getPosition0($this, $out, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return oktgn_ITransformNode$DefaultImpls_getPosition($this, $out, $isLocal);
}
function oktgn_Node_clear($this) {
    oktgn_ITransformNode$DefaultImpls_clear($this);
}
function oktsp_Threshold() {
    var a = this; jl_Object.call(a);
    a.$cutoff = 0.0;
    a.$shader = null;
}
var oktsp_Threshold_Companion = null;
function oktsp_Threshold_$callClinit() {
    oktsp_Threshold_$callClinit = $rt_eraseClinit(oktsp_Threshold);
    oktsp_Threshold__clinit_();
}
function oktsp_Threshold__init_(var_0) {
    var var_1 = new oktsp_Threshold();
    oktsp_Threshold__init_0(var_1, var_0);
    return var_1;
}
function oktsp_Threshold__init_1(var_0, var_1, var_2) {
    var var_3 = new oktsp_Threshold();
    oktsp_Threshold__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktsp_Threshold__init_3() {
    var var_0 = new oktsp_Threshold();
    oktsp_Threshold__init_4(var_0);
    return var_0;
}
function oktsp_Threshold_getShader($this) {
    return $this.$shader;
}
function oktsp_Threshold_render($this, $screenQuad, $inputMap, $out) {
    kji_Intrinsics_checkParameterIsNotNull($screenQuad, $rt_s(523));
    kji_Intrinsics_checkParameterIsNotNull($inputMap, $rt_s(1138));
    oktm_IScreenQuad$DefaultImpls_render$default($screenQuad, $this.$shader, $out, null, oktsp_Threshold$render$1__init_($inputMap), 4, null);
}
function oktsp_Threshold__init_0($this, $cutoff) {
    oktsp_Threshold_$callClinit();
    jl_Object__init_0($this);
    $this.$cutoff = $cutoff;
    $this.$shader = oktsp_PostShader__init_1($rt_s(1139), null, 0, null, null, 0, 62, null);
    $this.$shader.$bind();
    $this.$shader.$set1($rt_s(1140), $cutoff);
    $this.$shader.$set35($rt_s(1091), 0);
}
function oktsp_Threshold__init_2(var$0, var$1, var$2, var$3) {
    oktsp_Threshold_$callClinit();
    if (var$2 & 1)
        var$1 = 1.0;
    oktsp_Threshold__init_0(var$0, var$1);
}
function oktsp_Threshold__init_4(var$0) {
    oktsp_Threshold_$callClinit();
    oktsp_Threshold__init_2(var$0, 0.0, 1, null);
}
function oktsp_Threshold__clinit_() {
    oktsp_Threshold_Companion = oktsp_Threshold$Companion__init_(null);
}
function oktsg_VelocityNode() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$aPositionName0 = null;
    a.$aBonesName0 = null;
    a.$aBoneWeightsName0 = null;
    a.$prevPosition = null;
    a.$velocity = null;
    a.$stretchedClipSpacePosition = null;
    a.$bonesTemp0 = null;
    a.$maxBones0 = 0;
    a.$worldTransformType0 = 0;
    a.$bonesSetsNum0 = 0;
}
var oktsg_VelocityNode_InputForm = null;
var oktsg_VelocityNode_Companion = null;
function oktsg_VelocityNode_$callClinit() {
    oktsg_VelocityNode_$callClinit = $rt_eraseClinit(oktsg_VelocityNode);
    oktsg_VelocityNode__clinit_();
}
function oktsg_VelocityNode__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktsg_VelocityNode();
    oktsg_VelocityNode__init_1(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function oktsg_VelocityNode__init_2(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new oktsg_VelocityNode();
    oktsg_VelocityNode__init_(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function oktsg_VelocityNode__init_3() {
    var var_0 = new oktsg_VelocityNode();
    oktsg_VelocityNode__init_4(var_0);
    return var_0;
}
function oktsg_VelocityNode_setAPositionName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$aPositionName0 = $_set___;
}
function oktsg_VelocityNode_setABonesName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$aBonesName0 = $_set___;
}
function oktsg_VelocityNode_setABoneWeightsName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$aBoneWeightsName0 = $_set___;
}
function oktsg_VelocityNode_getVelocity($this) {
    return $this.$velocity;
}
function oktsg_VelocityNode_getStretchedClipSpacePosition($this) {
    return $this.$stretchedClipSpacePosition;
}
function oktsg_VelocityNode_getWorldSpacePosition($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1141));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_VelocityNode_getClipSpacePosition($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1128));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_VelocityNode_getPreviousViewProjectionMatrix($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1142));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_VelocityNode_getNormal($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(291));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getDefaultNormal(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_VelocityNode_getUPrevBoneMatricesName($this) {
    return jl_StringBuilder__init_().$append($rt_s(1143)).$append1(oktsg_VelocityNode_getUid($this)).$toString();
}
function oktsg_VelocityNode_getUPrevWorldMatrixName($this) {
    return jl_StringBuilder__init_().$append($rt_s(1144)).$append1(oktsg_VelocityNode_getUid($this)).$toString();
}
function oktsg_VelocityNode_getUid($this) {
    return 0;
}
function oktsg_VelocityNode_getHasBones($this) {
    return $this.$maxBones0 > 0 && $this.$bonesSetsNum0 > 0 ? 1 : 0;
}
function oktsg_VelocityNode_shaderCompiled($this) {
    var $bonesTempNewSize;
    $bonesTempNewSize = $this.$maxBones0 * 16 | 0;
    if ($this.$bonesTemp0.data.length != $bonesTempNewSize)
        $this.$bonesTemp0 = $rt_createFloatArray($bonesTempNewSize);
}
function oktsg_VelocityNode_boneInfluenceCode($this, $component, $bonesName, $weightsName, $sumName) {
    return jl_StringBuilder__init_().$append($rt_s(1029)).$append($weightsName).$append12(46).$append($component).$append($rt_s(1030)).$append($sumName).$append($rt_s(1031)).$append($weightsName).$append12(46).$append($component).$append($rt_s(1032)).$append(oktsg_VelocityNode_getUPrevBoneMatricesName($this)).$append($rt_s(1033)).$append($bonesName).$append12(46).$append($component).$append($rt_s(1034)).$toString();
}
function oktsg_VelocityNode_skinningSetCode($this, $out, $bonesName, $weightsName, $sumName) {
    $out.$append(oktsg_VelocityNode_boneInfluenceCode($this, $rt_s(349), $bonesName, $weightsName, $sumName));
    $out.$append(oktsg_VelocityNode_boneInfluenceCode($this, $rt_s(350), $bonesName, $weightsName, $sumName));
    $out.$append(oktsg_VelocityNode_boneInfluenceCode($this, $rt_s(351), $bonesName, $weightsName, $sumName));
    $out.$append(oktsg_VelocityNode_boneInfluenceCode($this, $rt_s(101), $bonesName, $weightsName, $sumName));
}
function oktsg_VelocityNode_prepareObjectData($this, $obj) {
    var $armature, $bonesTemp, $prevMatrices, var$5, $i, var$7, $floatOffset, $values, $j;
    kji_Intrinsics_checkParameterIsNotNull($obj, $rt_s(329));
    oktsg_ShaderNode_prepareObjectData($this, $obj);
    $this.$getShader().$set12(oktsg_VelocityNode_getUPrevWorldMatrixName($this), $obj.$getPreviousTransform().$getWorldMatrix());
    $armature = $obj.$getArmature();
    if ($armature !== null) {
        $bonesTemp = $this.$bonesTemp0;
        $prevMatrices = $armature.$getPreviousBoneMatrices();
        var$5 = $prevMatrices.data;
        $i = 0;
        var$7 = var$5.length;
        while ($i < var$7) {
            $floatOffset = $i * 16 | 0;
            $values = var$5[$i].$getValues();
            $j = 0;
            while ($j < 16) {
                $bonesTemp.data[$floatOffset + $j | 0] = $values.data[$j];
                $j = $j + 1 | 0;
            }
            $i = $i + 1 | 0;
        }
        okts_IShader$DefaultImpls_setMatrix4$default($this.$getShader(), oktsg_VelocityNode_getUPrevBoneMatricesName($this), $bonesTemp, 0, var$7 * 16 | 0, 4, null);
    }
}
function oktsg_VelocityNode_executionVert($this, $out) {
    var $uid, $prevPos, $prevSkinningName, $aBonesName, $aBoneWeightsName, $i, var$8, $index, $prevPositionRef, $posRef, $stretchedClipSpacePositionRef, var$13;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if (!(!$this.$prevPosition.$isUsed0() && !$this.$velocity.$isUsed0() && !$this.$stretchedClipSpacePosition.$isUsed0())) {
        $uid = 0;
        $prevPos = jl_StringBuilder__init_().$append($rt_s(1145)).$append1($uid).$toString();
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1039)).$append($prevPos).$append($rt_s(1040)).$append($this.$aPositionName0).$append($rt_s(1041)).$toString());
        $prevSkinningName = $rt_s(1146);
        if (oktsg_VelocityNode_getHasBones($this)) {
            $aBonesName = $this.$aBonesName0;
            $aBoneWeightsName = $this.$aBoneWeightsName0;
            $i = 0;
            var$8 = $this.$bonesSetsNum0;
            while ($i < var$8) {
                $index = jl_String_valueOf1($i);
                oktsg_VelocityNode_skinningSetCode($this, $out, jl_StringBuilder__init_().$append($aBonesName).$append($index).$toString(), jl_StringBuilder__init_().$append($aBoneWeightsName).$append($index).$toString(), $prevSkinningName);
                $i = $i + 1 | 0;
            }
            $out.$append(jl_StringBuilder__init_().$append($prevPos).$append($rt_s(331)).$append($prevSkinningName).$append($rt_s(1032)).$append($prevPos).$append($rt_s(330)).$toString());
        }
        a: {
            switch ($this.$worldTransformType0) {
                case 1:
                    $out.$append(jl_StringBuilder__init_().$append($prevPos).$append($rt_s(331)).$append(oktsg_VelocityNode_getUPrevWorldMatrixName($this)).$append($rt_s(1032)).$append($prevPos).$append($rt_s(330)).$toString());
                    break a;
                case 2:
                    break;
                case 3:
                    $out.$append(jl_StringBuilder__init_().$append($prevPos).$append($rt_s(1043)).$append($prevPos).$append($rt_s(1046)).$append1($uid).$append($rt_s(1047)).$append1($uid).$append($rt_s(1045)).$toString());
                    break a;
                case 4:
                    break a;
                case 5:
                    $out.$append(jl_StringBuilder__init_().$append($prevPos).$append($rt_s(1048)).$append1($uid).$append($rt_s(1049)).$append1($uid).$append($rt_s(1050)).$append1($uid).$append($rt_s(1045)).$toString());
                    break a;
                default:
                    break a;
            }
            $out.$append(jl_StringBuilder__init_().$append($prevPos).$append($rt_s(1043)).$append($prevPos).$append($rt_s(1044)).$append1($uid).$append($rt_s(1045)).$toString());
        }
        $prevPositionRef = $this.$prevPosition.$getRef0();
        $out.$append(jl_StringBuilder__init_().$append($prevPositionRef).$append($rt_s(331)).$append($prevPos).$append($rt_s(1045)).$toString());
        if (!(!$this.$velocity.$isUsed0() && !$this.$stretchedClipSpacePosition.$isUsed0())) {
            $out.$append(jl_StringBuilder__init_().$append($rt_s(1147)).$append(oktsg_VelocityNode_getPreviousViewProjectionMatrix($this).$getRef0()).$append($rt_s(1032)).$append($prevPos).$append($rt_s(330)).$toString());
            if ($this.$stretchedClipSpacePosition.$isUsed0()) {
                $posRef = oktsg_VelocityNode_getWorldSpacePosition($this).$asVec3();
                $stretchedClipSpacePositionRef = $this.$stretchedClipSpacePosition.$getRef0();
                var$13 = jl_StringBuilder__init_().$append($rt_s(1148));
                var$13 = var$13.$append($posRef).$append($rt_s(1117)).$append($this.$prevPosition.$getRef0()).$append($rt_s(268)).$append(oktsg_VelocityNode_getNormal($this).$asVec3()).$append($rt_s(1149));
                var$13 = var$13.$append($stretchedClipSpacePositionRef).$append($rt_s(331)).$append(oktsg_VelocityNode_getClipSpacePosition($this).$asVec4()).$append($rt_s(1150));
                var$13 = var$13.$append($stretchedClipSpacePositionRef).$append($rt_s(1151)).$toString();
                $out.$append(var$13);
            }
        }
    }
}
function oktsg_VelocityNode_executionFrag($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    oktsg_ShaderNode_executionFrag($this, $out);
    if ($this.$velocity.$isUsed0()) {
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1152)).$append(oktsg_VelocityNode_getClipSpacePosition($this).$asVec4()).$append($rt_s(330)).$toString());
        $out.$append($rt_s(1153));
        $out.$append($rt_s(1154));
        $out.$append(jl_StringBuilder__init_().$append($this.$velocity.$getRef0()).$append($rt_s(1155)).$toString());
    }
}
function oktsg_VelocityNode_declarationFrag($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if (!(!$this.$prevPosition.$isUsed0() && !$this.$velocity.$isUsed0())) {
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append($rt_s(1061)).$append($this.$prevPosition.$getRef0()).$append($rt_s(330)).$toString());
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append($rt_s(1156)).$toString());
        if ($this.$velocity.$isUsed0())
            $out.$append(jl_StringBuilder__init_().$append($rt_s(1157)).$append($this.$velocity.$getRef0()).$append($rt_s(330)).$toString());
    }
}
function oktsg_VelocityNode_declarationVert($this, $out) {
    var $uid;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if (!(!$this.$prevPosition.$isUsed0() && !$this.$velocity.$isUsed0() && !$this.$stretchedClipSpacePosition.$isUsed0())) {
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append($rt_s(1061)).$append($this.$prevPosition.$getRef0()).$append($rt_s(330)).$toString());
        if (!(!$this.$velocity.$isUsed0() && !$this.$stretchedClipSpacePosition.$isUsed0())) {
            $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append($rt_s(1156)).$toString());
            if ($this.$stretchedClipSpacePosition.$isUsed0())
                $out.$append(jl_StringBuilder__init_().$append($rt_s(1039)).$append($this.$stretchedClipSpacePosition.$getRef0()).$append($rt_s(330)).$toString());
        }
        a: {
            $uid = 0;
            switch ($this.$worldTransformType0) {
                case 1:
                    $out.$append(jl_StringBuilder__init_().$append($rt_s(1067)).$append(oktsg_VelocityNode_getUPrevWorldMatrixName($this)).$append($rt_s(330)).$toString());
                    break a;
                case 2:
                    break;
                case 3:
                    $out.$append(jl_StringBuilder__init_().$append($rt_s(1064)).$append1($uid).$append($rt_s(330)).$toString());
                    break a;
                default:
                    break a;
            }
            $out.$append(jl_StringBuilder__init_().$append($rt_s(1063)).$append1($uid).$append($rt_s(330)).$toString());
        }
        if (oktsg_VelocityNode_getHasBones($this)) {
            $out.$append(jl_StringBuilder__init_().$append($rt_s(1067)).$append(oktsg_VelocityNode_getUPrevBoneMatricesName($this)).$append12(91).$append1($this.$maxBones0).$append($rt_s(1068)).$toString());
            $out.$append($rt_s(1158));
        }
    }
}
function oktsg_VelocityNode_setMaxBones($this, $_set___) {
    $this.$maxBones0 = $_set___;
}
function oktsg_VelocityNode_setWorldTransformType($this, $_set___) {
    $this.$worldTransformType0 = $_set___;
}
function oktsg_VelocityNode__init_1($this, $worldSpacePosition, $clipSpacePosition, $previousViewProjectionMatrix, $normal, $maxBones, $worldTransformType, $bonesSetsNum) {
    oktsg_VelocityNode_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($worldSpacePosition, $rt_s(1141));
    kji_Intrinsics_checkParameterIsNotNull($clipSpacePosition, $rt_s(1128));
    kji_Intrinsics_checkParameterIsNotNull($previousViewProjectionMatrix, $rt_s(1142));
    kji_Intrinsics_checkParameterIsNotNull($normal, $rt_s(291));
    oktsg_ShaderNode__init_0($this);
    $this.$maxBones0 = $maxBones;
    $this.$worldTransformType0 = $worldTransformType;
    $this.$bonesSetsNum0 = $bonesSetsNum;
    $this.$aPositionName0 = $rt_s(543);
    $this.$aBonesName0 = $rt_s(886);
    $this.$aBoneWeightsName0 = $rt_s(887);
    $this.$prevPosition = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec3__init_($rt_s(1159)));
    $this.$velocity = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec2__init_($rt_s(1160)));
    $this.$stretchedClipSpacePosition = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec4__init_($rt_s(1161)));
    $this.$bonesTemp0 = $rt_createFloatArray($this.$maxBones0 * 16 | 0);
    $this.$setInput($rt_s(1141), $worldSpacePosition);
    $this.$setInput($rt_s(1128), $clipSpacePosition);
    $this.$setInput($rt_s(1142), $previousViewProjectionMatrix);
    $this.$setInput($rt_s(291), $normal);
}
function oktsg_VelocityNode__init_(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9) {
    oktsg_VelocityNode_$callClinit();
    if (var$8 & 1) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    if (var$8 & 2) {
        oktsg_GLSL_$callClinit();
        var$2 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    if (var$8 & 4) {
        oktsg_GLSL_$callClinit();
        var$3 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    if (var$8 & 8) {
        oktsg_GLSL_$callClinit();
        var$4 = oktsg_GLSL_getDefaultNormal(oktsg_GLSL_INSTANCE);
    }
    if (var$8 & 16)
        var$5 = 0;
    if (var$8 & 32)
        var$6 = 1;
    if (var$8 & 64)
        var$7 = 1;
    oktsg_VelocityNode__init_1(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7);
}
function oktsg_VelocityNode__init_4(var$0) {
    oktsg_VelocityNode_$callClinit();
    oktsg_VelocityNode__init_(var$0, null, null, null, null, 0, 0, 0, 127, null);
}
function oktsg_VelocityNode__clinit_() {
    var var$1;
    oktsg_VelocityNode_Companion = oktsg_VelocityNode$Companion__init_(null);
    var$1 = ju_LinkedHashMap__init_();
    var$1.$put3($rt_s(1141), jl_Integer_valueOf(5));
    var$1.$put3($rt_s(1128), jl_Integer_valueOf(6));
    var$1.$put3($rt_s(1142), jl_Integer_valueOf(9));
    var$1.$put3($rt_s(291), jl_Integer_valueOf(5));
    var$1.$put3($rt_s(1121), jl_Integer_valueOf(9));
    oktsg_VelocityNode_InputForm = var$1;
}
function jl_NoSuchFieldError() {
    jl_IncompatibleClassChangeError.call(this);
}
function jl_NoSuchFieldError__init_() {
    var var_0 = new jl_NoSuchFieldError();
    jl_NoSuchFieldError__init_0(var_0);
    return var_0;
}
function jl_NoSuchFieldError__init_1(var_0) {
    var var_1 = new jl_NoSuchFieldError();
    jl_NoSuchFieldError__init_2(var_1, var_0);
    return var_1;
}
function jl_NoSuchFieldError__init_0($this) {
    jl_IncompatibleClassChangeError__init_0($this);
}
function jl_NoSuchFieldError__init_2($this, $message) {
    jl_IncompatibleClassChangeError__init_2($this, $message);
}
function oktt_Texture2D$load$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$0151 = null;
    a.$$minFilter0 = 0;
    a.$$magFilter0 = 0;
    a.$$sWrap0 = 0;
    a.$$tWrap0 = 0;
    a.$$anisotropicFilter = 0.0;
    a.$$generateMipmaps0 = 0;
    a.$$uri = null;
}
function oktt_Texture2D$load$1__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new oktt_Texture2D$load$1();
    oktt_Texture2D$load$1__init_0(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function oktt_Texture2D$load$1_invoke(var$0, var$1, var$2) {
    oktt_Texture2D$load$1_invoke0(var$0, var$1.$intValue(), var$2);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktt_Texture2D$load$1_invoke0($this, $status, $img) {
    kji_Intrinsics_checkParameterIsNotNull($img, $rt_s(1162));
    oktn_NET_$callClinit();
    if (!oktn_NET_isSuccess(oktn_NET_INSTANCE, $status)) {
        oktu_LOG_$callClinit();
        oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append($rt_s(364)).$append($this.$$uri).$append($rt_s(365)).$append1($status).$toString(), null, 2, null);
    } else {
        oktt_Texture2D_setImage($this.$this$0151, $img);
        $this.$this$0151.$setName($img.$getName());
        oktt_Texture2D_access$beforeGlTexImage2D($this.$this$0151, $img.$getWidth(), $img.$getHeight(), $this.$$minFilter0, $this.$$magFilter0, $this.$$sWrap0, $this.$$tWrap0, $this.$$anisotropicFilter);
        oktg_GL_$callClinit();
        oktg_GL_glTexImage2D(oktg_GL_INSTANCE, $this.$this$0151.$getGlTarget(), 0, $img.$getGlInternalFormat(), $this.$this$0151.$getWidth(), $this.$this$0151.$getHeight(), 0, $img.$getGlPixelFormat(), $img.$getGlType(), oktt_Texture2D_getImage($this.$this$0151));
        if ($this.$$generateMipmaps0)
            $this.$this$0151.$generateMipmapsGPU();
        oktg_GL_glBindTexture(oktg_GL_INSTANCE, $this.$this$0151.$getGlTarget(), 0);
    }
}
function oktt_Texture2D$load$1__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    var$0.$this$0151 = var$1;
    var$0.$$minFilter0 = var$2;
    var$0.$$magFilter0 = var$3;
    var$0.$$sWrap0 = var$4;
    var$0.$$tWrap0 = var$5;
    var$0.$$anisotropicFilter = var$6;
    var$0.$$generateMipmaps0 = var$7;
    var$0.$$uri = var$8;
    kji_Lambda__init_0(var$0, 2);
}
function oktt_SkyboxTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$control6 = null;
    a.$$shader10 = null;
    a.$$textureCube = null;
    a.$$mesh3 = null;
}
function oktt_SkyboxTest$testMain$1__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktt_SkyboxTest$testMain$1();
    oktt_SkyboxTest$testMain$1__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktt_SkyboxTest$testMain$1_invoke(var$0) {
    oktt_SkyboxTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktt_SkyboxTest$testMain$1_invoke0($this) {
    var var$1;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$control6;
    okt_APP_$callClinit();
    var$1.$update(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    $this.$$shader10.$bind();
    $this.$$shader10.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $this.$$shader10.$set1($rt_s(1163), oktgc_ActiveCamera_getFar(oktgc_ActiveCamera_INSTANCE));
    $this.$$shader10.$set54($rt_s(1164), oktgc_ActiveCamera_getPosition(oktgc_ActiveCamera_INSTANCE));
    $this.$$textureCube.$bind4(0);
    oktm_IMesh$DefaultImpls_render$default($this.$$mesh3, $this.$$shader10, 0, 0, 0, 0, 30, null);
}
function oktt_SkyboxTest$testMain$1__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$$control6 = var$1;
    var$0.$$shader10 = var$2;
    var$0.$$textureCube = var$3;
    var$0.$$mesh3 = var$4;
    kji_Lambda__init_0(var$0, 0);
}
function oktj_IJsonArray() {
}
function oktjj_JsonSimple3Array() {
    jl_Object.call(this);
    this.$source1 = null;
}
function oktjj_JsonSimple3Array__init_(var_0) {
    var var_1 = new oktjj_JsonSimple3Array();
    oktjj_JsonSimple3Array__init_0(var_1, var_0);
    return var_1;
}
function oktjj_JsonSimple3Array_getSize($this) {
    return $this.$source1.$size();
}
function oktjj_JsonSimple3Array_get($this, $index) {
    var var$2;
    var$2 = $this.$source1.$get1($index);
    if (var$2 !== null)
        return var$2;
    $rt_throw(k_TypeCastException__init_($rt_s(1165)));
}
function oktjj_JsonSimple3Array_values($this, $call) {
    var $i, var$3, var$4;
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    $i = 0;
    var$3 = $this.$source1.$size();
    while ($i < var$3) {
        var$4 = $this.$source1.$get1($i);
        if (var$4 === null)
            $rt_throw(k_TypeCastException__init_($rt_s(1165)));
        $call.$invoke1(var$4);
        $i = $i + 1 | 0;
    }
}
function oktjj_JsonSimple3Array_objs($this, $call) {
    var $i, var$3, var$4, var$5;
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    $i = 0;
    var$3 = $this.$source1.$size();
    while ($i < var$3) {
        var$4 = new oktjj_JsonSimple3Object;
        var$5 = $this.$source1.$get1($i);
        if (var$5 === null)
            $rt_throw(k_TypeCastException__init_($rt_s(1166)));
        oktjj_JsonSimple3Object__init_(var$4, var$5);
        $call.$invoke1(var$4);
        $i = $i + 1 | 0;
    }
}
function oktjj_JsonSimple3Array__init_0($this, $source) {
    kji_Intrinsics_checkParameterIsNotNull($source, $rt_s(808));
    jl_Object__init_0($this);
    $this.$source1 = $source;
}
function oktjj_JsonSimple3Array_float($this, $index) {
    return oktj_IJsonArray$DefaultImpls_float($this, $index);
}
function oktjj_JsonSimple3Array_float0($this, $index, $default) {
    return oktj_IJsonArray$DefaultImpls_float0($this, $index, $default);
}
function oktjj_JsonSimple3Array_ints($this, $call) {
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktj_IJsonArray$DefaultImpls_ints($this, $call);
}
function oktjj_JsonSimple3Array_floats($this, $call) {
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktj_IJsonArray$DefaultImpls_floats($this, $call);
}
function oktsp_Bloom$Companion() {
    jl_Object.call(this);
}
function oktsp_Bloom$Companion__init_() {
    var var_0 = new oktsp_Bloom$Companion();
    oktsp_Bloom$Companion__init_0(var_0);
    return var_0;
}
function oktsp_Bloom$Companion__init_1(var_0) {
    var var_1 = new oktsp_Bloom$Companion();
    oktsp_Bloom$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsp_Bloom$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktsp_Bloom$Companion__init_2($this, $$constructor_marker) {
    oktsp_Bloom$Companion__init_0($this);
}
function ooo_DMass() {
}
function oooi_DxMass() {
    var a = this; jl_Object.call(a);
    a.$_mass = 0.0;
    a.$_c = null;
    a.$_I = null;
}
function oooi_DxMass__init_() {
    var var_0 = new oooi_DxMass();
    oooi_DxMass__init_0(var_0);
    return var_0;
}
function oooi_DxMass_SQR($this, $x) {
    return $x * $x;
}
function oooi_DxMass_CUBE($this, $x) {
    return $x * $x * $x;
}
function oooi_DxMass__init_0($this) {
    jl_Object__init_0($this);
    $this.$_c = oom_DVector3__init_();
    $this.$_I = oom_DMatrix3__init_1();
    $this.$dMassSetZero();
}
function oooi_DxMass_dMassCheck($this) {
    var $I2, $chat;
    if ($this.$_mass <= 0.0) {
        oooi_Common_dDEBUGMSG(jl_StringBuilder__init_().$append($rt_s(1167)).$append22($this.$_mass).$toString());
        return 0;
    }
    if (!oooi_Matrix_dIsPositiveDefinite($this.$_I)) {
        oooi_Common_dDEBUGMSG($rt_s(1168));
        return 0;
    }
    $I2 = oom_DMatrix3__init_1();
    $chat = oom_DMatrix3__init_1();
    ooo_OdeMath_dSetCrossMatrixPlus($chat, $this.$_c);
    ooo_OdeMath_dMultiply0_333($I2, $chat, $chat);
    oom_DMatrix3_scale($I2, $this.$_mass);
    oom_DMatrix3_add($I2, $this.$_I);
    if (oooi_Matrix_dIsPositiveDefinite($I2))
        return 1;
    oooi_Common_dDEBUGMSG($rt_s(1169));
    return 0;
}
function oooi_DxMass_dMassSetZero($this) {
    $this.$_mass = 0.0;
    oom_DVector3_setZero($this.$_c);
    oom_DMatrix3_setZero($this.$_I);
}
function oooi_DxMass_dMassSetParameters($this, $themass, $cgx, $cgy, $cgz, $I11, $I22, $I33, $I12, $I13, $I23) {
    $this.$dMassSetZero();
    $this.$_mass = $themass;
    oom_DVector3_set0($this.$_c, $cgx, $cgy, $cgz);
    oom_DMatrix3_set0($this.$_I, $I11, $I12, $I13, $I12, $I22, $I23, $I13, $I23, $I33);
    $this.$dMassCheck();
}
function oooi_DxMass_dMassSetSphere($this, $density, $radius) {
    $this.$dMassSetSphereTotal(4.1887902047863905 * $radius * $radius * $radius * $density, $radius);
}
function oooi_DxMass_dMassSetSphereTotal($this, $total_mass, $radius) {
    var $II;
    $this.$dMassSetZero();
    $this.$_mass = $total_mass;
    $II = 0.4 * $total_mass * $radius * $radius;
    oom_DMatrix3_set00($this.$_I, $II);
    oom_DMatrix3_set11($this.$_I, $II);
    oom_DMatrix3_set22($this.$_I, $II);
    $this.$dMassCheck();
}
function oooi_DxMass_dMassSetCapsule($this, $density, $direction, $radius, $length) {
    var $M1, $M2, $Ia, $Ib, var$9, var$10;
    oooi_Common_dUASSERT($direction >= 1 && $direction <= 3 ? 1 : 0, $rt_s(1170));
    $this.$dMassSetZero();
    $M1 = 3.141592653589793 * $radius * $radius * $length * $density;
    $M2 = 4.1887902047863905 * $radius * $radius * $radius * $density;
    $this.$_mass = $M1 + $M2;
    $Ia = $M1 * (0.25 * $radius * $radius + 0.08333333333333333 * $length * $length) + $M2 * (0.4 * $radius * $radius + 0.375 * $radius * $length + 0.25 * $length * $length);
    $Ib = ($M1 * 0.5 + $M2 * 0.4) * $radius * $radius;
    oom_DMatrix3_set00($this.$_I, $Ia);
    oom_DMatrix3_set11($this.$_I, $Ia);
    oom_DMatrix3_set22($this.$_I, $Ia);
    var$9 = $this.$_I;
    var$10 = $direction - 1 | 0;
    oom_DMatrix3_set1(var$9, var$10, var$10, $Ib);
    $this.$dMassCheck();
}
function oooi_DxMass_dMassSetCylinder($this, $density, $direction, $radius, $length) {
    $this.$dMassSetCylinderTotal(3.141592653589793 * $radius * $radius * $length * $density, $direction, $radius, $length);
}
function oooi_DxMass_dMassSetCylinderTotal($this, $total_mass, $direction, $radius, $length) {
    var $r2, $I, var$7, var$8;
    oooi_Common_dUASSERT($direction >= 1 && $direction <= 3 ? 1 : 0, $rt_s(1170));
    $this.$dMassSetZero();
    $r2 = $radius * $radius;
    $this.$_mass = $total_mass;
    $I = $total_mass * (0.25 * $r2 + 0.08333333333333333 * $length * $length);
    oom_DMatrix3_set00($this.$_I, $I);
    oom_DMatrix3_set11($this.$_I, $I);
    oom_DMatrix3_set22($this.$_I, $I);
    var$7 = $this.$_I;
    var$8 = $direction - 1 | 0;
    oom_DMatrix3_set1(var$7, var$8, var$8, $total_mass * 0.5 * $r2);
    $this.$dMassCheck();
}
function oooi_DxMass_dMassSetBox($this, $density, $lx, $ly, $lz) {
    $this.$dMassSetBoxTotal($lx * $ly * $lz * $density, $lx, $ly, $lz);
}
function oooi_DxMass_dMassSetBoxTotal($this, $total_mass, $lx, $ly, $lz) {
    var var$5, var$6, var$7, var$8, var$9;
    $this.$dMassSetZero();
    $this.$_mass = $total_mass;
    var$5 = $this.$_I;
    var$6 = $total_mass / 12.0;
    var$7 = $ly * $ly;
    var$8 = $lz * $lz;
    oom_DMatrix3_set00(var$5, var$6 * (var$7 + var$8));
    var$5 = $this.$_I;
    var$9 = $lx * $lx;
    oom_DMatrix3_set11(var$5, var$6 * (var$9 + var$8));
    oom_DMatrix3_set22($this.$_I, var$6 * (var$9 + var$7));
    $this.$dMassCheck();
}
function oooi_DxMass_dMassSetTrimesh($this, $density, $g) {
    var $TriMesh, $triangles, $T0, $T1, var$7, $T2, var$9, $TP, var$11, $i, $v, var$14, $n, $a, $b, $nx, $ny, $nz, $C, $A, $B, $a0, $a1, $b0, $b1, $P1, $j, var$30, var$31, var$32, var$33, var$34, var$35, var$36, var$37, var$38, $da, $db, $a0_2, $a0_3, $a0_4, $b0_2, $b0_3, $b0_4, $a1_2, $a1_3, $b1_2, $b1_3, $C1, $Ca, $Caa, $Caaa, $Cb, $Cbb, $Cbbb, var$58, var$59, $Cab, $Kab, $Caab, $Kaab, $Cabb, $Kabb, var$66, var$67, var$68, var$69, var$70, var$71, $w, $k1, $k2, $k3, $k4, $Fa, $Fb, $Fc, $Faa, $Fbb, $Fcc, $Faaa,
    $Fbbb, $Fccc, $Faab, $Fbbc, $Fcca, var$89, $vT;
    oooi_Common_dUASSERT($g === null ? 0 : 1, $rt_s(1171));
    $this.$dMassSetZero();
    $TriMesh = $g;
    $triangles = $TriMesh.$FetchTriangleCount0();
    $T0 = 0.0;
    $T1 = $rt_createDoubleArray(3);
    var$7 = $T1.data;
    var$7[0] = 0.0;
    var$7[1] = 0.0;
    var$7[2] = 0.0;
    $T2 = $rt_createDoubleArray(3);
    var$9 = $T2.data;
    var$9[0] = 0.0;
    var$9[1] = 0.0;
    var$9[2] = 0.0;
    $TP = $rt_createDoubleArray(3);
    var$11 = $TP.data;
    var$11[0] = 0.0;
    var$11[1] = 0.0;
    var$11[2] = 0.0;
    $i = 0;
    while ($i < $triangles) {
        $v = $rt_createArray(oom_DVector3, 3);
        var$14 = $v.data;
        var$14[0] = oom_DVector3__init_();
        var$14[1] = oom_DVector3__init_();
        var$14[2] = oom_DVector3__init_();
        $TriMesh.$FetchTransformedTriangle0($i, $v);
        $n = oom_DVector3__init_();
        $a = oom_DVector3__init_();
        $b = oom_DVector3__init_();
        oom_DVector3_eqDiff($a, var$14[1], var$14[0]);
        oom_DVector3_eqDiff($b, var$14[2], var$14[0]);
        ooo_OdeMath_dCalcVectorCross3($n, $b, $a);
        $nx = jl_Math_abs(oom_DVector3_get0($n));
        $ny = jl_Math_abs(oom_DVector3_get1($n));
        $nz = jl_Math_abs(oom_DVector3_get2($n));
        $C = $nx > $ny && $nx > $nz ? 0 : $ny <= $nz ? 2 : 1;
        if (oom_DVector3_get($n, $C) !== 0.0) {
            $A = ($C + 1 | 0) % 3 | 0;
            $B = ($A + 1 | 0) % 3 | 0;
            $a0 = 0.0;
            $a1 = 0.0;
            $b0 = 0.0;
            $b1 = 0.0;
            $P1 = 0.0;
            $j = 0;
            var$30 = $P1;
            var$31 = $P1;
            var$32 = $P1;
            var$33 = $P1;
            var$34 = $P1;
            var$35 = $P1;
            var$36 = $P1;
            var$37 = $P1;
            var$38 = $P1;
            while ($j < 3) {
                a: {
                    switch ($j) {
                        case 0:
                            $a0 = oom_DVector3_get(var$14[0], $A);
                            $b0 = oom_DVector3_get(var$14[0], $B);
                            $a1 = oom_DVector3_get(var$14[1], $A);
                            $b1 = oom_DVector3_get(var$14[1], $B);
                            break a;
                        case 1:
                            $a0 = oom_DVector3_get(var$14[1], $A);
                            $b0 = oom_DVector3_get(var$14[1], $B);
                            $a1 = oom_DVector3_get(var$14[2], $A);
                            $b1 = oom_DVector3_get(var$14[2], $B);
                            break a;
                        case 2:
                            $a0 = oom_DVector3_get(var$14[2], $A);
                            $b0 = oom_DVector3_get(var$14[2], $B);
                            $a1 = oom_DVector3_get(var$14[0], $A);
                            $b1 = oom_DVector3_get(var$14[0], $B);
                            break a;
                        default:
                    }
                }
                $da = $a1 - $a0;
                $db = $b1 - $b0;
                $a0_2 = $a0 * $a0;
                $a0_3 = $a0_2 * $a0;
                $a0_4 = $a0_3 * $a0;
                $b0_2 = $b0 * $b0;
                $b0_3 = $b0_2 * $b0;
                $b0_4 = $b0_3 * $b0;
                $a1_2 = $a1 * $a1;
                $a1_3 = $a1_2 * $a1;
                $b1_2 = $b1 * $b1;
                $b1_3 = $b1_2 * $b1;
                $C1 = $a1 + $a0;
                $Ca = $a1 * $C1 + $a0_2;
                $Caa = $a1 * $Ca + $a0_3;
                $Caaa = $a1 * $Caa + $a0_4;
                $Cb = $b1 * ($b1 + $b0) + $b0_2;
                $Cbb = $b1 * $Cb + $b0_3;
                $Cbbb = $b1 * $Cbb + $b0_4;
                var$58 = 3.0 * $a1_2;
                var$59 = 2.0 * $a1 * $a0;
                $Cab = var$58 + var$59 + $a0_2;
                $Kab = $a1_2 + var$59 + 3.0 * $a0_2;
                $Caab = $a0 * $Cab + 4.0 * $a1_3;
                $Kaab = $a1 * $Kab + 4.0 * $a0_3;
                $Cabb = 4.0 * $b1_3 + 3.0 * $b1_2 * $b0 + 2.0 * $b1 * $b0_2 + $b0_3;
                $Kabb = $b1_3 + 2.0 * $b1_2 * $b0 + 3.0 * $b1 * $b0_2 + 4.0 * $b0_3;
                var$30 = var$30 + $db * $C1;
                var$31 = var$31 + $db * $Ca;
                var$32 = var$32 + $db * $Caa;
                var$33 = var$33 + $db * $Caaa;
                var$34 = var$34 + $da * $Cb;
                var$35 = var$35 + $da * $Cbb;
                var$36 = var$36 + $da * $Cbbb;
                var$37 = var$37 + $db * ($b1 * $Cab + $b0 * $Kab);
                var$38 = var$38 + $db * ($b1 * $Caab + $b0 * $Kaab);
                $P1 = $P1 + $da * ($a1 * $Cabb + $a0 * $Kabb);
                $j = $j + 1 | 0;
            }
            var$30 = var$30 / 2.0;
            var$66 = var$31 / 6.0;
            var$67 = var$32 / 12.0;
            var$68 = var$33 / 20.0;
            var$69 = var$34 / (-6.0);
            var$70 = var$35 / (-12.0);
            var$71 = var$36 / (-20.0);
            var$32 = var$37 / 24.0;
            var$33 = var$38 / 60.0;
            var$34 = $P1 / (-60.0);
            $w =  -oom_DVector3_dot($n, var$14[0]);
            $k1 = 1.0 / oom_DVector3_get($n, $C);
            $k2 = $k1 * $k1;
            $k3 = $k2 * $k1;
            $k4 = $k3 * $k1;
            $Fa = $k1 * var$66;
            $Fb = $k1 * var$69;
            var$35 =  -$k2;
            var$58 = oom_DVector3_get($n, $A) * var$66 + oom_DVector3_get($n, $B) * var$69;
            var$36 = $w * var$30;
            $Fc = var$35 * (var$58 + var$36);
            $Faa = $k1 * var$67;
            $Fbb = $k1 * var$70;
            var$58 = oooi_DxMass_SQR($this, oom_DVector3_get($n, $A)) * var$67 + 2.0 * oom_DVector3_get($n, $A) * oom_DVector3_get($n, $B) * var$32 + oooi_DxMass_SQR($this, oom_DVector3_get($n, $B)) * var$70;
            $Fcc = $k3 * (var$58 + $w * (2.0 * (oom_DVector3_get($n, $A) * var$66 + oom_DVector3_get($n, $B) * var$69) + var$36));
            $Faaa = $k1 * var$68;
            $Fbbb = $k1 * var$71;
            var$58 =  -$k4;
            var$59 = oooi_DxMass_CUBE($this, oom_DVector3_get($n, $A)) * var$68 + 3.0 * oooi_DxMass_SQR($this, oom_DVector3_get($n, $A)) * oom_DVector3_get($n, $B) * var$33;
            var$59 = var$59 + 3.0 * oom_DVector3_get($n, $A) * oooi_DxMass_SQR($this, oom_DVector3_get($n, $B)) * var$34 + oooi_DxMass_CUBE($this, oom_DVector3_get($n, $B)) * var$71;
            var$30 = 3.0 * $w;
            var$59 = var$59 + var$30 * (oooi_DxMass_SQR($this, oom_DVector3_get($n, $A)) * var$67 + 2.0 * oom_DVector3_get($n, $A) * oom_DVector3_get($n, $B) * var$32 + oooi_DxMass_SQR($this, oom_DVector3_get($n, $B)) * var$70);
            var$30 = $w * $w;
            $Fccc = var$58 * (var$59 + var$30 * (3.0 * (oom_DVector3_get($n, $A) * var$66 + oom_DVector3_get($n, $B) * var$69) + var$36));
            $Faab = $k1 * var$33;
            $Fbbc = var$35 * (oom_DVector3_get($n, $A) * var$34 + oom_DVector3_get($n, $B) * var$71 + $w * var$70);
            var$58 = oooi_DxMass_SQR($this, oom_DVector3_get($n, $A)) * var$68 + 2.0 * oom_DVector3_get($n, $A) * oom_DVector3_get($n, $B) * var$33 + oooi_DxMass_SQR($this, oom_DVector3_get($n, $B)) * var$34;
            $Fcca = $k3 * (var$58 + $w * (2.0 * (oom_DVector3_get($n, $A) * var$67 + oom_DVector3_get($n, $B) * var$32) + $w * var$66));
            var$58 = oom_DVector3_get0($n);
            if ($A)
                $Fa = $B ? $Fc : $Fb;
            $T0 = $T0 + var$58 * $Fa;
            var$7[$A] = var$7[$A] + oom_DVector3_get($n, $A) * $Faa;
            var$7[$B] = var$7[$B] + oom_DVector3_get($n, $B) * $Fbb;
            var$7[$C] = var$7[$C] + oom_DVector3_get($n, $C) * $Fcc;
            var$9[$A] = var$9[$A] + oom_DVector3_get($n, $A) * $Faaa;
            var$9[$B] = var$9[$B] + oom_DVector3_get($n, $B) * $Fbbb;
            var$9[$C] = var$9[$C] + oom_DVector3_get($n, $C) * $Fccc;
            var$11[$A] = var$11[$A] + oom_DVector3_get($n, $A) * $Faab;
            var$11[$B] = var$11[$B] + oom_DVector3_get($n, $B) * $Fbbc;
            var$11[$C] = var$11[$C] + oom_DVector3_get($n, $C) * $Fcca;
        }
        $i = $i + 1 | 0;
    }
    var$7[0] = var$7[0] / 2.0;
    var$7[1] = var$7[1] / 2.0;
    var$7[2] = var$7[2] / 2.0;
    var$9[0] = var$9[0] / 3.0;
    var$9[1] = var$9[1] / 3.0;
    var$9[2] = var$9[2] / 3.0;
    var$11[0] = var$11[0] / 2.0;
    var$11[1] = var$11[1] / 2.0;
    var$11[2] = var$11[2] / 2.0;
    $this.$_mass = $density * $T0;
    oom_DMatrix3_set00($this.$_I, $density * (var$9[1] + var$9[2]));
    oom_DMatrix3_set11($this.$_I, $density * (var$9[2] + var$9[0]));
    oom_DMatrix3_set22($this.$_I, $density * (var$9[0] + var$9[1]));
    var$89 = $this.$_I;
    var$58 =  -$density;
    oom_DMatrix3_set01(var$89, var$58 * var$11[0]);
    oom_DMatrix3_set10($this.$_I, var$58 * var$11[0]);
    oom_DMatrix3_set21($this.$_I, var$58 * var$11[1]);
    oom_DMatrix3_set12($this.$_I, var$58 * var$11[1]);
    oom_DMatrix3_set20($this.$_I, var$58 * var$11[2]);
    oom_DMatrix3_set02($this.$_I, var$58 * var$11[2]);
    $vT = oom_DVector3__init_1(var$7[0] / $T0, var$7[1] / $T0, var$7[2] / $T0);
    $this.$dMassTranslate($vT);
    $this.$dMassCheck();
}
function oooi_DxMass_dMassTranslate($this, $xyz) {
    var $ahat, $chat, $t1, $t2, $a, $i, $j;
    $ahat = oom_DMatrix3__init_1();
    $chat = oom_DMatrix3__init_1();
    $t1 = oom_DMatrix3__init_1();
    $t2 = oom_DMatrix3__init_1();
    ooo_OdeMath_dSetCrossMatrixPlus($chat, $this.$_c);
    $a = oom_DVector3__init_0($xyz);
    oom_DVector3_add($a, $this.$_c);
    ooo_OdeMath_dSetCrossMatrixPlus($ahat, $a);
    ooo_OdeMath_dMultiply0_333($t1, $ahat, $ahat);
    ooo_OdeMath_dMultiply0_333($t2, $chat, $chat);
    $i = 0;
    while ($i < 3) {
        $j = 0;
        while ($j < 3) {
            oom_DMatrix3_add0($this.$_I, $i, $j, $this.$_mass * (oom_DMatrix3_get($t2, $i, $j) - oom_DMatrix3_get($t1, $i, $j)));
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    oom_DMatrix3_set10($this.$_I, oom_DMatrix3_get01($this.$_I));
    oom_DMatrix3_set20($this.$_I, oom_DMatrix3_get02($this.$_I));
    oom_DMatrix3_set21($this.$_I, oom_DMatrix3_get12($this.$_I));
    oom_DVector3_add($this.$_c, $xyz);
    $this.$dMassCheck();
}
function oooi_DxMass_set($this, $m) {
    $this.$_mass = $m.$getMass();
    $this.$_c = oom_DVector3__init_0($m.$getC());
    $this.$_I = oom_DMatrix3__init_0($m.$getI());
}
function oooi_DxMass_setSphere($this, $density, $radius) {
    $this.$dMassSetSphere($density, $radius);
}
function oooi_DxMass_setCapsule($this, $density, $direction, $radius, $length) {
    $this.$dMassSetCapsule($density, $direction, $radius, $length);
}
function oooi_DxMass_setCylinder($this, $density, $direction, $radius, $length) {
    $this.$dMassSetCylinder($density, $direction, $radius, $length);
}
function oooi_DxMass_setBox($this, $density, $lxyz) {
    $this.$dMassSetBox($density, $lxyz.$get01(), $lxyz.$get10(), $lxyz.$get20());
}
function oooi_DxMass_setTrimesh($this, $density, $geom) {
    $this.$dMassSetTrimesh($density, $geom);
}
function oooi_DxMass_getC($this) {
    return $this.$_c;
}
function oooi_DxMass_getMass($this) {
    return $this.$_mass;
}
function oooi_DxMass_getI($this) {
    return $this.$_I;
}
function oooi_DxMass_check($this) {
    return $this.$dMassCheck();
}
function otji_JS() {
    jl_Object.call(this);
}
function otji_JS__init_() {
    var var_0 = new otji_JS();
    otji_JS__init_0(var_0);
    return var_0;
}
function otji_JS__init_0($this) {
    jl_Object__init_0($this);
}
function otji_JS_unwrapStringArray($array) {
    var $result, $i, var$4;
    if ($array === null)
        return null;
    $result = $rt_createArray(jl_String, $array.length);
    $i = 0;
    while (true) {
        var$4 = $result.data;
        if ($i >= var$4.length)
            break;
        var$4[$i] = otjc_JSString_stringValue$static($array[$i]);
        $i = $i + 1 | 0;
    }
    return $result;
}
function otji_JS_function(var$1, var$2) {
    var name = 'jso$functor$' + var$2;
    if (!var$1[name]) {
        var fn = function() {
            return var$1[var$2].apply(var$1, arguments);
        };
        var$1[name] = function() {
            return fn;
        };
    }
    return var$1[name]();
}
function otji_JS_functionAsObject(var$1, var$2) {
    if (typeof var$1 !== "function") return var$1;
    var result = {};
    result[var$2] = var$1;
    return result;
}
function oktf_FS() {
    jl_Object.call(this);
}
var oktf_FS_api = null;
var oktf_FS_INSTANCE = null;
function oktf_FS_$callClinit() {
    oktf_FS_$callClinit = $rt_eraseClinit(oktf_FS);
    oktf_FS__clinit_();
}
function oktf_FS__init_() {
    var var_0 = new oktf_FS();
    oktf_FS__init_0(var_0);
    return var_0;
}
function oktf_FS_setApi($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    oktf_FS_api = $_set___;
}
function oktf_FS_internal($this, $path) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($path, $rt_s(404));
    var$2 = oktf_FS_api;
    if (var$2 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$2.$internal($path);
}
function oktf_FS__init_0($this) {
    oktf_FS_$callClinit();
    jl_Object__init_0($this);
}
function oktf_FS__clinit_() {
    oktf_FS_INSTANCE = oktf_FS__init_();
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$0152 = null;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0($this, $this$0) {
    $this.$this$0152 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains($this, $ch) {
    return jl_Character_isUnicodeIdentifierStart($ch);
}
function otciu_UnicodeHelper() {
    jl_Object.call(this);
}
function otciu_UnicodeHelper__init_() {
    var var_0 = new otciu_UnicodeHelper();
    otciu_UnicodeHelper__init_0(var_0);
    return var_0;
}
function otciu_UnicodeHelper__init_0($this) {
    jl_Object__init_0($this);
}
function otciu_UnicodeHelper_decodeIntByte($text) {
    var $flow, $sz, $data, $i;
    $flow = otci_CharFlow__init_($text.$toCharArray());
    $sz = otci_Base46_decode($flow);
    $data = $rt_createIntArray($sz);
    $i = 0;
    while ($i < $sz) {
        $data.data[$i] = otci_Base46_decode($flow);
        $i = $i + 1 | 0;
    }
    return $data;
}
function otciu_UnicodeHelper_decodeByte($c) {
    if ($c > 92)
        return (($c - 32 | 0) - 2 | 0) << 24 >> 24;
    if ($c <= 34)
        return ($c - 32 | 0) << 24 >> 24;
    return (($c - 32 | 0) - 1 | 0) << 24 >> 24;
}
function otciu_UnicodeHelper_extractRle($encoded) {
    var $ranges, $buffer, $index, $rangeIndex, $codePoint, $i, $b, $count, $pos, $j, $digit, var$13, var$14, var$15, var$16, var$17;
    $ranges = $rt_createArray(otciu_UnicodeHelper$Range, 16384);
    $buffer = $rt_createByteArray(16384);
    $index = 0;
    $rangeIndex = 0;
    $codePoint = 0;
    $i = 0;
    while ($i < $encoded.$length()) {
        $b = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
        if ($b == 64) {
            $i = $i + 1 | 0;
            $b = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
            $count = 0;
            $pos = 1;
            $j = 0;
            while ($j < 3) {
                $i = $i + 1 | 0;
                $digit = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
                $count = $count | $rt_imul($pos, $digit);
                $pos = $pos * 64 | 0;
                $j = $j + 1 | 0;
            }
        } else if ($b < 32)
            $count = 1;
        else {
            $b = ($b - 32 | 0) << 24 >> 24;
            $i = $i + 1 | 0;
            $count = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
        }
        if (!$b && $count >= 128) {
            if ($index > 0) {
                var$13 = $ranges.data;
                var$14 = $rangeIndex + 1 | 0;
                var$13[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf1($buffer, $index));
                $rangeIndex = var$14;
            }
            $codePoint = $codePoint + ($index + $count | 0) | 0;
            $index = 0;
        } else {
            var$15 = $buffer.data;
            var$14 = $index + $count | 0;
            if (var$14 < var$15.length)
                var$16 = $rangeIndex;
            else {
                var$13 = $ranges.data;
                var$16 = $rangeIndex + 1 | 0;
                var$13[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf1($buffer, $index));
                $codePoint = $codePoint + var$14 | 0;
                $index = 0;
            }
            while (true) {
                var$14 = $count + (-1) | 0;
                if ($count <= 0)
                    break;
                var$17 = $index + 1 | 0;
                var$15[$index] = $b;
                $index = var$17;
                $count = var$14;
            }
            $rangeIndex = var$16;
        }
        $i = $i + 1 | 0;
    }
    return ju_Arrays_copyOf2($ranges, $rangeIndex);
}
function oooil_CCD$ccd_t() {
    var a = this; jl_Object.call(a);
    a.$first_dir = null;
    a.$support1 = null;
    a.$support2 = null;
    a.$center1 = null;
    a.$center2 = null;
    a.$max_iterations = Long_ZERO;
    a.$epa_tolerance = 0.0;
    a.$mpr_tolerance = 0.0;
}
function oooil_CCD$ccd_t__init_() {
    var var_0 = new oooil_CCD$ccd_t();
    oooil_CCD$ccd_t__init_0(var_0);
    return var_0;
}
function oooil_CCD$ccd_t__init_0($this) {
    jl_Object__init_0($this);
}
function oktgg_GLTFAnimation$read$2$1$1$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$0153 = null;
    a.$$inputData = null;
}
function oktgg_GLTFAnimation$read$2$1$1$1__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFAnimation$read$2$1$1$1();
    oktgg_GLTFAnimation$read$2$1$1$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFAnimation$read$2$1$1$1_invoke(var$0, var$1) {
    oktgg_GLTFAnimation$read$2$1$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAnimation$read$2$1$1$1_invoke0($this, $outputBuffer) {
    var $inputAccessor, var$3, var$4, var$5;
    kji_Intrinsics_checkParameterIsNotNull($outputBuffer, $rt_s(1172));
    $inputAccessor = oktgg_GLTFAnimation_getGltf($this.$this$0153.$this$047.$this$043.$this$044).$getAccessors().$get1(oktgg_GLTFAnimationSampler_getInput($this.$this$0153.$$animationSampler));
    var$3 = oktgg_GLTFAnimation_getAnim($this.$this$0153.$this$047.$this$043.$this$044);
    var$4 = oktgg_GLTFAnimation_getAnim($this.$this$0153.$this$047.$this$043.$this$044).$getDuration();
    var$5 = oktgg_GLTFAccessor_getMax($inputAccessor);
    if (var$5 === null)
        kji_Intrinsics_throwNpe();
    var$3.$setDuration(jl_Math_max1(var$4, var$5.data[0]));
    $this.$this$0153.$$this_objs.$get16($rt_s(1101), oktgg_GLTFAnimation$read$2$1$1$1$1__init_($this, $outputBuffer));
}
function oktgg_GLTFAnimation$read$2$1$1$1__init_0(var$0, var$1, var$2) {
    var$0.$this$0153 = var$1;
    var$0.$$inputData = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function okttsg_SSAOTest$testMain$1$2() {
    jl_Object.call(this);
    this.$$ssao0 = null;
}
function okttsg_SSAOTest$testMain$1$2__init_(var_0) {
    var var_1 = new okttsg_SSAOTest$testMain$1$2();
    okttsg_SSAOTest$testMain$1$2__init_0(var_1, var_0);
    return var_1;
}
function okttsg_SSAOTest$testMain$1$2_buttonUp($this, $button, $screenX, $screenY, $pointer) {
    oktsp_SSAO_setVisualizeSsao($this.$$ssao0, oktsp_SSAO_getVisualizeSsao($this.$$ssao0) ? 0 : 1);
}
function okttsg_SSAOTest$testMain$1$2__init_0($this, $$captured_local_variable$0) {
    $this.$$ssao0 = $$captured_local_variable$0;
    jl_Object__init_0($this);
}
function okttsg_SSAOTest$testMain$1$2_buttonDown($this, $button, $screenX, $screenY, $pointer) {
    okti_IMouseListener$DefaultImpls_buttonDown($this, $button, $screenX, $screenY, $pointer);
}
function okttsg_SSAOTest$testMain$1$2_dragged($this, $screenX, $screenY, $pointer) {
    okti_IMouseListener$DefaultImpls_dragged($this, $screenX, $screenY, $pointer);
}
function okttsg_SSAOTest$testMain$1$2_moved($this, $screenX, $screenY) {
    okti_IMouseListener$DefaultImpls_moved($this, $screenX, $screenY);
}
function okttsg_SSAOTest$testMain$1$2_scrolled($this, $amount) {
    okti_IMouseListener$DefaultImpls_scrolled($this, $amount);
}
function okttsg_SSAOTest$testMain$1$3() {
    var a = this; kji_Lambda.call(a);
    a.$$gBuffer2 = null;
    a.$$model5 = null;
    a.$$ssao1 = null;
    a.$$screenQuad7 = null;
}
function okttsg_SSAOTest$testMain$1$3__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new okttsg_SSAOTest$testMain$1$3();
    okttsg_SSAOTest$testMain$1$3__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function okttsg_SSAOTest$testMain$1$3_invoke(var$0) {
    okttsg_SSAOTest$testMain$1$3_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttsg_SSAOTest$testMain$1$3_invoke0($this) {
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_GBuffer_render($this.$$gBuffer2, okttsg_SSAOTest$testMain$1$3$1__init_($this));
    oktsp_SSAO_render($this.$$ssao1, $this.$$screenQuad7, null);
}
function okttsg_SSAOTest$testMain$1$3__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$$gBuffer2 = var$1;
    var$0.$$model5 = var$2;
    var$0.$$ssao1 = var$3;
    var$0.$$screenQuad7 = var$4;
    kji_Lambda__init_0(var$0, 0);
}
function jur_AbstractCharClass$LazyJavaSpaceChar() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaSpaceChar();
    jur_AbstractCharClass$LazyJavaSpaceChar__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaSpaceChar__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaSpaceChar$1__init_($this);
}
function jur_PositiveLookBehind() {
    jur_AtomicJointSet.call(this);
}
function jur_PositiveLookBehind__init_(var_0, var_1) {
    var var_2 = new jur_PositiveLookBehind();
    jur_PositiveLookBehind__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_PositiveLookBehind__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_PositiveLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $leftBound, $shift, $i, $e;
    $size = $this.$children0.$size();
    $leftBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getLeftBound() : 0;
    a: {
        $shift = $this.$next0.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0) {
            $matchResult.$setConsumed($this.$groupIndex0, $stringIndex);
            $i = 0;
            while (true) {
                if ($i >= $size)
                    break a;
                $e = $this.$children0.$get1($i);
                if ($e.$findBack($leftBound, $stringIndex, $testString, $matchResult) >= 0) {
                    $matchResult.$setConsumed($this.$groupIndex0, (-1));
                    return $shift;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return (-1);
}
function jur_PositiveLookBehind_hasConsumed($this, $matchResult) {
    return 0;
}
function kc_ComparisonsKt__ComparisonsKt() {
    jl_Object.call(this);
}
function kc_ComparisonsKt__ComparisonsKt__init_() {
    var var_0 = new kc_ComparisonsKt__ComparisonsKt();
    kc_ComparisonsKt__ComparisonsKt__init_0(var_0);
    return var_0;
}
function kc_ComparisonsKt__ComparisonsKt_compareValues($a, $b) {
    if ($a === $b)
        return 0;
    if ($a === null)
        return (-1);
    if ($b !== null)
        return $a.$compareTo6($b);
    return 1;
}
function kc_ComparisonsKt__ComparisonsKt__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function kc_ComparisonsKt___ComparisonsJvmKt() {
    kc_ComparisonsKt__ComparisonsKt.call(this);
}
function kc_ComparisonsKt___ComparisonsJvmKt__init_() {
    var var_0 = new kc_ComparisonsKt___ComparisonsJvmKt();
    kc_ComparisonsKt___ComparisonsJvmKt__init_0(var_0);
    return var_0;
}
function kc_ComparisonsKt___ComparisonsJvmKt__init_0(var$0) {
    kc_ComparisonsKt__ComparisonsKt__init_0(var$0);
}
function kc_ComparisonsKt___ComparisonsKt() {
    kc_ComparisonsKt___ComparisonsJvmKt.call(this);
}
function kc_ComparisonsKt___ComparisonsKt__init_() {
    var var_0 = new kc_ComparisonsKt___ComparisonsKt();
    kc_ComparisonsKt___ComparisonsKt__init_0(var_0);
    return var_0;
}
function kc_ComparisonsKt___ComparisonsKt__init_0(var$0) {
    kc_ComparisonsKt___ComparisonsJvmKt__init_0(var$0);
}
function kc_ComparisonsKt() {
    kc_ComparisonsKt___ComparisonsKt.call(this);
}
function kc_ComparisonsKt__init_() {
    var var_0 = new kc_ComparisonsKt();
    kc_ComparisonsKt__init_0(var_0);
    return var_0;
}
function kc_ComparisonsKt__init_0(var$0) {
    kc_ComparisonsKt___ComparisonsKt__init_0(var$0);
}
function oktt_GLTFLoaderAnimTest$testMain$1$2() {
    kji_Lambda.call(this);
    this.$$model6 = null;
}
function oktt_GLTFLoaderAnimTest$testMain$1$2__init_(var_0) {
    var var_1 = new oktt_GLTFLoaderAnimTest$testMain$1$2();
    oktt_GLTFLoaderAnimTest$testMain$1$2__init_0(var_1, var_0);
    return var_1;
}
function oktt_GLTFLoaderAnimTest$testMain$1$2_invoke(var$0) {
    oktt_GLTFLoaderAnimTest$testMain$1$2_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktt_GLTFLoaderAnimTest$testMain$1$2_invoke0($this) {
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_GLTFModel_update$default($this.$$model6, 0.0, 1, null);
    oktt_GLTFModel_render($this.$$model6);
}
function oktt_GLTFLoaderAnimTest$testMain$1$2__init_0(var$0, var$1) {
    var$0.$$model6 = var$1;
    kji_Lambda__init_0(var$0, 0);
}
function ji_DataInputStream() {
    ji_FilterInputStream.call(this);
    this.$buff = null;
}
function ji_DataInputStream__init_(var_0) {
    var var_1 = new ji_DataInputStream();
    ji_DataInputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_DataInputStream__init_0($this, $in) {
    ji_FilterInputStream__init_0($this, $in);
    $this.$buff = $rt_createByteArray(8);
}
function ji_DataInputStream_readByte($this) {
    var $temp;
    $temp = $this.$in0.$read0();
    if ($temp >= 0)
        return $temp << 24 >> 24;
    $rt_throw(ji_EOFException__init_());
}
function oktgg_GLTFPrimitive$Vec3I() {
    var a = this; jl_Object.call(a);
    a.$x4 = 0;
    a.$y4 = 0;
    a.$z3 = 0;
}
function oktgg_GLTFPrimitive$Vec3I__init_(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFPrimitive$Vec3I();
    oktgg_GLTFPrimitive$Vec3I__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTFPrimitive$Vec3I__init_1(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgg_GLTFPrimitive$Vec3I();
    oktgg_GLTFPrimitive$Vec3I__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktgg_GLTFPrimitive$Vec3I__init_3() {
    var var_0 = new oktgg_GLTFPrimitive$Vec3I();
    oktgg_GLTFPrimitive$Vec3I__init_4(var_0);
    return var_0;
}
function oktgg_GLTFPrimitive$Vec3I_getX($this) {
    return $this.$x4;
}
function oktgg_GLTFPrimitive$Vec3I_setX($this, $_set___) {
    $this.$x4 = $_set___;
}
function oktgg_GLTFPrimitive$Vec3I_getY($this) {
    return $this.$y4;
}
function oktgg_GLTFPrimitive$Vec3I_setY($this, $_set___) {
    $this.$y4 = $_set___;
}
function oktgg_GLTFPrimitive$Vec3I_getZ($this) {
    return $this.$z3;
}
function oktgg_GLTFPrimitive$Vec3I_setZ($this, $_set___) {
    $this.$z3 = $_set___;
}
function oktgg_GLTFPrimitive$Vec3I__init_0($this, $x, $y, $z) {
    jl_Object__init_0($this);
    $this.$x4 = $x;
    $this.$y4 = $y;
    $this.$z3 = $z;
}
function oktgg_GLTFPrimitive$Vec3I__init_2(var$0, var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 1)
        var$1 = 0;
    if (var$4 & 2)
        var$2 = 0;
    if (var$4 & 4)
        var$3 = 0;
    oktgg_GLTFPrimitive$Vec3I__init_0(var$0, var$1, var$2, var$3);
}
function oktgg_GLTFPrimitive$Vec3I__init_4(var$0) {
    oktgg_GLTFPrimitive$Vec3I__init_2(var$0, 0, 0, 0, 7, null);
}
function oooil_CCDMPR() {
    jl_Object.call(this);
}
function oooil_CCDMPR__init_() {
    var var_0 = new oooil_CCDMPR();
    oooil_CCDMPR__init_0(var_0);
    return var_0;
}
function oooil_CCDMPR__init_0($this) {
    jl_Object__init_0($this);
}
function oooil_CCDMPR_ccdMPRIntersect($obj1, $obj2, $ccd) {
    var $portal, $res, var$6;
    $portal = oooil_CCDSimplex$ccd_simplex_t__init_();
    $res = oooil_CCDMPR_discoverPortal($obj1, $obj2, $ccd, $portal);
    if ($res < 0)
        return 0;
    if ($res > 0)
        return 1;
    var$6 = oooil_CCDMPR_refinePortal($obj1, $obj2, $ccd, $portal) ? 0 : 1;
    return var$6;
}
function oooil_CCDMPR_ccdMPRPenetration($obj1, $obj2, $ccd, $depth, $dir, $pos) {
    var $portal, $res, var$9;
    $portal = oooil_CCDSimplex$ccd_simplex_t__init_();
    $res = oooil_CCDMPR_discoverPortal($obj1, $obj2, $ccd, $portal);
    if ($res < 0)
        return (-1);
    if ($res == 1)
        oooil_CCDMPR_findPenetrTouch($obj1, $obj2, $ccd, $portal, $depth, $dir, $pos);
    else if ($res == 2)
        oooil_CCDMPR_findPenetrSegment($obj1, $obj2, $ccd, $portal, $depth, $dir, $pos);
    else if (!$res) {
        var$9 = oooil_CCDMPR_refinePortal($obj1, $obj2, $ccd, $portal);
        if (var$9 < 0)
            return (-1);
        oooil_CCDMPR_findPenetr($obj1, $obj2, $ccd, $portal, $depth, $dir, $pos);
    }
    return 0;
}
function oooil_CCDMPR_findOrigin($obj1, $obj2, $ccd, $center) {
    $ccd.$center1.$run2($obj1, $center.$v1);
    $ccd.$center2.$run2($obj2, $center.$v2);
    oooil_CCDVec3_ccdVec3Sub2($center.$v, $center.$v1, $center.$v2);
}
function oooil_CCDMPR_discoverPortal($obj1, $obj2, $ccd, $portal) {
    var $dir, $va, $vb, var$8, $dot, var$10, var$11, $cont;
    $dir = oooil_CCDVec3$ccd_vec3_t__init_();
    $va = oooil_CCDVec3$ccd_vec3_t__init_();
    $vb = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDMPR_findOrigin($obj1, $obj2, $ccd, oooil_CCDSimplex_ccdSimplexPointW0($portal));
    oooil_CCDSimplex_ccdSimplexSetSize($portal, 1);
    var$8 = oooil_CCDSimplex_ccdSimplexPoint0($portal).$v;
    oooil_CCDVec3_$callClinit();
    if (oooil_CCDVec3_ccdVec3Eq(var$8, oooil_CCDVec3_ccd_vec3_origin)) {
        oooil_CCDVec3_ccdVec3Set0($va, 2.220446049250313E-15, 0.0, 0.0);
        oooil_CCDVec3_ccdVec3Add(oooil_CCDSimplex_ccdSimplexPointW0($portal).$v, $va);
    }
    oooil_CCDVec3_ccdVec3Copy($dir, oooil_CCDSimplex_ccdSimplexPoint0($portal).$v);
    oooil_CCDVec3_ccdVec3Scale($dir, (-1.0));
    oooil_CCDVec3_ccdVec3Normalize($dir);
    oooil_CCDSupport___ccdSupport($obj1, $obj2, $dir, $ccd, oooil_CCDSimplex_ccdSimplexPointW1($portal));
    oooil_CCDSimplex_ccdSimplexSetSize($portal, 2);
    $dot = oooil_CCDVec3_ccdVec3Dot(oooil_CCDSimplex_ccdSimplexPoint1($portal).$v, $dir);
    if (!oooil_CCDVec3_ccdIsZero($dot) && $dot >= 0.0) {
        var$10 = oooil_CCDSimplex_ccdSimplexPoint0($portal).$v;
        var$8 = oooil_CCDSimplex_ccdSimplexPoint1($portal).$v;
        oooil_CCDVec3_ccdVec3Cross($dir, var$10, var$8);
        if (oooil_CCDVec3_ccdIsZero(oooil_CCDVec3_ccdVec3Len2($dir))) {
            if (!oooil_CCDVec3_ccdVec3Eq(oooil_CCDSimplex_ccdSimplexPoint1($portal).$v, oooil_CCDVec3_ccd_vec3_origin))
                return 2;
            return 1;
        }
        oooil_CCDVec3_ccdVec3Normalize($dir);
        oooil_CCDSupport___ccdSupport($obj1, $obj2, $dir, $ccd, oooil_CCDSimplex_ccdSimplexPointW2($portal));
        var$11 = oooil_CCDVec3_ccdVec3Dot(oooil_CCDSimplex_ccdSimplexPoint2($portal).$v, $dir);
        if (!oooil_CCDVec3_ccdIsZero(var$11) && var$11 >= 0.0) {
            oooil_CCDSimplex_ccdSimplexSetSize($portal, 3);
            var$8 = oooil_CCDSimplex_ccdSimplexPoint1($portal).$v;
            var$10 = oooil_CCDSimplex_ccdSimplexPoint0($portal).$v;
            oooil_CCDVec3_ccdVec3Sub2($va, var$8, var$10);
            var$8 = oooil_CCDSimplex_ccdSimplexPoint2($portal).$v;
            var$10 = oooil_CCDSimplex_ccdSimplexPoint0($portal).$v;
            oooil_CCDVec3_ccdVec3Sub2($vb, var$8, var$10);
            oooil_CCDVec3_ccdVec3Cross($dir, $va, $vb);
            oooil_CCDVec3_ccdVec3Normalize($dir);
            var$11 = oooil_CCDVec3_ccdVec3Dot($dir, oooil_CCDSimplex_ccdSimplexPoint0($portal).$v);
            if (var$11 > 0.0) {
                oooil_CCDSimplex_ccdSimplexSwap12($portal);
                oooil_CCDVec3_ccdVec3Scale($dir, (-1.0));
            }
            a: {
                while (oooil_CCDSimplex_ccdSimplexSize($portal) < 4) {
                    oooil_CCDSupport___ccdSupport($obj1, $obj2, $dir, $ccd, oooil_CCDSimplex_ccdSimplexPointW3($portal));
                    var$11 = oooil_CCDVec3_ccdVec3Dot(oooil_CCDSimplex_ccdSimplexPoint3($portal).$v, $dir);
                    if (oooil_CCDVec3_ccdIsZero(var$11))
                        break a;
                    if (var$11 < 0.0)
                        break a;
                    $cont = 0;
                    var$8 = oooil_CCDSimplex_ccdSimplexPoint1($portal).$v;
                    var$10 = oooil_CCDSimplex_ccdSimplexPoint3($portal).$v;
                    oooil_CCDVec3_ccdVec3Cross($va, var$8, var$10);
                    var$11 = oooil_CCDVec3_ccdVec3Dot($va, oooil_CCDSimplex_ccdSimplexPoint0($portal).$v);
                    if (var$11 < 0.0 && !oooil_CCDVec3_ccdIsZero(var$11)) {
                        oooil_CCDSimplex_ccdSimplexSet2($portal, oooil_CCDSimplex_ccdSimplexPoint3($portal));
                        $cont = 1;
                    }
                    if (!$cont) {
                        var$8 = oooil_CCDSimplex_ccdSimplexPoint3($portal).$v;
                        var$10 = oooil_CCDSimplex_ccdSimplexPoint2($portal).$v;
                        oooil_CCDVec3_ccdVec3Cross($va, var$8, var$10);
                        var$11 = oooil_CCDVec3_ccdVec3Dot($va, oooil_CCDSimplex_ccdSimplexPoint0($portal).$v);
                        if (var$11 < 0.0 && !oooil_CCDVec3_ccdIsZero(var$11)) {
                            oooil_CCDSimplex_ccdSimplexSet1($portal, oooil_CCDSimplex_ccdSimplexPoint3($portal));
                            $cont = 1;
                        }
                    }
                    if (!$cont) {
                        oooil_CCDSimplex_ccdSimplexSetSize($portal, 4);
                        continue;
                    }
                    var$8 = oooil_CCDSimplex_ccdSimplexPoint1($portal).$v;
                    var$10 = oooil_CCDSimplex_ccdSimplexPoint0($portal).$v;
                    oooil_CCDVec3_ccdVec3Sub2($va, var$8, var$10);
                    var$8 = oooil_CCDSimplex_ccdSimplexPoint2($portal).$v;
                    var$10 = oooil_CCDSimplex_ccdSimplexPoint0($portal).$v;
                    oooil_CCDVec3_ccdVec3Sub2($vb, var$8, var$10);
                    oooil_CCDVec3_ccdVec3Cross($dir, $va, $vb);
                    oooil_CCDVec3_ccdVec3Normalize($dir);
                }
                return 0;
            }
            return (-1);
        }
        return (-1);
    }
    return (-1);
}
function oooil_CCDMPR_refinePortal($obj1, $obj2, $ccd, $portal) {
    var $dir, $v4;
    $dir = oooil_CCDVec3$ccd_vec3_t__init_();
    $v4 = oooil_CCDSupport$ccd_support_t__init_();
    a: {
        while (true) {
            oooil_CCDMPR_portalDir($portal, $dir);
            if (oooil_CCDMPR_portalEncapsulesOrigin($portal, $dir))
                break;
            oooil_CCDSupport___ccdSupport($obj1, $obj2, $dir, $ccd, $v4);
            if (!oooil_CCDMPR_portalCanEncapsuleOrigin($portal, $v4, $dir))
                break a;
            if (oooil_CCDMPR_portalReachTolerance($portal, $v4, $dir, $ccd))
                break a;
            oooil_CCDMPR_expandPortal($portal, $v4);
        }
        return 0;
    }
    return (-1);
}
function oooil_CCDMPR_findPenetr($obj1, $obj2, $ccd, $portal, $depth, $pdir, $pos) {
    var $dir, $v4, $iterations, var$11, var$12, var$13, var$14;
    $dir = oooil_CCDVec3$ccd_vec3_t__init_();
    $v4 = oooil_CCDSupport$ccd_support_t__init_();
    $iterations = Long_ZERO;
    while (true) {
        oooil_CCDMPR_portalDir($portal, $dir);
        oooil_CCDSupport___ccdSupport($obj1, $obj2, $dir, $ccd, $v4);
        if (oooil_CCDMPR_portalReachTolerance($portal, $v4, $dir, $ccd))
            break;
        if (Long_gt($iterations, $ccd.$max_iterations))
            break;
        oooil_CCDMPR_expandPortal($portal, $v4);
        $iterations = Long_add($iterations, Long_fromInt(1));
    }
    oooil_CCDVec3_$callClinit();
    var$11 = oooil_CCDVec3_ccd_vec3_origin;
    var$12 = oooil_CCDSimplex_ccdSimplexPoint1($portal).$v;
    var$13 = oooil_CCDSimplex_ccdSimplexPoint2($portal).$v;
    var$14 = oooil_CCDSimplex_ccdSimplexPoint3($portal).$v;
    oooicj_RefDouble_set($depth, oooil_CCDVec3_ccdVec3PointTriDist2(var$11, var$12, var$13, var$14, $pdir));
    oooicj_RefDouble_set($depth, oooil_CCDVec3_CCD_SQRT(oooicj_RefDouble_get($depth)));
    oooil_CCDVec3_ccdVec3Normalize($pdir);
    oooil_CCDMPR_findPos($obj1, $obj2, $ccd, $portal, $pos);
}
function oooil_CCDMPR_findPenetrTouch($obj1, $obj2, $ccd, $portal, $depth, $dir, $pos) {
    oooicj_RefDouble_set($depth, 0.0);
    oooil_CCDVec3_$callClinit();
    oooil_CCDVec3_ccdVec3Copy($dir, oooil_CCDVec3_ccd_vec3_origin);
    oooil_CCDVec3_ccdVec3Copy($pos, oooil_CCDSimplex_ccdSimplexPoint1($portal).$v1);
    oooil_CCDVec3_ccdVec3Add($pos, oooil_CCDSimplex_ccdSimplexPoint1($portal).$v2);
    oooil_CCDVec3_ccdVec3Scale($pos, 0.5);
}
function oooil_CCDMPR_findPenetrSegment($obj1, $obj2, $ccd, $portal, $depth, $dir, $pos) {
    oooil_CCDVec3_ccdVec3Copy($pos, oooil_CCDSimplex_ccdSimplexPoint1($portal).$v1);
    oooil_CCDVec3_ccdVec3Add($pos, oooil_CCDSimplex_ccdSimplexPoint1($portal).$v2);
    oooil_CCDVec3_ccdVec3Scale($pos, 0.5);
    oooil_CCDVec3_ccdVec3Copy($dir, oooil_CCDSimplex_ccdSimplexPoint1($portal).$v);
    oooicj_RefDouble_set($depth, oooil_CCDVec3_CCD_SQRT(oooil_CCDVec3_ccdVec3Len2($dir)));
    oooil_CCDVec3_ccdVec3Normalize($dir);
}
function oooil_CCDMPR_findPos($obj1, $obj2, $ccd, $portal, $pos) {
    var $dir, $vec, $p1, $p2, var$10, var$11, $b0, $b1, $b2, $b3, $sum, $inv;
    $dir = oooil_CCDVec3$ccd_vec3_t__init_();
    $vec = oooil_CCDVec3$ccd_vec3_t__init_();
    $p1 = oooil_CCDVec3$ccd_vec3_t__init_();
    $p2 = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDMPR_portalDir($portal, $dir);
    var$10 = oooil_CCDSimplex_ccdSimplexPoint1($portal).$v;
    var$11 = oooil_CCDSimplex_ccdSimplexPoint2($portal).$v;
    oooil_CCDVec3_ccdVec3Cross($vec, var$10, var$11);
    $b0 = oooil_CCDVec3_ccdVec3Dot($vec, oooil_CCDSimplex_ccdSimplexPoint3($portal).$v);
    var$11 = oooil_CCDSimplex_ccdSimplexPoint3($portal).$v;
    var$10 = oooil_CCDSimplex_ccdSimplexPoint2($portal).$v;
    oooil_CCDVec3_ccdVec3Cross($vec, var$11, var$10);
    $b1 = oooil_CCDVec3_ccdVec3Dot($vec, oooil_CCDSimplex_ccdSimplexPoint0($portal).$v);
    var$10 = oooil_CCDSimplex_ccdSimplexPoint0($portal).$v;
    var$11 = oooil_CCDSimplex_ccdSimplexPoint1($portal).$v;
    oooil_CCDVec3_ccdVec3Cross($vec, var$10, var$11);
    $b2 = oooil_CCDVec3_ccdVec3Dot($vec, oooil_CCDSimplex_ccdSimplexPoint3($portal).$v);
    var$10 = oooil_CCDSimplex_ccdSimplexPoint2($portal).$v;
    var$11 = oooil_CCDSimplex_ccdSimplexPoint1($portal).$v;
    oooil_CCDVec3_ccdVec3Cross($vec, var$10, var$11);
    $b3 = oooil_CCDVec3_ccdVec3Dot($vec, oooil_CCDSimplex_ccdSimplexPoint0($portal).$v);
    $sum = $b0 + $b1 + $b2 + $b3;
    if (!(!oooil_CCDVec3_ccdIsZero($sum) && $sum >= 0.0)) {
        $b0 = 0.0;
        var$10 = oooil_CCDSimplex_ccdSimplexPoint2($portal).$v;
        var$11 = oooil_CCDSimplex_ccdSimplexPoint3($portal).$v;
        oooil_CCDVec3_ccdVec3Cross($vec, var$10, var$11);
        $b1 = oooil_CCDVec3_ccdVec3Dot($vec, $dir);
        var$10 = oooil_CCDSimplex_ccdSimplexPoint3($portal).$v;
        var$11 = oooil_CCDSimplex_ccdSimplexPoint1($portal).$v;
        oooil_CCDVec3_ccdVec3Cross($vec, var$10, var$11);
        $b2 = oooil_CCDVec3_ccdVec3Dot($vec, $dir);
        var$10 = oooil_CCDSimplex_ccdSimplexPoint1($portal).$v;
        var$11 = oooil_CCDSimplex_ccdSimplexPoint2($portal).$v;
        oooil_CCDVec3_ccdVec3Cross($vec, var$10, var$11);
        $b3 = oooil_CCDVec3_ccdVec3Dot($vec, $dir);
        $sum = $b1 + $b2 + $b3;
    }
    $inv = 1.0 / $sum;
    oooil_CCDVec3_ccdVec3Copy($p1, oooil_CCDVec3_ccd_vec3_origin);
    oooil_CCDVec3_ccdVec3Copy($p2, oooil_CCDVec3_ccd_vec3_origin);
    oooil_CCDVec3_ccdVec3Copy($vec, oooil_CCDSimplex_ccdSimplexPoint0($portal).$v1);
    oooil_CCDVec3_ccdVec3Scale($vec, $b0);
    oooil_CCDVec3_ccdVec3Add($p1, $vec);
    oooil_CCDVec3_ccdVec3Copy($vec, oooil_CCDSimplex_ccdSimplexPoint0($portal).$v2);
    oooil_CCDVec3_ccdVec3Scale($vec, $b0);
    oooil_CCDVec3_ccdVec3Add($p2, $vec);
    oooil_CCDVec3_ccdVec3Copy($vec, oooil_CCDSimplex_ccdSimplexPoint1($portal).$v1);
    oooil_CCDVec3_ccdVec3Scale($vec, $b1);
    oooil_CCDVec3_ccdVec3Add($p1, $vec);
    oooil_CCDVec3_ccdVec3Copy($vec, oooil_CCDSimplex_ccdSimplexPoint1($portal).$v2);
    oooil_CCDVec3_ccdVec3Scale($vec, $b1);
    oooil_CCDVec3_ccdVec3Add($p2, $vec);
    oooil_CCDVec3_ccdVec3Copy($vec, oooil_CCDSimplex_ccdSimplexPoint2($portal).$v1);
    oooil_CCDVec3_ccdVec3Scale($vec, $b2);
    oooil_CCDVec3_ccdVec3Add($p1, $vec);
    oooil_CCDVec3_ccdVec3Copy($vec, oooil_CCDSimplex_ccdSimplexPoint2($portal).$v2);
    oooil_CCDVec3_ccdVec3Scale($vec, $b2);
    oooil_CCDVec3_ccdVec3Add($p2, $vec);
    oooil_CCDVec3_ccdVec3Copy($vec, oooil_CCDSimplex_ccdSimplexPoint3($portal).$v1);
    oooil_CCDVec3_ccdVec3Scale($vec, $b3);
    oooil_CCDVec3_ccdVec3Add($p1, $vec);
    oooil_CCDVec3_ccdVec3Copy($vec, oooil_CCDSimplex_ccdSimplexPoint3($portal).$v2);
    oooil_CCDVec3_ccdVec3Scale($vec, $b3);
    oooil_CCDVec3_ccdVec3Add($p2, $vec);
    oooil_CCDVec3_ccdVec3Scale($p1, $inv);
    oooil_CCDVec3_ccdVec3Scale($p2, $inv);
    oooil_CCDVec3_ccdVec3Copy($pos, $p1);
    oooil_CCDVec3_ccdVec3Add($pos, $p2);
    oooil_CCDVec3_ccdVec3Scale($pos, 0.5);
}
function oooil_CCDMPR_expandPortal($portal, $v4) {
    var $v4v0, $dot, var$5;
    $v4v0 = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDVec3_ccdVec3Cross($v4v0, $v4.$v, oooil_CCDSimplex_ccdSimplexPoint0($portal).$v);
    $dot = oooil_CCDVec3_ccdVec3Dot(oooil_CCDSimplex_ccdSimplexPoint1($portal).$v, $v4v0);
    if ($dot <= 0.0) {
        var$5 = oooil_CCDVec3_ccdVec3Dot(oooil_CCDSimplex_ccdSimplexPoint3($portal).$v, $v4v0);
        if (var$5 <= 0.0)
            oooil_CCDSimplex_ccdSimplexSet1($portal, $v4);
        else
            oooil_CCDSimplex_ccdSimplexSet2($portal, $v4);
    } else {
        var$5 = oooil_CCDVec3_ccdVec3Dot(oooil_CCDSimplex_ccdSimplexPoint2($portal).$v, $v4v0);
        if (var$5 <= 0.0)
            oooil_CCDSimplex_ccdSimplexSet3($portal, $v4);
        else
            oooil_CCDSimplex_ccdSimplexSet1($portal, $v4);
    }
}
function oooil_CCDMPR_portalDir($portal, $dir) {
    var $v2v1, $v3v1, var$5, var$6;
    $v2v1 = oooil_CCDVec3$ccd_vec3_t__init_();
    $v3v1 = oooil_CCDVec3$ccd_vec3_t__init_();
    var$5 = oooil_CCDSimplex_ccdSimplexPoint2($portal).$v;
    var$6 = oooil_CCDSimplex_ccdSimplexPoint1($portal).$v;
    oooil_CCDVec3_ccdVec3Sub2($v2v1, var$5, var$6);
    var$5 = oooil_CCDSimplex_ccdSimplexPoint3($portal).$v;
    var$6 = oooil_CCDSimplex_ccdSimplexPoint1($portal).$v;
    oooil_CCDVec3_ccdVec3Sub2($v3v1, var$5, var$6);
    oooil_CCDVec3_ccdVec3Cross($dir, $v2v1, $v3v1);
    oooil_CCDVec3_ccdVec3Normalize($dir);
}
function oooil_CCDMPR_portalEncapsulesOrigin($portal, $dir) {
    var $dot;
    $dot = oooil_CCDVec3_ccdVec3Dot($dir, oooil_CCDSimplex_ccdSimplexPoint1($portal).$v);
    return !oooil_CCDVec3_ccdIsZero($dot) && $dot <= 0.0 ? 0 : 1;
}
function oooil_CCDMPR_portalReachTolerance($portal, $v4, $dir, $ccd) {
    var $dv1, $dv2, $dv3, $dv4, $dot1, $dot2, $dot3, var$12;
    $dv1 = oooil_CCDVec3_ccdVec3Dot(oooil_CCDSimplex_ccdSimplexPoint1($portal).$v, $dir);
    $dv2 = oooil_CCDVec3_ccdVec3Dot(oooil_CCDSimplex_ccdSimplexPoint2($portal).$v, $dir);
    $dv3 = oooil_CCDVec3_ccdVec3Dot(oooil_CCDSimplex_ccdSimplexPoint3($portal).$v, $dir);
    $dv4 = oooil_CCDVec3_ccdVec3Dot($v4.$v, $dir);
    $dot1 = $dv4 - $dv1;
    $dot2 = $dv4 - $dv2;
    $dot3 = $dv4 - $dv3;
    var$12 = oooil_CCDVec3_CCD_FMIN($dot1, $dot2);
    var$12 = oooil_CCDVec3_CCD_FMIN(var$12, $dot3);
    return !oooil_CCDVec3_ccdEq(var$12, $ccd.$mpr_tolerance) && var$12 >= $ccd.$mpr_tolerance ? 0 : 1;
}
function oooil_CCDMPR_portalCanEncapsuleOrigin($portal, $v4, $dir) {
    var $dot;
    $dot = oooil_CCDVec3_ccdVec3Dot($v4.$v, $dir);
    return !oooil_CCDVec3_ccdIsZero($dot) && $dot <= 0.0 ? 0 : 1;
}
function oktgg_GLTFSkin() {
    var a = this; jl_Object.call(a);
    a.$name35 = null;
    a.$skeleton = 0;
    a.$inverseBindMatrices = 0;
    a.$gltf9 = null;
    a.$elementIndex8 = 0;
    a.$skin0 = null;
}
function oktgg_GLTFSkin__init_0(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFSkin();
    oktgg_GLTFSkin__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTFSkin__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgg_GLTFSkin();
    oktgg_GLTFSkin__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktgg_GLTFSkin_getName($this) {
    return $this.$name35;
}
function oktgg_GLTFSkin_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name35 = $_set___;
}
function oktgg_GLTFSkin_read($this, $json) {
    var $jointsSize, var$3, var$4, var$5, var$6, $ibmAccessor, $ibmBufferView;
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    oktgg_GLTFSkin_setName($this, $json.$string5($rt_s(17), $rt_s(6)));
    $this.$skin0.$setName(oktgg_GLTFSkin_getName($this));
    $jointsSize = $json.$array4($rt_s(1173)).$getSize();
    oktg_IArmature$DefaultImpls_initBones$default($this.$skin0, $jointsSize, 0, 2, null);
    if (oktgg_GLTFConf_getSetupVelocityShader(oktgg_GLTFSkin_getGltf($this).$getConf())) {
        var$3 = $this.$skin0;
        var$4 = $rt_createArray(oktm_IMat4, $jointsSize);
        var$5 = 0;
        while (var$5 < $jointsSize) {
            var$6 = var$4.data;
            oktm_IMat4_$callClinit();
            var$6[var$5] = oktm_IMat4$Companion_getBuild(oktm_IMat4_Companion).$invoke6();
            var$5 = var$5 + 1 | 0;
        }
        var$3.$setPreviousBoneMatrices(var$4);
    }
    $json.$array($rt_s(1173), oktgg_GLTFSkin$read$2__init_($this));
    $this.$skeleton = $json.$int1($rt_s(1174), (-1));
    if ($this.$skeleton >= 0)
        oktgg_GLTFSkin_getGltf($this).$getNodes1().$getOrWait0($this.$skeleton, oktgg_GLTFSkin$read$3__init_($this));
    $this.$inverseBindMatrices = $json.$int1($rt_s(1175), (-1));
    if ($this.$inverseBindMatrices >= 0) {
        $ibmAccessor = oktgg_GLTFSkin_getGltf($this).$getAccessors().$get1($this.$inverseBindMatrices);
        $ibmBufferView = oktgg_GLTFSkin_getGltf($this).$getBufferViews0().$get1(oktgg_GLTFAccessor_getBufferView($ibmAccessor));
        oktgg_GLTFSkin_getGltf($this).$getBuffers0().$getOrWait0(oktgg_GLTFBufferView_getBuffer($ibmBufferView), oktgg_GLTFSkin$read$4__init_($this, $ibmBufferView, $ibmAccessor));
    }
}
function oktgg_GLTFSkin_getGltf($this) {
    return $this.$gltf9;
}
function oktgg_GLTFSkin_getElementIndex($this) {
    return $this.$elementIndex8;
}
function oktgg_GLTFSkin_getSkin($this) {
    return $this.$skin0;
}
function oktgg_GLTFSkin__init_1($this, $gltf, $elementIndex, $skin) {
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($skin, $rt_s(44));
    jl_Object__init_0($this);
    $this.$gltf9 = $gltf;
    $this.$elementIndex8 = $elementIndex;
    $this.$skin0 = $skin;
    $this.$name35 = $rt_s(6);
    $this.$skeleton = (-1);
    $this.$inverseBindMatrices = (-1);
}
function oktgg_GLTFSkin__init_2(var$0, var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 4)
        var$3 = oktg_Armature__init_();
    oktgg_GLTFSkin__init_1(var$0, var$1, var$2, var$3);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$0154 = null;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0($this, $this$0) {
    $this.$this$0154 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains($this, $ch) {
    return jl_Character_isJavaIdentifierPart($ch);
}
function oktg_IScene() {
}
var oktg_IScene_Companion = null;
function oktg_IScene_$callClinit() {
    oktg_IScene_$callClinit = $rt_eraseClinit(oktg_IScene);
    oktg_IScene__clinit_();
}
function oktg_IScene__clinit_() {
    oktg_IScene$Companion_$callClinit();
    oktg_IScene_Companion = oktg_IScene$Companion_$$INSTANCE;
}
function oktg_Scene() {
    var a = this; jl_Object.call(a);
    a.$lights = null;
    a.$objects0 = null;
    a.$armatures = null;
    a.$nodes1 = null;
    a.$scenes0 = null;
    a.$world1 = null;
    a.$objectSorter = null;
    a.$shaderChannel = 0;
    a.$defaultRendering = 0;
    a.$name36 = null;
    a.$node2 = null;
}
var oktg_Scene_tmpV1 = null;
var oktg_Scene_tmpV2 = null;
var oktg_Scene_objectsToUpdate = null;
var oktg_Scene_armaturesToUpdate = null;
var oktg_Scene_shadersToUpdate = null;
var oktg_Scene_opaque = null;
var oktg_Scene_translucent = null;
var oktg_Scene_Companion = null;
function oktg_Scene_$callClinit() {
    oktg_Scene_$callClinit = $rt_eraseClinit(oktg_Scene);
    oktg_Scene__clinit_();
}
function oktg_Scene__init_0(var_0, var_1) {
    var var_2 = new oktg_Scene();
    oktg_Scene__init_1(var_2, var_0, var_1);
    return var_2;
}
function oktg_Scene__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktg_Scene();
    oktg_Scene__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktg_Scene__init_3() {
    var var_0 = new oktg_Scene();
    oktg_Scene__init_4(var_0);
    return var_0;
}
function oktg_Scene_getLights($this) {
    return $this.$lights;
}
function oktg_Scene_getObjects($this) {
    return $this.$objects0;
}
function oktg_Scene_getArmatures($this) {
    return $this.$armatures;
}
function oktg_Scene_getNodes($this) {
    return $this.$nodes1;
}
function oktg_Scene_getScenes($this) {
    return $this.$scenes0;
}
function oktg_Scene_getWorld($this) {
    return $this.$world1;
}
function oktg_Scene_getShaderChannel($this) {
    return $this.$shaderChannel;
}
function oktg_Scene_setShaderChannel($this, $_set___) {
    $this.$shaderChannel = $_set___;
}
function oktg_Scene_updatePreviousTransform($this) {
    var $$this$forEach$iv, var$2, $element$iv, $it, var$5;
    $$this$forEach$iv = $this.$getObjects();
    var$2 = $$this$forEach$iv.$iterator();
    while (var$2.$hasNext()) {
        $element$iv = var$2.$next();
        $it = $element$iv;
        $it.$updatePreviousTransform0();
        var$5 = $it.$getArmature();
        if (var$5 !== null)
            var$5.$updatePreviousTransform0();
    }
    $$this$forEach$iv = $this.$getScenes0();
    var$2 = $$this$forEach$iv.$iterator();
    while (var$2.$hasNext()) {
        $element$iv = var$2.$next();
        $it = $element$iv;
        $it.$updatePreviousTransform0();
    }
}
function oktg_Scene_update($this, $delta) {
    var $$this$forEach$iv, var$3, $element$iv, $it, $objects, $i, var$8, $obj, $armature, var$11;
    $$this$forEach$iv = $this.$getNodes0();
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $it = $element$iv;
        oktgn_ITransformNode$DefaultImpls_updateTransform$default($it, 0, 1, null);
    }
    $objects = $this.$getObjects();
    oktg_Scene_objectsToUpdate.$clear();
    oktg_Scene_armaturesToUpdate.$clear();
    $i = 0;
    var$8 = $objects.$size();
    while ($i < var$8) {
        $obj = $objects.$get1($i);
        oktg_Scene_objectsToUpdate.$add1($obj);
        $armature = $obj.$getArmature();
        if ($armature !== null)
            oktg_Scene_armaturesToUpdate.$add1($armature);
        $i = $i + 1 | 0;
    }
    $$this$forEach$iv = oktg_Scene_objectsToUpdate;
    var$11 = $$this$forEach$iv.$iterator();
    while (var$11.$hasNext()) {
        $element$iv = var$11.$next();
        $it = $element$iv;
        $it.$update($delta);
    }
    $$this$forEach$iv = oktg_Scene_armaturesToUpdate;
    var$11 = $$this$forEach$iv.$iterator();
    while (var$11.$hasNext()) {
        $element$iv = var$11.$next();
        $it = $element$iv;
        $it.$update($delta);
    }
    $$this$forEach$iv = $this.$getScenes0();
    var$11 = $$this$forEach$iv.$iterator();
    while (var$11.$hasNext()) {
        $element$iv = var$11.$next();
        $it = $element$iv;
        $it.$update($delta);
    }
}
function oktg_Scene_prepareShaders($this, $objects) {
    var $shaderChannel, $i, var$4, $obj, $meshes, $j, var$8, $shader, var$10, $$this$forEach$iv, var$12, $element$iv, $it;
    a: {
        $shaderChannel = $this.$getShaderChannel();
        if ($shaderChannel == (-1)) {
            $i = 0;
            var$4 = $objects.$size();
            while (true) {
                if ($i >= var$4)
                    break a;
                $obj = $objects.$get1($i);
                $meshes = $obj.$getMeshes0();
                $j = 0;
                var$8 = $meshes.$size();
                while ($j < var$8) {
                    $shader = $meshes.$get1($j).$getMaterial().$getShader();
                    if ($shader !== null)
                        oktg_Scene_shadersToUpdate.$add1($shader);
                    $j = $j + 1 | 0;
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        var$8 = $objects.$size();
        while (true) {
            if ($i >= var$8)
                break a;
            $obj = $objects.$get1($i);
            $meshes = $obj.$getMeshes0();
            $j = 0;
            var$10 = $meshes.$size();
            while ($j < var$10) {
                $shader = $meshes.$get1($j).$getMaterial().$getShaderChannels().$get0(jl_Integer_valueOf($shaderChannel));
                if ($shader !== null)
                    oktg_Scene_shadersToUpdate.$add1($shader);
                $j = $j + 1 | 0;
            }
            $i = $i + 1 | 0;
        }
    }
    $$this$forEach$iv = oktg_Scene_shadersToUpdate;
    var$12 = $$this$forEach$iv.$iterator();
    while (var$12.$hasNext()) {
        $element$iv = var$12.$next();
        $it = $element$iv;
        $it.$prepareSceneData0($this);
    }
}
function oktg_Scene_render($this) {
    var $i, var$2;
    oktg_Scene_shadersToUpdate.$clear();
    oktg_Scene_opaque.$clear();
    oktg_Scene_translucent.$clear();
    $this.$getAllObjects(oktg_Scene_opaque, oktg_Scene_translucent);
    oktg_Scene_prepareShaders($this, oktg_Scene_opaque);
    oktg_Scene_prepareShaders($this, oktg_Scene_translucent);
    $i = 0;
    var$2 = oktg_Scene_opaque.$size();
    while ($i < var$2) {
        oktg_Scene_opaque.$get1($i).$render7($this.$getShaderChannel());
        $i = $i + 1 | 0;
    }
    a: {
        if (oktg_Scene_translucent.$size() > 0) {
            kc_CollectionsKt___CollectionsKt_sortedWith(oktg_Scene_translucent, $this.$objectSorter);
            $i = 0;
            var$2 = oktg_Scene_translucent.$size();
            while (true) {
                if ($i >= var$2)
                    break a;
                oktg_Scene_translucent.$get1($i).$render7($this.$getShaderChannel());
                $i = $i + 1 | 0;
            }
        }
    }
}
function oktg_Scene_getNode($this) {
    return $this.$node2;
}
function oktg_Scene__init_1($this, $name, $node) {
    oktg_Scene_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($node, $rt_s(45));
    jl_Object__init_0($this);
    $this.$name36 = $name;
    $this.$node2 = $node;
    $this.$lights = ju_ArrayList__init_();
    $this.$objects0 = ju_ArrayList__init_();
    $this.$armatures = ju_ArrayList__init_();
    $this.$nodes1 = ju_ArrayList__init_();
    $this.$scenes0 = ju_ArrayList__init_();
    oktg_IWorld_$callClinit();
    $this.$world1 = oktg_IWorld$Companion_getDefault(oktg_IWorld_Companion);
    oktg_Scene$objectSorter$1_$callClinit();
    $this.$objectSorter = oktg_Scene$objectSorter$1_INSTANCE;
    $this.$shaderChannel = (-1);
    $this.$defaultRendering = 1;
}
function oktg_Scene__init_2(var$0, var$1, var$2, var$3, var$4) {
    oktg_Scene_$callClinit();
    if (var$3 & 1)
        var$1 = $rt_s(6);
    if (var$3 & 2)
        var$2 = oktgn_Node__init_();
    oktg_Scene__init_1(var$0, var$1, var$2);
}
function oktg_Scene__init_4(var$0) {
    oktg_Scene_$callClinit();
    oktg_Scene__init_2(var$0, null, null, 3, null);
}
function oktg_Scene__clinit_() {
    oktg_Scene_Companion = oktg_Scene$Companion__init_(null);
    oktg_Scene_tmpV1 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktg_Scene_tmpV2 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktg_Scene_objectsToUpdate = ju_HashSet__init_();
    oktg_Scene_armaturesToUpdate = ju_HashSet__init_();
    oktg_Scene_shadersToUpdate = ju_HashSet__init_();
    oktg_Scene_opaque = ju_ArrayList__init_();
    oktg_Scene_translucent = ju_ArrayList__init_();
}
function oktg_Scene_getAllObjects($this, $opaque, $translucent) {
    kji_Intrinsics_checkParameterIsNotNull($opaque, $rt_s(895));
    kji_Intrinsics_checkParameterIsNotNull($translucent, $rt_s(896));
    oktg_IScene$DefaultImpls_getAllObjects($this, $opaque, $translucent);
}
function oktg_Scene_access$getTmpV1$cp() {
    oktg_Scene_$callClinit();
    return oktg_Scene_tmpV1;
}
function oktg_Scene_access$getTmpV2$cp() {
    oktg_Scene_$callClinit();
    return oktg_Scene_tmpV2;
}
function k_UninitializedPropertyAccessException() {
    jl_RuntimeException.call(this);
}
function k_UninitializedPropertyAccessException__init_0() {
    var var_0 = new k_UninitializedPropertyAccessException();
    k_UninitializedPropertyAccessException__init_1(var_0);
    return var_0;
}
function k_UninitializedPropertyAccessException__init_(var_0) {
    var var_1 = new k_UninitializedPropertyAccessException();
    k_UninitializedPropertyAccessException__init_2(var_1, var_0);
    return var_1;
}
function k_UninitializedPropertyAccessException__init_1($this) {
    jl_RuntimeException__init_1($this);
}
function k_UninitializedPropertyAccessException__init_2($this, $message) {
    jl_RuntimeException__init_2($this, $message);
}
function oktg_Scene$Companion() {
    jl_Object.call(this);
}
function oktg_Scene$Companion__init_0() {
    var var_0 = new oktg_Scene$Companion();
    oktg_Scene$Companion__init_1(var_0);
    return var_0;
}
function oktg_Scene$Companion__init_(var_0) {
    var var_1 = new oktg_Scene$Companion();
    oktg_Scene$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktg_Scene$Companion_getTmpV1($this) {
    return oktg_Scene_access$getTmpV1$cp();
}
function oktg_Scene$Companion_getTmpV2($this) {
    return oktg_Scene_access$getTmpV2$cp();
}
function oktg_Scene$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function oktg_Scene$Companion__init_2($this, $$constructor_marker) {
    oktg_Scene$Companion__init_1($this);
}
function kt_StringsKt__StringsKt$splitToSequence$1() {
    kji_Lambda.call(this);
    this.$$this_splitToSequence = null;
}
function kt_StringsKt__StringsKt$splitToSequence$1__init_(var_0) {
    var var_1 = new kt_StringsKt__StringsKt$splitToSequence$1();
    kt_StringsKt__StringsKt$splitToSequence$1__init_0(var_1, var_0);
    return var_1;
}
function kt_StringsKt__StringsKt$splitToSequence$1_invoke(var$0, var$1) {
    return kt_StringsKt__StringsKt$splitToSequence$1_invoke0(var$0, var$1);
}
function kt_StringsKt__StringsKt$splitToSequence$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    return kt_StringsKt__StringsKt_substring($this.$$this_splitToSequence, $it);
}
function kt_StringsKt__StringsKt$splitToSequence$1__init_0(var$0, var$1) {
    var$0.$$this_splitToSequence = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktt_FrameBuffer() {
    var a = this; jl_Object.call(a);
    a.$width1 = 0;
    a.$height1 = 0;
    a.$isBound0 = 0;
    a.$frameBufferHandle0 = 0;
    a.$attachments0 = null;
}
function oktt_FrameBuffer__init_0(var_0, var_1) {
    var var_2 = new oktt_FrameBuffer();
    oktt_FrameBuffer__init_(var_2, var_0, var_1);
    return var_2;
}
function oktt_FrameBuffer__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new oktt_FrameBuffer();
    oktt_FrameBuffer__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktt_FrameBuffer__init_3() {
    var var_0 = new oktt_FrameBuffer();
    oktt_FrameBuffer__init_4(var_0);
    return var_0;
}
function oktt_FrameBuffer_getWidth($this) {
    return $this.$width1;
}
function oktt_FrameBuffer_getHeight($this) {
    return $this.$height1;
}
function oktt_FrameBuffer_isBound($this) {
    return $this.$isBound0;
}
function oktt_FrameBuffer_setBound($this, $_set___) {
    $this.$isBound0 = $_set___;
}
function oktt_FrameBuffer_getFrameBufferHandle($this) {
    return $this.$frameBufferHandle0;
}
function oktt_FrameBuffer_getAttachments($this) {
    return $this.$attachments0;
}
function oktt_FrameBuffer_getAttachments0(var$0) {
    return oktt_FrameBuffer_getAttachments(var$0);
}
function oktt_FrameBuffer__init_($this, $width, $height) {
    jl_Object__init_0($this);
    $this.$width1 = $width;
    $this.$height1 = $height;
    oktg_GL_$callClinit();
    $this.$frameBufferHandle0 = oktg_GL_glGenFramebuffer(oktg_GL_INSTANCE);
    $this.$attachments0 = ju_ArrayList__init_();
}
function oktt_FrameBuffer__init_2(var$0, var$1, var$2, var$3, var$4) {
    if (var$3 & 1) {
        oktg_GL_$callClinit();
        var$1 = oktg_GL_getMainFrameBufferWidth(oktg_GL_INSTANCE);
    }
    if (var$3 & 2) {
        oktg_GL_$callClinit();
        var$2 = oktg_GL_getMainFrameBufferHeight(oktg_GL_INSTANCE);
    }
    oktt_FrameBuffer__init_(var$0, var$1, var$2);
}
function oktt_FrameBuffer__init_4(var$0) {
    oktt_FrameBuffer__init_2(var$0, 0, 0, 3, null);
}
function oktt_FrameBuffer_getTexture($this, $index) {
    return oktt_IFrameBuffer$DefaultImpls_getTexture($this, $index);
}
function oktt_FrameBuffer_buildAttachments($this) {
    oktt_IFrameBuffer$DefaultImpls_buildAttachments($this);
}
function oktt_FrameBuffer_initBuffersOrder($this, $indices) {
    kji_Intrinsics_checkParameterIsNotNull($indices, $rt_s(566));
    oktt_IFrameBuffer$DefaultImpls_initBuffersOrder($this, $indices);
}
function oktt_FrameBuffer_checkErrors($this) {
    oktt_IFrameBuffer$DefaultImpls_checkErrors($this);
}
function oktt_FrameBuffer_destroy($this, $destroyTextures) {
    oktt_IFrameBuffer$DefaultImpls_destroy($this, $destroyTextures);
}
function oktt_FrameBuffer_bind($this, $block) {
    kji_Intrinsics_checkParameterIsNotNull($block, $rt_s(301));
    oktt_IFrameBuffer$DefaultImpls_bind($this, $block);
}
function oktt_FrameBuffer_render($this, $block) {
    kji_Intrinsics_checkParameterIsNotNull($block, $rt_s(301));
    oktt_IFrameBuffer$DefaultImpls_render($this, $block);
}
function cgcj_JsonArray() {
    ju_ArrayList.call(this);
}
function cgcj_JsonArray__init_() {
    var var_0 = new cgcj_JsonArray();
    cgcj_JsonArray__init_1(var_0);
    return var_0;
}
function cgcj_JsonArray__init_0(var_0) {
    var var_1 = new cgcj_JsonArray();
    cgcj_JsonArray__init_2(var_1, var_0);
    return var_1;
}
function cgcj_JsonArray__init_1($this) {
    ju_ArrayList__init_2($this);
}
function cgcj_JsonArray__init_2($this, $collection) {
    ju_ArrayList__init_4($this, $collection);
}
function cgcj_JsonArray_getMap($this, $index) {
    return $this.$get1($index);
}
function oooip_DxWorldProcessMemArena() {
    var a = this; jl_Object.call(a);
    a.$m_pAllocCurrentOrNextArena = null;
    a.$m_pAllocBegin = null;
    a.$m_pAllocEnd = null;
    a.$m_pArenaBegin = null;
    a.$m_pArenaMemMgr = null;
}
function oooip_DxWorldProcessMemArena__init_() {
    var var_0 = new oooip_DxWorldProcessMemArena();
    oooip_DxWorldProcessMemArena__init_0(var_0);
    return var_0;
}
function oooip_DxWorldProcessMemArena__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_pAllocCurrentOrNextArena = oooip_DxUtil$BlockPointer__init_($this, 0);
    $this.$m_pAllocBegin = oooip_DxUtil$BlockPointer__init_($this, 0);
    $this.$m_pAllocEnd = oooip_DxUtil$BlockPointer__init_($this, 0);
}
function oooip_DxWorldProcessMemArena_BUFFER_TO_ARENA_EXTRA() {
    var var$1;
    var$1 = oooip_DxUtil_sizeof($rt_cls(oooip_DxWorldProcessMemArena));
    return 16 + oooip_DxUtil_dEFFICIENT_SIZE(var$1) | 0;
}
function oooip_DxWorldProcessMemArena_IsArenaPossible($nBufferSize) {
    return (2147483647 - oooip_DxWorldProcessMemArena_BUFFER_TO_ARENA_EXTRA() | 0) < $nBufferSize ? 0 : 1;
}
function oooip_DxWorldProcessMemArena_MakeArenaSize($nBufferSize) {
    return oooip_DxWorldProcessMemArena_BUFFER_TO_ARENA_EXTRA() + $nBufferSize | 0;
}
function oooip_DxWorldProcessMemArena_IsStructureValid($this) {
    var var$1, var$2;
    a: {
        if ($this.$m_pAllocBegin !== null && $this.$m_pAllocEnd !== null) {
            var$1 = $this.$m_pAllocBegin;
            if (var$1.$toInt1() <= $this.$m_pAllocEnd.$toInt1() && !($this.$m_pAllocCurrentOrNextArena !== null && $this.$m_pAllocCurrentOrNextArena !== $this.$m_pAllocBegin) && $this.$m_pArenaBegin !== null) {
                var$1 = $this.$m_pArenaBegin;
                if (var$1.$toInt1() <= $this.$m_pAllocBegin.$toInt1()) {
                    var$2 = 1;
                    break a;
                }
            }
        }
        var$2 = 0;
    }
    return var$2;
}
function oooip_DxWorldProcessMemArena_GetMemorySize($this) {
    return $this.$m_pAllocEnd.$toInt1() - $this.$m_pAllocBegin.$toInt1() | 0;
}
function oooip_DxWorldProcessMemArena_SaveState($this) {
    return $this.$m_pAllocCurrentOrNextArena;
}
function oooip_DxWorldProcessMemArena_RestoreState($this, $state) {
    $this.$m_pAllocCurrentOrNextArena = $state;
}
function oooip_DxWorldProcessMemArena_ResetState($this) {
    $this.$m_pAllocCurrentOrNextArena = $this.$m_pAllocBegin;
}
function oooip_DxWorldProcessMemArena_GetNextMemArena($this) {
    return $this.$m_pAllocCurrentOrNextArena.$asDxWorldProcessMemArena();
}
function oooip_DxWorldProcessMemArena_SetNextMemArena($this, $pArenaInstance) {
    $this.$m_pAllocCurrentOrNextArena.$setTo($pArenaInstance);
}
function oooip_DxWorldProcessMemArena_ReallocateMemArena($oldarena, $memreq, $memmgr, $rsrvfactor, $rsrvminimum) {
    var $allocsuccess, $nOldArenaSize, $pOldArenaBuffer, $oldmemsize, var$10, $arenareq, $arenareq_with_reserve, $memreq_with_reserve, $pNewArenaBuffer, $blockbegin, $blockend;
    $allocsuccess = 0;
    $nOldArenaSize = 0;
    $pOldArenaBuffer = null;
    $oldmemsize = $oldarena === null ? 0 : oooip_DxWorldProcessMemArena_GetMemorySize($oldarena);
    a: {
        if ($oldarena !== null && $oldmemsize >= $memreq)
            var$10 = $oldarena;
        else {
            $nOldArenaSize = $oldarena === null ? 0 : oooip_DxWorldProcessMemArena_MakeArenaSize($oldmemsize);
            $pOldArenaBuffer = $oldarena === null ? null : $oldarena.$m_pArenaBegin;
            if (!oooip_DxWorldProcessMemArena_IsArenaPossible($memreq)) {
                var$10 = $oldarena;
                break a;
            }
            $arenareq = oooip_DxWorldProcessMemArena_MakeArenaSize($memreq);
            $arenareq_with_reserve = oooip_DxWorldProcessMemArena_AdjustArenaSizeForReserveRequirements($arenareq, $rsrvfactor, $rsrvminimum);
            $memreq_with_reserve = $memreq + ($arenareq_with_reserve - $arenareq | 0) | 0;
            if ($oldarena === null)
                var$10 = $oldarena;
            else {
                $oldarena.$m_pArenaMemMgr.$m_fnFree.$run3($pOldArenaBuffer, $nOldArenaSize);
                var$10 = null;
                $pOldArenaBuffer = null;
                $nOldArenaSize = 0;
            }
            $pNewArenaBuffer = $memmgr.$m_fnAlloc.$run4($arenareq_with_reserve);
            if ($pNewArenaBuffer === null)
                break a;
            $oldarena = oooip_DxUtil_dEFFICIENT_PTR($pNewArenaBuffer).$asDxWorldProcessMemArena();
            $blockbegin = oooip_DxUtil_dEFFICIENT_PTR0($oldarena, 1);
            $blockend = oooip_DxUtil_dOFFSET_EFFICIENTLY($blockbegin, $memreq_with_reserve);
            $oldarena.$m_pAllocBegin = $blockbegin;
            $oldarena.$m_pAllocEnd = $blockend;
            $oldarena.$m_pArenaBegin = $pNewArenaBuffer;
            $oldarena.$m_pAllocCurrentOrNextArena.$setTo(null);
            $oldarena.$m_pArenaMemMgr = $memmgr;
        }
        $allocsuccess = 1;
    }
    if (!$allocsuccess) {
        if ($pOldArenaBuffer !== null) {
            oooi_Common_dIASSERT(var$10 === null ? 0 : 1);
            var$10.$m_pArenaMemMgr.$m_fnFree.$run3($pOldArenaBuffer, $nOldArenaSize);
        }
        $oldarena = null;
    }
    return $oldarena;
}
function oooip_DxWorldProcessMemArena_AdjustArenaSizeForReserveRequirements($arenareq, $rsrvfactor, $boundedarena) {
    var $scaledarena, $boundedarena_0;
    $scaledarena = $arenareq * $rsrvfactor;
    $boundedarena_0 = $scaledarena >= 2.147483647E9 ? 2147483647 : $scaledarena | 0;
    if ($boundedarena_0 > $boundedarena)
        $boundedarena = $boundedarena_0;
    return oooip_DxUtil_dEFFICIENT_SIZE($boundedarena);
}
function oooip_DxWorldProcessMemArena_AllocateArrayDReal($this, $size) {
    return $rt_createDoubleArray($size);
}
function oooip_DxWorldProcessMemArena_AllocateArrayInt($this, $size) {
    return $rt_createIntArray($size);
}
function oooip_DxWorldProcessMemArena_dummy($this) {
    return;
}
function oooip_DxWorldProcessMemArena_ShrinkArrayDJointWithInfo1($this, $jointiinfos, $_nj, $njXXX) {
    return;
}
function oooip_DxWorldProcessMemArena_BEGIN_STATE_SAVE($this) {
    return oooip_DxWorldProcessMemArena_SaveState($this);
}
function oooip_DxWorldProcessMemArena_END_STATE_SAVE($this, $saveInner) {
    oooip_DxWorldProcessMemArena_RestoreState($this, $saveInner);
}
function oooip_DxWorldProcessMemArena_AllocateArrayDxBody($this, $nb) {
    return $rt_createArray(oooi_DxBody, $nb);
}
function oooip_DxWorldProcessMemArena_AllocateArrayDxJoint($this, $nj) {
    return $rt_createArray(oooij_DxJoint, $nj);
}
function oktts_BloomBaseTest() {
    jl_Object.call(this);
}
function oktts_BloomBaseTest__init_() {
    var var_0 = new oktts_BloomBaseTest();
    oktts_BloomBaseTest__init_0(var_0);
    return var_0;
}
function oktts_BloomBaseTest_getName($this) {
    return $rt_s(1176);
}
function oktts_BloomBaseTest_testMain($this) {
    var $cubeShader, var$2, var$3, var$4, var$5, $blurDownShader, var$7, $blurUpShader, $sceneColorBuffer, $iterations, var$11, var$12, var$13, var$14, $div, var$16, var$17, var$18, var$19, $screenQuad, $box, $control, var$23, $debugMaps, $mapIndex;
    $cubeShader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($cubeShader, $rt_s(1177), $rt_s(1178), var$2, 0, var$3, 0, var$4, 124, var$5);
    $blurDownShader = new oktsp_PostShader;
    var$7 = null;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    oktsp_PostShader__init_2($blurDownShader, $rt_s(1179), var$7, 0, var$2, var$3, 0, 62, var$4);
    $blurDownShader.$bind();
    $blurDownShader.$set35($rt_s(1180), 0);
    $blurUpShader = new oktsp_PostShader;
    var$7 = null;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    oktsp_PostShader__init_2($blurUpShader, $rt_s(1181), var$7, 0, var$2, var$3, 0, 62, var$4);
    $blurUpShader.$bind();
    $blurUpShader.$set35($rt_s(1182), 0);
    $blurUpShader.$set35($rt_s(1180), 1);
    $blurUpShader.$set1($rt_s(1183), 1.0);
    $sceneColorBuffer = oktt_SimpleFrameBuffer__init_2(0, 0, 0, 0, 0, 0, 0, 127, null);
    $iterations = 8;
    var$11 = $rt_createArray(oktt_SimpleFrameBuffer, $iterations);
    var$12 = 0;
    while (var$12 < $iterations) {
        var$13 = var$11.data;
        var$14 = var$12 + 1 | 0;
        $div = jl_Math_pow(2.0, var$14) | 0;
        var$13[var$12] = oktt_SimpleFrameBuffer__init_2(oktt_SimpleFrameBuffer_getWidth($sceneColorBuffer) / $div | 0, oktt_SimpleFrameBuffer_getHeight($sceneColorBuffer) / $div | 0, 0, 0, 0, 0, 0, 124, null);
        var$12 = var$14;
    }
    var$16 = $rt_createArray(oktt_SimpleFrameBuffer, $iterations);
    var$17 = 0;
    while (var$17 < $iterations) {
        var$13 = var$16.data;
        var$14 = var$17 + 1 | 0;
        $div = jl_Math_pow(2.0, var$14) | 0;
        var$13[var$17] = oktt_SimpleFrameBuffer__init_2(oktt_SimpleFrameBuffer_getWidth($sceneColorBuffer) / $div | 0, oktt_SimpleFrameBuffer_getHeight($sceneColorBuffer) / $div | 0, 0, 0, 0, 0, 0, 124, null);
        var$17 = var$14;
    }
    var$18 = $rt_createArray(oktm_Vec2, $iterations);
    var$12 = 0;
    while (var$12 < $iterations) {
        var$19 = var$18.data;
        var$13 = var$11.data;
        var$19[var$12] = oktm_Vec2__init_(1.0 / oktt_SimpleFrameBuffer_getWidth(var$13[var$12]), 1.0 / oktt_SimpleFrameBuffer_getHeight(var$13[var$12]));
        var$12 = var$12 + 1 | 0;
    }
    $screenQuad = oktm_ScreenQuad$TextureRenderer__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    $box = oktmb_MeshBuilder_build$default(oktmb_BoxMeshBuilder__init_(0.0, 0.0, 0.0, 7, null), null, 1, null);
    $control = oktgc_OrbitCameraControl__init_0(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, null, 0, null, 8191, null);
    oktgc_OrbitCameraControl_listenToMouse($control);
    var$23 = oktgc_OrbitCameraControl_getHelp($control);
    jl_System_out().$println0(var$23);
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_setFar(oktgc_ActiveCamera_INSTANCE, 1000.0);
    $debugMaps = ju_ArrayList__init_();
    var$23 = $debugMaps;
    kc_CollectionsKt__MutableCollectionsKt_addAll(var$23, var$11);
    kc_CollectionsKt__MutableCollectionsKt_addAll(var$23, var$16);
    $mapIndex = kji_Ref$IntRef__init_();
    $mapIndex.$element = 0;
    okti_MOUSE_$callClinit();
    okti_MOUSE_addListener(okti_MOUSE_INSTANCE, oktts_BloomBaseTest$testMain$1__init_($mapIndex, $debugMaps));
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktts_BloomBaseTest$testMain$2__init_($control, $sceneColorBuffer, $cubeShader, $box, $blurDownShader, var$11, $screenQuad, var$18, $blurUpShader, $iterations, var$16), 1, null);
}
function oktts_BloomBaseTest__init_0($this) {
    jl_Object__init_0($this);
}
function jlr_AnnotatedElement() {
}
function jl_Class() {
    var a = this; jl_Object.call(a);
    a.$name37 = null;
    a.$platformClass = null;
}
function jl_Class__init_(var_0) {
    var var_1 = new jl_Class();
    jl_Class__init_0(var_1, var_0);
    return var_1;
}
function jl_Class__init_0($this, $platformClass) {
    var var$2;
    jl_Object__init_0($this);
    $this.$platformClass = $platformClass;
    var$2 = $this;
    $platformClass.classObject = var$2;
}
function jl_Class_getClass($cls) {
    var $result;
    if ($cls === null)
        return null;
    $result = $cls.classObject;
    if ($result === null)
        $result = jl_Class__init_($cls);
    return $result;
}
function jl_Class_getPlatformClass($this) {
    return $this.$platformClass;
}
function jl_Class_isInstance($this, $obj) {
    return otp_Platform_isInstance($obj, $this.$platformClass);
}
function jl_Class_getName($this) {
    if ($this.$name37 === null)
        $this.$name37 = otp_Platform_getName($this.$platformClass);
    return $this.$name37;
}
function jl_Class_isPrimitive($this) {
    return otp_Platform_isPrimitive($this.$platformClass);
}
function jl_Class_getComponentType($this) {
    return jl_Class_getClass(otp_Platform_getArrayItem($this.$platformClass));
}
function jl_Class_desiredAssertionStatus($this) {
    return 1;
}
function jl_Class_getSuperclass($this) {
    return jl_Class_getClass($this.$platformClass.$meta.superclass);
}
function jl_Class_getClassLoader($this) {
    return jl_ClassLoader_getSystemClassLoader();
}
function jl_Class_forName($name) {
    var $cls;
    $cls = otp_Platform_lookupClass($name.$toString());
    if ($cls !== null)
        return jl_Class_getClass($cls);
    $rt_throw(jl_ClassNotFoundException__init_());
}
function jl_Class_newInstance($this) {
    var $instance;
    $instance = otp_Platform_newInstance($this.$platformClass);
    if ($instance !== null)
        return $instance;
    $rt_throw(jl_InstantiationException__init_());
}
function okttsg_CascadedShadowMappingTest$testMain$1() {
    kji_Lambda.call(this);
}
var okttsg_CascadedShadowMappingTest$testMain$1_INSTANCE = null;
function okttsg_CascadedShadowMappingTest$testMain$1_$callClinit() {
    okttsg_CascadedShadowMappingTest$testMain$1_$callClinit = $rt_eraseClinit(okttsg_CascadedShadowMappingTest$testMain$1);
    okttsg_CascadedShadowMappingTest$testMain$1__clinit_();
}
function okttsg_CascadedShadowMappingTest$testMain$1__init_() {
    var var_0 = new okttsg_CascadedShadowMappingTest$testMain$1();
    okttsg_CascadedShadowMappingTest$testMain$1__init_0(var_0);
    return var_0;
}
function okttsg_CascadedShadowMappingTest$testMain$1_invoke(var$0, var$1) {
    okttsg_CascadedShadowMappingTest$testMain$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttsg_CascadedShadowMappingTest$testMain$1_invoke0($this, $model) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, $vertexNode, $cameraDataNode, $principledBSDF, var$12, var$13, $screenQuad, $control;
    kji_Intrinsics_checkParameterIsNotNull($model, $rt_s(5));
    oktt_GLTFModel_setRotate($model, 0);
    oktgg_GLTFConf_setSetupDepthRendering(oktt_GLTFModel_getConf($model), 1);
    oktgg_GLTFConf_setReceiveShadows(oktt_GLTFModel_getConf($model), 1);
    oktgl_DirectionalLight_setShadowEnabled(oktt_GLTFModel_getLight($model), 1);
    oktgl_DirectionalLight_setupShadowMaps(oktt_GLTFModel_getLight($model), 1024, 1024);
    oktgl_DirectionalLight_setLightPositionOffset(oktt_GLTFModel_getLight($model), 50.0);
    oktgl_DirectionalLight_getColor(oktt_GLTFModel_getLight($model)).$set44(0.10000000149011612, 0.10000000149011612, 1.0);
    var$2 = oktt_GLTFModel_getScene($model);
    if (var$2 !== null) {
        var$3 = var$2.$getObjects();
        if (var$3 !== null) {
            var$4 = oktg_Object3D__init_(null, null, null, 0, null, null, null, 127, null);
            oktgn_ITransformNode$DefaultImpls_updateTransform$default(var$4, 0, 1, null);
            var$5 = var$4.$getMeshes0();
            var$6 = oktmb_PlaneMeshBuilder__init_(100.0, 100.0, 0, 0, null, null, 60, null);
            oktmb_MeshBuilder_setPositionName(var$6, $rt_s(543));
            var$7 = oktmb_MeshBuilder_getMaterial(var$6);
            var$8 = okts_Shader__init_2(null, null, null, 0, null, 0, null, 127, null);
            $vertexNode = var$8.$addNode0(oktsg_VertexNode__init_(0, 0, 0, 7, null));
            oktsg_VertexNode_setAPositionName($vertexNode, $rt_s(543));
            $cameraDataNode = var$8.$addNode0(oktsg_CameraDataNode__init_0(oktsg_VertexNode_getPosition($vertexNode)));
            $principledBSDF = var$8.$addNode0(oktsg_PrincipledBSDF__init_());
            oktsg_GLSL_$callClinit();
            oktsg_PrincipledBSDF_setBaseColor($principledBSDF, oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE));
            oktsg_PrincipledBSDF_setNormal($principledBSDF, oktsg_GLSLVec3Inline__init_1(0.0, 1.0, 0.0, null, 8, null));
            oktsg_PrincipledBSDF_setOcclusion($principledBSDF, oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE));
            oktsg_PrincipledBSDF_setRoughness($principledBSDF, oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE));
            oktsg_PrincipledBSDF_setMetallic($principledBSDF, oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE));
            oktsg_PrincipledBSDF_setNormalizedViewVector($principledBSDF, oktsg_CameraDataNode_getNormalizedViewVector($cameraDataNode));
            oktsg_PrincipledBSDF_setWorldPosition($principledBSDF, oktsg_VertexNode_getPosition($vertexNode));
            oktsg_PrincipledBSDF_setClipSpacePosition($principledBSDF, oktsg_CameraDataNode_getClipSpacePosition($cameraDataNode));
            oktsg_PrincipledBSDF_setReceiveShadows($principledBSDF, 1);
            var$8.$addNode0(oktsg_OutputNode__init_(oktsg_CameraDataNode_getClipSpacePosition($cameraDataNode), oktsg_PrincipledBSDF_getResult($principledBSDF)));
            var$8.$build0();
            var$7.$setShader(var$8);
            var$12 = oktmb_MeshBuilder_getMaterial(var$6).$getShaderChannels();
            oktg_ShaderChannel_$callClinit();
            var$13 = jl_Integer_valueOf(oktg_ShaderChannel_getDepth(oktg_ShaderChannel_INSTANCE));
            var$7 = okts_Shader__init_2(null, null, null, 0, null, 0, null, 127, null);
            $vertexNode = var$7.$addNode0(oktsg_VertexNode__init_(0, 0, 0, 7, null));
            $cameraDataNode = var$7.$addNode0(oktsg_CameraDataNode__init_0(oktsg_VertexNode_getPosition($vertexNode)));
            var$7.$addNode0(oktsg_OutputNode__init_(oktsg_CameraDataNode_getClipSpacePosition($cameraDataNode), oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE)));
            var$7.$build0();
            var$12.$put3(var$13, var$7);
            var$2 = null;
            var$12 = null;
            var$2 = oktmb_MeshBuilder_build$default(var$6, var$2, 1, var$12);
            var$5.$add1(var$2);
            var$3.$add1(var$4);
        }
    }
    $screenQuad = oktm_ScreenQuad$TextureRenderer__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    $control = new oktgc_OrbitCameraControl;
    var$12 = null;
    var$2 = oktm_Vec3__init_0(0.0, 1.0, 0.0);
    var$13 = null;
    oktgc_OrbitCameraControl__init_($control, 1.2000000476837158, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, var$12, 0, var$2, 4092, var$13);
    oktgc_OrbitCameraControl_listenToMouse($control);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, oktgc_OrbitCameraControl_getHelp($control), null, 2, null);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttsg_CascadedShadowMappingTest$testMain$1$2__init_($control, $model, $screenQuad), 1, null);
}
function okttsg_CascadedShadowMappingTest$testMain$1__init_0(var$0) {
    okttsg_CascadedShadowMappingTest$testMain$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function okttsg_CascadedShadowMappingTest$testMain$1__clinit_() {
    okttsg_CascadedShadowMappingTest$testMain$1_INSTANCE = okttsg_CascadedShadowMappingTest$testMain$1__init_();
}
function oktgg_GLTFPrimitive$loadIndices$1$1() {
    kji_Lambda.call(this);
    this.$this$0155 = null;
}
function oktgg_GLTFPrimitive$loadIndices$1$1__init_(var_0) {
    var var_1 = new oktgg_GLTFPrimitive$loadIndices$1$1();
    oktgg_GLTFPrimitive$loadIndices$1$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFPrimitive$loadIndices$1$1_invoke(var$0) {
    oktgg_GLTFPrimitive$loadIndices$1$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFPrimitive$loadIndices$1$1_invoke0($this) {
    oktm_IndexBufferObject_initGpuObjects($this.$this$0155.$$out1);
}
function oktgg_GLTFPrimitive$loadIndices$1$1__init_0(var$0, var$1) {
    var$0.$this$0155 = var$1;
    kji_Lambda__init_0(var$0, 0);
}
function jur_CharSet() {
    jur_LeafSet.call(this);
    this.$ch3 = 0;
}
function jur_CharSet__init_(var_0) {
    var var_1 = new jur_CharSet();
    jur_CharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CharSet__init_0($this, $ch) {
    jur_LeafSet__init_2($this);
    $this.$ch3 = $ch;
}
function jur_CharSet_charCount($this) {
    return 1;
}
function jur_CharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch3 != $testString.$charAt($strIndex) ? (-1) : 1;
}
function jur_CharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = $testStr.$indexOf($this.$ch3, $strIndex);
        if (var$6 < 0)
            return (-1);
        var$7 = $this.$next0;
        $strIndex = var$6 + 1 | 0;
        if (var$7.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
}
function jur_CharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = $testStr.$lastIndexOf($this.$ch3, $lastIndex);
            if (var$6 < 0)
                break a;
            if (var$6 < $strIndex)
                break a;
            if ($this.$next0.$matches(var$6 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$6 + (-1) | 0;
        }
        return var$6;
    }
    return (-1);
}
function jur_CharSet_getChar($this) {
    return $this.$ch3;
}
function jur_CharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return $set.$getChar() != $this.$ch3 ? 0 : 1;
    if (!($set instanceof jur_RangeSet)) {
        if ($set instanceof jur_SupplRangeSet)
            return $set.$contains0($this.$ch3);
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    return $set.$accepts(0, jl_Character_toString($this.$ch3)) <= 0 ? 0 : 1;
}
function oooi_CollideTrimeshRay() {
    jl_Object.call(this);
}
function oooi_CollideTrimeshRay__init_() {
    var var_0 = new oooi_CollideTrimeshRay();
    oooi_CollideTrimeshRay__init_0(var_0);
    return var_0;
}
function oooi_CollideTrimeshRay__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollideTrimeshRay_dCollideRTL($this, $g1, $RayGeom, $Flags, $Contacts, $Stride) {
    var $TriMesh, $Length, $ClosestHit, $Origin, $Direction, $contact_data, var$12, var$13, var$14, var$15, $Contact;
    oooi_Common_dIASSERT($Stride != 1 ? 0 : 1);
    oooi_Common_dIASSERT(($Flags & 65535) < 1 ? 0 : 1);
    $TriMesh = $g1;
    $Length = $RayGeom.$getLength();
    $ClosestHit = $RayGeom.$getClosestHit();
    $Origin = oom_DVector3__init_();
    $Direction = oom_DVector3__init_();
    $RayGeom.$get33($Origin, $Direction);
    $contact_data = oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA__init_();
    if (!(!$ClosestHit ? oooi_DxGimpactCollision_gim_trimesh_ray_collisionODE($TriMesh.$m_collision_trimesh, $Origin, $Direction, $Length, $contact_data) : oooi_DxGimpactCollision_gim_trimesh_ray_closest_collisionODE($TriMesh.$m_collision_trimesh, $Origin, $Direction, $Length, $contact_data)))
        return 0;
    if ($TriMesh.$RayCallback !== null) {
        var$12 = $TriMesh.$RayCallback;
        var$13 = $contact_data.$getFaceID();
        var$14 = $contact_data.$getU();
        var$15 = $contact_data.$getV();
        if (!var$12.$call1($TriMesh, $RayGeom, var$13, var$14, var$15))
            return 0;
    }
    $Contact = ooo_DContactGeomBuffer_get0($Contacts);
    $Contact.$pos0.$set14($contact_data.$getPoint().$f);
    $Contact.$normal.$set14($contact_data.$getNormal1().$f);
    $Contact.$depth = $contact_data.$getTParam();
    $Contact.$g1 = $TriMesh;
    $Contact.$g2 = $RayGeom;
    $Contact.$side1 = $contact_data.$getFaceID();
    $Contact.$side2 = (-1);
    return 1;
}
function oooi_CollideTrimeshRay_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideRTL($o1, $o2, $flags, $contacts, 1);
}
function oktt_TeaVMApp() {
    var a = this; jl_Object.call(a);
    a.$rawDeltaTime = 0.0;
    a.$deltaTime = 0.0;
    a.$fps = 0;
    a.$lastFrameTime = Long_ZERO;
    a.$frameCounterStart = Long_ZERO;
    a.$frames = 0;
    a.$defaultCursor = 0;
    a.$cursor = 0;
    a.$gl6 = null;
    a.$isEnabled = 0;
    a.$anim = null;
    a.$listeners2 = null;
    a.$canvas = null;
}
function oktt_TeaVMApp__init_0(var_0, var_1, var_2, var_3) {
    var var_4 = new oktt_TeaVMApp();
    oktt_TeaVMApp__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktt_TeaVMApp__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktt_TeaVMApp();
    oktt_TeaVMApp__init_2(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktt_TeaVMApp__init_3() {
    var var_0 = new oktt_TeaVMApp();
    oktt_TeaVMApp__init_4(var_0);
    return var_0;
}
function oktt_TeaVMApp_getPlatformType($this) {
    return 2;
}
function oktt_TeaVMApp_getWidth($this) {
    return $this.$canvas.clientWidth;
}
function oktt_TeaVMApp_getHeight($this) {
    return $this.$canvas.clientHeight;
}
function oktt_TeaVMApp_setRawDeltaTime($this, $_set___) {
    $this.$rawDeltaTime = $_set___;
}
function oktt_TeaVMApp_getDeltaTime($this) {
    return $this.$deltaTime;
}
function oktt_TeaVMApp_setDeltaTime($this, $_set___) {
    $this.$deltaTime = $_set___;
}
function oktt_TeaVMApp_setFps($this, $_set___) {
    $this.$fps = $_set___;
}
function oktt_TeaVMApp_getDefaultCursor($this) {
    return $this.$defaultCursor;
}
function oktt_TeaVMApp_isEnabled($this) {
    return $this.$isEnabled;
}
function oktt_TeaVMApp_getAnim($this) {
    return $this.$anim;
}
function oktt_TeaVMApp_getListeners($this) {
    return $this.$listeners2;
}
function oktt_TeaVMApp_messageBox($this, $title, $message) {
    kji_Intrinsics_checkParameterIsNotNull($title, $rt_s(465));
    kji_Intrinsics_checkParameterIsNotNull($message, $rt_s(466));
    alert($rt_ustr(jl_StringBuilder__init_().$append($title).$append12(10).$append($message).$toString()));
}
function oktt_TeaVMApp_startLoop($this) {
    var var$1;
    var$1 = $this.$anim;
    requestAnimationFrame(otji_JS_function(otji_JS_functionAsObject(var$1 === null ? var$1 : oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0__init_(var$1), "onAnimationFrame"), "onAnimationFrame"));
}
function oktt_TeaVMApp_getCanvas($this) {
    return $this.$canvas;
}
function oktt_TeaVMApp__init_1($this, $canvas, $canvasWidth, $canvasHeight, $webglVersion) {
    var var$5, var$6, $setViewport, var$8, var$9, $ver, $canvasContext, $webglContext;
    kji_Intrinsics_checkParameterIsNotNull($canvas, $rt_s(470));
    kji_Intrinsics_checkParameterIsNotNull($webglVersion, $rt_s(1184));
    jl_Object__init_0($this);
    $this.$canvas = $canvas;
    $this.$lastFrameTime = Long_fromInt(-1);
    $this.$cursor = oktt_TeaVMApp_getDefaultCursor($this);
    $this.$isEnabled = 1;
    oktt_TeaVMApp$anim$1_$callClinit();
    $this.$anim = oktt_TeaVMApp$anim$1_INSTANCE;
    $this.$listeners2 = ju_ArrayList__init_();
    okt_APP_$callClinit();
    okt_APP_setApi(okt_APP_INSTANCE, $this);
    var$5 = $this.$canvas;
    var$6 = otji_JS_functionAsObject(oktt_TeaVMApp$1__init_($this), "handleEvent");
    var$5.addEventListener("resize", otji_JS_function(var$6, "handleEvent"));
    $this.$anim = oktt_TeaVMApp$2__init_($this);
    $setViewport = 0;
    if (!($canvasWidth == $this.$canvas.width && $this.$canvas.clientHeight == $this.$canvas.height)) {
        var$8 = $this.$canvas;
        var$9 = $canvasWidth;
        var$8.width = var$9;
        $setViewport = 1;
    }
    if ($canvasHeight != $this.$canvas.height) {
        var$8 = $this.$canvas;
        var$9 = $canvasHeight;
        var$8.height = var$9;
        $setViewport = 1;
    }
    $ver = !kji_Intrinsics_areEqual($webglVersion, $rt_s(1185)) ? 1 : 2;
    $canvasContext = $this.$canvas.getContext($rt_ustr($webglVersion));
    if ($canvasContext !== null)
        var$9 = $canvasContext;
    else {
        $webglContext = $this.$canvas.getContext("webgl");
        if ($webglContext === null) {
            okt_APP_messageBox(okt_APP_INSTANCE, $rt_s(335), $rt_s(1186));
            $rt_throw(jl_IllegalStateException__init_($rt_s(1186)));
        }
        $ver = 1;
        oktu_LOG_$callClinit();
        oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, $rt_s(1187), null, 2, null);
        var$9 = $webglContext;
    }
    $this.$gl6 = var$9;
    oktg_GL_$callClinit();
    oktg_GL_setApi(oktg_GL_INSTANCE, oktt_TvmGL__init_1($this.$gl6, $ver, 0, $ver != 2 ? 100 : 300, 4, null));
    okti_IMG_$callClinit();
    var$9 = okti_IMG_INSTANCE;
    oktt_TvmIMG_$callClinit();
    okti_IMG_setApi(var$9, oktt_TvmIMG_INSTANCE);
    oktd_DATA_$callClinit();
    oktd_DATA_setApi(oktd_DATA_INSTANCE, oktt_TvmDATA__init_());
    oktf_FS_$callClinit();
    oktf_FS_setApi(oktf_FS_INSTANCE, oktt_TvmFS__init_());
    oktj_JSON_$callClinit();
    oktj_JSON_setApi(oktj_JSON_INSTANCE, oktjj_JsonSimple3Api__init_());
    okti_MOUSE_$callClinit();
    okti_MOUSE_setApi(okti_MOUSE_INSTANCE, oktt_TvmMouse__init_($this.$canvas));
    okti_KB_$callClinit();
    okti_KB_setApi(okti_KB_INSTANCE, oktt_TvmKB__init_());
    okta_AL_$callClinit();
    okta_AL_setApi(okta_AL_INSTANCE, oktt_TvmAL__init_());
    if ($setViewport)
        oktg_GL_glViewport(oktg_GL_INSTANCE, 0, 0, oktg_GL_getMainFrameBufferWidth(oktg_GL_INSTANCE), oktg_GL_getMainFrameBufferHeight(oktg_GL_INSTANCE));
    oktg_GL_initGL(oktg_GL_INSTANCE);
    oktg_GL_doSingleCalls(oktg_GL_INSTANCE);
    oktt_TeaVMApp_startLoop($this);
}
function oktt_TeaVMApp__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$5 & 1) {
        var$1 = window;
        kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(380));
        var$1 = var$1.document.getElementById("canvas");
        if (var$1 === null)
            $rt_throw(k_TypeCastException__init_($rt_s(662)));
        var$1 = var$1;
    }
    if (var$5 & 2)
        var$2 = var$1.clientWidth;
    if (var$5 & 4)
        var$3 = var$1.clientHeight;
    if (var$5 & 8)
        var$4 = $rt_s(1185);
    oktt_TeaVMApp__init_1(var$0, var$1, var$2, var$3, var$4);
}
function oktt_TeaVMApp__init_4(var$0) {
    oktt_TeaVMApp__init_2(var$0, null, 0, 0, null, 15, null);
}
function oktt_TeaVMApp_access$getLastFrameTime$p($$this) {
    return $$this.$lastFrameTime;
}
function oktt_TeaVMApp_access$setLastFrameTime$p($$this, $_set___) {
    $$this.$lastFrameTime = $_set___;
}
function oktt_TeaVMApp_access$getFrameCounterStart$p($$this) {
    return $$this.$frameCounterStart;
}
function oktt_TeaVMApp_access$setFrameCounterStart$p($$this, $_set___) {
    $$this.$frameCounterStart = $_set___;
}
function oktt_TeaVMApp_access$getFrames$p($$this) {
    return $$this.$frames;
}
function oktt_TeaVMApp_access$setFrames$p($$this, $_set___) {
    $$this.$frames = $_set___;
}
function oktsg_NormalMapNode$Companion() {
    jl_Object.call(this);
}
function oktsg_NormalMapNode$Companion__init_() {
    var var_0 = new oktsg_NormalMapNode$Companion();
    oktsg_NormalMapNode$Companion__init_0(var_0);
    return var_0;
}
function oktsg_NormalMapNode$Companion__init_1(var_0) {
    var var_1 = new oktsg_NormalMapNode$Companion();
    oktsg_NormalMapNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_NormalMapNode$Companion_normalCode($this, $outTangentName, $outBiNormalName, $outNormalName) {
    var var$4;
    kji_Intrinsics_checkParameterIsNotNull($outTangentName, $rt_s(1188));
    kji_Intrinsics_checkParameterIsNotNull($outBiNormalName, $rt_s(1189));
    kji_Intrinsics_checkParameterIsNotNull($outNormalName, $rt_s(1190));
    var$4 = jl_StringBuilder__init_().$append($rt_s(1191));
    var$4 = var$4.$append($outTangentName).$append($rt_s(1192));
    var$4 = var$4.$append($outBiNormalName).$append($rt_s(1192));
    var$4 = var$4.$append($outNormalName).$append($rt_s(1193));
    var$4 = var$4.$append($outTangentName).$append($rt_s(1194));
    var$4 = var$4.$append($outBiNormalName).$append($rt_s(1195));
    return var$4.$append($outNormalName).$append($rt_s(1196)).$toString();
}
function oktsg_NormalMapNode$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_NormalMapNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_NormalMapNode$Companion__init_0($this);
}
function oktsg_SkyboxVertexNode$Companion() {
    jl_Object.call(this);
}
function oktsg_SkyboxVertexNode$Companion__init_() {
    var var_0 = new oktsg_SkyboxVertexNode$Companion();
    oktsg_SkyboxVertexNode$Companion__init_0(var_0);
    return var_0;
}
function oktsg_SkyboxVertexNode$Companion__init_1(var_0) {
    var var_1 = new oktsg_SkyboxVertexNode$Companion();
    oktsg_SkyboxVertexNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_SkyboxVertexNode$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_SkyboxVertexNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_SkyboxVertexNode$Companion__init_0($this);
}
function otjb_AnimationFrameCallback() {
}
function oooig_GimAABBSet$GIM_PAIR() {
    var a = this; jl_Object.call(a);
    a.$m_index1 = 0;
    a.$m_index2 = 0;
}
function oooig_GimAABBSet$GIM_PAIR__init_() {
    var var_0 = new oooig_GimAABBSet$GIM_PAIR();
    oooig_GimAABBSet$GIM_PAIR__init_0(var_0);
    return var_0;
}
function oooig_GimAABBSet$GIM_PAIR__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxWorld() {
    var a = this; oooi_DBase.call(a);
    a.$taskExecutor = null;
    a.$firstbody = null;
    a.$firstjoint0 = null;
    a.$nb = 0;
    a.$nj = 0;
    a.$gravity = null;
    a.$global_erp = 0.0;
    a.$global_cfm = 0.0;
    a.$adis = null;
    a.$body_flags = 0;
    a.$islands_max_threads = 0;
    a.$wmem = null;
    a.$qs = null;
    a.$contactp = null;
    a.$dampingp = null;
    a.$max_angular_speed = 0.0;
    a.$userdata0 = null;
}
function oooi_DxWorld__init_() {
    var var_0 = new oooi_DxWorld();
    oooi_DxWorld__init_0(var_0);
    return var_0;
}
function oooi_DxWorld__init_0($this) {
    oooi_DBase__init_0($this);
    $this.$taskExecutor = ooott_SameThreadTaskExecutor__init_();
    $this.$firstbody = oooicj_Ref__init_();
    $this.$firstjoint0 = oooicj_Ref__init_();
    oooicj_Ref_set($this.$firstbody, null);
    oooicj_Ref_set($this.$firstjoint0, null);
    $this.$nb = 0;
    $this.$nj = 0;
    $this.$global_erp = 0.2;
    $this.$global_cfm = 1.0E-10;
    $this.$adis = null;
    $this.$body_flags = 0;
    $this.$islands_max_threads = 0;
    $this.$wmem = null;
    $this.$qs = null;
    $this.$contactp = null;
    $this.$dampingp = null;
    $this.$max_angular_speed = Infinity;
    $this.$userdata0 = jl_Integer_valueOf(0);
    $this.$gravity = oom_DVector3__init_();
    $this.$adis = oooi_Objects_H$dxAutoDisable__init_();
    $this.$qs = oooi_Objects_H$dxQuickStepParameters__init_();
    $this.$contactp = oooi_Objects_H$dxContactParameters__init_();
    $this.$dampingp = oooi_Objects_H$dxDampingParameters__init_();
}
function oooi_DxWorld_dWorldCreate() {
    var $w;
    $w = oooi_DxWorld__init_();
    return $w;
}
function oooi_DxWorld_dWorldSetGravity($this, $x, $y, $z) {
    oom_DVector3_set0($this.$gravity, $x, $y, $z);
}
function oooi_DxWorld_dWorldSetERP($this, $erp) {
    $this.$global_erp = $erp;
}
function oooi_DxWorld_dWorldGetERP($this) {
    return $this.$global_erp;
}
function oooi_DxWorld_dWorldSetCFM($this, $cfm) {
    $this.$global_cfm = $cfm;
}
function oooi_DxWorld_dWorldGetCFM($this) {
    return $this.$global_cfm;
}
function oooi_DxWorld_dWorldQuickStep($this, $stepsize) {
    var $result, $islandsinfo, var$4;
    oooi_Common_dUASSERT($stepsize <= 0.0 ? 0 : 1, $rt_s(1197));
    $result = 0;
    $islandsinfo = oooip_DxWorldProcessIslandsInfo__init_();
    oooi_DxQuickStep_$callClinit();
    if (oooip_DxWorldProcessContext_dxReallocateWorldProcessContext($this, $islandsinfo, $stepsize, oooi_DxQuickStep_INSTANCE)) {
        var$4 = oooi_DxQuickStep_INSTANCE;
        oooi_Step_$callClinit();
        if ($this.$dxProcessIslands($islandsinfo, $stepsize, var$4, oooi_Step_INSTANCE))
            $result = 1;
    }
    return $result;
}
function oooi_DxWorld_dWorldGetAutoDisableAverageSamplesCount($this) {
    return $this.$adis.$average_samples;
}
function oooi_DxWorld_dWorldGetAutoDisableSteps($this) {
    return $this.$adis.$idle_steps;
}
function oooi_DxWorld_dWorldGetAutoDisableTime($this) {
    return $this.$adis.$idle_time;
}
function oooi_DxWorld_EstimateIslandProcessingMemoryRequirements($this) {
    return (-1);
}
function oooi_DxWorld_dxProcessIslands($this, $islandsInfo, $stepSize, $stepper, $maxCallCountEstimator) {
    var $callContext, $context, $summaryFault, $activeThreadCount, $islandsAllowedThreadCount, $group, $i, $task;
    $callContext = oooip_DxIslandsProcessingCallContext__init_($this, $islandsInfo, $stepSize, $stepper);
    oooi_Common_dIASSERT($this.$wmem === null ? 0 : 1);
    $context = $this.$wmem.$GetWorldProcessingContext();
    oooi_Common_dIASSERT($context === null ? 0 : 1);
    $summaryFault = oooicj_RefInt__init_();
    $activeThreadCount = oooicj_RefInt__init_();
    $islandsAllowedThreadCount = $this.$GetThreadingIslandsMaxThreadsCount($activeThreadCount);
    oooi_Common_dIASSERT(!$islandsAllowedThreadCount ? 0 : 1);
    oooi_Common_dIASSERT(oooicj_RefInt_get($activeThreadCount) < $islandsAllowedThreadCount ? 0 : 1);
    $callContext.$SetStepperAllowedThreads(1);
    $group = $this.$taskExecutor.$group($rt_s(1198), oooi_DxWorld$1__init_($this));
    $i = 0;
    while ($i < $islandsAllowedThreadCount) {
        $task = $group.$subtask($rt_s(1199), oooi_DxWorld$2__init_($this, $callContext, $group));
        $task.$submit0();
        $i = $i + 1 | 0;
    }
    $group.$submit0();
    $group.$awaitCompletion();
    return oooicj_RefInt_get($summaryFault) ? 0 : 1;
}
function oooi_DxWorld_dInternalHandleAutoDisabling($this, $stepsize) {
    var $bb, $idle, $average_lvel, $average_avel, $i, $r1, $av_lspeed, $av_aspeed;
    $bb = oooicj_Ref_get($this.$firstbody);
    while ($bb !== null) {
        if (oooicj_Ref_get($bb.$firstjoint) !== null && ($bb.$flags2 & 20) == 16 && $bb.$adis0.$average_samples) {
            if ($bb.$average_counter >= $bb.$adis0.$average_samples) {
                oooi_Common_dUASSERT($bb.$average_counter >= $bb.$adis0.$average_samples ? 0 : 1, $rt_s(1200));
                $bb.$average_ready = 0;
                $bb.$average_counter = 0;
            }
            oom_DVector3_set($bb.$average_lvel_buffer.data[$bb.$average_counter], $bb.$lvel);
            oom_DVector3_set($bb.$average_avel_buffer.data[$bb.$average_counter], $bb.$avel);
            $bb.$average_counter = $bb.$average_counter + 1 | 0;
            if ($bb.$average_counter >= $bb.$adis0.$average_samples) {
                $bb.$average_counter = 0;
                $bb.$average_ready = 1;
            }
            $idle = 0;
            if ($bb.$average_ready) {
                $idle = 1;
                $average_lvel = oom_DVector3__init_();
                $average_avel = oom_DVector3__init_();
                oom_DVector3_set($average_lvel, $bb.$average_lvel_buffer.data[0]);
                oom_DVector3_set($average_avel, $bb.$average_avel_buffer.data[0]);
                if ($bb.$adis0.$average_samples > 1) {
                    $i = 1;
                    while ($i < $bb.$adis0.$average_samples) {
                        oom_DVector3_add($average_lvel, $bb.$average_lvel_buffer.data[$i]);
                        oom_DVector3_add($average_avel, $bb.$average_avel_buffer.data[$i]);
                        $i = $i + 1 | 0;
                    }
                    $r1 = 1.0 / $bb.$adis0.$average_samples;
                    oom_DVector3_scale($average_lvel, $r1);
                    oom_DVector3_scale($average_avel, $r1);
                }
                $av_lspeed = ooo_OdeMath_dCalcVectorDot3($average_lvel, $average_lvel);
                if ($av_lspeed > $bb.$adis0.$linear_average_threshold)
                    $idle = 0;
                else {
                    $av_aspeed = ooo_OdeMath_dCalcVectorDot3($average_avel, $average_avel);
                    if ($av_aspeed > $bb.$adis0.$angular_average_threshold)
                        $idle = 0;
                }
            }
            if (!$idle) {
                $bb.$adis_stepsleft = $bb.$adis0.$idle_steps;
                $bb.$adis_timeleft = $bb.$adis0.$idle_time;
            } else {
                $bb.$adis_stepsleft = $bb.$adis_stepsleft - 1 | 0;
                $bb.$adis_timeleft = $bb.$adis_timeleft - $stepsize;
            }
            if ($bb.$adis_stepsleft <= 0 && $bb.$adis_timeleft <= 0.0) {
                $bb.$flags2 = $bb.$flags2 | 4;
                oom_DVector3_setZero($bb.$lvel);
                oom_DVector3_setZero($bb.$avel);
            }
        }
        $bb = $bb.$getNext1();
    }
}
function oooi_DxWorld_FinalizeDefaultThreading() {
    return;
}
function oooi_DxWorld_GetThreadingIslandsMaxThreadsCount($this, $out_active_thread_count_ptr) {
    var $active_thread_count;
    $active_thread_count = $this.$taskExecutor.$getThreadCount();
    if ($out_active_thread_count_ptr !== null)
        oooicj_RefInt_set($out_active_thread_count_ptr, $active_thread_count);
    if ($this.$islands_max_threads && $this.$islands_max_threads < $active_thread_count)
        $active_thread_count = $this.$islands_max_threads;
    return $active_thread_count;
}
function oooi_DxWorld_UnsafeGetWorldProcessingContext($this) {
    return $this.$wmem.$GetWorldProcessingContext();
}
function oooi_DxWorld_setGravity($this, $x, $y, $z) {
    $this.$dWorldSetGravity($x, $y, $z);
}
function oooi_DxWorld_setERP($this, $erp) {
    $this.$dWorldSetERP($erp);
}
function oooi_DxWorld_getERP($this) {
    return oooi_DxWorld_dWorldGetERP($this);
}
function oooi_DxWorld_setCFM($this, $cfm) {
    $this.$dWorldSetCFM($cfm);
}
function oooi_DxWorld_getCFM($this) {
    return oooi_DxWorld_dWorldGetCFM($this);
}
function oooi_DxWorld_quickStep($this, $stepsize) {
    return $this.$dWorldQuickStep($stepsize);
}
function oooi_DxWorld_getAutoDisableSteps($this) {
    return oooi_DxWorld_dWorldGetAutoDisableSteps($this);
}
function oooi_DxWorld_getAutoDisableTime($this) {
    return oooi_DxWorld_dWorldGetAutoDisableTime($this);
}
function oooi_DxWorld_getAutoDisableAverageSamplesCount($this) {
    return oooi_DxWorld_dWorldGetAutoDisableAverageSamplesCount($this);
}
function oktgg_GLTF$read$7$1() {
    kji_Lambda.call(this);
    this.$this$0156 = null;
}
function oktgg_GLTF$read$7$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$7$1();
    oktgg_GLTF$read$7$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$7$1_invoke(var$0, var$1) {
    oktgg_GLTF$read$7$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$7$1_invoke0($this, $$this$objs) {
    var $texture;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $texture = oktgg_GLTFTexture__init_1($this.$this$0156.$this$0157, oktgg_GLTFArray_size($this.$this$0156.$this$0157.$getTextures0()), null, null, 12, null);
    $this.$this$0156.$this$0157.$getTextures0().$add1($texture);
    oktgg_GLTFTexture_read($texture, $$this$objs);
}
function oktgg_GLTF$read$7$1__init_0(var$0, var$1) {
    var$0.$this$0156 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function ju_Collections$5() {
    ju_AbstractSet.call(this);
}
function ju_Collections$5__init_() {
    var var_0 = new ju_Collections$5();
    ju_Collections$5__init_0(var_0);
    return var_0;
}
function ju_Collections$5__init_0($this) {
    ju_AbstractSet__init_0($this);
}
function ju_Collections$6() {
    ju_AbstractMap.call(this);
}
function ju_Collections$6__init_() {
    var var_0 = new ju_Collections$6();
    ju_Collections$6__init_0(var_0);
    return var_0;
}
function ju_Collections$6__init_0($this) {
    ju_AbstractMap__init_0($this);
}
function ju_Collections$3() {
    ju_AbstractList.call(this);
}
function ju_Collections$3__init_() {
    var var_0 = new ju_Collections$3();
    ju_Collections$3__init_0(var_0);
    return var_0;
}
function ju_Collections$3__init_0($this) {
    ju_AbstractList__init_0($this);
}
function oktgg_IGLTFMaterial$read$5$1$1() {
    kji_Lambda.call(this);
    this.$this$0158 = null;
}
function oktgg_IGLTFMaterial$read$5$1$1__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$5$1$1();
    oktgg_IGLTFMaterial$read$5$1$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_IGLTFMaterial$read$5$1$1_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$5$1$1_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$5$1$1_invoke0($this, $it) {
    $this.$this$0158.$this$0142.$this$023.$setBaseColorTextureUV($it);
}
function oktgg_IGLTFMaterial$read$5$1$1__init_0(var$0, var$1) {
    var$0.$this$0158 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTF$read$13$1() {
    kji_Lambda.call(this);
    this.$this$0159 = null;
}
function oktgg_GLTF$read$13$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$13$1();
    oktgg_GLTF$read$13$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$13$1_invoke(var$0, var$1) {
    oktgg_GLTF$read$13$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$13$1_invoke0($this, $$this$objs) {
    var $anim;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $anim = oktgg_GLTFAnimation__init_($this.$this$0159.$this$0160, oktgg_GLTFArray_size($this.$this$0159.$this$0160.$getAnimations()), null, 4, null);
    $this.$this$0159.$this$0160.$getAnimations().$add1($anim);
    oktgg_GLTFAnimation_read($anim, $$this$objs);
}
function oktgg_GLTF$read$13$1__init_0(var$0, var$1) {
    var$0.$this$0159 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function ju_Collections$7() {
    ju_AbstractList.call(this);
    this.$val$o = null;
}
function ju_Collections$7__init_(var_0) {
    var var_1 = new ju_Collections$7();
    ju_Collections$7__init_0(var_1, var_0);
    return var_1;
}
function ju_Collections$7__init_0($this, var$1) {
    $this.$val$o = var$1;
    ju_AbstractList__init_0($this);
}
function ju_Collections$7_get($this, $index) {
    if (!$index)
        return $this.$val$o;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function ju_Collections$7_size($this) {
    return 1;
}
function oooig_GimTrimesh() {
    var a = this; jl_Object.call(a);
    a.$m_source_vertex_buffer = null;
    a.$m_tri_index_buffer = null;
    a.$m_mask = 0;
    a.$m_transformed_vertex_buffer = null;
    a.$m_aabbset = null;
    a.$m_planes_cache_buffer = null;
    a.$m_planes_cache_bitset = null;
    a.$m_update_callback = null;
    a.$m_transform = null;
    a.$MULT_MAT_VEC4_KERNEL = null;
}
var oooig_GimTrimesh_$assertionsDisabled = 0;
function oooig_GimTrimesh_$callClinit() {
    oooig_GimTrimesh_$callClinit = $rt_eraseClinit(oooig_GimTrimesh);
    oooig_GimTrimesh__clinit_();
}
function oooig_GimTrimesh__init_() {
    var var_0 = new oooig_GimTrimesh();
    oooig_GimTrimesh__init_0(var_0);
    return var_0;
}
function oooig_GimTrimesh__init_0($this) {
    oooig_GimTrimesh_$callClinit();
    jl_Object__init_0($this);
    $this.$m_transformed_vertex_buffer = oooig_GimBufferArrayFloat__init_();
    $this.$m_transform = oooig_GimGeometry$mat4f__init_();
    $this.$MULT_MAT_VEC4_KERNEL = oooig_GimTrimesh$1__init_($this);
}
function oooig_GimTrimesh_gim_trimesh_trimesh_collision($this, $trimesh2, $contacts) {
    oooig_GimTrimeshTrimeshCol_gim_trimesh_trimesh_collision($this, $trimesh2, $contacts);
}
function oooig_GimTrimesh_gim_trimesh_sphere_collision($this, $center, $radius, $contacts) {
    oooig_GimTrimeshSphereCollision_gim_trimesh_sphere_collision($this, $center, $radius, $contacts);
}
function oooig_GimTrimesh_gim_trimesh_capsule_collision($this, $capsule, $contacts) {
    oooig_GimTrimeshCapsuleCollision_gim_trimesh_capsule_collision($this, $capsule, $contacts);
}
function oooig_GimTrimesh_GIM_CREATE_TRIMESHPLANE_CONTACTS() {
    oooig_GimTrimesh_$callClinit();
    return oooig_GimDynArray_GIM_DYNARRAY_CREATE(64);
}
function oooig_GimTrimesh_gim_trimesh_plane_collision($this, $plane, $contacts) {
    oooig_GimTrimeshTrimeshCol_gim_trimesh_plane_collision($this, $plane, $contacts);
}
function oooig_GimTrimesh_gim_trimesh_ray_collision($this, $origin, $dir, $tmax, $contact) {
    return oooig_GimTrimeshRayCollision_gim_trimesh_ray_collision($this, $origin, $dir, $tmax, $contact);
}
function oooig_GimTrimesh_gim_trimesh_ray_closest_collision($this, $origin, $dir, $tmax, $contact) {
    return oooig_GimTrimeshRayCollision_gim_trimesh_ray_closest_collision($this, $origin, $dir, $tmax, $contact);
}
function oooig_GimTrimesh_gim_trimesh_get_triangle_count($this) {
    return $this.$m_tri_index_buffer.$getElementCount() / 3 | 0;
}
function oooig_GimTrimesh_gim_trimesh_create_from_arrays($vertex_array, $triindex_array, $transformed_reply) {
    var $trimesh, $facecount;
    oooig_GimTrimesh_$callClinit();
    $trimesh = oooig_GimTrimesh__init_();
    if (!oooig_GimTrimesh_$assertionsDisabled && $trimesh === null)
        $rt_throw(jl_AssertionError__init_0());
    if (!oooig_GimTrimesh_$assertionsDisabled && $vertex_array === null)
        $rt_throw(jl_AssertionError__init_0());
    if (!oooig_GimTrimesh_$assertionsDisabled && $triindex_array === null)
        $rt_throw(jl_AssertionError__init_0());
    $trimesh.$m_source_vertex_buffer = $vertex_array;
    $trimesh.$m_tri_index_buffer = $triindex_array;
    $trimesh.$m_mask = 2;
    if (!$transformed_reply)
        $trimesh.$m_transformed_vertex_buffer = $vertex_array.$cloneRefs();
    else {
        $trimesh.$m_mask = $trimesh.$m_mask | 1;
        $trimesh.$m_transformed_vertex_buffer = $vertex_array.$cloneValues();
    }
    $facecount = $trimesh.$gim_trimesh_get_triangle_count();
    $trimesh.$m_aabbset = oooig_GimAABBSet_gim_aabbset_alloc($facecount);
    $trimesh.$m_planes_cache_buffer = oooig_GimDynArray_GIM_DYNARRAY_CREATE_SIZED($facecount);
    $trimesh.$m_planes_cache_bitset = oooig_GimBitSet_GIM_BITSET_CREATE_SIZED($facecount);
    $trimesh.$m_update_callback = null;
    oooig_GimGeometry_IDENTIFY_MATRIX_4X4($trimesh.$m_transform);
    return $trimesh;
}
function oooig_GimTrimesh_gim_trimesh_create_from_data($vertex_array, $copy_vertices, $triindex_array, $copy_indices, $transformed_reply) {
    var $buffer_vertex_array, $buffer_triindex_array, $THIS;
    oooig_GimTrimesh_$callClinit();
    $buffer_vertex_array = !$copy_vertices ? oooig_GimBufferArrayFloat_createRef($vertex_array) : oooig_GimBufferArrayFloat_createCopy($vertex_array);
    $buffer_triindex_array = !$copy_indices ? oooig_GimBufferArrayInt_createRef($triindex_array) : oooig_GimBufferArrayInt_createCopy($triindex_array);
    $THIS = oooig_GimTrimesh_gim_trimesh_create_from_arrays($buffer_vertex_array, $buffer_triindex_array, $transformed_reply);
    $buffer_vertex_array.$GIM_BUFFER_ARRAY_DESTROY();
    $buffer_triindex_array.$GIM_BUFFER_ARRAY_DESTROY();
    return $THIS;
}
function oooig_GimTrimesh_gim_trimesh_locks_work_data($this) {
    return;
}
function oooig_GimTrimesh_gim_trimesh_unlocks_work_data($this) {
    return;
}
function oooig_GimTrimesh_gim_trimesh_has_tranformed_reply($this) {
    return !($this.$m_mask & 1) ? 0 : 1;
}
function oooig_GimTrimesh_gim_trimesh_needs_update($this) {
    return !($this.$m_mask & 2) ? 0 : 1;
}
function oooig_GimTrimesh_gim_trimesh_post_update($this) {
    $this.$m_mask = $this.$m_mask | 2;
}
function oooig_GimTrimesh_gim_trimesh_update_vertices($this) {
    var $psource_vertex_buffer, $ptransformed_vertex_buffer, $transform;
    if (!$this.$gim_trimesh_has_tranformed_reply())
        return;
    $psource_vertex_buffer = $this.$m_source_vertex_buffer;
    $ptransformed_vertex_buffer = $this.$m_transformed_vertex_buffer;
    $transform = oooig_GimGeometry$mat4f__init_();
    oooig_GimGeometry_COPY_MATRIX_4X4($transform, $this.$m_transform);
    oooig_GimBufferArrayFloat_GIM_PROCESS_BUFFER_ARRAY($transform, $psource_vertex_buffer, $ptransformed_vertex_buffer, $this.$MULT_MAT_VEC4_KERNEL);
}
function oooig_GimTrimesh_gim_trimesh_update_aabbset($this) {
    var $transformed_vertices, $triangle_indices, $triangle_count, $i, var$5, var$6, var$7, var$8;
    $transformed_vertices = $this.$m_transformed_vertex_buffer.$GIM_BUFFER_ARRAY_POINTER(0);
    if (!oooig_GimTrimesh_$assertionsDisabled && $transformed_vertices === null)
        $rt_throw(jl_AssertionError__init_0());
    $triangle_indices = $this.$m_tri_index_buffer.$GIM_BUFFER_ARRAY_POINTER0(0);
    if (!oooig_GimTrimesh_$assertionsDisabled && $triangle_indices === null)
        $rt_throw(jl_AssertionError__init_0());
    $triangle_count = $this.$gim_trimesh_get_triangle_count();
    $i = 0;
    while ($i < $triangle_count) {
        var$5 = $this.$m_aabbset.$at1($i);
        var$6 = $transformed_vertices.$at($triangle_indices.$at2(0));
        var$7 = $transformed_vertices.$at($triangle_indices.$at2(1));
        var$8 = $transformed_vertices.$at($triangle_indices.$at2(2));
        oooig_GimGeometry_COMPUTEAABB_FOR_TRIANGLE(var$5, var$6, var$7, var$8);
        $triangle_indices.$inc(3);
        $i = $i + 1 | 0;
    }
    $this.$m_planes_cache_bitset.$GIM_BITSET_CLEAR_ALL();
    $this.$m_aabbset.$gim_aabbset_update();
}
function oooig_GimTrimesh_gim_trimesh_update($this) {
    if (!$this.$gim_trimesh_needs_update())
        return;
    $this.$gim_trimesh_update_vertices();
    $this.$gim_trimesh_locks_work_data();
    $this.$gim_trimesh_update_aabbset();
    $this.$gim_trimesh_unlocks_work_data();
    $this.$m_mask = $this.$m_mask & (-3);
}
function oooig_GimTrimesh_gim_trimesh_set_tranform($this, $transform) {
    var $diff, $originaltrans, $newtrans, $i, var$6;
    $diff = 0.0;
    $originaltrans = $this.$m_transform.$f1;
    $newtrans = $transform.$f1;
    $i = 0;
    while ($i < 16) {
        var$6 = $newtrans.data;
        $diff = $diff + jl_Math_abs0($originaltrans.data[$i] - var$6[$i]);
        $i = $i + 1 | 0;
    }
    if ($diff < 9.999999747378752E-6)
        return;
    oooig_GimGeometry_COPY_MATRIX_4X4($this.$m_transform, $transform);
    $this.$gim_trimesh_post_update();
}
function oooig_GimTrimesh_gim_trimesh_get_triangle_data($this, $triangle_index, $tri_data) {
    var $transformed_vertices, $triangle_indices, $planes, $plane, $bit_eval;
    $transformed_vertices = $this.$m_transformed_vertex_buffer.$GIM_BUFFER_ARRAY_POINTER(0);
    $triangle_indices = $this.$m_tri_index_buffer.$GIM_BUFFER_ARRAY_POINTER0($triangle_index * 3 | 0);
    oooig_GimGeometry_VEC_COPY($tri_data.$m_vertices.data[0], $transformed_vertices.$at($triangle_indices.$at2(0)));
    oooig_GimGeometry_VEC_COPY($tri_data.$m_vertices.data[1], $transformed_vertices.$at($triangle_indices.$at2(1)));
    oooig_GimGeometry_VEC_COPY($tri_data.$m_vertices.data[2], $transformed_vertices.$at($triangle_indices.$at2(2)));
    $planes = $this.$m_planes_cache_buffer.$GIM_DYNARRAY_POINTER_V();
    $planes.$inc($triangle_index);
    if ($planes.$at0() === null)
        $planes.$setAt0(oooig_GimTriCollision$GIM_TRIPLANES_CACHE__init_());
    $plane = $planes.$at0();
    $bit_eval = $this.$m_planes_cache_bitset.$GIM_BITSET_GET($triangle_index);
    if (!$bit_eval) {
        oooig_GimGeometry_TRIANGLE_PLANE($tri_data.$m_vertices.data[0], $tri_data.$m_vertices.data[1], $tri_data.$m_vertices.data[2], $plane.$m_planes0.data[0]);
        oooig_GimGeometry_EDGE_PLANE($tri_data.$m_vertices.data[0], $tri_data.$m_vertices.data[1], $plane.$m_planes0.data[0], $plane.$m_planes0.data[1]);
        oooig_GimGeometry_EDGE_PLANE($tri_data.$m_vertices.data[1], $tri_data.$m_vertices.data[2], $plane.$m_planes0.data[0], $plane.$m_planes0.data[2]);
        oooig_GimGeometry_EDGE_PLANE($tri_data.$m_vertices.data[2], $tri_data.$m_vertices.data[0], $plane.$m_planes0.data[0], $plane.$m_planes0.data[3]);
        $this.$m_planes_cache_bitset.$GIM_BITSET_SET($triangle_index);
    }
    oooig_GimGeometry_VEC_COPY_4($tri_data.$m_planes.$m_planes0.data[0], $plane.$m_planes0.data[0]);
    oooig_GimGeometry_VEC_COPY_4($tri_data.$m_planes.$m_planes0.data[1], $plane.$m_planes0.data[1]);
    oooig_GimGeometry_VEC_COPY_4($tri_data.$m_planes.$m_planes0.data[2], $plane.$m_planes0.data[2]);
    oooig_GimGeometry_VEC_COPY_4($tri_data.$m_planes.$m_planes0.data[3], $plane.$m_planes0.data[3]);
}
function oooig_GimTrimesh_gim_trimesh_get_triangle_vertices($this, $triangle_index, $v1, $v2, $v3) {
    var $transformed_vertices, $triangle_indices;
    $transformed_vertices = $this.$m_transformed_vertex_buffer.$GIM_BUFFER_ARRAY_POINTER(0);
    $triangle_indices = $this.$m_tri_index_buffer.$GIM_BUFFER_ARRAY_POINTER0($triangle_index * 3 | 0);
    oooig_GimGeometry_VEC_COPY($v1, $transformed_vertices.$at($triangle_indices.$at2(0)));
    oooig_GimGeometry_VEC_COPY($v2, $transformed_vertices.$at($triangle_indices.$at2(1)));
    oooig_GimGeometry_VEC_COPY($v3, $transformed_vertices.$at($triangle_indices.$at2(2)));
}
function oooig_GimTrimesh_getAabbSet($this) {
    return $this.$m_aabbset;
}
function oooig_GimTrimesh__clinit_() {
    oooig_GimTrimesh_$assertionsDisabled = $rt_cls(oooig_GimTrimesh).$desiredAssertionStatus() ? 0 : 1;
}
function kji_Ref$ObjectRef() {
    jl_Object.call(this);
    this.$element0 = null;
}
function kji_Ref$ObjectRef__init_() {
    var var_0 = new kji_Ref$ObjectRef();
    kji_Ref$ObjectRef__init_0(var_0);
    return var_0;
}
function kji_Ref$ObjectRef__init_0($this) {
    jl_Object__init_0($this);
}
function okta_ISound() {
}
function oktt_TvmSound() {
    var a = this; jl_Object.call(a);
    a.$pool = null;
    a.$volume = 0.0;
    a.$al = null;
    a.$src = null;
}
function oktt_TvmSound__init_(var_0, var_1) {
    var var_2 = new oktt_TvmSound();
    oktt_TvmSound__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktt_TvmSound_getPool($this) {
    return $this.$pool;
}
function oktt_TvmSound_play($this, $volume, $pitch, $pan, $loop) {
    var $instance, var$6, var$7;
    $instance = oktu_Pool_get($this.$pool);
    var$6 = oktt_SoundInstance_getGain($instance).gain;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$6, $rt_s(1201));
    var$7 = $volume;
    var$6.value = var$7;
    var$6 = oktt_SoundInstance_getPanner($instance).pan;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$6, $rt_s(1202));
    var$7 = $pan;
    var$6.value = var$7;
    var$6 = oktt_SoundInstance_getElement($instance);
    var$7 = !!$loop;
    var$6.loop = var$7;
    oktt_SoundInstance_getElement($instance).play();
    return oktu_Pool_getUsed($this.$pool).$indexOf5($instance);
}
function oktt_TvmSound_getAl($this) {
    return $this.$al;
}
function oktt_TvmSound_getSrc($this) {
    return $this.$src;
}
function oktt_TvmSound__init_0($this, $al, $src) {
    kji_Intrinsics_checkParameterIsNotNull($al, $rt_s(1203));
    kji_Intrinsics_checkParameterIsNotNull($src, $rt_s(1204));
    jl_Object__init_0($this);
    $this.$al = $al;
    $this.$src = $src;
    $this.$pool = oktu_Pool__init_(oktt_TvmSound$pool$1__init_($this));
    $this.$volume = 1.0;
    $this.$pool = oktu_Pool__init_(oktt_TvmSound$1__init_($this));
}
function jn_CharBuffer() {
    jn_Buffer.call(this);
}
function jn_CharBuffer__init_(var_0, var_1, var_2) {
    var var_3 = new jn_CharBuffer();
    jn_CharBuffer__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jn_CharBuffer__init_0($this, $capacity, $position, $limit) {
    jn_Buffer__init_0($this, $capacity);
    $this.$position4 = $position;
    $this.$limit0 = $limit;
}
function jn_CharBuffer_allocate($capacity) {
    if ($capacity >= 0)
        return jn_CharBufferOverArray__init_($capacity);
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1205)).$append1($capacity).$toString()));
}
function jn_CharBuffer_wrap($array, $offset, $length) {
    return jn_CharBufferOverArray__init_0(0, $array.data.length, $array, $offset, $offset + $length | 0, 0);
}
function jn_CharBuffer_wrap0($array) {
    return jn_CharBuffer_wrap($array, 0, $array.data.length);
}
function jn_CharBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(1206)).$append1(var$6).$append($rt_s(557)).$append1(var$5).$toString()));
            if (jn_Buffer_remaining($this) < $length)
                $rt_throw(jn_BufferUnderflowException__init_());
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(558)).$append1($length).$append($rt_s(559)).$toString()));
            $pos = $this.$position4;
            $i = 0;
            while ($i < $length) {
                var$6 = $offset + 1 | 0;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = $this.$getChar0($pos);
                $i = $i + 1 | 0;
                $offset = var$6;
                $pos = var$5;
            }
            $this.$position4 = $this.$position4 + $length | 0;
            return $this;
        }
    }
    var$4 = $dst.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(560)).$append1($offset).$append($rt_s(555)).$append1(var$4.length).$append($rt_s(561)).$toString()));
}
function jn_CharBuffer_get0($this, $dst) {
    return $this.$get14($dst, 0, $dst.data.length);
}
function jn_CharBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, var$6, $pos, $i;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(1207)).$append1(var$6).$append($rt_s(557)).$append1(var$5).$toString()));
            if ($length < 0)
                $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(558)).$append1($length).$append($rt_s(559)).$toString()));
            $pos = $this.$position4;
            $i = 0;
            while ($i < $length) {
                var$6 = $pos + 1 | 0;
                var$5 = $offset + 1 | 0;
                $this.$putChar($pos, var$4[$offset]);
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$5;
            }
            $this.$position4 = $this.$position4 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(560)).$append1($offset).$append($rt_s(555)).$append1(var$4.length).$append($rt_s(561)).$toString()));
}
function jn_CharBuffer_put0($this, $src, $start, $end) {
    var $sz, var$5, var$6, $pos, $pos_0, var$9;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    $sz = $end - $start | 0;
    if (jn_Buffer_remaining($this) < $sz)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($start >= 0 && $start < $src.$length()) {
        if ($end > $src.$length()) {
            var$5 = new jl_IndexOutOfBoundsException;
            var$6 = jl_StringBuilder__init_().$append($rt_s(1207)).$append1($end).$append($rt_s(1208));
            jl_IndexOutOfBoundsException__init_2(var$5, var$6.$append1($src.$length()).$toString());
            $rt_throw(var$5);
        }
        if ($start > $end)
            $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(1209)).$append1($start).$append($rt_s(1210)).$append1($end).$toString()));
        $pos = $this.$position4;
        while ($start < $end) {
            $pos_0 = $pos + 1 | 0;
            var$9 = $start + 1 | 0;
            $this.$putChar($pos, $src.$charAt($start));
            $pos = $pos_0;
            $start = var$9;
        }
        $this.$position4 = $this.$position4 + $sz | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(1209)).$append1($start).$append($rt_s(555)).$append1($src.$length()).$append($rt_s(561)).$toString()));
}
function jn_CharBuffer_put1($this, $src) {
    return $this.$put15($src, 0, $src.$length());
}
function jn_CharBuffer_hasArray($this) {
    return $this.$isArrayPresent();
}
function jn_CharBuffer_array($this) {
    return $this.$getArray0();
}
function jn_CharBuffer_length($this) {
    return jn_Buffer_remaining($this);
}
function jn_CharBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_CharBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_CharBufferImpl() {
    jn_CharBuffer.call(this);
}
function jn_CharBufferImpl__init_(var_0, var_1, var_2) {
    var var_3 = new jn_CharBufferImpl();
    jn_CharBufferImpl__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jn_CharBufferImpl__init_0($this, $capacity, $position, $limit) {
    jn_CharBuffer__init_0($this, $capacity, $position, $limit);
}
function jn_CharBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_CharBufferOverArray() {
    var a = this; jn_CharBufferImpl.call(a);
    a.$readOnly0 = 0;
    a.$start3 = 0;
    a.$array5 = null;
}
function jn_CharBufferOverArray__init_(var_0) {
    var var_1 = new jn_CharBufferOverArray();
    jn_CharBufferOverArray__init_1(var_1, var_0);
    return var_1;
}
function jn_CharBufferOverArray__init_0(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_CharBufferOverArray();
    jn_CharBufferOverArray__init_2(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_CharBufferOverArray__init_1($this, $capacity) {
    jn_CharBufferOverArray__init_2($this, 0, $capacity, $rt_createCharArray($capacity), 0, $capacity, 0);
}
function jn_CharBufferOverArray__init_2($this, $start, $capacity, $array, $position, $limit, $readOnly) {
    jn_CharBufferImpl__init_0($this, $capacity, $position, $limit);
    $this.$start3 = $start;
    $this.$readOnly0 = $readOnly;
    $this.$array5 = $array;
}
function jn_CharBufferOverArray_getChar($this, $index) {
    return $this.$array5.data[$index + $this.$start3 | 0];
}
function jn_CharBufferOverArray_putChar($this, $index, $value) {
    $this.$array5.data[$index + $this.$start3 | 0] = $value;
}
function jn_CharBufferOverArray_isArrayPresent($this) {
    return 1;
}
function jn_CharBufferOverArray_getArray($this) {
    return $this.$array5;
}
function jn_CharBufferOverArray_readOnly($this) {
    return $this.$readOnly0;
}
function ooo_DContactJoint() {
}
function oooij_DxJointContact() {
    var a = this; oooij_DxJoint.call(a);
    a.$the_m = 0;
    a.$contact = null;
}
function oooij_DxJointContact__init_(var_0) {
    var var_1 = new oooij_DxJointContact();
    oooij_DxJointContact__init_0(var_1, var_0);
    return var_1;
}
function oooij_DxJointContact__init_0($this, $w) {
    oooij_DxJoint__init_0($this, $w);
}
function oooij_DxJointContact_getInfo1($this, $info) {
    var $m, $nub, $roll;
    $m = 1;
    $nub = 0;
    $roll = !($this.$contact.$surface.$mode2 & 1024) ? 0 : 1;
    if ($this.$contact.$surface.$mu < 0.0)
        $this.$contact.$surface.$mu = 0.0;
    if (!($this.$contact.$surface.$mode2 & 1)) {
        if ($this.$contact.$surface.$mu > 0.0)
            $m = 3;
        if ($this.$contact.$surface.$mu === Infinity)
            $nub = 2;
        if ($roll) {
            if ($this.$contact.$surface.$rho >= 0.0)
                $m = $m + 3 | 0;
            else
                $this.$contact.$surface.$rho = 0.0;
            if ($this.$contact.$surface.$rho === Infinity)
                $nub = $nub + 3 | 0;
        }
    } else {
        if ($this.$contact.$surface.$mu2 < 0.0)
            $this.$contact.$surface.$mu2 = 0.0;
        if ($this.$contact.$surface.$mu > 0.0)
            $m = 2;
        if ($this.$contact.$surface.$mu2 > 0.0)
            $m = $m + 1 | 0;
        if ($this.$contact.$surface.$mu === Infinity)
            $nub = 1;
        if ($this.$contact.$surface.$mu2 === Infinity)
            $nub = $nub + 1 | 0;
        if ($roll) {
            if ($this.$contact.$surface.$rho >= 0.0)
                $m = $m + 1 | 0;
            else
                $this.$contact.$surface.$rho = 0.0;
            if ($this.$contact.$surface.$rho2 >= 0.0)
                $m = $m + 1 | 0;
            else
                $this.$contact.$surface.$rho2 = 0.0;
            if ($this.$contact.$surface.$rhoN >= 0.0)
                $m = $m + 1 | 0;
            else
                $this.$contact.$surface.$rhoN = 0.0;
            if ($this.$contact.$surface.$rho === Infinity)
                $nub = $nub + 1 | 0;
            if ($this.$contact.$surface.$rho2 === Infinity)
                $nub = $nub + 1 | 0;
            if ($this.$contact.$surface.$rhoN === Infinity)
                $nub = $nub + 1 | 0;
        }
    }
    $this.$the_m = $m;
    oooij_DxJoint$Info1_setM($info, $m);
    oooij_DxJoint$Info1_setNub($info, $nub);
}
function oooij_DxJointContact_getInfo2($this, $worldFPS, $worldERP, $info) {
    var $rowFriction2, $normal, $c1, $c2, $j1l, $j1a, $b1, $j2l, $j2a, $k, $depth, $motionN, $pushout, $maxvel, var$18, var$19, $outgoing, $newc, $t1, $t2, $j1a_1, $j2a_1, $mu2, $j1a_2, $j2a_2, $rho, var$30, $ax, $approx, var$33, var$34, $ii;
    $rowFriction2 = 2;
    $normal = oom_DVector3__init_();
    if (!$this.$isFlagsReverse())
        oom_DVector3_set($normal, $this.$contact.$geom1.$normal);
    else
        oom_DVector3_scale(oom_DVector3_set($normal, $this.$contact.$geom1.$normal), (-1.0));
    $c1 = oom_DVector3__init_();
    $c2 = oom_DVector3__init_();
    oom_DVector3_eqDiff($c1, $this.$contact.$geom1.$pos0, $this.$node0.data[0].$body0.$posr().$pos());
    $j1l = oom_DVector3__init_();
    $j1a = oom_DVector3__init_();
    $info.$setJ1l(0, $normal);
    oom_DVector3_set($j1l, $normal);
    ooo_OdeMath_dCalcVectorCross3($j1a, $c1, $normal);
    $info.$setJ1a(0, $j1a);
    $b1 = $this.$node0.data[1].$body0;
    $j2l = oom_DVector3__init_();
    $j2a = oom_DVector3__init_();
    if ($b1 !== null) {
        oom_DVector3_eqDiff($c2, $this.$contact.$geom1.$pos0, $b1.$posr().$pos());
        oom_DVector3_scale(oom_DVector3_set($j2l, $normal), (-1.0));
        $info.$setJ2l(0, $j2l);
        ooo_OdeMath_dCalcVectorCross3($j2a, $c2, $normal);
        oom_DVector3_scale($j2a, (-1.0));
        $info.$setJ2a(0, $j2a);
    }
    if ($this.$contact.$surface.$mode2 & 8)
        $worldERP = $this.$contact.$surface.$soft_erp;
    $k = $worldFPS * $worldERP;
    $depth = $this.$contact.$geom1.$depth - $this.$world0.$contactp.$min_depth0;
    if ($depth < 0.0)
        $depth = 0.0;
    if ($this.$contact.$surface.$mode2 & 16)
        $info.$setCfm(0, $this.$contact.$surface.$soft_cfm);
    $motionN = 0.0;
    if ($this.$contact.$surface.$mode2 & 128)
        $motionN = $this.$contact.$surface.$motionN;
    $pushout = $k * $depth + $motionN;
    $info.$setC(0, $pushout);
    $maxvel = $this.$world0.$contactp.$max_vel;
    if ($info.$getC0(0) > $maxvel)
        $info.$setC(0, $maxvel);
    if ($this.$contact.$surface.$mode2 & 4) {
        var$18 = $this.$node0.data[0].$body0.$lvel;
        var$19 = ooo_OdeMath_dCalcVectorDot3($j1l, var$18);
        var$18 = $this.$node0.data[0].$body0.$avel;
        $outgoing = var$19 + ooo_OdeMath_dCalcVectorDot3($j1a, var$18);
        if ($b1 !== null) {
            var$18 = $this.$node0.data[1].$body0.$lvel;
            var$19 = ooo_OdeMath_dCalcVectorDot3($j2l, var$18);
            var$18 = $this.$node0.data[1].$body0.$avel;
            $outgoing = $outgoing + var$19 + ooo_OdeMath_dCalcVectorDot3($j2a, var$18);
        }
        var$19 = $outgoing - $motionN;
        if ($this.$contact.$surface.$bounce_vel >= 0.0 &&  -var$19 > $this.$contact.$surface.$bounce_vel) {
            $newc =  -$this.$contact.$surface.$bounce * var$19 + $motionN;
            if ($newc > $info.$getC0(0))
                $info.$setC(0, $newc);
        }
    }
    $info.$setLo(0, 0.0);
    $info.$setHi(0, Infinity);
    if ($this.$the_m == 1)
        return;
    $t1 = oom_DVector3__init_();
    $t2 = oom_DVector3__init_();
    if (!($this.$contact.$surface.$mode2 & 2))
        ooo_OdeMath_dPlaneSpace($normal, $t1, $t2);
    else {
        oom_DVector3_set($t1, $this.$contact.$fdir1);
        ooo_OdeMath_dCalcVectorCross3($t2, $normal, $t1);
    }
    if ($this.$contact.$surface.$mu <= 0.0)
        $rowFriction2 = 1;
    else {
        $info.$setJ1l(1, $t1);
        $j1a_1 = oom_DVector3__init_();
        ooo_OdeMath_dCalcVectorCross3($j1a_1, $c1, $t1);
        $info.$setJ1a(1, $j1a_1);
        if ($this.$node0.data[1].$body0 !== null) {
            $j2a_1 = oom_DVector3__init_();
            $info.$setJ2lNegated(1, $t1);
            ooo_OdeMath_dCalcVectorCross3($j2a_1, $c2, $t1);
            $info.$setJ2aNegated(1, $j2a_1);
        }
        if ($this.$contact.$surface.$mode2 & 32)
            $info.$setC(1, $this.$contact.$surface.$motion1);
        $info.$setLo(1,  -$this.$contact.$surface.$mu);
        $info.$setHi(1, $this.$contact.$surface.$mu);
        if ($this.$contact.$surface.$mode2 & 4096)
            $info.$setFindex(1, 0);
        if ($this.$contact.$surface.$mode2 & 256)
            $info.$setCfm(1, $this.$contact.$surface.$slip1);
    }
    $mu2 = !($this.$contact.$surface.$mode2 & 1) ? $this.$contact.$surface.$mu : $this.$contact.$surface.$mu2;
    if ($mu2 > 0.0) {
        $info.$setJ1l($rowFriction2, $t2);
        $j1a_2 = oom_DVector3__init_();
        ooo_OdeMath_dCalcVectorCross3($j1a_2, $c1, $t2);
        $info.$setJ1a($rowFriction2, $j1a_2);
        if ($this.$node0.data[1].$body0 !== null) {
            $info.$setJ2lNegated($rowFriction2, $t2);
            $j2a_2 = oom_DVector3__init_();
            ooo_OdeMath_dCalcVectorCross3($j2a_2, $c2, $t2);
            $info.$setJ2aNegated($rowFriction2, $j2a_2);
        }
        if ($this.$contact.$surface.$mode2 & 64)
            $info.$setC($rowFriction2, $this.$contact.$surface.$motion2);
        $info.$setLo($rowFriction2,  -$mu2);
        $info.$setHi($rowFriction2, $mu2);
        if ($this.$contact.$surface.$mode2 & 8192)
            $info.$setFindex($rowFriction2, 0);
        if ($this.$contact.$surface.$mode2 & 512)
            $info.$setCfm($rowFriction2, $this.$contact.$surface.$slip2);
        $rowFriction2 = $rowFriction2 + 1 | 0;
    }
    a: {
        if ($this.$contact.$surface.$mode2 & 1024) {
            $rho = $rt_createDoubleArray(3);
            var$30 = $rho.data;
            $ax = $rt_createArray(oom_DVector3, 3);
            $approx = $rt_createIntArray(3);
            var$30[0] = $this.$contact.$surface.$rho;
            if (!($this.$contact.$surface.$mode2 & 1)) {
                var$30[1] = var$30[0];
                var$30[2] = var$30[0];
            } else {
                var$30[1] = $this.$contact.$surface.$rho2;
                var$30[2] = $this.$contact.$surface.$rhoN;
            }
            var$33 = $approx.data;
            var$34 = $ax.data;
            var$34[0] = $t1;
            var$34[1] = $t2;
            var$34[2] = $normal;
            var$33[0] = $this.$contact.$surface.$mode2 & 4096;
            var$33[1] = $this.$contact.$surface.$mode2 & 8192;
            var$33[2] = $this.$contact.$surface.$mode2 & 16384;
            $ii = 0;
            while (true) {
                if ($ii >= 3)
                    break a;
                if (var$30[$ii] > 0.0) {
                    $info.$setJ1a($rowFriction2, var$34[$ii]);
                    if ($b1 !== null)
                        $info.$setJ2aNegated($rowFriction2, var$34[$ii]);
                    $info.$setLo($rowFriction2,  -var$30[$ii]);
                    $info.$setHi($rowFriction2, var$30[$ii]);
                    if (var$33[$ii])
                        $info.$setFindex($rowFriction2, 0);
                    $rowFriction2 = $rowFriction2 + 1 | 0;
                }
                $ii = $ii + 1 | 0;
            }
        }
    }
}
function oktgg_GLTFSparse$read$1() {
    kji_Lambda.call(this);
    this.$this$0161 = null;
}
function oktgg_GLTFSparse$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFSparse$read$1();
    oktgg_GLTFSparse$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFSparse$read$1_invoke(var$0, var$1) {
    oktgg_GLTFSparse$read$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFSparse$read$1_invoke0($this, $$this$get) {
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    oktgg_GLTFSparse$Indices_read(oktgg_GLTFSparse_getIndices($this.$this$0161), $$this$get);
}
function oktgg_GLTFSparse$read$1__init_0(var$0, var$1) {
    var$0.$this$0161 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_IGLTFMaterial$read$9$1() {
    kji_Lambda.call(this);
    this.$this$0162 = null;
}
function oktgg_IGLTFMaterial$read$9$1__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$9$1();
    oktgg_IGLTFMaterial$read$9$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_IGLTFMaterial$read$9$1_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$9$1_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$9$1_invoke0($this, $it) {
    $this.$this$0162.$this$056.$setEmissiveTextureUV($it);
}
function oktgg_IGLTFMaterial$read$9$1__init_0(var$0, var$1) {
    var$0.$this$0162 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function okttm_FrustumMeshBuilderTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$control7 = null;
    a.$$shader11 = null;
    a.$$perspectiveFrustumMesh = null;
    a.$$orthographicFrustumMesh = null;
}
function okttm_FrustumMeshBuilderTest$testMain$1__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new okttm_FrustumMeshBuilderTest$testMain$1();
    okttm_FrustumMeshBuilderTest$testMain$1__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function okttm_FrustumMeshBuilderTest$testMain$1_invoke(var$0) {
    okttm_FrustumMeshBuilderTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttm_FrustumMeshBuilderTest$testMain$1_invoke0($this) {
    var var$1;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$control7;
    okt_APP_$callClinit();
    var$1.$update(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    $this.$$shader11.$bind();
    $this.$$shader11.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    var$1 = $this.$$shader11;
    oktu_Color_$callClinit();
    var$1.$set40($rt_s(623), oktu_Color_getORANGE(oktu_Color_INSTANCE));
    oktm_IMesh$DefaultImpls_render$default($this.$$perspectiveFrustumMesh, $this.$$shader11, 0, 0, 0, 0, 30, null);
    $this.$$shader11.$set40($rt_s(623), oktu_Color_getGREEN(oktu_Color_INSTANCE));
    oktm_IMesh$DefaultImpls_render$default($this.$$orthographicFrustumMesh, $this.$$shader11, 0, 0, 0, 0, 30, null);
}
function okttm_FrustumMeshBuilderTest$testMain$1__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$$control7 = var$1;
    var$0.$$shader11 = var$2;
    var$0.$$perspectiveFrustumMesh = var$3;
    var$0.$$orthographicFrustumMesh = var$4;
    kji_Lambda__init_0(var$0, 0);
}
function oktsg_VelocityNode$Companion() {
    jl_Object.call(this);
}
function oktsg_VelocityNode$Companion__init_0() {
    var var_0 = new oktsg_VelocityNode$Companion();
    oktsg_VelocityNode$Companion__init_1(var_0);
    return var_0;
}
function oktsg_VelocityNode$Companion__init_(var_0) {
    var var_1 = new oktsg_VelocityNode$Companion();
    oktsg_VelocityNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_VelocityNode$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function oktsg_VelocityNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_VelocityNode$Companion__init_1($this);
}
function oktgg_GLTFSparse$read$2() {
    kji_Lambda.call(this);
    this.$this$0163 = null;
}
function oktgg_GLTFSparse$read$2__init_(var_0) {
    var var_1 = new oktgg_GLTFSparse$read$2();
    oktgg_GLTFSparse$read$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFSparse$read$2_invoke(var$0, var$1) {
    oktgg_GLTFSparse$read$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFSparse$read$2_invoke0($this, $$this$get) {
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    oktgg_GLTFSparse$Values_read(oktgg_GLTFSparse_getValues($this.$this$0163), $$this$get);
}
function oktgg_GLTFSparse$read$2__init_0(var$0, var$1) {
    var$0.$this$0163 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFNode$read$9$1() {
    kji_Lambda.call(this);
    this.$this$0164 = null;
}
function oktgg_GLTFNode$read$9$1__init_(var_0) {
    var var_1 = new oktgg_GLTFNode$read$9$1();
    oktgg_GLTFNode$read$9$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFNode$read$9$1_invoke(var$0, var$1) {
    oktgg_GLTFNode$read$9$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFNode$read$9$1_invoke0($this, $mesh) {
    var $newObj, $$this$forEach$iv, var$4, $element$iv, $it;
    kji_Intrinsics_checkParameterIsNotNull($mesh, $rt_s(43));
    $newObj = oktg_Object3D__init_(null, null, null, 0, null, null, null, 127, null);
    $newObj.$setName(oktgg_GLTFNode_getName($this.$this$0164.$this$0132));
    $$this$forEach$iv = oktgg_GLTFMesh_getPrimitives($mesh);
    var$4 = $$this$forEach$iv.$iterator();
    while (var$4.$hasNext()) {
        $element$iv = var$4.$next();
        $it = $element$iv;
        $newObj.$getMeshes0().$add1(oktgg_GLTFPrimitive_getMesh($it));
    }
    if (oktgg_GLTFConf_getSetupVelocityShader(oktgg_GLTFNode_getGltf($this.$this$0164.$this$0132).$getConf()))
        $newObj.$setPreviousTransform(oktgn_PreviousTRS__init_());
    oktgg_GLTFNode_getGltf($this.$this$0164.$this$0132).$getObjects1().$add1($newObj);
    $this.$this$0164.$$obj0.$element0 = $newObj;
}
function oktgg_GLTFNode$read$9$1__init_0(var$0, var$1) {
    var$0.$this$0164 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jur_AtomicFSet() {
    jur_FSet.call(this);
    this.$index7 = 0;
}
function jur_AtomicFSet__init_(var_0) {
    var var_1 = new jur_AtomicFSet();
    jur_AtomicFSet__init_0(var_1, var_0);
    return var_1;
}
function jur_AtomicFSet__init_0($this, $groupIndex) {
    jur_FSet__init_0($this, $groupIndex);
}
function jur_AtomicFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr;
    $gr = $this.$getGroupIndex();
    $matchResult.$setConsumed($gr, $stringIndex - $matchResult.$getConsumed($gr) | 0);
    $this.$index7 = $stringIndex;
    return $stringIndex;
}
function jur_AtomicFSet_getIndex($this) {
    return $this.$index7;
}
function jur_AtomicFSet_hasConsumed($this, $mr) {
    return 0;
}
function oooi_DxQuickStep$dxQuickStepperStage5CallContext() {
    var a = this; jl_Object.call(a);
    a.$m_stepperCallContext2 = null;
    a.$m_localContext0 = null;
    a.$m_stage3MemArenaState = null;
}
function oooi_DxQuickStep$dxQuickStepperStage5CallContext__init_() {
    var var_0 = new oooi_DxQuickStep$dxQuickStepperStage5CallContext();
    oooi_DxQuickStep$dxQuickStepperStage5CallContext__init_0(var_0);
    return var_0;
}
function oooi_DxQuickStep$dxQuickStepperStage5CallContext__init_1(var_0) {
    var var_1 = new oooi_DxQuickStep$dxQuickStepperStage5CallContext();
    oooi_DxQuickStep$dxQuickStepperStage5CallContext__init_2(var_1, var_0);
    return var_1;
}
function oooi_DxQuickStep$dxQuickStepperStage5CallContext__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxQuickStep$dxQuickStepperStage5CallContext_Initialize($this, $callContext, $localContext, $stage3MemArenaState) {
    $this.$m_stepperCallContext2 = $callContext;
    $this.$m_localContext0 = $localContext;
    $this.$m_stage3MemArenaState = $stage3MemArenaState;
}
function oooi_DxQuickStep$dxQuickStepperStage5CallContext__init_2($this, $x0) {
    oooi_DxQuickStep$dxQuickStepperStage5CallContext__init_0($this);
}
function oktu_IAsyncList$getOrWait$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$0165 = null;
    a.$$call = null;
    a.$$index = 0;
}
function oktu_IAsyncList$getOrWait$1__init_(var_0, var_1, var_2) {
    var var_3 = new oktu_IAsyncList$getOrWait$1();
    oktu_IAsyncList$getOrWait$1__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktu_IAsyncList$getOrWait$1_invoke(var$0) {
    oktu_IAsyncList$getOrWait$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktu_IAsyncList$getOrWait$1_invoke0($this) {
    $this.$$call.$invoke1($this.$this$0165.$get1($this.$$index));
}
function oktu_IAsyncList$getOrWait$1__init_0(var$0, var$1, var$2, var$3) {
    var$0.$this$0165 = var$1;
    var$0.$$call = var$2;
    var$0.$$index = var$3;
    kji_Lambda__init_0(var$0, 0);
}
function oooig_Gimpact() {
    jl_Object.call(this);
}
function oooig_Gimpact__init_() {
    var var_0 = new oooig_Gimpact();
    oooig_Gimpact__init_0(var_0);
    return var_0;
}
function oooig_Gimpact__init_0($this) {
    jl_Object__init_0($this);
}
function oooig_Gimpact_gimpact_init() {
    oooig_GimMath_gim_init_math();
}
function oooig_Gimpact_gimpact_terminate() {
    return;
}
function oktm_Vec3() {
    var a = this; jl_Object.call(a);
    a.$x5 = 0.0;
    a.$y5 = 0.0;
    a.$z4 = 0.0;
}
var oktm_Vec3_Y = null;
var oktm_Vec3_Companion = null;
function oktm_Vec3_$callClinit() {
    oktm_Vec3_$callClinit = $rt_eraseClinit(oktm_Vec3);
    oktm_Vec3__clinit_();
}
function oktm_Vec3__init_0(var_0, var_1, var_2) {
    var var_3 = new oktm_Vec3();
    oktm_Vec3__init_3(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktm_Vec3__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktm_Vec3();
    oktm_Vec3__init_4(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktm_Vec3__init_5() {
    var var_0 = new oktm_Vec3();
    oktm_Vec3__init_6(var_0);
    return var_0;
}
function oktm_Vec3__init_2(var_0) {
    var var_1 = new oktm_Vec3();
    oktm_Vec3__init_7(var_1, var_0);
    return var_1;
}
function oktm_Vec3__init_1(var_0) {
    var var_1 = new oktm_Vec3();
    oktm_Vec3__init_8(var_1, var_0);
    return var_1;
}
function oktm_Vec3_getX($this) {
    return $this.$x5;
}
function oktm_Vec3_setX($this, $_set___) {
    $this.$x5 = $_set___;
}
function oktm_Vec3_getY($this) {
    return $this.$y5;
}
function oktm_Vec3_setY($this, $_set___) {
    $this.$y5 = $_set___;
}
function oktm_Vec3_getZ($this) {
    return $this.$z4;
}
function oktm_Vec3_setZ($this, $_set___) {
    $this.$z4 = $_set___;
}
function oktm_Vec3__init_3($this, $x, $y, $z) {
    oktm_Vec3_$callClinit();
    jl_Object__init_0($this);
    $this.$x5 = $x;
    $this.$y5 = $y;
    $this.$z4 = $z;
}
function oktm_Vec3__init_4(var$0, var$1, var$2, var$3, var$4, var$5) {
    oktm_Vec3_$callClinit();
    if (var$4 & 1)
        var$1 = 0.0;
    if (var$4 & 2)
        var$2 = 0.0;
    if (var$4 & 4)
        var$3 = 0.0;
    oktm_Vec3__init_3(var$0, var$1, var$2, var$3);
}
function oktm_Vec3__init_6(var$0) {
    oktm_Vec3_$callClinit();
    oktm_Vec3__init_4(var$0, 0.0, 0.0, 0.0, 7, null);
}
function oktm_Vec3__init_7($this, $value) {
    oktm_Vec3_$callClinit();
    oktm_Vec3__init_3($this, $value, $value, $value);
}
function oktm_Vec3__init_8($this, $other) {
    oktm_Vec3_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    oktm_Vec3__init_3($this, $other.$getX0(), $other.$getY0(), $other.$getZ());
}
function oktm_Vec3__clinit_() {
    oktm_Vec3_Companion = oktm_Vec3$Companion__init_1(null);
    oktm_Vec3_Y = oktm_Vec3__init_0(0.0, 1.0, 0.0);
}
function oktm_Vec3_set($this, $x, $y, $z) {
    return oktm_IVec3$DefaultImpls_set($this, $x, $y, $z);
}
function oktm_Vec3_set0($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IVec3$DefaultImpls_set0($this, $other);
}
function oktm_Vec3_add($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IVec3$DefaultImpls_add($this, $other);
}
function oktm_Vec3_add0($this, $x, $y, $z) {
    return oktm_IVec3$DefaultImpls_add0($this, $x, $y, $z);
}
function oktm_Vec3_sub($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IVec3$DefaultImpls_sub($this, $other);
}
function oktm_Vec3_sub0($this, $x, $y, $z) {
    return oktm_IVec3$DefaultImpls_sub0($this, $x, $y, $z);
}
function oktm_Vec3_scl($this, $scalar) {
    return oktm_IVec3$DefaultImpls_scl($this, $scalar);
}
function oktm_Vec3_len2($this) {
    return oktm_IVec3$DefaultImpls_len2($this);
}
function oktm_Vec3_dst2($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IVec3$DefaultImpls_dst2($this, $other);
}
function oktm_Vec3_nor($this) {
    return oktm_IVec3$DefaultImpls_nor($this);
}
function oktm_Vec3_dot($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IVec3$DefaultImpls_dot($this, $other);
}
function oktm_Vec3_crs($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IVec3$DefaultImpls_crs($this, $other);
}
function oktm_Vec3_crs0($this, $x, $y, $z) {
    return oktm_IVec3$DefaultImpls_crs0($this, $x, $y, $z);
}
function oktm_Vec3_mul($this, $mat) {
    kji_Intrinsics_checkParameterIsNotNull($mat, $rt_s(516));
    return oktm_IVec3$DefaultImpls_mul($this, $mat);
}
function oktm_Vec3_rotate($this, $radians, $axisX, $axisY, $axisZ) {
    return oktm_IVec3$DefaultImpls_rotate($this, $radians, $axisX, $axisY, $axisZ);
}
function oktm_Vec3_lerp($this, $target, $alpha) {
    kji_Intrinsics_checkParameterIsNotNull($target, $rt_s(1101));
    return oktm_IVec3$DefaultImpls_lerp($this, $target, $alpha);
}
function oktm_Vec2() {
    var a = this; jl_Object.call(a);
    a.$x6 = 0.0;
    a.$y6 = 0.0;
}
var oktm_Vec2_X = null;
var oktm_Vec2_Y = null;
var oktm_Vec2_Companion = null;
function oktm_Vec2_$callClinit() {
    oktm_Vec2_$callClinit = $rt_eraseClinit(oktm_Vec2);
    oktm_Vec2__clinit_();
}
function oktm_Vec2__init_(var_0, var_1) {
    var var_2 = new oktm_Vec2();
    oktm_Vec2__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktm_Vec2__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new oktm_Vec2();
    oktm_Vec2__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktm_Vec2__init_3() {
    var var_0 = new oktm_Vec2();
    oktm_Vec2__init_4(var_0);
    return var_0;
}
function oktm_Vec2_getX($this) {
    return $this.$x6;
}
function oktm_Vec2_setX($this, $_set___) {
    $this.$x6 = $_set___;
}
function oktm_Vec2_getY($this) {
    return $this.$y6;
}
function oktm_Vec2_setY($this, $_set___) {
    $this.$y6 = $_set___;
}
function oktm_Vec2__init_0($this, $x, $y) {
    oktm_Vec2_$callClinit();
    jl_Object__init_0($this);
    $this.$x6 = $x;
    $this.$y6 = $y;
}
function oktm_Vec2__init_2(var$0, var$1, var$2, var$3, var$4) {
    oktm_Vec2_$callClinit();
    if (var$3 & 1)
        var$1 = 0.0;
    if (var$3 & 2)
        var$2 = 0.0;
    oktm_Vec2__init_0(var$0, var$1, var$2);
}
function oktm_Vec2__init_4(var$0) {
    oktm_Vec2_$callClinit();
    oktm_Vec2__init_2(var$0, 0.0, 0.0, 3, null);
}
function oktm_Vec2__clinit_() {
    oktm_Vec2_Companion = oktm_Vec2$Companion__init_1(null);
    oktm_Vec2_X = oktm_Vec2__init_(1.0, 0.0);
    oktm_Vec2_Y = oktm_Vec2__init_(0.0, 1.0);
}
function oktpo_OdePhysicsWorld$Companion$geomPairsPool$1() {
    kji_Lambda.call(this);
}
var oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_INSTANCE = null;
function oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_$callClinit() {
    oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_$callClinit = $rt_eraseClinit(oktpo_OdePhysicsWorld$Companion$geomPairsPool$1);
    oktpo_OdePhysicsWorld$Companion$geomPairsPool$1__clinit_();
}
function oktpo_OdePhysicsWorld$Companion$geomPairsPool$1__init_() {
    var var_0 = new oktpo_OdePhysicsWorld$Companion$geomPairsPool$1();
    oktpo_OdePhysicsWorld$Companion$geomPairsPool$1__init_0(var_0);
    return var_0;
}
function oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_invoke(var$0) {
    return oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_invoke0(var$0);
}
function oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_invoke0($this) {
    return oktpo_GeomContactPair__init_();
}
function oktpo_OdePhysicsWorld$Companion$geomPairsPool$1__init_0(var$0) {
    oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktpo_OdePhysicsWorld$Companion$geomPairsPool$1__clinit_() {
    oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_INSTANCE = oktpo_OdePhysicsWorld$Companion$geomPairsPool$1__init_();
}
function oktm_Vec4() {
    var a = this; jl_Object.call(a);
    a.$x7 = 0.0;
    a.$y7 = 0.0;
    a.$z5 = 0.0;
    a.$w1 = 0.0;
}
function oktm_Vec4__init_0(var_0, var_1, var_2, var_3) {
    var var_4 = new oktm_Vec4();
    oktm_Vec4__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktm_Vec4__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktm_Vec4();
    oktm_Vec4__init_2(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktm_Vec4__init_3() {
    var var_0 = new oktm_Vec4();
    oktm_Vec4__init_4(var_0);
    return var_0;
}
function oktm_Vec4__init_5(var_0) {
    var var_1 = new oktm_Vec4();
    oktm_Vec4__init_6(var_1, var_0);
    return var_1;
}
function oktm_Vec4_getX($this) {
    return $this.$x7;
}
function oktm_Vec4_setX($this, $_set___) {
    $this.$x7 = $_set___;
}
function oktm_Vec4_getY($this) {
    return $this.$y7;
}
function oktm_Vec4_setY($this, $_set___) {
    $this.$y7 = $_set___;
}
function oktm_Vec4_getZ($this) {
    return $this.$z5;
}
function oktm_Vec4_setZ($this, $_set___) {
    $this.$z5 = $_set___;
}
function oktm_Vec4_getW($this) {
    return $this.$w1;
}
function oktm_Vec4_setW($this, $_set___) {
    $this.$w1 = $_set___;
}
function oktm_Vec4__init_1($this, $x, $y, $z, $w) {
    jl_Object__init_0($this);
    $this.$x7 = $x;
    $this.$y7 = $y;
    $this.$z5 = $z;
    $this.$w1 = $w;
}
function oktm_Vec4__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6) {
    if (var$5 & 1)
        var$1 = 0.0;
    if (var$5 & 2)
        var$2 = 0.0;
    if (var$5 & 4)
        var$3 = 0.0;
    if (var$5 & 8)
        var$4 = 1.0;
    oktm_Vec4__init_1(var$0, var$1, var$2, var$3, var$4);
}
function oktm_Vec4__init_4(var$0) {
    oktm_Vec4__init_2(var$0, 0.0, 0.0, 0.0, 0.0, 15, null);
}
function oktm_Vec4__init_6($this, $value) {
    oktm_Vec4__init_1($this, $value, $value, $value, $value);
}
function oktm_Vec4_getR($this) {
    return oktm_IVec4$DefaultImpls_getR($this);
}
function oktm_Vec4_setR($this, $value) {
    oktm_IVec4$DefaultImpls_setR($this, $value);
}
function oktm_Vec4_getG($this) {
    return oktm_IVec4$DefaultImpls_getG($this);
}
function oktm_Vec4_setG($this, $value) {
    oktm_IVec4$DefaultImpls_setG($this, $value);
}
function oktm_Vec4_getB($this) {
    return oktm_IVec4$DefaultImpls_getB($this);
}
function oktm_Vec4_setB($this, $value) {
    oktm_IVec4$DefaultImpls_setB($this, $value);
}
function oktm_Vec4_getA($this) {
    return oktm_IVec4$DefaultImpls_getA($this);
}
function oktm_Vec4_setA($this, $value) {
    oktm_IVec4$DefaultImpls_setA($this, $value);
}
function oktm_Vec4_set($this, $x, $y, $z, $w) {
    return oktm_IVec4$DefaultImpls_set($this, $x, $y, $z, $w);
}
function oktm_Vec4_set0($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IVec4$DefaultImpls_set0($this, $other);
}
function oktm_Vec4_set1($this, $other, $w) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktm_IVec4$DefaultImpls_set1($this, $other, $w);
}
function oktm_Vec4_len2($this) {
    return oktm_IVec4$DefaultImpls_len2($this);
}
function oktm_Vec4_nor($this) {
    return oktm_IVec4$DefaultImpls_nor($this);
}
function oktm_Vec4_lerp($this, $target, $alpha) {
    kji_Intrinsics_checkParameterIsNotNull($target, $rt_s(1101));
    return oktm_IVec4$DefaultImpls_lerp($this, $target, $alpha);
}
function oktm_Vec4_idtQuaternion($this) {
    return oktm_IVec4$DefaultImpls_idtQuaternion($this);
}
function oktm_Vec4_setQuaternion($this, $x, $y, $z, $radians) {
    return oktm_IVec4$DefaultImpls_setQuaternion($this, $x, $y, $z, $radians);
}
function oktm_Vec4_setQuaternion0($this, $normalizeAxes, $mat) {
    kji_Intrinsics_checkParameterIsNotNull($mat, $rt_s(516));
    return oktm_IVec4$DefaultImpls_setQuaternion0($this, $normalizeAxes, $mat);
}
function oktm_Vec4_setQuaternion1($this, $mat) {
    kji_Intrinsics_checkParameterIsNotNull($mat, $rt_s(516));
    return oktm_IVec4$DefaultImpls_setQuaternion1($this, $mat);
}
function oktm_Vec4_setQuaternionFromAxes($this, $normalizeAxes, $xx, $xy, $xz, $yx, $yy, $yz, $zx, $zy, $zz) {
    return oktm_IVec4$DefaultImpls_setQuaternionFromAxes($this, $normalizeAxes, $xx, $xy, $xz, $yx, $yy, $yz, $zx, $zy, $zz);
}
function oktm_Vec4_slerp($this, $end, $alpha) {
    kji_Intrinsics_checkParameterIsNotNull($end, $rt_s(1211));
    return oktm_IVec4$DefaultImpls_slerp($this, $end, $alpha);
}
function oktgg_GLTFSparse() {
    var a = this; jl_Object.call(a);
    a.$indices0 = null;
    a.$values8 = null;
    a.$sparseCount = 0;
}
function oktgg_GLTFSparse__init_(var_0) {
    var var_1 = new oktgg_GLTFSparse();
    oktgg_GLTFSparse__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFSparse__init_1(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFSparse();
    oktgg_GLTFSparse__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_GLTFSparse__init_3() {
    var var_0 = new oktgg_GLTFSparse();
    oktgg_GLTFSparse__init_4(var_0);
    return var_0;
}
function oktgg_GLTFSparse_getIndices($this) {
    return $this.$indices0;
}
function oktgg_GLTFSparse_getValues($this) {
    return $this.$values8;
}
function oktgg_GLTFSparse_read($this, $json) {
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $this.$sparseCount = $json.$int0($rt_s(482));
    $json.$get16($rt_s(566), oktgg_GLTFSparse$read$1__init_($this));
    $json.$get16($rt_s(285), oktgg_GLTFSparse$read$2__init_($this));
}
function oktgg_GLTFSparse__init_0($this, $sparseCount) {
    jl_Object__init_0($this);
    $this.$sparseCount = $sparseCount;
    $this.$indices0 = oktgg_GLTFSparse$Indices__init_(0, 0, 0, 7, null);
    $this.$values8 = oktgg_GLTFSparse$Values__init_1(0, 0, 3, null);
}
function oktgg_GLTFSparse__init_2(var$0, var$1, var$2, var$3) {
    if (var$2 & 1)
        var$1 = 0;
    oktgg_GLTFSparse__init_0(var$0, var$1);
}
function oktgg_GLTFSparse__init_4(var$0) {
    oktgg_GLTFSparse__init_2(var$0, 0, 1, null);
}
function oktt_TextureCube() {
    var a = this; oktt_Texture.call(a);
    a.$width2 = 0;
    a.$height2 = 0;
    a.$textureHandle0 = 0;
}
function oktt_TextureCube__init_0(var_0) {
    var var_1 = new oktt_TextureCube();
    oktt_TextureCube__init_1(var_1, var_0);
    return var_1;
}
function oktt_TextureCube__init_(var_0, var_1, var_2) {
    var var_3 = new oktt_TextureCube();
    oktt_TextureCube__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktt_TextureCube__init_3() {
    var var_0 = new oktt_TextureCube();
    oktt_TextureCube__init_4(var_0);
    return var_0;
}
function oktt_TextureCube_setWidth($this, $_set___) {
    $this.$width2 = $_set___;
}
function oktt_TextureCube_setHeight($this, $_set___) {
    $this.$height2 = $_set___;
}
function oktt_TextureCube_load($this, $positiveX, $negativeX, $positiveY, $negativeY, $positiveZ, $negativeZ, $minFilter, $magFilter, $sWrap, $tWrap, $rWrap) {
    kji_Intrinsics_checkParameterIsNotNull($positiveX, $rt_s(1212));
    kji_Intrinsics_checkParameterIsNotNull($negativeX, $rt_s(1213));
    kji_Intrinsics_checkParameterIsNotNull($positiveY, $rt_s(1214));
    kji_Intrinsics_checkParameterIsNotNull($negativeY, $rt_s(1215));
    kji_Intrinsics_checkParameterIsNotNull($positiveZ, $rt_s(1216));
    kji_Intrinsics_checkParameterIsNotNull($negativeZ, $rt_s(1217));
    $this.$bind();
    $this.$setMinFilter($minFilter);
    $this.$setMagFilter($magFilter);
    $this.$setSWrap($sWrap);
    $this.$setTWrap($tWrap);
    oktg_GL_$callClinit();
    oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 10241, $minFilter);
    oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 10240, $magFilter);
    oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 10242, $sWrap);
    oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 10243, $tWrap);
    oktg_GL_glTexParameteri(oktg_GL_INSTANCE, $this.$getGlTarget(), 32882, $rWrap);
    oktt_TextureCube_loadSide($this, $positiveX, 34069);
    oktt_TextureCube_loadSide($this, $negativeX, 34070);
    oktt_TextureCube_loadSide($this, $positiveY, 34071);
    oktt_TextureCube_loadSide($this, $negativeY, 34072);
    oktt_TextureCube_loadSide($this, $positiveZ, 34073);
    oktt_TextureCube_loadSide($this, $negativeZ, 34074);
    oktg_GL_glBindTexture(oktg_GL_INSTANCE, $this.$getGlTarget(), 0);
}
function oktt_TextureCube_load$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14) {
    if (var$13 & 64)
        var$8 = 9729;
    if (var$13 & 128)
        var$9 = 9729;
    if (var$13 & 256)
        var$10 = 33071;
    if (var$13 & 512)
        var$11 = 33071;
    if (var$13 & 1024)
        var$12 = 33071;
    oktt_TextureCube_load(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12);
}
function oktt_TextureCube_loadSide($this, $url, $side) {
    kji_Intrinsics_checkParameterIsNotNull($url, $rt_s(280));
    okti_IMG_$callClinit();
    okti_IImg$DefaultImpls_load$default(okti_IMG_INSTANCE, $url, null, 0, oktt_TextureCube$loadSide$1__init_($this, $side, $url), 6, null);
}
function oktt_TextureCube_getTextureHandle($this) {
    return $this.$textureHandle0;
}
function oktt_TextureCube__init_1($this, $textureHandle) {
    oktt_Texture__init_2($this, 34067, 0, 2, null);
    $this.$textureHandle0 = $textureHandle;
}
function oktt_TextureCube__init_2(var$0, var$1, var$2, var$3) {
    if (var$2 & 1) {
        oktg_GL_$callClinit();
        var$1 = oktg_GL_glGenTexture(oktg_GL_INSTANCE);
    }
    oktt_TextureCube__init_1(var$0, var$1);
}
function oktt_TextureCube__init_4(var$0) {
    oktt_TextureCube__init_2(var$0, 0, 1, null);
}
function oktg_IObject3D$Companion$Build$1() {
    kji_Lambda.call(this);
}
var oktg_IObject3D$Companion$Build$1_INSTANCE = null;
function oktg_IObject3D$Companion$Build$1_$callClinit() {
    oktg_IObject3D$Companion$Build$1_$callClinit = $rt_eraseClinit(oktg_IObject3D$Companion$Build$1);
    oktg_IObject3D$Companion$Build$1__clinit_();
}
function oktg_IObject3D$Companion$Build$1__init_() {
    var var_0 = new oktg_IObject3D$Companion$Build$1();
    oktg_IObject3D$Companion$Build$1__init_0(var_0);
    return var_0;
}
function oktg_IObject3D$Companion$Build$1__init_0(var$0) {
    oktg_IObject3D$Companion$Build$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktg_IObject3D$Companion$Build$1__clinit_() {
    oktg_IObject3D$Companion$Build$1_INSTANCE = oktg_IObject3D$Companion$Build$1__init_();
}
function oom_DVector4C() {
}
function oom_DVector4() {
    jl_Object.call(this);
    this.$v3 = null;
}
function oom_DVector4__init_() {
    var var_0 = new oom_DVector4();
    oom_DVector4__init_0(var_0);
    return var_0;
}
function oom_DVector4__init_0($this) {
    jl_Object__init_0($this);
    $this.$v3 = $rt_createDoubleArray(4);
}
function oom_DVector4_set($this, $a, $b, $c, $d) {
    $this.$v3.data[0] = $a;
    $this.$v3.data[1] = $b;
    $this.$v3.data[2] = $c;
    $this.$v3.data[3] = $d;
}
function oom_DVector4_get0($this) {
    return $this.$v3.data[0];
}
function oom_DVector4_get1($this) {
    return $this.$v3.data[1];
}
function oom_DVector4_get2($this) {
    return $this.$v3.data[2];
}
function oom_DVector4_get3($this) {
    return $this.$v3.data[3];
}
function oom_DVector3C() {
}
function oom_DVector3() {
    var a = this; jl_Object.call(a);
    a.$d00 = 0.0;
    a.$d10 = 0.0;
    a.$d2 = 0.0;
}
var oom_DVector3_ZERO = null;
function oom_DVector3_$callClinit() {
    oom_DVector3_$callClinit = $rt_eraseClinit(oom_DVector3);
    oom_DVector3__clinit_();
}
function oom_DVector3__init_() {
    var var_0 = new oom_DVector3();
    oom_DVector3__init_2(var_0);
    return var_0;
}
function oom_DVector3__init_0(var_0) {
    var var_1 = new oom_DVector3();
    oom_DVector3__init_3(var_1, var_0);
    return var_1;
}
function oom_DVector3__init_1(var_0, var_1, var_2) {
    var var_3 = new oom_DVector3();
    oom_DVector3__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function oom_DVector3__init_2($this) {
    oom_DVector3_$callClinit();
    jl_Object__init_0($this);
    $this.$d00 = 0.0;
    $this.$d10 = 0.0;
    $this.$d2 = 0.0;
}
function oom_DVector3__init_3($this, $v2) {
    oom_DVector3_$callClinit();
    oom_DVector3__init_2($this);
    oom_DVector3_set($this, $v2);
}
function oom_DVector3__init_4($this, $i, $j, $k) {
    oom_DVector3_$callClinit();
    oom_DVector3__init_2($this);
    oom_DVector3_set0($this, $i, $j, $k);
}
function oom_DVector3_set3($this, $v2) {
    var var$2;
    var$2 = $v2.data;
    oom_DVector3_set0($this, var$2[0], var$2[1], var$2[2]);
}
function oom_DVector3_set0($this, $x, $y, $z) {
    $this.$d00 = $x;
    $this.$d10 = $y;
    $this.$d2 = $z;
    return $this;
}
function oom_DVector3_set($this, $v2) {
    oom_DVector3_set00($this, $v2.$get01());
    oom_DVector3_set10($this, $v2.$get10());
    oom_DVector3_set20($this, $v2.$get20());
    return $this;
}
function oom_DVector3_set1($this, $v2) {
    oom_DVector3_set00($this, $v2.$get01());
    oom_DVector3_set10($this, $v2.$get10());
    oom_DVector3_set20($this, $v2.$get20());
    return $this;
}
function oom_DVector3_toString($this) {
    var $b;
    $b = jl_StringBuffer__init_1();
    $b.$append23($rt_s(1218));
    $b.$append24(oom_DVector3_get0($this)).$append23($rt_s(268));
    $b.$append24(oom_DVector3_get1($this)).$append23($rt_s(268));
    $b.$append24(oom_DVector3_get2($this)).$append23($rt_s(1219));
    return $b.$toString();
}
function oom_DVector3_set00($this, $d) {
    $this.$d00 = $d;
}
function oom_DVector3_set10($this, $d) {
    $this.$d10 = $d;
}
function oom_DVector3_set20($this, $d) {
    $this.$d2 = $d;
}
function oom_DVector3_get0($this) {
    return $this.$d00;
}
function oom_DVector3_get1($this) {
    return $this.$d10;
}
function oom_DVector3_get2($this) {
    return $this.$d2;
}
function oom_DVector3_add($this, $v2) {
    $this.$d00 = $this.$d00 + $v2.$get01();
    $this.$d10 = $this.$d10 + $v2.$get10();
    $this.$d2 = $this.$d2 + $v2.$get20();
    return $this;
}
function oom_DVector3_eqSum1($this, $v2, $v3) {
    oom_DVector3_set00($this, $v2.$get01() + $v3.$get01());
    oom_DVector3_set10($this, $v2.$get10() + $v3.$get10());
    oom_DVector3_set20($this, $v2.$get20() + $v3.$get20());
    return $this;
}
function oom_DVector3_eqSum($this, $v2, $s2, $v3, $s3) {
    oom_DVector3_set00($this, $v2.$get01() * $s2 + $v3.$get01() * $s3);
    oom_DVector3_set10($this, $v2.$get10() * $s2 + $v3.$get10() * $s3);
    oom_DVector3_set20($this, $v2.$get20() * $s2 + $v3.$get20() * $s3);
    return $this;
}
function oom_DVector3_eqSum2($this, $v2, $s2, $v3, $s3) {
    oom_DVector3_set00($this, $v2.$get01() * $s2 + $v3.$get01() * $s3);
    oom_DVector3_set10($this, $v2.$get10() * $s2 + $v3.$get10() * $s3);
    oom_DVector3_set20($this, $v2.$get20() * $s2 + $v3.$get20() * $s3);
    return $this;
}
function oom_DVector3_eqSum3($this, $v2, $s2, $v3, $s3) {
    oom_DVector3_set00($this, $v2.$get01() * $s2 + $v3.$get01() * $s3);
    oom_DVector3_set10($this, $v2.$get10() * $s2 + $v3.$get10() * $s3);
    oom_DVector3_set20($this, $v2.$get20() * $s2 + $v3.$get20() * $s3);
    return $this;
}
function oom_DVector3_eqSum0($this, $v2, $v3, $s3) {
    oom_DVector3_set00($this, $v2.$get01() + $v3.$get01() * $s3);
    oom_DVector3_set10($this, $v2.$get10() + $v3.$get10() * $s3);
    oom_DVector3_set20($this, $v2.$get20() + $v3.$get20() * $s3);
    return $this;
}
function oom_DVector3_eqSum4($this, $v2, $v3, $s3) {
    oom_DVector3_set00($this, $v2.$get01() + $v3.$get01() * $s3);
    oom_DVector3_set10($this, $v2.$get10() + $v3.$get10() * $s3);
    oom_DVector3_set20($this, $v2.$get20() + $v3.$get20() * $s3);
    return $this;
}
function oom_DVector3_sub($this, $v2) {
    $this.$d00 = $this.$d00 - $v2.$get01();
    $this.$d10 = $this.$d10 - $v2.$get10();
    $this.$d2 = $this.$d2 - $v2.$get20();
    return $this;
}
function oom_DVector3_scale0($this, $a, $b, $c) {
    $this.$d00 = $this.$d00 * $a;
    $this.$d10 = $this.$d10 * $b;
    $this.$d2 = $this.$d2 * $c;
    return $this;
}
function oom_DVector3_scale($this, $s) {
    $this.$d00 = $this.$d00 * $s;
    $this.$d10 = $this.$d10 * $s;
    $this.$d2 = $this.$d2 * $s;
    return $this;
}
function oom_DVector3_dot($this, $b) {
    return oom_DVector3_get0($this) * $b.$get01() + oom_DVector3_get1($this) * $b.$get10() + oom_DVector3_get2($this) * $b.$get20();
}
function oom_DVector3_eqDiff($this, $v2, $v3) {
    $this.$d00 = $v2.$get01() - $v3.$get01();
    $this.$d10 = $v2.$get10() - $v3.$get10();
    $this.$d2 = $v2.$get20() - $v3.$get20();
    return $this;
}
function oom_DVector3_reSub($this, $v2) {
    var var$2, var$3, var$4;
    var$2 = new oom_DVector3;
    var$3 = oom_DVector3_get0($this) - $v2.$get01();
    var$4 = oom_DVector3_get1($this) - $v2.$get10();
    oom_DVector3__init_4(var$2, var$3, var$4, oom_DVector3_get2($this) - $v2.$get20());
    return var$2;
}
function oom_DVector3_safeNormalize($this) {
    var $s, $s_0, $s_1;
    $s = jl_Math_abs(oom_DVector3_get0($this));
    $s_0 = jl_Math_abs(oom_DVector3_get1($this));
    $s_1 = jl_Math_abs(oom_DVector3_get2($this));
    if ($s_0 > $s) {
        if ($s_1 > $s_0)
            $s_0 = $s_1;
    } else if ($s_1 > $s)
        $s_0 = $s_1;
    else {
        if ($s <= 0.0) {
            oom_DVector3_set0($this, 1.0, 0.0, 0.0);
            return 0;
        }
        $s_0 = $s;
    }
    oom_DVector3_scale($this, 1.0 / $s_0);
    oom_DVector3_scale($this, 1.0 / oom_DVector3_length($this));
    return 1;
}
function oom_DVector3_normalize($this) {
    if (oom_DVector3_safeNormalize($this))
        return;
    $rt_throw(jl_IllegalStateException__init_(jl_StringBuilder__init_().$append($rt_s(1220)).$append14($this).$toString()));
}
function oom_DVector3_distance($this, $a) {
    var $r1, $r2, $r3;
    $r1 = oom_DVector3_get0($this) - $a.$get01();
    $r2 = oom_DVector3_get1($this) - $a.$get10();
    $r3 = oom_DVector3_get2($this) - $a.$get20();
    return jl_Math_sqrt($r1 * $r1 + $r2 * $r2 + $r3 * $r3);
}
function oom_DVector3_isEq($this, $a) {
    return oom_DVector3_get0($this) === $a.$get01() && oom_DVector3_get1($this) === $a.$get10() && oom_DVector3_get2($this) === $a.$get20() ? 1 : 0;
}
function oom_DVector3_eqAbs($this) {
    oom_DVector3_set00($this, jl_Math_abs(oom_DVector3_get0($this)));
    oom_DVector3_set10($this, jl_Math_abs(oom_DVector3_get1($this)));
    oom_DVector3_set20($this, jl_Math_abs(oom_DVector3_get2($this)));
}
function oom_DVector3_add00($this, $d) {
    $this.$d00 = $this.$d00 + $d;
}
function oom_DVector3_add1($this, $d) {
    $this.$d10 = $this.$d10 + $d;
}
function oom_DVector3_add2($this, $d) {
    $this.$d2 = $this.$d2 + $d;
}
function oom_DVector3_eqZero($this) {
    oom_DVector3_set0($this, 0.0, 0.0, 0.0);
}
function oom_DVector3_setZero($this) {
    oom_DVector3_eqZero($this);
}
function oom_DVector3_length($this) {
    return jl_Math_sqrt(oom_DVector3_get0($this) * oom_DVector3_get0($this) + oom_DVector3_get1($this) * oom_DVector3_get1($this) + oom_DVector3_get2($this) * oom_DVector3_get2($this));
}
function oom_DVector3_lengthSquared($this) {
    return oom_DVector3_get0($this) * oom_DVector3_get0($this) + oom_DVector3_get1($this) * oom_DVector3_get1($this) + oom_DVector3_get2($this) * oom_DVector3_get2($this);
}
function oom_DVector3_get($this, $i) {
    switch ($i) {
        case 0:
            break;
        case 1:
            return $this.$d10;
        case 2:
            return $this.$d2;
        default:
            $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1221)).$append1($i).$toString()));
    }
    return $this.$d00;
}
function oom_DVector3_set2($this, $i, $d) {
    a: {
        switch ($i) {
            case 0:
                break;
            case 1:
                $this.$d10 = $d;
                break a;
            case 2:
                $this.$d2 = $d;
                break a;
            default:
                $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1221)).$append1($i).$toString()));
        }
        $this.$d00 = $d;
    }
}
function oom_DVector3_scale1($this, $i, $d) {
    a: {
        switch ($i) {
            case 0:
                break;
            case 1:
                $this.$d10 = $this.$d10 * $d;
                break a;
            case 2:
                $this.$d2 = $this.$d2 * $d;
                break a;
            default:
                $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1221)).$append1($i).$toString()));
        }
        $this.$d00 = $this.$d00 * $d;
    }
}
function oom_DVector3_add0($this, $i, $d) {
    a: {
        switch ($i) {
            case 0:
                break;
            case 1:
                $this.$d10 = $this.$d10 + $d;
                break a;
            case 2:
                $this.$d2 = $this.$d2 + $d;
                break a;
            default:
                $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1221)).$append1($i).$toString()));
        }
        $this.$d00 = $this.$d00 + $d;
    }
}
function oom_DVector3_dotCol($this, $m, $col) {
    if (!$col)
        return oom_DVector3_get0($this) * $m.$get00() + oom_DVector3_get1($this) * $m.$get100() + oom_DVector3_get2($this) * $m.$get200();
    if ($col == 1)
        return oom_DVector3_get0($this) * $m.$get010() + oom_DVector3_get1($this) * $m.$get11() + oom_DVector3_get2($this) * $m.$get21();
    if ($col != 2)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(449)).$append1($col).$toString()));
    return oom_DVector3_get0($this) * $m.$get02() + oom_DVector3_get1($this) * $m.$get12() + oom_DVector3_get2($this) * $m.$get22();
}
function oom_DVector3_addScaled($this, $v2, $d) {
    $this.$d00 = $this.$d00 + $v2.$get01() * $d;
    $this.$d10 = $this.$d10 + $v2.$get10() * $d;
    $this.$d2 = $this.$d2 + $v2.$get20() * $d;
    return $this;
}
function oom_DVector3_eqCross($this, $b, $c) {
    oom_DVector3_set00($this, $b.$get10() * $c.$get20() - $b.$get20() * $c.$get10());
    oom_DVector3_set10($this, $b.$get20() * $c.$get01() - $b.$get01() * $c.$get20());
    oom_DVector3_set20($this, $b.$get01() * $c.$get10() - $b.$get10() * $c.$get01());
}
function oom_DVector3_eqProd($this, $m, $v2) {
    oom_DVector3_set00($this, $m.$get00() * $v2.$get01() + $m.$get010() * $v2.$get10() + $m.$get02() * $v2.$get20());
    oom_DVector3_set10($this, $m.$get100() * $v2.$get01() + $m.$get11() * $v2.$get10() + $m.$get12() * $v2.$get20());
    oom_DVector3_set20($this, $m.$get200() * $v2.$get01() + $m.$get21() * $v2.$get10() + $m.$get22() * $v2.$get20());
}
function oom_DVector3_newArray($size) {
    var $a, $i;
    oom_DVector3_$callClinit();
    $a = $rt_createArray(oom_DVector3, $size);
    $i = 0;
    while ($i < $size) {
        $a.data[$i] = oom_DVector3__init_();
        $i = $i + 1 | 0;
    }
    return $a;
}
function oom_DVector3__clinit_() {
    oom_DVector3_ZERO = oom_DVector3__init_();
}
function oktsp_FXAA() {
    var a = this; jl_Object.call(a);
    a.$lumaThreshold = 0.0;
    a.$spanMax = 0.0;
    a.$reduceMin = 0.0;
    a.$reduceMul = 0.0;
    a.$shader0 = null;
    a.$oldWidth = 0;
    a.$oldHeight = 0;
}
var oktsp_FXAA_fxaaCode = null;
var oktsp_FXAA_Companion = null;
function oktsp_FXAA_$callClinit() {
    oktsp_FXAA_$callClinit = $rt_eraseClinit(oktsp_FXAA);
    oktsp_FXAA__clinit_();
}
function oktsp_FXAA__init_() {
    var var_0 = new oktsp_FXAA();
    oktsp_FXAA__init_0(var_0);
    return var_0;
}
function oktsp_FXAA_getShader($this) {
    return $this.$shader0;
}
function oktsp_FXAA_updateUniforms($this) {
    $this.$shader0.$bind();
    $this.$shader0.$set1($rt_s(1222), $this.$lumaThreshold);
    $this.$shader0.$set1($rt_s(1223), $this.$spanMax);
    $this.$shader0.$set1($rt_s(1224), 1.0 / $this.$reduceMul);
    $this.$shader0.$set1($rt_s(1225), 1.0 / $this.$reduceMin);
}
function oktsp_FXAA_updateWidthHeight($this, $width, $height) {
    var var$3;
    if (!($this.$oldWidth == $width && $this.$oldHeight == $height)) {
        $this.$oldWidth = $width;
        $this.$oldHeight = $height;
        var$3 = $this.$shader0;
        okt_APP_$callClinit();
        var$3.$set36($rt_s(1226), 1.0 / okt_APP_getWidth(okt_APP_INSTANCE), 1.0 / okt_APP_getHeight(okt_APP_INSTANCE));
    }
}
function oktsp_FXAA_render($this, $screenQuad, $inputMap, $out) {
    kji_Intrinsics_checkParameterIsNotNull($screenQuad, $rt_s(523));
    kji_Intrinsics_checkParameterIsNotNull($inputMap, $rt_s(1138));
    oktm_IScreenQuad$DefaultImpls_render$default($screenQuad, $this.$shader0, $out, null, oktsp_FXAA$render$1__init_($this, $out, $inputMap), 4, null);
}
function oktsp_FXAA__init_0($this) {
    oktsp_FXAA_$callClinit();
    jl_Object__init_0($this);
    $this.$lumaThreshold = 0.699999988079071;
    $this.$spanMax = 8.0;
    $this.$reduceMin = 128.0;
    $this.$reduceMul = 8.0;
    $this.$shader0 = oktsp_PostShader__init_1(oktsp_FXAA_fxaaCode, null, 0, null, null, 0, 62, null);
    $this.$shader0.$bind();
    $this.$shader0.$set35($rt_s(541), 0);
    oktsp_FXAA_updateUniforms($this);
}
function oktsp_FXAA__clinit_() {
    oktsp_FXAA_Companion = oktsp_FXAA$Companion__init_(null);
    oktsp_FXAA_fxaaCode = $rt_s(1227);
}
function oktsp_FXAA_access$updateWidthHeight($$this, $width, $height) {
    oktsp_FXAA_$callClinit();
    oktsp_FXAA_updateWidthHeight($$this, $width, $height);
}
function jur_MultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter3 = 0;
}
function jur_MultiLineEOLSet__init_(var_0) {
    var var_1 = new jur_MultiLineEOLSet();
    jur_MultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_MultiLineEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_0($this);
    $this.$consCounter3 = $counter;
}
function jur_MultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $strDif, $ch1, $ch2;
    $strDif = !$matchResult.$hasAnchoringBounds() ? $testString.$length() - $strIndex | 0 : $matchResult.$getLeftBound() - $strIndex | 0;
    if (!$strDif) {
        $matchResult.$setConsumed($this.$consCounter3, 0);
        return $this.$next0.$matches($strIndex, $testString, $matchResult);
    }
    if ($strDif < 2) {
        $ch1 = $testString.$charAt($strIndex);
        $ch2 = 97;
    } else {
        $ch1 = $testString.$charAt($strIndex);
        $ch2 = $testString.$charAt($strIndex + 1 | 0);
    }
    switch ($ch1) {
        case 10:
        case 133:
        case 8232:
        case 8233:
            $matchResult.$setConsumed($this.$consCounter3, 0);
            return $this.$next0.$matches($strIndex, $testString, $matchResult);
        case 13:
            if ($ch2 != 10) {
                $matchResult.$setConsumed($this.$consCounter3, 0);
                return $this.$next0.$matches($strIndex, $testString, $matchResult);
            }
            $matchResult.$setConsumed($this.$consCounter3, 0);
            return $this.$next0.$matches($strIndex, $testString, $matchResult);
        default:
    }
    return (-1);
}
function jur_MultiLineEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter3) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter3, (-1));
    return $res;
}
function jl_ClassNotFoundException() {
    jl_ReflectiveOperationException.call(this);
}
function jl_ClassNotFoundException__init_() {
    var var_0 = new jl_ClassNotFoundException();
    jl_ClassNotFoundException__init_0(var_0);
    return var_0;
}
function jl_ClassNotFoundException__init_0($this) {
    jl_ReflectiveOperationException__init_0($this);
}
function ju_HashMap$AbstractMapIterator() {
    var a = this; jl_Object.call(a);
    a.$position9 = 0;
    a.$expectedModCount0 = 0;
    a.$futureEntry0 = null;
    a.$currentEntry1 = null;
    a.$prevEntry0 = null;
    a.$associatedMap0 = null;
}
function ju_HashMap$AbstractMapIterator__init_(var_0) {
    var var_1 = new ju_HashMap$AbstractMapIterator();
    ju_HashMap$AbstractMapIterator__init_0(var_1, var_0);
    return var_1;
}
function ju_HashMap$AbstractMapIterator__init_0($this, $hm) {
    jl_Object__init_0($this);
    $this.$associatedMap0 = $hm;
    $this.$expectedModCount0 = $hm.$modCount;
    $this.$futureEntry0 = null;
}
function ju_HashMap$AbstractMapIterator_hasNext($this) {
    if ($this.$futureEntry0 !== null)
        return 1;
    while ($this.$position9 < $this.$associatedMap0.$elementData.data.length) {
        if ($this.$associatedMap0.$elementData.data[$this.$position9] !== null)
            return 1;
        $this.$position9 = $this.$position9 + 1 | 0;
    }
    return 0;
}
function ju_HashMap$AbstractMapIterator_checkConcurrentMod($this) {
    if ($this.$expectedModCount0 == $this.$associatedMap0.$modCount)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
}
function ju_HashMap$AbstractMapIterator_makeNext($this) {
    var var$1, var$2;
    ju_HashMap$AbstractMapIterator_checkConcurrentMod($this);
    if (!$this.$hasNext())
        $rt_throw(ju_NoSuchElementException__init_());
    if ($this.$futureEntry0 === null) {
        var$1 = $this.$associatedMap0.$elementData.data;
        var$2 = $this.$position9;
        $this.$position9 = var$2 + 1 | 0;
        $this.$currentEntry1 = var$1[var$2];
        $this.$futureEntry0 = $this.$currentEntry1.$next1;
        $this.$prevEntry0 = null;
    } else {
        if ($this.$currentEntry1 !== null)
            $this.$prevEntry0 = $this.$currentEntry1;
        $this.$currentEntry1 = $this.$futureEntry0;
        $this.$futureEntry0 = $this.$futureEntry0.$next1;
    }
}
function ju_HashMap$AbstractMapIterator_remove($this) {
    var $index, var$2;
    ju_HashMap$AbstractMapIterator_checkConcurrentMod($this);
    if ($this.$currentEntry1 === null)
        $rt_throw(jl_IllegalStateException__init_0());
    if ($this.$prevEntry0 !== null)
        $this.$prevEntry0.$next1 = $this.$currentEntry1.$next1;
    else {
        $index = $this.$currentEntry1.$origKeyHash & ($this.$associatedMap0.$elementData.data.length - 1 | 0);
        $this.$associatedMap0.$elementData.data[$index] = $this.$associatedMap0.$elementData.data[$index].$next1;
    }
    $this.$currentEntry1 = null;
    $this.$expectedModCount0 = $this.$expectedModCount0 + 1 | 0;
    var$2 = $this.$associatedMap0;
    var$2.$modCount = var$2.$modCount + 1 | 0;
    var$2 = $this.$associatedMap0;
    var$2.$elementCount = var$2.$elementCount - 1 | 0;
}
function oooi_Rotation() {
    oooi_Matrix.call(this);
}
function oooi_Rotation__init_() {
    var var_0 = new oooi_Rotation();
    oooi_Rotation__init_0(var_0);
    return var_0;
}
function oooi_Rotation__init_0($this) {
    oooi_Matrix__init_0($this);
}
function oooi_Rotation_dRFromAxisAndAngle($R, $ax, $ay, $az, $angle) {
    var $q;
    $q = oom_DQuaternion__init_();
    oooi_Rotation_dQFromAxisAndAngle0($q, $ax, $ay, $az, $angle);
    oooi_Rotation_dRfromQ($R, $q);
}
function oooi_Rotation_dQFromAxisAndAngle0($q, $ax, $ay, $az, $angle) {
    var $l, var$7, var$8;
    $l = $ax * $ax + $ay * $ay + $az * $az;
    if ($l <= 0.0)
        $q.$set17(1.0, 0.0, 0.0, 0.0);
    else {
        var$7 = $angle * 0.5;
        var$8 = oooi_Common_dSin(var$7) * oooi_Common_dRecipSqrt($l);
        $q.$set17(jl_Math_cos(var$7), $ax * var$8, $ay * var$8, $az * var$8);
    }
}
function oooi_Rotation_dQFromAxisAndAngle($q, $axyz, $angle) {
    var $l, var$5, var$6;
    $l = $axyz.$lengthSquared();
    if ($l <= 0.0)
        $q.$set17(1.0, 0.0, 0.0, 0.0);
    else {
        var$5 = $angle * 0.5;
        var$6 = oooi_Common_dSin(var$5) * oooi_Common_dRecipSqrt($l);
        $q.$set17(jl_Math_cos(var$5), $axyz.$get01() * var$6, $axyz.$get10() * var$6, $axyz.$get20() * var$6);
    }
}
function oooi_Rotation_dQMultiply0($qa, $qb, $qc) {
    $qa.$set00($qb.$get01() * $qc.$get01() - $qb.$get10() * $qc.$get10() - $qb.$get20() * $qc.$get20() - $qb.$get30() * $qc.$get30());
    $qa.$set15($qb.$get01() * $qc.$get10() + $qb.$get10() * $qc.$get01() + $qb.$get20() * $qc.$get30() - $qb.$get30() * $qc.$get20());
    $qa.$set20($qb.$get01() * $qc.$get20() + $qb.$get20() * $qc.$get01() + $qb.$get30() * $qc.$get10() - $qb.$get10() * $qc.$get30());
    $qa.$set30($qb.$get01() * $qc.$get30() + $qb.$get30() * $qc.$get01() + $qb.$get10() * $qc.$get20() - $qb.$get20() * $qc.$get10());
}
function oooi_Rotation_dRfromQ($R, $q) {
    var $q0, $q1, $q2, $q3, $qq1, $qq2, $qq3, var$10, var$11, var$12, var$13, var$14, var$15;
    $q0 = $q.$get01();
    $q1 = $q.$get10();
    $q2 = $q.$get20();
    $q3 = $q.$get30();
    $qq1 = 2.0 * $q1 * $q1;
    $qq2 = 2.0 * $q2 * $q2;
    $qq3 = 2.0 * $q3 * $q3;
    oom_DMatrix3_set00($R, 1.0 - $qq2 - $qq3);
    var$10 = $q1 * $q2;
    var$11 = $q0 * $q3;
    oom_DMatrix3_set01($R, 2.0 * (var$10 - var$11));
    var$12 = $q1 * $q3;
    var$13 = $q0 * $q2;
    oom_DMatrix3_set02($R, 2.0 * (var$12 + var$13));
    oom_DMatrix3_set10($R, 2.0 * (var$10 + var$11));
    var$14 = 1.0 - $qq1;
    oom_DMatrix3_set11($R, var$14 - $qq3);
    var$11 = $q2 * $q3;
    var$15 = $q0 * $q1;
    oom_DMatrix3_set12($R, 2.0 * (var$11 - var$15));
    oom_DMatrix3_set20($R, 2.0 * (var$12 - var$13));
    oom_DMatrix3_set21($R, 2.0 * (var$11 + var$15));
    oom_DMatrix3_set22($R, var$14 - $qq2);
}
function oooi_Rotation_dQfromR($q, $R) {
    var $tr, $s, var$5;
    $tr = $R.$get00() + $R.$get11() + $R.$get22();
    if ($tr < 0.0) {
        if ($R.$get11() > $R.$get00()) {
            if ($R.$get22() <= $R.$get11()) {
                oooi_Rotation_DQFR_case_1($q, $R);
                return;
            }
            oooi_Rotation_DQFR_case_2($q, $R);
            return;
        }
        if ($R.$get22() > $R.$get00()) {
            oooi_Rotation_DQFR_case_2($q, $R);
            return;
        }
        oooi_Rotation_DQFR_case_0($q, $R);
    } else {
        $s = oooi_Common_dSqrt($tr + 1.0);
        $q.$set00(0.5 * $s);
        var$5 = 0.5 * oooi_Common_dRecip($s);
        $q.$set15(($R.$get21() - $R.$get12()) * var$5);
        $q.$set20(($R.$get02() - $R.$get200()) * var$5);
        $q.$set30(($R.$get100() - $R.$get010()) * var$5);
    }
}
function oooi_Rotation_DQFR_case_0($q, $R) {
    var $s, var$4;
    $s = oooi_Common_dSqrt($R.$get00() - ($R.$get11() + $R.$get22()) + 1.0);
    $q.$set15(0.5 * $s);
    var$4 = 0.5 * oooi_Common_dRecip($s);
    $q.$set20(($R.$get010() + $R.$get100()) * var$4);
    $q.$set30(($R.$get200() + $R.$get02()) * var$4);
    $q.$set00(($R.$get21() - $R.$get12()) * var$4);
}
function oooi_Rotation_DQFR_case_1($q, $R) {
    var $s, var$4;
    $s = oooi_Common_dSqrt($R.$get11() - ($R.$get22() + $R.$get00()) + 1.0);
    $q.$set20(0.5 * $s);
    var$4 = 0.5 * oooi_Common_dRecip($s);
    $q.$set30(($R.$get12() + $R.$get21()) * var$4);
    $q.$set15(($R.$get010() + $R.$get100()) * var$4);
    $q.$set00(($R.$get02() - $R.$get200()) * var$4);
}
function oooi_Rotation_DQFR_case_2($q, $R) {
    var $s, var$4;
    $s = oooi_Common_dSqrt($R.$get22() - ($R.$get00() + $R.$get11()) + 1.0);
    $q.$set30(0.5 * $s);
    var$4 = 0.5 * oooi_Common_dRecip($s);
    $q.$set15(($R.$get200() + $R.$get02()) * var$4);
    $q.$set20(($R.$get12() + $R.$get21()) * var$4);
    $q.$set00(($R.$get100() - $R.$get010()) * var$4);
}
function oooi_Rotation_dDQfromW($dq, $w, $q) {
    oom_DQuaternion_set($dq, 0, 0.5 * ( -$w.$get01() * $q.$get10() - $w.$get10() * $q.$get20() - $w.$get20() * $q.$get30()));
    oom_DQuaternion_set($dq, 1, 0.5 * ($w.$get01() * $q.$get01() + $w.$get10() * $q.$get30() - $w.$get20() * $q.$get20()));
    oom_DQuaternion_set($dq, 2, 0.5 * ( -$w.$get01() * $q.$get30() + $w.$get10() * $q.$get01() + $w.$get20() * $q.$get10()));
    oom_DQuaternion_set($dq, 3, 0.5 * ($w.$get01() * $q.$get20() - $w.$get10() * $q.$get10() + $w.$get20() * $q.$get01()));
}
function oooi_DxRay$CollideRayBox() {
    jl_Object.call(this);
}
function oooi_DxRay$CollideRayBox__init_() {
    var var_0 = new oooi_DxRay$CollideRayBox();
    oooi_DxRay$CollideRayBox__init_0(var_0);
    return var_0;
}
function oooi_DxRay$CollideRayBox__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxRay$CollideRayBox_dCollideRayBox($this, $ray, $box, $flags, $contacts, $skip) {
    var $contact, $tmp_0, $s, $v, $sign, $i, $h, var$13, $lo, $hi, $n, $n_0, var$18, $k, var$20;
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $contact = ooo_DContactGeomBuffer_get($contacts, 0);
    $contact.$g1 = $ray;
    $contact.$g2 = $box;
    $contact.$side1 = (-1);
    $contact.$side2 = (-1);
    $tmp_0 = oom_DVector3__init_();
    $s = oom_DVector3__init_();
    $v = oom_DVector3__init_();
    oom_DVector3_eqDiff($tmp_0, $ray.$final_posr().$pos(), $box.$final_posr().$pos());
    ooo_OdeMath_dMultiply1_331($s, $box.$final_posr().$R(), $tmp_0);
    oom_DVector3_set1($tmp_0, $ray.$final_posr().$R().$viewCol(2));
    ooo_OdeMath_dMultiply1_331($v, $box.$final_posr().$R(), $tmp_0);
    $sign = oom_DVector3__init_();
    $i = 0;
    while ($i < 3) {
        if (oom_DVector3_get($v, $i) >= 0.0)
            oom_DVector3_set2($sign, $i, (-1.0));
        else {
            oom_DVector3_scale1($s, $i, (-1.0));
            oom_DVector3_scale1($v, $i, (-1.0));
            oom_DVector3_set2($sign, $i, 1.0);
        }
        $i = $i + 1 | 0;
    }
    a: {
        $h = $rt_createDoubleArray(3);
        var$13 = $h.data;
        var$13[0] = 0.5 * oom_DVector3_get0($box.$side);
        var$13[1] = 0.5 * oom_DVector3_get1($box.$side);
        var$13[2] = 0.5 * oom_DVector3_get2($box.$side);
        if (!(oom_DVector3_get0($s) <  -var$13[0] && oom_DVector3_get0($v) <= 0.0) && oom_DVector3_get0($s) <= var$13[0] && !(oom_DVector3_get1($s) <  -var$13[1] && oom_DVector3_get1($v) <= 0.0) && oom_DVector3_get1($s) <= var$13[1] && !(oom_DVector3_get2($s) <  -var$13[2] && oom_DVector3_get2($v) <= 0.0) && oom_DVector3_get2($s) <= var$13[2]) {
            if (oom_DVector3_get0($v) !== 0.0)
                break a;
            if (oom_DVector3_get1($v) !== 0.0)
                break a;
            if (oom_DVector3_get2($v) !== 0.0)
                break a;
        }
        return 0;
    }
    $lo = (-Infinity);
    $hi = Infinity;
    $n = 0;
    $n_0 = 0;
    var$18 = 0;
    while (var$18 < 3) {
        if (oom_DVector3_get($v, var$18) !== 0.0) {
            $k = ( -var$13[var$18] - oom_DVector3_get($s, var$18)) / oom_DVector3_get($v, var$18);
            if ($k > $lo)
                $n = var$18;
            else
                $k = $lo;
            var$20 = (var$13[var$18] - oom_DVector3_get($s, var$18)) / oom_DVector3_get($v, var$18);
            if (var$20 >= $hi)
                $lo = $k;
            else {
                $n_0 = var$18;
                $lo = $k;
                $hi = var$20;
            }
        }
        var$18 = var$18 + 1 | 0;
    }
    if ($lo > $hi)
        return 0;
    if ($lo >= 0.0) {
        $hi = $lo;
        $n_0 = $n;
    }
    if ($hi >= 0.0 && $hi <= oooi_DxRay_access$100($ray)) {
        oom_DVector3_eqSum4($contact.$pos0, $ray.$final_posr().$pos(), $ray.$final_posr().$R().$viewCol(2), $hi);
        oom_DVector3_scale(oom_DVector3_set1($contact.$normal, $box.$final_posr().$R().$viewCol($n_0)), oom_DVector3_get($sign, $n_0));
        $contact.$depth = $hi;
        return 1;
    }
    return 0;
}
function oooi_DxRay$CollideRayBox_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideRayBox($o1, $o2, $flags, $contacts, 1);
}
function oooip_DxIslandsProcessingCallContext() {
    var a = this; jl_Object.call(a);
    a.$m_world = null;
    a.$m_islandsInfo = null;
    a.$m_stepSize = 0.0;
    a.$m_stepper = null;
    a.$m_islandToProcessStorage = null;
    a.$m_stepperAllowedThreads = 0;
}
function oooip_DxIslandsProcessingCallContext__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oooip_DxIslandsProcessingCallContext();
    oooip_DxIslandsProcessingCallContext__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oooip_DxIslandsProcessingCallContext__init_0($this, $world, $islandsInfo, $stepSize, $stepper) {
    jl_Object__init_0($this);
    $this.$m_islandToProcessStorage = juca_AtomicInteger__init_0();
    $this.$m_world = $world;
    $this.$m_islandsInfo = $islandsInfo;
    $this.$m_stepSize = $stepSize;
    $this.$m_stepper = $stepper;
    $this.$m_stepperAllowedThreads = 0;
}
function oooip_DxIslandsProcessingCallContext_SetStepperAllowedThreads($this, $allowedThreadsLimit) {
    $this.$m_stepperAllowedThreads = $allowedThreadsLimit;
}
function oooip_DxIslandsProcessingCallContext_ThreadedProcessJobStart($this, $parent) {
    var $context, $stepperArena, $islandsInfo, $islandBodiesStart, $islandJointsStart, $arenaState, $stepperCallContext, $task;
    $context = $this.$m_world.$UnsafeGetWorldProcessingContext();
    $stepperArena = $context.$ObtainStepperMemArena();
    oooi_Common_dIASSERT($stepperArena !== null && oooip_DxWorldProcessMemArena_IsStructureValid($stepperArena) ? 1 : 0);
    $islandsInfo = $this.$m_islandsInfo;
    $islandBodiesStart = $islandsInfo.$GetBodiesArray();
    $islandJointsStart = $islandsInfo.$GetJointsArray();
    $arenaState = oooip_DxWorldProcessMemArena_SaveState($stepperArena);
    $stepperCallContext = oooip_DxSingleIslandCallContext__init_($this, $stepperArena, $arenaState, $islandBodiesStart, $islandJointsStart);
    $task = $parent.$subtask($rt_s(1228), oooip_DxIslandsProcessingCallContext$1__init_($this, $stepperCallContext, $parent));
    $task.$submit0();
}
function oooip_DxIslandsProcessingCallContext_ThreadedProcessIslandSearch($this, $stepperCallContext, $parent) {
    var $finalizeJob, $islandsInfo, $islandSizes, $islandsCount, $islandToProcess, $islandBodiesStartA, $islandBodiesStartP, $islandJointsStartA, $islandJointsStartP, $islandIndex, var$13, var$14, $bcount, $jcount, $searchTask, $stepperTask, $stepperArena, $context;
    $finalizeJob = 0;
    $islandsInfo = $this.$m_islandsInfo;
    $islandSizes = $islandsInfo.$GetIslandSizes();
    $islandsCount = $islandsInfo.$GetIslandsCount();
    $islandToProcess = $this.$ObtainNextIslandToBeProcessed($islandsCount);
    if ($islandToProcess == $islandsCount)
        $finalizeJob = 1;
    else {
        $islandBodiesStartA = $stepperCallContext.$GetSelectedIslandBodiesA();
        $islandBodiesStartP = $stepperCallContext.$GetSelectedIslandBodiesEndP();
        $islandJointsStartA = $stepperCallContext.$GetSelectedIslandJointsA();
        $islandJointsStartP = $stepperCallContext.$GetSelectedIslandJointsEndP();
        $islandIndex = $stepperCallContext.$m_islandIndex;
        while (true) {
            var$13 = $islandSizes.data;
            var$14 = $islandIndex * 2 | 0;
            $bcount = var$13[var$14 + 0 | 0];
            $jcount = var$13[var$14 + 1 | 0];
            if ($islandIndex == $islandToProcess)
                break;
            $islandBodiesStartP = $islandBodiesStartP + $bcount | 0;
            $islandJointsStartP = $islandJointsStartP + $jcount | 0;
            $islandIndex = $islandIndex + 1 | 0;
        }
        $stepperCallContext.$AssignIslandSelection($islandBodiesStartA, $islandBodiesStartP, $islandJointsStartA, $islandJointsStartP, $bcount, $jcount);
        var$14 = $islandIndex + 1 | 0;
        $stepperCallContext.$AssignIslandSearchProgress(var$14);
        $stepperCallContext.$RestoreSavedMemArenaStateForStepper();
        $searchTask = $parent.$subgroup($rt_s(1228), oooip_DxIslandsProcessingCallContext$2__init_($this, $stepperCallContext, $parent));
        oooip_DxStepperProcessingCallContext_AssignStepperTaskGroup($stepperCallContext.$m_stepperCallContext1, $searchTask);
        $stepperTask = $searchTask.$subtask($rt_s(1229), oooip_DxIslandsProcessingCallContext$3__init_($this, $stepperCallContext));
        $stepperTask.$submit0();
        $searchTask.$submit0();
    }
    if ($finalizeJob) {
        $stepperArena = $stepperCallContext.$m_stepperArena;
        $context = $this.$m_world.$UnsafeGetWorldProcessingContext();
        $context.$ReturnStepperMemArena($stepperArena);
    }
}
function oooip_DxIslandsProcessingCallContext_ThreadedProcessIslandStepper($this, $stepperCallContext) {
    $this.$m_stepper.$run5($stepperCallContext.$m_stepperCallContext1);
}
function oooip_DxIslandsProcessingCallContext_ObtainNextIslandToBeProcessed($this, $islandsCount) {
    return ooot_Atomics_ThrsafeIncrementSizeUpToLimit($this.$m_islandToProcessStorage, $islandsCount);
}
function oooip_DxIslandsProcessingCallContext_access$000($x0, $x1, $x2) {
    oooip_DxIslandsProcessingCallContext_ThreadedProcessIslandSearch($x0, $x1, $x2);
}
function oooip_DxIslandsProcessingCallContext_access$100($x0, $x1) {
    oooip_DxIslandsProcessingCallContext_ThreadedProcessIslandStepper($x0, $x1);
}
function kji_TypeIntrinsics() {
    jl_Object.call(this);
}
function kji_TypeIntrinsics__init_() {
    var var_0 = new kji_TypeIntrinsics();
    kji_TypeIntrinsics__init_0(var_0);
    return var_0;
}
function kji_TypeIntrinsics__init_0($this) {
    jl_Object__init_0($this);
}
function kji_TypeIntrinsics_sanitizeStackTrace($throwable) {
    return kji_Intrinsics_sanitizeStackTrace0($throwable, $rt_cls(kji_TypeIntrinsics).$getName());
}
function kji_TypeIntrinsics_throwCce($argument, $requestedClassName) {
    var $argumentClassName;
    $argumentClassName = $argument === null ? $rt_s(70) : jl_Object_getClass($argument).$getName();
    kji_TypeIntrinsics_throwCce0(jl_StringBuilder__init_().$append($argumentClassName).$append($rt_s(1230)).$append($requestedClassName).$toString());
}
function kji_TypeIntrinsics_throwCce0($message) {
    $rt_throw(kji_TypeIntrinsics_throwCce1(jl_ClassCastException__init_1($message)));
}
function kji_TypeIntrinsics_throwCce1($e) {
    $rt_throw(kji_TypeIntrinsics_sanitizeStackTrace($e));
}
function kji_TypeIntrinsics_getFunctionArity($obj) {
    if ($rt_isInstance($obj, kji_FunctionBase))
        return $obj.$getArity();
    if ($rt_isInstance($obj, kjf_Function0))
        return 0;
    if ($rt_isInstance($obj, kjf_Function1))
        return 1;
    if ($rt_isInstance($obj, kjf_Function2))
        return 2;
    if ($rt_isInstance($obj, kjf_Function3))
        return 3;
    if ($rt_isInstance($obj, kjf_Function4))
        return 4;
    if ($rt_isInstance($obj, kjf_Function5))
        return 5;
    if ($rt_isInstance($obj, kjf_Function6))
        return 6;
    if ($rt_isInstance($obj, kjf_Function7))
        return 7;
    if ($rt_isInstance($obj, kjf_Function8))
        return 8;
    if ($rt_isInstance($obj, kjf_Function9))
        return 9;
    if ($rt_isInstance($obj, kjf_Function10))
        return 10;
    if ($rt_isInstance($obj, kjf_Function11))
        return 11;
    if ($rt_isInstance($obj, kjf_Function12))
        return 12;
    if ($rt_isInstance($obj, kjf_Function13))
        return 13;
    if ($rt_isInstance($obj, kjf_Function14))
        return 14;
    if ($rt_isInstance($obj, kjf_Function15))
        return 15;
    if ($rt_isInstance($obj, kjf_Function16))
        return 16;
    if ($rt_isInstance($obj, kjf_Function17))
        return 17;
    if ($rt_isInstance($obj, kjf_Function18))
        return 18;
    if ($rt_isInstance($obj, kjf_Function19))
        return 19;
    if ($rt_isInstance($obj, kjf_Function20))
        return 20;
    if ($rt_isInstance($obj, kjf_Function21))
        return 21;
    if (!$rt_isInstance($obj, kjf_Function22))
        return (-1);
    return 22;
}
function kji_TypeIntrinsics_isFunctionOfArity($obj, $arity) {
    return $rt_isInstance($obj, k_Function) && kji_TypeIntrinsics_getFunctionArity($obj) == $arity ? 1 : 0;
}
function kji_TypeIntrinsics_beforeCheckcastToFunctionOfArity($obj, $arity) {
    if ($obj !== null && !kji_TypeIntrinsics_isFunctionOfArity($obj, $arity))
        kji_TypeIntrinsics_throwCce($obj, jl_StringBuilder__init_().$append($rt_s(1231)).$append1($arity).$toString());
    return $obj;
}
function oooi_DxQuickStep$dxQuickStepperStage6CallContext() {
    var a = this; jl_Object.call(a);
    a.$m_stepperCallContext3 = null;
    a.$m_localContext1 = null;
    a.$m_bi_6a = null;
    a.$m_bi_6b = null;
}
function oooi_DxQuickStep$dxQuickStepperStage6CallContext__init_() {
    var var_0 = new oooi_DxQuickStep$dxQuickStepperStage6CallContext();
    oooi_DxQuickStep$dxQuickStepperStage6CallContext__init_0(var_0);
    return var_0;
}
function oooi_DxQuickStep$dxQuickStepperStage6CallContext__init_1(var_0) {
    var var_1 = new oooi_DxQuickStep$dxQuickStepperStage6CallContext();
    oooi_DxQuickStep$dxQuickStepperStage6CallContext__init_2(var_1, var_0);
    return var_1;
}
function oooi_DxQuickStep$dxQuickStepperStage6CallContext__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_bi_6a = juca_AtomicInteger__init_0();
    $this.$m_bi_6b = juca_AtomicInteger__init_0();
}
function oooi_DxQuickStep$dxQuickStepperStage6CallContext_Initialize($this, $callContext, $localContext) {
    $this.$m_stepperCallContext3 = $callContext;
    $this.$m_localContext1 = $localContext;
    juca_AtomicInteger_set($this.$m_bi_6a, 0);
    juca_AtomicInteger_set($this.$m_bi_6b, 0);
}
function oooi_DxQuickStep$dxQuickStepperStage6CallContext__init_2($this, $x0) {
    oooi_DxQuickStep$dxQuickStepperStage6CallContext__init_0($this);
}
function oktjj_JsonSimple3Api() {
    jl_Object.call(this);
}
function oktjj_JsonSimple3Api__init_() {
    var var_0 = new oktjj_JsonSimple3Api();
    oktjj_JsonSimple3Api__init_0(var_0);
    return var_0;
}
function oktjj_JsonSimple3Api_parseObject($this, $text) {
    kji_Intrinsics_checkParameterIsNotNull($text, $rt_s(295));
    oktjj_JsonSimple3Object_$callClinit();
    return oktjj_JsonSimple3Object$Companion_parseObject(oktjj_JsonSimple3Object_Companion, $text);
}
function oktjj_JsonSimple3Api__init_0($this) {
    jl_Object__init_0($this);
}
function oooip_DxStepperProcessingCallContext$dmaxcallcountestimate_fn_t() {
}
function oktt_IFrameBuffer$buildAttachments$1() {
    kji_Lambda.call(this);
}
var oktt_IFrameBuffer$buildAttachments$1_INSTANCE = null;
function oktt_IFrameBuffer$buildAttachments$1_$callClinit() {
    oktt_IFrameBuffer$buildAttachments$1_$callClinit = $rt_eraseClinit(oktt_IFrameBuffer$buildAttachments$1);
    oktt_IFrameBuffer$buildAttachments$1__clinit_();
}
function oktt_IFrameBuffer$buildAttachments$1__init_() {
    var var_0 = new oktt_IFrameBuffer$buildAttachments$1();
    oktt_IFrameBuffer$buildAttachments$1__init_0(var_0);
    return var_0;
}
function oktt_IFrameBuffer$buildAttachments$1_invoke(var$0, var$1) {
    oktt_IFrameBuffer$buildAttachments$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktt_IFrameBuffer$buildAttachments$1_invoke0($this, $$this$bind) {
    var $$this$forEach$iv, var$3, $element$iv, $attachment, $texture, $filter, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, $attachment_0;
    kji_Intrinsics_checkParameterIsNotNull($$this$bind, $rt_s(33));
    $$this$forEach$iv = $$this$bind.$getAttachments0();
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $attachment = $element$iv;
        if (!$attachment.$getGlHandle()) {
            if ($attachment.$getTarget() == 36161) {
                oktg_GL_$callClinit();
                $attachment.$setGlHandle(oktg_GL_glGenRenderbuffer(oktg_GL_INSTANCE));
                oktg_GL_glBindRenderbuffer(oktg_GL_INSTANCE, 36161, $attachment.$getGlHandle());
                oktg_GL_glRenderbufferStorage(oktg_GL_INSTANCE, 36161, $attachment.$getInternalFormat(), $$this$bind.$getWidth(), $$this$bind.$getHeight());
            } else {
                a: {
                    $texture = oktt_Texture2D__init_(0, 1, null);
                    oktg_GL_$callClinit();
                    $texture.$setTextureHandle(oktg_GL_glGenTexture(oktg_GL_INSTANCE));
                    $texture.$setGlTarget($attachment.$getTexTarget());
                    if ($attachment.$getPixelFormat() == 6402) {
                        okt_APP_$callClinit();
                        if (okt_APP_getPlatformType(okt_APP_INSTANCE) == 2) {
                            $filter = 9728;
                            break a;
                        }
                    }
                    $filter = 9729;
                }
                var$8 = $$this$bind.$getWidth();
                var$9 = $$this$bind.$getHeight();
                var$10 = null;
                var$11 = $attachment.$getMipmapLevel();
                var$12 = $attachment.$getInternalFormat();
                var$13 = $attachment.$getPixelFormat();
                var$14 = $attachment.$getType();
                var$15 = null;
                oktt_ITexture2D$DefaultImpls_load$default0($texture, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $filter, $filter, 33071, 33071, 0.0, 0, 6144, var$15);
                $attachment.$setGlHandle($texture.$getTextureHandle());
                $attachment.$setTexture($texture);
            }
        }
        if ($attachment.$getTarget() != 36161) {
            oktg_GL_$callClinit();
            oktg_GL_glFramebufferTexture2D(oktg_GL_INSTANCE, 36160, $attachment.$getAttachment(), $attachment.$getTexTarget(), $attachment.$getGlHandle(), $attachment.$getMipmapLevel());
        } else {
            oktg_GL_$callClinit();
            oktg_GL_glFramebufferRenderbuffer(oktg_GL_INSTANCE, 36160, $attachment.$getAttachment(), 36161, $attachment.$getGlHandle());
            oktg_GL_glBindRenderbuffer(oktg_GL_INSTANCE, 36161, 0);
        }
    }
    if ($$this$bind.$getAttachments0().$size() > 1) {
        $attachment_0 = $$this$bind.$getAttachments0().$get1(1).$getAttachment();
        if ($attachment_0 != 36096 && $attachment_0 != 36128 && $attachment_0 != 33306)
            $$this$bind.$initBuffersOrder0($rt_createIntArray(0));
    }
}
function oktt_IFrameBuffer$buildAttachments$1__init_0(var$0) {
    oktt_IFrameBuffer$buildAttachments$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktt_IFrameBuffer$buildAttachments$1__clinit_() {
    oktt_IFrameBuffer$buildAttachments$1_INSTANCE = oktt_IFrameBuffer$buildAttachments$1__init_();
}
function ks_TransformingSequence$iterator$1() {
    var a = this; jl_Object.call(a);
    a.$iterator1 = null;
    a.$this$0166 = null;
}
function ks_TransformingSequence$iterator$1__init_(var_0) {
    var var_1 = new ks_TransformingSequence$iterator$1();
    ks_TransformingSequence$iterator$1__init_0(var_1, var_0);
    return var_1;
}
function ks_TransformingSequence$iterator$1_next($this) {
    return ks_TransformingSequence_access$getTransformer$p($this.$this$0166).$invoke1($this.$iterator1.$next());
}
function ks_TransformingSequence$iterator$1_hasNext($this) {
    return $this.$iterator1.$hasNext();
}
function ks_TransformingSequence$iterator$1__init_0($this, $$outer) {
    $this.$this$0166 = $$outer;
    jl_Object__init_0($this);
    $this.$iterator1 = ks_TransformingSequence_access$getSequence$p($$outer).$iterator();
}
function oktmb_FrustumMeshBuilder$build$1() {
    kji_Lambda.call(this);
}
var oktmb_FrustumMeshBuilder$build$1_INSTANCE = null;
function oktmb_FrustumMeshBuilder$build$1_$callClinit() {
    oktmb_FrustumMeshBuilder$build$1_$callClinit = $rt_eraseClinit(oktmb_FrustumMeshBuilder$build$1);
    oktmb_FrustumMeshBuilder$build$1__clinit_();
}
function oktmb_FrustumMeshBuilder$build$1__init_() {
    var var_0 = new oktmb_FrustumMeshBuilder$build$1();
    oktmb_FrustumMeshBuilder$build$1__init_0(var_0);
    return var_0;
}
function oktmb_FrustumMeshBuilder$build$1_invoke(var$0, var$1) {
    oktmb_FrustumMeshBuilder$build$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktmb_FrustumMeshBuilder$build$1_invoke0($this, $$this$createVerticesFloat) {
    kji_Intrinsics_checkParameterIsNotNull($$this$createVerticesFloat, $rt_s(33));
}
function oktmb_FrustumMeshBuilder$build$1__init_0(var$0) {
    oktmb_FrustumMeshBuilder$build$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktmb_FrustumMeshBuilder$build$1__clinit_() {
    oktmb_FrustumMeshBuilder$build$1_INSTANCE = oktmb_FrustumMeshBuilder$build$1__init_();
}
function oktmb_FrustumMeshBuilder$build$2() {
    kji_Lambda.call(this);
}
var oktmb_FrustumMeshBuilder$build$2_INSTANCE = null;
function oktmb_FrustumMeshBuilder$build$2_$callClinit() {
    oktmb_FrustumMeshBuilder$build$2_$callClinit = $rt_eraseClinit(oktmb_FrustumMeshBuilder$build$2);
    oktmb_FrustumMeshBuilder$build$2__clinit_();
}
function oktmb_FrustumMeshBuilder$build$2__init_() {
    var var_0 = new oktmb_FrustumMeshBuilder$build$2();
    oktmb_FrustumMeshBuilder$build$2__init_0(var_0);
    return var_0;
}
function oktmb_FrustumMeshBuilder$build$2_invoke(var$0, var$1) {
    oktmb_FrustumMeshBuilder$build$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktmb_FrustumMeshBuilder$build$2_invoke0($this, $$this$createIndicesShort) {
    kji_Intrinsics_checkParameterIsNotNull($$this$createIndicesShort, $rt_s(33));
}
function oktmb_FrustumMeshBuilder$build$2__init_0(var$0) {
    oktmb_FrustumMeshBuilder$build$2_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktmb_FrustumMeshBuilder$build$2__clinit_() {
    oktmb_FrustumMeshBuilder$build$2_INSTANCE = oktmb_FrustumMeshBuilder$build$2__init_();
}
function oktm_MATH() {
    jl_Object.call(this);
}
var oktm_MATH_INSTANCE = null;
function oktm_MATH_$callClinit() {
    oktm_MATH_$callClinit = $rt_eraseClinit(oktm_MATH);
    oktm_MATH__clinit_();
}
function oktm_MATH__init_() {
    var var_0 = new oktm_MATH();
    oktm_MATH__init_0(var_0);
    return var_0;
}
function oktm_MATH_isZero($this, $value) {
    return jl_Math_abs0($value) > 9.999999974752427E-7 ? 0 : 1;
}
function oktm_MATH_isNotZero($this, $value) {
    return jl_Math_abs0($value) <= 9.999999974752427E-7 ? 0 : 1;
}
function oktm_MATH_isEqual($this, $a, $b) {
    return jl_Math_abs0($a - $b) > 9.999999974752427E-7 ? 0 : 1;
}
function oktm_MATH__init_0($this) {
    oktm_MATH_$callClinit();
    jl_Object__init_0($this);
}
function oktm_MATH__clinit_() {
    oktm_MATH_INSTANCE = oktm_MATH__init_();
}
function oooip_DxUtil$free_block_fn_t() {
}
function oooil_CCDQuat$ccd_quat_t() {
    var a = this; jl_Object.call(a);
    a.$q0 = 0.0;
    a.$q1 = 0.0;
    a.$q2 = 0.0;
    a.$q3 = 0.0;
}
function oooil_CCDQuat$ccd_quat_t__init_() {
    var var_0 = new oooil_CCDQuat$ccd_quat_t();
    oooil_CCDQuat$ccd_quat_t__init_0(var_0);
    return var_0;
}
function oooil_CCDQuat$ccd_quat_t__init_0($this) {
    jl_Object__init_0($this);
}
function oktgg_GLTFAnimation$Companion() {
    jl_Object.call(this);
}
function oktgg_GLTFAnimation$Companion__init_() {
    var var_0 = new oktgg_GLTFAnimation$Companion();
    oktgg_GLTFAnimation$Companion__init_0(var_0);
    return var_0;
}
function oktgg_GLTFAnimation$Companion__init_1(var_0) {
    var var_1 = new oktgg_GLTFAnimation$Companion();
    oktgg_GLTFAnimation$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktgg_GLTFAnimation$Companion_vec4($this, $src, $floatStart) {
    kji_Intrinsics_checkParameterIsNotNull($src, $rt_s(1204));
    return oktm_Vec4__init_0($src.$get1($floatStart).$floatValue(), $src.$get1($floatStart + 1 | 0).$floatValue(), $src.$get1($floatStart + 2 | 0).$floatValue(), $src.$get1($floatStart + 3 | 0).$floatValue());
}
function oktgg_GLTFAnimation$Companion_vec3($this, $src, $floatStart) {
    kji_Intrinsics_checkParameterIsNotNull($src, $rt_s(1204));
    return oktm_Vec3__init_0($src.$get1($floatStart).$floatValue(), $src.$get1($floatStart + 1 | 0).$floatValue(), $src.$get1($floatStart + 2 | 0).$floatValue());
}
function oktgg_GLTFAnimation$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktgg_GLTFAnimation$Companion__init_2($this, $$constructor_marker) {
    oktgg_GLTFAnimation$Companion__init_0($this);
}
function oooip_DxWorldProcessMemoryManager() {
    var a = this; jl_Object.call(a);
    a.$m_fnAlloc = null;
    a.$m_fnShrink = null;
    a.$m_fnFree = null;
}
function oooip_DxWorldProcessMemoryManager__init_(var_0, var_1, var_2) {
    var var_3 = new oooip_DxWorldProcessMemoryManager();
    oooip_DxWorldProcessMemoryManager__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oooip_DxWorldProcessMemoryManager__init_0($this, $fnAlloc, $fnShrink, $fnFree) {
    jl_Object__init_0($this);
    $this.$m_fnAlloc = $fnAlloc;
    $this.$m_fnShrink = $fnShrink;
    $this.$m_fnFree = $fnFree;
}
function okttsg_GBufferTest() {
    jl_Object.call(this);
}
function okttsg_GBufferTest__init_() {
    var var_0 = new okttsg_GBufferTest();
    okttsg_GBufferTest__init_0(var_0);
    return var_0;
}
function okttsg_GBufferTest_getName($this) {
    return $rt_s(1232);
}
function okttsg_GBufferTest_testMain($this) {
    var $screenQuad, $gBuffer, var$3, var$4, var$5, var$6, $model;
    oktg_GL_$callClinit();
    if (oktg_GL_isGLES(oktg_GL_INSTANCE)) {
        if (oktg_GL_getGlesMajVer(oktg_GL_INSTANCE) < 3) {
            okt_APP_$callClinit();
            okt_APP_messageBox(okt_APP_INSTANCE, $rt_s(335), $rt_s(336));
            return;
        }
        if (oktg_GL_getGlesMajVer(oktg_GL_INSTANCE) == 3 && !oktg_GL_enableExtension(oktg_GL_INSTANCE, $rt_s(337))) {
            okt_APP_$callClinit();
            okt_APP_messageBox(okt_APP_INSTANCE, $rt_s(335), $rt_s(338));
            return;
        }
    }
    $screenQuad = oktm_ScreenQuad$TextureRenderer__init_(0.0, 0.0, 0.5, 0.5, null, null, 48, null);
    $gBuffer = oktt_GBuffer__init_(0, 0, 0, 0, 0, 31, null);
    oktgc_ActiveCamera_$callClinit();
    var$3 = oktgc_ActiveCamera_INSTANCE;
    var$4 = new oktgc_Camera;
    var$5 = oktm_Vec3__init_0(0.0, 3.0, (-3.0));
    oktm_IVec3_$callClinit();
    var$6 = oktm_IVec3$Companion_getZero(oktm_IVec3_Companion);
    oktgc_Camera__init_6(var$4, var$5, var$6, 2.0, 5.0);
    oktgc_ActiveCamera_setApi(var$3, var$4);
    $model = oktt_GLTFModel__init_2(0, oktgg_GLTFConf__init_1(0, 0, 0, 0, 0, 0, 0, 1, 0, 375, null), null, 5, null);
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttsg_GBufferTest$testMain$1__init_($gBuffer, $model, $screenQuad), 1, null);
}
function okttsg_GBufferTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktga_IAnimTrack$DefaultImpls() {
    jl_Object.call(this);
}
function oktga_IAnimTrack$DefaultImpls_calculateDuration($$this) {
    var $duration, $keyTimes, $i, var$5, $time;
    $duration = 0.0;
    $keyTimes = $$this.$getTimes();
    $i = 0;
    var$5 = $keyTimes.$size();
    while ($i < var$5) {
        $time = $keyTimes.$get1($i).$floatValue();
        if ($time > $duration)
            $duration = $time;
        $i = $i + 1 | 0;
    }
    $$this.$setDuration($duration);
    return $duration;
}
function jl_NoClassDefFoundError() {
    jl_LinkageError.call(this);
}
function jl_NoClassDefFoundError__init_() {
    var var_0 = new jl_NoClassDefFoundError();
    jl_NoClassDefFoundError__init_0(var_0);
    return var_0;
}
function jl_NoClassDefFoundError__init_0($this) {
    jl_LinkageError__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
}
function otci_CharFlow() {
    var a = this; jl_Object.call(a);
    a.$characters0 = null;
    a.$pointer0 = 0;
}
function otci_CharFlow__init_(var_0) {
    var var_1 = new otci_CharFlow();
    otci_CharFlow__init_0(var_1, var_0);
    return var_1;
}
function otci_CharFlow__init_0($this, $characters) {
    jl_Object__init_0($this);
    $this.$characters0 = $characters;
}
function jur_RangeSet() {
    var a = this; jur_LeafSet.call(a);
    a.$chars1 = null;
    a.$alt3 = 0;
}
function jur_RangeSet__init_(var_0) {
    var var_1 = new jur_RangeSet();
    jur_RangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_RangeSet__init_0($this, $cc) {
    jur_LeafSet__init_2($this);
    $this.$chars1 = $cc.$getInstance();
    $this.$alt3 = $cc.$alt0;
}
function jur_RangeSet_accepts($this, $strIndex, $testString) {
    return !$this.$chars1.$contains0($testString.$charAt($strIndex)) ? (-1) : 1;
}
function jur_RangeSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return jur_AbstractCharClass_intersects($this.$chars1, $set.$getChar());
    if ($set instanceof jur_RangeSet)
        return jur_AbstractCharClass_intersects0($this.$chars1, $set.$chars1);
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects0($this.$chars1, $set.$getChars0());
    if (!($set instanceof jur_SupplCharSet))
        return 1;
    return 0;
}
function jur_RangeSet_getChars($this) {
    return $this.$chars1;
}
function otjt_Float32Array() {
    otjt_ArrayBufferView.call(this);
}
function oom_DQuaternionC() {
}
function oom_DQuaternion() {
    jl_Object.call(this);
    this.$v4 = null;
}
function oom_DQuaternion__init_() {
    var var_0 = new oom_DQuaternion();
    oom_DQuaternion__init_0(var_0);
    return var_0;
}
function oom_DQuaternion__init_0($this) {
    jl_Object__init_0($this);
    $this.$v4 = $rt_createDoubleArray(4);
}
function oom_DQuaternion_toString($this) {
    var $b;
    $b = jl_StringBuffer__init_1();
    $b.$append23($rt_s(1233));
    $b.$append24($this.$get01()).$append23($rt_s(268));
    $b.$append24($this.$get10()).$append23($rt_s(268));
    $b.$append24($this.$get20()).$append23($rt_s(268));
    $b.$append24($this.$get30()).$append23($rt_s(1219));
    return $b.$toString();
}
function oom_DQuaternion_set0($this, $x0, $x1, $x2, $x3) {
    $this.$v4.data[0] = $x0;
    $this.$v4.data[1] = $x1;
    $this.$v4.data[2] = $x2;
    $this.$v4.data[3] = $x3;
    return $this;
}
function oom_DQuaternion_set1($this, $q) {
    $this.$v4.data[0] = $q.$get01();
    $this.$v4.data[1] = $q.$get10();
    $this.$v4.data[2] = $q.$get20();
    $this.$v4.data[3] = $q.$get30();
    return $this;
}
function oom_DQuaternion_scale($this, $d) {
    var var$2;
    var$2 = $this.$v4.data;
    var$2[0] = var$2[0] * $d;
    var$2 = $this.$v4.data;
    var$2[1] = var$2[1] * $d;
    var$2 = $this.$v4.data;
    var$2[2] = var$2[2] * $d;
    var$2 = $this.$v4.data;
    var$2[3] = var$2[3] * $d;
    return $this;
}
function oom_DQuaternion_get0($this) {
    return $this.$v4.data[0];
}
function oom_DQuaternion_get1($this) {
    return $this.$v4.data[1];
}
function oom_DQuaternion_get2($this) {
    return $this.$v4.data[2];
}
function oom_DQuaternion_get3($this) {
    return $this.$v4.data[3];
}
function oom_DQuaternion_set00($this, $w) {
    $this.$v4.data[0] = $w;
}
function oom_DQuaternion_set10($this, $x) {
    $this.$v4.data[1] = $x;
}
function oom_DQuaternion_set2($this, $y) {
    $this.$v4.data[2] = $y;
}
function oom_DQuaternion_set3($this, $z) {
    $this.$v4.data[3] = $z;
}
function oom_DQuaternion_sum($this, $q1, $q2, $d2) {
    $this.$v4.data[0] = $q1.$get01() + $q2.$get01() * $d2;
    $this.$v4.data[1] = $q1.$get10() + $q2.$get10() * $d2;
    $this.$v4.data[2] = $q1.$get20() + $q2.$get20() * $d2;
    $this.$v4.data[3] = $q1.$get30() + $q2.$get30() * $d2;
}
function oom_DQuaternion_set($this, $i, $d) {
    $this.$v4.data[$i] = $d;
}
function oom_DQuaternion_lengthSquared($this) {
    return $this.$get01() * $this.$get01() + $this.$get10() * $this.$get10() + $this.$get20() * $this.$get20() + $this.$get30() * $this.$get30();
}
function oom_DQuaternion_length($this) {
    return jl_Math_sqrt(oom_DQuaternion_lengthSquared($this));
}
function oom_DQuaternion_safeNormalize4($this) {
    var $d, $l;
    $d = jl_Math_abs($this.$get01());
    if (jl_Math_abs($this.$get10()) > $d)
        $d = jl_Math_abs($this.$get10());
    if (jl_Math_abs($this.$get20()) > $d)
        $d = jl_Math_abs($this.$get20());
    if (jl_Math_abs($this.$get30()) > $d)
        $d = jl_Math_abs($this.$get30());
    if ($d <= 2.2250738585072014E-308) {
        $this.$set17(1.0, 0.0, 0.0, 0.0);
        return 0;
    }
    $this.$scale4(1.0 / $d);
    $l = 1.0 / oom_DQuaternion_length($this);
    $this.$scale4($l);
    return 1;
}
function oom_DQuaternion_normalize($this) {
    if (oom_DQuaternion_safeNormalize4($this))
        return;
    $rt_throw(jl_IllegalStateException__init_(jl_StringBuilder__init_().$append($rt_s(1220)).$append14($this).$toString()));
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1() {
    jl_Object.call(this);
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1__init_() {
    var var_0 = new oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1();
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1__init_0(var_0);
    return var_0;
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1_run($this, $block_size) {
    return oooip_DxUtil$BlockPointer__init_(oooip_DxWorldProcessMemArena__init_(), 0);
}
function oooip_DxUtil$shrink_block_fn_t() {
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo$2() {
    jl_Object.call(this);
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo$2__init_() {
    var var_0 = new oooi_DxWorld$DWorldStepMemoryFunctionsInfo$2();
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo$2__init_0(var_0);
    return var_0;
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo$2__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3() {
    jl_Object.call(this);
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3__init_() {
    var var_0 = new oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3();
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3__init_0(var_0);
    return var_0;
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3_run($this, $block_pointer, $block_current_size) {
    return;
}
function oktt_Attachments() {
    jl_Object.call(this);
}
var oktt_Attachments_INSTANCE = null;
function oktt_Attachments_$callClinit() {
    oktt_Attachments_$callClinit = $rt_eraseClinit(oktt_Attachments);
    oktt_Attachments__clinit_();
}
function oktt_Attachments__init_() {
    var var_0 = new oktt_Attachments();
    oktt_Attachments__init_0(var_0);
    return var_0;
}
function oktt_Attachments_color($this, $index, $pixelFormat, $internalFormat, $type, $handle, $mipmapLevel) {
    var var$7, var$8, var$9, var$10;
    var$7 = new oktt_FrameBufferAttachment;
    var$8 = 36064 + $index | 0;
    var$9 = null;
    var$10 = null;
    oktt_FrameBufferAttachment__init_(var$7, $handle, 36160, var$8, 3553, $internalFormat, $pixelFormat, $type, $mipmapLevel, var$9, 256, var$10);
    return var$7;
}
function oktt_Attachments_color$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9) {
    oktt_Attachments_$callClinit();
    if (var$8 & 1)
        var$2 = 0;
    if (var$8 & 2)
        var$3 = 6408;
    if (var$8 & 4)
        var$4 = 6408;
    if (var$8 & 8)
        var$5 = 5121;
    if (var$8 & 16)
        var$6 = 0;
    if (var$8 & 32)
        var$7 = 0;
    return oktt_Attachments_color(var$1, var$2, var$3, var$4, var$5, var$6, var$7);
}
function oktt_Attachments_depth($this, $handle, $pixelFormat, $internalFormat, $type, $mipmapLevel) {
    var var$6, var$7, var$8;
    var$6 = new oktt_FrameBufferAttachment;
    var$7 = null;
    var$8 = null;
    oktt_FrameBufferAttachment__init_(var$6, $handle, 36160, 36096, 3553, $internalFormat, $pixelFormat, $type, $mipmapLevel, var$7, 256, var$8);
    return var$6;
}
function oktt_Attachments_depth$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    oktt_Attachments_$callClinit();
    if (var$7 & 1)
        var$2 = 0;
    if (var$7 & 2)
        var$3 = 6402;
    if (var$7 & 4)
        var$4 = 36012;
    if (var$7 & 8)
        var$5 = 5126;
    if (var$7 & 16)
        var$6 = 0;
    return oktt_Attachments_depth(var$1, var$2, var$3, var$4, var$5, var$6);
}
function oktt_Attachments_depthRenderBuffer($this, $internalFormat, $handle) {
    var var$3, var$4, var$5;
    var$3 = new oktt_FrameBufferAttachment;
    var$4 = null;
    var$5 = null;
    oktt_FrameBufferAttachment__init_(var$3, $handle, 36161, 36096, 0, $internalFormat, 0, 0, 0, var$4, 488, var$5);
    return var$3;
}
function oktt_Attachments_depthRenderBuffer$default(var$1, var$2, var$3, var$4, var$5) {
    oktt_Attachments_$callClinit();
    if (var$4 & 1)
        var$2 = 33189;
    if (var$4 & 2)
        var$3 = 0;
    return oktt_Attachments_depthRenderBuffer(var$1, var$2, var$3);
}
function oktt_Attachments_stencilRenderBuffer($this, $internalFormat, $handle) {
    var var$3, var$4, var$5;
    var$3 = new oktt_FrameBufferAttachment;
    var$4 = null;
    var$5 = null;
    oktt_FrameBufferAttachment__init_(var$3, $handle, 36161, 36128, 0, $internalFormat, 0, 0, 0, var$4, 488, var$5);
    return var$3;
}
function oktt_Attachments_stencilRenderBuffer$default(var$1, var$2, var$3, var$4, var$5) {
    oktt_Attachments_$callClinit();
    if (var$4 & 1)
        var$2 = 36168;
    if (var$4 & 2)
        var$3 = 0;
    return oktt_Attachments_stencilRenderBuffer(var$1, var$2, var$3);
}
function oktt_Attachments_depthStencilRenderBuffer($this, $internalFormat, $handle) {
    var var$3, var$4, var$5;
    var$3 = new oktt_FrameBufferAttachment;
    var$4 = null;
    var$5 = null;
    oktt_FrameBufferAttachment__init_(var$3, $handle, 36161, 33306, 0, $internalFormat, 0, 0, 0, var$4, 488, var$5);
    return var$3;
}
function oktt_Attachments_depthStencilRenderBuffer$default(var$1, var$2, var$3, var$4, var$5) {
    oktt_Attachments_$callClinit();
    if (var$4 & 1)
        var$2 = 35056;
    if (var$4 & 2)
        var$3 = 0;
    return oktt_Attachments_depthStencilRenderBuffer(var$1, var$2, var$3);
}
function oktt_Attachments__init_0($this) {
    oktt_Attachments_$callClinit();
    jl_Object__init_0($this);
}
function oktt_Attachments__clinit_() {
    oktt_Attachments_INSTANCE = oktt_Attachments__init_();
}
function oktsg_MergeVec4$Companion() {
    jl_Object.call(this);
}
function oktsg_MergeVec4$Companion__init_() {
    var var_0 = new oktsg_MergeVec4$Companion();
    oktsg_MergeVec4$Companion__init_0(var_0);
    return var_0;
}
function oktsg_MergeVec4$Companion__init_1(var_0) {
    var var_1 = new oktsg_MergeVec4$Companion();
    oktsg_MergeVec4$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_MergeVec4$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_MergeVec4$Companion__init_2($this, $$constructor_marker) {
    oktsg_MergeVec4$Companion__init_0($this);
}
function oktm_Plane$Companion() {
    jl_Object.call(this);
}
function oktm_Plane$Companion__init_0() {
    var var_0 = new oktm_Plane$Companion();
    oktm_Plane$Companion__init_1(var_0);
    return var_0;
}
function oktm_Plane$Companion__init_(var_0) {
    var var_1 = new oktm_Plane$Companion();
    oktm_Plane$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktm_Plane$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function oktm_Plane$Companion__init_2($this, $$constructor_marker) {
    oktm_Plane$Companion__init_1($this);
}
function oktm_IMesh$DefaultImpls() {
    jl_Object.call(this);
}
function oktm_IMesh$DefaultImpls_bind($$this, $shader) {
    var var$3;
    kji_Intrinsics_checkParameterIsNotNull($shader, $rt_s(1074));
    var$3 = $$this.$getVertices();
    if (var$3 !== null)
        var$3.$bind5($shader);
    var$3 = $$this.$getInstances();
    if (var$3 !== null)
        var$3.$bind5($shader);
    var$3 = $$this.$getIndices();
    if ((var$3 === null ? 0 : var$3.$getSizeInBytes0()) > 0) {
        var$3 = $$this.$getIndices();
        if (var$3 !== null)
            var$3.$bind();
    }
}
function oktm_IMesh$DefaultImpls_render($$this, $shader, $primitiveType, $offset, $count, $bind) {
    var var$7, $instances, $numInstances, $indices, var$11;
    kji_Intrinsics_checkParameterIsNotNull($shader, $rt_s(1074));
    if (!$count)
        return;
    var$7 = $$this.$getVertices();
    if (var$7 !== null && !var$7.$getHandle())
        return;
    if ($bind)
        $$this.$bind5($shader);
    $instances = $$this.$getInstances();
    $numInstances = $instances === null ? 0 : $instances.$getInstancesToRender();
    $indices = $$this.$getIndices();
    if (!($indices !== null && $indices.$getSizeInBytes0() > 0)) {
        if ($instances === null) {
            $shader.$prepareToDrawMesh0($$this);
            oktg_GL_$callClinit();
            oktg_GL_glDrawArrays(oktg_GL_INSTANCE, $primitiveType, $offset, $count);
        } else if ($numInstances > 0) {
            if (!$instances.$getHandle())
                return;
            $shader.$prepareToDrawMesh0($$this);
            oktg_GL_$callClinit();
            oktg_GL_glDrawArraysInstanced(oktg_GL_INSTANCE, $primitiveType, $offset, $count, $numInstances);
        }
    } else {
        if (($count + $offset | 0) > $indices.$getSizeInBytes0()) {
            var$11 = new jl_RuntimeException;
            var$7 = jl_StringBuilder__init_().$append($rt_s(1234));
            var$7 = var$7.$append1($count).$append($rt_s(1235)).$append1($offset).$append($rt_s(1236)).$append1($indices.$getSizeInBytes0()).$append($rt_s(561)).$toString();
            jl_RuntimeException__init_2(var$11, var$7);
            $rt_throw(var$11);
        }
        if (!$indices.$getHandle())
            return;
        if ($instances === null) {
            $shader.$prepareToDrawMesh0($$this);
            oktg_GL_$callClinit();
            oktg_GL_glDrawElements(oktg_GL_INSTANCE, $primitiveType, $count, $indices.$getType(), $rt_imul($offset, $indices.$getBytesPerIndex()));
        } else if ($numInstances > 0) {
            if (!$instances.$getHandle())
                return;
            $shader.$prepareToDrawMesh0($$this);
            oktg_GL_$callClinit();
            oktg_GL_glDrawElementsInstanced(oktg_GL_INSTANCE, $primitiveType, $count, $indices.$getType(), $rt_imul($offset, $indices.$getBytesPerIndex()), $numInstances);
        }
    }
}
function oktm_IMesh$DefaultImpls_render$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    if (var$8 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1237)));
    if (var$7 & 2)
        var$3 = var$1.$getPrimitiveType();
    if (var$7 & 4)
        var$4 = 0;
    if (var$7 & 8) {
        var$8 = var$1.$getIndices();
        if ((var$8 === null ? 0 : var$8.$getSizeInBytes0()) <= 0) {
            var$8 = var$1.$getVertices();
            var$8 = var$8 === null ? null : jl_Integer_valueOf(var$8.$getSize());
        } else {
            var$8 = var$1.$getIndices();
            var$8 = var$8 === null ? null : jl_Integer_valueOf(var$8.$getSize());
        }
        var$5 = var$8 === null ? 0 : var$8.$intValue();
    }
    if (var$7 & 16) {
        oktm_IMesh_$callClinit();
        var$6 = oktm_IMesh$Companion_getAutoBind(oktm_IMesh_Companion);
    }
    var$1.$render8(var$2, var$3, var$4, var$5, var$6);
}
function oooi_DxCapsule$CollideCapsulePlane() {
    jl_Object.call(this);
}
function oooi_DxCapsule$CollideCapsulePlane__init_() {
    var var_0 = new oooi_DxCapsule$CollideCapsulePlane();
    oooi_DxCapsule$CollideCapsulePlane__init_0(var_0);
    return var_0;
}
function oooi_DxCapsule$CollideCapsulePlane__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxCapsule$CollideCapsulePlane_dCollideCapsulePlane($this, $o1, $o2, $flags, $contacts, $skip) {
    var var$6, $planePos, $sign, $p, $k, $depth, $contact, $ncontacts, var$14, var$15, $c2, $i, $currContact;
    oooi_Common_dIASSERT($skip != 1 ? 0 : 1);
    var$6 = $flags & 65535;
    oooi_Common_dIASSERT(var$6 < 1 ? 0 : 1);
    $planePos = $o2.$getNormal();
    $sign = $planePos.$dot2($o1.$final_posr().$R().$viewCol(2)) <= 0.0 ? 1.0 : (-1.0);
    $p = $o1.$final_posr().$R().$columnAsNewVector(2);
    oom_DVector3_add(oom_DVector3_scale($p, oooi_DxCapsule_access$000($o1) * 0.5 * $sign), $o1.$final_posr().$pos());
    $k = oom_DVector3_dot($p, $planePos);
    $depth = $o2.$getDepth() - $k + oooi_DxCapsule_access$100($o1);
    if ($depth < 0.0)
        return 0;
    $contact = ooo_DContactGeomBuffer_get($contacts, 0);
    oom_DVector3_set($contact.$normal, $planePos);
    oom_DVector3_add(oom_DVector3_scale(oom_DVector3_set($contact.$pos0, $contact.$normal),  -oooi_DxCapsule_access$100($o1)), $p);
    $contact.$depth = $depth;
    $ncontacts = 1;
    if (var$6 >= 2) {
        var$14 = $o1.$final_posr().$R().$columnAsNewVector(2);
        oom_DVector3_add(oom_DVector3_scale(var$14,  -oooi_DxCapsule_access$000($o1) * 0.5 * $sign), $o1.$final_posr().$pos());
        var$15 = oom_DVector3_dot(var$14, $planePos);
        var$15 = $o2.$getDepth() - var$15 + oooi_DxCapsule_access$100($o1);
        if (var$15 >= 0.0) {
            $c2 = ooo_DContactGeomBuffer_get($contacts, $skip);
            oom_DVector3_set($c2.$normal, $planePos);
            oom_DVector3_eqSum0($c2.$pos0, var$14, $planePos,  -oooi_DxCapsule_access$100($o1));
            $c2.$depth = var$15;
            $ncontacts = 2;
        }
    }
    $i = 0;
    while ($i < $ncontacts) {
        $currContact = ooo_DContactGeomBuffer_get($contacts, $rt_imul($i, $skip));
        $currContact.$g1 = $o1;
        $currContact.$g2 = $o2;
        $currContact.$side1 = (-1);
        $currContact.$side2 = (-1);
        $i = $i + 1 | 0;
    }
    return $ncontacts;
}
function oooi_DxCapsule$CollideCapsulePlane_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideCapsulePlane($o1, $o2, $flags, $contacts, 1);
}
function okti_MOUSE() {
    jl_Object.call(this);
}
var okti_MOUSE_api = null;
var okti_MOUSE_INSTANCE = null;
function okti_MOUSE_$callClinit() {
    okti_MOUSE_$callClinit = $rt_eraseClinit(okti_MOUSE);
    okti_MOUSE__clinit_();
}
function okti_MOUSE__init_() {
    var var_0 = new okti_MOUSE();
    okti_MOUSE__init_0(var_0);
    return var_0;
}
function okti_MOUSE_setApi($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    okti_MOUSE_api = $_set___;
}
function okti_MOUSE_getX($this) {
    var var$1;
    var$1 = okti_MOUSE_api;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$1.$getX();
}
function okti_MOUSE_getY($this) {
    var var$1;
    var$1 = okti_MOUSE_api;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$1.$getY();
}
function okti_MOUSE_addListener($this, $listener) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($listener, $rt_s(469));
    var$2 = okti_MOUSE_api;
    if (var$2 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    var$2.$addListener0($listener);
}
function okti_MOUSE_reset($this) {
    var var$1;
    var$1 = okti_MOUSE_api;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    var$1.$reset1();
}
function okti_MOUSE__init_0($this) {
    okti_MOUSE_$callClinit();
    jl_Object__init_0($this);
}
function okti_MOUSE__clinit_() {
    okti_MOUSE_INSTANCE = okti_MOUSE__init_();
}
function oktgn_AdapterTransformNode() {
    jl_Object.call(this);
}
var oktgn_AdapterTransformNode_childNodesCap = null;
var oktgn_AdapterTransformNode_Companion = null;
function oktgn_AdapterTransformNode_$callClinit() {
    oktgn_AdapterTransformNode_$callClinit = $rt_eraseClinit(oktgn_AdapterTransformNode);
    oktgn_AdapterTransformNode__clinit_();
}
function oktgn_AdapterTransformNode__init_() {
    var var_0 = new oktgn_AdapterTransformNode();
    oktgn_AdapterTransformNode__init_0(var_0);
    return var_0;
}
function oktgn_AdapterTransformNode_getName($this) {
    return $rt_s(6);
}
function oktgn_AdapterTransformNode_setName($this, $$noName_0) {
    kji_Intrinsics_checkParameterIsNotNull($$noName_0, $rt_s(26));
}
function oktgn_AdapterTransformNode_getPosition($this) {
    oktm_IVec3_$callClinit();
    return oktm_IVec3$Companion_getZero(oktm_IVec3_Companion);
}
function oktgn_AdapterTransformNode_getRotation($this) {
    oktm_IVec4_$callClinit();
    return oktm_IVec4$Companion_getZero3One1(oktm_IVec4_Companion);
}
function oktgn_AdapterTransformNode_getScale($this) {
    oktm_IVec3_$callClinit();
    return oktm_IVec3$Companion_getOne(oktm_IVec3_Companion);
}
function oktgn_AdapterTransformNode_getWorldMatrix($this) {
    oktm_IMat4_$callClinit();
    return oktm_IMat4$Companion_getCap(oktm_IMat4_Companion);
}
function oktgn_AdapterTransformNode_getParentNode($this) {
    return null;
}
function oktgn_AdapterTransformNode_setParentNode($this, $$noName_0) {
    return;
}
function oktgn_AdapterTransformNode_getChildNodes($this) {
    return oktgn_AdapterTransformNode_childNodesCap;
}
function oktgn_AdapterTransformNode__init_0($this) {
    oktgn_AdapterTransformNode_$callClinit();
    jl_Object__init_0($this);
}
function oktgn_AdapterTransformNode__clinit_() {
    oktgn_AdapterTransformNode_Companion = oktgn_AdapterTransformNode$Companion__init_(null);
    oktgn_AdapterTransformNode_childNodesCap = ju_ArrayList__init_();
}
function oktgn_AdapterTransformNode_clear($this) {
    oktgn_ITransformNode$DefaultImpls_clear($this);
}
function oktgn_AdapterTransformNode_getPosition0($this, $out, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return oktgn_ITransformNode$DefaultImpls_getPosition($this, $out, $isLocal);
}
function oktgn_AdapterTransformNode_getWorldMatrix0($this, $out, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return oktgn_ITransformNode$DefaultImpls_getWorldMatrix($this, $out, $isLocal);
}
function oktgn_AdapterTransformNode_removeChildNode($this, $node) {
    kji_Intrinsics_checkParameterIsNotNull($node, $rt_s(45));
    oktgn_ITransformNode$DefaultImpls_removeChildNode($this, $node);
}
function oktgn_AdapterTransformNode_set($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return oktgn_ITransformNode$DefaultImpls_set($this, $other);
}
function oktgn_AdapterTransformNode_updateTransform($this, $recursive) {
    oktgn_ITransformNode$DefaultImpls_updateTransform($this, $recursive);
}
function jnc_MalformedInputException() {
    jnc_CharacterCodingException.call(this);
    this.$length4 = 0;
}
function jnc_MalformedInputException__init_(var_0) {
    var var_1 = new jnc_MalformedInputException();
    jnc_MalformedInputException__init_0(var_1, var_0);
    return var_1;
}
function jnc_MalformedInputException__init_0($this, $length) {
    jnc_CharacterCodingException__init_0($this);
    $this.$length4 = $length;
}
function jnc_MalformedInputException_getMessage($this) {
    return jl_StringBuilder__init_().$append($rt_s(1238)).$append1($this.$length4).$toString();
}
function oktsg_ShaderNodeLink() {
    var a = this; jl_Object.call(a);
    a.$node3 = null;
    a.$inputName = null;
}
function oktsg_ShaderNodeLink__init_(var_0, var_1) {
    var var_2 = new oktsg_ShaderNodeLink();
    oktsg_ShaderNodeLink__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktsg_ShaderNodeLink_getNode($this) {
    return $this.$node3;
}
function oktsg_ShaderNodeLink_getInputName($this) {
    return $this.$inputName;
}
function oktsg_ShaderNodeLink__init_0($this, $node, $inputName) {
    kji_Intrinsics_checkParameterIsNotNull($node, $rt_s(45));
    kji_Intrinsics_checkParameterIsNotNull($inputName, $rt_s(1239));
    jl_Object__init_0($this);
    $this.$node3 = $node;
    $this.$inputName = $inputName;
}
function oooi_DxHeightfieldData() {
    var a = this; jl_Object.call(a);
    a.$m_fWidth = 0.0;
    a.$m_fDepth = 0.0;
    a.$m_fSampleWidth = 0.0;
    a.$m_fSampleDepth = 0.0;
    a.$m_fSampleZXAspect = 0.0;
    a.$m_fInvSampleWidth = 0.0;
    a.$m_fInvSampleDepth = 0.0;
    a.$m_fHalfWidth = 0.0;
    a.$m_fHalfDepth = 0.0;
    a.$m_fMinHeight = 0.0;
    a.$m_fMaxHeight = 0.0;
    a.$m_fThickness = 0.0;
    a.$m_fScale = 0.0;
    a.$m_fOffset = 0.0;
    a.$m_nWidthSamples = 0;
    a.$m_nDepthSamples = 0;
    a.$m_bCopyHeightData = 0;
    a.$m_bWrapMode = 0;
    a.$m_nGetHeightMode = 0;
    a.$m_pHeightData = null;
    a.$m_pUserData = null;
    a.$m_contacts = null;
    a.$m_pGetHeightCallback = null;
}
function oooi_DxHeightfieldData__init_() {
    var var_0 = new oooi_DxHeightfieldData();
    oooi_DxHeightfieldData__init_0(var_0);
    return var_0;
}
function oooi_DxHeightfieldData__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_contacts = ooo_DContactGeomBuffer__init_(10);
    $this.$m_fWidth = 0.0;
    $this.$m_fDepth = 0.0;
    $this.$m_fSampleWidth = 0.0;
    $this.$m_fSampleDepth = 0.0;
    $this.$m_fSampleZXAspect = 0.0;
    $this.$m_fInvSampleWidth = 0.0;
    $this.$m_fInvSampleDepth = 0.0;
    $this.$m_fHalfWidth = 0.0;
    $this.$m_fHalfDepth = 0.0;
    $this.$m_fMinHeight = 0.0;
    $this.$m_fMaxHeight = 0.0;
    $this.$m_fThickness = 0.0;
    $this.$m_fScale = 0.0;
    $this.$m_fOffset = 0.0;
    $this.$m_nWidthSamples = 0;
    $this.$m_nDepthSamples = 0;
    $this.$m_bCopyHeightData = 0;
    $this.$m_bWrapMode = 0;
    $this.$m_nGetHeightMode = 0;
    $this.$m_pHeightData = null;
    $this.$m_pUserData = null;
    $this.$m_pGetHeightCallback = null;
}
function oktgg_GLTFAnimation$read$1() {
    kji_Lambda.call(this);
    this.$$animationSamplers0 = null;
}
function oktgg_GLTFAnimation$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFAnimation$read$1();
    oktgg_GLTFAnimation$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFAnimation$read$1_invoke(var$0, var$1) {
    oktgg_GLTFAnimation$read$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAnimation$read$1_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTFAnimation$read$1$1__init_($this));
}
function oktgg_GLTFAnimation$read$1__init_0(var$0, var$1) {
    var$0.$$animationSamplers0 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function okttsg_SSAOTest() {
    jl_Object.call(this);
}
function okttsg_SSAOTest__init_() {
    var var_0 = new okttsg_SSAOTest();
    okttsg_SSAOTest__init_0(var_0);
    return var_0;
}
function okttsg_SSAOTest_getName($this) {
    return $rt_s(1240);
}
function okttsg_SSAOTest_testMain($this) {
    var var$1, var$2;
    oktg_GL_$callClinit();
    if (oktg_GL_isGLES(oktg_GL_INSTANCE)) {
        if (oktg_GL_getGlesMajVer(oktg_GL_INSTANCE) < 3) {
            okt_APP_$callClinit();
            okt_APP_messageBox(okt_APP_INSTANCE, $rt_s(335), $rt_s(336));
            return;
        }
        if (!oktg_GL_enableExtension(oktg_GL_INSTANCE, $rt_s(337))) {
            okt_APP_$callClinit();
            okt_APP_messageBox(okt_APP_INSTANCE, $rt_s(335), $rt_s(338));
            return;
        }
    }
    var$1 = new oktt_GLTFModel;
    var$2 = oktgg_GLTFConf__init_1(0, 0, 0, 0, 0, 0, 0, 1, 0, 375, null);
    okttsg_SSAOTest$testMain$1_$callClinit();
    oktt_GLTFModel__init_(var$1, 0, var$2, okttsg_SSAOTest$testMain$1_INSTANCE, 1, null);
}
function okttsg_SSAOTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktp_IRigidBody$DefaultImpls() {
    jl_Object.call(this);
}
function oktp_IRigidBody$DefaultImpls_setPosition($$this, $x, $y, $z) {
    $$this.$setPosition3($x, $y, $z);
}
function oktt_SoundInstance() {
    var a = this; jl_Object.call(a);
    a.$element3 = null;
    a.$source2 = null;
    a.$gain = null;
    a.$panner = null;
}
function oktt_SoundInstance__init_0(var_0, var_1, var_2, var_3) {
    var var_4 = new oktt_SoundInstance();
    oktt_SoundInstance__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktt_SoundInstance_getElement($this) {
    return $this.$element3;
}
function oktt_SoundInstance_getGain($this) {
    return $this.$gain;
}
function oktt_SoundInstance_getPanner($this) {
    return $this.$panner;
}
function oktt_SoundInstance__init_($this, $element, $source, $gain, $panner) {
    kji_Intrinsics_checkParameterIsNotNull($element, $rt_s(1241));
    kji_Intrinsics_checkParameterIsNotNull($source, $rt_s(808));
    kji_Intrinsics_checkParameterIsNotNull($gain, $rt_s(809));
    kji_Intrinsics_checkParameterIsNotNull($panner, $rt_s(810));
    jl_Object__init_0($this);
    $this.$element3 = $element;
    $this.$source2 = $source;
    $this.$gain = $gain;
    $this.$panner = $panner;
}
function jm_BigInteger() {
    var a = this; jl_Number.call(a);
    a.$digits = null;
    a.$numberLength = 0;
    a.$sign1 = 0;
    a.$firstNonzeroDigit = 0;
    a.$hashCode4 = 0;
}
var jm_BigInteger_ZERO = null;
var jm_BigInteger_ONE = null;
var jm_BigInteger_TEN = null;
var jm_BigInteger_MINUS_ONE = null;
var jm_BigInteger_SMALL_VALUES = null;
var jm_BigInteger_TWO_POWS = null;
function jm_BigInteger_$callClinit() {
    jm_BigInteger_$callClinit = $rt_eraseClinit(jm_BigInteger);
    jm_BigInteger__clinit_();
}
function jm_BigInteger__init_3(var_0) {
    var var_1 = new jm_BigInteger();
    jm_BigInteger__init_4(var_1, var_0);
    return var_1;
}
function jm_BigInteger__init_5(var_0, var_1) {
    var var_2 = new jm_BigInteger();
    jm_BigInteger__init_6(var_2, var_0, var_1);
    return var_2;
}
function jm_BigInteger__init_0(var_0, var_1) {
    var var_2 = new jm_BigInteger();
    jm_BigInteger__init_7(var_2, var_0, var_1);
    return var_2;
}
function jm_BigInteger__init_(var_0, var_1, var_2) {
    var var_3 = new jm_BigInteger();
    jm_BigInteger__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
function jm_BigInteger__init_8(var_0, var_1) {
    var var_2 = new jm_BigInteger();
    jm_BigInteger__init_9(var_2, var_0, var_1);
    return var_2;
}
function jm_BigInteger__init_2(var_0, var_1) {
    var var_2 = new jm_BigInteger();
    jm_BigInteger__init_10(var_2, var_0, var_1);
    return var_2;
}
function jm_BigInteger__init_4($this, $val) {
    jm_BigInteger_$callClinit();
    jm_BigInteger__init_6($this, $val, 10);
}
function jm_BigInteger__init_6($this, $val, $radix) {
    jm_BigInteger_$callClinit();
    jl_Number__init_0($this);
    $this.$firstNonzeroDigit = (-2);
    if ($val === null)
        $rt_throw(jl_NullPointerException__init_());
    if ($radix >= 2 && $radix <= 36) {
        if ($val.$length()) {
            jm_BigInteger_setFromString($this, $val, $radix);
            return;
        }
        $rt_throw(jl_NumberFormatException__init_0($rt_s(1242)));
    }
    $rt_throw(jl_NumberFormatException__init_0($rt_s(1243)));
}
function jm_BigInteger__init_7($this, $sign, $value) {
    var var$3;
    jm_BigInteger_$callClinit();
    jl_Number__init_0($this);
    $this.$firstNonzeroDigit = (-2);
    $this.$sign1 = $sign;
    $this.$numberLength = 1;
    var$3 = $rt_createIntArray(1);
    var$3.data[0] = $value;
    $this.$digits = var$3;
}
function jm_BigInteger__init_1($this, $sign, $numberLength, $digits) {
    jm_BigInteger_$callClinit();
    jl_Number__init_0($this);
    $this.$firstNonzeroDigit = (-2);
    $this.$sign1 = $sign;
    $this.$numberLength = $numberLength;
    $this.$digits = $digits;
}
function jm_BigInteger__init_9($this, $sign, $val) {
    var var$3, var$4;
    jm_BigInteger_$callClinit();
    jl_Number__init_0($this);
    $this.$firstNonzeroDigit = (-2);
    $this.$sign1 = $sign;
    if (Long_eq(Long_and($val, new Long(0, 4294967295)), Long_ZERO)) {
        $this.$numberLength = 1;
        var$3 = $rt_createIntArray(1);
        var$3.data[0] = $val.lo;
        $this.$digits = var$3;
    } else {
        $this.$numberLength = 2;
        var$3 = $rt_createIntArray(2);
        var$4 = var$3.data;
        var$4[0] = $val.lo;
        var$4[1] = $val.hi;
        $this.$digits = var$3;
    }
}
function jm_BigInteger__init_10($this, $signum, $digits) {
    var var$3, var$4;
    jm_BigInteger_$callClinit();
    var$3 = $digits.data;
    jl_Number__init_0($this);
    $this.$firstNonzeroDigit = (-2);
    var$4 = var$3.length;
    if (var$4) {
        $this.$sign1 = $signum;
        $this.$numberLength = var$4;
        $this.$digits = $digits;
        jm_BigInteger_cutOffLeadingZeroes($this);
    } else {
        $this.$sign1 = 0;
        $this.$numberLength = 1;
        var$3 = $rt_createIntArray(1);
        var$3.data[0] = 0;
        $this.$digits = var$3;
    }
}
function jm_BigInteger_valueOf($val) {
    jm_BigInteger_$callClinit();
    if (Long_lt($val, Long_ZERO)) {
        if (Long_eq($val, Long_fromInt(-1)))
            return jm_BigInteger_MINUS_ONE;
        return jm_BigInteger__init_8((-1), Long_neg($val));
    }
    if (Long_gt($val, Long_fromInt(10)))
        return jm_BigInteger__init_8(1, $val);
    return jm_BigInteger_SMALL_VALUES.data[$val.lo];
}
function jm_BigInteger_setFromString($bi, $val, $radix) {
    var $stringLength, $sign, $substrStart, var$7, $charsPerInt, $bigRadixDigitsLength, $topChars, $digits, $bigRadix, $digitIndex, $substrStart_0, var$15, $bigRadixDigit, $newDigit, var$18;
    jm_BigInteger_$callClinit();
    $stringLength = $val.$length();
    if ($val.$charAt(0) != 45) {
        $sign = 1;
        $substrStart = 0;
        var$7 = $stringLength;
    } else {
        $sign = (-1);
        $substrStart = 1;
        var$7 = $stringLength + (-1) | 0;
    }
    jm_Conversion_$callClinit();
    $charsPerInt = jm_Conversion_digitFitInInt.data[$radix];
    $bigRadixDigitsLength = var$7 / $charsPerInt | 0;
    $topChars = var$7 % $charsPerInt | 0;
    if ($topChars)
        $bigRadixDigitsLength = $bigRadixDigitsLength + 1 | 0;
    $digits = $rt_createIntArray($bigRadixDigitsLength);
    $bigRadix = jm_Conversion_bigRadices.data[$radix - 2 | 0];
    $digitIndex = 0;
    if (!$topChars)
        $topChars = $charsPerInt;
    $substrStart_0 = $substrStart + $topChars | 0;
    while ($substrStart < $stringLength) {
        var$15 = $digits.data;
        $bigRadixDigit = jl_Integer_parseInt($val.$substring($substrStart, $substrStart_0), $radix);
        $newDigit = jm_Multiplication_multiplyByInt0($digits, $digitIndex, $bigRadix);
        var$18 = $newDigit + jm_Elementary_inplaceAdd($digits, $digitIndex, $bigRadixDigit) | 0;
        var$7 = $digitIndex + 1 | 0;
        var$15[$digitIndex] = var$18;
        var$18 = $substrStart_0 + $charsPerInt | 0;
        $digitIndex = var$7;
        $substrStart = $substrStart_0;
        $substrStart_0 = var$18;
    }
    $bi.$sign1 = $sign;
    $bi.$numberLength = $digitIndex;
    $bi.$digits = $digits;
    jm_BigInteger_cutOffLeadingZeroes($bi);
}
function jm_BigInteger_abs($this) {
    if ($this.$sign1 < 0)
        $this = jm_BigInteger__init_(1, $this.$numberLength, $this.$digits);
    return $this;
}
function jm_BigInteger_negate($this) {
    return !$this.$sign1 ? $this : jm_BigInteger__init_( -$this.$sign1, $this.$numberLength, $this.$digits);
}
function jm_BigInteger_add($this, $val) {
    return jm_Elementary_add($this, $val);
}
function jm_BigInteger_subtract($this, $val) {
    return jm_Elementary_subtract0($this, $val);
}
function jm_BigInteger_signum($this) {
    return $this.$sign1;
}
function jm_BigInteger_shiftRight($this, $n) {
    if ($n && $this.$sign1)
        return $n > 0 ? jm_BitLevel_shiftRight0($this, $n) : jm_BitLevel_shiftLeft0($this,  -$n);
    return $this;
}
function jm_BigInteger_shiftLeft($this, $n) {
    if ($n && $this.$sign1)
        return $n > 0 ? jm_BitLevel_shiftLeft0($this, $n) : jm_BitLevel_shiftRight0($this,  -$n);
    return $this;
}
function jm_BigInteger_shiftLeftOneBit($this) {
    if ($this.$sign1)
        $this = jm_BitLevel_shiftLeftOneBit0($this);
    return $this;
}
function jm_BigInteger_bitLength($this) {
    return jm_BitLevel_bitLength($this);
}
function jm_BigInteger_testBit($this, $n) {
    var $intCount, $digit, var$4, $firstNonZeroDigit;
    if (!$n)
        return !($this.$digits.data[0] & 1) ? 0 : 1;
    if ($n < 0)
        $rt_throw(jl_ArithmeticException__init_1($rt_s(1244)));
    $intCount = $n >> 5;
    if ($intCount >= $this.$numberLength)
        return $this.$sign1 >= 0 ? 0 : 1;
    $digit = $this.$digits.data[$intCount];
    var$4 = 1 << ($n & 31);
    if ($this.$sign1 < 0) {
        $firstNonZeroDigit = $this.$getFirstNonzeroDigit();
        if ($intCount < $firstNonZeroDigit)
            return 0;
        $digit = $firstNonZeroDigit == $intCount ?  -$digit : $digit ^ (-1);
    }
    return !($digit & var$4) ? 0 : 1;
}
function jm_BigInteger_getLowestSetBit($this) {
    var $i;
    if (!$this.$sign1)
        return (-1);
    $i = $this.$getFirstNonzeroDigit();
    return ($i << 5) + jl_Integer_numberOfTrailingZeros($this.$digits.data[$i]) | 0;
}
function jm_BigInteger_intValue($this) {
    return $rt_imul($this.$sign1, $this.$digits.data[0]);
}
function jm_BigInteger_longValue($this) {
    var $value;
    $value = $this.$numberLength <= 1 ? Long_and(Long_fromInt($this.$digits.data[0]), new Long(4294967295, 0)) : Long_or(Long_shl(Long_fromInt($this.$digits.data[1]), 32), Long_and(Long_fromInt($this.$digits.data[0]), new Long(4294967295, 0)));
    return Long_mul(Long_fromInt($this.$sign1), $value);
}
function jm_BigInteger_compareTo($this, $val) {
    if ($this.$sign1 > $val.$sign1)
        return 1;
    if ($this.$sign1 < $val.$sign1)
        return (-1);
    if ($this.$numberLength > $val.$numberLength)
        return $this.$sign1;
    if ($this.$numberLength < $val.$numberLength)
        return  -$val.$sign1;
    return $rt_imul($this.$sign1, jm_Elementary_compareArrays($this.$digits, $val.$digits, $this.$numberLength));
}
function jm_BigInteger_hashCode($this) {
    var $i;
    if ($this.$hashCode4)
        return $this.$hashCode4;
    $i = 0;
    while ($i < $this.$digits.data.length) {
        $this.$hashCode4 = ($this.$hashCode4 * 33 | 0) + $this.$digits.data[$i] | 0;
        $i = $i + 1 | 0;
    }
    $this.$hashCode4 = $rt_imul($this.$hashCode4, $this.$sign1);
    return $this.$hashCode4;
}
function jm_BigInteger_equals($this, $x) {
    var $x1;
    if ($this === $x)
        return 1;
    if (!($x instanceof jm_BigInteger))
        return 0;
    $x1 = $x;
    return $this.$sign1 == $x1.$sign1 && $this.$numberLength == $x1.$numberLength && $this.$equalsArrays($x1.$digits) ? 1 : 0;
}
function jm_BigInteger_equalsArrays($this, $b) {
    var $i, var$3;
    $i = $this.$numberLength - 1 | 0;
    while ($i >= 0) {
        var$3 = $b.data;
        if ($this.$digits.data[$i] != var$3[$i])
            break;
        $i = $i + (-1) | 0;
    }
    return $i >= 0 ? 0 : 1;
}
function jm_BigInteger_multiply($this, $val) {
    if (!$val.$sign1)
        return jm_BigInteger_ZERO;
    if ($this.$sign1)
        return jm_Multiplication_multiply($this, $val);
    return jm_BigInteger_ZERO;
}
function jm_BigInteger_pow($this, $exp) {
    var $x;
    if ($exp < 0)
        $rt_throw(jl_ArithmeticException__init_1($rt_s(1245)));
    if (!$exp)
        return jm_BigInteger_ONE;
    if ($exp != 1 && !$this.$equals0(jm_BigInteger_ONE) && !$this.$equals0(jm_BigInteger_ZERO)) {
        if ($this.$testBit(0))
            return jm_Multiplication_pow($this, $exp);
        $x = 1;
        while (!$this.$testBit($x)) {
            $x = $x + 1 | 0;
        }
        return jm_BigInteger_getPowerOfTwo($rt_imul($x, $exp)).$multiply($this.$shiftRight0($x).$pow0($exp));
    }
    return $this;
}
function jm_BigInteger_divideAndRemainder($this, $divisor) {
    var $divisorSign, $divisorLen, $divisorDigits, $thisDigits, $thisLen, var$7, $cmp, var$9, var$10, $thisSign, $quotientLength, $quotientSign, $quotientDigits, $remainderDigits, $result0, $result1;
    $divisorSign = $divisor.$sign1;
    if (!$divisorSign)
        $rt_throw(jl_ArithmeticException__init_1($rt_s(1246)));
    $divisorLen = $divisor.$numberLength;
    $divisorDigits = $divisor.$digits;
    if ($divisorLen == 1)
        return jm_Division_divideAndRemainderByInteger($this, $divisorDigits.data[0], $divisorSign);
    $thisDigits = $this.$digits;
    $thisLen = $this.$numberLength;
    var$7 = $rt_compare($thisLen, $divisorLen);
    $cmp = !var$7 ? jm_Elementary_compareArrays($thisDigits, $divisorDigits, $thisLen) : var$7 <= 0 ? (-1) : 1;
    if ($cmp < 0) {
        var$9 = $rt_createArray(jm_BigInteger, 2);
        var$10 = var$9.data;
        var$10[0] = jm_BigInteger_ZERO;
        var$10[1] = $this;
        return var$9;
    }
    $thisSign = $this.$sign1;
    $quotientLength = ($thisLen - $divisorLen | 0) + 1 | 0;
    $quotientSign = $thisSign != $divisorSign ? (-1) : 1;
    $quotientDigits = $rt_createIntArray($quotientLength);
    $remainderDigits = jm_Division_divide($quotientDigits, $quotientLength, $thisDigits, $thisLen, $divisorDigits, $divisorLen);
    $result0 = jm_BigInteger__init_($quotientSign, $quotientLength, $quotientDigits);
    $result1 = jm_BigInteger__init_($thisSign, $divisorLen, $remainderDigits);
    jm_BigInteger_cutOffLeadingZeroes($result0);
    jm_BigInteger_cutOffLeadingZeroes($result1);
    var$9 = $rt_createArray(jm_BigInteger, 2);
    var$10 = var$9.data;
    var$10[0] = $result0;
    var$10[1] = $result1;
    return var$9;
}
function jm_BigInteger_divide($this, $divisor) {
    var $divisorSign, $thisSign, $thisLen, $divisorLen, $val, var$7, $cmp, $resLength, $resDigits, $resSign, $result;
    if (!$divisor.$sign1)
        $rt_throw(jl_ArithmeticException__init_1($rt_s(1246)));
    $divisorSign = $divisor.$sign1;
    if ($divisor.$isOne()) {
        if ($divisor.$sign1 <= 0)
            $this = $this.$negate();
        return $this;
    }
    $thisSign = $this.$sign1;
    $thisLen = $this.$numberLength;
    $divisorLen = $divisor.$numberLength;
    if (($thisLen + $divisorLen | 0) == 2) {
        $val = Long_div(Long_and(Long_fromInt($this.$digits.data[0]), new Long(4294967295, 0)), Long_and(Long_fromInt($divisor.$digits.data[0]), new Long(4294967295, 0)));
        if ($thisSign != $divisorSign)
            $val = Long_neg($val);
        return jm_BigInteger_valueOf($val);
    }
    var$7 = $rt_compare($thisLen, $divisorLen);
    $cmp = !var$7 ? jm_Elementary_compareArrays($this.$digits, $divisor.$digits, $thisLen) : var$7 <= 0 ? (-1) : 1;
    if (!$cmp)
        return $thisSign != $divisorSign ? jm_BigInteger_MINUS_ONE : jm_BigInteger_ONE;
    if ($cmp == (-1))
        return jm_BigInteger_ZERO;
    $resLength = ($thisLen - $divisorLen | 0) + 1 | 0;
    $resDigits = $rt_createIntArray($resLength);
    $resSign = $thisSign != $divisorSign ? (-1) : 1;
    if ($divisorLen != 1)
        jm_Division_divide($resDigits, $resLength, $this.$digits, $thisLen, $divisor.$digits, $divisorLen);
    else
        jm_Division_divideArrayByInt($resDigits, $this.$digits, $thisLen, $divisor.$digits.data[0]);
    $result = jm_BigInteger__init_($resSign, $resLength, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_BigInteger_cutOffLeadingZeroes($this) {
    var var$1, var$2, var$3;
    while ($this.$numberLength > 0) {
        var$1 = $this.$digits.data;
        var$2 = $this.$numberLength - 1 | 0;
        $this.$numberLength = var$2;
        if (var$1[var$2])
            break;
    }
    var$1 = $this.$digits.data;
    var$3 = $this.$numberLength;
    $this.$numberLength = var$3 + 1 | 0;
    if (!var$1[var$3])
        $this.$sign1 = 0;
}
function jm_BigInteger_isOne($this) {
    return $this.$numberLength == 1 && $this.$digits.data[0] == 1 ? 1 : 0;
}
function jm_BigInteger_getFirstNonzeroDigit($this) {
    var $i;
    if ($this.$firstNonzeroDigit == (-2)) {
        if (!$this.$sign1)
            $i = (-1);
        else {
            $i = 0;
            while (!$this.$digits.data[$i]) {
                $i = $i + 1 | 0;
            }
        }
        $this.$firstNonzeroDigit = $i;
    }
    return $this.$firstNonzeroDigit;
}
function jm_BigInteger_getPowerOfTwo($exp) {
    var $intCount, $bitN, var$4, $resDigits, var$6;
    jm_BigInteger_$callClinit();
    if ($exp < jm_BigInteger_TWO_POWS.data.length)
        return jm_BigInteger_TWO_POWS.data[$exp];
    $intCount = $exp >> 5;
    $bitN = $exp & 31;
    var$4 = $intCount + 1 | 0;
    $resDigits = $rt_createIntArray(var$4);
    var$6 = $resDigits.data;
    var$6[$intCount] = 1 << $bitN;
    return jm_BigInteger__init_(1, var$4, $resDigits);
}
function jm_BigInteger__clinit_() {
    var var$1, var$2, $i;
    jm_BigInteger_ZERO = jm_BigInteger__init_0(0, 0);
    jm_BigInteger_ONE = jm_BigInteger__init_0(1, 1);
    jm_BigInteger_TEN = jm_BigInteger__init_0(1, 10);
    jm_BigInteger_MINUS_ONE = jm_BigInteger__init_0((-1), 1);
    var$1 = $rt_createArray(jm_BigInteger, 11);
    var$2 = var$1.data;
    var$2[0] = jm_BigInteger_ZERO;
    var$2[1] = jm_BigInteger_ONE;
    var$2[2] = jm_BigInteger__init_0(1, 2);
    var$2[3] = jm_BigInteger__init_0(1, 3);
    var$2[4] = jm_BigInteger__init_0(1, 4);
    var$2[5] = jm_BigInteger__init_0(1, 5);
    var$2[6] = jm_BigInteger__init_0(1, 6);
    var$2[7] = jm_BigInteger__init_0(1, 7);
    var$2[8] = jm_BigInteger__init_0(1, 8);
    var$2[9] = jm_BigInteger__init_0(1, 9);
    var$2[10] = jm_BigInteger_TEN;
    jm_BigInteger_SMALL_VALUES = var$1;
    jm_BigInteger_TWO_POWS = $rt_createArray(jm_BigInteger, 32);
    $i = 0;
    while ($i < jm_BigInteger_TWO_POWS.data.length) {
        jm_BigInteger_TWO_POWS.data[$i] = jm_BigInteger_valueOf(Long_shl(Long_fromInt(1), $i));
        $i = $i + 1 | 0;
    }
}
function jur_AbstractCharClass$LazyNonDigit() {
    jur_AbstractCharClass$LazyDigit.call(this);
}
function jur_AbstractCharClass$LazyNonDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonDigit();
    jur_AbstractCharClass$LazyNonDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonDigit__init_0($this) {
    jur_AbstractCharClass$LazyDigit__init_0($this);
}
function jur_AbstractCharClass$LazyNonDigit_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyDigit_computeValue($this).$setNegative(1);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
}
function oooi_Objects_H$CloneableParameter() {
    jl_Object.call(this);
}
function oooi_Objects_H$CloneableParameter__init_() {
    var var_0 = new oooi_Objects_H$CloneableParameter();
    oooi_Objects_H$CloneableParameter__init_0(var_0);
    return var_0;
}
function oooi_Objects_H$CloneableParameter__init_1(var_0) {
    var var_1 = new oooi_Objects_H$CloneableParameter();
    oooi_Objects_H$CloneableParameter__init_2(var_1, var_0);
    return var_1;
}
function oooi_Objects_H$CloneableParameter__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_Objects_H$CloneableParameter__init_2($this, $x0) {
    oooi_Objects_H$CloneableParameter__init_0($this);
}
function oooi_Objects_H$dxContactParameters() {
    var a = this; oooi_Objects_H$CloneableParameter.call(a);
    a.$max_vel = 0.0;
    a.$min_depth0 = 0.0;
}
function oooi_Objects_H$dxContactParameters__init_() {
    var var_0 = new oooi_Objects_H$dxContactParameters();
    oooi_Objects_H$dxContactParameters__init_0(var_0);
    return var_0;
}
function oooi_Objects_H$dxContactParameters__init_0($this) {
    oooi_Objects_H$CloneableParameter__init_2($this, null);
    $this.$max_vel = Infinity;
    $this.$min_depth0 = 0.0;
}
function jur_AbstractCharClass$1() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS = null;
    a.$this$0167 = null;
}
function jur_AbstractCharClass$1__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$1();
    jur_AbstractCharClass$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$1__init_0($this, $this$0, var$2) {
    $this.$this$0167 = $this$0;
    $this.$val$lHS = var$2;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$1_contains($this, $ch) {
    var $index, var$3, var$4;
    $index = $ch - 55296 | 0;
    if ($index >= 0 && $index < 2048) {
        var$3 = $this.$altSurrogates;
        var$4 = $this.$val$lHS;
        var$3 = var$3 ^ var$4.$get17($index);
    } else
        var$3 = 0;
    return var$3;
}
function jur_AbstractCharClass$2() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS0 = null;
    a.$val$thisClass = null;
    a.$this$0168 = null;
}
function jur_AbstractCharClass$2__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$2();
    jur_AbstractCharClass$2__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$2__init_0($this, $this$0, var$2, var$3) {
    $this.$this$0168 = $this$0;
    $this.$val$lHS0 = var$2;
    $this.$val$thisClass = var$3;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$2_contains($this, $ch) {
    var $index, var$3, var$4, $containslHS;
    $index = $ch - 55296 | 0;
    if ($index >= 0 && $index < 2048) {
        var$3 = $this.$altSurrogates;
        var$4 = $this.$val$lHS0;
        $containslHS = var$3 ^ var$4.$get17($index);
    } else
        $containslHS = 0;
    return $this.$val$thisClass.$contains0($ch) && !$containslHS ? 1 : 0;
}
function jur_PossessiveCompositeQuantifierSet() {
    jur_CompositeQuantifierSet.call(this);
}
function jur_PossessiveCompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_PossessiveCompositeQuantifierSet();
    jur_PossessiveCompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_PossessiveCompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type);
}
function jur_PossessiveCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, $shift;
    $min = $this.$quantifier.$min0();
    $max = $this.$quantifier.$max0();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound())
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $this.$next0.$matches($stringIndex, $testString, $matchResult);
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function oooi_CollideCylinderBox() {
    oooi_DxCollisionUtil.call(this);
}
function oooi_CollideCylinderBox__init_() {
    var var_0 = new oooi_CollideCylinderBox();
    oooi_CollideCylinderBox__init_0(var_0);
    return var_0;
}
function oooi_CollideCylinderBox__init_0($this) {
    oooi_DxCollisionUtil__init_0($this);
}
function oooi_CollideCylinderBox_dCollideCylinderBox($this, $o1, $o2, $flags, $contacts, $skip) {
    var $cData;
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $cData = oooi_CollideCylinderBox$sCylinderBoxData__init_($this, $o1, $o2, $flags, $contacts, $skip, null);
    return oooi_CollideCylinderBox$sCylinderBoxData_access$100($cData);
}
function oooi_CollideCylinderBox_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return oooi_CollideCylinderBox_dCollideCylinderBox($this, $o1, $o2, $flags, $contacts, 1);
}
function oktga_AnimPlayer$Companion() {
    jl_Object.call(this);
}
function oktga_AnimPlayer$Companion__init_() {
    var var_0 = new oktga_AnimPlayer$Companion();
    oktga_AnimPlayer$Companion__init_0(var_0);
    return var_0;
}
function oktga_AnimPlayer$Companion__init_1(var_0) {
    var var_1 = new oktga_AnimPlayer$Companion();
    oktga_AnimPlayer$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktga_AnimPlayer$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktga_AnimPlayer$Companion__init_2($this, $$constructor_marker) {
    oktga_AnimPlayer$Companion__init_0($this);
}
function oooi_DxBox$TstClass() {
    var a = this; jl_Object.call(a);
    a.$_code = 0;
    a.$_normalR_M = null;
    a.$_normalR_col = 0;
    a.$_normalC = null;
    a.$_s = 0.0;
    a.$_fudge_factor = 0.0;
    a.$_flags = 0;
    a.$_invert_normal = 0;
    a.$_break = 0;
}
function oooi_DxBox$TstClass__init_(var_0, var_1) {
    var var_2 = new oooi_DxBox$TstClass();
    oooi_DxBox$TstClass__init_0(var_2, var_0, var_1);
    return var_2;
}
function oooi_DxBox$TstClass__init_0($this, $flags, $fudge_factor) {
    jl_Object__init_0($this);
    $this.$_normalC = oom_DVector3__init_();
    $this.$_break = 0;
    $this.$_flags = $flags;
    $this.$_fudge_factor = $fudge_factor;
}
function ooo_OdeConfig() {
    jl_Object.call(this);
}
var ooo_OdeConfig_dLIBCCD = 0;
var ooo_OdeConfig_ENABLE_CONTACT_SORTING = 0;
var ooo_OdeConfig_dTRIMESH_TYPE = null;
function ooo_OdeConfig_$callClinit() {
    ooo_OdeConfig_$callClinit = $rt_eraseClinit(ooo_OdeConfig);
    ooo_OdeConfig__clinit_();
}
function ooo_OdeConfig__init_() {
    var var_0 = new ooo_OdeConfig();
    ooo_OdeConfig__init_0(var_0);
    return var_0;
}
function ooo_OdeConfig__init_0($this) {
    ooo_OdeConfig_$callClinit();
    jl_Object__init_0($this);
}
function ooo_OdeConfig_isLibCCDEndabled() {
    ooo_OdeConfig_$callClinit();
    return ooo_OdeConfig_dLIBCCD;
}
function ooo_OdeConfig_setLibCCDEndabled($enable) {
    ooo_OdeConfig_$callClinit();
    ooo_OdeConfig_dLIBCCD = $enable;
}
function ooo_OdeConfig__clinit_() {
    ooo_OdeConfig_dLIBCCD = 1;
    ooo_OdeConfig_ENABLE_CONTACT_SORTING = 1;
    ooo_OdeConfig$TRIMESH_$callClinit();
    ooo_OdeConfig_dTRIMESH_TYPE = ooo_OdeConfig$TRIMESH_GIMPACT;
}
function oktgg_GLTFSampler$read$1() {
    kji_Lambda.call(this);
    this.$this$0169 = null;
}
function oktgg_GLTFSampler$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFSampler$read$1();
    oktgg_GLTFSampler$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFSampler$read$1_invoke(var$0, var$1) {
    oktgg_GLTFSampler$read$1_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFSampler$read$1_invoke0($this, $it) {
    oktgg_GLTFSampler_setMinFilter($this.$this$0169, $it);
}
function oktgg_GLTFSampler$read$1__init_0(var$0, var$1) {
    var$0.$this$0169 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFAnimation$read$2() {
    var a = this; kji_Lambda.call(a);
    a.$this$044 = null;
    a.$$animationSamplers = null;
}
function oktgg_GLTFAnimation$read$2__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFAnimation$read$2();
    oktgg_GLTFAnimation$read$2__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFAnimation$read$2_invoke(var$0, var$1) {
    oktgg_GLTFAnimation$read$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAnimation$read$2_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTFAnimation$read$2$1__init_($this));
}
function oktgg_GLTFAnimation$read$2__init_0(var$0, var$1, var$2) {
    var$0.$this$044 = var$1;
    var$0.$$animationSamplers = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function otjw_AudioContext() {
    jl_Object.call(this);
}
function otjw_AudioContext_create$js_body$_44() {
    var Context = window.AudioContext || window.webkitAudioContext;
    return new Context();
}
function oktgg_GLTFSampler$read$4() {
    kji_Lambda.call(this);
    this.$this$0170 = null;
}
function oktgg_GLTFSampler$read$4__init_(var_0) {
    var var_1 = new oktgg_GLTFSampler$read$4();
    oktgg_GLTFSampler$read$4__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFSampler$read$4_invoke(var$0, var$1) {
    oktgg_GLTFSampler$read$4_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFSampler$read$4_invoke0($this, $it) {
    oktgg_GLTFSampler_setWrapT($this.$this$0170, $it);
}
function oktgg_GLTFSampler$read$4__init_0(var$0, var$1) {
    var$0.$this$0170 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jur_UCISequenceSet() {
    jur_LeafSet.call(this);
    this.$string6 = null;
}
function jur_UCISequenceSet__init_(var_0) {
    var var_1 = new jur_UCISequenceSet();
    jur_UCISequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISequenceSet__init_0($this, $substring) {
    var $res, $i;
    jur_LeafSet__init_2($this);
    $res = jl_StringBuilder__init_();
    $i = 0;
    while ($i < $substring.$length()) {
        $res.$append12(jl_Character_toLowerCase(jl_Character_toUpperCase($substring.$charAt($i))));
        $i = $i + 1 | 0;
    }
    $this.$string6 = $res.$toString();
    $this.$charCount0 = $res.$length();
}
function jur_UCISequenceSet_accepts($this, $strIndex, $testString) {
    var $i;
    $i = 0;
    while (true) {
        if ($i >= $this.$string6.$length())
            return $this.$string6.$length();
        if ($this.$string6.$charAt($i) != jl_Character_toLowerCase(jl_Character_toUpperCase($testString.$charAt($strIndex + $i | 0))))
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function oktgg_GLTFSampler$read$2() {
    kji_Lambda.call(this);
    this.$this$0171 = null;
}
function oktgg_GLTFSampler$read$2__init_(var_0) {
    var var_1 = new oktgg_GLTFSampler$read$2();
    oktgg_GLTFSampler$read$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFSampler$read$2_invoke(var$0, var$1) {
    oktgg_GLTFSampler$read$2_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFSampler$read$2_invoke0($this, $it) {
    oktgg_GLTFSampler_setMagFilter($this.$this$0171, $it);
}
function oktgg_GLTFSampler$read$2__init_0(var$0, var$1) {
    var$0.$this$0171 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jur_AbstractCharClass$LazyJavaDefined$1() {
    jur_AbstractCharClass.call(this);
    this.$this$0172 = null;
}
function jur_AbstractCharClass$LazyJavaDefined$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaDefined$1();
    jur_AbstractCharClass$LazyJavaDefined$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaDefined$1__init_0($this, $this$0) {
    $this.$this$0172 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaDefined$1_contains($this, $ch) {
    return jl_Character_isDefined($ch);
}
function oktgg_GLTFSampler$read$3() {
    kji_Lambda.call(this);
    this.$this$0173 = null;
}
function oktgg_GLTFSampler$read$3__init_(var_0) {
    var var_1 = new oktgg_GLTFSampler$read$3();
    oktgg_GLTFSampler$read$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFSampler$read$3_invoke(var$0, var$1) {
    oktgg_GLTFSampler$read$3_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFSampler$read$3_invoke0($this, $it) {
    oktgg_GLTFSampler_setWrapS($this.$this$0173, $it);
}
function oktgg_GLTFSampler$read$3__init_0(var$0, var$1) {
    var$0.$this$0173 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktsg_ToneMapNode$Companion() {
    jl_Object.call(this);
}
function oktsg_ToneMapNode$Companion__init_0() {
    var var_0 = new oktsg_ToneMapNode$Companion();
    oktsg_ToneMapNode$Companion__init_1(var_0);
    return var_0;
}
function oktsg_ToneMapNode$Companion__init_(var_0) {
    var var_1 = new oktsg_ToneMapNode$Companion();
    oktsg_ToneMapNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_ToneMapNode$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function oktsg_ToneMapNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_ToneMapNode$Companion__init_1($this);
}
function oktgl_DirectionalLight() {
    var a = this; jl_Object.call(a);
    a.$shadowMaps = null;
    a.$viewProjectionMatrices = null;
    a.$shadowFrameBuffers = null;
    a.$shadowCascadesNum = 0;
    a.$shadowCascadeEnd = null;
    a.$lightPositionOffset = 0.0;
    a.$lightIntensity = 0.0;
    a.$color1 = null;
    a.$direction1 = null;
    a.$name38 = null;
    a.$isLightEnabled = 0;
    a.$isShadowEnabled = 0;
}
var oktgl_DirectionalLight_ShadowMapsCap = null;
var oktgl_DirectionalLight_ShadowFrameBuffersCap = null;
var oktgl_DirectionalLight_ViewProjectionMatricesCap = null;
var oktgl_DirectionalLight_lightViewTmp = null;
var oktgl_DirectionalLight_lightPos = null;
var oktgl_DirectionalLight_centroid = null;
var oktgl_DirectionalLight_tmpCam = null;
var oktgl_DirectionalLight_subFrustumPoints = null;
var oktgl_DirectionalLight_Companion = null;
function oktgl_DirectionalLight_$callClinit() {
    oktgl_DirectionalLight_$callClinit = $rt_eraseClinit(oktgl_DirectionalLight);
    oktgl_DirectionalLight__clinit_();
}
function oktgl_DirectionalLight__init_0(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktgl_DirectionalLight();
    oktgl_DirectionalLight__init_1(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktgl_DirectionalLight__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new oktgl_DirectionalLight();
    oktgl_DirectionalLight__init_2(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function oktgl_DirectionalLight__init_3() {
    var var_0 = new oktgl_DirectionalLight();
    oktgl_DirectionalLight__init_4(var_0);
    return var_0;
}
function oktgl_DirectionalLight_getLightType($this) {
    return 1;
}
function oktgl_DirectionalLight_getShadowMaps($this) {
    return $this.$shadowMaps;
}
function oktgl_DirectionalLight_setShadowMaps($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$shadowMaps = $_set___;
}
function oktgl_DirectionalLight_getViewProjectionMatrices($this) {
    return $this.$viewProjectionMatrices;
}
function oktgl_DirectionalLight_setViewProjectionMatrices($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$viewProjectionMatrices = $_set___;
}
function oktgl_DirectionalLight_getShadowCascadesNum($this) {
    return $this.$shadowCascadesNum;
}
function oktgl_DirectionalLight_getShadowCascadeEnd($this) {
    return $this.$shadowCascadeEnd;
}
function oktgl_DirectionalLight_getLightPositionOffset($this) {
    return $this.$lightPositionOffset;
}
function oktgl_DirectionalLight_setLightPositionOffset($this, $_set___) {
    $this.$lightPositionOffset = $_set___;
}
function oktgl_DirectionalLight_setupShadowMaps($this, $width, $height) {
    var var$3, var$4, var$5, var$6, $depthBuffer, var$8, var$9, var$10, var$11;
    var$3 = $this.$shadowCascadesNum;
    var$4 = $rt_createArray(oktt_IFrameBuffer, var$3);
    var$5 = 0;
    while (var$5 < var$3) {
        var$6 = var$4.data;
        $depthBuffer = oktt_FrameBuffer__init_0($width, $height);
        var$8 = oktt_FrameBuffer_getAttachments($depthBuffer);
        oktt_Attachments_$callClinit();
        var$8.$add1(oktt_Attachments_depth$default(oktt_Attachments_INSTANCE, 0, 0, 0, 0, 0, 31, null));
        oktt_FrameBuffer_buildAttachments($depthBuffer);
        var$6[var$5] = $depthBuffer;
        var$5 = var$5 + 1 | 0;
    }
    var$6 = $rt_createArray(jl_Float, 4);
    var$9 = var$6.data;
    oktgc_ActiveCamera_$callClinit();
    var$9[0] = jl_Float_valueOf(oktgc_ActiveCamera_getFar(oktgc_ActiveCamera_INSTANCE) * 0.05000000074505806);
    var$9[1] = jl_Float_valueOf(oktgc_ActiveCamera_getFar(oktgc_ActiveCamera_INSTANCE) * 0.10000000149011612);
    var$9[2] = jl_Float_valueOf(oktgc_ActiveCamera_getFar(oktgc_ActiveCamera_INSTANCE) * 0.4000000059604645);
    var$9[3] = jl_Float_valueOf(oktgc_ActiveCamera_getFar(oktgc_ActiveCamera_INSTANCE));
    $this.$shadowCascadeEnd = var$6;
    var$10 = $this.$shadowCascadesNum;
    var$6 = $rt_createArray(oktm_IMat4, var$10);
    var$11 = 0;
    while (var$11 < var$10) {
        var$6.data[var$11] = oktm_Mat4__init_();
        var$11 = var$11 + 1 | 0;
    }
    oktgl_DirectionalLight_setViewProjectionMatrices($this, var$6);
    var$10 = $this.$shadowCascadesNum;
    var$6 = $rt_createArray(oktt_ITexture, var$10);
    var$11 = 0;
    while (var$11 < var$10) {
        var$6.data[var$11] = var$4.data[var$11].$getTexture(0);
        var$11 = var$11 + 1 | 0;
    }
    oktgl_DirectionalLight_setShadowMaps($this, var$6);
    $this.$shadowFrameBuffers = var$4;
}
function oktgl_DirectionalLight_renderShadowMaps($this, $scene) {
    var $sceneCameraFrustumPoints, $camFarSubNear, $channel, $tmp_0, $shadowFrameBuffers, $i, var$8;
    kji_Intrinsics_checkParameterIsNotNull($scene, $rt_s(328));
    if (oktgl_DirectionalLight_isShadowEnabled($this)) {
        oktgc_ActiveCamera_$callClinit();
        $sceneCameraFrustumPoints = oktm_Frustum_getPoints(oktgc_ActiveCamera_getFrustum(oktgc_ActiveCamera_INSTANCE));
        $camFarSubNear = oktgc_ActiveCamera_getFar(oktgc_ActiveCamera_INSTANCE);
        $channel = $scene.$getShaderChannel();
        oktg_ShaderChannel_$callClinit();
        $scene.$setShaderChannel(oktg_ShaderChannel_getDepth(oktg_ShaderChannel_INSTANCE));
        $tmp_0 = oktgc_ActiveCamera_getApi(oktgc_ActiveCamera_INSTANCE);
        oktgc_ActiveCamera_setApi(oktgc_ActiveCamera_INSTANCE, oktgl_DirectionalLight_tmpCam);
        oktgc_Camera_getDirection(oktgl_DirectionalLight_tmpCam).$set11($this.$direction1);
        oktgc_Camera_setNear(oktgl_DirectionalLight_tmpCam, 0.0);
        oktgc_Camera_setOrthographic(oktgl_DirectionalLight_tmpCam, 1);
        oktgc_Camera_getUp(oktgl_DirectionalLight_tmpCam).$set44(0.0, 1.0, 0.0);
        $shadowFrameBuffers = $this.$shadowFrameBuffers;
        $i = 0;
        var$8 = $this.$shadowCascadesNum;
        while ($i < var$8) {
            $shadowFrameBuffers.data[$i].$render(oktgl_DirectionalLight$renderShadowMaps$1__init_($this, $i, $camFarSubNear, $sceneCameraFrustumPoints, $scene));
            $i = $i + 1 | 0;
        }
        oktgc_ActiveCamera_setApi(oktgc_ActiveCamera_INSTANCE, $tmp_0);
        $scene.$setShaderChannel($channel);
    }
}
function oktgl_DirectionalLight_getLightIntensity($this) {
    return $this.$lightIntensity;
}
function oktgl_DirectionalLight_setLightIntensity($this, $_set___) {
    $this.$lightIntensity = $_set___;
}
function oktgl_DirectionalLight_getColor($this) {
    return $this.$color1;
}
function oktgl_DirectionalLight_getDirection($this) {
    return $this.$direction1;
}
function oktgl_DirectionalLight_isLightEnabled($this) {
    return $this.$isLightEnabled;
}
function oktgl_DirectionalLight_isShadowEnabled($this) {
    return $this.$isShadowEnabled;
}
function oktgl_DirectionalLight_setShadowEnabled($this, $_set___) {
    $this.$isShadowEnabled = $_set___;
}
function oktgl_DirectionalLight__init_1($this, $lightIntensity, $color, $direction, $name, $isLightEnabled, $isShadowEnabled) {
    oktgl_DirectionalLight_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($color, $rt_s(623));
    kji_Intrinsics_checkParameterIsNotNull($direction, $rt_s(58));
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    jl_Object__init_0($this);
    $this.$lightIntensity = $lightIntensity;
    $this.$color1 = $color;
    $this.$direction1 = $direction;
    $this.$name38 = $name;
    $this.$isLightEnabled = $isLightEnabled;
    $this.$isShadowEnabled = $isShadowEnabled;
    $this.$shadowMaps = oktgl_DirectionalLight_ShadowMapsCap;
    $this.$viewProjectionMatrices = oktgl_DirectionalLight_ViewProjectionMatricesCap;
    $this.$shadowFrameBuffers = oktgl_DirectionalLight_ShadowFrameBuffersCap;
    $this.$shadowCascadesNum = 4;
    $this.$shadowCascadeEnd = $rt_createArray(jl_Float, 0);
}
function oktgl_DirectionalLight__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    oktgl_DirectionalLight_$callClinit();
    if (var$7 & 1)
        var$1 = 1.0;
    if (var$7 & 2)
        var$2 = oktm_Vec3__init_2(1.0);
    if (var$7 & 4)
        var$3 = oktm_Vec3__init_0((-1.0), (-1.0), (-1.0)).$nor();
    if (var$7 & 8)
        var$4 = $rt_s(6);
    if (var$7 & 16)
        var$5 = 1;
    if (var$7 & 32)
        var$6 = 0;
    oktgl_DirectionalLight__init_1(var$0, var$1, var$2, var$3, var$4, var$5, var$6);
}
function oktgl_DirectionalLight__init_4(var$0) {
    oktgl_DirectionalLight_$callClinit();
    oktgl_DirectionalLight__init_2(var$0, 0.0, null, null, null, 0, 0, 63, null);
}
function oktgl_DirectionalLight__clinit_() {
    var var$1, var$2, var$3;
    oktgl_DirectionalLight_Companion = oktgl_DirectionalLight$Companion__init_1(null);
    var$1 = $rt_createArray(oktt_ITexture, 0);
    var$2 = 0;
    while (var$2 < 0) {
        var$1.data[var$2] = oktt_Texture2D__init_(0, 1, null);
        var$2 = var$2 + 1 | 0;
    }
    oktgl_DirectionalLight_ShadowMapsCap = var$1;
    var$1 = $rt_createArray(oktt_IFrameBuffer, 0);
    var$2 = 0;
    while (var$2 < 0) {
        var$1.data[var$2] = oktt_FrameBuffer__init_1(0, 0, 3, null);
        var$2 = var$2 + 1 | 0;
    }
    oktgl_DirectionalLight_ShadowFrameBuffersCap = var$1;
    var$1 = $rt_createArray(oktm_IMat4, 0);
    var$2 = 0;
    while (var$2 < 0) {
        var$1.data[var$2] = oktm_Mat4__init_();
        var$2 = var$2 + 1 | 0;
    }
    oktgl_DirectionalLight_ViewProjectionMatricesCap = var$1;
    oktgl_DirectionalLight_lightViewTmp = oktm_Mat4__init_();
    oktgl_DirectionalLight_lightPos = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktgl_DirectionalLight_centroid = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktgl_DirectionalLight_tmpCam = oktgc_Camera__init_(null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null);
    var$1 = $rt_createArray(oktm_IVec3, 8);
    var$3 = 0;
    while (var$3 < 8) {
        var$1.data[var$3] = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
        var$3 = var$3 + 1 | 0;
    }
    oktgl_DirectionalLight_subFrustumPoints = var$1;
}
function oktgl_DirectionalLight_access$getShadowMapsCap$cp() {
    oktgl_DirectionalLight_$callClinit();
    return oktgl_DirectionalLight_ShadowMapsCap;
}
function oktgl_DirectionalLight_access$getViewProjectionMatricesCap$cp() {
    oktgl_DirectionalLight_$callClinit();
    return oktgl_DirectionalLight_ViewProjectionMatricesCap;
}
function oktgl_DirectionalLight_access$getLightViewTmp$cp() {
    oktgl_DirectionalLight_$callClinit();
    return oktgl_DirectionalLight_lightViewTmp;
}
function oktgl_DirectionalLight_access$getLightPos$cp() {
    oktgl_DirectionalLight_$callClinit();
    return oktgl_DirectionalLight_lightPos;
}
function oktgl_DirectionalLight_access$getCentroid$cp() {
    oktgl_DirectionalLight_$callClinit();
    return oktgl_DirectionalLight_centroid;
}
function oktgl_DirectionalLight_access$getTmpCam$cp() {
    oktgl_DirectionalLight_$callClinit();
    return oktgl_DirectionalLight_tmpCam;
}
function oktgl_DirectionalLight_access$getSubFrustumPoints$cp() {
    oktgl_DirectionalLight_$callClinit();
    return oktgl_DirectionalLight_subFrustumPoints;
}
function oooi_Objects_H$dxDampingParameters() {
    var a = this; jl_Object.call(a);
    a.$linear_scale = 0.0;
    a.$angular_scale = 0.0;
    a.$linear_threshold = 0.0;
    a.$angular_threshold = 0.0;
}
function oooi_Objects_H$dxDampingParameters__init_() {
    var var_0 = new oooi_Objects_H$dxDampingParameters();
    oooi_Objects_H$dxDampingParameters__init_0(var_0);
    return var_0;
}
function oooi_Objects_H$dxDampingParameters_clone($this) {
    var var$1, $e, $$je;
    a: {
        try {
            var$1 = jl_Object_clone($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_CloneNotSupportedException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    $rt_throw(jl_RuntimeException__init_3($e));
}
function oooi_Objects_H$dxDampingParameters__init_0($this) {
    jl_Object__init_0($this);
    $this.$linear_scale = 0.0;
    $this.$angular_scale = 0.0;
    $this.$linear_threshold = 1.0E-4;
    $this.$angular_threshold = 1.0E-4;
}
function kt_DelimitedRangesSequence() {
    var a = this; jl_Object.call(a);
    a.$input0 = null;
    a.$startIndex0 = 0;
    a.$limit1 = 0;
    a.$getNextMatch = null;
}
function kt_DelimitedRangesSequence__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new kt_DelimitedRangesSequence();
    kt_DelimitedRangesSequence__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function kt_DelimitedRangesSequence_iterator($this) {
    var var$1;
    var$1 = kt_DelimitedRangesSequence$iterator$1__init_($this);
    return var$1;
}
function kt_DelimitedRangesSequence__init_0($this, $input, $startIndex, $limit, $getNextMatch) {
    kji_Intrinsics_checkParameterIsNotNull($input, $rt_s(374));
    kji_Intrinsics_checkParameterIsNotNull($getNextMatch, $rt_s(1247));
    jl_Object__init_0($this);
    $this.$input0 = $input;
    $this.$startIndex0 = $startIndex;
    $this.$limit1 = $limit;
    $this.$getNextMatch = $getNextMatch;
}
function kt_DelimitedRangesSequence_access$getLimit$p($$this) {
    return $$this.$limit1;
}
function kt_DelimitedRangesSequence_access$getInput$p($$this) {
    return $$this.$input0;
}
function kt_DelimitedRangesSequence_access$getGetNextMatch$p($$this) {
    return $$this.$getNextMatch;
}
function kt_DelimitedRangesSequence_access$getStartIndex$p($$this) {
    return $$this.$startIndex0;
}
function oktgg_GLTFAccessor$read$6() {
    kji_Lambda.call(this);
    this.$this$0174 = null;
}
function oktgg_GLTFAccessor$read$6__init_(var_0) {
    var var_1 = new oktgg_GLTFAccessor$read$6();
    oktgg_GLTFAccessor$read$6__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFAccessor$read$6_invoke(var$0, var$1) {
    oktgg_GLTFAccessor$read$6_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAccessor$read$6_invoke0($this, $$this$get) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    oktgg_GLTFAccessor_setSparse($this.$this$0174, oktgg_GLTFSparse__init_1(0, 1, null));
    var$2 = oktgg_GLTFAccessor_getSparse($this.$this$0174);
    if (var$2 !== null)
        oktgg_GLTFSparse_read(var$2, $$this$get);
}
function oktgg_GLTFAccessor$read$6__init_0(var$0, var$1) {
    var$0.$this$0174 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFAccessor$read$5() {
    kji_Lambda.call(this);
    this.$this$0175 = null;
}
function oktgg_GLTFAccessor$read$5__init_(var_0) {
    var var_1 = new oktgg_GLTFAccessor$read$5();
    oktgg_GLTFAccessor$read$5__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFAccessor$read$5_invoke(var$0, var$1) {
    oktgg_GLTFAccessor$read$5_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAccessor$read$5_invoke0($this, $$this$array) {
    var var$2, var$3, var$4, var$5;
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    var$2 = $this.$this$0175;
    var$3 = $$this$array.$getSize();
    var$4 = $rt_createFloatArray(var$3);
    var$5 = 0;
    while (var$5 < var$3) {
        var$4.data[var$5] = $$this$array.$float0(var$5);
        var$5 = var$5 + 1 | 0;
    }
    oktgg_GLTFAccessor_setMin(var$2, var$4);
}
function oktgg_GLTFAccessor$read$5__init_0(var$0, var$1) {
    var$0.$this$0175 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA() {
    var a = this; jl_Object.call(a);
    a.$u = 0.0;
    a.$v0 = 0.0;
    a.$tparam = 0.0;
    a.$m_face_id = 0;
    a.$m_point0 = null;
    a.$m_normal0 = null;
}
function oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA__init_() {
    var var_0 = new oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA();
    oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA__init_0(var_0);
    return var_0;
}
function oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_point0 = oooig_GimGeometry$vec3f__init_();
    $this.$m_normal0 = oooig_GimGeometry$vec3f__init_();
}
function oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA_getPoint($this) {
    return $this.$m_point0;
}
function oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA_getNormal($this) {
    return $this.$m_normal0;
}
function oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA_getU($this) {
    return $this.$u;
}
function oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA_getV($this) {
    return $this.$v0;
}
function oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA_getTParam($this) {
    return $this.$tparam;
}
function oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA_getFaceID($this) {
    return $this.$m_face_id;
}
function oktmb_FrustumMeshBuilder() {
    oktmb_MeshBuilder.call(this);
    this.$frustumPoints = null;
}
var oktmb_FrustumMeshBuilder_Companion = null;
function oktmb_FrustumMeshBuilder_$callClinit() {
    oktmb_FrustumMeshBuilder_$callClinit = $rt_eraseClinit(oktmb_FrustumMeshBuilder);
    oktmb_FrustumMeshBuilder__clinit_();
}
function oktmb_FrustumMeshBuilder__init_0(var_0) {
    var var_1 = new oktmb_FrustumMeshBuilder();
    oktmb_FrustumMeshBuilder__init_1(var_1, var_0);
    return var_1;
}
function oktmb_FrustumMeshBuilder__init_(var_0) {
    var var_1 = new oktmb_FrustumMeshBuilder();
    oktmb_FrustumMeshBuilder__init_2(var_1, var_0);
    return var_1;
}
function oktmb_FrustumMeshBuilder_build($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $this.$setUv0(0);
    $this.$setNormals(0);
    $out.$setPrimitiveType(1);
    oktmb_FrustumMeshBuilder$build$1_$callClinit();
    $out.$setVertices(oktmb_MeshBuilder_createVerticesFloat($this, 8, oktmb_FrustumMeshBuilder$build$1_INSTANCE));
    oktmb_FrustumMeshBuilder$build$2_$callClinit();
    $out.$setIndices(oktmb_MeshBuilder_createIndicesShort($this, 24, oktmb_FrustumMeshBuilder$build$2_INSTANCE));
    oktmb_FrustumMeshBuilder$Companion_updateMesh(oktmb_FrustumMeshBuilder_Companion, $out, $this.$frustumPoints);
    return oktmb_MeshBuilder_build($this, $out);
}
function oktmb_FrustumMeshBuilder__init_1($this, $frustumPoints) {
    oktmb_FrustumMeshBuilder_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($frustumPoints, $rt_s(898));
    oktmb_MeshBuilder__init_0($this);
    $this.$frustumPoints = $frustumPoints;
}
function oktmb_FrustumMeshBuilder__init_2($this, $inverseProjectionView) {
    oktmb_FrustumMeshBuilder_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($inverseProjectionView, $rt_s(1248));
    oktmb_FrustumMeshBuilder__init_1($this, oktm_Frustum_getPoints(oktm_Frustum__init_($inverseProjectionView)));
}
function oktmb_FrustumMeshBuilder__clinit_() {
    oktmb_FrustumMeshBuilder_Companion = oktmb_FrustumMeshBuilder$Companion__init_1(null);
}
function ooo_DRay() {
}
function oooi_DxRay() {
    oooi_DxGeom.call(this);
    this.$_length = 0.0;
}
function oooi_DxRay_ray_sphere_helper($ray, $sphere_pos, $radius, $contacts, $mode) {
    var $q, $B, $C, $k, var$10, $alpha, var$12, $contact, $nsign;
    $q = oom_DVector3__init_();
    oom_DVector3_eqDiff($q, $ray.$final_posr().$pos(), $sphere_pos);
    $B = ooo_OdeMath_dCalcVectorDot3_14($q, $ray.$final_posr().$R(), 2);
    $C = oom_DVector3_dot($q, $q) - $radius * $radius;
    $k = $B * $B - $C;
    if ($k < 0.0)
        return 0;
    var$10 = oooi_Common_dSqrt($k);
    if ($mode && $C >= 0.0) {
        $alpha =  -$B + var$10;
        if ($alpha < 0.0)
            return 0;
    } else {
        var$12 =  -$B;
        $alpha = var$12 - var$10;
        if ($alpha < 0.0) {
            $alpha = var$12 + var$10;
            if ($alpha < 0.0)
                return 0;
        }
    }
    if ($alpha > $ray.$_length)
        return 0;
    $contact = ooo_DContactGeomBuffer_get($contacts, 0);
    oom_DVector3_eqSum4($contact.$pos0, $ray.$final_posr().$pos(), $ray.$final_posr().$R().$viewCol(2), $alpha);
    $nsign = $C >= 0.0 && !$mode ? 1.0 : (-1.0);
    oom_DVector3_scale(oom_DVector3_eqDiff($contact.$normal, $contact.$pos0, $sphere_pos), $nsign);
    oom_DVector3_normalize($contact.$normal);
    $contact.$depth = $alpha;
    return 1;
}
function oooi_DxRay_access$000($x0, $x1, $x2, $x3, $x4) {
    return oooi_DxRay_ray_sphere_helper($x0, $x1, $x2, $x3, $x4);
}
function oooi_DxRay_access$100($x0) {
    return $x0.$_length;
}
function oktg_IWorld$Companion() {
    jl_Object.call(this);
}
var oktg_IWorld$Companion_Default = null;
var oktg_IWorld$Companion_$$INSTANCE = null;
function oktg_IWorld$Companion_$callClinit() {
    oktg_IWorld$Companion_$callClinit = $rt_eraseClinit(oktg_IWorld$Companion);
    oktg_IWorld$Companion__clinit_();
}
function oktg_IWorld$Companion__init_() {
    var var_0 = new oktg_IWorld$Companion();
    oktg_IWorld$Companion__init_0(var_0);
    return var_0;
}
function oktg_IWorld$Companion_getDefault($this) {
    return oktg_IWorld$Companion_Default;
}
function oktg_IWorld$Companion__init_0($this) {
    oktg_IWorld$Companion_$callClinit();
    jl_Object__init_0($this);
}
function oktg_IWorld$Companion__clinit_() {
    oktg_IWorld$Companion_$$INSTANCE = oktg_IWorld$Companion__init_();
    oktg_IWorld$Companion_Default = oktg_World__init_();
}
function oktgg_GLTFAccessor$read$2() {
    kji_Lambda.call(this);
    this.$this$0176 = null;
}
function oktgg_GLTFAccessor$read$2__init_(var_0) {
    var var_1 = new oktgg_GLTFAccessor$read$2();
    oktgg_GLTFAccessor$read$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFAccessor$read$2_invoke(var$0, var$1) {
    oktgg_GLTFAccessor$read$2_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAccessor$read$2_invoke0($this, $it) {
    oktgg_GLTFAccessor_setByteOffset($this.$this$0176, $it);
}
function oktgg_GLTFAccessor$read$2__init_0(var$0, var$1) {
    var$0.$this$0176 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFAccessor$read$1() {
    kji_Lambda.call(this);
    this.$this$0177 = null;
}
function oktgg_GLTFAccessor$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFAccessor$read$1();
    oktgg_GLTFAccessor$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFAccessor$read$1_invoke(var$0, var$1) {
    oktgg_GLTFAccessor$read$1_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAccessor$read$1_invoke0($this, $it) {
    oktgg_GLTFAccessor_setBufferView($this.$this$0177, $it);
}
function oktgg_GLTFAccessor$read$1__init_0(var$0, var$1) {
    var$0.$this$0177 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFAccessor$read$4() {
    kji_Lambda.call(this);
    this.$this$0178 = null;
}
function oktgg_GLTFAccessor$read$4__init_(var_0) {
    var var_1 = new oktgg_GLTFAccessor$read$4();
    oktgg_GLTFAccessor$read$4__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFAccessor$read$4_invoke(var$0, var$1) {
    oktgg_GLTFAccessor$read$4_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAccessor$read$4_invoke0($this, $$this$array) {
    var var$2, var$3, var$4, var$5;
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    var$2 = $this.$this$0178;
    var$3 = $$this$array.$getSize();
    var$4 = $rt_createFloatArray(var$3);
    var$5 = 0;
    while (var$5 < var$3) {
        var$4.data[var$5] = $$this$array.$float0(var$5);
        var$5 = var$5 + 1 | 0;
    }
    oktgg_GLTFAccessor_setMax(var$2, var$4);
}
function oktgg_GLTFAccessor$read$4__init_0(var$0, var$1) {
    var$0.$this$0178 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTFAccessor$read$3() {
    kji_Lambda.call(this);
    this.$this$0179 = null;
}
function oktgg_GLTFAccessor$read$3__init_(var_0) {
    var var_1 = new oktgg_GLTFAccessor$read$3();
    oktgg_GLTFAccessor$read$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFAccessor$read$3_invoke(var$0, var$1) {
    oktgg_GLTFAccessor$read$3_invoke0(var$0, var$1.$booleanValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFAccessor$read$3_invoke0($this, $it) {
    oktgg_GLTFAccessor_setNormalized($this.$this$0179, $it);
}
function oktgg_GLTFAccessor$read$3__init_0(var$0, var$1) {
    var$0.$this$0179 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jur_EmptySet() {
    jur_LeafSet.call(this);
}
function jur_EmptySet__init_(var_0) {
    var var_1 = new jur_EmptySet();
    jur_EmptySet__init_0(var_1, var_0);
    return var_1;
}
function jur_EmptySet__init_0($this, $next) {
    jur_LeafSet__init_0($this, $next);
    $this.$charCount0 = 0;
}
function jur_EmptySet_accepts($this, $stringIndex, $testString) {
    return 0;
}
function jur_EmptySet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $startStr, var$6, $low, $high;
    $strLength = $matchResult.$getRightBound();
    $startStr = $matchResult.$getLeftBound();
    while (true) {
        var$6 = $rt_compare($stringIndex, $strLength);
        if (var$6 > 0)
            return (-1);
        if (var$6 < 0) {
            $low = $testString.$charAt($stringIndex);
            if (jl_Character_isLowSurrogate($low) && $stringIndex > $startStr) {
                $high = $testString.$charAt($stringIndex - 1 | 0);
                if (jl_Character_isHighSurrogate($high)) {
                    $stringIndex = $stringIndex + 1 | 0;
                    continue;
                }
            }
        }
        if ($this.$next0.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
}
function jur_EmptySet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    var $strLength, $startStr, $low, $high;
    $strLength = $matchResult.$getRightBound();
    $startStr = $matchResult.$getLeftBound();
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($startSearch < $strLength) {
            $low = $testString.$charAt($startSearch);
            if (jl_Character_isLowSurrogate($low) && $startSearch > $startStr) {
                $high = $testString.$charAt($startSearch - 1 | 0);
                if (jl_Character_isHighSurrogate($high)) {
                    $startSearch = $startSearch + (-1) | 0;
                    continue;
                }
            }
        }
        if ($this.$next0.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
}
function jur_EmptySet_hasConsumed($this, $mr) {
    return 0;
}
function oktu_LittleEndianInputStream() {
    ji_FilterInputStream.call(this);
    this.$din = null;
}
function oktu_LittleEndianInputStream__init_0(var_0) {
    var var_1 = new oktu_LittleEndianInputStream();
    oktu_LittleEndianInputStream__init_(var_1, var_0);
    return var_1;
}
function oktu_LittleEndianInputStream_readByte($this) {
    return ji_DataInputStream_readByte($this.$din);
}
function oktu_LittleEndianInputStream_readInt($this) {
    var $res, $i, var$3;
    $res = $rt_createIntArray(4);
    $i = 3;
    while ($i >= 0) {
        $res.data[$i] = $this.$din.$read0();
        $i = $i + (-1) | 0;
    }
    var$3 = $res.data;
    return (var$3[0] & 255) << 24 | (var$3[1] & 255) << 16 | (var$3[2] & 255) << 8 | var$3[3] & 255;
}
function oktu_LittleEndianInputStream__init_($this, $in) {
    kji_Intrinsics_checkParameterIsNotNull($in, $rt_s(325));
    ji_FilterInputStream__init_0($this, $in);
    $this.$din = ji_DataInputStream__init_($in);
}
function oooi_OdeInit$EODEINITMODE() {
    jl_Enum.call(this);
}
var oooi_OdeInit$EODEINITMODE_OIM_AUTOTLSCLEANUP = null;
var oooi_OdeInit$EODEINITMODE_OIM_MANUALTLSCLEANUP = null;
var oooi_OdeInit$EODEINITMODE_$VALUES = null;
function oooi_OdeInit$EODEINITMODE_$callClinit() {
    oooi_OdeInit$EODEINITMODE_$callClinit = $rt_eraseClinit(oooi_OdeInit$EODEINITMODE);
    oooi_OdeInit$EODEINITMODE__clinit_();
}
function oooi_OdeInit$EODEINITMODE__init_(var_0, var_1) {
    var var_2 = new oooi_OdeInit$EODEINITMODE();
    oooi_OdeInit$EODEINITMODE__init_0(var_2, var_0, var_1);
    return var_2;
}
function oooi_OdeInit$EODEINITMODE_values() {
    oooi_OdeInit$EODEINITMODE_$callClinit();
    return oooi_OdeInit$EODEINITMODE_$VALUES.$clone();
}
function oooi_OdeInit$EODEINITMODE__init_0($this, var$1, var$2) {
    oooi_OdeInit$EODEINITMODE_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function oooi_OdeInit$EODEINITMODE__clinit_() {
    var var$1, var$2;
    oooi_OdeInit$EODEINITMODE_OIM_AUTOTLSCLEANUP = oooi_OdeInit$EODEINITMODE__init_($rt_s(1249), 0);
    oooi_OdeInit$EODEINITMODE_OIM_MANUALTLSCLEANUP = oooi_OdeInit$EODEINITMODE__init_($rt_s(1250), 1);
    var$1 = $rt_createArray(oooi_OdeInit$EODEINITMODE, 2);
    var$2 = var$1.data;
    var$2[0] = oooi_OdeInit$EODEINITMODE_OIM_AUTOTLSCLEANUP;
    var$2[1] = oooi_OdeInit$EODEINITMODE_OIM_MANUALTLSCLEANUP;
    oooi_OdeInit$EODEINITMODE_$VALUES = var$1;
}
function oktt_TvmKB$2() {
    jl_Object.call(this);
    this.$this$0180 = null;
}
function oktt_TvmKB$2__init_(var_0) {
    var var_1 = new oktt_TvmKB$2();
    oktt_TvmKB$2__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmKB$2_handleEvent($this, $it) {
    var var$2, $i, var$4;
    if ($it === null)
        $rt_throw(k_TypeCastException__init_($rt_s(1251)));
    var$2 = $it;
    $i = 0;
    var$4 = oktt_TvmKB_getListeners($this.$this$0180).$size();
    while ($i < var$4) {
        oktt_TvmKB_getListeners($this.$this$0180).$get1($i).$keyTyped(var$2.charCode & 65535);
        $i = $i + 1 | 0;
    }
}
function oktt_TvmKB$2__init_0(var$0, var$1) {
    var$0.$this$0180 = var$1;
    jl_Object__init_0(var$0);
}
function oktt_TvmKB$2_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmKB$2_handleEvent(var$0, var$1);
}
function oktt_TvmKB$1() {
    jl_Object.call(this);
    this.$this$0181 = null;
}
function oktt_TvmKB$1__init_(var_0) {
    var var_1 = new oktt_TvmKB$1();
    oktt_TvmKB$1__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmKB$1_handleEvent($this, $it) {
    var var$2, $code, $i, var$5;
    if ($it === null)
        $rt_throw(k_TypeCastException__init_($rt_s(1251)));
    var$2 = $it;
    $code = oktt_TvmKB_getKeyCode($this.$this$0181, var$2);
    oktt_TvmKB_getPressed($this.$this$0181).$add1(jl_Integer_valueOf($code));
    $i = 0;
    var$5 = oktt_TvmKB_getListeners($this.$this$0181).$size();
    while ($i < var$5) {
        oktt_TvmKB_getListeners($this.$this$0181).$get1($i).$keyDown($code);
        $i = $i + 1 | 0;
    }
}
function oktt_TvmKB$1__init_0(var$0, var$1) {
    var$0.$this$0181 = var$1;
    jl_Object__init_0(var$0);
}
function oktt_TvmKB$1_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmKB$1_handleEvent(var$0, var$1);
}
function oktt_TvmKB$3() {
    jl_Object.call(this);
    this.$this$0182 = null;
}
function oktt_TvmKB$3__init_(var_0) {
    var var_1 = new oktt_TvmKB$3();
    oktt_TvmKB$3__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmKB$3_handleEvent($this, $it) {
    var var$2, $code, $i, var$5;
    if ($it === null)
        $rt_throw(k_TypeCastException__init_($rt_s(1251)));
    var$2 = $it;
    $code = oktt_TvmKB_getKeyCode($this.$this$0182, var$2);
    oktt_TvmKB_getPressed($this.$this$0182).$remove1(jl_Integer_valueOf($code));
    $i = 0;
    var$5 = oktt_TvmKB_getListeners($this.$this$0182).$size();
    while ($i < var$5) {
        oktt_TvmKB_getListeners($this.$this$0182).$get1($i).$keyUp($code);
        $i = $i + 1 | 0;
    }
}
function oktt_TvmKB$3__init_0(var$0, var$1) {
    var$0.$this$0182 = var$1;
    jl_Object__init_0(var$0);
}
function oktt_TvmKB$3_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmKB$3_handleEvent(var$0, var$1);
}
function oooi_CollisionLibccdCylinderStacking() {
    jl_Object.call(this);
}
function oooi_CollisionLibccdCylinderStacking__init_() {
    var var_0 = new oooi_CollisionLibccdCylinderStacking();
    oooi_CollisionLibccdCylinderStacking__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccdCylinderStacking__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccdCylinderStacking_collideCylCyl($o1, $o2, $maxCyl, $maxCyl_0, $flags, $contacts) {
    var $maxContacts, $axesProd, $p, var$10, $r1, var$12, $r2, $lmin, $lmin_0, $rmin, $rmax, $r1isMin, $minCyl, $dot, $lSum, $depth_v, $proj, $radiiDif, $depth_h, $dot2, $lmax, var$28, $normaldir, $contactCount, $maxContactRecip, $i, $a, $proj2, $d, $dRecip, $rmaxSquare, $rminSquare, $dSquare, $l, $h, $divLbyD, $divHbyD, $x1, $y1, $x2, $y2, $ap1, $ap2, $minA, $adjustedMinA, var$52, $diffA, var$54, var$55, var$56, var$57, $minB, $maxB, $nMinRecip, $ratio, $nMax, $nMin, $nMaxRecip;
    $maxContacts = jl_Math_min($flags & 65535, 8);
    if (!$maxContacts)
        return 0;
    $axesProd = jl_Math_abs(oooil_CCDVec3_ccdVec3Dot($maxCyl.$axis0, $maxCyl_0.$axis0));
    if (1.0 - $axesProd < 0.001) {
        $p = oooil_CCDVec3$ccd_vec3_t__init_();
        var$10 = $o1;
        $r1 = var$10.$getRadius();
        var$12 = $o2;
        $r2 = var$12.$getRadius();
        $lmin = 0.5 * var$10.$getLength();
        $lmin_0 = 0.5 * var$12.$getLength();
        $rmin = jl_Math_min0($r1, $r2);
        $rmax = jl_Math_max0($r1, $r2);
        $r1isMin = $r1 !== $rmin ? 0 : 1;
        $minCyl = !$r1isMin ? $maxCyl_0 : $maxCyl;
        if ($r1isMin)
            $maxCyl = $maxCyl_0;
        oooil_CCDVec3_ccdVec3Copy($p, $minCyl.$pos1);
        oooil_CCDVec3_ccdVec3Sub($p, $maxCyl.$pos1);
        $dot = oooil_CCDVec3_ccdVec3Dot($p, $maxCyl.$axis0);
        $lSum = $lmin + $lmin_0;
        $depth_v = $lSum - jl_Math_abs($dot) + jl_Math_sqrt(jl_Math_max0(0.0, 1.0 - $axesProd * $axesProd)) * $rmin;
        if ($depth_v < 0.0)
            return 0;
        $proj = oooil_CCDVec3$ccd_vec3_t__init_();
        oooil_CCDVec3_ccdVec3Copy($proj, $maxCyl.$axis0);
        oooil_CCDVec3_ccdVec3Scale($proj,  -$dot);
        oooil_CCDVec3_ccdVec3Add($proj, $p);
        $radiiDif = jl_Math_sqrt(oooil_CCDVec3_ccdVec3Len2($proj));
        $depth_h = $r1 + $r2 - $radiiDif;
        if ($depth_h < 0.0)
            return 0;
        if ($depth_v < $depth_h) {
            $dot2 =  -oooil_CCDVec3_ccdVec3Dot($p, $minCyl.$axis0);
            $lmax = !$r1isMin ? $lmin : $lmin_0;
            if ($r1isMin)
                $lmin_0 = $lmin;
            var$28 = $rt_compare($dot, 0.0);
            if (var$28 < 0)
                $lmax =  -$lmax;
            if ($dot2 < 0.0)
                $lmin_0 =  -$lmin_0;
            $normaldir = (var$28 >= 0 ? 0 : 1) == $r1isMin ? (-1.0) : 1.0;
            $contactCount = 0;
            if ($rmin + $radiiDif <= $rmax) {
                $maxContactRecip = 6.283185307179586 / $maxContacts;
                $i = 0;
                a: {
                    while ($i < $maxContacts) {
                        $a = $i * $maxContactRecip;
                        $contactCount = oooi_CollisionLibccdCylinderStacking_testAndAddDiscContact($a, $rmin, $lmin_0, $lSum, $minCyl, $maxCyl, $normaldir, $o1, $o2, $contacts, $contactCount);
                        if ($contactCount > 0 && $flags & (-2147483648))
                            break a;
                        $i = $i + 1 | 0;
                    }
                }
                return $contactCount;
            }
            $proj2 = oooil_CCDVec3$ccd_vec3_t__init_();
            oooil_CCDVec3_ccdVec3Copy($proj2, $proj);
            oooil_CCDQuat_ccdQuatRotVec($proj, $maxCyl.$rot_inv);
            $d = jl_Math_sqrt($proj.$get01() * $proj.$get01() + $proj.$get10() * $proj.$get10());
            $dRecip = 1.0 / $d;
            $rmaxSquare = $rmax * $rmax;
            $rminSquare = $rmin * $rmin;
            $dSquare = $d * $d;
            $l = ($rmaxSquare - $rminSquare + $dSquare) * 0.5 * $dRecip;
            $h = jl_Math_sqrt($rmaxSquare - $l * $l);
            $divLbyD = $l * $dRecip;
            $divHbyD = $h * $dRecip;
            $x1 = $divLbyD * $proj.$get01() + $divHbyD * $proj.$get10();
            $y1 = $divLbyD * $proj.$get10() - $divHbyD * $proj.$get01();
            $x2 = $divLbyD * $proj.$get01() - $divHbyD * $proj.$get10();
            $y2 = $divLbyD * $proj.$get10() + $divHbyD * $proj.$get01();
            $ap1 = jl_Math_atan2($y1, $x1);
            $ap2 = jl_Math_atan2($y2, $x2);
            $minA = jl_Math_min0($ap1, $ap2);
            $adjustedMinA = jl_Math_max0($ap1, $ap2);
            $a = jl_Math_atan2($proj.$get10(), $proj.$get01());
            if ($a >= $minA && $a <= $adjustedMinA) {
                var$52 = $adjustedMinA;
                $adjustedMinA = $minA;
            } else
                var$52 = $minA + 6.283185307179586;
            $diffA = var$52 - $adjustedMinA;
            oooil_CCDVec3_ccdVec3Copy($proj, $proj2);
            oooil_CCDVec3_ccdVec3Scale($proj, (-1.0));
            oooil_CCDQuat_ccdQuatRotVec($proj, $minCyl.$rot_inv);
            var$52 = ($rminSquare - $rmaxSquare + $dSquare) * 0.5 * $dRecip;
            var$54 = jl_Math_sqrt($rminSquare - var$52 * var$52);
            var$52 = var$52 * $dRecip;
            var$54 = var$54 * $dRecip;
            var$55 = var$52 * $proj.$get01() + var$54 * $proj.$get10();
            var$56 = var$52 * $proj.$get10() - var$54 * $proj.$get01();
            var$57 = var$52 * $proj.$get01() - var$54 * $proj.$get10();
            var$52 = var$52 * $proj.$get10() + var$54 * $proj.$get01();
            var$54 = jl_Math_atan2(var$56, var$55);
            var$52 = jl_Math_atan2(var$52, var$57);
            $minB = jl_Math_min0(var$54, var$52);
            $maxB = jl_Math_max0(var$54, var$52);
            var$52 = jl_Math_atan2($proj.$get10(), $proj.$get01());
            if (var$52 >= $minB && var$52 <= $maxB) {
                var$52 = $maxB;
                $maxB = $minB;
            } else
                var$52 = $minB + 6.283185307179586;
            $nMinRecip = var$52 - $maxB;
            var$52 = $diffA * $rmax;
            $ratio = var$52 / (var$52 + $nMinRecip * $rmin);
            $nMax = jl_Math_round($ratio * $maxContacts).lo;
            $nMin = $maxContacts - $nMax | 0;
            var$28 = $rt_compare($nMin, 1);
            if (var$28 < 0) {
                $nMin = 1;
                $nMax = $nMax + (-1) | 0;
            } else if (var$28 > 0) {
                $nMin = $nMin + (-1) | 0;
                $nMax = $nMax + 1 | 0;
            }
            if (0 < $nMin)
                $nMinRecip = $nMinRecip / ($nMin + 1 | 0);
            $i = 1;
            b: {
                while ($i <= $nMin) {
                    var$52 = $maxB + $nMinRecip * $i;
                    $contactCount = oooi_CollisionLibccdCylinderStacking_testAndAddDiscContact(var$52, $rmin, $lmin_0, $lSum, $minCyl, $maxCyl, $normaldir, $o1, $o2, $contacts, $contactCount);
                    if ($contactCount > 0 && $flags & (-2147483648))
                        break b;
                    $i = $i + 1 | 0;
                }
            }
            c: {
                if (!($contactCount && $flags & (-2147483648))) {
                    var$28 = $rt_compare($nMax, 1);
                    $nMaxRecip = var$28 <= 0 ? $diffA : $diffA / ($nMax - 1 | 0);
                    if (!var$28)
                        $adjustedMinA = $adjustedMinA + 0.5 * $diffA;
                    $i = 0;
                    while ($i < $nMax) {
                        var$52 = $adjustedMinA + $nMaxRecip * $i;
                        $contactCount = oooi_CollisionLibccdCylinderStacking_testAndAddDiscContact(var$52, $rmax, $lmax, $lSum, $maxCyl, $minCyl, $normaldir, $o1, $o2, $contacts, $contactCount);
                        if ($contactCount > 0 && $flags & (-2147483648))
                            break c;
                        $i = $i + 1 | 0;
                    }
                }
            }
            return $contactCount;
        }
    }
    return (-1);
}
function oooi_CollisionLibccdCylinderStacking_testAndAddDiscContact($angle, $radius, $length, $lSum, $c1, $maxCyl, $normaldir, $o1, $o2, $contacts, $contactCount) {
    var $p, $p2, $depth;
    $p = oooil_CCDVec3$ccd_vec3_t__init_();
    $p.$set42(jl_Math_cos($angle) * $radius, jl_Math_sin($angle) * $radius, 0.0);
    $p2 = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDQuat_ccdQuatRotVec($p, $c1.$rot);
    oooil_CCDVec3_ccdVec3Add($p, $c1.$pos1);
    oooil_CCDVec3_ccdVec3Copy($p2, $p);
    oooil_CCDVec3_ccdVec3Sub($p2, $maxCyl.$pos1);
    $depth = $lSum - jl_Math_abs(oooil_CCDVec3_ccdVec3Dot($p2, $maxCyl.$axis0));
    if ($depth >= 0.0) {
        oooil_CCDVec3_ccdVec3Copy($p2, $c1.$axis0);
        oooil_CCDVec3_ccdVec3Scale($p2, $length);
        oooil_CCDVec3_ccdVec3Add($p, $p2);
        $contactCount = oooi_CollisionLibccdCylinderStacking_addContact($o1, $o2, $maxCyl.$axis0, $contacts, $p, $normaldir, $depth, $contactCount);
    }
    return $contactCount;
}
function oooi_CollisionLibccdCylinderStacking_addContact($o1, $o2, $axis, $contacts, $p, $normaldir, $depth, $j) {
    var var$9, $contact;
    var$9 = $j + 1 | 0;
    $contact = ooo_DContactGeomBuffer_get($contacts, $j);
    $contact.$g1 = $o1;
    $contact.$g2 = $o2;
    $contact.$side1 = (-1);
    $contact.$side2 = (-1);
    oom_DVector3_set00($contact.$normal, $normaldir * $axis.$get01());
    oom_DVector3_set10($contact.$normal, $normaldir * $axis.$get10());
    oom_DVector3_set20($contact.$normal, $normaldir * $axis.$get20());
    $contact.$depth = $depth;
    oom_DVector3_set0($contact.$pos0, $p.$get01(), $p.$get10(), $p.$get20());
    return var$9;
}
function oktgg_GLTF$read$2() {
    kji_Lambda.call(this);
    this.$this$071 = null;
}
function oktgg_GLTF$read$2__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$2();
    oktgg_GLTF$read$2__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$2_invoke(var$0, var$1) {
    oktgg_GLTF$read$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$2_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTF$read$2$1__init_($this));
}
function oktgg_GLTF$read$2__init_0(var$0, var$1) {
    var$0.$this$071 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTF$read$3() {
    kji_Lambda.call(this);
    this.$this$0141 = null;
}
function oktgg_GLTF$read$3__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$3();
    oktgg_GLTF$read$3__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$3_invoke(var$0, var$1) {
    oktgg_GLTF$read$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$3_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTF$read$3$1__init_($this));
}
function oktgg_GLTF$read$3__init_0(var$0, var$1) {
    var$0.$this$0141 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTF$read$4() {
    kji_Lambda.call(this);
    this.$this$0183 = null;
}
function oktgg_GLTF$read$4__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$4();
    oktgg_GLTF$read$4__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$4_invoke(var$0, var$1) {
    oktgg_GLTF$read$4_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$4_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTF$read$4$1__init_($this));
}
function oktgg_GLTF$read$4__init_0(var$0, var$1) {
    var$0.$this$0183 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTF$read$5() {
    kji_Lambda.call(this);
    this.$this$020 = null;
}
function oktgg_GLTF$read$5__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$5();
    oktgg_GLTF$read$5__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$5_invoke(var$0, var$1) {
    oktgg_GLTF$read$5_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$5_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTF$read$5$1__init_($this));
}
function oktgg_GLTF$read$5__init_0(var$0, var$1) {
    var$0.$this$020 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jl_NoSuchMethodError() {
    jl_IncompatibleClassChangeError.call(this);
}
function jl_NoSuchMethodError__init_() {
    var var_0 = new jl_NoSuchMethodError();
    jl_NoSuchMethodError__init_0(var_0);
    return var_0;
}
function jl_NoSuchMethodError__init_1(var_0) {
    var var_1 = new jl_NoSuchMethodError();
    jl_NoSuchMethodError__init_2(var_1, var_0);
    return var_1;
}
function jl_NoSuchMethodError__init_0($this) {
    jl_IncompatibleClassChangeError__init_0($this);
}
function jl_NoSuchMethodError__init_2($this, $message) {
    jl_IncompatibleClassChangeError__init_2($this, $message);
}
function oktgg_GLTF$read$1() {
    kji_Lambda.call(this);
    this.$this$03 = null;
}
function oktgg_GLTF$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$1();
    oktgg_GLTF$read$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$1_invoke(var$0, var$1) {
    oktgg_GLTF$read$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$1_invoke0($this, $$this$get) {
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
    $$this$get.$string($rt_s(1252), oktgg_GLTF$read$1$1__init_($this));
    $$this$get.$string($rt_s(1253), oktgg_GLTF$read$1$2__init_($this));
    $this.$this$03.$setVersion($$this$get.$string1($rt_s(1254)));
    $$this$get.$string($rt_s(1255), oktgg_GLTF$read$1$3__init_($this));
}
function oktgg_GLTF$read$1__init_0(var$0, var$1) {
    var$0.$this$03 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktp_IBoxShape() {
}
function jl_ArrayIndexOutOfBoundsException() {
    jl_IndexOutOfBoundsException.call(this);
}
function jl_ArrayIndexOutOfBoundsException__init_() {
    var var_0 = new jl_ArrayIndexOutOfBoundsException();
    jl_ArrayIndexOutOfBoundsException__init_0(var_0);
    return var_0;
}
function jl_ArrayIndexOutOfBoundsException__init_0($this) {
    jl_IndexOutOfBoundsException__init_1($this);
}
function oktts_CascadedShadowMappingBaseTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$059 = null;
    a.$$control8 = null;
    a.$$depthBuffers = null;
    a.$$depthRenderShader = null;
    a.$$plane = null;
    a.$$cubesStartX = 0.0;
    a.$$cubesEndX = 0.0;
    a.$$cubesStartZ = 0.0;
    a.$$cubesEndZ = 0.0;
    a.$$cubesY = 0.0;
    a.$$cube0 = null;
    a.$$cubesStepZ = 0.0;
    a.$$cubesStepX = 0.0;
    a.$$sceneObjectShader = null;
    a.$$cubeColor = null;
    a.$$screenQuad8 = null;
}
function oktts_CascadedShadowMappingBaseTest$testMain$1__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15) {
    var var_16 = new oktts_CascadedShadowMappingBaseTest$testMain$1();
    oktts_CascadedShadowMappingBaseTest$testMain$1__init_0(var_16, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15);
    return var_16;
}
function oktts_CascadedShadowMappingBaseTest$testMain$1_invoke(var$0) {
    oktts_CascadedShadowMappingBaseTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktts_CascadedShadowMappingBaseTest$testMain$1_invoke0($this) {
    var var$1, $i, var$3, $shader, var$5, var$6, var$7, $i_0, var$9, $xi, $zi;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$control8;
    okt_APP_$callClinit();
    var$1.$update(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktts_CascadedShadowMappingBaseTest_updateFrustums($this.$this$059);
    $i = 0;
    var$3 = oktts_CascadedShadowMappingBaseTest_getNumCascades($this.$this$059);
    while ($i < var$3) {
        oktt_FrameBuffer_render($this.$$depthBuffers.data[$i], oktts_CascadedShadowMappingBaseTest$testMain$1$1__init_($this, $i));
        $i = $i + 1 | 0;
    }
    $shader = $this.$$sceneObjectShader;
    $shader.$bind();
    oktgc_ActiveCamera_$callClinit();
    $shader.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $i = 0;
    var$5 = oktts_CascadedShadowMappingBaseTest_getNumCascades($this.$this$059);
    while ($i < var$5) {
        $shader.$set12(jl_StringBuilder__init_().$append($rt_s(1256)).$append1($i).$append12(93).$toString(), oktts_CascadedShadowMappingBaseTest_getLightProj($this.$this$059).data[$i]);
        var$6 = jl_StringBuilder__init_().$append($rt_s(1257)).$append1($i).$append12(93).$toString();
        var$7 = oktts_CascadedShadowMappingBaseTest_getCascadeEnd($this.$this$059).data;
        $i_0 = $i + 1 | 0;
        $shader.$set1(var$6, var$7[$i_0].$floatValue());
        oktt_FrameBuffer_getTexture($this.$$depthBuffers.data[$i], 0).$bind4($i);
        $i = $i_0;
    }
    $shader.$set39($rt_s(608), 0.0, 0.0, 0.0);
    $shader.$set64($rt_s(623), 1.0, 1.0, 1.0, 1.0);
    var$6 = $this.$$plane;
    var$9 = $shader;
    oktm_IMesh$DefaultImpls_render$default(var$6, var$9, 0, 0, 0, 0, 30, null);
    $shader.$set40($rt_s(623), $this.$$cubeColor);
    $xi = $this.$$cubesStartX;
    while ($xi < $this.$$cubesEndX) {
        $zi = $this.$$cubesStartZ;
        while ($zi < $this.$$cubesEndZ) {
            $shader.$set39($rt_s(608), $xi, $this.$$cubesY, $zi);
            oktm_IMesh$DefaultImpls_render$default($this.$$cube0, var$9, 0, 0, 0, 0, 30, null);
            $zi = $zi + $this.$$cubesStepZ;
        }
        $xi = $xi + $this.$$cubesStepX;
    }
    $i = 0;
    var$3 = oktts_CascadedShadowMappingBaseTest_getNumCascades($this.$this$059);
    while ($i < var$3) {
        oktm_ScreenQuad$TextureRenderer_setPosition($this.$$screenQuad8, (-0.75) + $i * 0.44999998807907104, (-0.75));
        oktm_ScreenQuad$TextureRenderer_setScale($this.$$screenQuad8, 0.20000000298023224, 0.20000000298023224);
        oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad8, oktt_FrameBuffer_getTexture($this.$$depthBuffers.data[$i], 0), null, null, null, 10, null);
        $i = $i + 1 | 0;
    }
}
function oktts_CascadedShadowMappingBaseTest$testMain$1__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16) {
    var$0.$this$059 = var$1;
    var$0.$$control8 = var$2;
    var$0.$$depthBuffers = var$3;
    var$0.$$depthRenderShader = var$4;
    var$0.$$plane = var$5;
    var$0.$$cubesStartX = var$6;
    var$0.$$cubesEndX = var$7;
    var$0.$$cubesStartZ = var$8;
    var$0.$$cubesEndZ = var$9;
    var$0.$$cubesY = var$10;
    var$0.$$cube0 = var$11;
    var$0.$$cubesStepZ = var$12;
    var$0.$$cubesStepX = var$13;
    var$0.$$sceneObjectShader = var$14;
    var$0.$$cubeColor = var$15;
    var$0.$$screenQuad8 = var$16;
    kji_Lambda__init_0(var$0, 0);
}
function okttm_MeshTest$testMain$2() {
    var a = this; kji_Lambda.call(a);
    a.$$shader12 = null;
    a.$$mesh4 = null;
}
function okttm_MeshTest$testMain$2__init_(var_0, var_1) {
    var var_2 = new okttm_MeshTest$testMain$2();
    okttm_MeshTest$testMain$2__init_0(var_2, var_0, var_1);
    return var_2;
}
function okttm_MeshTest$testMain$2_invoke(var$0) {
    okttm_MeshTest$testMain$2_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttm_MeshTest$testMain$2_invoke0($this) {
    $this.$$shader12.$bind();
    oktm_IMesh$DefaultImpls_render$default($this.$$mesh4, $this.$$shader12, 0, 0, 0, 0, 30, null);
}
function okttm_MeshTest$testMain$2__init_0(var$0, var$1, var$2) {
    var$0.$$shader12 = var$1;
    var$0.$$mesh4 = var$2;
    kji_Lambda__init_0(var$0, 0);
}
function juca_AtomicLong() {
    var a = this; jl_Number.call(a);
    a.$value9 = Long_ZERO;
    a.$version3 = 0;
}
function juca_AtomicLong__init_0() {
    var var_0 = new juca_AtomicLong();
    juca_AtomicLong__init_1(var_0);
    return var_0;
}
function juca_AtomicLong__init_(var_0) {
    var var_1 = new juca_AtomicLong();
    juca_AtomicLong__init_2(var_1, var_0);
    return var_1;
}
function juca_AtomicLong__init_1($this) {
    jl_Number__init_0($this);
}
function juca_AtomicLong__init_2($this, $value) {
    jl_Number__init_0($this);
    $this.$value9 = $value;
}
function juca_AtomicLong_get($this) {
    return $this.$value9;
}
function juca_AtomicLong_compareAndSet($this, $expect, $update) {
    if (Long_ne($this.$value9, $expect))
        return 0;
    $this.$value9 = $update;
    $this.$version3 = $this.$version3 + 1 | 0;
    return 1;
}
function oooig_GimBitSet() {
    jl_Object.call(this);
    this.$_data2 = null;
}
function oooig_GimBitSet__init_(var_0) {
    var var_1 = new oooig_GimBitSet();
    oooig_GimBitSet__init_0(var_1, var_0);
    return var_1;
}
function oooig_GimBitSet__init_0($this, $size) {
    jl_Object__init_0($this);
    $this.$_data2 = ju_BitSet__init_1($size);
}
function oooig_GimBitSet_GIM_BITSET_CREATE_SIZED($bits_count) {
    return oooig_GimBitSet__init_($bits_count);
}
function oooig_GimBitSet_GIM_BITSET_CLEAR_ALL($this) {
    $this.$_data2.$clear();
}
function oooig_GimBitSet_GIM_BITSET_SET($this, $bit_index) {
    $this.$_data2.$set10($bit_index);
}
function oooig_GimBitSet_GIM_BITSET_GET($this, $bit_index) {
    return $this.$_data2.$get17($bit_index);
}
function oktt_TvmIMG$load$2() {
    var a = this; jl_Object.call(a);
    a.$$response2 = null;
    a.$$out2 = null;
}
function oktt_TvmIMG$load$2__init_(var_0, var_1) {
    var var_2 = new oktt_TvmIMG$load$2();
    oktt_TvmIMG$load$2__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktt_TvmIMG$load$2_handleEvent($this, $it) {
    $this.$$response2.$invoke11(jl_Integer_valueOf(404), $this.$$out2);
}
function oktt_TvmIMG$load$2__init_0(var$0, var$1, var$2) {
    var$0.$$response2 = var$1;
    var$0.$$out2 = var$2;
    jl_Object__init_0(var$0);
}
function oktt_TvmIMG$load$2_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmIMG$load$2_handleEvent(var$0, var$1);
}
function ks_SequencesKt__SequencesJVMKt() {
    ks_SequencesKt__SequenceBuilderKt.call(this);
}
function ks_SequencesKt__SequencesJVMKt__init_() {
    var var_0 = new ks_SequencesKt__SequencesJVMKt();
    ks_SequencesKt__SequencesJVMKt__init_0(var_0);
    return var_0;
}
function ks_SequencesKt__SequencesJVMKt__init_0(var$0) {
    ks_SequencesKt__SequenceBuilderKt__init_0(var$0);
}
function ks_SequencesKt__SequencesKt() {
    ks_SequencesKt__SequencesJVMKt.call(this);
}
function ks_SequencesKt__SequencesKt__init_() {
    var var_0 = new ks_SequencesKt__SequencesKt();
    ks_SequencesKt__SequencesKt__init_0(var_0);
    return var_0;
}
function ks_SequencesKt__SequencesKt__init_0(var$0) {
    ks_SequencesKt__SequencesJVMKt__init_0(var$0);
}
function ks_SequencesKt___SequencesJvmKt() {
    ks_SequencesKt__SequencesKt.call(this);
}
function ks_SequencesKt___SequencesJvmKt__init_() {
    var var_0 = new ks_SequencesKt___SequencesJvmKt();
    ks_SequencesKt___SequencesJvmKt__init_0(var_0);
    return var_0;
}
function ks_SequencesKt___SequencesJvmKt__init_0(var$0) {
    ks_SequencesKt__SequencesKt__init_0(var$0);
}
function ks_SequencesKt___SequencesKt() {
    ks_SequencesKt___SequencesJvmKt.call(this);
}
function ks_SequencesKt___SequencesKt__init_() {
    var var_0 = new ks_SequencesKt___SequencesKt();
    ks_SequencesKt___SequencesKt__init_0(var_0);
    return var_0;
}
function ks_SequencesKt___SequencesKt_map($$this$map, $transform) {
    kji_Intrinsics_checkParameterIsNotNull($$this$map, $rt_s(1258));
    kji_Intrinsics_checkParameterIsNotNull($transform, $rt_s(1259));
    return ks_TransformingSequence__init_($$this$map, $transform);
}
function ks_SequencesKt___SequencesKt_joinTo($$this$joinTo, $buffer, $separator, $prefix, $postfix, $limit, $truncated, $transform) {
    var $count, var$10, $element;
    kji_Intrinsics_checkParameterIsNotNull($$this$joinTo, $rt_s(1260));
    kji_Intrinsics_checkParameterIsNotNull($buffer, $rt_s(467));
    kji_Intrinsics_checkParameterIsNotNull($separator, $rt_s(1261));
    kji_Intrinsics_checkParameterIsNotNull($prefix, $rt_s(409));
    kji_Intrinsics_checkParameterIsNotNull($postfix, $rt_s(1262));
    kji_Intrinsics_checkParameterIsNotNull($truncated, $rt_s(1263));
    $buffer.$append2($prefix);
    $count = 0;
    var$10 = $$this$joinTo.$iterator();
    a: {
        while (var$10.$hasNext()) {
            $element = var$10.$next();
            $count = $count + 1 | 0;
            if ($count > 1)
                $buffer.$append2($separator);
            if ($limit >= 0 && $count > $limit)
                break a;
            kt_StringsKt__AppendableKt_appendElement($buffer, $element, $transform);
        }
    }
    if ($limit >= 0 && $count > $limit)
        $buffer.$append2($truncated);
    $buffer.$append2($postfix);
    return $buffer;
}
function ks_SequencesKt___SequencesKt_joinToString($$this$joinToString, $separator, $prefix, $postfix, $limit, $truncated, $transform) {
    var var$8;
    kji_Intrinsics_checkParameterIsNotNull($$this$joinToString, $rt_s(1264));
    kji_Intrinsics_checkParameterIsNotNull($separator, $rt_s(1261));
    kji_Intrinsics_checkParameterIsNotNull($prefix, $rt_s(409));
    kji_Intrinsics_checkParameterIsNotNull($postfix, $rt_s(1262));
    kji_Intrinsics_checkParameterIsNotNull($truncated, $rt_s(1263));
    var$8 = ks_SequencesKt___SequencesKt_joinTo($$this$joinToString, jl_StringBuilder__init_(), $separator, $prefix, $postfix, $limit, $truncated, $transform).$toString();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$8, $rt_s(1265));
    return var$8;
}
function ks_SequencesKt___SequencesKt_joinToString$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9) {
    if (var$8 & 1)
        var$2 = $rt_s(268);
    if (var$8 & 2)
        var$3 = $rt_s(6);
    if (var$8 & 4)
        var$4 = $rt_s(6);
    if (var$8 & 8)
        var$5 = (-1);
    if (var$8 & 16)
        var$6 = $rt_s(1266);
    if (var$8 & 32)
        var$7 = null;
    return ks_SequencesKt___SequencesKt_joinToString(var$1, var$2, var$3, var$4, var$5, var$6, var$7);
}
function ks_SequencesKt___SequencesKt_asIterable($$this$asIterable) {
    kji_Intrinsics_checkParameterIsNotNull($$this$asIterable, $rt_s(1267));
    return ks_SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1__init_($$this$asIterable);
}
function ks_SequencesKt___SequencesKt__init_0(var$0) {
    ks_SequencesKt___SequencesJvmKt__init_0(var$0);
}
function ks_SequencesKt() {
    ks_SequencesKt___SequencesKt.call(this);
}
function ks_SequencesKt__init_() {
    var var_0 = new ks_SequencesKt();
    ks_SequencesKt__init_0(var_0);
    return var_0;
}
function ks_SequencesKt__init_0(var$0) {
    ks_SequencesKt___SequencesKt__init_0(var$0);
}
function oktt_TvmIMG$load$1() {
    var a = this; jl_Object.call(a);
    a.$$response3 = null;
    a.$$out3 = null;
}
function oktt_TvmIMG$load$1__init_(var_0, var_1) {
    var var_2 = new oktt_TvmIMG$load$1();
    oktt_TvmIMG$load$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktt_TvmIMG$load$1_handleEvent($this, $it) {
    $this.$$response3.$invoke11(jl_Integer_valueOf(200), $this.$$out3);
}
function oktt_TvmIMG$load$1__init_0(var$0, var$1, var$2) {
    var$0.$$response3 = var$1;
    var$0.$$out3 = var$2;
    jl_Object__init_0(var$0);
}
function oktt_TvmIMG$load$1_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmIMG$load$1_handleEvent(var$0, var$1);
}
function oktga_AnimPlayer$Companion$animationPool$1() {
    kji_Lambda.call(this);
}
var oktga_AnimPlayer$Companion$animationPool$1_INSTANCE = null;
function oktga_AnimPlayer$Companion$animationPool$1_$callClinit() {
    oktga_AnimPlayer$Companion$animationPool$1_$callClinit = $rt_eraseClinit(oktga_AnimPlayer$Companion$animationPool$1);
    oktga_AnimPlayer$Companion$animationPool$1__clinit_();
}
function oktga_AnimPlayer$Companion$animationPool$1__init_() {
    var var_0 = new oktga_AnimPlayer$Companion$animationPool$1();
    oktga_AnimPlayer$Companion$animationPool$1__init_0(var_0);
    return var_0;
}
function oktga_AnimPlayer$Companion$animationPool$1_invoke(var$0) {
    return oktga_AnimPlayer$Companion$animationPool$1_invoke0(var$0);
}
function oktga_AnimPlayer$Companion$animationPool$1_invoke0($this) {
    return oktga_AnimPlayer$AnimationDesc__init_();
}
function oktga_AnimPlayer$Companion$animationPool$1__init_0(var$0) {
    oktga_AnimPlayer$Companion$animationPool$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktga_AnimPlayer$Companion$animationPool$1__clinit_() {
    oktga_AnimPlayer$Companion$animationPool$1_INSTANCE = oktga_AnimPlayer$Companion$animationPool$1__init_();
}
function oktt_TvmIMG$load$4() {
    var a = this; jl_Object.call(a);
    a.$$response4 = null;
    a.$$out4 = null;
}
function oktt_TvmIMG$load$4__init_(var_0, var_1) {
    var var_2 = new oktt_TvmIMG$load$4();
    oktt_TvmIMG$load$4__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktt_TvmIMG$load$4_handleEvent($this, $it) {
    $this.$$response4.$invoke11(jl_Integer_valueOf(404), $this.$$out4);
}
function oktt_TvmIMG$load$4__init_0(var$0, var$1, var$2) {
    var$0.$$response4 = var$1;
    var$0.$$out4 = var$2;
    jl_Object__init_0(var$0);
}
function oktt_TvmIMG$load$4_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmIMG$load$4_handleEvent(var$0, var$1);
}
function oooi_CollideCylinderBox$sCylinderBoxData() {
    var a = this; jl_Object.call(a);
    a.$m_mCylinderRot0 = null;
    a.$m_vCylinderPos0 = null;
    a.$m_vCylinderAxis0 = null;
    a.$m_fCylinderRadius0 = 0.0;
    a.$m_fCylinderSize0 = 0.0;
    a.$m_avCylinderNormals0 = null;
    a.$m_mBoxRot = null;
    a.$m_vBoxPos = null;
    a.$m_vBoxHalfSize0 = null;
    a.$m_avBoxVertices = null;
    a.$m_vDiff = null;
    a.$m_vNormal0 = null;
    a.$m_fBestDepth1 = 0.0;
    a.$m_fBestrb = 0.0;
    a.$m_fBestrc = 0.0;
    a.$m_iBestAxis1 = 0;
    a.$m_vEp0 = null;
    a.$m_vEp1 = null;
    a.$m_fDepth0 = 0.0;
    a.$m_fDepth1 = 0.0;
    a.$m_gBox = null;
    a.$m_gCylinder = null;
    a.$m_gContact = null;
    a.$m_iFlags1 = 0;
    a.$m_nContacts0 = 0;
    a.$this$0184 = null;
}
function oooi_CollideCylinderBox$sCylinderBoxData__init_0(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oooi_CollideCylinderBox$sCylinderBoxData();
    oooi_CollideCylinderBox$sCylinderBoxData__init_1(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oooi_CollideCylinderBox$sCylinderBoxData__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oooi_CollideCylinderBox$sCylinderBoxData();
    oooi_CollideCylinderBox$sCylinderBoxData__init_2(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function oooi_CollideCylinderBox$sCylinderBoxData__init_1($this, var$1, $cylinder, $box, $flags, $contacts, $skip) {
    $this.$this$0184 = var$1;
    jl_Object__init_0($this);
    $this.$m_mCylinderRot0 = oom_DMatrix3__init_1();
    $this.$m_vCylinderPos0 = oom_DVector3__init_();
    $this.$m_vCylinderAxis0 = oom_DVector3__init_();
    $this.$m_avCylinderNormals0 = $rt_createArray(oom_DVector3, 8);
    $this.$m_mBoxRot = oom_DMatrix3__init_1();
    $this.$m_vBoxPos = oom_DVector3__init_();
    $this.$m_vBoxHalfSize0 = oom_DVector3__init_();
    $this.$m_avBoxVertices = $rt_createArray(oom_DVector3, 8);
    $this.$m_vDiff = oom_DVector3__init_();
    $this.$m_vNormal0 = oom_DVector3__init_();
    $this.$m_vEp0 = oom_DVector3__init_();
    $this.$m_vEp1 = oom_DVector3__init_();
    $this.$m_gBox = $box;
    $this.$m_gCylinder = $cylinder;
    $this.$m_gContact = $contacts;
    $this.$m_iFlags1 = $flags;
    if ($skip == 1) {
        $this.$m_nContacts0 = 0;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1268)).$append1($skip).$toString()));
}
function oooi_CollideCylinderBox$sCylinderBoxData__cldInitCylinderBox($this) {
    var $pPosCyc, $vTempBoxVertices, var$3, var$4, $fAngle, $fAngleIncrement;
    oom_DMatrix3_set($this.$m_mCylinderRot0, $this.$m_gCylinder.$dGeomGetRotation());
    $pPosCyc = $this.$m_gCylinder.$dGeomGetPosition();
    oooi_DxCollisionUtil_dVector3Copy($pPosCyc, $this.$m_vCylinderPos0);
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mCylinderRot0, 2, $this.$m_vCylinderAxis0);
    $this.$m_fCylinderRadius0 = $this.$m_gCylinder.$getRadius();
    $this.$m_fCylinderSize0 = $this.$m_gCylinder.$getLength();
    oom_DMatrix3_set($this.$m_mBoxRot, $this.$m_gBox.$dGeomGetRotation());
    oom_DVector3_set($this.$m_vBoxPos, $this.$m_gBox.$dGeomGetPosition());
    $this.$m_gBox.$dGeomBoxGetLengths($this.$m_vBoxHalfSize0);
    oom_DVector3_scale($this.$m_vBoxHalfSize0, 0.5);
    $this.$m_avBoxVertices.data[0] = oom_DVector3_scale0(oom_DVector3__init_0($this.$m_vBoxHalfSize0), (-1.0), 1.0, (-1.0));
    $this.$m_avBoxVertices.data[1] = oom_DVector3_scale0(oom_DVector3__init_0($this.$m_vBoxHalfSize0), 1.0, 1.0, (-1.0));
    $this.$m_avBoxVertices.data[2] = oom_DVector3_scale0(oom_DVector3__init_0($this.$m_vBoxHalfSize0), (-1.0), (-1.0), (-1.0));
    $this.$m_avBoxVertices.data[3] = oom_DVector3_scale0(oom_DVector3__init_0($this.$m_vBoxHalfSize0), 1.0, (-1.0), (-1.0));
    $this.$m_avBoxVertices.data[4] = oom_DVector3_scale0(oom_DVector3__init_0($this.$m_vBoxHalfSize0), 1.0, 1.0, 1.0);
    $this.$m_avBoxVertices.data[5] = oom_DVector3_scale0(oom_DVector3__init_0($this.$m_vBoxHalfSize0), 1.0, (-1.0), 1.0);
    $this.$m_avBoxVertices.data[6] = oom_DVector3_scale0(oom_DVector3__init_0($this.$m_vBoxHalfSize0), (-1.0), (-1.0), 1.0);
    $this.$m_avBoxVertices.data[7] = oom_DVector3_scale0(oom_DVector3__init_0($this.$m_vBoxHalfSize0), (-1.0), 1.0, 1.0);
    $vTempBoxVertices = oom_DVector3_newArray(8);
    var$3 = 0;
    while (var$3 < 8) {
        var$4 = $vTempBoxVertices.data;
        $this.$this$0184.$dMultiplyMat3Vec3($this.$m_mBoxRot, $this.$m_avBoxVertices.data[var$3], var$4[var$3]);
        $this.$this$0184.$dVector3Add(var$4[var$3], $this.$m_vBoxPos, $this.$m_avBoxVertices.data[var$3]);
        var$3 = var$3 + 1 | 0;
    }
    oooi_DxCollisionUtil_dVector3Subtract($this.$m_vCylinderPos0, $this.$m_vBoxPos, $this.$m_vDiff);
    oooi_Common_$callClinit();
    $this.$m_fBestDepth1 = oooi_Common_MAX_FLOAT;
    oom_DVector3_setZero($this.$m_vNormal0);
    $fAngle = 0.39269908169872414;
    $fAngleIncrement = 0.7853981633974483;
    var$3 = 0;
    while (var$3 < 8) {
        $this.$m_avCylinderNormals0.data[var$3] = oom_DVector3__init_1( -oooi_Common_dCos($fAngle),  -oooi_Common_dSin($fAngle), 0.0);
        $fAngle = $fAngle + $fAngleIncrement;
        var$3 = var$3 + 1 | 0;
    }
    $this.$m_fBestrb = 0.0;
    $this.$m_fBestrc = 0.0;
    $this.$m_iBestAxis1 = 0;
    $this.$m_nContacts0 = 0;
}
function oooi_CollideCylinderBox$sCylinderBoxData__cldTestAxis($this, $vInputNormal, $iAxis) {
    var $fL, $fdot1, $frc, $vTemp1, $frb, var$8, $fd, $fDepth, var$11;
    $fL = $this.$this$0184.$dVector3Length($vInputNormal);
    if ($fL < 1.0E-5)
        return 1;
    oom_DVector3_normalize($vInputNormal);
    $fdot1 = $this.$this$0184.$dVector3Dot($this.$m_vCylinderAxis0, $vInputNormal);
    $frc = $fdot1 > 1.0 ? $this.$m_fCylinderSize0 * 0.5 : $fdot1 < (-1.0) ? $this.$m_fCylinderSize0 * 0.5 : oooi_Common_dFabs($fdot1 * $this.$m_fCylinderSize0 * 0.5) + $this.$m_fCylinderRadius0 * oooi_Common_dSqrt(1.0 - $fdot1 * $fdot1);
    $vTemp1 = oom_DVector3__init_();
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, 0, $vTemp1);
    $frb = oooi_Common_dFabs($this.$this$0184.$dVector3Dot($vTemp1, $vInputNormal)) * oom_DVector3_get0($this.$m_vBoxHalfSize0);
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, 1, $vTemp1);
    var$8 = $frb + oooi_Common_dFabs($this.$this$0184.$dVector3Dot($vTemp1, $vInputNormal)) * oom_DVector3_get1($this.$m_vBoxHalfSize0);
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, 2, $vTemp1);
    var$8 = var$8 + oooi_Common_dFabs($this.$this$0184.$dVector3Dot($vTemp1, $vInputNormal)) * oom_DVector3_get2($this.$m_vBoxHalfSize0);
    $fd = $this.$this$0184.$dVector3Dot($this.$m_vDiff, $vInputNormal);
    $fDepth = $frc + var$8;
    if (oooi_Common_dFabs($fd) > $fDepth)
        return 0;
    var$11 = $fDepth - oooi_Common_dFabs($fd);
    if (var$11 < $this.$m_fBestDepth1) {
        $this.$m_fBestDepth1 = var$11;
        oooi_DxCollisionUtil_dVector3Copy($vInputNormal, $this.$m_vNormal0);
        $this.$m_iBestAxis1 = $iAxis;
        $this.$m_fBestrb = var$8;
        $this.$m_fBestrc = $frc;
        if ($fd > 0.0)
            oooi_DxCollisionUtil_dVector3Inv($this.$m_vNormal0);
    }
    return 1;
}
function oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vCenterPoint, $vVx0, $vVx1, $iAxis) {
    var $vDirEdge, $vEStart, $fdot2, $vTemp1, $fdot1, $vpnt, $vTangent, $vAxis;
    $vDirEdge = oom_DVector3__init_();
    oooi_DxCollisionUtil_dVector3Subtract($vVx1, $vVx0, $vDirEdge);
    oom_DVector3_normalize($vDirEdge);
    $vEStart = oom_DVector3__init_();
    oooi_DxCollisionUtil_dVector3Copy($vVx0, $vEStart);
    $fdot2 = $this.$this$0184.$dVector3Dot($vDirEdge, $this.$m_vCylinderAxis0);
    if (oooi_Common_dFabs($fdot2) < 1.0E-5)
        return 1;
    $vTemp1 = oom_DVector3__init_();
    oooi_DxCollisionUtil_dVector3Subtract($vCenterPoint, $vEStart, $vTemp1);
    $fdot1 = $this.$this$0184.$dVector3Dot($vTemp1, $this.$m_vCylinderAxis0);
    $vpnt = oom_DVector3__init_();
    oom_DVector3_eqSum0($vpnt, $vEStart, $vDirEdge, $fdot1 / $fdot2);
    $vTangent = oom_DVector3__init_();
    oooi_DxCollisionUtil_dVector3Subtract($vCenterPoint, $vpnt, $vTemp1);
    oooi_DxCollisionUtil_dVector3Cross($vTemp1, $this.$m_vCylinderAxis0, $vTangent);
    $vAxis = oom_DVector3__init_();
    oooi_DxCollisionUtil_dVector3Cross($vTangent, $vDirEdge, $vAxis);
    return oooi_CollideCylinderBox$sCylinderBoxData__cldTestAxis($this, $vAxis, $iAxis);
}
function oooi_CollideCylinderBox$sCylinderBoxData__cldTestSeparatingAxes($this) {
    var $vAxis, $vTemp1, $vTemp2, var$4, $vcc;
    oooi_Common_$callClinit();
    $this.$m_fBestDepth1 = oooi_Common_MAX_FLOAT;
    $this.$m_iBestAxis1 = 0;
    $this.$m_fBestrb = 0.0;
    $this.$m_fBestrc = 0.0;
    $this.$m_nContacts0 = 0;
    $vAxis = oom_DVector3__init_();
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, 0, $vAxis);
    if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestAxis($this, $vAxis, 1))
        return 0;
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, 1, $vAxis);
    if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestAxis($this, $vAxis, 2))
        return 0;
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, 2, $vAxis);
    if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestAxis($this, $vAxis, 3))
        return 0;
    oooi_DxCollisionUtil_dVector3Copy($this.$m_vCylinderAxis0, $vAxis);
    if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestAxis($this, $vAxis, 4))
        return 0;
    $this.$this$0184.$dVector3CrossMat3Col($this.$m_mBoxRot, 0, $this.$m_vCylinderAxis0, $vAxis);
    if ($this.$this$0184.$dVector3LengthSquare($vAxis) > 1.0E-6 && !oooi_CollideCylinderBox$sCylinderBoxData__cldTestAxis($this, $vAxis, 5))
        return 0;
    $this.$this$0184.$dVector3CrossMat3Col($this.$m_mBoxRot, 1, $this.$m_vCylinderAxis0, $vAxis);
    if ($this.$this$0184.$dVector3LengthSquare($vAxis) > 1.0E-6 && !oooi_CollideCylinderBox$sCylinderBoxData__cldTestAxis($this, $vAxis, 6))
        return 0;
    $this.$this$0184.$dVector3CrossMat3Col($this.$m_mBoxRot, 2, $this.$m_vCylinderAxis0, $vAxis);
    if ($this.$this$0184.$dVector3LengthSquare($vAxis) > 1.0E-6 && !oooi_CollideCylinderBox$sCylinderBoxData__cldTestAxis($this, $vAxis, 7))
        return 0;
    $vTemp1 = oom_DVector3__init_();
    $vTemp2 = oom_DVector3__init_();
    var$4 = 0;
    while (true) {
        if (var$4 >= 8) {
            $vcc = oom_DVector3__init_();
            oom_DVector3_eqSum0($vcc, $this.$m_vCylinderPos0, $this.$m_vCylinderAxis0, $this.$m_fCylinderSize0 * 0.5);
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[1], $this.$m_avBoxVertices.data[0], 16))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[1], $this.$m_avBoxVertices.data[3], 17))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[2], $this.$m_avBoxVertices.data[3], 18))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[2], $this.$m_avBoxVertices.data[0], 19))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[4], $this.$m_avBoxVertices.data[1], 20))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[4], $this.$m_avBoxVertices.data[7], 21))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[0], $this.$m_avBoxVertices.data[7], 22))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[5], $this.$m_avBoxVertices.data[3], 23))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[5], $this.$m_avBoxVertices.data[6], 24))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[2], $this.$m_avBoxVertices.data[6], 25))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[4], $this.$m_avBoxVertices.data[5], 26))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[6], $this.$m_avBoxVertices.data[7], 27))
                return 0;
            oom_DVector3_eqSum0($vcc, $this.$m_vCylinderPos0, $this.$m_vCylinderAxis0,  -$this.$m_fCylinderSize0 * 0.5);
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[1], $this.$m_avBoxVertices.data[0], 28))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[1], $this.$m_avBoxVertices.data[3], 29))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[2], $this.$m_avBoxVertices.data[3], 30))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[2], $this.$m_avBoxVertices.data[0], 31))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[4], $this.$m_avBoxVertices.data[1], 32))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[4], $this.$m_avBoxVertices.data[7], 33))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[0], $this.$m_avBoxVertices.data[7], 34))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[5], $this.$m_avBoxVertices.data[3], 35))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[5], $this.$m_avBoxVertices.data[6], 36))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[2], $this.$m_avBoxVertices.data[6], 37))
                return 0;
            if (!oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[4], $this.$m_avBoxVertices.data[5], 38))
                return 0;
            if (oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis($this, $vcc, $this.$m_avBoxVertices.data[6], $this.$m_avBoxVertices.data[7], 39))
                return 1;
            return 0;
        }
        oooi_DxCollisionUtil_dVector3Subtract($this.$m_avBoxVertices.data[var$4], $this.$m_vCylinderPos0, $vTemp1);
        oooi_DxCollisionUtil_dVector3Cross($this.$m_vCylinderAxis0, $vTemp1, $vTemp2);
        oooi_DxCollisionUtil_dVector3Cross($this.$m_vCylinderAxis0, $vTemp2, $vAxis);
        if ($this.$this$0184.$dVector3LengthSquare($vAxis) > 1.0E-6 && !oooi_CollideCylinderBox$sCylinderBoxData__cldTestAxis($this, $vAxis, 8 + var$4 | 0))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return 0;
}
function oooi_CollideCylinderBox$sCylinderBoxData__cldClipCylinderToBox($this) {
    var $vN, $fTemp1, $vCposTrans, $vTemp1, $plPlane, $Contact0, $Contact1;
    oooi_Common_dIASSERT($this.$m_nContacts0 == ($this.$m_iFlags1 & 65535) ? 0 : 1);
    $vN = oom_DVector3__init_();
    $fTemp1 = $this.$this$0184.$dVector3Dot($this.$m_vCylinderAxis0, $this.$m_vNormal0);
    oom_DVector3_eqSum0($vN, $this.$m_vNormal0, $this.$m_vCylinderAxis0,  -$fTemp1);
    ooo_OdeMath_dNormalize3($vN);
    $vCposTrans = oom_DVector3__init_();
    oom_DVector3_eqSum0($vCposTrans, $this.$m_vCylinderPos0, $vN, $this.$m_fCylinderRadius0);
    oom_DVector3_eqSum0($this.$m_vEp0, $vCposTrans, $this.$m_vCylinderAxis0, $this.$m_fCylinderSize0 * 0.5);
    oom_DVector3_eqSum0($this.$m_vEp1, $vCposTrans, $this.$m_vCylinderAxis0,  -$this.$m_fCylinderSize0 * 0.5);
    oom_DVector3_sub($this.$m_vEp0, $this.$m_vBoxPos);
    oom_DVector3_sub($this.$m_vEp1, $this.$m_vBoxPos);
    $vTemp1 = oom_DVector3__init_();
    $plPlane = oom_DVector4__init_();
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, 0, $vTemp1);
    oooi_DxCollisionUtil_dConstructPlane($vTemp1, oom_DVector3_get0($this.$m_vBoxHalfSize0), $plPlane);
    if (!oooi_DxCollisionUtil_dClipEdgeToPlane($this.$m_vEp0, $this.$m_vEp1, $plPlane))
        return 0;
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, 1, $vTemp1);
    oooi_DxCollisionUtil_dConstructPlane($vTemp1, oom_DVector3_get1($this.$m_vBoxHalfSize0), $plPlane);
    if (!oooi_DxCollisionUtil_dClipEdgeToPlane($this.$m_vEp0, $this.$m_vEp1, $plPlane))
        return 0;
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, 2, $vTemp1);
    oooi_DxCollisionUtil_dConstructPlane($vTemp1, oom_DVector3_get2($this.$m_vBoxHalfSize0), $plPlane);
    if (!oooi_DxCollisionUtil_dClipEdgeToPlane($this.$m_vEp0, $this.$m_vEp1, $plPlane))
        return 0;
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, 0, $vTemp1);
    oooi_DxCollisionUtil_dVector3Inv($vTemp1);
    oooi_DxCollisionUtil_dConstructPlane($vTemp1, oom_DVector3_get0($this.$m_vBoxHalfSize0), $plPlane);
    if (!oooi_DxCollisionUtil_dClipEdgeToPlane($this.$m_vEp0, $this.$m_vEp1, $plPlane))
        return 0;
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, 1, $vTemp1);
    oooi_DxCollisionUtil_dVector3Inv($vTemp1);
    oooi_DxCollisionUtil_dConstructPlane($vTemp1, oom_DVector3_get1($this.$m_vBoxHalfSize0), $plPlane);
    if (!oooi_DxCollisionUtil_dClipEdgeToPlane($this.$m_vEp0, $this.$m_vEp1, $plPlane))
        return 0;
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, 2, $vTemp1);
    oooi_DxCollisionUtil_dVector3Inv($vTemp1);
    oooi_DxCollisionUtil_dConstructPlane($vTemp1, oom_DVector3_get2($this.$m_vBoxHalfSize0), $plPlane);
    if (!oooi_DxCollisionUtil_dClipEdgeToPlane($this.$m_vEp0, $this.$m_vEp1, $plPlane))
        return 0;
    $this.$m_fDepth0 = $this.$m_fBestrb + $this.$this$0184.$dVector3Dot($this.$m_vEp0, $this.$m_vNormal0);
    $this.$m_fDepth1 = $this.$m_fBestrb + $this.$this$0184.$dVector3Dot($this.$m_vEp1, $this.$m_vNormal0);
    if ($this.$m_fDepth0 < 0.0)
        $this.$m_fDepth0 = 0.0;
    if ($this.$m_fDepth1 < 0.0)
        $this.$m_fDepth1 = 0.0;
    oom_DVector3_add($this.$m_vEp0, $this.$m_vBoxPos);
    oom_DVector3_add($this.$m_vEp1, $this.$m_vBoxPos);
    $Contact0 = ooo_DContactGeomBuffer_getSafe($this.$m_gContact, $this.$m_iFlags1, $this.$m_nContacts0);
    $Contact0.$depth = $this.$m_fDepth0;
    oooi_DxCollisionUtil_dVector3Copy($this.$m_vNormal0, $Contact0.$normal);
    oooi_DxCollisionUtil_dVector3Copy($this.$m_vEp0, $Contact0.$pos0);
    $Contact0.$g1 = $this.$m_gCylinder;
    $Contact0.$g2 = $this.$m_gBox;
    $Contact0.$side1 = (-1);
    $Contact0.$side2 = (-1);
    oooi_DxCollisionUtil_dVector3Inv($Contact0.$normal);
    $this.$m_nContacts0 = $this.$m_nContacts0 + 1 | 0;
    if ($this.$m_nContacts0 != ($this.$m_iFlags1 & 65535)) {
        $Contact1 = ooo_DContactGeomBuffer_getSafe($this.$m_gContact, $this.$m_iFlags1, $this.$m_nContacts0);
        $Contact1.$depth = $this.$m_fDepth1;
        oooi_DxCollisionUtil_dVector3Copy($this.$m_vNormal0, $Contact1.$normal);
        oooi_DxCollisionUtil_dVector3Copy($this.$m_vEp1, $Contact1.$pos0);
        $Contact1.$g1 = $this.$m_gCylinder;
        $Contact1.$g2 = $this.$m_gBox;
        $Contact0.$side1 = (-1);
        $Contact0.$side2 = (-1);
        oooi_DxCollisionUtil_dVector3Inv($Contact1.$normal);
        $this.$m_nContacts0 = $this.$m_nContacts0 + 1 | 0;
    }
    return 1;
}
function oooi_CollideCylinderBox$sCylinderBoxData__cldClipBoxToCylinder($this) {
    var $vCylinderCirclePos, $vCylinderCircleNormal_Rel, $vNr, $mBoxInv, $vAbsNormal, $iB0, $iB1, $iB2, $vCenter, $vTemp, $avPoints, var$12, $avTempArray1, $avTempArray2, $vAxis1, $vAxis2, $mCylinderInv, $i, $iTmpCounter2, $plPlane, var$21, var$22, $vPoint, $ftmpdot, $fTempDepth, $Contact0;
    oooi_Common_dIASSERT($this.$m_nContacts0 == ($this.$m_iFlags1 & 65535) ? 0 : 1);
    $vCylinderCirclePos = oom_DVector3__init_();
    $vCylinderCircleNormal_Rel = oom_DVector3__init_();
    if ($this.$this$0184.$dVector3Dot($this.$m_vCylinderAxis0, $this.$m_vNormal0) > 0.0) {
        oom_DVector3_eqSum0($vCylinderCirclePos, $this.$m_vCylinderPos0, $this.$m_vCylinderAxis0, $this.$m_fCylinderSize0 * 0.5);
        oom_DVector3_set2($vCylinderCircleNormal_Rel, 2, (-1.0));
    } else {
        oom_DVector3_eqSum0($vCylinderCirclePos, $this.$m_vCylinderPos0, $this.$m_vCylinderAxis0,  -$this.$m_fCylinderSize0 * 0.5);
        oom_DVector3_set2($vCylinderCircleNormal_Rel, 2, 1.0);
    }
    $vNr = oom_DVector3__init_();
    $mBoxInv = oom_DMatrix3__init_1();
    $this.$this$0184.$dMatrix3Inv($this.$m_mBoxRot, $mBoxInv);
    $this.$this$0184.$dMultiplyMat3Vec3($mBoxInv, $this.$m_vNormal0, $vNr);
    $vAbsNormal = oom_DVector3__init_0($vNr);
    oom_DVector3_eqAbs($vAbsNormal);
    if (oom_DVector3_get1($vAbsNormal) <= oom_DVector3_get0($vAbsNormal)) {
        if (oom_DVector3_get1($vAbsNormal) > oom_DVector3_get2($vAbsNormal)) {
            $iB0 = 0;
            $iB1 = 1;
            $iB2 = 2;
        } else if (oom_DVector3_get0($vAbsNormal) <= oom_DVector3_get2($vAbsNormal)) {
            $iB0 = 2;
            $iB1 = 0;
            $iB2 = 1;
        } else {
            $iB0 = 0;
            $iB1 = 2;
            $iB2 = 1;
        }
    } else if (oom_DVector3_get0($vAbsNormal) > oom_DVector3_get2($vAbsNormal)) {
        $iB0 = 1;
        $iB1 = 0;
        $iB2 = 2;
    } else if (oom_DVector3_get1($vAbsNormal) <= oom_DVector3_get2($vAbsNormal)) {
        $iB0 = 2;
        $iB1 = 1;
        $iB2 = 0;
    } else {
        $iB0 = 1;
        $iB1 = 2;
        $iB2 = 0;
    }
    $vCenter = oom_DVector3__init_();
    $vTemp = oom_DVector3__init_();
    if (oom_DVector3_get($vNr, $iB0) <= 0.0) {
        oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, $iB0, $vTemp);
        oom_DVector3_eqSum0($vCenter, $this.$m_vBoxPos, $vTemp, oom_DVector3_get($this.$m_vBoxHalfSize0, $iB0));
    } else {
        oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, $iB0, $vTemp);
        oom_DVector3_eqSum0($vCenter, $this.$m_vBoxPos, $vTemp,  -oom_DVector3_get($this.$m_vBoxHalfSize0, $iB0));
    }
    $avPoints = oom_DVector3_newArray(4);
    var$12 = $avPoints.data;
    $avTempArray1 = oom_DVector3_newArray(16);
    $avTempArray2 = oom_DVector3_newArray(16);
    $vAxis1 = oom_DVector3__init_();
    $vAxis2 = oom_DVector3__init_();
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, $iB1, $vAxis1);
    oooi_DxCollisionUtil_dMat3GetCol($this.$m_mBoxRot, $iB2, $vAxis2);
    oom_DVector3_eqSum(var$12[0], $vAxis1, oom_DVector3_get($this.$m_vBoxHalfSize0, $iB1), $vAxis2,  -oom_DVector3_get($this.$m_vBoxHalfSize0, $iB2));
    oom_DVector3_add(var$12[0], $vCenter);
    oom_DVector3_eqSum(var$12[1], $vAxis1,  -oom_DVector3_get($this.$m_vBoxHalfSize0, $iB1), $vAxis2,  -oom_DVector3_get($this.$m_vBoxHalfSize0, $iB2));
    oom_DVector3_add(var$12[1], $vCenter);
    oom_DVector3_eqSum(var$12[2], $vAxis1,  -oom_DVector3_get($this.$m_vBoxHalfSize0, $iB1), $vAxis2, oom_DVector3_get($this.$m_vBoxHalfSize0, $iB2));
    oom_DVector3_add(var$12[2], $vCenter);
    oom_DVector3_eqSum(var$12[3], $vAxis1, oom_DVector3_get($this.$m_vBoxHalfSize0, $iB1), $vAxis2, oom_DVector3_get($this.$m_vBoxHalfSize0, $iB2));
    oom_DVector3_add(var$12[3], $vCenter);
    $mCylinderInv = oom_DMatrix3__init_1();
    $this.$this$0184.$dMatrix3Inv($this.$m_mCylinderRot0, $mCylinderInv);
    $i = 0;
    while ($i < 4) {
        oooi_DxCollisionUtil_dVector3Subtract(var$12[$i], $vCylinderCirclePos, $vTemp);
        $this.$this$0184.$dMultiplyMat3Vec3($mCylinderInv, $vTemp, var$12[$i]);
        $i = $i + 1 | 0;
    }
    $iTmpCounter2 = 0;
    $plPlane = oom_DVector4__init_();
    oooi_DxCollisionUtil_dConstructPlane($vCylinderCircleNormal_Rel, 0.0, $plPlane);
    var$21 = oooi_DxCollisionUtil_dClipPolyToPlane($avPoints, 4, $avTempArray1, $plPlane);
    var$22 = 0;
    while (var$22 < 8) {
        oooi_DxCollisionUtil_dConstructPlane($this.$m_avCylinderNormals0.data[var$22], $this.$m_fCylinderRadius0, $plPlane);
        if (0 != (var$22 % 2 | 0))
            var$21 = oooi_DxCollisionUtil_dClipPolyToPlane($avTempArray2, $iTmpCounter2, $avTempArray1, $plPlane);
        else
            $iTmpCounter2 = oooi_DxCollisionUtil_dClipPolyToPlane($avTempArray1, var$21, $avTempArray2, $plPlane);
        oooi_Common_dIASSERT(var$21 >= 0 && var$21 <= 16 ? 1 : 0);
        oooi_Common_dIASSERT($iTmpCounter2 >= 0 && $iTmpCounter2 <= 16 ? 1 : 0);
        var$22 = var$22 + 1 | 0;
    }
    a: {
        $vPoint = oom_DVector3__init_();
        if (!(var$22 % 2 | 0)) {
            $i = 0;
            while (true) {
                if ($i >= var$21)
                    break a;
                var$12 = $avTempArray1.data;
                ooo_OdeMath_dMultiply0_331($vPoint, $this.$m_mCylinderRot0, var$12[$i]);
                oom_DVector3_add($vPoint, $vCylinderCirclePos);
                oooi_DxCollisionUtil_dVector3Subtract($vPoint, $this.$m_vCylinderPos0, $vTemp);
                $ftmpdot = $this.$this$0184.$dVector3Dot($vTemp, $this.$m_vNormal0);
                $fTempDepth = $this.$m_fBestrc - $ftmpdot;
                if ($fTempDepth > 0.0) {
                    $Contact0 = ooo_DContactGeomBuffer_getSafe($this.$m_gContact, $this.$m_iFlags1, $this.$m_nContacts0);
                    $Contact0.$depth = $fTempDepth;
                    oooi_DxCollisionUtil_dVector3Copy($this.$m_vNormal0, $Contact0.$normal);
                    oooi_DxCollisionUtil_dVector3Copy($vPoint, $Contact0.$pos0);
                    $Contact0.$g1 = $this.$m_gCylinder;
                    $Contact0.$g2 = $this.$m_gBox;
                    $Contact0.$side1 = (-1);
                    $Contact0.$side2 = (-1);
                    oooi_DxCollisionUtil_dVector3Inv($Contact0.$normal);
                    $this.$m_nContacts0 = $this.$m_nContacts0 + 1 | 0;
                    if ($this.$m_nContacts0 == ($this.$m_iFlags1 & 65535))
                        break;
                }
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            b: {
                while (true) {
                    if ($i >= $iTmpCounter2)
                        break b;
                    var$12 = $avTempArray2.data;
                    ooo_OdeMath_dMultiply0_331($vPoint, $this.$m_mCylinderRot0, var$12[$i]);
                    oom_DVector3_add($vPoint, $vCylinderCirclePos);
                    oooi_DxCollisionUtil_dVector3Subtract($vPoint, $this.$m_vCylinderPos0, $vTemp);
                    $ftmpdot = $this.$this$0184.$dVector3Dot($vTemp, $this.$m_vNormal0);
                    $fTempDepth = $this.$m_fBestrc - $ftmpdot;
                    if ($fTempDepth > 0.0) {
                        $Contact0 = ooo_DContactGeomBuffer_getSafe($this.$m_gContact, $this.$m_iFlags1, $this.$m_nContacts0);
                        $Contact0.$depth = $fTempDepth;
                        oooi_DxCollisionUtil_dVector3Copy($this.$m_vNormal0, $Contact0.$normal);
                        oooi_DxCollisionUtil_dVector3Copy($vPoint, $Contact0.$pos0);
                        $Contact0.$g1 = $this.$m_gCylinder;
                        $Contact0.$g2 = $this.$m_gBox;
                        $Contact0.$side1 = (-1);
                        $Contact0.$side2 = (-1);
                        oooi_DxCollisionUtil_dVector3Inv($Contact0.$normal);
                        $this.$m_nContacts0 = $this.$m_nContacts0 + 1 | 0;
                        if ($this.$m_nContacts0 == ($this.$m_iFlags1 & 65535))
                            break;
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
    }
}
function oooi_CollideCylinderBox$sCylinderBoxData_PerformCollisionChecking($this) {
    var $fdot;
    oooi_CollideCylinderBox$sCylinderBoxData__cldInitCylinderBox($this);
    if (0 == oooi_CollideCylinderBox$sCylinderBoxData__cldTestSeparatingAxes($this))
        return 0;
    if (!$this.$m_iBestAxis1) {
        oooi_Common_dIASSERT(0);
        return 0;
    }
    $fdot = $this.$this$0184.$dVector3Dot($this.$m_vNormal0, $this.$m_vCylinderAxis0);
    if (oooi_Common_dFabs($fdot) >= 0.9)
        oooi_CollideCylinderBox$sCylinderBoxData__cldClipBoxToCylinder($this);
    else if (!oooi_CollideCylinderBox$sCylinderBoxData__cldClipCylinderToBox($this))
        return 0;
    return $this.$m_nContacts0;
}
function oooi_CollideCylinderBox$sCylinderBoxData__init_2($this, $x0, $x1, $x2, $x3, $x4, $x5, $x6) {
    oooi_CollideCylinderBox$sCylinderBoxData__init_1($this, $x0, $x1, $x2, $x3, $x4, $x5);
}
function oooi_CollideCylinderBox$sCylinderBoxData_access$100($x0) {
    return oooi_CollideCylinderBox$sCylinderBoxData_PerformCollisionChecking($x0);
}
function oktt_TvmIMG$load$3() {
    var a = this; jl_Object.call(a);
    a.$$response5 = null;
    a.$$out5 = null;
}
function oktt_TvmIMG$load$3__init_(var_0, var_1) {
    var var_2 = new oktt_TvmIMG$load$3();
    oktt_TvmIMG$load$3__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktt_TvmIMG$load$3_handleEvent($this, $it) {
    $this.$$response5.$invoke11(jl_Integer_valueOf(200), $this.$$out5);
}
function oktt_TvmIMG$load$3__init_0(var$0, var$1, var$2) {
    var$0.$$response5 = var$1;
    var$0.$$out5 = var$2;
    jl_Object__init_0(var$0);
}
function oktt_TvmIMG$load$3_handleEvent$exported$0(var$0, var$1) {
    oktt_TvmIMG$load$3_handleEvent(var$0, var$1);
}
function oktgg_GLTF$read$6() {
    kji_Lambda.call(this);
    this.$this$088 = null;
}
function oktgg_GLTF$read$6__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$6();
    oktgg_GLTF$read$6__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$6_invoke(var$0, var$1) {
    oktgg_GLTF$read$6_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$6_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTF$read$6$1__init_($this));
}
function oktgg_GLTF$read$6__init_0(var$0, var$1) {
    var$0.$this$088 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTF$read$7() {
    kji_Lambda.call(this);
    this.$this$0157 = null;
}
function oktgg_GLTF$read$7__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$7();
    oktgg_GLTF$read$7__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$7_invoke(var$0, var$1) {
    oktgg_GLTF$read$7_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$7_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTF$read$7$1__init_($this));
}
function oktgg_GLTF$read$7__init_0(var$0, var$1) {
    var$0.$this$0157 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTF$read$8() {
    kji_Lambda.call(this);
    this.$this$0185 = null;
}
function oktgg_GLTF$read$8__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$8();
    oktgg_GLTF$read$8__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$8_invoke(var$0, var$1) {
    oktgg_GLTF$read$8_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$8_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTF$read$8$1__init_($this));
}
function oktgg_GLTF$read$8__init_0(var$0, var$1) {
    var$0.$this$0185 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktgg_GLTF$read$9() {
    kji_Lambda.call(this);
    this.$this$0186 = null;
}
function oktgg_GLTF$read$9__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$9();
    oktgg_GLTF$read$9__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$9_invoke(var$0, var$1) {
    oktgg_GLTF$read$9_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$9_invoke0($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTF$read$9$1__init_($this));
}
function oktgg_GLTF$read$9__init_0(var$0, var$1) {
    var$0.$this$0186 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktt_MouseTest() {
    jl_Object.call(this);
}
function oktt_MouseTest__init_() {
    var var_0 = new oktt_MouseTest();
    oktt_MouseTest__init_0(var_0);
    return var_0;
}
function oktt_MouseTest_getName($this) {
    return $rt_s(1269);
}
function oktt_MouseTest_testMain($this) {
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, $rt_s(1270), null, 2, null);
    okti_MOUSE_$callClinit();
    okti_MOUSE_addListener(okti_MOUSE_INSTANCE, oktt_MouseTest$testMain$1__init_());
}
function oktt_MouseTest__init_0($this) {
    jl_Object__init_0($this);
}
function ju_Random() {
    jl_Object.call(this);
}
function ju_Random__init_() {
    var var_0 = new ju_Random();
    ju_Random__init_1(var_0);
    return var_0;
}
function ju_Random__init_0(var_0) {
    var var_1 = new ju_Random();
    ju_Random__init_2(var_1, var_0);
    return var_1;
}
function ju_Random__init_1($this) {
    jl_Object__init_0($this);
}
function ju_Random__init_2($this, $seed) {
    jl_Object__init_0($this);
}
function ju_Random_next($this, $bits) {
    if ($bits == 32)
        return $this.$nextDouble() * 4.294967295E9 + (-2.147483648E9) | 0;
    return $this.$nextDouble() * Long_toNumber(Long_shl(Long_fromInt(1), jl_Math_min(32, $bits))) | 0;
}
function ju_Random_nextInt($this) {
    return $this.$next9(32);
}
function ju_Random_nextFloat($this) {
    return $this.$nextDouble();
}
function ju_Random_nextDouble($this) {
    return Math.random();
}
function cgcj_Jsoner$2() {
    jl_Object.call(this);
}
var cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types = null;
var cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Jsoner$States = null;
function cgcj_Jsoner$2_$callClinit() {
    cgcj_Jsoner$2_$callClinit = $rt_eraseClinit(cgcj_Jsoner$2);
    cgcj_Jsoner$2__clinit_();
}
function cgcj_Jsoner$2__clinit_() {
    var $$je;
    cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Jsoner$States = $rt_createIntArray(cgcj_Jsoner$States_values().data.length);
    a: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Jsoner$States.data[jl_Enum_ordinal(cgcj_Jsoner$States_DONE)] = 1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    b: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Jsoner$States.data[jl_Enum_ordinal(cgcj_Jsoner$States_INITIAL)] = 2;
            break b;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    c: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Jsoner$States.data[jl_Enum_ordinal(cgcj_Jsoner$States_PARSED_ERROR)] = 3;
            break c;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    d: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Jsoner$States.data[jl_Enum_ordinal(cgcj_Jsoner$States_PARSING_ARRAY)] = 4;
            break d;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    e: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Jsoner$States.data[jl_Enum_ordinal(cgcj_Jsoner$States_PARSING_OBJECT)] = 5;
            break e;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    f: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Jsoner$States.data[jl_Enum_ordinal(cgcj_Jsoner$States_PARSING_ENTRY)] = 6;
            break f;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types = $rt_createIntArray(cgcj_Yytoken$Types_values().data.length);
    g: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_DATUM)] = 1;
            break g;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    h: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_LEFT_BRACE)] = 2;
            break h;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    i: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_LEFT_SQUARE)] = 3;
            break i;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    j: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_COMMA)] = 4;
            break j;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    k: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_RIGHT_SQUARE)] = 5;
            break k;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    l: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_RIGHT_BRACE)] = 6;
            break l;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    m: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_COLON)] = 7;
            break m;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    n: {
        try {
            cgcj_Jsoner$2_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_END)] = 8;
            break n;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
}
function jnc_CharsetDecoder() {
    var a = this; jl_Object.call(a);
    a.$charset1 = null;
    a.$averageCharsPerByte = 0.0;
    a.$maxCharsPerByte = 0.0;
    a.$replacement0 = null;
    a.$malformedAction0 = null;
    a.$unmappableAction0 = null;
    a.$state = 0;
}
function jnc_CharsetDecoder__init_(var_0, var_1, var_2) {
    var var_3 = new jnc_CharsetDecoder();
    jnc_CharsetDecoder__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jnc_CharsetDecoder__init_0($this, $cs, $averageCharsPerByte, $maxCharsPerByte) {
    jl_Object__init_0($this);
    $this.$replacement0 = $rt_s(1271);
    jnc_CodingErrorAction_$callClinit();
    $this.$malformedAction0 = jnc_CodingErrorAction_REPORT;
    $this.$unmappableAction0 = jnc_CodingErrorAction_REPORT;
    if ($averageCharsPerByte <= 0.0)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1272)).$append11($averageCharsPerByte).$toString()));
    if ($maxCharsPerByte > 0.0) {
        $this.$charset1 = $cs;
        $this.$averageCharsPerByte = $averageCharsPerByte;
        $this.$maxCharsPerByte = $maxCharsPerByte;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1273)).$append11($maxCharsPerByte).$toString()));
}
function jnc_CharsetDecoder_onMalformedInput($this, $newAction) {
    if ($newAction !== null) {
        $this.$malformedAction0 = $newAction;
        $this.$implOnMalformedInput($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1274)));
}
function jnc_CharsetDecoder_implOnMalformedInput($this, $newAction) {
    return;
}
function jnc_CharsetDecoder_onUnmappableCharacter($this, $newAction) {
    if ($newAction !== null) {
        $this.$unmappableAction0 = $newAction;
        $this.$implOnUnmappableCharacter($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1274)));
}
function jnc_CharsetDecoder_implOnUnmappableCharacter($this, $newAction) {
    return;
}
function jnc_CharsetDecoder_decode0($this, $in, $out, $endOfInput) {
    var $result, $e, var$6, $$je;
    if (!($this.$state == 2 && !$endOfInput) && $this.$state != 3) {
        $this.$state = $endOfInput ? 2 : 1;
        while (true) {
            try {
                $result = $this.$decodeLoop($in, $out);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_RuntimeException) {
                    $e = $$je;
                    $rt_throw(jnc_CoderMalfunctionError__init_($e));
                } else {
                    throw $$e;
                }
            }
            if ($result.$isOverflow())
                return $result;
            if ($result.$isUnderflow()) {
                if ($endOfInput && jn_Buffer_hasRemaining($in)) {
                    var$6 = $this.$malformedAction0;
                    jnc_CodingErrorAction_$callClinit();
                    if (var$6 === jnc_CodingErrorAction_REPORT)
                        return jnc_CoderResult_malformedForLength(jn_Buffer_remaining($in));
                    if (jn_Buffer_remaining($out) <= $this.$replacement0.$length())
                        return jnc_CoderResult_OVERFLOW;
                    $in.$position10(jn_Buffer_position($in) + jn_Buffer_remaining($in) | 0);
                    if ($this.$malformedAction0 === jnc_CodingErrorAction_REPLACE)
                        jn_CharBuffer_put1($out, $this.$replacement0);
                }
                return $result;
            }
            if ($result.$isMalformed()) {
                var$6 = $this.$malformedAction0;
                jnc_CodingErrorAction_$callClinit();
                if (var$6 === jnc_CodingErrorAction_REPORT)
                    return $result;
                if ($this.$malformedAction0 === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement0.$length())
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put1($out, $this.$replacement0);
                }
                $in.$position10(jn_Buffer_position($in) + $result.$length() | 0);
            } else if ($result.$isUnmappable()) {
                var$6 = $this.$unmappableAction0;
                jnc_CodingErrorAction_$callClinit();
                if (var$6 === jnc_CodingErrorAction_REPORT)
                    break;
                if ($this.$unmappableAction0 === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement0.$length())
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put1($out, $this.$replacement0);
                }
                $in.$position10(jn_Buffer_position($in) + $result.$length() | 0);
            }
        }
        return $result;
    }
    $rt_throw(jl_IllegalStateException__init_0());
}
function jnc_CharsetDecoder_flush($this, $out) {
    if ($this.$state != 3 && $this.$state != 2)
        $rt_throw(jl_IllegalStateException__init_0());
    $this.$state = 3;
    return $this.$implFlush0($out);
}
function jnc_CharsetDecoder_reset($this) {
    $this.$state = 0;
    $this.$implReset();
    return $this;
}
function jnc_CharsetDecoder_decode($this, $in) {
    var $out, $result, var$4;
    if ($this.$state && $this.$state != 3)
        $rt_throw(jl_IllegalStateException__init_0());
    if (!jn_Buffer_remaining($in))
        return jn_CharBuffer_allocate(0);
    if ($this.$state)
        jnc_CharsetDecoder_reset($this);
    $out = jn_CharBuffer_allocate(jl_Math_max(8, jn_Buffer_remaining($in) * $this.$averageCharsPerByte | 0));
    while (true) {
        $result = jnc_CharsetDecoder_decode0($this, $in, $out, 0);
        if ($result.$isUnderflow())
            break;
        if ($result.$isOverflow())
            $out = jnc_CharsetDecoder_expand($this, $out);
        if (!$result.$isError())
            continue;
        $result.$throwException();
    }
    var$4 = jnc_CharsetDecoder_decode0($this, $in, $out, 1);
    if (var$4.$isError())
        var$4.$throwException();
    while (true) {
        var$4 = jnc_CharsetDecoder_flush($this, $out);
        if (var$4.$isUnderflow())
            break;
        $out = jnc_CharsetDecoder_expand($this, $out);
    }
    jn_CharBuffer_flip($out);
    return $out;
}
function jnc_CharsetDecoder_expand($this, $buffer) {
    var $array, var$3, $result;
    $array = jn_CharBuffer_array($buffer);
    var$3 = $array.data;
    var$3 = ju_Arrays_copyOf($array, jl_Math_max(8, var$3.length * 2 | 0));
    $result = jn_CharBuffer_wrap0(var$3);
    $result.$position3(jn_Buffer_position($buffer));
    return $result;
}
function jnc_CharsetDecoder_implFlush($this, $out) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult_UNDERFLOW;
}
function jnc_CharsetDecoder_implReset($this) {
    return;
}
function jnci_BufferedDecoder() {
    jnc_CharsetDecoder.call(this);
}
function jnci_BufferedDecoder__init_(var_0, var_1, var_2) {
    var var_3 = new jnci_BufferedDecoder();
    jnci_BufferedDecoder__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jnci_BufferedDecoder__init_0($this, $cs, $averageCharsPerByte, $maxCharsPerByte) {
    jnc_CharsetDecoder__init_0($this, $cs, $averageCharsPerByte, $maxCharsPerByte);
}
function jnci_BufferedDecoder_decodeLoop($this, $in, $out) {
    var $inArray, $inPos, $inSize, $outArray, $i, var$8, var$9, var$10, $outSize, $controller;
    $inArray = $rt_createByteArray(jl_Math_min(jn_Buffer_remaining($in), 512));
    $inPos = 0;
    $inSize = 0;
    $outArray = $rt_createCharArray(jl_Math_min(jn_Buffer_remaining($out), 512));
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$8 = $inArray.data;
                    var$8[$i - $inPos | 0] = var$8[$i];
                    $i = $i + 1 | 0;
                }
                var$8 = $inArray.data;
                var$9 = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + var$9 | 0, var$8.length);
                $in.$get34($inArray, var$9, $inSize - var$9 | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    var$10 = jnc_CoderResult_UNDERFLOW;
                } else {
                    jnc_CoderResult_$callClinit();
                    var$10 = jnc_CoderResult_OVERFLOW;
                }
                break a;
            }
            var$8 = $outArray.data;
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$8.length);
            $controller = jnci_BufferedDecoder$Controller__init_($in, $out);
            var$10 = $this.$arrayDecode($inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition0;
            if (var$10 === null && 0 == $controller.$outPosition0) {
                jnc_CoderResult_$callClinit();
                var$10 = jnc_CoderResult_UNDERFLOW;
            }
            var$9 = $controller.$outPosition0;
            $out.$put17($outArray, 0, var$9);
            if (var$10 !== null)
                break;
        }
    }
    $in.$position10(jn_Buffer_position($in) - ($inSize - $inPos | 0) | 0);
    return var$10;
}
function jnci_UTF8Decoder() {
    jnci_BufferedDecoder.call(this);
}
function jnci_UTF8Decoder__init_(var_0) {
    var var_1 = new jnci_UTF8Decoder();
    jnci_UTF8Decoder__init_0(var_1, var_0);
    return var_1;
}
function jnci_UTF8Decoder__init_0($this, $cs) {
    jnci_BufferedDecoder__init_0($this, $cs, 0.3333333432674408, 0.5);
}
function jnci_UTF8Decoder_arrayDecode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $b, var$12, var$13, $b2, var$15, $b3, $c, $b4, $code;
    $result = null;
    a: {
        b: {
            c: {
                while ($inPos < $inSize) {
                    if ($outPos >= $outSize)
                        break a;
                    var$9 = $inArray.data;
                    var$10 = $inPos + 1 | 0;
                    $b = var$9[$inPos] & 255;
                    if (!($b & 128)) {
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = $b & 65535;
                    } else if (($b & 224) == 192) {
                        if (var$10 >= $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput())
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$13 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2)) {
                            $inPos = var$13 + (-2) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = (($b & 31) << 6 | $b2 & 63) & 65535;
                        var$10 = var$13;
                    } else if (($b & 240) == 224) {
                        if ((var$10 + 2 | 0) > $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput())
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$15 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        var$10 = var$15 + 1 | 0;
                        $b3 = var$9[var$15];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2))
                            break b;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break b;
                        $c = (($b & 15) << 12 | ($b2 & 63) << 6 | $b3 & 63) & 65535;
                        if (jl_Character_isSurrogate($c)) {
                            $inPos = var$10 + (-3) | 0;
                            $result = jnc_CoderResult_malformedForLength(3);
                            break a;
                        }
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = $c;
                    } else {
                        if (($b & 248) != 240) {
                            $inPos = var$10 + (-1) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        if ((var$10 + 3 | 0) > $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput())
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        if (($outPos + 2 | 0) > $outSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreOutput(2))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_OVERFLOW;
                            break a;
                        }
                        var$15 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        var$12 = var$15 + 1 | 0;
                        $b3 = var$9[var$15];
                        var$10 = var$12 + 1 | 0;
                        $b4 = var$9[var$12];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b4))
                            break c;
                        var$9 = $outArray.data;
                        $code = ($b & 7) << 18 | ($b2 & 63) << 12 | ($b3 & 63) << 6 | $b4 & 63;
                        var$15 = $outPos + 1 | 0;
                        var$9[$outPos] = jl_Character_highSurrogate($code);
                        var$12 = var$15 + 1 | 0;
                        var$9[var$15] = jl_Character_lowSurrogate($code);
                    }
                    $inPos = var$10;
                    $outPos = var$12;
                }
                break a;
            }
            $inPos = var$10 + (-3) | 0;
            $result = jnc_CoderResult_malformedForLength(1);
            break a;
        }
        $inPos = var$10 + (-3) | 0;
        $result = jnc_CoderResult_malformedForLength(1);
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
}
function jnci_UTF8Decoder_checkMidByte($this, $b) {
    return ($b & 192) != 128 ? 0 : 1;
}
function oktsp_MotionBlur() {
    var a = this; oktsp_PostShader.call(a);
    a.$blurStrength = 0.0;
    a.$sceneColorMapUnit = 0;
    a.$velocityMapUnit = 0;
    a.$colorMap0 = null;
    a.$velocityMap = null;
}
var oktsp_MotionBlur_Companion = null;
function oktsp_MotionBlur_$callClinit() {
    oktsp_MotionBlur_$callClinit = $rt_eraseClinit(oktsp_MotionBlur);
    oktsp_MotionBlur__clinit_();
}
function oktsp_MotionBlur__init_0(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktsp_MotionBlur();
    oktsp_MotionBlur__init_1(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktsp_MotionBlur__init_2(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktsp_MotionBlur();
    oktsp_MotionBlur__init_(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function oktsp_MotionBlur__init_3() {
    var var_0 = new oktsp_MotionBlur();
    oktsp_MotionBlur__init_4(var_0);
    return var_0;
}
function oktsp_MotionBlur_getSceneColorMapUnit($this) {
    return $this.$sceneColorMapUnit;
}
function oktsp_MotionBlur_getVelocityMapUnit($this) {
    return $this.$velocityMapUnit;
}
function oktsp_MotionBlur_render($this, $screenQuad, $out) {
    kji_Intrinsics_checkParameterIsNotNull($screenQuad, $rt_s(523));
    oktm_IScreenQuad$DefaultImpls_render$default($screenQuad, $this, $out, null, oktsp_MotionBlur$render$1__init_($this), 4, null);
}
function oktsp_MotionBlur_getColorMap($this) {
    return $this.$colorMap0;
}
function oktsp_MotionBlur_getVelocityMap($this) {
    return $this.$velocityMap;
}
function oktsp_MotionBlur__init_1($this, $colorMap, $velocityMap, $blurStrength, $numSamples, $visualizeVelocity) {
    oktsp_MotionBlur_$callClinit();
    oktsp_PostShader__init_2($this, oktsp_MotionBlur$Companion_motionBlurCode(oktsp_MotionBlur_Companion, $numSamples, $visualizeVelocity), null, 0, null, null, 0, 62, null);
    $this.$colorMap0 = $colorMap;
    $this.$velocityMap = $velocityMap;
    $this.$blurStrength = $blurStrength;
    oktg_GL_$callClinit();
    $this.$sceneColorMapUnit = oktg_GL_grabTextureUnit(oktg_GL_INSTANCE);
    $this.$velocityMapUnit = oktg_GL_grabTextureUnit(oktg_GL_INSTANCE);
    $this.$bind();
    $this.$set35($rt_s(1275), $this.$sceneColorMapUnit);
    $this.$set35($rt_s(1276), $this.$velocityMapUnit);
    $this.$set1($rt_s(1277), $blurStrength);
    $this.$set35($rt_s(1278), $numSamples);
}
function oktsp_MotionBlur__init_(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    oktsp_MotionBlur_$callClinit();
    if (var$6 & 1)
        var$1 = null;
    if (var$6 & 2)
        var$2 = null;
    if (var$6 & 4)
        var$3 = 1.0;
    if (var$6 & 8)
        var$4 = 8;
    if (var$6 & 16)
        var$5 = 0.0;
    oktsp_MotionBlur__init_1(var$0, var$1, var$2, var$3, var$4, var$5);
}
function oktsp_MotionBlur__init_4(var$0) {
    oktsp_MotionBlur_$callClinit();
    oktsp_MotionBlur__init_(var$0, null, null, 0.0, 0, 0.0, 31, null);
}
function oktsp_MotionBlur__clinit_() {
    oktsp_MotionBlur_Companion = oktsp_MotionBlur$Companion__init_(null);
}
function oktsg_AttributeNode$Companion() {
    jl_Object.call(this);
}
function oktsg_AttributeNode$Companion__init_0() {
    var var_0 = new oktsg_AttributeNode$Companion();
    oktsg_AttributeNode$Companion__init_1(var_0);
    return var_0;
}
function oktsg_AttributeNode$Companion__init_(var_0) {
    var var_1 = new oktsg_AttributeNode$Companion();
    oktsg_AttributeNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_AttributeNode$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function oktsg_AttributeNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_AttributeNode$Companion__init_1($this);
}
function jur_AbstractCharClass$LazyJavaLetter$1() {
    jur_AbstractCharClass.call(this);
    this.$this$0187 = null;
}
function jur_AbstractCharClass$LazyJavaLetter$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaLetter$1();
    jur_AbstractCharClass$LazyJavaLetter$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaLetter$1__init_0($this, $this$0) {
    $this.$this$0187 = $this$0;
    jur_AbstractCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaLetter$1_contains($this, $ch) {
    return jl_Character_isLetter($ch);
}
function oktm_ScreenQuad() {
    jl_Object.call(this);
    this.$mesh0 = null;
}
function oktm_ScreenQuad__init_0(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktm_ScreenQuad();
    oktm_ScreenQuad__init_1(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktm_ScreenQuad__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new oktm_ScreenQuad();
    oktm_ScreenQuad__init_2(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function oktm_ScreenQuad__init_3() {
    var var_0 = new oktm_ScreenQuad();
    oktm_ScreenQuad__init_4(var_0);
    return var_0;
}
function oktm_ScreenQuad_getMesh($this) {
    return $this.$mesh0;
}
function oktm_ScreenQuad__init_1($this, $x, $y, $width, $height, $aPositionName, $aUVName) {
    var $$this$apply, $vertexInputs, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17;
    kji_Intrinsics_checkParameterIsNotNull($aPositionName, $rt_s(1279));
    kji_Intrinsics_checkParameterIsNotNull($aUVName, $rt_s(1280));
    jl_Object__init_0($this);
    oktm_IMesh_$callClinit();
    $$this$apply = oktm_IMesh$Companion_getBuild(oktm_IMesh_Companion).$invoke6();
    $$this$apply.$setPrimitiveType(6);
    $vertexInputs = new oktm_VertexInputs;
    var$9 = $rt_createArray(oktm_IVertexInput, 2);
    var$10 = var$9.data;
    var$10[0] = oktm_VertexInput__init_(2, $aPositionName, 5126, 1);
    var$10[1] = oktm_VertexInput__init_(2, $aUVName, 5126, 1);
    oktm_VertexInputs__init_($vertexInputs, var$9);
    oktm_IVertexBuffer_$callClinit();
    var$11 = oktm_IVertexBuffer$Companion_getBuild(oktm_IVertexBuffer_Companion);
    oktd_DATA_$callClinit();
    var$12 = oktd_DATA_bytes(oktd_DATA_INSTANCE, 64);
    var$13 = var$12.$floatView();
    var$9 = $rt_createArray(jl_Float, 4);
    var$10 = var$9.data;
    var$14 = $x +  -$width;
    var$10[0] = jl_Float_valueOf(var$14);
    var$15 = $y +  -$height;
    var$10[1] = jl_Float_valueOf(var$15);
    var$10[2] = jl_Float_valueOf(0.0);
    var$10[3] = jl_Float_valueOf(0.0);
    var$13.$put4(var$9);
    var$9 = $rt_createArray(jl_Float, 4);
    var$10 = var$9.data;
    var$16 = $x + $width;
    var$10[0] = jl_Float_valueOf(var$16);
    var$10[1] = jl_Float_valueOf(var$15);
    var$10[2] = jl_Float_valueOf(1.0);
    var$10[3] = jl_Float_valueOf(0.0);
    var$13.$put4(var$9);
    var$9 = $rt_createArray(jl_Float, 4);
    var$10 = var$9.data;
    var$10[0] = jl_Float_valueOf(var$16);
    var$15 = $y + $height;
    var$10[1] = jl_Float_valueOf(var$15);
    var$10[2] = jl_Float_valueOf(1.0);
    var$10[3] = jl_Float_valueOf(1.0);
    var$13.$put4(var$9);
    var$9 = $rt_createArray(jl_Float, 4);
    var$10 = var$9.data;
    var$10[0] = jl_Float_valueOf(var$14);
    var$10[1] = jl_Float_valueOf(var$15);
    var$10[2] = jl_Float_valueOf(0.0);
    var$10[3] = jl_Float_valueOf(1.0);
    var$13.$put4(var$9);
    var$17 = jl_Integer_valueOf(35044);
    $$this$apply.$setVertices(var$11.$invoke38(var$12, $vertexInputs, var$17, jl_Boolean_valueOf(1)));
    $this.$mesh0 = $$this$apply;
}
function oktm_ScreenQuad__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    if (var$7 & 1)
        var$1 = 0.0;
    if (var$7 & 2)
        var$2 = 0.0;
    if (var$7 & 4)
        var$3 = 1.0;
    if (var$7 & 8)
        var$4 = 1.0;
    if (var$7 & 16)
        var$5 = $rt_s(303);
    if (var$7 & 32)
        var$6 = $rt_s(304);
    oktm_ScreenQuad__init_1(var$0, var$1, var$2, var$3, var$4, var$5, var$6);
}
function oktm_ScreenQuad__init_4(var$0) {
    oktm_ScreenQuad__init_2(var$0, 0.0, 0.0, 0.0, 0.0, null, null, 63, null);
}
function oktm_ScreenQuad_render($this, $shader, $out, $clearMask, $set) {
    kji_Intrinsics_checkParameterIsNotNull($shader, $rt_s(1074));
    kji_Intrinsics_checkParameterIsNotNull($set, $rt_s(1281));
    oktm_IScreenQuad$DefaultImpls_render($this, $shader, $out, $clearMask, $set);
}
function oooi_DxTriMesh$1() {
    jl_Object.call(this);
}
var oooi_DxTriMesh$1_$SwitchMap$org$ode4j$ode$OdeConfig$TRIMESH = null;
function oooi_DxTriMesh$1_$callClinit() {
    oooi_DxTriMesh$1_$callClinit = $rt_eraseClinit(oooi_DxTriMesh$1);
    oooi_DxTriMesh$1__clinit_();
}
function oooi_DxTriMesh$1__clinit_() {
    var $$je;
    oooi_DxTriMesh$1_$SwitchMap$org$ode4j$ode$OdeConfig$TRIMESH = $rt_createIntArray(ooo_OdeConfig$TRIMESH_values().data.length);
    a: {
        try {
            oooi_DxTriMesh$1_$SwitchMap$org$ode4j$ode$OdeConfig$TRIMESH.data[jl_Enum_ordinal(ooo_OdeConfig$TRIMESH_DISABLED)] = 1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    b: {
        try {
            oooi_DxTriMesh$1_$SwitchMap$org$ode4j$ode$OdeConfig$TRIMESH.data[jl_Enum_ordinal(ooo_OdeConfig$TRIMESH_GIMPACT)] = 2;
            break b;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
}
function ooo_DMatrix() {
    ooo_DMisc.call(this);
}
function ooo_DMatrix__init_() {
    var var_0 = new ooo_DMatrix();
    ooo_DMatrix__init_0(var_0);
    return var_0;
}
function ooo_DMatrix__init_0($this) {
    ooo_DMisc__init_0($this);
}
function ooo_DMatrix_dSetZero($a, $aOfs, $aLen) {
    var $i;
    $i = $aOfs;
    while ($i < ($aOfs + $aLen | 0)) {
        $a.data[$i] = 0.0;
        $i = $i + 1 | 0;
    }
}
function ooo_DMatrix_dSetValue($a, $pos, $len, $value) {
    var $i;
    $i = $pos;
    while ($i < ($len + $pos | 0)) {
        $a.data[$i] = $value;
        $i = $i + 1 | 0;
    }
}
function ooo_DRotation() {
    ooo_DMatrix.call(this);
}
function ooo_DRotation__init_() {
    var var_0 = new ooo_DRotation();
    ooo_DRotation__init_0(var_0);
    return var_0;
}
function ooo_DRotation__init_0($this) {
    ooo_DMatrix__init_0($this);
}
function ooo_DRotation_dRFromAxisAndAngle($R, $ax, $ay, $az, $angle) {
    oooi_Rotation_dRFromAxisAndAngle($R, $ax, $ay, $az, $angle);
}
function oooic_FILE() {
    jl_Object.call(this);
    this.$_out = null;
}
function oooic_FILE__init_(var_0) {
    var var_1 = new oooic_FILE();
    oooic_FILE__init_0(var_1, var_0);
    return var_1;
}
function oooic_FILE__init_0($this, $out) {
    jl_Object__init_0($this);
    $this.$_out = $out;
}
function oktgc_CameraAdapter$Companion() {
    jl_Object.call(this);
}
function oktgc_CameraAdapter$Companion__init_0() {
    var var_0 = new oktgc_CameraAdapter$Companion();
    oktgc_CameraAdapter$Companion__init_1(var_0);
    return var_0;
}
function oktgc_CameraAdapter$Companion__init_(var_0) {
    var var_1 = new oktgc_CameraAdapter$Companion();
    oktgc_CameraAdapter$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktgc_CameraAdapter$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function oktgc_CameraAdapter$Companion__init_2($this, $$constructor_marker) {
    oktgc_CameraAdapter$Companion__init_1($this);
}
function ooo_OdeConfig$TRIMESH() {
    jl_Enum.call(this);
}
var ooo_OdeConfig$TRIMESH_DISABLED = null;
var ooo_OdeConfig$TRIMESH_GIMPACT = null;
var ooo_OdeConfig$TRIMESH_$VALUES = null;
function ooo_OdeConfig$TRIMESH_$callClinit() {
    ooo_OdeConfig$TRIMESH_$callClinit = $rt_eraseClinit(ooo_OdeConfig$TRIMESH);
    ooo_OdeConfig$TRIMESH__clinit_();
}
function ooo_OdeConfig$TRIMESH__init_(var_0, var_1) {
    var var_2 = new ooo_OdeConfig$TRIMESH();
    ooo_OdeConfig$TRIMESH__init_0(var_2, var_0, var_1);
    return var_2;
}
function ooo_OdeConfig$TRIMESH_values() {
    ooo_OdeConfig$TRIMESH_$callClinit();
    return ooo_OdeConfig$TRIMESH_$VALUES.$clone();
}
function ooo_OdeConfig$TRIMESH__init_0($this, var$1, var$2) {
    ooo_OdeConfig$TRIMESH_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function ooo_OdeConfig$TRIMESH__clinit_() {
    var var$1, var$2;
    ooo_OdeConfig$TRIMESH_DISABLED = ooo_OdeConfig$TRIMESH__init_($rt_s(1282), 0);
    ooo_OdeConfig$TRIMESH_GIMPACT = ooo_OdeConfig$TRIMESH__init_($rt_s(1283), 1);
    var$1 = $rt_createArray(ooo_OdeConfig$TRIMESH, 2);
    var$2 = var$1.data;
    var$2[0] = ooo_OdeConfig$TRIMESH_DISABLED;
    var$2[1] = ooo_OdeConfig$TRIMESH_GIMPACT;
    ooo_OdeConfig$TRIMESH_$VALUES = var$1;
}
function oooi_DxWorld$2() {
    var a = this; jl_Object.call(a);
    a.$val$callContext = null;
    a.$val$group = null;
    a.$this$0188 = null;
}
function oooi_DxWorld$2__init_(var_0, var_1, var_2) {
    var var_3 = new oooi_DxWorld$2();
    oooi_DxWorld$2__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oooi_DxWorld$2__init_0($this, $this$0, var$2, var$3) {
    $this.$this$0188 = $this$0;
    $this.$val$callContext = var$2;
    $this.$val$group = var$3;
    jl_Object__init_0($this);
}
function oooi_DxWorld$2_run($this) {
    $this.$val$callContext.$ThreadedProcessJobStart($this.$val$group);
}
function jur_AbstractCharClass$LazyUpper() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyUpper__init_() {
    var var_0 = new jur_AbstractCharClass$LazyUpper();
    jur_AbstractCharClass$LazyUpper__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyUpper__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyUpper_computeValue($this) {
    return jur_CharClass__init_().$add0(65, 90);
}
function oooi_DxWorld$1() {
    jl_Object.call(this);
    this.$this$0189 = null;
}
function oooi_DxWorld$1__init_(var_0) {
    var var_1 = new oooi_DxWorld$1();
    oooi_DxWorld$1__init_0(var_1, var_0);
    return var_1;
}
function oooi_DxWorld$1__init_0($this, $this$0) {
    $this.$this$0189 = $this$0;
    jl_Object__init_0($this);
}
function oooi_DxWorld$1_run($this) {
    return;
}
function ju_HashMap$KeyIterator() {
    ju_HashMap$AbstractMapIterator.call(this);
}
function ju_HashMap$KeyIterator__init_(var_0) {
    var var_1 = new ju_HashMap$KeyIterator();
    ju_HashMap$KeyIterator__init_0(var_1, var_0);
    return var_1;
}
function ju_HashMap$KeyIterator__init_0($this, $map) {
    ju_HashMap$AbstractMapIterator__init_0($this, $map);
}
function ju_HashMap$KeyIterator_next($this) {
    ju_HashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry1.$key;
}
function oooil_CCDVec3$ccd_vec3_t() {
    var a = this; jl_Object.call(a);
    a.$v00 = 0.0;
    a.$v10 = 0.0;
    a.$v20 = 0.0;
}
function oooil_CCDVec3$ccd_vec3_t__init_0(var_0, var_1, var_2) {
    var var_3 = new oooil_CCDVec3$ccd_vec3_t();
    oooil_CCDVec3$ccd_vec3_t__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
function oooil_CCDVec3$ccd_vec3_t__init_() {
    var var_0 = new oooil_CCDVec3$ccd_vec3_t();
    oooil_CCDVec3$ccd_vec3_t__init_2(var_0);
    return var_0;
}
function oooil_CCDVec3$ccd_vec3_t__init_1($this, $x, $y, $z) {
    jl_Object__init_0($this);
    $this.$v00 = $x;
    $this.$v10 = $y;
    $this.$v20 = $z;
}
function oooil_CCDVec3$ccd_vec3_t__init_2($this) {
    jl_Object__init_0($this);
}
function oooil_CCDVec3$ccd_vec3_t_set($this, $x, $y, $z) {
    $this.$v00 = $x;
    $this.$v10 = $y;
    $this.$v20 = $z;
}
function oooil_CCDVec3$ccd_vec3_t_get0($this) {
    return $this.$v00;
}
function oooil_CCDVec3$ccd_vec3_t_get1($this) {
    return $this.$v10;
}
function oooil_CCDVec3$ccd_vec3_t_get2($this) {
    return $this.$v20;
}
function oktgg_GLTF$read$8$1() {
    kji_Lambda.call(this);
    this.$this$0190 = null;
}
function oktgg_GLTF$read$8$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$8$1();
    oktgg_GLTF$read$8$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$8$1_invoke(var$0, var$1) {
    oktgg_GLTF$read$8$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$8$1_invoke0($this, $$this$objs) {
    var $material;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $material = $this.$this$0190.$this$0185.$createMaterial();
    $this.$this$0190.$this$0185.$getMaterials().$add1($material);
    $material.$read($$this$objs);
}
function oktgg_GLTF$read$8$1__init_0(var$0, var$1) {
    var$0.$this$0190 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jl_Math$ExponentConstants() {
    jl_Object.call(this);
}
var jl_Math$ExponentConstants_exponents = null;
var jl_Math$ExponentConstants_negativeExponents = null;
var jl_Math$ExponentConstants_negativeExponents2 = null;
function jl_Math$ExponentConstants_$callClinit() {
    jl_Math$ExponentConstants_$callClinit = $rt_eraseClinit(jl_Math$ExponentConstants);
    jl_Math$ExponentConstants__clinit_();
}
function jl_Math$ExponentConstants__init_() {
    var var_0 = new jl_Math$ExponentConstants();
    jl_Math$ExponentConstants__init_0(var_0);
    return var_0;
}
function jl_Math$ExponentConstants__init_0($this) {
    jl_Math$ExponentConstants_$callClinit();
    jl_Object__init_0($this);
}
function jl_Math$ExponentConstants__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createDoubleArray(10);
    var$2 = var$1.data;
    var$2[0] = 2.0;
    var$2[1] = 4.0;
    var$2[2] = 16.0;
    var$2[3] = 256.0;
    var$2[4] = 65536.0;
    var$2[5] = 4.294967296E9;
    var$2[6] = 1.8446744073709552E19;
    var$2[7] = 3.4028236692093846E38;
    var$2[8] = 1.157920892373162E77;
    var$2[9] = 1.3407807929942597E154;
    jl_Math$ExponentConstants_exponents = var$1;
    var$1 = $rt_createDoubleArray(10);
    var$2 = var$1.data;
    var$2[0] = 0.5;
    var$2[1] = 0.25;
    var$2[2] = 0.0625;
    var$2[3] = 0.00390625;
    var$2[4] = 1.52587890625E-5;
    var$2[5] = 2.3283064365386963E-10;
    var$2[6] = 5.421010862427522E-20;
    var$2[7] = 2.9387358770557188E-39;
    var$2[8] = 8.636168555094445E-78;
    var$2[9] = 7.458340731200207E-155;
    jl_Math$ExponentConstants_negativeExponents = var$1;
    var$1 = $rt_createDoubleArray(10);
    var$2 = var$1.data;
    var$2[0] = 1.0;
    var$2[1] = 0.5;
    var$2[2] = 0.125;
    var$2[3] = 0.0078125;
    var$2[4] = 3.0517578125E-5;
    var$2[5] = 4.6566128730773926E-10;
    var$2[6] = 1.0842021724855044E-19;
    var$2[7] = 5.8774717541114375E-39;
    var$2[8] = 1.727233711018889E-77;
    var$2[9] = 1.4916681462400413E-154;
    jl_Math$ExponentConstants_negativeExponents2 = var$1;
}
function oktt_CascadedShadowMatricesTest() {
    var a = this; jl_Object.call(a);
    a.$lightDirection = null;
    a.$lightPositionOffset0 = 0.0;
    a.$numCascades = 2;
    a.$cascadeEnd = null;
    a.$lightView = null;
    a.$sceneCameraFrustumPoints = null;
    a.$cascadeFrustums = null;
    a.$sceneCameraFrustumMeshes = null;
    a.$cascadeFrustumMeshes = null;
    a.$lightProj = null;
    a.$tmpMat = null;
    a.$tmpVec = null;
    a.$centroid = null;
    a.$sceneCamera = null;
    a.$sceneCameraFrustum = null;
}
function oktt_CascadedShadowMatricesTest__init_() {
    var var_0 = new oktt_CascadedShadowMatricesTest();
    oktt_CascadedShadowMatricesTest__init_0(var_0);
    return var_0;
}
function oktt_CascadedShadowMatricesTest_getName($this) {
    return $rt_s(1284);
}
function oktt_CascadedShadowMatricesTest_getSceneCameraFrustumMeshes($this) {
    return $this.$sceneCameraFrustumMeshes;
}
function oktt_CascadedShadowMatricesTest_getCascadeFrustumMeshes($this) {
    return $this.$cascadeFrustumMeshes;
}
function oktt_CascadedShadowMatricesTest_getTmpVec($this) {
    return $this.$tmpVec;
}
function oktt_CascadedShadowMatricesTest_getSceneCamera($this) {
    return $this.$sceneCamera;
}
function oktt_CascadedShadowMatricesTest_updateFrustums($this) {
    var $sceneCameraFrustumPoints, $camFarSubNear, var$3, var$4, var$5, $i, var$7, $alphaNear, $frustumPoints, $minZ, $maxZ, $j, $p, var$14, $i_0, $alphaFar, var$17, var$18, $minX, $maxX, $minY, $maxY, var$23, var$24, $vW, $lightMat;
    $this.$sceneCamera.$update0();
    oktm_Frustum_update($this.$sceneCameraFrustum, $this.$sceneCamera.$getInverseViewProjectionMatrix());
    $sceneCameraFrustumPoints = oktm_Frustum_getPoints($this.$sceneCameraFrustum);
    $camFarSubNear = oktgc_Camera_getFar($this.$sceneCamera) - oktgc_Camera_getNear($this.$sceneCamera);
    var$3 = $this.$lightView;
    var$4 = oktgc_Camera_getPosition($this.$sceneCamera);
    var$5 = $this.$lightDirection;
    oktm_IVec3_$callClinit();
    var$3.$setToLookAt(var$4, var$5, oktm_IVec3$Companion_getY(oktm_IVec3_Companion));
    $i = 0;
    var$7 = $this.$numCascades;
    while ($i < var$7) {
        $alphaNear = $this.$cascadeEnd.data[$i].$floatValue() / $camFarSubNear;
        $frustumPoints = $this.$sceneCameraFrustumPoints.data[$i];
        $this.$centroid.$set44(0.0, 0.0, 0.0);
        kji_FloatCompanionObject_$callClinit();
        $minZ = kji_FloatCompanionObject_getMAX_VALUE(kji_FloatCompanionObject_INSTANCE);
        $maxZ = kji_FloatCompanionObject_getMIN_VALUE(kji_FloatCompanionObject_INSTANCE);
        $j = 0;
        while ($j < 4) {
            $p = $frustumPoints.$get1($j);
            $p.$set11($sceneCameraFrustumPoints.$get1($j)).$lerp($sceneCameraFrustumPoints.$get1($j + 4 | 0), $alphaNear);
            $this.$centroid.$add8($p);
            $minZ = jl_Math_min1($minZ, $p.$getZ());
            $maxZ = jl_Math_max1($maxZ, $p.$getZ());
            $j = $j + 1 | 0;
        }
        var$14 = $this.$cascadeEnd.data;
        $i_0 = $i + 1 | 0;
        $alphaFar = var$14[$i_0].$floatValue() / $camFarSubNear;
        $j = 0;
        while ($j < 4) {
            var$17 = $j + 4 | 0;
            $p = $frustumPoints.$get1(var$17);
            $p.$set11($sceneCameraFrustumPoints.$get1($j)).$lerp($sceneCameraFrustumPoints.$get1(var$17), $alphaFar);
            $this.$centroid.$add8($p);
            $minZ = jl_Math_min1($minZ, $p.$getZ());
            $maxZ = jl_Math_max1($maxZ, $p.$getZ());
            $j = $j + 1 | 0;
        }
        oktmb_FrustumMeshBuilder_$callClinit();
        oktmb_FrustumMeshBuilder$Companion_updateMesh(oktmb_FrustumMeshBuilder_Companion, $this.$sceneCameraFrustumMeshes.data[$i], $frustumPoints);
        var$18 = $this.$sceneCameraFrustumMeshes.data[$i].$getVertices();
        if (var$18 !== null)
            var$18.$loadBufferToGpu();
        $this.$centroid.$scl(0.125);
        $this.$lightView.$setToLookAt($this.$centroid, $this.$lightDirection, oktm_IVec3$Companion_getY(oktm_IVec3_Companion));
        $minX = kji_FloatCompanionObject_getMAX_VALUE(kji_FloatCompanionObject_INSTANCE);
        $maxX = kji_FloatCompanionObject_getMIN_VALUE(kji_FloatCompanionObject_INSTANCE);
        $minY = kji_FloatCompanionObject_getMAX_VALUE(kji_FloatCompanionObject_INSTANCE);
        $maxY = kji_FloatCompanionObject_getMIN_VALUE(kji_FloatCompanionObject_INSTANCE);
        var$23 = kji_FloatCompanionObject_getMAX_VALUE(kji_FloatCompanionObject_INSTANCE);
        var$24 = kji_FloatCompanionObject_getMIN_VALUE(kji_FloatCompanionObject_INSTANCE);
        $j = 0;
        while ($j < 8) {
            $vW = $frustumPoints.$get1($j).$mul0($this.$lightView);
            $minX = jl_Math_min1($minX, $vW.$getX0());
            $maxX = jl_Math_max1($maxX, $vW.$getX0());
            $minY = jl_Math_min1($minY, $vW.$getY0());
            $maxY = jl_Math_max1($maxY, $vW.$getY0());
            var$23 = jl_Math_min1(var$23, $vW.$getZ());
            var$24 = jl_Math_max1(var$24, $vW.$getZ());
            $j = $j + 1 | 0;
        }
        $lightMat = $this.$lightProj.data[$i];
        var$23 = var$24 - var$23 + $this.$lightPositionOffset0;
        $lightMat.$setToOrtho($minX, $maxX, $minY, $maxY, 0.0, var$23);
        $this.$tmpMat.$setToLookAt($this.$tmpVec.$set11($this.$lightDirection).$scl( -var$24 - $this.$lightPositionOffset0).$add8($this.$centroid), $this.$lightDirection, oktm_IVec3$Companion_getY(oktm_IVec3_Companion));
        $lightMat.$mul($this.$tmpMat);
        oktm_Frustum_update($this.$cascadeFrustums.data[$i], $this.$tmpMat.$set3($lightMat).$inv());
        oktmb_FrustumMeshBuilder$Companion_updateMesh(oktmb_FrustumMeshBuilder_Companion, $this.$cascadeFrustumMeshes.data[$i], oktm_Frustum_getPoints($this.$cascadeFrustums.data[$i]));
        var$18 = $this.$cascadeFrustumMeshes.data[$i].$getVertices();
        if (var$18 !== null)
            var$18.$loadBufferToGpu();
        $i = $i_0;
    }
}
function oktt_CascadedShadowMatricesTest_testMain($this) {
    var $shader, var$2, var$3, var$4, var$5, $colors, var$7, $i, var$9, var$10, var$11, $control;
    $shader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($shader, $rt_s(3), $rt_s(4), var$2, 0, var$3, 0, var$4, 124, var$5);
    $colors = $rt_createArray(oktm_IVec4, 5);
    var$7 = $colors.data;
    oktu_Color_$callClinit();
    var$7[0] = oktu_Color_getORANGE(oktu_Color_INSTANCE);
    var$7[1] = oktu_Color_getGREEN(oktu_Color_INSTANCE);
    var$7[2] = oktu_Color_getCYAN(oktu_Color_INSTANCE);
    var$7[3] = oktu_Color_getOLIVE(oktu_Color_INSTANCE);
    var$7[4] = oktu_Color_getPINK(oktu_Color_INSTANCE);
    $i = 0;
    var$9 = $this.$sceneCameraFrustumMeshes.data.length;
    while ($i < var$9) {
        $this.$sceneCameraFrustumMeshes.data[$i] = oktmb_MeshBuilder_build$default(oktmb_FrustumMeshBuilder__init_0($this.$sceneCameraFrustumPoints.data[$i]), null, 1, null);
        $i = $i + 1 | 0;
    }
    $i = 0;
    var$9 = $this.$cascadeFrustumMeshes.data.length;
    while ($i < var$9) {
        $this.$cascadeFrustumMeshes.data[$i] = oktmb_MeshBuilder_build$default(oktmb_FrustumMeshBuilder__init_0(oktm_Frustum_getPoints($this.$cascadeFrustums.data[$i])), null, 1, null);
        $i = $i + 1 | 0;
    }
    oktt_CascadedShadowMatricesTest_updateFrustums($this);
    oktgc_ActiveCamera_$callClinit();
    var$10 = oktgc_ActiveCamera_INSTANCE;
    var$11 = new oktgc_Camera;
    var$4 = oktm_Vec3__init_0(3.0, 3.0, (-3.0));
    var$5 = oktm_Vec3__init_0(0.0, 0.0, 0.0);
    oktgc_Camera__init_6(var$11, var$4, var$5, 0.10000000149011612, 100.0);
    oktgc_ActiveCamera_setApi(var$10, var$11);
    $control = new oktgc_OrbitCameraControl;
    var$4 = oktm_Vec3__init_0(10.0, 3.0, 0.0);
    var$10 = null;
    var$11 = null;
    oktgc_OrbitCameraControl__init_($control, 1.0, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, var$10, 0, var$4, 4076, var$11);
    oktgc_OrbitCameraControl_listenToMouse($control);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, oktgc_OrbitCameraControl_getHelp($control), null, 2, null);
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, $rt_s(1285), null, 2, null);
    oktg_GL_$callClinit();
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktt_CascadedShadowMatricesTest$testMain$1__init_($this, $control, $shader, $colors), 1, null);
}
function oktt_CascadedShadowMatricesTest__init_0($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, $i, var$8;
    jl_Object__init_0($this);
    $this.$lightDirection = oktm_Vec3__init_0(1.0, (-1.0), (-1.0)).$nor();
    $this.$numCascades = 2;
    var$1 = $rt_createArray(jl_Float, 3);
    var$2 = var$1.data;
    var$2[0] = jl_Float_valueOf(0.10000000149011612);
    var$2[1] = jl_Float_valueOf(5.0);
    var$2[2] = jl_Float_valueOf(10.0);
    $this.$cascadeEnd = var$1;
    var$3 = oktm_Mat4__init_();
    oktm_IVec3_$callClinit();
    $this.$lightView = var$3.$setToLookAt(oktm_IVec3$Companion_getZero(oktm_IVec3_Companion), $this.$lightDirection, oktm_IVec3$Companion_getY(oktm_IVec3_Companion));
    var$4 = $this.$numCascades;
    var$1 = $rt_createArray(ju_List, var$4);
    var$5 = 0;
    while (var$5 < var$4) {
        var$6 = ju_ArrayList__init_();
        $i = 0;
        while ($i < 8) {
            var$6.$add1(oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null));
            $i = $i + 1 | 0;
        }
        var$1.data[var$5] = var$6;
        var$5 = var$5 + 1 | 0;
    }
    $this.$sceneCameraFrustumPoints = var$1;
    var$4 = $this.$numCascades;
    var$1 = $rt_createArray(oktm_Frustum, var$4);
    var$8 = 0;
    while (var$8 < var$4) {
        var$1.data[var$8] = oktm_Frustum__init_0();
        var$8 = var$8 + 1 | 0;
    }
    $this.$cascadeFrustums = var$1;
    var$4 = $this.$numCascades;
    var$1 = $rt_createArray(oktm_IMesh, var$4);
    var$8 = 0;
    while (var$8 < var$4) {
        var$1.data[var$8] = oktm_Mesh__init_1(null, null, null, null, 0, 31, null);
        var$8 = var$8 + 1 | 0;
    }
    $this.$sceneCameraFrustumMeshes = var$1;
    var$4 = $this.$numCascades;
    var$1 = $rt_createArray(oktm_IMesh, var$4);
    var$8 = 0;
    while (var$8 < var$4) {
        var$1.data[var$8] = oktm_Mesh__init_1(null, null, null, null, 0, 31, null);
        var$8 = var$8 + 1 | 0;
    }
    $this.$cascadeFrustumMeshes = var$1;
    var$4 = $this.$numCascades;
    var$1 = $rt_createArray(oktm_IMat4, var$4);
    var$8 = 0;
    while (var$8 < var$4) {
        var$1.data[var$8] = oktm_Mat4__init_();
        var$8 = var$8 + 1 | 0;
    }
    $this.$lightProj = var$1;
    $this.$tmpMat = oktm_Mat4__init_();
    $this.$tmpVec = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    $this.$centroid = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    $this.$sceneCamera = oktgc_Camera__init_(null, null, null, 0.10000000149011612, 10.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 3815, null);
    $this.$sceneCameraFrustum = oktm_Frustum__init_($this.$sceneCamera.$getInverseViewProjectionMatrix());
}
function kt_StringsKt__StringsKt$rangesDelimitedBy$2() {
    var a = this; kji_Lambda.call(a);
    a.$$delimiters = null;
    a.$$ignoreCase = 0;
}
function kt_StringsKt__StringsKt$rangesDelimitedBy$2__init_(var_0, var_1) {
    var var_2 = new kt_StringsKt__StringsKt$rangesDelimitedBy$2();
    kt_StringsKt__StringsKt$rangesDelimitedBy$2__init_0(var_2, var_0, var_1);
    return var_2;
}
function kt_StringsKt__StringsKt$rangesDelimitedBy$2_invoke(var$0, var$1, var$2) {
    return kt_StringsKt__StringsKt$rangesDelimitedBy$2_invoke0(var$0, var$1, var$2.$intValue());
}
function kt_StringsKt__StringsKt$rangesDelimitedBy$2_invoke0($this, $$receiver, $currentIndex) {
    var var$3;
    kji_Intrinsics_checkParameterIsNotNull($$receiver, $rt_s(33));
    var$3 = kt_StringsKt__StringsKt_indexOfAny($$receiver, $this.$$delimiters, $currentIndex, $this.$$ignoreCase);
    return var$3 < 0 ? null : k_TuplesKt_to(jl_Integer_valueOf(var$3), jl_Integer_valueOf(1));
}
function kt_StringsKt__StringsKt$rangesDelimitedBy$2__init_0(var$0, var$1, var$2) {
    var$0.$$delimiters = var$1;
    var$0.$$ignoreCase = var$2;
    kji_Lambda__init_0(var$0, 2);
}
function kt_StringsKt__StringsKt$rangesDelimitedBy$4() {
    var a = this; kji_Lambda.call(a);
    a.$$delimitersList = null;
    a.$$ignoreCase0 = 0;
}
function kt_StringsKt__StringsKt$rangesDelimitedBy$4__init_(var_0, var_1) {
    var var_2 = new kt_StringsKt__StringsKt$rangesDelimitedBy$4();
    kt_StringsKt__StringsKt$rangesDelimitedBy$4__init_0(var_2, var_0, var_1);
    return var_2;
}
function kt_StringsKt__StringsKt$rangesDelimitedBy$4_invoke(var$0, var$1, var$2) {
    return kt_StringsKt__StringsKt$rangesDelimitedBy$4_invoke0(var$0, var$1, var$2.$intValue());
}
function kt_StringsKt__StringsKt$rangesDelimitedBy$4_invoke0($this, $$receiver, $currentIndex) {
    var var$3;
    kji_Intrinsics_checkParameterIsNotNull($$receiver, $rt_s(33));
    var$3 = kt_StringsKt__StringsKt_access$findAnyOf($$receiver, $this.$$delimitersList, $currentIndex, $this.$$ignoreCase0, 0);
    return var$3 === null ? null : k_TuplesKt_to(k_Pair_getFirst(var$3), jl_Integer_valueOf(k_Pair_getSecond(var$3).$length()));
}
function kt_StringsKt__StringsKt$rangesDelimitedBy$4__init_0(var$0, var$1, var$2) {
    var$0.$$delimitersList = var$1;
    var$0.$$ignoreCase0 = var$2;
    kji_Lambda__init_0(var$0, 2);
}
function jur_MultiLineSOLSet() {
    jur_AbstractSet.call(this);
    this.$lt0 = null;
}
function jur_MultiLineSOLSet__init_(var_0) {
    var var_1 = new jur_MultiLineSOLSet();
    jur_MultiLineSOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_MultiLineSOLSet__init_0($this, $lt) {
    jur_AbstractSet__init_0($this);
    $this.$lt0 = $lt;
}
function jur_MultiLineSOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var var$4, var$5;
    a: {
        if ($strIndex != $matchResult.$getRightBound()) {
            if (!$strIndex)
                break a;
            if ($matchResult.$hasAnchoringBounds() && $strIndex == $matchResult.$getLeftBound())
                break a;
            var$4 = $this.$lt0;
            var$5 = $strIndex - 1 | 0;
            if (var$4.$isAfterLineTerminator($testString.$charAt(var$5), $testString.$charAt($strIndex)))
                break a;
        }
        return (-1);
    }
    return $this.$next0.$matches($strIndex, $testString, $matchResult);
}
function jur_MultiLineSOLSet_hasConsumed($this, $matchResult) {
    return 0;
}
function oooig_GimAABBSet() {
    var a = this; jl_Object.call(a);
    a.$m_count = 0;
    a.$m_global_bound = null;
    a.$m_boxes = null;
    a.$m_maxcoords = null;
    a.$m_sorted_mincoords = null;
    a.$m_shared = 0;
}
var oooig_GimAABBSet_PUSH_PAIR0 = null;
var oooig_GimAABBSet_PUSH_PAIR_INV0 = null;
function oooig_GimAABBSet_$callClinit() {
    oooig_GimAABBSet_$callClinit = $rt_eraseClinit(oooig_GimAABBSet);
    oooig_GimAABBSet__clinit_();
}
function oooig_GimAABBSet__init_(var_0) {
    var var_1 = new oooig_GimAABBSet();
    oooig_GimAABBSet__init_0(var_1, var_0);
    return var_1;
}
function oooig_GimAABBSet_getGlobalBound($this) {
    return $this.$m_global_bound;
}
function oooig_GimAABBSet_GIM_CREATE_PAIR_SET() {
    oooig_GimAABBSet_$callClinit();
    return oooig_GimDynArray_GIM_DYNARRAY_CREATE(64);
}
function oooig_GimAABBSet_GIM_CONVERT_VEC3F_GUINT_XZ($this, $vx, $vz) {
    var $_z, $uint_key;
    $_z = Long_add(Long_fromNumber($vz * 20.0), Long_fromInt(32768));
    $uint_key = Long_add(Long_fromNumber($vx * 20.0), Long_fromInt(32768));
    return Long_add(Long_shl($uint_key, 16), $_z);
}
function oooig_GimAABBSet_GIM_CONVERT_VEC3F_GUINT_XZ_UPPER($this, $vx, $vz) {
    var $_z, $uint_key;
    $_z = Long_add(Long_fromNumber(jl_Math_ceil($vz * 20.0)), Long_fromInt(32768));
    $uint_key = Long_add(Long_fromNumber(jl_Math_ceil($vx * 20.0)), Long_fromInt(32768));
    return Long_add(Long_shl($uint_key, 16), $_z);
}
function oooig_GimAABBSet__init_0($this, $count) {
    oooig_GimAABBSet_$callClinit();
    jl_Object__init_0($this);
    $this.$m_global_bound = oooig_GimGeometry$aabb3f__init_();
    $this.$m_boxes = $rt_createArray(oooig_GimGeometry$aabb3f, $count);
}
function oooig_GimAABBSet_gim_aabbset_alloc($count) {
    var $x, $i;
    oooig_GimAABBSet_$callClinit();
    $x = oooig_GimAABBSet__init_($count);
    $x.$m_count = $count;
    $i = 0;
    while ($i < $count) {
        $x.$m_boxes.data[$i] = oooig_GimGeometry$aabb3f__init_();
        $i = $i + 1 | 0;
    }
    a: {
        if ($count < 600) {
            $x.$m_maxcoords = null;
            $x.$m_sorted_mincoords = null;
        } else {
            $x.$m_maxcoords = $rt_createLongArray($x.$m_count);
            $x.$m_sorted_mincoords = $rt_createArray(oooig_GimRadixSort$GIM_RSORT_TOKEN, $x.$m_count);
            $i = 0;
            while (true) {
                if ($i >= $x.$m_count)
                    break a;
                $x.$m_sorted_mincoords.data[$i] = oooig_GimRadixSort$GIM_RSORT_TOKEN__init_();
                $i = $i + 1 | 0;
            }
        }
    }
    $x.$m_shared = 0;
    oooig_GimGeometry_INVALIDATE_AABB($x.$m_global_bound);
    return $x;
}
function oooig_GimAABBSet_gim_aabbset_calc_global_bound($this) {
    var var$1, var$2, var$3, $aabb;
    oooig_GimGeometry_AABB_COPY($this.$m_global_bound, $this.$m_boxes.data[0]);
    var$1 = $this.$m_boxes.data;
    var$2 = var$1.length;
    var$3 = 0;
    while (var$3 < var$2) {
        $aabb = var$1[var$3];
        oooig_GimGeometry_MERGEBOXES($this.$m_global_bound, $aabb);
        var$3 = var$3 + 1 | 0;
    }
}
function oooig_GimAABBSet_gim_aabbset_sort($this, $calc_global_bound) {
    var $count, $paabb, $maxcoords, $sorted_tokens, $i, var$7, var$8, var$9, $unsorted;
    if ($this.$m_sorted_mincoords === null) {
        $this.$m_maxcoords = $rt_createLongArray($this.$m_count);
        $this.$m_sorted_mincoords = $rt_createArray(oooig_GimRadixSort$GIM_RSORT_TOKEN, $this.$m_count);
    }
    $count = $this.$m_count;
    $paabb = $this.$m_boxes;
    $maxcoords = $this.$m_maxcoords;
    $sorted_tokens = $this.$m_sorted_mincoords;
    if ($count < 860) {
        $i = 0;
        while ($i < $count) {
            var$7 = $sorted_tokens.data;
            var$8 = $maxcoords.data;
            var$9 = $paabb.data;
            var$8[$i] = $this.$GIM_CONVERT_VEC3F_GUINT_XZ_UPPER(var$9[$i].$maxX, var$9[$i].$maxZ);
            var$7[$i].$m_key = $this.$GIM_CONVERT_VEC3F_GUINT_XZ(var$9[$i].$minX, var$9[$i].$minZ);
            var$7[$i].$m_value = $i;
            $i = $i + 1 | 0;
        }
        oooig_GimRadixSort_$callClinit();
        oooig_GimRadixSort_GIM_QUICK_SORT_ARRAY($sorted_tokens, $count, oooig_GimRadixSort_RSORT_TOKEN_COMPARATOR, oooig_GimRadixSort_GIM_DEF_EXCHANGE_MACRO);
    } else {
        $unsorted = $rt_createArray(oooig_GimRadixSort$GIM_RSORT_TOKEN, $count);
        $i = 0;
        while ($i < $count) {
            var$8 = $maxcoords.data;
            var$7 = $paabb.data;
            var$9 = $unsorted.data;
            var$9[$i] = oooig_GimRadixSort$GIM_RSORT_TOKEN__init_();
            var$8[$i] = $this.$GIM_CONVERT_VEC3F_GUINT_XZ_UPPER(var$7[$i].$maxX, var$7[$i].$maxZ);
            var$9[$i].$m_key = $this.$GIM_CONVERT_VEC3F_GUINT_XZ(var$7[$i].$minX, var$7[$i].$minZ);
            var$9[$i].$m_value = $i;
            $i = $i + 1 | 0;
        }
        oooig_GimRadixSort_GIM_RADIX_SORT_RTOKENS($unsorted, $sorted_tokens, $count);
    }
    if ($calc_global_bound)
        $this.$gim_aabbset_calc_global_bound();
}
function oooig_GimAABBSet_PUSH_PAIR($i, $j, $pairset) {
    var $_pair;
    oooig_GimAABBSet_$callClinit();
    $_pair = oooig_GimAABBSet$GIM_PAIR__init_();
    $_pair.$m_index1 = $i;
    $_pair.$m_index2 = $j;
    $pairset.$GIM_DYNARRAY_PUSH_ITEM_TZ($_pair);
}
function oooig_GimAABBSet_PUSH_PAIR_INV($i, $j, $pairset) {
    var $_pair;
    oooig_GimAABBSet_$callClinit();
    $_pair = oooig_GimAABBSet$GIM_PAIR__init_();
    $_pair.$m_index1 = $j;
    $_pair.$m_index2 = $i;
    $pairset.$GIM_DYNARRAY_PUSH_ITEM_TZ($_pair);
}
function oooig_GimAABBSet_FIND_OVERLAPPING_FOWARD($curr_index, $test_count, $test_aabb, $max_coord_uint, $sorted_tokensA, $_psorted_tokensP, $aabbarray, $pairset, $push_pair_macro) {
    var var$10, $_intersected;
    oooig_GimAABBSet_$callClinit();
    while ($test_count > 0) {
        var$10 = $sorted_tokensA.data;
        if (Long_lt($max_coord_uint, var$10[$_psorted_tokensP].$m_key))
            break;
        $_intersected = oooig_GimGeometry_AABBCOLLISION($test_aabb, $aabbarray.data[var$10[$_psorted_tokensP].$m_value]);
        if ($_intersected)
            $push_pair_macro.$run6($curr_index, var$10[$_psorted_tokensP].$m_value, $pairset);
        $_psorted_tokensP = $_psorted_tokensP + 1 | 0;
        $test_count = $test_count + (-1) | 0;
    }
}
function oooig_GimAABBSet_gim_aabbset_bipartite_intersections_sorted($aabbset1, $aabbset2, $collision_pairs) {
    var $intersected, $count1, $paabb1, $maxcoords1, $sorted_tokens1, $count2, $paabb2, $maxcoords2, $sorted_tokens2, $test_aabb, $int_abbb, $classified_tokens1, $classified_count1, $classified_count2, $i, var$19, var$20, $curr_index, $classified_tokens2, var$23, $pos1, $pos2, var$26, $max_coord_uint;
    oooig_GimAABBSet_$callClinit();
    $collision_pairs.$m_size = 0;
    $intersected = oooig_GimGeometry_AABBCOLLISION($aabbset1.$m_global_bound, $aabbset2.$m_global_bound);
    if (!$intersected)
        return;
    $count1 = $aabbset1.$m_count;
    $paabb1 = $aabbset1.$m_boxes;
    $maxcoords1 = $aabbset1.$m_maxcoords;
    $sorted_tokens1 = $aabbset1.$m_sorted_mincoords;
    $count2 = $aabbset2.$m_count;
    $paabb2 = $aabbset2.$m_boxes;
    $maxcoords2 = $aabbset2.$m_maxcoords;
    $sorted_tokens2 = $aabbset2.$m_sorted_mincoords;
    $test_aabb = oooig_GimGeometry$aabb3f__init_();
    $int_abbb = oooig_GimGeometry$aabb3f__init_();
    oooig_GimGeometry_BOXINTERSECTION($aabbset1.$m_global_bound, $aabbset2.$m_global_bound, $int_abbb);
    $classified_tokens1 = $rt_createArray(oooig_GimRadixSort$GIM_RSORT_TOKEN, $count1);
    $classified_count1 = 0;
    $classified_count2 = 0;
    $i = 0;
    while ($i < $count1) {
        var$19 = $paabb1.data;
        var$20 = $sorted_tokens1.data;
        $curr_index = var$20[$i].$m_value;
        if (oooig_GimGeometry_AABBCOLLISION(var$19[$curr_index], $int_abbb)) {
            $classified_tokens1.data[$classified_count1] = var$20[$i];
            $classified_count1 = $classified_count1 + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    if (!$classified_count1)
        return;
    $classified_tokens2 = $rt_createArray(oooig_GimRadixSort$GIM_RSORT_TOKEN, $count2);
    var$23 = 0;
    while (var$23 < $count2) {
        var$20 = $paabb2.data;
        var$19 = $sorted_tokens2.data;
        $curr_index = var$19[var$23].$m_value;
        if (oooig_GimGeometry_AABBCOLLISION(var$20[$curr_index], $int_abbb)) {
            $classified_tokens2.data[$classified_count2] = var$19[var$23];
            $classified_count2 = $classified_count2 + 1 | 0;
        }
        var$23 = var$23 + 1 | 0;
    }
    if (!$classified_count2)
        return;
    $pos1 = 0;
    $pos2 = 0;
    while ($classified_count1 > 0 && $classified_count2 > 0) {
        var$26 = $classified_tokens2.data;
        var$20 = $classified_tokens1.data;
        if (Long_gt(var$20[$pos1].$m_key, var$26[$pos2].$m_key)) {
            var$20 = $paabb2.data;
            var$19 = $maxcoords2.data;
            $curr_index = var$26[$pos2].$m_value;
            $max_coord_uint = var$19[$curr_index];
            oooig_GimGeometry_AABB_COPY($test_aabb, var$20[$curr_index]);
            $pos2 = $pos2 + 1 | 0;
            $classified_count2 = $classified_count2 + (-1) | 0;
            oooig_GimAABBSet_FIND_OVERLAPPING_FOWARD($curr_index, $classified_count1, $test_aabb, $max_coord_uint, $classified_tokens1, 0, $paabb1, $collision_pairs, oooig_GimAABBSet_PUSH_PAIR_INV0);
            continue;
        }
        var$26 = $paabb1.data;
        var$19 = $maxcoords1.data;
        $curr_index = var$20[$pos1].$m_value;
        $max_coord_uint = var$19[$curr_index];
        oooig_GimGeometry_AABB_COPY($test_aabb, var$26[$curr_index]);
        $pos1 = $pos1 + 1 | 0;
        $classified_count1 = $classified_count1 + (-1) | 0;
        oooig_GimAABBSet_FIND_OVERLAPPING_FOWARD($curr_index, $classified_count2, $test_aabb, $max_coord_uint, $classified_tokens2, 0, $paabb2, $collision_pairs, oooig_GimAABBSet_PUSH_PAIR0);
    }
}
function oooig_GimAABBSet_gim_aabbset_bipartite_intersections_brute_force($aabbset1, $aabbset2, $collision_pairs) {
    var $intersected, $int_abbb, $classified_count, $count, $paabb1, $paabb2, $classified, $i, var$12, var$13, var$14, var$15, $j, var$17, var$18;
    oooig_GimAABBSet_$callClinit();
    $collision_pairs.$m_size = 0;
    $intersected = oooig_GimGeometry_AABBCOLLISION($aabbset1.$m_global_bound, $aabbset2.$m_global_bound);
    if (!$intersected)
        return;
    $int_abbb = oooig_GimGeometry$aabb3f__init_();
    oooig_GimGeometry_BOXINTERSECTION($aabbset1.$m_global_bound, $aabbset2.$m_global_bound, $int_abbb);
    $classified_count = 0;
    $count = $aabbset1.$m_count;
    $paabb1 = $aabbset1.$m_boxes;
    $paabb2 = $aabbset2.$m_boxes;
    $classified = $rt_createIntArray($count);
    $i = 0;
    while ($i < $count) {
        if (oooig_GimGeometry_AABBCOLLISION($paabb1.data[$i], $int_abbb)) {
            $classified.data[$classified_count] = $i;
            $classified_count = $classified_count + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    if (!$classified_count)
        return;
    var$12 = $aabbset2.$m_count;
    var$13 = 0;
    while (var$13 < var$12) {
        a: {
            var$14 = $paabb2.data;
            var$15 = oooig_GimGeometry_AABBCOLLISION(var$14[var$13], $int_abbb);
            if (var$15) {
                $j = 0;
                while (true) {
                    if ($j >= $classified_count)
                        break a;
                    var$17 = $paabb1.data;
                    var$18 = $classified.data;
                    if (oooig_GimGeometry_AABBCOLLISION(var$14[var$13], var$17[var$18[$j]]))
                        oooig_GimAABBSet_PUSH_PAIR(var$18[$j], var$13, $collision_pairs);
                    $j = $j + 1 | 0;
                }
            }
        }
        var$13 = var$13 + 1 | 0;
    }
}
function oooig_GimAABBSet_gim_aabbset_update($this) {
    if ($this.$m_count < 600)
        $this.$gim_aabbset_calc_global_bound();
    else
        $this.$gim_aabbset_sort(1);
}
function oooig_GimAABBSet_gim_aabbset_bipartite_intersections($aabbset1, $aabbset2, $collision_pairs) {
    oooig_GimAABBSet_$callClinit();
    if ($aabbset1.$m_sorted_mincoords !== null && $aabbset2.$m_sorted_mincoords !== null)
        oooig_GimAABBSet_gim_aabbset_bipartite_intersections_sorted($aabbset1, $aabbset2, $collision_pairs);
    else
        oooig_GimAABBSet_gim_aabbset_bipartite_intersections_brute_force($aabbset1, $aabbset2, $collision_pairs);
}
function oooig_GimAABBSet_gim_aabbset_box_collision($this, $test_aabb, $collided) {
    var $intersected, $count, $paabb, $_testaabb, $i;
    $collided.$m_size0 = 0;
    $intersected = oooig_GimGeometry_AABBCOLLISION($this.$m_global_bound, $test_aabb);
    if (!$intersected)
        return;
    $count = $this.$m_count;
    $paabb = $this.$m_boxes;
    $_testaabb = oooig_GimGeometry$aabb3f__init_();
    oooig_GimGeometry_AABB_COPY($_testaabb, $test_aabb);
    $i = 0;
    while ($i < $count) {
        if (oooig_GimGeometry_AABBCOLLISION($paabb.data[$i], $_testaabb))
            $collided.$GIM_DYNARRAY_PUSH_ITEM($i);
        $i = $i + 1 | 0;
    }
}
function oooig_GimAABBSet_gim_aabbset_ray_collision($this, $vorigin, $vdir, $tmax, $collided) {
    var $intersected, $tparam, $count, $paabb, $i;
    $collided.$m_size0 = 0;
    $intersected = oooicj_RefBoolean__init_(0);
    $tparam = oooicj_RefFloat__init_0();
    oooig_GimGeometry_BOX_INTERSECTS_RAY($this.$m_global_bound, $vorigin, $vdir, $tparam, $tmax, $intersected);
    if (!$intersected.$b)
        return;
    $count = $this.$m_count;
    $paabb = $this.$m_boxes;
    $i = 0;
    while ($i < $count) {
        oooig_GimGeometry_BOX_INTERSECTS_RAY($paabb.data[$i], $vorigin, $vdir, $tparam, $tmax, $intersected);
        if ($intersected.$b)
            $collided.$GIM_DYNARRAY_PUSH_ITEM($i);
        $i = $i + 1 | 0;
    }
}
function oooig_GimAABBSet_at($this, $i) {
    return $this.$m_boxes.data[$i];
}
function oooig_GimAABBSet__clinit_() {
    oooig_GimAABBSet_PUSH_PAIR0 = oooig_GimAABBSet$1__init_();
    oooig_GimAABBSet_PUSH_PAIR_INV0 = oooig_GimAABBSet$2__init_();
}
function ooot_Atomics() {
    jl_Object.call(this);
}
function ooot_Atomics__init_() {
    var var_0 = new ooot_Atomics();
    ooot_Atomics__init_0(var_0);
    return var_0;
}
function ooot_Atomics__init_0($this) {
    jl_Object__init_0($this);
}
function ooot_Atomics_ThrsafeCompareExchange($paoDestination, $aoComparand, $aoExchange) {
    return juca_AtomicInteger_compareAndSet($paoDestination, $aoComparand, $aoExchange);
}
function ooot_Atomics_ThrsafeExchange($paoDestination, $aoExchange) {
    return juca_AtomicInteger_getAndSet($paoDestination, $aoExchange);
}
function ooot_Atomics_ThrsafeIncrementIntUpToLimit($storagePointer, $limitValue) {
    var $resultValue;
    a: {
        while (true) {
            $resultValue = juca_AtomicInteger_get($storagePointer);
            if ($resultValue == $limitValue)
                break;
            if (!ooot_Atomics_ThrsafeCompareExchange($storagePointer, $resultValue, $resultValue + 1 | 0))
                continue;
            else
                break a;
        }
    }
    return $resultValue;
}
function ooot_Atomics_ThrsafeIncrementSizeUpToLimit($storagePointer, $limitValue) {
    var $resultValue;
    a: {
        while (true) {
            $resultValue = juca_AtomicInteger_get($storagePointer);
            if ($resultValue == $limitValue)
                break;
            if (!ooot_Atomics_ThrsafeCompareExchange($storagePointer, $resultValue, $resultValue + 1 | 0))
                continue;
            else
                break a;
        }
    }
    return $resultValue;
}
function ooot_Atomics_ThrsafeAdd($paoDestination, $aoAddend) {
    return juca_AtomicInteger_addAndGet($paoDestination, $aoAddend);
}
function ooot_Atomics_ThrsafeExchangeAdd($paoDestination, $aoAddend) {
    return juca_AtomicInteger_getAndAdd($paoDestination, $aoAddend);
}
function jur_AbstractCharClass$LazyLower() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyLower__init_() {
    var var_0 = new jur_AbstractCharClass$LazyLower();
    jur_AbstractCharClass$LazyLower__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyLower__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyLower_computeValue($this) {
    return jur_CharClass__init_().$add0(97, 122);
}
function oktgg_GLTFPrimitive$loadIndices$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$0191 = null;
    a.$$accessor0 = null;
    a.$$bufferView0 = null;
    a.$$out1 = null;
}
function oktgg_GLTFPrimitive$loadIndices$1__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktgg_GLTFPrimitive$loadIndices$1();
    oktgg_GLTFPrimitive$loadIndices$1__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktgg_GLTFPrimitive$loadIndices$1_invoke(var$0, var$1) {
    oktgg_GLTFPrimitive$loadIndices$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFPrimitive$loadIndices$1_invoke0($this, $buffer) {
    var var$2, var$3, var$4, $indexBytes, $i;
    kji_Intrinsics_checkParameterIsNotNull($buffer, $rt_s(467));
    if (!kji_Intrinsics_areEqual(oktgg_GLTFAccessor_getType($this.$$accessor0), $rt_s(472)))
        $rt_throw(jl_RuntimeException__init_(jl_StringBuilder__init_().$append($rt_s(1286)).$append(oktgg_GLTFAccessor_getType($this.$$accessor0)).$toString()));
    a: {
        oktgg_GLTFBuffer_getBytes($buffer).$setPosition(oktgg_GLTFBufferView_getByteOffset($this.$$bufferView0) + oktgg_GLTFAccessor_getByteOffset($this.$$accessor0) | 0);
        oktd_DATA_$callClinit();
        var$2 = oktd_DATA_INSTANCE;
        var$3 = oktgg_GLTFAccessor_getCount($this.$$accessor0);
        switch (oktgg_GLTFAccessor_getComponentType($this.$$accessor0)) {
            case 5120:
            case 5121:
                var$4 = 1;
                break a;
            case 5122:
            case 5123:
                var$4 = 2;
                break a;
            case 5124:
                break;
            case 5125:
                var$4 = 4;
                break a;
            default:
        }
        $rt_throw(jl_RuntimeException__init_(jl_StringBuilder__init_().$append($rt_s(1287)).$append1(oktgg_GLTFAccessor_getComponentType($this.$$accessor0)).$toString()));
    }
    $indexBytes = oktd_DATA_bytes(var$2, $rt_imul(var$3, var$4));
    $i = 0;
    var$3 = $indexBytes.$getSize();
    while ($i < var$3) {
        $indexBytes.$set53($i, oktgg_GLTFBuffer_getBytes($buffer).$get15());
        $i = $i + 1 | 0;
    }
    b: {
        $indexBytes.$setPosition(0);
        oktm_IndexBufferObject_setBytes($this.$$out1, $indexBytes);
        var$2 = $this.$$out1;
        switch (oktgg_GLTFAccessor_getComponentType($this.$$accessor0)) {
            case 5120:
            case 5121:
                var$3 = 5121;
                break b;
            case 5122:
            case 5123:
                var$3 = 5123;
                break b;
            case 5124:
                break;
            case 5125:
                var$3 = 5125;
                break b;
            default:
        }
        $rt_throw(jl_RuntimeException__init_(jl_StringBuilder__init_().$append($rt_s(1288)).$append1(oktgg_GLTFAccessor_getComponentType($this.$$accessor0)).$toString()));
    }
    oktm_IndexBufferObject_setType(var$2, var$3);
    oktgg_GLTFBuffer_getBytes($buffer).$setPosition(0);
    if (!oktgg_GLTFConf_getSeparateThread(oktgg_GLTFPrimitive_getGltf($this.$this$0191).$getConf()))
        oktm_IndexBufferObject_initGpuObjects($this.$$out1);
    else {
        oktg_GL_$callClinit();
        oktg_GL_call$default(oktg_GL_INSTANCE, null, oktgg_GLTFPrimitive$loadIndices$1$1__init_($this), 1, null);
    }
}
function oktgg_GLTFPrimitive$loadIndices$1__init_0(var$0, var$1, var$2, var$3, var$4) {
    var$0.$this$0191 = var$1;
    var$0.$$accessor0 = var$2;
    var$0.$$bufferView0 = var$3;
    var$0.$$out1 = var$4;
    kji_Lambda__init_0(var$0, 1);
}
function ju_HashMap$HashMapEntrySet() {
    ju_AbstractSet.call(this);
    this.$associatedMap1 = null;
}
function ju_HashMap$HashMapEntrySet__init_(var_0) {
    var var_1 = new ju_HashMap$HashMapEntrySet();
    ju_HashMap$HashMapEntrySet__init_0(var_1, var_0);
    return var_1;
}
function ju_HashMap$HashMapEntrySet__init_0($this, $hm) {
    ju_AbstractSet__init_0($this);
    $this.$associatedMap1 = $hm;
}
function ju_HashMap$HashMapEntrySet_hashMap($this) {
    return $this.$associatedMap1;
}
function ju_HashMap$HashMapEntrySet_iterator($this) {
    return ju_HashMap$EntryIterator__init_($this.$associatedMap1);
}
function ju_LinkedHashMap$LinkedHashMapEntrySet() {
    ju_HashMap$HashMapEntrySet.call(this);
}
function ju_LinkedHashMap$LinkedHashMapEntrySet__init_(var_0) {
    var var_1 = new ju_LinkedHashMap$LinkedHashMapEntrySet();
    ju_LinkedHashMap$LinkedHashMapEntrySet__init_0(var_1, var_0);
    return var_1;
}
function ju_LinkedHashMap$LinkedHashMapEntrySet__init_0($this, $lhm) {
    ju_HashMap$HashMapEntrySet__init_0($this, $lhm);
}
function ju_LinkedHashMap$LinkedHashMapEntrySet_iterator($this) {
    return ju_LinkedHashMap$EntryIterator__init_($this.$hashMap());
}
function kc_EmptyList() {
    jl_Object.call(this);
}
var kc_EmptyList_INSTANCE = null;
function kc_EmptyList_$callClinit() {
    kc_EmptyList_$callClinit = $rt_eraseClinit(kc_EmptyList);
    kc_EmptyList__clinit_();
}
function kc_EmptyList__init_() {
    var var_0 = new kc_EmptyList();
    kc_EmptyList__init_0(var_0);
    return var_0;
}
function kc_EmptyList_getSize($this) {
    return 0;
}
function kc_EmptyList_size(var$0) {
    return kc_EmptyList_getSize(var$0);
}
function kc_EmptyList_get($this, $index) {
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(1289)).$append1($index).$append12(46).$toString()));
}
function kc_EmptyList_get0(var$0, var$1) {
    return kc_EmptyList_get(var$0, var$1);
}
function kc_EmptyList__init_0($this) {
    kc_EmptyList_$callClinit();
    jl_Object__init_0($this);
}
function kc_EmptyList__clinit_() {
    kc_EmptyList_INSTANCE = kc_EmptyList__init_();
}
function oooi_Objects_H$dxAutoDisable() {
    var a = this; jl_Object.call(a);
    a.$idle_time = 0.0;
    a.$idle_steps = 0;
    a.$linear_average_threshold = 0.0;
    a.$angular_average_threshold = 0.0;
    a.$average_samples = 0;
}
function oooi_Objects_H$dxAutoDisable__init_() {
    var var_0 = new oooi_Objects_H$dxAutoDisable();
    oooi_Objects_H$dxAutoDisable__init_0(var_0);
    return var_0;
}
function oooi_Objects_H$dxAutoDisable_clone($this) {
    var var$1, $e, $$je;
    a: {
        try {
            var$1 = jl_Object_clone($this);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_CloneNotSupportedException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    $rt_throw(jl_RuntimeException__init_3($e));
}
function oooi_Objects_H$dxAutoDisable__init_0($this) {
    jl_Object__init_0($this);
    $this.$idle_time = 0.0;
    $this.$idle_steps = 10;
    $this.$average_samples = 1;
    $this.$linear_average_threshold = 1.0E-4;
    $this.$angular_average_threshold = 1.0E-4;
}
function jur_UCISupplCharSet() {
    jur_LeafSet.call(this);
    this.$ch4 = 0;
}
function jur_UCISupplCharSet__init_(var_0) {
    var var_1 = new jur_UCISupplCharSet();
    jur_UCISupplCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISupplCharSet__init_0($this, $ch) {
    jur_LeafSet__init_2($this);
    $this.$charCount0 = 2;
    $this.$ch4 = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
}
function jur_UCISupplCharSet_accepts($this, $strIndex, $testString) {
    var var$3, $high, $low;
    var$3 = $strIndex + 1 | 0;
    $high = $testString.$charAt($strIndex);
    $low = $testString.$charAt(var$3);
    return $this.$ch4 != jl_Character_toLowerCase0(jl_Character_toUpperCase0(jl_Character_toCodePoint($high, $low))) ? (-1) : 2;
}
function oktgl_PointLight() {
    var a = this; jl_Object.call(a);
    a.$name39 = null;
    a.$isLightEnabled0 = 0;
    a.$lightIntensity0 = 0.0;
    a.$color2 = null;
    a.$position11 = null;
    a.$range0 = 0.0;
    a.$shadowMaps0 = null;
    a.$viewProjectionMatrices0 = null;
}
function oktgl_PointLight__init_() {
    var var_0 = new oktgl_PointLight();
    oktgl_PointLight__init_0(var_0);
    return var_0;
}
function oktgl_PointLight__init_0($this) {
    jl_Object__init_0($this);
    $this.$name39 = $rt_s(6);
    $this.$isLightEnabled0 = 1;
    $this.$lightIntensity0 = 1.0;
    $this.$color2 = oktm_Vec3__init_0(1.0, 1.0, 1.0);
    $this.$position11 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    $this.$range0 = 100.0;
    oktgl_DirectionalLight_$callClinit();
    $this.$shadowMaps0 = oktgl_DirectionalLight$Companion_getShadowMapsCap(oktgl_DirectionalLight_Companion);
    $this.$viewProjectionMatrices0 = oktgl_DirectionalLight$Companion_getViewProjectionMatricesCap(oktgl_DirectionalLight_Companion);
}
function jur_AbstractCharClass$LazyRange() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$start4 = 0;
    a.$end2 = 0;
}
function jur_AbstractCharClass$LazyRange__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyRange();
    jur_AbstractCharClass$LazyRange__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyRange__init_0($this, $start, $end) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
    $this.$start4 = $start;
    $this.$end2 = $end;
}
function jur_AbstractCharClass$LazyRange_computeValue($this) {
    var $chCl;
    $chCl = jur_CharClass__init_().$add0($this.$start4, $this.$end2);
    return $chCl;
}
function ooo_DBody() {
}
function oooi_DxBody() {
    var a = this; oooi_DObject.call(a);
    a.$firstjoint = null;
    a.$flags2 = 0;
    a.$geom = null;
    a.$mass = null;
    a.$invI = null;
    a.$invMass = 0.0;
    a.$_posr = null;
    a.$_q = null;
    a.$lvel = null;
    a.$avel = null;
    a.$facc = null;
    a.$tacc = null;
    a.$finite_rot_axis = null;
    a.$adis0 = null;
    a.$adis_timeleft = 0.0;
    a.$adis_stepsleft = 0;
    a.$average_lvel_buffer = null;
    a.$average_avel_buffer = null;
    a.$average_counter = 0;
    a.$average_ready = 0;
    a.$moved_callback = null;
    a.$dampingp0 = null;
    a.$max_angular_speed0 = 0.0;
}
function oooi_DxBody__init_(var_0) {
    var var_1 = new oooi_DxBody();
    oooi_DxBody__init_0(var_1, var_0);
    return var_1;
}
function oooi_DxBody__init_0($this, $w) {
    oooi_DObject__init_0($this, $w);
    $this.$firstjoint = oooicj_Ref__init_();
}
function oooi_DxBody_dBodyCreate($w) {
    var $b, var$3;
    oooi_Common_dAASSERT2($w);
    $b = oooi_DxBody__init_($w);
    oooicj_Ref_set($b.$firstjoint, null);
    $b.$flags2 = 0;
    $b.$geom = null;
    $b.$average_lvel_buffer = null;
    $b.$average_avel_buffer = null;
    $b.$mass = oooi_DxMass__init_();
    $b.$mass.$dMassSetParameters(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0);
    $b.$invI = oom_DMatrix3__init_1();
    oom_DMatrix3_set00($b.$invI, 1.0);
    oom_DMatrix3_set11($b.$invI, 1.0);
    oom_DMatrix3_set22($b.$invI, 1.0);
    $b.$invMass = 1.0;
    $b.$_posr = oooi_Objects_H$DxPosR__init_();
    $b.$_q = oom_DQuaternion__init_();
    oom_DQuaternion_set($b.$_q, 0, 1.0);
    oom_DMatrix3_setIdentity($b.$_posr.$Rw());
    $b.$lvel = oom_DVector3__init_();
    $b.$avel = oom_DVector3__init_();
    $b.$facc = oom_DVector3__init_();
    $b.$tacc = oom_DVector3__init_();
    $b.$finite_rot_axis = oom_DVector3__init_();
    oooi_DObject_addObjectToList($b, $w.$firstbody);
    $w.$nb = $w.$nb + 1 | 0;
    var$3 = null;
    $b.$average_lvel_buffer = var$3;
    $b.$average_avel_buffer = var$3;
    $b.$dBodySetAutoDisableDefaults();
    $b.$adis_stepsleft = $b.$adis0.$idle_steps;
    $b.$adis_timeleft = $b.$adis0.$idle_time;
    $b.$average_counter = 0;
    $b.$average_ready = 0;
    $b.$dBodySetAutoDisableAverageSamplesCount($b.$adis0.$average_samples);
    $b.$moved_callback = null;
    $b.$dBodySetDampingDefaults();
    $b.$flags2 = $b.$flags2 | $w.$body_flags & 128;
    $b.$max_angular_speed0 = $w.$max_angular_speed;
    $b.$flags2 = $b.$flags2 | 256;
    return $b;
}
function oooi_DxBody_dBodySetData($this, $data) {
    $this.$userdata = $data;
}
function oooi_DxBody_dBodyGetData($this) {
    return $this.$userdata;
}
function oooi_DxBody_dBodySetPosition($this, $x, $y, $z) {
    var $geom2;
    oom_DVector3_set0($this.$_posr.$pos2, $x, $y, $z);
    $geom2 = $this.$geom;
    while ($geom2 !== null) {
        $geom2.$dGeomMoved();
        $geom2 = $geom2.$dGeomGetBodyNext();
    }
}
function oooi_DxBody_dBodySetPosition0($this, $xyz) {
    var $geom2;
    oom_DVector3_set($this.$_posr.$pos2, $xyz);
    $geom2 = $this.$geom;
    while ($geom2 !== null) {
        $geom2.$dGeomMoved();
        $geom2 = $geom2.$dGeomGetBodyNext();
    }
}
function oooi_DxBody_dBodyGetPosition($this) {
    return $this.$_posr.$pos();
}
function oooi_DxBody_dBodyGetRotation($this) {
    return $this.$_posr.$R();
}
function oooi_DxBody_dBodyGetQuaternion($this) {
    return $this.$_q;
}
function oooi_DxBody_dBodySetMass($this, $mass2) {
    var $mass2c;
    oooi_Common_dIASSERT($mass2.$check());
    $mass2c = $mass2.$getC();
    oooi_Common_dUASSERT(jl_Math_abs($mass2c.$get01()) <= 2.220446049250313E-16 && jl_Math_abs($mass2c.$get10()) <= 2.220446049250313E-16 && jl_Math_abs($mass2c.$get20()) <= 2.220446049250313E-16 ? 1 : 0, $rt_s(1290));
    $this.$mass.$set65($mass2);
    if (!oooi_Matrix_dInvertPDMatrix($this.$mass.$_I, $this.$invI)) {
        oooi_Common_dDEBUGMSG($rt_s(1291));
        oom_DMatrix3_setIdentity($this.$invI);
    }
    $this.$invMass = oooi_Common_dRecip($this.$mass.$_mass);
}
function oooi_DxBody_dBodyEnable_noAdis($this) {
    $this.$flags2 = $this.$flags2 & (-5);
}
function oooi_DxBody_dBodyIsEnabled($this) {
    return $this.$flags2 & 4 ? 0 : 1;
}
function oooi_DxBody_dBodySetGravityMode($this, $mode) {
    if (!$mode)
        $this.$flags2 = $this.$flags2 | 8;
    else
        $this.$flags2 = $this.$flags2 & (-9);
}
function oooi_DxBody_dBodySetAutoDisableAverageSamplesCount($this, $average_samples_count) {
    $this.$adis0.$average_samples = $average_samples_count;
    if ($this.$average_lvel_buffer !== null)
        $this.$average_lvel_buffer = null;
    if ($this.$average_avel_buffer !== null)
        $this.$average_avel_buffer = null;
    if ($this.$adis0.$average_samples <= 0) {
        $this.$average_lvel_buffer = null;
        $this.$average_avel_buffer = null;
    } else {
        $this.$average_lvel_buffer = oom_DVector3_newArray($this.$adis0.$average_samples);
        $this.$average_avel_buffer = oom_DVector3_newArray($this.$adis0.$average_samples);
    }
    $this.$average_counter = 0;
    $this.$average_ready = 0;
}
function oooi_DxBody_dBodySetAutoDisableFlag($this, $do_auto_disable) {
    var var$2, var$3;
    if ($do_auto_disable)
        $this.$flags2 = $this.$flags2 | 16;
    else {
        $this.$flags2 = $this.$flags2 & (-17);
        $this.$flags2 = $this.$flags2 & (-5);
        $this.$adis0.$idle_steps = $this.$world0.$getAutoDisableSteps();
        $this.$adis0.$idle_time = $this.$world0.$getAutoDisableTime();
        var$2 = $this.$world0;
        var$3 = var$2.$getAutoDisableAverageSamplesCount();
        $this.$dBodySetAutoDisableAverageSamplesCount(var$3);
    }
}
function oooi_DxBody_dBodySetAutoDisableDefaults($this) {
    var $w;
    $w = $this.$world0;
    $this.$adis0 = $w.$adis.$clone2();
    $this.$dBodySetAutoDisableFlag(!($w.$body_flags & 16) ? 0 : 1);
}
function oooi_DxBody_dBodySetDampingDefaults($this) {
    var $w;
    $w = $this.$world0;
    $this.$dampingp0 = $w.$dampingp.$clone3();
    $this.$flags2 = $this.$flags2 & (-97);
    $this.$flags2 = $this.$flags2 | $w.$body_flags & 96;
}
function oooi_DxBody_sinc($x) {
    if (oooi_Common_dFabs($x) >= 1.0E-4)
        return oooi_Common_dSin($x) / $x;
    return 1.0 - $x * $x * 0.16666666666666666;
}
function oooi_DxBody_dxStepBody($this, $h) {
    var $max_ang_speed, $aspeed, $coef, $dq, $irv, $q, $wlen, var$9, $theta, $s, $frv, $k, $q2, $world_process_context, $geom2, $lin_threshold, $lin_speed, $ang_threshold, $ang_speed;
    if ($this.$flags2 & 128) {
        $max_ang_speed = $this.$max_angular_speed0;
        $aspeed = ooo_OdeMath_dCalcVectorDot3($this.$avel, $this.$avel);
        if ($aspeed > $max_ang_speed * $max_ang_speed) {
            $coef = $max_ang_speed / oooi_Common_dSqrt($aspeed);
            oom_DVector3_scale($this.$avel, $coef);
        }
    }
    oom_DVector3_eqSum0($this.$_posr.$pos2, $this.$_posr.$pos(), $this.$lvel, $h);
    if (!($this.$flags2 & 1)) {
        $dq = oom_DQuaternion__init_();
        oooi_Rotation_dDQfromW($dq, $this.$avel, $this.$_q);
        oom_DQuaternion_sum($this.$_q, $this.$_q, $dq, $h);
    } else {
        $irv = oom_DVector3__init_();
        $q = oom_DQuaternion__init_();
        if (!($this.$flags2 & 2)) {
            $wlen = oom_DVector3_length($this.$avel);
            var$9 = $h * 0.5;
            $theta = $wlen * var$9;
            $s = oooi_DxBody_sinc($theta) * var$9;
            $q.$set17(oooi_Common_dCos($theta), oom_DVector3_get0($this.$avel) * $s, oom_DVector3_get1($this.$avel) * $s, oom_DVector3_get2($this.$avel) * $s);
        } else {
            $frv = oom_DVector3__init_();
            $k = ooo_OdeMath_dCalcVectorDot3($this.$finite_rot_axis, $this.$avel);
            oom_DVector3_scale(oom_DVector3_set($frv, $this.$finite_rot_axis), $k);
            oom_DVector3_eqDiff($irv, $this.$avel, $frv);
            var$9 = $h * 0.5;
            $theta = $k * var$9;
            $s = oooi_DxBody_sinc($theta) * var$9;
            $q.$set17(oooi_Common_dCos($theta), oom_DVector3_get0($frv) * $s, oom_DVector3_get1($frv) * $s, oom_DVector3_get2($frv) * $s);
        }
        $q2 = oom_DQuaternion__init_();
        oooi_Rotation_dQMultiply0($q2, $q, $this.$_q);
        $this.$_q.$set51($q2);
        if ($this.$flags2 & 2) {
            $dq = oom_DQuaternion__init_();
            oooi_Rotation_dDQfromW($dq, $irv, $this.$_q);
            oom_DQuaternion_sum($this.$_q, $this.$_q, $dq, var$9);
        }
    }
    ooo_OdeMath_dNormalize4($this.$_q);
    oooi_Rotation_dRfromQ($this.$_posr.$Rw(), $this.$_q);
    $world_process_context = $this.$world0.$UnsafeGetWorldProcessingContext();
    $geom2 = $this.$geom;
    while ($geom2 !== null) {
        $world_process_context.$LockForStepbodySerialization();
        $geom2.$dGeomMoved();
        $world_process_context.$UnlockForStepbodySerialization();
        $geom2 = $geom2.$dGeomGetBodyNext();
    }
    if ($this.$moved_callback !== null)
        $this.$moved_callback.$run7($this);
    if ($this.$flags2 & 32) {
        $lin_threshold = $this.$dampingp0.$linear_threshold;
        $lin_speed = ooo_OdeMath_dCalcVectorDot3($this.$lvel, $this.$lvel);
        if ($lin_speed > $lin_threshold) {
            $k = 1.0 - $this.$dampingp0.$linear_scale;
            oom_DVector3_scale($this.$lvel, $k);
        }
    }
    if ($this.$flags2 & 64) {
        $ang_threshold = $this.$dampingp0.$angular_threshold;
        $ang_speed = ooo_OdeMath_dCalcVectorDot3($this.$avel, $this.$avel);
        if ($ang_speed > $ang_threshold) {
            $k = 1.0 - $this.$dampingp0.$angular_scale;
            oom_DVector3_scale($this.$avel, $k);
        }
    }
}
function oooi_DxBody_posr($this) {
    return $this.$_posr;
}
function oooi_DxBody_setData($this, $data) {
    $this.$dBodySetData($data);
}
function oooi_DxBody_getData($this) {
    return $this.$dBodyGetData();
}
function oooi_DxBody_setPosition($this, $x, $y, $z) {
    $this.$dBodySetPosition0($x, $y, $z);
}
function oooi_DxBody_getPosition($this) {
    return $this.$dBodyGetPosition();
}
function oooi_DxBody_getRotation($this) {
    return $this.$dBodyGetRotation();
}
function oooi_DxBody_setMass($this, $mass) {
    $this.$dBodySetMass($mass);
}
function oooi_DxBody_isEnabled($this) {
    return $this.$dBodyIsEnabled();
}
function oooi_DxBody_isFlagsGyroscopic($this) {
    return !($this.$flags2 & 256) ? 0 : 1;
}
function oooi_DxBody_setGravityMode($this, $mode) {
    $this.$dBodySetGravityMode($mode);
}
function oktts_MotionBlurBaseTest$testMain$1() {
    jl_Object.call(this);
    this.$$movingEnabled = null;
}
function oktts_MotionBlurBaseTest$testMain$1__init_(var_0) {
    var var_1 = new oktts_MotionBlurBaseTest$testMain$1();
    oktts_MotionBlurBaseTest$testMain$1__init_0(var_1, var_0);
    return var_1;
}
function oktts_MotionBlurBaseTest$testMain$1_buttonUp($this, $button, $screenX, $screenY, $pointer) {
    $this.$$movingEnabled.$element1 = $this.$$movingEnabled.$element1 ? 0 : 1;
}
function oktts_MotionBlurBaseTest$testMain$1__init_0($this, $$captured_local_variable$0) {
    $this.$$movingEnabled = $$captured_local_variable$0;
    jl_Object__init_0($this);
}
function oktts_MotionBlurBaseTest$testMain$1_buttonDown($this, $button, $screenX, $screenY, $pointer) {
    okti_IMouseListener$DefaultImpls_buttonDown($this, $button, $screenX, $screenY, $pointer);
}
function oktts_MotionBlurBaseTest$testMain$1_dragged($this, $screenX, $screenY, $pointer) {
    okti_IMouseListener$DefaultImpls_dragged($this, $screenX, $screenY, $pointer);
}
function oktts_MotionBlurBaseTest$testMain$1_moved($this, $screenX, $screenY) {
    okti_IMouseListener$DefaultImpls_moved($this, $screenX, $screenY);
}
function oktts_MotionBlurBaseTest$testMain$1_scrolled($this, $amount) {
    okti_IMouseListener$DefaultImpls_scrolled($this, $amount);
}
function oktts_MotionBlurBaseTest$testMain$2() {
    var a = this; kji_Lambda.call(a);
    a.$$movingEnabled0 = null;
    a.$$cubePos = null;
    a.$$moveDir = null;
    a.$$velocityMapBuffer = null;
    a.$$velocityShader = null;
    a.$$cubePrevPos = null;
    a.$$cube3 = null;
    a.$$plane4 = null;
    a.$$sceneColorBuffer0 = null;
    a.$$sceneColorShader = null;
    a.$$cubeColor0 = null;
    a.$$motionBlur = null;
    a.$$screenQuad9 = null;
}
function oktts_MotionBlurBaseTest$testMain$2__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12) {
    var var_13 = new oktts_MotionBlurBaseTest$testMain$2();
    oktts_MotionBlurBaseTest$testMain$2__init_0(var_13, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12);
    return var_13;
}
function oktts_MotionBlurBaseTest$testMain$2_invoke(var$0) {
    oktts_MotionBlurBaseTest$testMain$2_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktts_MotionBlurBaseTest$testMain$2_invoke0($this) {
    var $delta, var$2;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    if ($this.$$movingEnabled0.$element1) {
        okt_APP_$callClinit();
        $delta = okt_APP_getDeltaTime(okt_APP_INSTANCE) * 10.0;
        var$2 = $this.$$cubePos;
        var$2.$setZ(var$2.$getZ() + $delta * $this.$$moveDir.$element2);
        if (jl_Math_abs0($this.$$cubePos.$getZ()) > 3.0) {
            var$2 = $this.$$moveDir;
            var$2.$element2 = var$2.$element2 * (-1.0);
        }
        oktt_SimpleFrameBuffer_render($this.$$velocityMapBuffer, oktts_MotionBlurBaseTest$testMain$2$1__init_($this));
    }
    oktt_SimpleFrameBuffer_render($this.$$sceneColorBuffer0, oktts_MotionBlurBaseTest$testMain$2$2__init_($this));
    oktsp_MotionBlur_render($this.$$motionBlur, $this.$$screenQuad9, null);
    if ($this.$$movingEnabled0.$element1)
        $this.$$cubePrevPos.$set11($this.$$cubePos);
}
function oktts_MotionBlurBaseTest$testMain$2__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13) {
    var$0.$$movingEnabled0 = var$1;
    var$0.$$cubePos = var$2;
    var$0.$$moveDir = var$3;
    var$0.$$velocityMapBuffer = var$4;
    var$0.$$velocityShader = var$5;
    var$0.$$cubePrevPos = var$6;
    var$0.$$cube3 = var$7;
    var$0.$$plane4 = var$8;
    var$0.$$sceneColorBuffer0 = var$9;
    var$0.$$sceneColorShader = var$10;
    var$0.$$cubeColor0 = var$11;
    var$0.$$motionBlur = var$12;
    var$0.$$screenQuad9 = var$13;
    kji_Lambda__init_0(var$0, 0);
}
function okttm_MeshCubeTest() {
    jl_Object.call(this);
}
function okttm_MeshCubeTest__init_() {
    var var_0 = new okttm_MeshCubeTest();
    okttm_MeshCubeTest__init_0(var_0);
    return var_0;
}
function okttm_MeshCubeTest_getName($this) {
    return $rt_s(1292);
}
function okttm_MeshCubeTest_testMain($this) {
    var $mesh, $vertexInputs, var$3, var$4, var$5, var$6, var$7, var$8, $shader, var$10, var$11, $cubeMatrix4, $temp;
    $mesh = oktm_Mesh__init_1(null, null, null, null, 0, 31, null);
    $vertexInputs = new oktm_VertexInputs;
    var$3 = $rt_createArray(oktm_IVertexInput, 1);
    var$4 = var$3.data;
    var$4[0] = oktm_VertexInput__init_(3, $rt_s(303), 5126, 1);
    oktm_VertexInputs__init_($vertexInputs, var$3);
    oktm_IVertexBuffer_$callClinit();
    var$5 = oktm_IVertexBuffer_Companion;
    oktd_DATA_$callClinit();
    var$6 = oktd_DATA_bytes(oktd_DATA_INSTANCE, 96);
    var$7 = var$6.$floatView();
    var$3 = $rt_createArray(jl_Float, 24);
    var$4 = var$3.data;
    var$4[0] = jl_Float_valueOf((-1.0));
    var$4[1] = jl_Float_valueOf((-1.0));
    var$4[2] = jl_Float_valueOf(1.0);
    var$4[3] = jl_Float_valueOf(1.0);
    var$4[4] = jl_Float_valueOf((-1.0));
    var$4[5] = jl_Float_valueOf(1.0);
    var$4[6] = jl_Float_valueOf(1.0);
    var$4[7] = jl_Float_valueOf(1.0);
    var$4[8] = jl_Float_valueOf(1.0);
    var$4[9] = jl_Float_valueOf((-1.0));
    var$4[10] = jl_Float_valueOf(1.0);
    var$4[11] = jl_Float_valueOf(1.0);
    var$4[12] = jl_Float_valueOf((-1.0));
    var$4[13] = jl_Float_valueOf((-1.0));
    var$4[14] = jl_Float_valueOf((-1.0));
    var$4[15] = jl_Float_valueOf(1.0);
    var$4[16] = jl_Float_valueOf((-1.0));
    var$4[17] = jl_Float_valueOf((-1.0));
    var$4[18] = jl_Float_valueOf(1.0);
    var$4[19] = jl_Float_valueOf(1.0);
    var$4[20] = jl_Float_valueOf((-1.0));
    var$4[21] = jl_Float_valueOf((-1.0));
    var$4[22] = jl_Float_valueOf(1.0);
    var$4[23] = jl_Float_valueOf((-1.0));
    var$7.$put4(var$3);
    var$8 = $vertexInputs;
    var$7 = null;
    oktm_Mesh_setVertices($mesh, oktm_IVertexBuffer$Companion_build$default(var$5, var$6, var$8, 0, 0, 12, var$7));
    var$5 = oktd_DATA_bytes(oktd_DATA_INSTANCE, 72);
    var$6 = var$5.$shortView();
    var$3 = $rt_createArray(jl_Short, 36);
    var$4 = var$3.data;
    var$4[0] = jl_Short_valueOf(0);
    var$4[1] = jl_Short_valueOf(1);
    var$4[2] = jl_Short_valueOf(2);
    var$4[3] = jl_Short_valueOf(2);
    var$4[4] = jl_Short_valueOf(3);
    var$4[5] = jl_Short_valueOf(0);
    var$4[6] = jl_Short_valueOf(1);
    var$4[7] = jl_Short_valueOf(5);
    var$4[8] = jl_Short_valueOf(6);
    var$4[9] = jl_Short_valueOf(6);
    var$4[10] = jl_Short_valueOf(2);
    var$4[11] = jl_Short_valueOf(1);
    var$4[12] = jl_Short_valueOf(7);
    var$4[13] = jl_Short_valueOf(6);
    var$4[14] = jl_Short_valueOf(5);
    var$4[15] = jl_Short_valueOf(5);
    var$4[16] = jl_Short_valueOf(4);
    var$4[17] = jl_Short_valueOf(7);
    var$4[18] = jl_Short_valueOf(4);
    var$4[19] = jl_Short_valueOf(0);
    var$4[20] = jl_Short_valueOf(3);
    var$4[21] = jl_Short_valueOf(3);
    var$4[22] = jl_Short_valueOf(7);
    var$4[23] = jl_Short_valueOf(4);
    var$4[24] = jl_Short_valueOf(4);
    var$4[25] = jl_Short_valueOf(5);
    var$4[26] = jl_Short_valueOf(1);
    var$4[27] = jl_Short_valueOf(1);
    var$4[28] = jl_Short_valueOf(0);
    var$4[29] = jl_Short_valueOf(4);
    var$4[30] = jl_Short_valueOf(3);
    var$4[31] = jl_Short_valueOf(2);
    var$4[32] = jl_Short_valueOf(6);
    var$4[33] = jl_Short_valueOf(6);
    var$4[34] = jl_Short_valueOf(7);
    var$4[35] = jl_Short_valueOf(3);
    var$6.$put4(var$3);
    var$6 = null;
    oktm_Mesh_setIndices($mesh, oktm_IndexBufferObject__init_(var$5, 5123, 0, 0, 12, var$6));
    $shader = new okts_Shader;
    var$8 = null;
    var$7 = null;
    var$10 = null;
    var$11 = null;
    okts_Shader__init_($shader, $rt_s(1293), $rt_s(1294), var$8, 0, var$7, 0, var$10, 124, var$11);
    oktgc_ActiveCamera_$callClinit();
    var$8 = oktgc_ActiveCamera_INSTANCE;
    var$7 = oktgc_Camera__init_(null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null);
    var$5 = oktm_Vec3__init_0(0.0, 3.0, (-3.0));
    oktm_IVec3_$callClinit();
    oktgc_ICamera$DefaultImpls_lookAt$default(var$7, var$5, oktm_IVec3$Companion_getZero(oktm_IVec3_Companion), null, 4, null);
    oktgc_Camera_setNear(var$7, 0.10000000149011612);
    oktgc_Camera_setFar(var$7, 100.0);
    var$7.$update0();
    oktgc_ActiveCamera_setApi(var$8, var$7);
    $cubeMatrix4 = oktm_Mat4__init_();
    $temp = oktm_Mat4__init_();
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttm_MeshCubeTest$testMain$4__init_($cubeMatrix4, $shader, $temp, $mesh), 1, null);
}
function okttm_MeshCubeTest__init_0($this) {
    jl_Object__init_0($this);
}
function jur_UCISupplRangeSet() {
    jur_SupplRangeSet.call(this);
}
function jur_UCISupplRangeSet__init_(var_0) {
    var var_1 = new jur_UCISupplRangeSet();
    jur_UCISupplRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISupplRangeSet__init_0($this, $cc) {
    jur_SupplRangeSet__init_0($this, $cc);
}
function jur_UCISupplRangeSet_contains($this, $ch) {
    return $this.$chars.$contains0(jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch)));
}
function kji_FloatCompanionObject() {
    jl_Object.call(this);
}
var kji_FloatCompanionObject_MIN_VALUE = 1.401298464324817E-45;
var kji_FloatCompanionObject_MAX_VALUE = 3.4028234663852886E38;
var kji_FloatCompanionObject_POSITIVE_INFINITY = Infinity;
var kji_FloatCompanionObject_NEGATIVE_INFINITY = (-Infinity);
var kji_FloatCompanionObject_NaN = NaN;
var kji_FloatCompanionObject_INSTANCE = null;
function kji_FloatCompanionObject_$callClinit() {
    kji_FloatCompanionObject_$callClinit = $rt_eraseClinit(kji_FloatCompanionObject);
    kji_FloatCompanionObject__clinit_();
}
function kji_FloatCompanionObject__init_() {
    var var_0 = new kji_FloatCompanionObject();
    kji_FloatCompanionObject__init_0(var_0);
    return var_0;
}
function kji_FloatCompanionObject_getMIN_VALUE($this) {
    return kji_FloatCompanionObject_MIN_VALUE;
}
function kji_FloatCompanionObject_getMAX_VALUE($this) {
    return kji_FloatCompanionObject_MAX_VALUE;
}
function kji_FloatCompanionObject__init_0($this) {
    kji_FloatCompanionObject_$callClinit();
    jl_Object__init_0($this);
}
function kji_FloatCompanionObject__clinit_() {
    kji_FloatCompanionObject_INSTANCE = kji_FloatCompanionObject__init_();
    kji_FloatCompanionObject_MIN_VALUE = 1.401298464324817E-45;
    kji_FloatCompanionObject_MAX_VALUE = 3.4028234663852886E38;
    kji_FloatCompanionObject_POSITIVE_INFINITY = Infinity;
    kji_FloatCompanionObject_NEGATIVE_INFINITY = (-Infinity);
    kji_FloatCompanionObject_NaN = NaN;
}
function oom_DMatrix3C() {
}
function oooil_CCD$ccd_support_fn() {
}
function oooi_CollisionLibccd$1() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$1__init_() {
    var var_0 = new oooi_CollisionLibccd$1();
    oooi_CollisionLibccd$1__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$1__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$1_run($this, $obj, $_dir, $v) {
    var $o, $dir, var$6, var$7, var$8;
    $o = $obj;
    $dir = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDVec3_ccdVec3Copy($dir, $_dir);
    oooil_CCDQuat_ccdQuatRotVec($dir, $o.$rot_inv);
    var$6 = oooil_CCDVec3_ccdSign(oooil_CCDVec3_ccdVec3X($dir)) * $o.$dim.data[0];
    var$7 = oooil_CCDVec3_ccdSign(oooil_CCDVec3_ccdVec3Y($dir)) * $o.$dim.data[1];
    var$8 = oooil_CCDVec3_ccdSign(oooil_CCDVec3_ccdVec3Z($dir)) * $o.$dim.data[2];
    oooil_CCDVec3_ccdVec3Set0($v, var$6, var$7, var$8);
    oooil_CCDQuat_ccdQuatRotVec($v, $o.$rot);
    oooil_CCDVec3_ccdVec3Add($v, $o.$pos1);
}
function oktt_IFrameBufferAttachment() {
}
function oooi_CollisionLibccd$3() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$3__init_() {
    var var_0 = new oooi_CollisionLibccd$3();
    oooi_CollisionLibccd$3__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$3__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$3_run($this, $obj, $_dir, $v) {
    var $cyl, $dir, $dot, $len;
    $cyl = $obj;
    $dir = oooil_CCDVec3$ccd_vec3_t__init_();
    $dot = oooil_CCDVec3_ccdVec3Dot($_dir, $cyl.$axis0);
    if ($dot <= 0.0)
        oooil_CCDVec3_ccdVec3Copy($v, $cyl.$p20);
    else
        oooil_CCDVec3_ccdVec3Copy($v, $cyl.$p10);
    oooil_CCDVec3_ccdVec3Copy($dir, $cyl.$axis0);
    oooil_CCDVec3_ccdVec3Scale($dir,  -$dot);
    oooil_CCDVec3_ccdVec3Add($dir, $_dir);
    $len = oooil_CCDVec3_CCD_SQRT(oooil_CCDVec3_ccdVec3Len2($dir));
    if (!oooil_CCDVec3_ccdIsZero($len)) {
        oooil_CCDVec3_ccdVec3Scale($dir, $cyl.$radius0 / $len);
        oooil_CCDVec3_ccdVec3Add($v, $dir);
    }
}
function oooi_CollisionLibccd$2() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$2__init_() {
    var var_0 = new oooi_CollisionLibccd$2();
    oooi_CollisionLibccd$2__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$2__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$2_run($this, $obj, $_dir, $v) {
    var $o;
    $o = $obj;
    oooil_CCDVec3_ccdVec3Copy($v, $_dir);
    oooil_CCDVec3_ccdVec3Scale($v, $o.$radius);
    if (oooil_CCDVec3_ccdVec3Dot($_dir, $o.$axis) <= 0.0)
        oooil_CCDVec3_ccdVec3Add($v, $o.$p2);
    else
        oooil_CCDVec3_ccdVec3Add($v, $o.$p1);
}
function oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1() {
    kji_Lambda.call(this);
    this.$this$0192 = null;
}
function oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1__init_(var_0) {
    var var_1 = new oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1();
    oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1__init_0(var$0, var$1) {
    var$0.$this$0192 = var$1;
    kji_Lambda__init_0(var$0, 0);
}
function oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1_invoke(var$0) {
    oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1_invoke0($this) {
    var var$1;
    var$1 = oktgg_GLTFPrimitive_getMesh($this.$this$0192.$this$0193).$getVertices();
    if (var$1 !== null)
        var$1.$initGpuObjects();
}
function oooi_DxQuickStep$dxQuickStepperStage4CallContext() {
    var a = this; jl_Object.call(a);
    a.$m_stepperCallContext4 = null;
    a.$m_localContext2 = null;
    a.$m_lambda = null;
    a.$m_cforce = null;
    a.$m_iMJ = null;
    a.$m_order = null;
    a.$m_last_lambda = null;
    a.$m_bi_links_or_mi_levels = null;
    a.$m_mi_links = null;
    a.$m_LCP_IterationSyncReleasee = null;
    a.$m_LCP_IterationAllowedThreads = 0;
    a.$m_LCP_fcStartReleasee = null;
    a.$m_ji_4a = null;
    a.$m_mi_iMJ = null;
    a.$m_mi_fc = null;
    a.$m_LCP_fcPrepareThreadsRemaining = null;
    a.$m_LCP_fcCompleteThreadsTotal = 0;
    a.$m_mi_Ad = null;
    a.$m_LCP_iteration = 0;
    a.$m_LCP_iterationThreadsTotal = 0;
    a.$m_LCP_iterationThreadsRemaining = null;
    a.$m_LCP_iterationNextReleasee = null;
    a.$m_SOR_reorderHeadTaken = null;
    a.$m_SOR_reorderTailTaken = null;
    a.$m_SOR_bi_zeroHeadTaken = null;
    a.$m_SOR_bi_zeroTailTaken = null;
    a.$m_SOR_mi_zeroHeadTaken = null;
    a.$m_SOR_mi_zeroTailTaken = null;
    a.$m_SOR_reorderThreadsRemaining = null;
    a.$m_cf_4b = null;
    a.$m_ji_4b = null;
}
function oooi_DxQuickStep$dxQuickStepperStage4CallContext__init_() {
    var var_0 = new oooi_DxQuickStep$dxQuickStepperStage4CallContext();
    oooi_DxQuickStep$dxQuickStepperStage4CallContext__init_0(var_0);
    return var_0;
}
function oooi_DxQuickStep$dxQuickStepperStage4CallContext__init_1(var_0) {
    var var_1 = new oooi_DxQuickStep$dxQuickStepperStage4CallContext();
    oooi_DxQuickStep$dxQuickStepperStage4CallContext__init_2(var_1, var_0);
    return var_1;
}
function oooi_DxQuickStep$dxQuickStepperStage4CallContext__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_ji_4a = juca_AtomicInteger__init_0();
    $this.$m_mi_iMJ = juca_AtomicInteger__init_0();
    $this.$m_mi_fc = juca_AtomicInteger__init_0();
    $this.$m_LCP_fcPrepareThreadsRemaining = juca_AtomicInteger__init_0();
    $this.$m_mi_Ad = juca_AtomicInteger__init_0();
    $this.$m_LCP_iterationThreadsRemaining = juca_AtomicInteger__init_0();
    $this.$m_SOR_reorderHeadTaken = juca_AtomicInteger__init_0();
    $this.$m_SOR_reorderTailTaken = juca_AtomicInteger__init_0();
    $this.$m_SOR_bi_zeroHeadTaken = juca_AtomicInteger__init_0();
    $this.$m_SOR_bi_zeroTailTaken = juca_AtomicInteger__init_0();
    $this.$m_SOR_mi_zeroHeadTaken = juca_AtomicInteger__init_0();
    $this.$m_SOR_mi_zeroTailTaken = juca_AtomicInteger__init_0();
    $this.$m_SOR_reorderThreadsRemaining = juca_AtomicInteger__init_0();
    $this.$m_cf_4b = juca_AtomicInteger__init_0();
    $this.$m_ji_4b = juca_AtomicInteger__init_0();
}
function oooi_DxQuickStep$dxQuickStepperStage4CallContext_Initialize($this, $callContext, $localContext, $lambda, $cforce, $iMJ, $order, $last_lambda, $bi_links_or_mi_levels, $mi_links) {
    $this.$m_stepperCallContext4 = $callContext;
    $this.$m_localContext2 = $localContext;
    $this.$m_lambda = $lambda;
    $this.$m_cforce = $cforce;
    $this.$m_iMJ = $iMJ;
    $this.$m_order = $order;
    $this.$m_last_lambda = $last_lambda;
    $this.$m_bi_links_or_mi_levels = $bi_links_or_mi_levels;
    $this.$m_mi_links = $mi_links;
    $this.$m_LCP_IterationSyncReleasee = null;
    $this.$m_LCP_IterationAllowedThreads = 0;
    $this.$m_LCP_fcStartReleasee = null;
    juca_AtomicInteger_set($this.$m_ji_4a, 0);
    juca_AtomicInteger_set($this.$m_mi_iMJ, 0);
    juca_AtomicInteger_set($this.$m_mi_fc, 0);
    juca_AtomicInteger_set($this.$m_mi_Ad, 0);
    $this.$m_LCP_iteration = 0;
    juca_AtomicInteger_set($this.$m_cf_4b, 0);
    juca_AtomicInteger_set($this.$m_ji_4b, 0);
}
function oooi_DxQuickStep$dxQuickStepperStage4CallContext_AssignLCP_IterationData($this, $releaseeInstance, $iterationAllowedThreads) {
    $this.$m_LCP_IterationSyncReleasee = $releaseeInstance;
    $this.$m_LCP_IterationAllowedThreads = $iterationAllowedThreads;
}
function oooi_DxQuickStep$dxQuickStepperStage4CallContext_AssignLCP_fcAllowedThreads($this, $prepareThreads, $completeThreads) {
    juca_AtomicInteger_set($this.$m_LCP_fcPrepareThreadsRemaining, $prepareThreads);
    $this.$m_LCP_fcCompleteThreadsTotal = $completeThreads;
}
function oooi_DxQuickStep$dxQuickStepperStage4CallContext_ResetSOR_ConstraintsReorderVariables($this, $reorderThreads) {
    juca_AtomicInteger_set($this.$m_SOR_reorderHeadTaken, 0);
    juca_AtomicInteger_set($this.$m_SOR_reorderTailTaken, 0);
    juca_AtomicInteger_set($this.$m_SOR_bi_zeroHeadTaken, 0);
    juca_AtomicInteger_set($this.$m_SOR_bi_zeroTailTaken, 0);
    juca_AtomicInteger_set($this.$m_SOR_mi_zeroHeadTaken, 0);
    juca_AtomicInteger_set($this.$m_SOR_mi_zeroTailTaken, 0);
    juca_AtomicInteger_set($this.$m_SOR_reorderThreadsRemaining, $reorderThreads);
}
function oooi_DxQuickStep$dxQuickStepperStage4CallContext_RecordLCP_IterationStart($this, $totalThreads, $nextReleasee) {
    $this.$m_LCP_iterationThreadsTotal = $totalThreads;
    juca_AtomicInteger_set($this.$m_LCP_iterationThreadsRemaining, $totalThreads);
    $this.$m_LCP_iterationNextReleasee = $nextReleasee;
}
function oooi_DxQuickStep$dxQuickStepperStage4CallContext__init_2($this, $x0) {
    oooi_DxQuickStep$dxQuickStepperStage4CallContext__init_0($this);
}
function oooi_DxConvex$CollideConvexConvex() {
    jl_Object.call(this);
}
function oooi_DxConvex$CollideConvexConvex__init_() {
    var var_0 = new oooi_DxConvex$CollideConvexConvex();
    oooi_DxConvex$CollideConvexConvex__init_0(var_0);
    return var_0;
}
function oooi_DxConvex$CollideConvexConvex__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxConvex$CollideConvexConvex_dCollideConvexConvex($this, $Convex1, $Convex2, $flags, $contacts, $skip) {
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    return oooi_DxConvex_access$900($Convex1, $Convex2, $flags, $contacts, $skip);
}
function oooi_DxConvex$CollideConvexConvex_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideConvexConvex($o1, $o2, $flags, $contacts, 1);
}
function oktpo_GeomContactPair() {
    var a = this; jl_Object.call(a);
    a.$a0 = null;
    a.$b1 = null;
    a.$depth2 = 0.0;
    a.$lifeTime0 = 0.0;
}
function oktpo_GeomContactPair__init_() {
    var var_0 = new oktpo_GeomContactPair();
    oktpo_GeomContactPair__init_0(var_0);
    return var_0;
}
function oktpo_GeomContactPair_getA($this) {
    var var$1;
    var$1 = $this.$a0;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1102));
    return var$1;
}
function oktpo_GeomContactPair_setA($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$a0 = $_set___;
}
function oktpo_GeomContactPair_getB($this) {
    var var$1;
    var$1 = $this.$b1;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1103));
    return var$1;
}
function oktpo_GeomContactPair_setB($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$b1 = $_set___;
}
function oktpo_GeomContactPair_getDepth($this) {
    return $this.$depth2;
}
function oktpo_GeomContactPair_setDepth($this, $_set___) {
    $this.$depth2 = $_set___;
}
function oktpo_GeomContactPair_getLifeTime($this) {
    return $this.$lifeTime0;
}
function oktpo_GeomContactPair_setLifeTime($this, $_set___) {
    $this.$lifeTime0 = $_set___;
}
function oktpo_GeomContactPair_equals($this, $other) {
    var var$2, var$3, var$4, var$5;
    if ($other === null)
        $rt_throw(k_TypeCastException__init_($rt_s(1295)));
    var$2 = $other;
    var$3 = var$2.$a0;
    if (var$3 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1102));
    var$4 = $this.$a0;
    if (var$4 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1102));
    a: {
        if (kji_Intrinsics_areEqual(var$3, var$4)) {
            var$2 = var$2.$b1;
            if (var$2 === null)
                kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1103));
            var$3 = $this.$b1;
            if (var$3 === null)
                kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1103));
            if (kji_Intrinsics_areEqual(var$2, var$3)) {
                var$5 = 1;
                break a;
            }
        }
        var$5 = 0;
    }
    return var$5;
}
function oktpo_GeomContactPair_hashCode($this) {
    var var$1, var$2;
    var$1 = $this.$a0;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1102));
    var$2 = var$1.$hashCode() * 31 | 0;
    var$1 = $this.$b1;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(1103));
    return var$2 + var$1.$hashCode() | 0;
}
function oktpo_GeomContactPair__init_0($this) {
    jl_Object__init_0($this);
}
function oktd_IIntData() {
}
function oktt_TvmInt32Array() {
    var a = this; oktt_TvmArrayBufferView.call(a);
    a.$size6 = 0;
    a.$intArray = null;
}
function oktt_TvmInt32Array__init_0(var_0) {
    var var_1 = new oktt_TvmInt32Array();
    oktt_TvmInt32Array__init_(var_1, var_0);
    return var_1;
}
function oktt_TvmInt32Array_getSize($this) {
    return $this.$size6;
}
function oktt_TvmInt32Array_get($this, $index) {
    return jl_Integer_valueOf($this.$intArray[$index]);
}
function oktt_TvmInt32Array_get0(var$0, var$1) {
    return oktt_TvmInt32Array_get(var$0, var$1);
}
function oktt_TvmInt32Array__init_($this, $intArray) {
    kji_Intrinsics_checkParameterIsNotNull($intArray, $rt_s(1296));
    oktt_TvmArrayBufferView__init_0($this);
    $this.$intArray = $intArray;
    $this.$size6 = $this.$intArray.length;
}
function oktt_TvmInt32Array_toInt($this, $index) {
    return oktd_IIntData$DefaultImpls_toInt($this, $index);
}
function ju_HashMap$1() {
    ju_AbstractSet.call(this);
    this.$this$0194 = null;
}
function ju_HashMap$1__init_(var_0) {
    var var_1 = new ju_HashMap$1();
    ju_HashMap$1__init_0(var_1, var_0);
    return var_1;
}
function ju_HashMap$1__init_0($this, $this$0) {
    $this.$this$0194 = $this$0;
    ju_AbstractSet__init_0($this);
}
function ju_HashMap$1_iterator($this) {
    return ju_HashMap$KeyIterator__init_($this.$this$0194);
}
function kji_ArrayIteratorKt() {
    jl_Object.call(this);
}
function kji_ArrayIteratorKt_iterator($array) {
    kji_Intrinsics_checkParameterIsNotNull($array, $rt_s(32));
    return kji_ArrayIterator__init_($array);
}
function ju_HashMap$2() {
    ju_AbstractCollection.call(this);
    this.$this$0195 = null;
}
function ju_HashMap$2__init_(var_0) {
    var var_1 = new ju_HashMap$2();
    ju_HashMap$2__init_0(var_1, var_0);
    return var_1;
}
function ju_HashMap$2__init_0($this, $this$0) {
    $this.$this$0195 = $this$0;
    ju_AbstractCollection__init_0($this);
}
function ju_HashMap$2_contains($this, $object) {
    return $this.$this$0195.$containsValue($object);
}
function ju_HashMap$2_size($this) {
    return $this.$this$0195.$size();
}
function ju_HashMap$2_iterator($this) {
    return ju_HashMap$ValueIterator__init_($this.$this$0195);
}
function oooig_GimRadixSort$GimRSortTokenComparator() {
}
function oktgc_OrbitCameraControl() {
    var a = this; jl_Object.call(a);
    a.$currentTargetDistance = 0.0;
    a.$startX = 0.0;
    a.$startY = 0.0;
    a.$desiredPosNormalized = null;
    a.$camPos = null;
    a.$pressedButton = 0;
    a.$right = null;
    a.$up1 = null;
    a.$zenith = 0.0;
    a.$azimuth = 0.0;
    a.$maxZenith = 0.0;
    a.$minZenith = 0.0;
    a.$targetDistance = 0.0;
    a.$scrollFactor = 0.0;
    a.$angularSpeed = 0.0;
    a.$translationSpeed = 0.0;
    a.$scrollTransition = 0.0;
    a.$translationTransition = 0.0;
    a.$camera1 = null;
    a.$isEnabled0 = 0;
    a.$target0 = null;
}
function oktgc_OrbitCameraControl__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12) {
    var var_13 = new oktgc_OrbitCameraControl();
    oktgc_OrbitCameraControl__init_2(var_13, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12);
    return var_13;
}
function oktgc_OrbitCameraControl__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14) {
    var var_15 = new oktgc_OrbitCameraControl();
    oktgc_OrbitCameraControl__init_(var_15, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14);
    return var_15;
}
function oktgc_OrbitCameraControl__init_3() {
    var var_0 = new oktgc_OrbitCameraControl();
    oktgc_OrbitCameraControl__init_4(var_0);
    return var_0;
}
function oktgc_OrbitCameraControl_getHelp($this) {
    return $rt_s(1297);
}
function oktgc_OrbitCameraControl_listenToMouse($this) {
    var $listener, var$2, var$3;
    $listener = oktgc_OrbitCameraControl$listenToMouse$listener$1__init_($this);
    okti_MOUSE_$callClinit();
    var$2 = okti_MOUSE_INSTANCE;
    var$3 = $listener;
    okti_MOUSE_addListener(var$2, var$3);
    return var$3;
}
function oktgc_OrbitCameraControl_update($this, $delta) {
    var $delta2;
    if ($this.$isEnabled0) {
        $delta2 = 60.0 * $delta;
        $this.$currentTargetDistance = $this.$currentTargetDistance + ($this.$targetDistance - $this.$currentTargetDistance) * $this.$scrollTransition;
        $this.$camPos.$set11($this.$desiredPosNormalized).$scl($this.$currentTargetDistance).$add8($this.$target0);
        $this.$camera1.$getPosition0().$lerp($this.$camPos, jl_Math_min1($this.$translationTransition * $delta2, 1.0));
        oktgc_ICamera$DefaultImpls_lookAt$default($this.$camera1, $this.$camera1.$getPosition0(), $this.$target0, null, 4, null);
        $this.$camera1.$getViewMatrix().$getRow30(0, $this.$right);
        $this.$camera1.$getViewMatrix().$getRow30(1, $this.$up1);
    }
}
function oktgc_OrbitCameraControl_buttonDown($this, $x, $y, $button) {
    if ($this.$isEnabled0) {
        $this.$pressedButton = $button;
        if ($button == 2) {
            $this.$startX = $x;
            $this.$startY = $y;
        }
    }
}
function oktgc_OrbitCameraControl_dragged($this, $x, $y) {
    var var$3, $deltaX, $deltaY, $dAzimuth, $dZenith;
    if ($this.$isEnabled0 && $this.$pressedButton == 2) {
        okti_KB_$callClinit();
        if (okti_KB_getShift(okti_KB_INSTANCE)) {
            var$3 =  -$this.$translationSpeed * $this.$currentTargetDistance * ($x - $this.$startX);
            okt_APP_$callClinit();
            $deltaX = var$3 / okt_APP_getWidth(okt_APP_INSTANCE);
            $deltaY = $this.$translationSpeed * $this.$currentTargetDistance * ($y - $this.$startY) / okt_APP_getWidth(okt_APP_INSTANCE);
            $this.$target0.$add17($this.$up1.$getX0() * $deltaY, $this.$up1.$getY0() * $deltaY, $this.$up1.$getZ() * $deltaY);
            $this.$target0.$add17($this.$right.$getX0() * $deltaX, $this.$right.$getY0() * $deltaX, $this.$right.$getZ() * $deltaX);
        } else {
            var$3 = $this.$angularSpeed * ($x - $this.$startX);
            okt_APP_$callClinit();
            $dAzimuth = var$3 / okt_APP_getWidth(okt_APP_INSTANCE);
            $dZenith =  -$this.$angularSpeed * ($y - $this.$startY) / okt_APP_getHeight(okt_APP_INSTANCE);
            $this.$azimuth = $this.$azimuth + $dAzimuth;
            $this.$zenith = $this.$zenith + $dZenith;
            if ($this.$zenith < $this.$minZenith)
                $this.$zenith = $this.$minZenith;
            if ($this.$zenith > $this.$maxZenith)
                $this.$zenith = $this.$maxZenith;
            $this.$desiredPosNormalized.$setX0(jl_Math_sin($this.$zenith) * jl_Math_cos($this.$azimuth));
            $this.$desiredPosNormalized.$setY0(jl_Math_cos($this.$zenith));
            $this.$desiredPosNormalized.$setZ(jl_Math_sin($this.$zenith) * jl_Math_sin($this.$azimuth));
        }
        $this.$startX = $x;
        $this.$startY = $y;
    }
}
function oktgc_OrbitCameraControl_scrolled($this, $x, $y, $amount) {
    if ($this.$isEnabled0)
        $this.$targetDistance = $this.$targetDistance * (1.0 + $amount * $this.$scrollFactor);
}
function oktgc_OrbitCameraControl__init_2($this, $zenith, $azimuth, $maxZenith, $minZenith, $targetDistance, $scrollFactor, $angularSpeed, $translationSpeed, $scrollTransition, $translationTransition, $camera, $isEnabled, $target) {
    kji_Intrinsics_checkParameterIsNotNull($camera, $rt_s(42));
    kji_Intrinsics_checkParameterIsNotNull($target, $rt_s(1101));
    jl_Object__init_0($this);
    $this.$zenith = $zenith;
    $this.$azimuth = $azimuth;
    $this.$maxZenith = $maxZenith;
    $this.$minZenith = $minZenith;
    $this.$targetDistance = $targetDistance;
    $this.$scrollFactor = $scrollFactor;
    $this.$angularSpeed = $angularSpeed;
    $this.$translationSpeed = $translationSpeed;
    $this.$scrollTransition = $scrollTransition;
    $this.$translationTransition = $translationTransition;
    $this.$camera1 = $camera;
    $this.$isEnabled0 = $isEnabled;
    $this.$target0 = $target;
    $this.$currentTargetDistance = 5.0;
    $this.$desiredPosNormalized = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    $this.$camPos = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    $this.$right = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    $this.$up1 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    $this.$desiredPosNormalized.$setX0(jl_Math_sin($this.$zenith) * jl_Math_cos($this.$azimuth));
    $this.$desiredPosNormalized.$setY0(jl_Math_cos($this.$zenith));
    $this.$desiredPosNormalized.$setZ(jl_Math_sin($this.$zenith) * jl_Math_sin($this.$azimuth));
}
function oktgc_OrbitCameraControl__init_(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15) {
    if (var$14 & 1)
        var$1 = 1.0;
    if (var$14 & 2)
        var$2 = 0.0;
    if (var$14 & 4)
        var$3 = 3.1410000324249268;
    if (var$14 & 8)
        var$4 = 0.0010000000474974513;
    if (var$14 & 16)
        var$5 = 5.0;
    if (var$14 & 32)
        var$6 = 0.10000000149011612;
    if (var$14 & 64)
        var$7 = 8.0;
    if (var$14 & 128)
        var$8 = 2.0;
    if (var$14 & 256)
        var$9 = 0.30000001192092896;
    if (var$14 & 512)
        var$10 = 1.0;
    if (var$14 & 1024) {
        oktgc_ActiveCamera_$callClinit();
        var$11 = oktgc_ActiveCamera_INSTANCE;
    }
    if (var$14 & 2048)
        var$12 = 1;
    if (var$14 & 4096)
        var$13 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktgc_OrbitCameraControl__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13);
}
function oktgc_OrbitCameraControl__init_4(var$0) {
    oktgc_OrbitCameraControl__init_(var$0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, null, 0, null, 8191, null);
}
function otjde_MouseEventTarget() {
}
function otjb_WindowEventTarget() {
}
function oooi_CollisionLibccd$5() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$5__init_() {
    var var_0 = new oooi_CollisionLibccd$5();
    oooi_CollisionLibccd$5__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$5__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$5_run($this, $obj, $_dir, $v) {
    var $c, $dir, $p, $maxdot, $curp, $curpI, $i, var$11, $dot;
    $c = $obj;
    $dir = oooil_CCDVec3$ccd_vec3_t__init_();
    $p = oooil_CCDVec3$ccd_vec3_t__init_();
    oooil_CCDVec3_ccdVec3Copy($dir, $_dir);
    oooil_CCDQuat_ccdQuatRotVec($dir, $c.$rot_inv);
    $maxdot = (-1.7976931348623157E308);
    $curp = $c.$convex.$getPoints0();
    $curpI = 0;
    $i = 0;
    while ($i < $c.$convex.$getPointcount()) {
        var$11 = $curp.data;
        oooil_CCDVec3_ccdVec3Set0($p, var$11[$curpI + 0 | 0], var$11[$curpI + 1 | 0], var$11[$curpI + 2 | 0]);
        $dot = oooil_CCDVec3_ccdVec3Dot($dir, $p);
        if ($dot > $maxdot) {
            oooil_CCDVec3_ccdVec3Copy($v, $p);
            $maxdot = $dot;
        }
        $i = $i + 1 | 0;
        $curpI = $curpI + 3 | 0;
    }
    oooil_CCDQuat_ccdQuatRotVec($v, $c.$rot);
    oooil_CCDVec3_ccdVec3Add($v, $c.$pos1);
}
function oooi_CollisionLibccd$4() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$4__init_() {
    var var_0 = new oooi_CollisionLibccd$4();
    oooi_CollisionLibccd$4__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$4__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$4_run($this, $obj, $_dir, $v) {
    var $s;
    $s = $obj;
    oooil_CCDVec3_ccdVec3Copy($v, $_dir);
    oooil_CCDVec3_ccdVec3Scale($v, $s.$radius1);
    oooil_CCDVec3_ccdVec3Add($v, $s.$pos1);
}
function oooi_CollisionLibccd$7() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$7__init_() {
    var var_0 = new oooi_CollisionLibccd$7();
    oooi_CollisionLibccd$7__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$7__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$7_run($this, $obj, $_dir, $v) {
    var $o, $maxdot, $i, $dot;
    $o = $obj;
    $maxdot = (-1.7976931348623157E308);
    $i = 0;
    while ($i < 3) {
        $dot = oooil_CCDVec3_ccdVec3Dot($_dir, $o.$vertices.data[$i]);
        if ($dot > $maxdot) {
            oooil_CCDVec3_ccdVec3Copy($v, $o.$vertices.data[$i]);
            $maxdot = $dot;
        }
        $i = $i + 1 | 0;
    }
}
function oooil_CCD$ccd_center_fn() {
}
function oooi_CollisionLibccd$6() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$6__init_() {
    var var_0 = new oooi_CollisionLibccd$6();
    oooi_CollisionLibccd$6__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$6__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$6_run($this, $obj1, $c) {
    var $o;
    $o = $obj1;
    oooil_CCDVec3_ccdVec3Copy($c, $o.$pos1);
}
function oktd_IIntData$DefaultImpls() {
    jl_Object.call(this);
}
function oktd_IIntData$DefaultImpls_toInt($$this, $index) {
    return $$this.$get1($index).$intValue();
}
function jl_NegativeArraySizeException() {
    jl_RuntimeException.call(this);
}
function jl_NegativeArraySizeException__init_() {
    var var_0 = new jl_NegativeArraySizeException();
    jl_NegativeArraySizeException__init_0(var_0);
    return var_0;
}
function jl_NegativeArraySizeException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function oktsp_Bloom() {
    var a = this; jl_Object.call(a);
    a.$downBuffers = null;
    a.$upBuffers = null;
    a.$texelSizes = null;
    a.$blurDown = null;
    a.$blurUp = null;
    a.$intensity = 0.0;
}
var oktsp_Bloom_Companion = null;
function oktsp_Bloom_$callClinit() {
    oktsp_Bloom_$callClinit = $rt_eraseClinit(oktsp_Bloom);
    oktsp_Bloom__clinit_();
}
function oktsp_Bloom__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new oktsp_Bloom();
    oktsp_Bloom__init_1(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function oktsp_Bloom__init_2(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) {
    var var_10 = new oktsp_Bloom();
    oktsp_Bloom__init_(var_10, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9);
    return var_10;
}
function oktsp_Bloom_getBlurDown($this) {
    return $this.$blurDown;
}
function oktsp_Bloom_getBlurUp($this) {
    return $this.$blurUp;
}
function oktsp_Bloom_render($this, $screenQuad, $sceneMap, $brightnessMap, $out) {
    var $downBuffers, var$6, $upBuffers, $texelSizes, $prevMap, $i, var$11, $buffer, $i_0;
    kji_Intrinsics_checkParameterIsNotNull($screenQuad, $rt_s(523));
    kji_Intrinsics_checkParameterIsNotNull($sceneMap, $rt_s(1298));
    kji_Intrinsics_checkParameterIsNotNull($brightnessMap, $rt_s(1299));
    $downBuffers = $this.$downBuffers;
    var$6 = $downBuffers.data;
    $upBuffers = $this.$upBuffers;
    $texelSizes = $this.$texelSizes;
    $this.$blurDown.$bind();
    $this.$blurDown.$set1($rt_s(35), 1.0);
    $prevMap = kji_Ref$ObjectRef__init_();
    $prevMap.$element0 = $brightnessMap;
    $i = 0;
    var$11 = var$6.length;
    while ($i < var$11) {
        $buffer = var$6[$i];
        oktm_IScreenQuad$DefaultImpls_render$default($screenQuad, $this.$blurDown, $buffer, null, oktsp_Bloom$render$1__init_($this, $texelSizes, $i, $prevMap), 4, null);
        $prevMap.$element0 = oktt_SimpleFrameBuffer_getTexture($buffer, 0);
        $i = $i + 1 | 0;
    }
    $this.$blurUp.$bind();
    $this.$blurUp.$set1($rt_s(35), 0.5);
    $i_0 = kji_Ref$IntRef__init_();
    $i_0.$element = var$11 - 1 | 0;
    while ($i_0.$element > 0) {
        var$6 = $upBuffers.data;
        $screenQuad.$render10($this.$blurUp, var$6[$i_0.$element - 1 | 0], null, oktsp_Bloom$render$2__init_($this, $texelSizes, $i_0, $downBuffers, $upBuffers));
        $i_0.$element = $i_0.$element + (-1) | 0;
    }
    oktm_IScreenQuad$DefaultImpls_render$default($screenQuad, $this.$blurUp, $out, null, oktsp_Bloom$render$3__init_($this, $out, $upBuffers, $sceneMap), 4, null);
}
function oktsp_Bloom__init_1($this, $width, $height, $iterations, $iterationsStep, $intensity, $pixelFormat, $internalFormat, $pixelChannelType) {
    var var$9, var$10, var$11, var$12, $div, var$14, var$15, var$16, var$17, var$18, var$19, var$20;
    oktsp_Bloom_$callClinit();
    jl_Object__init_0($this);
    var$9 = $rt_createArray(oktt_SimpleFrameBuffer, $iterations);
    var$10 = 0;
    while (var$10 < $iterations) {
        var$11 = var$9.data;
        var$12 = var$10 + 1 | 0;
        $div = $rt_imul(jl_Math_pow(2.0, var$12) | 0, $iterationsStep);
        var$14 = new oktt_SimpleFrameBuffer;
        var$15 = $width / $div | 0;
        var$16 = $height / $div | 0;
        var$17 = null;
        oktt_SimpleFrameBuffer__init_(var$14, var$15, var$16, $pixelFormat, $internalFormat, $pixelChannelType, 0, 0, 64, var$17);
        var$11[var$10] = var$14;
        var$10 = var$12;
    }
    $this.$downBuffers = var$9;
    var$9 = $rt_createArray(oktt_SimpleFrameBuffer, $iterations);
    var$18 = 0;
    while (var$18 < $iterations) {
        var$11 = var$9.data;
        var$15 = var$18 + 1 | 0;
        $div = $rt_imul(jl_Math_pow(2.0, var$15) | 0, $iterationsStep);
        var$14 = new oktt_SimpleFrameBuffer;
        var$16 = $width / $div | 0;
        var$19 = $height / $div | 0;
        var$17 = null;
        oktt_SimpleFrameBuffer__init_(var$14, var$16, var$19, $pixelFormat, $internalFormat, $pixelChannelType, 0, 0, 64, var$17);
        var$11[var$18] = var$14;
        var$18 = var$15;
    }
    $this.$upBuffers = var$9;
    var$20 = $rt_createArray(oktm_IVec2, $iterations);
    var$16 = 0;
    while (var$16 < $iterations) {
        var$20.data[var$16] = oktm_Vec2__init_(1.0 / oktt_SimpleFrameBuffer_getWidth($this.$downBuffers.data[var$16]), 1.0 / oktt_SimpleFrameBuffer_getHeight($this.$downBuffers.data[var$16]));
        var$16 = var$16 + 1 | 0;
    }
    $this.$texelSizes = var$20;
    $this.$blurDown = oktsp_PostShader__init_1($rt_s(1179), null, 0, null, null, 0, 62, null);
    $this.$blurUp = oktsp_PostShader__init_1($rt_s(1181), null, 0, null, null, 0, 62, null);
    $this.$intensity = $intensity;
    $this.$blurDown.$bind();
    $this.$blurDown.$set35($rt_s(1180), 0);
    $this.$blurUp.$bind();
    $this.$blurUp.$set35($rt_s(1180), 0);
    $this.$blurUp.$set35($rt_s(1182), 1);
    $this.$blurUp.$set1($rt_s(1183), $intensity);
}
function oktsp_Bloom__init_(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10) {
    oktsp_Bloom_$callClinit();
    if (var$9 & 4)
        var$3 = 6;
    if (var$9 & 8)
        var$4 = 1;
    if (var$9 & 16)
        var$5 = 1.0;
    if (var$9 & 32)
        var$6 = 6408;
    if (var$9 & 64)
        var$7 = 6408;
    if (var$9 & 128)
        var$8 = 5121;
    oktsp_Bloom__init_1(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8);
}
function oktsp_Bloom__clinit_() {
    oktsp_Bloom_Companion = oktsp_Bloom$Companion__init_1(null);
}
function oktgg_IGLTFMaterial() {
}
function oooip_DxStepWorkingMemory() {
    var a = this; jl_Object.call(a);
    a.$m_ppcProcessingContext = null;
    a.$m_priReserveInfo = null;
    a.$m_pmmMemoryManager = null;
}
function oooip_DxStepWorkingMemory__init_() {
    var var_0 = new oooip_DxStepWorkingMemory();
    oooip_DxStepWorkingMemory__init_0(var_0);
    return var_0;
}
function oooip_DxStepWorkingMemory__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_ppcProcessingContext = null;
    $this.$m_priReserveInfo = null;
    $this.$m_pmmMemoryManager = null;
}
function oooip_DxStepWorkingMemory_SureGetWorldProcessingContext($this) {
    if ($this.$m_ppcProcessingContext === null)
        $this.$m_ppcProcessingContext = oooip_DxWorldProcessContext__init_();
    return $this.$m_ppcProcessingContext;
}
function oooip_DxStepWorkingMemory_GetWorldProcessingContext($this) {
    return $this.$m_ppcProcessingContext;
}
function oooip_DxStepWorkingMemory_SureGetMemoryReserveInfo($this) {
    var var$1;
    if ($this.$m_priReserveInfo !== null)
        var$1 = $this.$m_priReserveInfo;
    else {
        oooip_DxUtil_$callClinit();
        var$1 = oooip_DxUtil_g_WorldProcessDefaultReserveInfo;
    }
    return var$1;
}
function oooip_DxStepWorkingMemory_SureGetMemoryManager($this) {
    var var$1;
    if ($this.$m_pmmMemoryManager !== null)
        var$1 = $this.$m_pmmMemoryManager;
    else {
        oooip_DxUtil_$callClinit();
        var$1 = oooip_DxUtil_g_WorldProcessMallocMemoryManager;
    }
    return var$1;
}
function oktpo_OdePhysicsWorld$nearCallback$1() {
    jl_Object.call(this);
    this.$this$0196 = null;
}
function oktpo_OdePhysicsWorld$nearCallback$1__init_(var_0) {
    var var_1 = new oktpo_OdePhysicsWorld$nearCallback$1();
    oktpo_OdePhysicsWorld$nearCallback$1__init_0(var_1, var_0);
    return var_1;
}
function oktpo_OdePhysicsWorld$nearCallback$1_call($this, $$noName_0, $o1, $o2) {
    var var$4, $g1, $g2, $b1, $b2, $contacts, $bm1, $bm2, $i, var$13, $contact, $numContacts, $c, $influence1, $influence2, $geomPair, $geomAlivePair, $pair, $alivePair;
    kji_Intrinsics_checkExpressionValueIsNotNull($o1, $rt_s(1300));
    var$4 = $o1.$getData();
    if (var$4 === null)
        $rt_throw(k_TypeCastException__init_($rt_s(1301)));
    $g1 = var$4;
    kji_Intrinsics_checkExpressionValueIsNotNull($o2, $rt_s(1302));
    var$4 = $o2.$getData();
    if (var$4 === null)
        $rt_throw(k_TypeCastException__init_($rt_s(1301)));
    $g2 = var$4;
    $b1 = $o1.$getBody();
    $b2 = $o2.$getBody();
    $contacts = ooo_DContactBuffer__init_(oktpo_OdePhysicsWorld_getMaxContacts($this.$this$0196));
    if ($b1 !== null && $b2 !== null && ooo_OdeHelper_areConnectedExcluding($b1, $b2, $rt_cls(ooo_DContactJoint)))
        return;
    $bm1 = $b1 === null ? null : $b1.$getData();
    $bm2 = $b2 === null ? null : $b2.$getData();
    $i = 0;
    var$13 = oktpo_OdePhysicsWorld_getMaxContacts($this.$this$0196);
    while ($i < var$13) {
        $contact = $contacts.$get18($i);
        $contact.$surface.$mu = jl_Math_max1($bm1 === null ? $g1.$getFriction() : oktpo_OdeRigidBody_getFriction($bm1), $bm2 === null ? $g2.$getFriction() : oktpo_OdeRigidBody_getFriction($bm2));
        $contact.$surface.$mode2 = 20;
        $contact.$surface.$mu2 = 0.0;
        $contact.$surface.$bounce = 0.1;
        $contact.$surface.$bounce_vel = 0.1;
        $contact.$surface.$soft_cfm = 0.01;
        $i = $i + 1 | 0;
    }
    a: {
        $numContacts = ooo_OdeHelper_collide($o1, $o2, oktpo_OdePhysicsWorld_getMaxContacts($this.$this$0196), $contacts.$getGeomBuffer());
        if ($numContacts) {
            $i = 0;
            while (true) {
                if ($i >= $numContacts)
                    break a;
                $contact = $contacts.$get18($i);
                var$4 = ooo_OdeHelper_createContactJoint(oktpo_OdePhysicsWorld_getWorld($this.$this$0196), oktpo_OdePhysicsWorld_getContactGroup($this.$this$0196), $contact);
                kji_Intrinsics_checkExpressionValueIsNotNull(var$4, $rt_s(1303));
                $c = var$4;
                $influence1 = $bm1 === null ? $g1.$getInfluenceOtherBodies() : oktpo_OdeRigidBody_getInfluenceOtherBodies($bm1);
                $influence2 = $bm2 === null ? $g2.$getInfluenceOtherBodies() : oktpo_OdeRigidBody_getInfluenceOtherBodies($bm2);
                if (!(!$influence1 && !$influence2)) {
                    if ($influence1 && !$influence2)
                        $c.$attach(null, $b2);
                    else if (!$influence1 && $influence2)
                        $c.$attach($b1, null);
                    else
                        $c.$attach($b1, $b2);
                }
                $geomPair = oktu_Pool_get(oktpo_OdePhysicsWorld$Companion_getGeomPairsPool(oktpo_OdePhysicsWorld_Companion));
                oktpo_GeomContactPair_setA($geomPair, $g1);
                oktpo_GeomContactPair_setB($geomPair, $g2);
                kji_Intrinsics_checkExpressionValueIsNotNull($contact, $rt_s(1304));
                oktpo_GeomContactPair_setDepth($geomPair, $contact.$getContactGeom().$depth);
                oktpo_GeomContactPair_setLifeTime($geomPair, oktpo_OdePhysicsWorld_getContactMaxLifeTime($this.$this$0196));
                $geomAlivePair = oktpo_OdePhysicsWorld_getGeomAliveContacts($this.$this$0196).$get0($geomPair);
                if ($geomAlivePair === null)
                    oktpo_OdePhysicsWorld_getGeomNewContacts($this.$this$0196).$add1($geomPair);
                else {
                    oktpo_GeomContactPair_setLifeTime($geomAlivePair, oktpo_OdePhysicsWorld_getContactMaxLifeTime($this.$this$0196));
                    oktpo_GeomContactPair_setDepth($geomAlivePair, oktpo_GeomContactPair_getDepth($geomPair));
                }
                if ($bm1 !== null && $bm2 !== null) {
                    $pair = oktu_Pool_get(oktpo_OdePhysicsWorld$Companion_getBodyPairsPool(oktpo_OdePhysicsWorld_Companion));
                    oktpo_BodyContactPair_setA($pair, $bm1);
                    oktpo_BodyContactPair_setB($pair, $bm2);
                    oktpo_BodyContactPair_setDepth($pair, $contact.$getContactGeom().$depth);
                    oktpo_BodyContactPair_setLifeTime($pair, oktpo_OdePhysicsWorld_getContactMaxLifeTime($this.$this$0196));
                    $alivePair = oktpo_OdePhysicsWorld_getAliveContacts($this.$this$0196).$get0($pair);
                    if ($alivePair === null)
                        oktpo_OdePhysicsWorld_getNewContacts($this.$this$0196).$add1($pair);
                    else {
                        oktpo_BodyContactPair_setLifeTime($alivePair, oktpo_OdePhysicsWorld_getContactMaxLifeTime($this.$this$0196));
                        oktpo_BodyContactPair_setDepth($alivePair, oktpo_BodyContactPair_getDepth($pair));
                    }
                }
                $i = $i + 1 | 0;
            }
        }
    }
}
function oktpo_OdePhysicsWorld$nearCallback$1__init_0(var$0, var$1) {
    var$0.$this$0196 = var$1;
    jl_Object__init_0(var$0);
}
function oooi_DxHeightfield$CollideHeightfield() {
    jl_Object.call(this);
}
function oooi_DxHeightfield$CollideHeightfield__init_() {
    var var_0 = new oooi_DxHeightfield$CollideHeightfield();
    oooi_DxHeightfield$CollideHeightfield__init_0(var_0);
    return var_0;
}
function oooi_DxHeightfield$CollideHeightfield__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxHeightfield$CollideHeightfield_dCollideHeightfield($this, $o1, $o2, $flags, $contacts, $skip) {
    var var$6, $posbak, $Rbak, $aabbbak, $gflagsbak, $pos0, $pos1, $R1, $i, $reComputeAABB, $wrapped, $dCollideHeightfieldExit, var$18, $fInvSampleWidth, $nMinX, $nMaxX, $fInvSampleDepth, $nMinZ, $nMaxZ, var$25, var$26, $pContact, $i_0;
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    var$6 = $flags & 65535;
    oooi_Common_dIASSERT(var$6 < 1 ? 0 : 1);
    $posbak = oom_DVector3__init_();
    $Rbak = oom_DMatrix3__init_1();
    $aabbbak = ooo_DAABB__init_();
    $gflagsbak = 0;
    $pos0 = oom_DVector3__init_();
    $pos1 = oom_DVector3__init_();
    $R1 = oom_DMatrix3__init_1();
    $i = 0;
    $reComputeAABB = 1;
    if ($reComputeAABB) {
        oom_DVector3_set($posbak, $o2.$final_posr().$pos());
        oom_DMatrix3_set($Rbak, $o2.$final_posr().$R());
        $aabbbak.$set41($o2.$_aabb);
        $gflagsbak = oooi_DxGeom_getFlags($o2);
    }
    if (oooi_DxGeom_hasFlagPlaceable($o1)) {
        oom_DVector3_eqDiff($pos0, $o2.$final_posr().$pos(), $o1.$final_posr().$pos());
        ooo_OdeMath_dMultiply1_331($pos1, $o1.$final_posr().$R(), $pos0);
        ooo_OdeMath_dMultiply1_333($R1, $o1.$final_posr().$R(), $o2.$final_posr().$R());
        oom_DVector3_set($o2.$_final_posr.$pos2, $pos1);
        oom_DMatrix3_set($o2.$_final_posr.$Rw(), $R1);
    }
    oom_DVector3_add0($o2.$_final_posr.$pos2, 0, $o1.$m_p_data.$m_fHalfWidth);
    oom_DVector3_add0($o2.$_final_posr.$pos2, 2, $o1.$m_p_data.$m_fHalfDepth);
    if ($reComputeAABB)
        $o2.$computeAABB();
    $wrapped = !$o1.$m_p_data.$m_bWrapMode ? 0 : 1;
    a: {
        $dCollideHeightfieldExit = 0;
        if (!$wrapped) {
            b: {
                if ($o2.$_aabb.$getMin0() <= $o1.$m_p_data.$m_fWidth) {
                    var$18 = $o2.$_aabb;
                    if (var$18.$getMin2() <= $o1.$m_p_data.$m_fDepth)
                        break b;
                }
                $dCollideHeightfieldExit = 1;
            }
            if ($o2.$_aabb.$getMax0() >= 0.0) {
                var$18 = $o2.$_aabb;
                if (var$18.$getMax2() >= 0.0)
                    break a;
            }
            $dCollideHeightfieldExit = 1;
        }
    }
    if (!$dCollideHeightfieldExit) {
        $fInvSampleWidth = $o1.$m_p_data.$m_fInvSampleWidth;
        $nMinX = oooi_Common_dFloor(oooi_Common_dNextAfter($o2.$_aabb.$getMin0() * $fInvSampleWidth, (-Infinity))) | 0;
        $nMaxX = oooi_Common_dCeil(oooi_Common_dNextAfter($o2.$_aabb.$getMax0() * $fInvSampleWidth, Infinity)) | 0;
        $fInvSampleDepth = $o1.$m_p_data.$m_fInvSampleDepth;
        $nMinZ = oooi_Common_dFloor(oooi_Common_dNextAfter($o2.$_aabb.$getMin2() * $fInvSampleDepth, (-Infinity))) | 0;
        $nMaxZ = oooi_Common_dCeil(oooi_Common_dNextAfter($o2.$_aabb.$getMax2() * $fInvSampleDepth, Infinity)) | 0;
        if (!$wrapped) {
            $nMinX = oooi_DxHeightfield_access$200($nMinX, 0.0) | 0;
            $nMaxX = oooi_DxHeightfield_access$300($nMaxX, $o1.$m_p_data.$m_nWidthSamples - 1 | 0) | 0;
            $nMinZ = oooi_DxHeightfield_access$200($nMinZ, 0.0) | 0;
            $nMaxZ = oooi_DxHeightfield_access$300($nMaxZ, $o1.$m_p_data.$m_nDepthSamples - 1 | 0) | 0;
            oooi_Common_dIASSERT($nMinX < $nMaxX && $nMinZ < $nMaxZ ? 1 : 0);
        }
        var$25 = var$6 - $i | 0;
        var$26 = $rt_imul($i, $skip);
        var$18 = ooo_DContactGeomBuffer_createView($contacts, var$26);
        var$25 = $i + $o1.$dCollideHeightfieldZone($nMinX, $nMaxX, $nMinZ, $nMaxZ, $o2, var$25, $flags, var$18, $skip) | 0;
        oooi_Common_dIASSERT(var$25 > var$6 ? 0 : 1);
        while ($i != var$25) {
            $pContact = ooo_DContactGeomBuffer_get($contacts, $rt_imul($i, $skip));
            $pContact.$g1 = $o1;
            $pContact.$g2 = $o2;
            $i = $i + 1 | 0;
        }
        $i = var$25;
    }
    c: {
        if ($reComputeAABB) {
            oom_DVector3_set($o2.$_final_posr.$pos2, $posbak);
            oom_DMatrix3_set($o2.$_final_posr.$Rw(), $Rbak);
            $o2.$_aabb.$set41($aabbbak);
            oooi_DxGeom_setFlags($o2, $gflagsbak);
            if ($o2 instanceof oooi_DxGimpact)
                $o2.$computeAABB();
            if (!oooi_DxGeom_hasFlagPlaceable($o1)) {
                $i_0 = 0;
                while (true) {
                    if ($i_0 >= $i)
                        break c;
                    $pContact = ooo_DContactGeomBuffer_get($contacts, $rt_imul($i_0, $skip));
                    oom_DVector3_add0($pContact.$pos0, 0,  -$o1.$m_p_data.$m_fHalfWidth);
                    oom_DVector3_add0($pContact.$pos0, 2,  -$o1.$m_p_data.$m_fHalfDepth);
                    $i_0 = $i_0 + 1 | 0;
                }
            }
            $i_0 = 0;
            while (true) {
                if ($i_0 >= $i)
                    break c;
                $pContact = ooo_DContactGeomBuffer_get($contacts, $rt_imul($i_0, $skip));
                oom_DVector3_set($pos0, $pContact.$pos0);
                oom_DVector3_add0($pos0, 0,  -$o1.$m_p_data.$m_fHalfWidth);
                oom_DVector3_add0($pos0, 2,  -$o1.$m_p_data.$m_fHalfDepth);
                ooo_OdeMath_dMultiply0_331($pContact.$pos0, $o1.$final_posr().$R(), $pos0);
                oom_DVector3_add($pContact.$pos0, $o1.$final_posr().$pos());
                oom_DVector3_set($pos0, $pContact.$normal);
                ooo_OdeMath_dMultiply0_331($pContact.$normal, $o1.$final_posr().$R(), $pos0);
                $i_0 = $i_0 + 1 | 0;
            }
        }
    }
    return $i;
}
function oooi_DxHeightfield$CollideHeightfield_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideHeightfield($o1, $o2, $flags, $contacts, 1);
}
function oktt_GBuffer() {
    var a = this; jl_Object.call(a);
    a.$width3 = 0;
    a.$height3 = 0;
    a.$attachments1 = null;
    a.$frameBufferHandle1 = 0;
    a.$isBound1 = 0;
}
function oktt_GBuffer__init_0(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktt_GBuffer();
    oktt_GBuffer__init_1(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktt_GBuffer__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktt_GBuffer();
    oktt_GBuffer__init_2(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function oktt_GBuffer__init_3() {
    var var_0 = new oktt_GBuffer();
    oktt_GBuffer__init_4(var_0);
    return var_0;
}
function oktt_GBuffer_getWidth($this) {
    return $this.$width3;
}
function oktt_GBuffer_getHeight($this) {
    return $this.$height3;
}
function oktt_GBuffer_getAttachments($this) {
    return $this.$attachments1;
}
function oktt_GBuffer_getFrameBufferHandle($this) {
    return $this.$frameBufferHandle1;
}
function oktt_GBuffer_isBound($this) {
    return $this.$isBound1;
}
function oktt_GBuffer_setBound($this, $_set___) {
    $this.$isBound1 = $_set___;
}
function oktt_GBuffer_getColorMap($this) {
    var var$1;
    var$1 = oktt_GBuffer_getAttachments($this).$get1(0).$getTexture1();
    if (var$1 === null)
        kji_Intrinsics_throwNpe();
    return var$1;
}
function oktt_GBuffer_getNormalMap($this) {
    var var$1;
    var$1 = oktt_GBuffer_getAttachments($this).$get1(1).$getTexture1();
    if (var$1 === null)
        kji_Intrinsics_throwNpe();
    return var$1;
}
function oktt_GBuffer_getPositionMap($this) {
    var var$1;
    var$1 = oktt_GBuffer_getAttachments($this).$get1(2).$getTexture1();
    if (var$1 === null)
        kji_Intrinsics_throwNpe();
    return var$1;
}
function oktt_GBuffer_getDepthMap($this) {
    var var$1;
    var$1 = oktt_GBuffer_getAttachments($this).$get1(3).$getTexture1();
    if (var$1 === null)
        kji_Intrinsics_throwNpe();
    return var$1;
}
function oktt_GBuffer__init_1($this, $width, $height, $internalFormat, $pixelFormat, $type) {
    var var$6;
    jl_Object__init_0($this);
    $this.$width3 = $width;
    $this.$height3 = $height;
    $this.$attachments1 = ju_ArrayList__init_();
    oktg_GL_$callClinit();
    $this.$frameBufferHandle1 = oktg_GL_glGenFramebuffer(oktg_GL_INSTANCE);
    var$6 = oktt_GBuffer_getAttachments($this);
    oktt_Attachments_$callClinit();
    var$6.$add1(oktt_Attachments_color$default(oktt_Attachments_INSTANCE, 0, $pixelFormat, $internalFormat, $type, 0, 0, 48, null));
    oktt_GBuffer_getAttachments($this).$add1(oktt_Attachments_color$default(oktt_Attachments_INSTANCE, 1, $pixelFormat, $internalFormat, $type, 0, 0, 48, null));
    oktt_GBuffer_getAttachments($this).$add1(oktt_Attachments_color$default(oktt_Attachments_INSTANCE, 2, $pixelFormat, $internalFormat, $type, 0, 0, 48, null));
    oktt_GBuffer_getAttachments($this).$add1(oktt_Attachments_depth$default(oktt_Attachments_INSTANCE, 0, 0, 0, 0, 0, 31, null));
    oktt_GBuffer_buildAttachments($this);
}
function oktt_GBuffer__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$6 & 1) {
        oktg_GL_$callClinit();
        var$1 = oktg_GL_getMainFrameBufferWidth(oktg_GL_INSTANCE);
    }
    if (var$6 & 2) {
        oktg_GL_$callClinit();
        var$2 = oktg_GL_getMainFrameBufferHeight(oktg_GL_INSTANCE);
    }
    if (var$6 & 4)
        var$3 = 34842;
    if (var$6 & 8)
        var$4 = 6408;
    if (var$6 & 16)
        var$5 = 5126;
    oktt_GBuffer__init_1(var$0, var$1, var$2, var$3, var$4, var$5);
}
function oktt_GBuffer__init_4(var$0) {
    oktt_GBuffer__init_2(var$0, 0, 0, 0, 0, 0, 31, null);
}
function oktt_GBuffer_buildAttachments($this) {
    oktt_IFrameBuffer$DefaultImpls_buildAttachments($this);
}
function oktt_GBuffer_initBuffersOrder($this, $indices) {
    kji_Intrinsics_checkParameterIsNotNull($indices, $rt_s(566));
    oktt_IFrameBuffer$DefaultImpls_initBuffersOrder($this, $indices);
}
function oktt_GBuffer_bind($this, $block) {
    kji_Intrinsics_checkParameterIsNotNull($block, $rt_s(301));
    oktt_IFrameBuffer$DefaultImpls_bind($this, $block);
}
function oktt_GBuffer_render($this, $block) {
    kji_Intrinsics_checkParameterIsNotNull($block, $rt_s(301));
    oktt_IFrameBuffer$DefaultImpls_render($this, $block);
}
function jl_IllegalStateException() {
    jl_Exception.call(this);
}
function jl_IllegalStateException__init_0() {
    var var_0 = new jl_IllegalStateException();
    jl_IllegalStateException__init_1(var_0);
    return var_0;
}
function jl_IllegalStateException__init_(var_0) {
    var var_1 = new jl_IllegalStateException();
    jl_IllegalStateException__init_2(var_1, var_0);
    return var_1;
}
function jl_IllegalStateException__init_1($this) {
    jl_Exception__init_0($this);
}
function jl_IllegalStateException__init_2($this, $message) {
    jl_Exception__init_2($this, $message);
}
function oktsg_GBufferOutputNode$Companion() {
    jl_Object.call(this);
}
function oktsg_GBufferOutputNode$Companion__init_() {
    var var_0 = new oktsg_GBufferOutputNode$Companion();
    oktsg_GBufferOutputNode$Companion__init_0(var_0);
    return var_0;
}
function oktsg_GBufferOutputNode$Companion__init_1(var_0) {
    var var_1 = new oktsg_GBufferOutputNode$Companion();
    oktsg_GBufferOutputNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_GBufferOutputNode$Companion__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_GBufferOutputNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_GBufferOutputNode$Companion__init_0($this);
}
function oktsg_OperationNode() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$result0 = null;
    a.$isFragment = 0;
    a.$isVarying = 0;
    a.$function0 = null;
}
var oktsg_OperationNode_InputForm = null;
var oktsg_OperationNode_Companion = null;
function oktsg_OperationNode_$callClinit() {
    oktsg_OperationNode_$callClinit = $rt_eraseClinit(oktsg_OperationNode);
    oktsg_OperationNode__clinit_();
}
function oktsg_OperationNode__init_0(var_0, var_1, var_2) {
    var var_3 = new oktsg_OperationNode();
    oktsg_OperationNode__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktsg_OperationNode__init_1(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktsg_OperationNode();
    oktsg_OperationNode__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktsg_OperationNode__init_3() {
    var var_0 = new oktsg_OperationNode();
    oktsg_OperationNode__init_4(var_0);
    return var_0;
}
function oktsg_OperationNode_getResult($this) {
    return $this.$result0;
}
function oktsg_OperationNode_setFragment($this, $_set___) {
    $this.$isFragment = $_set___;
}
function oktsg_OperationNode_setVarying($this, $_set___) {
    $this.$isVarying = $_set___;
}
function oktsg_OperationNode_setArgs($this, $args) {
    var $i, var$3, var$4, $i_0;
    kji_Intrinsics_checkParameterIsNotNull($args, $rt_s(848));
    oktsg_ShaderNode_getInputInternal($this).$clear();
    $i = 0;
    var$3 = $args.$size();
    while ($i < var$3) {
        var$4 = jl_StringBuilder__init_().$append($rt_s(1305));
        $i_0 = $i + 1 | 0;
        $this.$setInput(var$4.$append1($i_0).$toString(), $args.$get1($i));
        $i = $i_0;
    }
}
function oktsg_OperationNode_executionVert($this, $out) {
    var $f, $$this$forEach$iv, var$4, $element$iv;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if (!($this.$isFragment && !$this.$isVarying)) {
        $f = $this.$function0;
        $$this$forEach$iv = $this.$getInput();
        var$4 = $$this$forEach$iv.$entrySet().$iterator();
        while (var$4.$hasNext()) {
            $element$iv = var$4.$next();
            $f = kt_StringsKt__StringsJVMKt_replace$default($f, $element$iv.$getKey(), $element$iv.$getValue().$getRef0(), 0, 4, null);
        }
        $out.$append(jl_StringBuilder__init_().$append($this.$result0.$getTypedRef0()).$append($rt_s(331)).$append($f).$append($rt_s(330)).$toString());
    }
}
function oktsg_OperationNode_executionFrag($this, $out) {
    var $f, $$this$forEach$iv, var$4, $element$iv;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if (!(!$this.$isFragment && !$this.$isVarying)) {
        $f = $this.$function0;
        $$this$forEach$iv = $this.$getInput();
        var$4 = $$this$forEach$iv.$entrySet().$iterator();
        while (var$4.$hasNext()) {
            $element$iv = var$4.$next();
            $f = kt_StringsKt__StringsJVMKt_replace$default($f, $element$iv.$getKey(), $element$iv.$getValue().$getRef0(), 0, 4, null);
        }
        $out.$append(jl_StringBuilder__init_().$append($this.$result0.$getTypedRef0()).$append($rt_s(331)).$append($f).$append($rt_s(330)).$toString());
    }
}
function oktsg_OperationNode__init_($this, $args, $function, $resultType) {
    var var$4;
    oktsg_OperationNode_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($args, $rt_s(848));
    kji_Intrinsics_checkParameterIsNotNull($function, $rt_s(1306));
    oktsg_ShaderNode__init_0($this);
    $this.$function0 = $function;
    var$4 = oktsg_GLSLValue__init_($rt_s(1307), $resultType);
    oktsg_ShaderNode_defOut($this, var$4);
    $this.$result0 = var$4;
    $this.$isFragment = 1;
    $this.$isVarying = 1;
    oktsg_OperationNode_setArgs($this, $args);
}
function oktsg_OperationNode__init_2(var$0, var$1, var$2, var$3, var$4, var$5) {
    oktsg_OperationNode_$callClinit();
    if (var$4 & 1)
        var$1 = ju_ArrayList__init_();
    if (var$4 & 2)
        var$2 = $rt_s(894);
    if (var$4 & 4) {
        var$5 = kc_CollectionsKt___CollectionsKt_getOrNull(var$1, 0);
        var$3 = var$5 === null ? 3 : var$5.$getType();
    }
    oktsg_OperationNode__init_(var$0, var$1, var$2, var$3);
}
function oktsg_OperationNode__init_4(var$0) {
    oktsg_OperationNode_$callClinit();
    oktsg_OperationNode__init_2(var$0, null, null, 0, 7, null);
}
function oktsg_OperationNode__clinit_() {
    oktsg_OperationNode_Companion = oktsg_OperationNode$Companion__init_1(null);
    oktsg_OperationNode_InputForm = ju_HashMap__init_();
}
function oktm_IMat4$DefaultImpls() {
    jl_Object.call(this);
}
function oktm_IMat4$DefaultImpls_getM00($$this) {
    return $$this.$getCellValue0(0);
}
function oktm_IMat4$DefaultImpls_setM00($$this, $value) {
    $$this.$setCellValue0(0, $value);
}
function oktm_IMat4$DefaultImpls_getM01($$this) {
    return $$this.$getCellValue0(4);
}
function oktm_IMat4$DefaultImpls_setM01($$this, $value) {
    $$this.$setCellValue0(4, $value);
}
function oktm_IMat4$DefaultImpls_getM02($$this) {
    return $$this.$getCellValue0(8);
}
function oktm_IMat4$DefaultImpls_setM02($$this, $value) {
    $$this.$setCellValue0(8, $value);
}
function oktm_IMat4$DefaultImpls_getM03($$this) {
    return $$this.$getCellValue0(12);
}
function oktm_IMat4$DefaultImpls_setM03($$this, $value) {
    $$this.$setCellValue0(12, $value);
}
function oktm_IMat4$DefaultImpls_getM10($$this) {
    return $$this.$getCellValue0(1);
}
function oktm_IMat4$DefaultImpls_setM10($$this, $value) {
    $$this.$setCellValue0(1, $value);
}
function oktm_IMat4$DefaultImpls_getM11($$this) {
    return $$this.$getCellValue0(5);
}
function oktm_IMat4$DefaultImpls_setM11($$this, $value) {
    $$this.$setCellValue0(5, $value);
}
function oktm_IMat4$DefaultImpls_getM12($$this) {
    return $$this.$getCellValue0(9);
}
function oktm_IMat4$DefaultImpls_setM12($$this, $value) {
    $$this.$setCellValue0(9, $value);
}
function oktm_IMat4$DefaultImpls_getM13($$this) {
    return $$this.$getCellValue0(13);
}
function oktm_IMat4$DefaultImpls_setM13($$this, $value) {
    $$this.$setCellValue0(13, $value);
}
function oktm_IMat4$DefaultImpls_getM20($$this) {
    return $$this.$getCellValue0(2);
}
function oktm_IMat4$DefaultImpls_setM20($$this, $value) {
    $$this.$setCellValue0(2, $value);
}
function oktm_IMat4$DefaultImpls_getM21($$this) {
    return $$this.$getCellValue0(6);
}
function oktm_IMat4$DefaultImpls_setM21($$this, $value) {
    $$this.$setCellValue0(6, $value);
}
function oktm_IMat4$DefaultImpls_getM22($$this) {
    return $$this.$getCellValue0(10);
}
function oktm_IMat4$DefaultImpls_setM22($$this, $value) {
    $$this.$setCellValue0(10, $value);
}
function oktm_IMat4$DefaultImpls_getM23($$this) {
    return $$this.$getCellValue0(14);
}
function oktm_IMat4$DefaultImpls_setM23($$this, $value) {
    $$this.$setCellValue0(14, $value);
}
function oktm_IMat4$DefaultImpls_getM30($$this) {
    return $$this.$getCellValue0(3);
}
function oktm_IMat4$DefaultImpls_setM30($$this, $value) {
    $$this.$setCellValue0(3, $value);
}
function oktm_IMat4$DefaultImpls_getM31($$this) {
    return $$this.$getCellValue0(7);
}
function oktm_IMat4$DefaultImpls_setM31($$this, $value) {
    $$this.$setCellValue0(7, $value);
}
function oktm_IMat4$DefaultImpls_getM32($$this) {
    return $$this.$getCellValue0(11);
}
function oktm_IMat4$DefaultImpls_setM32($$this, $value) {
    $$this.$setCellValue0(11, $value);
}
function oktm_IMat4$DefaultImpls_getM33($$this) {
    return $$this.$getCellValue0(15);
}
function oktm_IMat4$DefaultImpls_setM33($$this, $value) {
    $$this.$setCellValue0(15, $value);
}
function oktm_IMat4$DefaultImpls_getScaleXSquared($$this) {
    return $$this.$getValues().data[0] * $$this.$getValues().data[0] + $$this.$getValues().data[4] * $$this.$getValues().data[4] + $$this.$getValues().data[8] * $$this.$getValues().data[8];
}
function oktm_IMat4$DefaultImpls_getScaleYSquared($$this) {
    return $$this.$getValues().data[1] * $$this.$getValues().data[1] + $$this.$getValues().data[5] * $$this.$getValues().data[5] + $$this.$getValues().data[9] * $$this.$getValues().data[9];
}
function oktm_IMat4$DefaultImpls_getScaleZSquared($$this) {
    return $$this.$getValues().data[2] * $$this.$getValues().data[2] + $$this.$getValues().data[6] * $$this.$getValues().data[6] + $$this.$getValues().data[10] * $$this.$getValues().data[10];
}
function oktm_IMat4$DefaultImpls_getScaleX($$this) {
    oktm_MATH_$callClinit();
    return oktm_MATH_isZero(oktm_MATH_INSTANCE, $$this.$getValues().data[4]) && oktm_MATH_isZero(oktm_MATH_INSTANCE, $$this.$getValues().data[8]) ? jl_Math_abs0($$this.$getValues().data[0]) : jl_Math_sqrt($$this.$getScaleXSquared0());
}
function oktm_IMat4$DefaultImpls_getScaleY($$this) {
    oktm_MATH_$callClinit();
    return oktm_MATH_isZero(oktm_MATH_INSTANCE, $$this.$getValues().data[1]) && oktm_MATH_isZero(oktm_MATH_INSTANCE, $$this.$getValues().data[9]) ? jl_Math_abs0($$this.$getValues().data[5]) : jl_Math_sqrt($$this.$getScaleYSquared0());
}
function oktm_IMat4$DefaultImpls_getScaleZ($$this) {
    oktm_MATH_$callClinit();
    return oktm_MATH_isZero(oktm_MATH_INSTANCE, $$this.$getValues().data[2]) && oktm_MATH_isZero(oktm_MATH_INSTANCE, $$this.$getValues().data[6]) ? jl_Math_abs0($$this.$getValues().data[10]) : jl_Math_sqrt($$this.$getScaleZSquared0());
}
function oktm_IMat4$DefaultImpls_getCellValue($$this, $cellIndex) {
    return $$this.$getValues().data[$cellIndex];
}
function oktm_IMat4$DefaultImpls_setCellValue($$this, $cellIndex, $newValue) {
    $$this.$getValues().data[$cellIndex] = $newValue;
}
function oktm_IMat4$DefaultImpls_getRow3($$this, $rowIndex, $out) {
    a: {
        kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
        switch ($rowIndex) {
            case 0:
                break;
            case 1:
                $out.$set44($$this.$getM100(), $$this.$getM110(), $$this.$getM120());
                break a;
            case 2:
                $out.$set44($$this.$getM200(), $$this.$getM210(), $$this.$getM220());
                break a;
            case 3:
                $out.$set44($$this.$getM300(), $$this.$getM310(), $$this.$getM320());
                break a;
            default:
                break a;
        }
        $out.$set44($$this.$getM000(), $$this.$getM010(), $$this.$getM020());
    }
    return $out;
}
function oktm_IMat4$DefaultImpls_isNotEqualTo($$this, $other) {
    var $values1, var$4, $values2, $i, var$7, var$8;
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    $values1 = $$this.$getValues();
    var$4 = $values1.data;
    $values2 = $other.$getValues();
    $i = 0;
    var$7 = var$4.length;
    while ($i < var$7) {
        var$8 = $values2.data;
        if (var$4[$i] !== var$8[$i])
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function oktm_IMat4$DefaultImpls_set($$this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return $$this.$set66($other.$getValues());
}
function oktm_IMat4$DefaultImpls_set0($$this, $other) {
    var $i, var$4;
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    $i = 0;
    while ($i < 16) {
        var$4 = $other.data;
        $$this.$getValues().data[$i] = var$4[$i];
        $i = $i + 1 | 0;
    }
    return $$this;
}
function oktm_IMat4$DefaultImpls_setFromQuaternion($$this, $quaternion) {
    kji_Intrinsics_checkParameterIsNotNull($quaternion, $rt_s(900));
    return $$this.$setFromQuaternion1($quaternion.$getX0(), $quaternion.$getY0(), $quaternion.$getZ(), $quaternion.$getW());
}
function oktm_IMat4$DefaultImpls_setFromQuaternion0($$this, $quaternionX, $quaternionY, $quaternionZ, $quaternionW) {
    return $$this.$set67(0.0, 0.0, 0.0, $quaternionX, $quaternionY, $quaternionZ, $quaternionW);
}
function oktm_IMat4$DefaultImpls_set1($$this, $translationX, $translationY, $translationZ, $quaternionX, $quaternionY, $quaternionZ, $quaternionW) {
    var $xs, $ys, $zs, $wx, $wy, $wz, $xx, $xy, $xz, $yy, $yz, $zz;
    $xs = $quaternionX * 2.0;
    $ys = $quaternionY * 2.0;
    $zs = $quaternionZ * 2.0;
    $wx = $quaternionW * $xs;
    $wy = $quaternionW * $ys;
    $wz = $quaternionW * $zs;
    $xx = $quaternionX * $xs;
    $xy = $quaternionX * $ys;
    $xz = $quaternionX * $zs;
    $yy = $quaternionY * $ys;
    $yz = $quaternionY * $zs;
    $zz = $quaternionZ * $zs;
    $$this.$getValues().data[0] = 1.0 - ($yy + $zz);
    $$this.$getValues().data[4] = $xy - $wz;
    $$this.$getValues().data[8] = $xz + $wy;
    $$this.$getValues().data[12] = $translationX;
    $$this.$getValues().data[1] = $xy + $wz;
    $$this.$getValues().data[5] = 1.0 - ($xx + $zz);
    $$this.$getValues().data[9] = $yz - $wx;
    $$this.$getValues().data[13] = $translationY;
    $$this.$getValues().data[2] = $xz - $wy;
    $$this.$getValues().data[6] = $yz + $wx;
    $$this.$getValues().data[10] = 1.0 - ($xx + $yy);
    $$this.$getValues().data[14] = $translationZ;
    $$this.$getValues().data[3] = 0.0;
    $$this.$getValues().data[7] = 0.0;
    $$this.$getValues().data[11] = 0.0;
    $$this.$getValues().data[15] = 1.0;
    return $$this;
}
function oktm_IMat4$DefaultImpls_set2($$this, $position, $orientation, $scale) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    kji_Intrinsics_checkParameterIsNotNull($position, $rt_s(53));
    kji_Intrinsics_checkParameterIsNotNull($orientation, $rt_s(899));
    kji_Intrinsics_checkParameterIsNotNull($scale, $rt_s(40));
    var$5 = $position.$getX0();
    var$6 = $position.$getY0();
    var$7 = $position.$getZ();
    var$8 = $orientation.$getX0();
    var$9 = $orientation.$getY0();
    var$10 = $orientation.$getZ();
    var$11 = $orientation.$getW();
    var$12 = $scale.$getX0();
    var$13 = $scale.$getY0();
    var$14 = $scale.$getZ();
    return $$this.$set68(var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14);
}
function oktm_IMat4$DefaultImpls_set3($$this, $translationX, $translationY, $translationZ, $quaternionX, $quaternionY, $quaternionZ, $quaternionW, $scaleX, $scaleY, $scaleZ) {
    var $xs, $ys, $zs, $wx, $wy, $wz, $xx, $xy, $xz, $yy, $yz, $zz;
    $xs = $quaternionX * 2.0;
    $ys = $quaternionY * 2.0;
    $zs = $quaternionZ * 2.0;
    $wx = $quaternionW * $xs;
    $wy = $quaternionW * $ys;
    $wz = $quaternionW * $zs;
    $xx = $quaternionX * $xs;
    $xy = $quaternionX * $ys;
    $xz = $quaternionX * $zs;
    $yy = $quaternionY * $ys;
    $yz = $quaternionY * $zs;
    $zz = $quaternionZ * $zs;
    $$this.$getValues().data[0] = $scaleX * (1.0 - ($yy + $zz));
    $$this.$getValues().data[4] = $scaleY * ($xy - $wz);
    $$this.$getValues().data[8] = $scaleZ * ($xz + $wy);
    $$this.$getValues().data[12] = $translationX;
    $$this.$getValues().data[1] = $scaleX * ($xy + $wz);
    $$this.$getValues().data[5] = $scaleY * (1.0 - ($xx + $zz));
    $$this.$getValues().data[9] = $scaleZ * ($yz - $wx);
    $$this.$getValues().data[13] = $translationY;
    $$this.$getValues().data[2] = $scaleX * ($xz - $wy);
    $$this.$getValues().data[6] = $scaleY * ($yz + $wx);
    $$this.$getValues().data[10] = $scaleZ * (1.0 - ($xx + $yy));
    $$this.$getValues().data[14] = $translationZ;
    $$this.$getValues().data[3] = 0.0;
    $$this.$getValues().data[7] = 0.0;
    $$this.$getValues().data[11] = 0.0;
    $$this.$getValues().data[15] = 1.0;
    return $$this;
}
function oktm_IMat4$DefaultImpls_mul($$this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    oktm_IMat4_$callClinit();
    oktm_IMat4$Companion_mul(oktm_IMat4_Companion, $$this.$getValues(), $other.$getValues());
    return $$this;
}
function oktm_IMat4$DefaultImpls_mulLeft($$this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    oktm_IMat4_$callClinit();
    oktm_IMat4$Companion_access$getTmp$p(oktm_IMat4_Companion).$set3($other);
    oktm_IMat4$Companion_mul(oktm_IMat4_Companion, oktm_IMat4$Companion_access$getTmp$p(oktm_IMat4_Companion).$getValues(), $$this.$getValues());
    return $$this.$set3(oktm_IMat4$Companion_access$getTmp$p(oktm_IMat4_Companion));
}
function oktm_IMat4$DefaultImpls_idt($$this) {
    $$this.$getValues().data[0] = 1.0;
    $$this.$getValues().data[4] = 0.0;
    $$this.$getValues().data[8] = 0.0;
    $$this.$getValues().data[12] = 0.0;
    $$this.$getValues().data[1] = 0.0;
    $$this.$getValues().data[5] = 1.0;
    $$this.$getValues().data[9] = 0.0;
    $$this.$getValues().data[13] = 0.0;
    $$this.$getValues().data[2] = 0.0;
    $$this.$getValues().data[6] = 0.0;
    $$this.$getValues().data[10] = 1.0;
    $$this.$getValues().data[14] = 0.0;
    $$this.$getValues().data[3] = 0.0;
    $$this.$getValues().data[7] = 0.0;
    $$this.$getValues().data[11] = 0.0;
    $$this.$getValues().data[15] = 1.0;
    return $$this;
}
function oktm_IMat4$DefaultImpls_inv($$this) {
    oktm_IMat4_$callClinit();
    oktm_IMat4$Companion_inv(oktm_IMat4_Companion, $$this.$getValues());
    return $$this;
}
function oktm_IMat4$DefaultImpls_det($$this) {
    var var$2, var$3;
    var$2 = $$this.$getValues().data[3] * $$this.$getValues().data[6] * $$this.$getValues().data[9] * $$this.$getValues().data[12] - $$this.$getValues().data[2] * $$this.$getValues().data[7] * $$this.$getValues().data[9] * $$this.$getValues().data[12];
    var$3 = $$this.$getValues().data[3] * $$this.$getValues().data[5];
    var$3 = var$3 * $$this.$getValues().data[10] * $$this.$getValues().data[12];
    var$2 = var$2 - var$3;
    var$2 = var$2 + $$this.$getValues().data[1] * $$this.$getValues().data[7] * $$this.$getValues().data[10] * $$this.$getValues().data[12] + $$this.$getValues().data[2] * $$this.$getValues().data[5] * $$this.$getValues().data[11] * $$this.$getValues().data[12];
    var$3 = $$this.$getValues().data[1];
    var$3 = var$3 * $$this.$getValues().data[6] * $$this.$getValues().data[11] * $$this.$getValues().data[12];
    var$2 = var$2 - var$3;
    var$2 = var$2 - $$this.$getValues().data[3] * $$this.$getValues().data[6] * $$this.$getValues().data[8] * $$this.$getValues().data[13] + $$this.$getValues().data[2] * $$this.$getValues().data[7] * $$this.$getValues().data[8] * $$this.$getValues().data[13] + $$this.$getValues().data[3] * $$this.$getValues().data[4] * $$this.$getValues().data[10] * $$this.$getValues().data[13] - $$this.$getValues().data[0] * $$this.$getValues().data[7] * $$this.$getValues().data[10] * $$this.$getValues().data[13];
    var$3 = $$this.$getValues().data[2] * $$this.$getValues().data[4] * $$this.$getValues().data[11];
    var$3 = var$3 * $$this.$getValues().data[13];
    var$2 = var$2 - var$3;
    var$2 = var$2 + $$this.$getValues().data[0] * $$this.$getValues().data[6] * $$this.$getValues().data[11] * $$this.$getValues().data[13] + $$this.$getValues().data[3] * $$this.$getValues().data[5] * $$this.$getValues().data[8] * $$this.$getValues().data[14];
    var$3 = $$this.$getValues().data[1] * $$this.$getValues().data[7];
    var$3 = var$3 * $$this.$getValues().data[8] * $$this.$getValues().data[14];
    var$2 = var$2 - var$3;
    var$2 = var$2 - $$this.$getValues().data[3] * $$this.$getValues().data[4] * $$this.$getValues().data[9] * $$this.$getValues().data[14] + $$this.$getValues().data[0] * $$this.$getValues().data[7] * $$this.$getValues().data[9] * $$this.$getValues().data[14];
    var$3 = $$this.$getValues().data[1];
    var$3 = var$3 * $$this.$getValues().data[4] * $$this.$getValues().data[11] * $$this.$getValues().data[14];
    var$2 = var$2 + var$3;
    var$2 = var$2 - $$this.$getValues().data[0] * $$this.$getValues().data[5] * $$this.$getValues().data[11] * $$this.$getValues().data[14] - $$this.$getValues().data[2] * $$this.$getValues().data[5] * $$this.$getValues().data[8] * $$this.$getValues().data[15] + $$this.$getValues().data[1] * $$this.$getValues().data[6] * $$this.$getValues().data[8] * $$this.$getValues().data[15] + $$this.$getValues().data[2] * $$this.$getValues().data[4] * $$this.$getValues().data[9] * $$this.$getValues().data[15];
    var$3 = $$this.$getValues().data[0] * $$this.$getValues().data[6] * $$this.$getValues().data[9];
    var$3 = var$3 * $$this.$getValues().data[15];
    var$2 = var$2 - var$3;
    return var$2 - $$this.$getValues().data[1] * $$this.$getValues().data[4] * $$this.$getValues().data[10] * $$this.$getValues().data[15] + $$this.$getValues().data[0] * $$this.$getValues().data[5] * $$this.$getValues().data[10] * $$this.$getValues().data[15];
}
function oktm_IMat4$DefaultImpls_setToProjection($$this, $near, $far, $fovy, $aspectRatio) {
    var $fd, var$7, var$8, $a1, $a2;
    $$this.$idt0();
    $fd = 1.0 / jl_Math_tan($fovy * 0.017453292519943295 / 2.0);
    var$7 = $far + $near;
    var$8 = $near - $far;
    $a1 = var$7 / var$8;
    $a2 = 2.0 * $far * $near / var$8;
    $$this.$getValues().data[0] = $fd / $aspectRatio;
    $$this.$getValues().data[1] = 0.0;
    $$this.$getValues().data[2] = 0.0;
    $$this.$getValues().data[3] = 0.0;
    $$this.$getValues().data[4] = 0.0;
    $$this.$getValues().data[5] = $fd;
    $$this.$getValues().data[6] = 0.0;
    $$this.$getValues().data[7] = 0.0;
    $$this.$getValues().data[8] = 0.0;
    $$this.$getValues().data[9] = 0.0;
    $$this.$getValues().data[10] = $a1;
    $$this.$getValues().data[11] = (-1.0);
    $$this.$getValues().data[12] = 0.0;
    $$this.$getValues().data[13] = 0.0;
    $$this.$getValues().data[14] = $a2;
    $$this.$getValues().data[15] = 0.0;
    return $$this;
}
function oktm_IMat4$DefaultImpls_setToOrtho($$this, $left, $right, $bottom, $top, $near, $far) {
    var var$8, $xOrth, var$10, $yOrth, var$12, $zOrth, $tx, $ty, $tz;
    $$this.$idt0();
    var$8 = $right - $left;
    $xOrth = 2.0 / var$8;
    var$10 = $top - $bottom;
    $yOrth = 2.0 / var$10;
    var$12 = $far - $near;
    $zOrth = (-2.0) / var$12;
    $tx =  -($right + $left) / var$8;
    $ty =  -($top + $bottom) / var$10;
    $tz =  -($far + $near) / var$12;
    $$this.$getValues().data[0] = $xOrth;
    $$this.$getValues().data[1] = 0.0;
    $$this.$getValues().data[2] = 0.0;
    $$this.$getValues().data[3] = 0.0;
    $$this.$getValues().data[4] = 0.0;
    $$this.$getValues().data[5] = $yOrth;
    $$this.$getValues().data[6] = 0.0;
    $$this.$getValues().data[7] = 0.0;
    $$this.$getValues().data[8] = 0.0;
    $$this.$getValues().data[9] = 0.0;
    $$this.$getValues().data[10] = $zOrth;
    $$this.$getValues().data[11] = 0.0;
    $$this.$getValues().data[12] = $tx;
    $$this.$getValues().data[13] = $ty;
    $$this.$getValues().data[14] = $tz;
    $$this.$getValues().data[15] = 1.0;
    return $$this;
}
function oktm_IMat4$DefaultImpls_setToTranslation($$this, $x, $y, $z) {
    $$this.$idt0();
    $$this.$getValues().data[12] = $x;
    $$this.$getValues().data[13] = $y;
    $$this.$getValues().data[14] = $z;
    return $$this;
}
function oktm_IMat4$DefaultImpls_setToRotation($$this, $axisX, $axisY, $axisZ, $radians) {
    if ($radians === 0.0) {
        $$this.$idt0();
        return $$this;
    }
    oktm_IMat4_$callClinit();
    return $$this.$setFromQuaternion2(oktm_Vec4_setQuaternion(oktm_IMat4$Companion_getQuat(oktm_IMat4_Companion), $axisX, $axisY, $axisZ, $radians));
}
function oktm_IMat4$DefaultImpls_setToLookAt($$this, $direction, $up) {
    kji_Intrinsics_checkParameterIsNotNull($direction, $rt_s(58));
    kji_Intrinsics_checkParameterIsNotNull($up, $rt_s(57));
    oktm_IMat4_$callClinit();
    oktm_IMat4$Companion_getTmpV1(oktm_IMat4_Companion).$set11($direction).$nor();
    oktm_IMat4$Companion_getTmpV2Right(oktm_IMat4_Companion).$set11($direction).$nor();
    oktm_IMat4$Companion_getTmpV2Right(oktm_IMat4_Companion).$crs2($up).$nor();
    oktm_IMat4$Companion_getTmpV3Forward(oktm_IMat4_Companion).$set11(oktm_IMat4$Companion_getTmpV2Right(oktm_IMat4_Companion)).$crs2(oktm_IMat4$Companion_getTmpV1(oktm_IMat4_Companion)).$nor();
    $$this.$idt0();
    $$this.$getValues().data[0] = oktm_IMat4$Companion_getTmpV2Right(oktm_IMat4_Companion).$getX0();
    $$this.$getValues().data[4] = oktm_IMat4$Companion_getTmpV2Right(oktm_IMat4_Companion).$getY0();
    $$this.$getValues().data[8] = oktm_IMat4$Companion_getTmpV2Right(oktm_IMat4_Companion).$getZ();
    $$this.$getValues().data[1] = oktm_IMat4$Companion_getTmpV3Forward(oktm_IMat4_Companion).$getX0();
    $$this.$getValues().data[5] = oktm_IMat4$Companion_getTmpV3Forward(oktm_IMat4_Companion).$getY0();
    $$this.$getValues().data[9] = oktm_IMat4$Companion_getTmpV3Forward(oktm_IMat4_Companion).$getZ();
    $$this.$getValues().data[2] =  -oktm_IMat4$Companion_getTmpV1(oktm_IMat4_Companion).$getX0();
    $$this.$getValues().data[6] =  -oktm_IMat4$Companion_getTmpV1(oktm_IMat4_Companion).$getY0();
    $$this.$getValues().data[10] =  -oktm_IMat4$Companion_getTmpV1(oktm_IMat4_Companion).$getZ();
    return $$this;
}
function oktm_IMat4$DefaultImpls_setToLookAt0($$this, $position, $direction, $up) {
    kji_Intrinsics_checkParameterIsNotNull($position, $rt_s(53));
    kji_Intrinsics_checkParameterIsNotNull($direction, $rt_s(58));
    kji_Intrinsics_checkParameterIsNotNull($up, $rt_s(57));
    $$this.$setToLookAt2($direction, $up);
    $$this.$mul(oktm_IMat4$Companion_access$getTmp$p(oktm_IMat4_Companion).$setToTranslation0( -$position.$getX0(),  -$position.$getY0(),  -$position.$getZ()));
    return $$this;
}
function oktm_IMat4$DefaultImpls_getTranslation($$this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return $out.$set44($$this.$getM030(), $$this.$getM130(), $$this.$getM230());
}
function oktm_IMat4$DefaultImpls_getRotation($$this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return $out.$setQuaternion3($$this);
}
function oktm_IMat4$DefaultImpls_getScale($$this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return $out.$set44($$this.$getScaleX0(), $$this.$getScaleY0(), $$this.$getScaleZ0());
}
function oktm_IMat4$DefaultImpls_rotate($$this, $axisX, $axisY, $axisZ, $rad) {
    if ($rad === 0.0)
        return $$this;
    oktm_IMat4_$callClinit();
    oktm_Vec4_setQuaternion(oktm_IMat4$Companion_getQuat(oktm_IMat4_Companion), $axisX, $axisY, $axisZ, $rad);
    return $$this.$rotate5(oktm_IMat4$Companion_getQuat(oktm_IMat4_Companion));
}
function oktm_IMat4$DefaultImpls_rotate0($$this, $rotation) {
    kji_Intrinsics_checkParameterIsNotNull($rotation, $rt_s(39));
    oktm_IMat4_$callClinit();
    oktm_IMat4$Companion_access$getTmp$p(oktm_IMat4_Companion).$setFromQuaternion2($rotation);
    oktm_IMat4$Companion_mul(oktm_IMat4_Companion, $$this.$getValues(), oktm_IMat4$Companion_access$getTmp$p(oktm_IMat4_Companion).$getValues());
    return $$this;
}
function oktm_IMat4$DefaultImpls_project($$this, $vec, $out) {
    var $invW, var$5, var$6, var$7, var$8;
    kji_Intrinsics_checkParameterIsNotNull($vec, $rt_s(901));
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $invW = 1.0 / ($vec.$getX0() * $$this.$getM300() + $vec.$getY0() * $$this.$getM310() + $vec.$getZ() * $$this.$getM320() + $$this.$getM330());
    var$5 = oktm_IMat4$Companion_getTmpV1(oktm_IMat4_Companion);
    var$6 = ($vec.$getX0() * $$this.$getM000() + $vec.$getY0() * $$this.$getM010() + $vec.$getZ() * $$this.$getM020() + $$this.$getM030()) * $invW;
    var$7 = ($vec.$getX0() * $$this.$getM100() + $vec.$getY0() * $$this.$getM110() + $vec.$getZ() * $$this.$getM120() + $$this.$getM130()) * $invW;
    var$8 = ($vec.$getX0() * $$this.$getM200() + $vec.$getY0() * $$this.$getM210() + $vec.$getZ() * $$this.$getM220() + $$this.$getM230()) * $invW;
    var$5.$set44(var$6, var$7, var$8);
    return $out.$set11(oktm_IMat4$Companion_getTmpV1(oktm_IMat4_Companion));
}
function oktgg_GLTFSkin$read$2$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$0197 = null;
    a.$$i4 = null;
}
function oktgg_GLTFSkin$read$2$1__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFSkin$read$2$1();
    oktgg_GLTFSkin$read$2$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktgg_GLTFSkin$read$2$1_invoke(var$0, var$1) {
    oktgg_GLTFSkin$read$2$1_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTFSkin$read$2$1_invoke0($this, $boneIndex) {
    var $node, var$3;
    $node = oktgg_GLTFSkin_getGltf($this.$this$0197.$this$0148).$getNodes1().$get1($boneIndex);
    oktgg_GLTFSkin_getSkin($this.$this$0197.$this$0148).$getBones().data[$this.$$i4.$element] = oktgg_GLTFNode_getNode($node);
    oktgg_GLTFSkin_getSkin($this.$this$0197.$this$0148).$getBoneNames().data[$this.$$i4.$element] = oktgg_GLTFNode_getName($node);
    var$3 = $this.$$i4;
    var$3.$element = var$3.$element + 1 | 0;
}
function oktgg_GLTFSkin$read$2$1__init_0(var$0, var$1, var$2) {
    var$0.$this$0197 = var$1;
    var$0.$$i4 = var$2;
    kji_Lambda__init_0(var$0, 1);
}
function okttsg_SkyboxVertexNodeTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$control9 = null;
    a.$$scene0 = null;
}
function okttsg_SkyboxVertexNodeTest$testMain$1__init_(var_0, var_1) {
    var var_2 = new okttsg_SkyboxVertexNodeTest$testMain$1();
    okttsg_SkyboxVertexNodeTest$testMain$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function okttsg_SkyboxVertexNodeTest$testMain$1_invoke(var$0) {
    okttsg_SkyboxVertexNodeTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function okttsg_SkyboxVertexNodeTest$testMain$1_invoke0($this) {
    var var$1;
    oktg_GL_$callClinit();
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.5, 0.5, 0.5, 1.0);
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$control9;
    okt_APP_$callClinit();
    var$1.$update(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    oktg_IScene$DefaultImpls_update$default($this.$$scene0, 0.0, 1, null);
    $this.$$scene0.$render0();
}
function okttsg_SkyboxVertexNodeTest$testMain$1__init_0(var$0, var$1, var$2) {
    var$0.$$control9 = var$1;
    var$0.$$scene0 = var$2;
    kji_Lambda__init_0(var$0, 0);
}
function oooi_DxGimpactCollision() {
    jl_Object.call(this);
}
function oooi_DxGimpactCollision__init_() {
    var var_0 = new oooi_DxGimpactCollision();
    oooi_DxGimpactCollision__init_0(var_0);
    return var_0;
}
function oooi_DxGimpactCollision__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxGimpactCollision_DVector3Tovec3f($v) {
    var $vf;
    $vf = oooig_GimGeometry$vec3f__init_();
    $vf.$f.data[0] = $v.$get01();
    $vf.$f.data[1] = $v.$get10();
    $vf.$f.data[2] = $v.$get20();
    return $vf;
}
function oooi_DxGimpactCollision_DVector4Tovec4f($v) {
    var $vf;
    $vf = oooig_GimGeometry$vec4f__init_();
    $vf.$f0.data[0] = $v.$get01();
    $vf.$f0.data[1] = $v.$get10();
    $vf.$f0.data[2] = $v.$get20();
    $vf.$f0.data[3] = $v.$get30();
    return $vf;
}
function oooi_DxGimpactCollision_gim_trimesh_ray_closest_collisionODE($mesh, $origin, $dir, $tmax, $contact) {
    var $dir_vec3f, $origin_vec3f;
    $dir_vec3f = oooi_DxGimpactCollision_DVector3Tovec3f($dir);
    $origin_vec3f = oooi_DxGimpactCollision_DVector3Tovec3f($origin);
    return $mesh.$gim_trimesh_ray_closest_collision0($origin_vec3f, $dir_vec3f, $tmax, $contact);
}
function oooi_DxGimpactCollision_gim_trimesh_ray_collisionODE($mesh, $origin, $dir, $tmax, $contact) {
    var $dir_vec3f, $origin_vec3f;
    $dir_vec3f = oooi_DxGimpactCollision_DVector3Tovec3f($dir);
    $origin_vec3f = oooi_DxGimpactCollision_DVector3Tovec3f($origin);
    return $mesh.$gim_trimesh_ray_collision0($origin_vec3f, $dir_vec3f, $tmax, $contact);
}
function oooi_DxGimpactCollision_gim_trimesh_sphere_collisionODE($mesh, $Position, $Radius, $contact) {
    var $pos_vec3f;
    $pos_vec3f = oooi_DxGimpactCollision_DVector3Tovec3f($Position);
    $mesh.$gim_trimesh_sphere_collision0($pos_vec3f, $Radius, $contact);
}
function oooi_DxGimpactCollision_gim_trimesh_plane_collisionODE($mesh, $plane, $contact) {
    var $plane_vec4f;
    $plane_vec4f = oooi_DxGimpactCollision_DVector4Tovec4f($plane);
    $mesh.$gim_trimesh_plane_collision0($plane_vec4f, $contact);
}
function oooi_DxGimpactCollision_GIM_AABB_COPY($src, $dst) {
    $dst.$set6($src.$minX, $src.$maxX, $src.$minY, $src.$maxY, $src.$minZ, $src.$maxZ);
}
function oooi_DxGimpactCollision_FetchTriangleCount($TriMesh) {
    return $TriMesh.$m_collision_trimesh.$gim_trimesh_get_triangle_count();
}
function oooi_DxGimpactCollision_FetchTransformedTriangle($TriMesh, $Index, $Out) {
    var var$4, $vOut, var$6;
    var$4 = $Out.data;
    $TriMesh.$m_collision_trimesh.$gim_trimesh_locks_work_data();
    $vOut = $rt_createArray(oooig_GimGeometry$vec3f, 3);
    var$6 = $vOut.data;
    var$6[0] = oooig_GimGeometry$vec3f__init_();
    var$6[1] = oooig_GimGeometry$vec3f__init_();
    var$6[2] = oooig_GimGeometry$vec3f__init_();
    $TriMesh.$m_collision_trimesh.$gim_trimesh_get_triangle_vertices($Index, var$6[0], var$6[1], var$6[2]);
    var$4[0].$set14(var$6[0].$f);
    var$4[1].$set14(var$6[1].$f);
    var$4[2].$set14(var$6[2].$f);
    $TriMesh.$m_collision_trimesh.$gim_trimesh_unlocks_work_data();
}
function oooi_DxGimpactCollision_MakeMatrix0($Position, $Rotation, $m) {
    $m.$f1.data[0] = $Rotation.$get00();
    $m.$f1.data[1] = $Rotation.$get010();
    $m.$f1.data[2] = $Rotation.$get02();
    $m.$f1.data[4] = $Rotation.$get100();
    $m.$f1.data[5] = $Rotation.$get11();
    $m.$f1.data[6] = $Rotation.$get12();
    $m.$f1.data[8] = $Rotation.$get200();
    $m.$f1.data[9] = $Rotation.$get21();
    $m.$f1.data[10] = $Rotation.$get22();
    $m.$f1.data[3] = $Position.$get01();
    $m.$f1.data[7] = $Position.$get10();
    $m.$f1.data[11] = $Position.$get20();
}
function oooi_DxGimpactCollision_MakeMatrix($g, $Out) {
    var $Position, $Rotation;
    $Position = $g.$dGeomGetPosition();
    $Rotation = $g.$dGeomGetRotation();
    oooi_DxGimpactCollision_MakeMatrix0($Position, $Rotation, $Out);
}
function jl_Byte() {
    jl_Number.call(this);
    this.$value10 = 0;
}
var jl_Byte_TYPE = null;
function jl_Byte_$callClinit() {
    jl_Byte_$callClinit = $rt_eraseClinit(jl_Byte);
    jl_Byte__clinit_();
}
function jl_Byte__init_(var_0) {
    var var_1 = new jl_Byte();
    jl_Byte__init_0(var_1, var_0);
    return var_1;
}
function jl_Byte__init_0($this, $value) {
    jl_Byte_$callClinit();
    jl_Number__init_0($this);
    $this.$value10 = $value;
}
function jl_Byte_byteValue($this) {
    return $this.$value10;
}
function jl_Byte_valueOf($value) {
    jl_Byte_$callClinit();
    return jl_Byte__init_($value);
}
function jl_Byte__clinit_() {
    jl_Byte_TYPE = $rt_cls($rt_bytecls());
}
function oktj_IJsonObject$DefaultImpls() {
    jl_Object.call(this);
}
function oktj_IJsonObject$DefaultImpls_objOrNull($$this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return !$$this.$contains($key) ? null : $$this.$obj0($key);
}
function oktj_IJsonObject$DefaultImpls_obj($$this, $key, $call) {
    var var$4;
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    var$4 = $$this.$objOrNull($key);
    if (var$4 === null)
        var$4 = null;
    else
        $call.$invoke1(var$4);
    return var$4;
}
function oktj_IJsonObject$DefaultImpls_arrayOrNull($$this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return !$$this.$contains($key) ? null : $$this.$array4($key);
}
function oktj_IJsonObject$DefaultImpls_array($$this, $key, $call) {
    var var$4;
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    var$4 = $$this.$arrayOrNull($key);
    if (var$4 === null)
        var$4 = null;
    else
        $call.$invoke1(var$4);
    return var$4;
}
function oktj_IJsonObject$DefaultImpls_string($$this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return $$this.$get37($key);
}
function oktj_IJsonObject$DefaultImpls_float($$this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return $$this.$get37($key).$floatValue();
}
function oktj_IJsonObject$DefaultImpls_int($$this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return $$this.$get37($key).$intValue();
}
function oktj_IJsonObject$DefaultImpls_bool($$this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return $$this.$get37($key).$booleanValue();
}
function oktj_IJsonObject$DefaultImpls_string0($$this, $key, $default) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($default, $rt_s(1309));
    if ($$this.$contains($key))
        $default = $$this.$string1($key);
    return $default;
}
function oktj_IJsonObject$DefaultImpls_float0($$this, $key, $default) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    if ($$this.$contains($key))
        $default = $$this.$float2($key);
    return $default;
}
function oktj_IJsonObject$DefaultImpls_int0($$this, $key, $default) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    if ($$this.$contains($key))
        $default = $$this.$int0($key);
    return $default;
}
function oktj_IJsonObject$DefaultImpls_string1($$this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    if ($$this.$contains($key))
        $call.$invoke1($$this.$string1($key));
}
function oktj_IJsonObject$DefaultImpls_float1($$this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    if ($$this.$contains($key))
        $call.$invoke1(jl_Float_valueOf($$this.$float2($key)));
}
function oktj_IJsonObject$DefaultImpls_int1($$this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    if ($$this.$contains($key))
        $call.$invoke1(jl_Integer_valueOf($$this.$int0($key)));
}
function oktj_IJsonObject$DefaultImpls_bool0($$this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    if ($$this.$contains($key))
        $call.$invoke1(jl_Boolean_valueOf($$this.$bool0($key)));
}
function oktj_IJsonObject$DefaultImpls_ints($$this, $call) {
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    $$this.$values11($call);
}
function oktj_IJsonObject$DefaultImpls_ints0($$this, $key, $call) {
    var var$4;
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    var$4 = $$this.$arrayOrNull($key);
    if (var$4 !== null)
        var$4.$ints1($call);
}
function oktj_IJsonObject$DefaultImpls_floats($$this, $key, $call) {
    var var$4;
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    var$4 = $$this.$arrayOrNull($key);
    if (var$4 !== null)
        var$4.$floats0($call);
}
function oktj_IJsonObject$DefaultImpls_get($$this, $key, $call) {
    var $json;
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    $json = $$this.$objOrNull($key);
    if ($json !== null)
        $call.$invoke1($json);
    return $json;
}
function kt_CharsKt() {
    kt_CharsKt__CharKt.call(this);
}
function kt_CharsKt__init_() {
    var var_0 = new kt_CharsKt();
    kt_CharsKt__init_0(var_0);
    return var_0;
}
function kt_CharsKt__init_0(var$0) {
    kt_CharsKt__CharKt__init_0(var$0);
}
function oooi_CollisionLibccd$CollideCylinderCylinder() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$CollideCylinderCylinder__init_() {
    var var_0 = new oooi_CollisionLibccd$CollideCylinderCylinder();
    oooi_CollisionLibccd$CollideCylinderCylinder__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$CollideCylinderCylinder__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$CollideCylinderCylinder_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    var $cyl1, $cyl2, $numContacts, var$8, var$9, var$10, var$11;
    $cyl1 = oooi_CollisionLibccd$ccd_cyl_t__init_();
    $cyl2 = oooi_CollisionLibccd$ccd_cyl_t__init_();
    oooi_CollisionLibccd_ccdGeomToCyl($o1, $cyl1);
    oooi_CollisionLibccd_ccdGeomToCyl($o2, $cyl2);
    $numContacts = oooi_CollisionLibccdCylinderStacking_collideCylCyl($o1, $o2, $cyl1, $cyl2, $flags, $contacts);
    if ($numContacts < 0) {
        var$8 = oooi_CollisionLibccd_ccdSupportCyl;
        var$9 = oooi_CollisionLibccd_access$100();
        var$10 = oooi_CollisionLibccd_ccdSupportCyl;
        var$11 = oooi_CollisionLibccd_access$100();
        $numContacts = oooi_CollisionLibccd_ccdCollide($o1, $o2, $flags, $contacts, $cyl1, var$8, var$9, $cyl2, var$10, var$11);
    }
    return $numContacts;
}
function cgcj_Jsoner$States() {
    jl_Enum.call(this);
}
var cgcj_Jsoner$States_DONE = null;
var cgcj_Jsoner$States_INITIAL = null;
var cgcj_Jsoner$States_PARSED_ERROR = null;
var cgcj_Jsoner$States_PARSING_ARRAY = null;
var cgcj_Jsoner$States_PARSING_ENTRY = null;
var cgcj_Jsoner$States_PARSING_OBJECT = null;
var cgcj_Jsoner$States_$VALUES = null;
function cgcj_Jsoner$States_$callClinit() {
    cgcj_Jsoner$States_$callClinit = $rt_eraseClinit(cgcj_Jsoner$States);
    cgcj_Jsoner$States__clinit_();
}
function cgcj_Jsoner$States__init_(var_0, var_1) {
    var var_2 = new cgcj_Jsoner$States();
    cgcj_Jsoner$States__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgcj_Jsoner$States_values() {
    cgcj_Jsoner$States_$callClinit();
    return cgcj_Jsoner$States_$VALUES.$clone();
}
function cgcj_Jsoner$States__init_0($this, var$1, var$2) {
    cgcj_Jsoner$States_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
}
function cgcj_Jsoner$States__clinit_() {
    var var$1, var$2;
    cgcj_Jsoner$States_DONE = cgcj_Jsoner$States__init_($rt_s(1310), 0);
    cgcj_Jsoner$States_INITIAL = cgcj_Jsoner$States__init_($rt_s(1311), 1);
    cgcj_Jsoner$States_PARSED_ERROR = cgcj_Jsoner$States__init_($rt_s(1312), 2);
    cgcj_Jsoner$States_PARSING_ARRAY = cgcj_Jsoner$States__init_($rt_s(1313), 3);
    cgcj_Jsoner$States_PARSING_ENTRY = cgcj_Jsoner$States__init_($rt_s(1314), 4);
    cgcj_Jsoner$States_PARSING_OBJECT = cgcj_Jsoner$States__init_($rt_s(1315), 5);
    var$1 = $rt_createArray(cgcj_Jsoner$States, 6);
    var$2 = var$1.data;
    var$2[0] = cgcj_Jsoner$States_DONE;
    var$2[1] = cgcj_Jsoner$States_INITIAL;
    var$2[2] = cgcj_Jsoner$States_PARSED_ERROR;
    var$2[3] = cgcj_Jsoner$States_PARSING_ARRAY;
    var$2[4] = cgcj_Jsoner$States_PARSING_ENTRY;
    var$2[5] = cgcj_Jsoner$States_PARSING_OBJECT;
    cgcj_Jsoner$States_$VALUES = var$1;
}
function ji_EOFException() {
    ji_IOException.call(this);
}
function ji_EOFException__init_() {
    var var_0 = new ji_EOFException();
    ji_EOFException__init_0(var_0);
    return var_0;
}
function ji_EOFException__init_0($this) {
    ji_IOException__init_0($this);
}
function oktsg_TextureNode$Companion() {
    jl_Object.call(this);
}
function oktsg_TextureNode$Companion__init_0() {
    var var_0 = new oktsg_TextureNode$Companion();
    oktsg_TextureNode$Companion__init_1(var_0);
    return var_0;
}
function oktsg_TextureNode$Companion__init_(var_0) {
    var var_1 = new oktsg_TextureNode$Companion();
    oktsg_TextureNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_TextureNode$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function oktsg_TextureNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_TextureNode$Companion__init_1($this);
}
function oooi_CollisionLibccd$ccd_cap_t() {
    var a = this; oooi_CollisionLibccd$ccd_obj_t.call(a);
    a.$radius = 0.0;
    a.$axis = null;
    a.$p1 = null;
    a.$p2 = null;
}
function oooi_CollisionLibccd$ccd_cap_t__init_() {
    var var_0 = new oooi_CollisionLibccd$ccd_cap_t();
    oooi_CollisionLibccd$ccd_cap_t__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$ccd_cap_t__init_0($this) {
    oooi_CollisionLibccd$ccd_obj_t__init_2($this, null);
    $this.$axis = oooil_CCDVec3$ccd_vec3_t__init_();
    $this.$p1 = oooil_CCDVec3$ccd_vec3_t__init_();
    $this.$p2 = oooil_CCDVec3$ccd_vec3_t__init_();
}
function oktm_IVec3$DefaultImpls() {
    jl_Object.call(this);
}
function oktm_IVec3$DefaultImpls_set($$this, $x, $y, $z) {
    $$this.$setX0($x);
    $$this.$setY0($y);
    $$this.$setZ($z);
    return $$this;
}
function oktm_IVec3$DefaultImpls_set0($$this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return $$this.$set44($other.$getX0(), $other.$getY0(), $other.$getZ());
}
function oktm_IVec3$DefaultImpls_add($$this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return $$this.$add17($other.$getX0(), $other.$getY0(), $other.$getZ());
}
function oktm_IVec3$DefaultImpls_add0($$this, $x, $y, $z) {
    return $$this.$set44($$this.$getX0() + $x, $$this.$getY0() + $y, $$this.$getZ() + $z);
}
function oktm_IVec3$DefaultImpls_sub($$this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return $$this.$sub3($other.$getX0(), $other.$getY0(), $other.$getZ());
}
function oktm_IVec3$DefaultImpls_sub0($$this, $x, $y, $z) {
    return $$this.$set44($$this.$getX0() - $x, $$this.$getY0() - $y, $$this.$getZ() - $z);
}
function oktm_IVec3$DefaultImpls_scl($$this, $scalar) {
    return $$this.$set44($$this.$getX0() * $scalar, $$this.$getY0() * $scalar, $$this.$getZ() * $scalar);
}
function oktm_IVec3$DefaultImpls_len2($$this) {
    return $$this.$getX0() * $$this.$getX0() + $$this.$getY0() * $$this.$getY0() + $$this.$getZ() * $$this.$getZ();
}
function oktm_IVec3$DefaultImpls_dst2($$this, $other) {
    var $a, $b, $c;
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    $a = $other.$getX0() - $$this.$getX0();
    $b = $other.$getY0() - $$this.$getY0();
    $c = $other.$getZ() - $$this.$getZ();
    return $a * $a + $b * $b + $c * $c;
}
function oktm_IVec3$DefaultImpls_nor($$this) {
    var $len2;
    $len2 = $$this.$len22();
    if ($len2 !== 0.0 && $len2 !== 1.0)
        $$this = $$this.$scl(1.0 / jl_Math_sqrt($len2));
    return $$this;
}
function oktm_IVec3$DefaultImpls_dot($$this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return $$this.$getX0() * $other.$getX0() + $$this.$getY0() * $other.$getY0() + $$this.$getZ() * $other.$getZ();
}
function oktm_IVec3$DefaultImpls_crs($$this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return $$this.$set44($$this.$getY0() * $other.$getZ() - $$this.$getZ() * $other.$getY0(), $$this.$getZ() * $other.$getX0() - $$this.$getX0() * $other.$getZ(), $$this.$getX0() * $other.$getY0() - $$this.$getY0() * $other.$getX0());
}
function oktm_IVec3$DefaultImpls_crs0($$this, $x, $y, $z) {
    return $$this.$set44($$this.$getY0() * $z - $$this.$getZ() * $y, $$this.$getZ() * $x - $$this.$getX0() * $z, $$this.$getX0() * $y - $$this.$getY0() * $x);
}
function oktm_IVec3$DefaultImpls_mul($$this, $mat) {
    var $values, var$4, var$5, var$6, var$7, var$8;
    kji_Intrinsics_checkParameterIsNotNull($mat, $rt_s(516));
    $values = $mat.$getValues();
    var$4 = $values.data;
    var$5 = $$this.$getX0() * var$4[0] + $$this.$getY0() * var$4[4] + $$this.$getZ() * var$4[8] + var$4[12];
    var$6 = $$this.$getX0();
    var$6 = var$6 * var$4[1] + $$this.$getY0() * var$4[5] + $$this.$getZ() * var$4[9] + var$4[13];
    var$7 = $$this.$getX0() * var$4[2];
    var$8 = $$this.$getY0();
    var$8 = var$8 * var$4[6];
    var$7 = var$7 + var$8;
    var$7 = var$7 + $$this.$getZ() * var$4[10] + var$4[14];
    return $$this.$set44(var$5, var$6, var$7);
}
function oktm_IVec3$DefaultImpls_rotate($$this, $radians, $axisX, $axisY, $axisZ) {
    oktm_IVec3_$callClinit();
    return $$this.$mul0(oktm_IVec3$Companion_access$getTmpMat$p(oktm_IVec3_Companion).$setToRotation0($axisX, $axisY, $axisZ, $radians));
}
function oktm_IVec3$DefaultImpls_lerp($$this, $target, $alpha) {
    kji_Intrinsics_checkParameterIsNotNull($target, $rt_s(1101));
    $$this.$setX0($$this.$getX0() + $alpha * ($target.$getX0() - $$this.$getX0()));
    $$this.$setY0($$this.$getY0() + $alpha * ($target.$getY0() - $$this.$getY0()));
    $$this.$setZ($$this.$getZ() + $alpha * ($target.$getZ() - $$this.$getZ()));
    return $$this;
}
function kr_Random$Default() {
    kr_Random.call(this);
}
function kr_Random$Default__init_0() {
    var var_0 = new kr_Random$Default();
    kr_Random$Default__init_1(var_0);
    return var_0;
}
function kr_Random$Default__init_(var_0) {
    var var_1 = new kr_Random$Default();
    kr_Random$Default__init_2(var_1, var_0);
    return var_1;
}
function kr_Random$Default_nextBits($this, $bitCount) {
    return kr_Random_access$getDefaultRandom$cp().$nextBits($bitCount);
}
function kr_Random$Default_nextFloat($this) {
    return kr_Random_access$getDefaultRandom$cp().$nextFloat();
}
function kr_Random$Default__init_1($this) {
    kr_Random__init_0($this);
}
function kr_Random$Default__init_2($this, $$constructor_marker) {
    kr_Random$Default__init_1($this);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
}
function oktsg_IShaderNode$DefaultImpls() {
    jl_Object.call(this);
}
function oktsg_IShaderNode$DefaultImpls_getShader($$this) {
    var var$2;
    var$2 = $$this.$getShaderOrNull();
    if (var$2 === null)
        kji_Intrinsics_throwNpe();
    return var$2;
}
function jnc_CoderResult() {
    var a = this; jl_Object.call(a);
    a.$kind = 0;
    a.$length5 = 0;
}
var jnc_CoderResult_UNDERFLOW = null;
var jnc_CoderResult_OVERFLOW = null;
function jnc_CoderResult_$callClinit() {
    jnc_CoderResult_$callClinit = $rt_eraseClinit(jnc_CoderResult);
    jnc_CoderResult__clinit_();
}
function jnc_CoderResult__init_(var_0, var_1) {
    var var_2 = new jnc_CoderResult();
    jnc_CoderResult__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnc_CoderResult__init_0($this, $kind, $length) {
    jnc_CoderResult_$callClinit();
    jl_Object__init_0($this);
    $this.$kind = $kind;
    $this.$length5 = $length;
}
function jnc_CoderResult_isUnderflow($this) {
    return $this.$kind ? 0 : 1;
}
function jnc_CoderResult_isOverflow($this) {
    return $this.$kind != 1 ? 0 : 1;
}
function jnc_CoderResult_isError($this) {
    return !$this.$isMalformed() && !$this.$isUnmappable() ? 0 : 1;
}
function jnc_CoderResult_isMalformed($this) {
    return $this.$kind != 2 ? 0 : 1;
}
function jnc_CoderResult_isUnmappable($this) {
    return $this.$kind != 3 ? 0 : 1;
}
function jnc_CoderResult_length($this) {
    if ($this.$isError())
        return $this.$length5;
    $rt_throw(jl_UnsupportedOperationException__init_0());
}
function jnc_CoderResult_malformedForLength($length) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult__init_(2, $length);
}
function jnc_CoderResult_throwException($this) {
    switch ($this.$kind) {
        case 0:
            $rt_throw(jnc_BufferUnderflowException__init_());
        case 1:
            $rt_throw(jnc_BufferOverflowException__init_());
        case 2:
            $rt_throw(jnc_MalformedInputException__init_($this.$length5));
        case 3:
            $rt_throw(jnc_UnmappableCharacterException__init_($this.$length5));
        default:
    }
}
function jnc_CoderResult__clinit_() {
    jnc_CoderResult_UNDERFLOW = jnc_CoderResult__init_(0, 0);
    jnc_CoderResult_OVERFLOW = jnc_CoderResult__init_(1, 0);
}
function oooi_DxQuickStep$DJointWithInfo1() {
    var a = this; jl_Object.call(a);
    a.$joint0 = null;
    a.$info1 = null;
}
function oooi_DxQuickStep$DJointWithInfo1__init_() {
    var var_0 = new oooi_DxQuickStep$DJointWithInfo1();
    oooi_DxQuickStep$DJointWithInfo1__init_0(var_0);
    return var_0;
}
function oooi_DxQuickStep$DJointWithInfo1__init_1(var_0) {
    var var_1 = new oooi_DxQuickStep$DJointWithInfo1();
    oooi_DxQuickStep$DJointWithInfo1__init_2(var_1, var_0);
    return var_1;
}
function oooi_DxQuickStep$DJointWithInfo1__init_0($this) {
    jl_Object__init_0($this);
    $this.$info1 = oooij_DxJoint$Info1__init_();
}
function oooi_DxQuickStep$DJointWithInfo1__init_2($this, $x0) {
    oooi_DxQuickStep$DJointWithInfo1__init_0($this);
}
function oooi_CollideCylinderTrimesh$sLocalContactData() {
    var a = this; jl_Object.call(a);
    a.$vPos = null;
    a.$vNormal = null;
    a.$fDepth = 0.0;
    a.$triIndex = 0;
    a.$nFlags = 0;
}
function oooi_CollideCylinderTrimesh$sLocalContactData__init_0() {
    var var_0 = new oooi_CollideCylinderTrimesh$sLocalContactData();
    oooi_CollideCylinderTrimesh$sLocalContactData__init_1(var_0);
    return var_0;
}
function oooi_CollideCylinderTrimesh$sLocalContactData__init_(var_0) {
    var var_1 = new oooi_CollideCylinderTrimesh$sLocalContactData();
    oooi_CollideCylinderTrimesh$sLocalContactData__init_2(var_1, var_0);
    return var_1;
}
function oooi_CollideCylinderTrimesh$sLocalContactData__init_1($this) {
    jl_Object__init_0($this);
    $this.$vPos = oom_DVector3__init_();
    $this.$vNormal = oom_DVector3__init_();
}
function oooi_CollideCylinderTrimesh$sLocalContactData__init_2($this, $x0) {
    oooi_CollideCylinderTrimesh$sLocalContactData__init_1($this);
}
function oktm_Frustum() {
    var a = this; jl_Object.call(a);
    a.$planes = null;
    a.$points = null;
}
var oktm_Frustum_clipSpacePlanePoints = null;
var oktm_Frustum_Companion = null;
function oktm_Frustum_$callClinit() {
    oktm_Frustum_$callClinit = $rt_eraseClinit(oktm_Frustum);
    oktm_Frustum__clinit_();
}
function oktm_Frustum__init_0() {
    var var_0 = new oktm_Frustum();
    oktm_Frustum__init_1(var_0);
    return var_0;
}
function oktm_Frustum__init_(var_0) {
    var var_1 = new oktm_Frustum();
    oktm_Frustum__init_2(var_1, var_0);
    return var_1;
}
function oktm_Frustum_getPoints($this) {
    return $this.$points;
}
function oktm_Frustum_update($this, $inverseViewProjection) {
    var $i, var$3, $point;
    kji_Intrinsics_checkParameterIsNotNull($inverseViewProjection, $rt_s(1316));
    $i = 0;
    var$3 = oktm_Frustum_clipSpacePlanePoints.data.length;
    while ($i < var$3) {
        $point = $this.$points.$get1($i);
        $point.$set11(oktm_Frustum_clipSpacePlanePoints.data[$i]);
        $inverseViewProjection.$project0($point, $point);
        $i = $i + 1 | 0;
    }
    oktm_Plane_set($this.$planes.data[0], $this.$points.$get1(1), $this.$points.$get1(0), $this.$points.$get1(2));
    oktm_Plane_set($this.$planes.data[1], $this.$points.$get1(4), $this.$points.$get1(5), $this.$points.$get1(7));
    oktm_Plane_set($this.$planes.data[2], $this.$points.$get1(0), $this.$points.$get1(4), $this.$points.$get1(3));
    oktm_Plane_set($this.$planes.data[3], $this.$points.$get1(5), $this.$points.$get1(1), $this.$points.$get1(6));
    oktm_Plane_set($this.$planes.data[4], $this.$points.$get1(2), $this.$points.$get1(3), $this.$points.$get1(6));
    oktm_Plane_set($this.$planes.data[5], $this.$points.$get1(4), $this.$points.$get1(0), $this.$points.$get1(1));
}
function oktm_Frustum__init_1($this) {
    var var$1, var$2, var$3, $i;
    oktm_Frustum_$callClinit();
    jl_Object__init_0($this);
    var$1 = $rt_createArray(oktm_Plane, 6);
    var$2 = 0;
    while (var$2 < 6) {
        var$1.data[var$2] = oktm_Plane__init_(oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null), 0.0);
        var$2 = var$2 + 1 | 0;
    }
    $this.$planes = var$1;
    var$3 = ju_ArrayList__init_();
    $i = 0;
    while ($i < 8) {
        var$3.$add1(oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null));
        $i = $i + 1 | 0;
    }
    $this.$points = var$3;
}
function oktm_Frustum__init_2($this, $inverseProjectionView) {
    oktm_Frustum_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($inverseProjectionView, $rt_s(1248));
    oktm_Frustum__init_1($this);
    oktm_Frustum_update($this, $inverseProjectionView);
}
function oktm_Frustum__clinit_() {
    var var$1, var$2;
    oktm_Frustum_Companion = oktm_Frustum$Companion__init_1(null);
    var$1 = $rt_createArray(oktm_Vec3, 8);
    var$2 = var$1.data;
    var$2[0] = oktm_Vec3__init_0((-1.0), (-1.0), (-1.0));
    var$2[1] = oktm_Vec3__init_0(1.0, (-1.0), (-1.0));
    var$2[2] = oktm_Vec3__init_0(1.0, 1.0, (-1.0));
    var$2[3] = oktm_Vec3__init_0((-1.0), 1.0, (-1.0));
    var$2[4] = oktm_Vec3__init_0((-1.0), (-1.0), 1.0);
    var$2[5] = oktm_Vec3__init_0(1.0, (-1.0), 1.0);
    var$2[6] = oktm_Vec3__init_0(1.0, 1.0, 1.0);
    var$2[7] = oktm_Vec3__init_0((-1.0), 1.0, 1.0);
    oktm_Frustum_clipSpacePlanePoints = var$1;
}
function oktga_ActionTrack() {
    var a = this; jl_Object.call(a);
    a.$times1 = null;
    a.$duration2 = 0.0;
    a.$actions = null;
}
function oktga_ActionTrack__init_() {
    var var_0 = new oktga_ActionTrack();
    oktga_ActionTrack__init_0(var_0);
    return var_0;
}
function oktga_ActionTrack_getTimes($this) {
    return $this.$times1;
}
function oktga_ActionTrack_getDuration($this) {
    return $this.$duration2;
}
function oktga_ActionTrack_getActions($this) {
    return $this.$actions;
}
function oktga_ActionTrack__init_0($this) {
    jl_Object__init_0($this);
    $this.$times1 = ju_ArrayList__init_();
    $this.$actions = ju_ArrayList__init_();
}
function otjt_Int32Array() {
    otjt_ArrayBufferView.call(this);
}
function oooig_GimContact() {
    var a = this; jl_Object.call(a);
    a.$m_point = null;
    a.$m_normal = null;
    a.$m_depth = 0.0;
    a.$m_handle1 = null;
    a.$m_handle2 = null;
    a.$m_feature1 = 0;
    a.$m_feature2 = 0;
}
function oooig_GimContact__init_() {
    var var_0 = new oooig_GimContact();
    oooig_GimContact__init_0(var_0);
    return var_0;
}
function oooig_GimContact__init_0($this) {
    jl_Object__init_0($this);
    $this.$m_point = oooig_GimGeometry$vec3f__init_();
    $this.$m_normal = oooig_GimGeometry$vec3f__init_();
}
function oooig_GimContact_getPoint($this) {
    return $this.$m_point;
}
function oooig_GimContact_getNormal($this) {
    return $this.$m_normal;
}
function oooig_GimContact_getDepth($this) {
    return $this.$m_depth;
}
function oooig_GimContact_getFeature1($this) {
    return $this.$m_feature1;
}
function oooig_GimContact_getFeature2($this) {
    return $this.$m_feature2;
}
function oooig_GimContact_GIM_CALC_KEY_CONTACT($pos) {
    var $_coords1, $_coords2, $_coords3, var$5;
    $_coords1 = $pos.$f.data[0] * 1000.0 + 1.0 | 0;
    $_coords2 = $pos.$f.data[1] * 1333.0 | 0;
    $_coords3 = $pos.$f.data[2] * 2133.0 + 3.0 | 0;
    var$5 = $_coords1 + ($_coords2 << 4) | 0;
    var$5 = var$5 + ($_coords3 << 8) | 0;
    return var$5;
}
function oooig_GimContact_GIM_CREATE_CONTACT_LIST() {
    return oooig_GimDynArray_GIM_DYNARRAY_CREATE(100);
}
function oooig_GimContact_GIM_PUSH_CONTACT0($contact_array, $point, $normal, $deep, $handle1, $handle2, $feat1, $feat2) {
    var $_last;
    $_last = oooig_GimContact__init_();
    oooig_GimGeometry_VEC_COPY($_last.$m_point, $point);
    oooig_GimGeometry_VEC_COPY($_last.$m_normal, $normal);
    $_last.$m_depth = $deep;
    $_last.$m_handle1 = $handle1;
    $_last.$m_handle2 = $handle2;
    $_last.$m_feature1 = $feat1;
    $_last.$m_feature2 = $feat2;
    $contact_array.$GIM_DYNARRAY_PUSH_ITEM_TZ($_last);
}
function oooig_GimContact_GIM_PUSH_CONTACT($contact_array, $point, $normal, $deep, $handle1, $handle2, $feat1, $feat2) {
    var $_last;
    $_last = oooig_GimContact__init_();
    oooig_GimGeometry_VEC_COPY($_last.$m_point, $point);
    oooig_GimGeometry_VEC_COPY0($_last.$m_normal, $normal);
    $_last.$m_depth = $deep;
    $_last.$m_handle1 = $handle1;
    $_last.$m_handle2 = $handle2;
    $_last.$m_feature1 = $feat1;
    $_last.$m_feature2 = $feat2;
    $contact_array.$GIM_DYNARRAY_PUSH_ITEM_TZ($_last);
}
function oooig_GimContact_GIM_COPY_CONTACTS($dest_contact, $source_contact) {
    oooig_GimGeometry_VEC_COPY($dest_contact.$m_point, $source_contact.$m_point);
    oooig_GimGeometry_VEC_COPY($dest_contact.$m_normal, $source_contact.$m_normal);
    $dest_contact.$m_depth = $source_contact.$m_depth;
    $dest_contact.$m_handle1 = $source_contact.$m_handle1;
    $dest_contact.$m_handle2 = $source_contact.$m_handle2;
    $dest_contact.$m_feature1 = $source_contact.$m_feature1;
    $dest_contact.$m_feature2 = $source_contact.$m_feature2;
}
function oooig_GimContact_gim_merge_contacts($source_contacts, $dest_contacts) {
    var $source_count, $psource_contacts, $keycontacts, $i, var$7, $pcontact, $last_key, var$10, $key, var$12;
    $dest_contacts.$m_size = 0;
    $source_count = $source_contacts.$size();
    $psource_contacts = $source_contacts.$GIM_DYNARRAY_POINTER_V();
    $keycontacts = $rt_createArray(oooig_GimRadixSort$GIM_RSORT_TOKEN, $source_count);
    $i = 0;
    while ($i < $source_count) {
        $keycontacts.data[$i] = oooig_GimRadixSort$GIM_RSORT_TOKEN__init_();
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < $source_count) {
        var$7 = $keycontacts.data;
        var$7[$i].$m_value = $i;
        var$7[$i].$m_key = Long_fromInt(oooig_GimContact_GIM_CALC_KEY_CONTACT($psource_contacts.$at($i).$m_point));
        $i = $i + 1 | 0;
    }
    oooig_GimRadixSort_$callClinit();
    oooig_GimRadixSort_GIM_QUICK_SORT_ARRAY($keycontacts, $source_count, oooig_GimRadixSort_RSORT_TOKEN_COMPARATOR, oooig_GimRadixSort_GIM_DEF_EXCHANGE_MACRO);
    $pcontact = null;
    $last_key = Long_ZERO;
    var$10 = 0;
    while (var$10 < $source_contacts.$size()) {
        var$7 = $keycontacts.data;
        $key = var$7[var$10].$m_key;
        var$12 = $psource_contacts.$at(var$7[var$10].$m_value);
        if (!(var$10 > 0 && Long_eq($last_key, $key))) {
            $pcontact = oooig_GimContact__init_();
            oooig_GimContact_GIM_COPY_CONTACTS($pcontact, var$12);
            $dest_contacts.$GIM_DYNARRAY_PUSH_ITEM_TZ($pcontact);
        } else if ($pcontact.$m_depth > var$12.$m_depth + 9.999999747378752E-6)
            oooig_GimContact_GIM_COPY_CONTACTS($pcontact, var$12);
        var$10 = var$10 + 1 | 0;
        $last_key = $key;
    }
}
function oktgn_PreviousTRS() {
    oktgn_AdapterTransformNode.call(this);
    this.$worldMatrix0 = null;
}
function oktgn_PreviousTRS__init_() {
    var var_0 = new oktgn_PreviousTRS();
    oktgn_PreviousTRS__init_0(var_0);
    return var_0;
}
function oktgn_PreviousTRS_getWorldMatrix($this) {
    return $this.$worldMatrix0;
}
function oktgn_PreviousTRS_set($this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    oktgn_PreviousTRS_getWorldMatrix($this).$set3($other.$getWorldMatrix());
    return $this;
}
function oktgn_PreviousTRS_set0(var$0, var$1) {
    return oktgn_PreviousTRS_set(var$0, var$1);
}
function oktgn_PreviousTRS__init_0($this) {
    oktgn_AdapterTransformNode__init_0($this);
    oktm_IMat4_$callClinit();
    $this.$worldMatrix0 = oktm_IMat4$Companion_getBuild(oktm_IMat4_Companion).$invoke6();
}
function oktm_IVertexInputs$DefaultImpls() {
    jl_Object.call(this);
}
function oktm_IVertexInputs$DefaultImpls_getFloatsPerVertex($$this) {
    return $$this.$getBytesPerVertex() / 4 | 0;
}
function oktm_IVertexInputs$DefaultImpls_floatOffsetOf($$this, $name) {
    var var$3;
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    var$3 = $$this.$get19($name);
    if (var$3 === null)
        kji_Intrinsics_throwNpe();
    return var$3.$getByteOffset() / 4 | 0;
}
function oktm_IndexBufferObject() {
    var a = this; jl_Object.call(a);
    a.$handle1 = 0;
    a.$isBufferNeedReload1 = 0;
    a.$type6 = 0;
    a.$bytes2 = null;
    a.$usage0 = 0;
}
var oktm_IndexBufferObject_Companion = null;
function oktm_IndexBufferObject_$callClinit() {
    oktm_IndexBufferObject_$callClinit = $rt_eraseClinit(oktm_IndexBufferObject);
    oktm_IndexBufferObject__clinit_();
}
function oktm_IndexBufferObject__init_0(var_0, var_1, var_2, var_3) {
    var var_4 = new oktm_IndexBufferObject();
    oktm_IndexBufferObject__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktm_IndexBufferObject__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktm_IndexBufferObject();
    oktm_IndexBufferObject__init_2(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktm_IndexBufferObject_getHandle($this) {
    return $this.$handle1;
}
function oktm_IndexBufferObject_setHandle($this, $_set___) {
    $this.$handle1 = $_set___;
}
function oktm_IndexBufferObject_getBytesPerIndex($this) {
    var var$1;
    a: {
        b: {
            switch (oktm_IndexBufferObject_getType($this)) {
                case 5121:
                    break;
                case 5122:
                case 5124:
                    break b;
                case 5123:
                    var$1 = 2;
                    break a;
                case 5125:
                    var$1 = 4;
                    break a;
                default:
                    break b;
            }
            var$1 = 1;
            break a;
        }
        var$1 = 0;
    }
    return var$1;
}
function oktm_IndexBufferObject_getType($this) {
    return $this.$type6;
}
function oktm_IndexBufferObject_setType($this, $value) {
    if ($value != 5121 && $value != 5123 && $value != 5125)
        $rt_throw(jl_RuntimeException__init_($rt_s(1317)));
    $this.$type6 = $value;
}
function oktm_IndexBufferObject_initGpuObjects($this) {
    oktg_GL_$callClinit();
    oktm_IndexBufferObject_setHandle($this, oktg_GL_glGenBuffer(oktg_GL_INSTANCE));
    $this.$isBufferNeedReload1 = 1;
}
function oktm_IndexBufferObject_loadBufferToGpu($this) {
    oktg_GL_$callClinit();
    oktg_GL_glBufferData(oktg_GL_INSTANCE, 34963, oktm_IndexBufferObject_getBytes($this).$getSize(), oktm_IndexBufferObject_getBytes($this), $this.$usage0);
    $this.$isBufferNeedReload1 = 0;
}
function oktm_IndexBufferObject_bind($this) {
    if (oktm_IndexBufferObject_getHandle($this)) {
        oktg_GL_$callClinit();
        oktg_GL_glBindBuffer(oktg_GL_INSTANCE, 34963, oktm_IndexBufferObject_getHandle($this));
        if ($this.$isBufferNeedReload1)
            oktm_IndexBufferObject_loadBufferToGpu($this);
    }
}
function oktm_IndexBufferObject_getBytes($this) {
    return $this.$bytes2;
}
function oktm_IndexBufferObject_setBytes($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$bytes2 = $_set___;
}
function oktm_IndexBufferObject__init_1($this, $bytes, $type, $usage, $initGpuObjects) {
    oktm_IndexBufferObject_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($bytes, $rt_s(8));
    jl_Object__init_0($this);
    $this.$bytes2 = $bytes;
    $this.$usage0 = $usage;
    $this.$isBufferNeedReload1 = 1;
    oktm_IndexBufferObject_setType($this, $type);
    if ($initGpuObjects)
        oktm_IndexBufferObject_initGpuObjects($this);
}
function oktm_IndexBufferObject__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6) {
    oktm_IndexBufferObject_$callClinit();
    if (var$5 & 2)
        var$2 = 5123;
    if (var$5 & 4)
        var$3 = 35044;
    if (var$5 & 8)
        var$4 = 1;
    oktm_IndexBufferObject__init_1(var$0, var$1, var$2, var$3, var$4);
}
function oktm_IndexBufferObject__clinit_() {
    oktm_IndexBufferObject_Companion = oktm_IndexBufferObject$Companion__init_(null);
}
function oktm_IndexBufferObject_getSize($this) {
    return oktm_IIndexBufferObject$DefaultImpls_getSize($this);
}
function oktm_IndexBufferObject_getSizeInBytes($this) {
    return oktm_IIndexBufferObject$DefaultImpls_getSizeInBytes($this);
}
function ju_HashMap$EntryIterator() {
    ju_HashMap$AbstractMapIterator.call(this);
}
function ju_HashMap$EntryIterator__init_(var_0) {
    var var_1 = new ju_HashMap$EntryIterator();
    ju_HashMap$EntryIterator__init_0(var_1, var_0);
    return var_1;
}
function ju_HashMap$EntryIterator__init_0($this, $map) {
    ju_HashMap$AbstractMapIterator__init_0($this, $map);
}
function ju_HashMap$EntryIterator_next($this) {
    ju_HashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry1;
}
function ju_HashMap$EntryIterator_next0($this) {
    return $this.$next6();
}
function ju_Collections() {
    jl_Object.call(this);
}
var ju_Collections_EMPTY_SET = null;
var ju_Collections_EMPTY_MAP = null;
var ju_Collections_EMPTY_LIST = null;
var ju_Collections_naturalOrder = null;
var ju_Collections_reverseOrder = null;
function ju_Collections_$callClinit() {
    ju_Collections_$callClinit = $rt_eraseClinit(ju_Collections);
    ju_Collections__clinit_();
}
function ju_Collections__init_() {
    var var_0 = new ju_Collections();
    ju_Collections__init_0(var_0);
    return var_0;
}
function ju_Collections__init_0($this) {
    ju_Collections_$callClinit();
    jl_Object__init_0($this);
}
function ju_Collections_emptyList() {
    ju_Collections_$callClinit();
    return ju_Collections$3__init_();
}
function ju_Collections_emptySet() {
    ju_Collections_$callClinit();
    return ju_Collections$5__init_();
}
function ju_Collections_emptyMap() {
    ju_Collections_$callClinit();
    return ju_Collections$6__init_();
}
function ju_Collections_singletonList($o) {
    ju_Collections_$callClinit();
    return ju_Collections$7__init_($o);
}
function ju_Collections_sort($list, $c) {
    var $array, $i, var$5;
    ju_Collections_$callClinit();
    if ($c === null)
        $c = ju_Collections_naturalOrder;
    $array = $rt_createArray(jl_Object, $list.$size());
    $list.$toArray0($array);
    ju_Arrays_sort($array, $c);
    $i = 0;
    while (true) {
        var$5 = $array.data;
        if ($i >= var$5.length)
            break;
        $list.$set38($i, var$5[$i]);
        $i = $i + 1 | 0;
    }
}
function ju_Collections_lambda$static$0($o1, $o2) {
    var var$3, var$4;
    ju_Collections_$callClinit();
    if ($o1 !== null) {
        var$3 = $o1;
        var$4 = var$3.$compareTo6($o2);
    } else {
        var$3 = $o2;
        var$4 =  -var$3.$compareTo6($o1);
    }
    return var$4;
}
function ju_Collections__clinit_() {
    ju_Collections_EMPTY_SET = ju_Collections_emptySet();
    ju_Collections_EMPTY_MAP = ju_Collections_emptyMap();
    ju_Collections_EMPTY_LIST = ju_Collections_emptyList();
    ju_Collections_naturalOrder = ju_Collections$_clinit_$lambda$_61_0__init_();
    ju_Collections_reverseOrder = ju_Collections$_clinit_$lambda$_61_1__init_();
}
function oooi_AbstractStepper() {
    jl_Object.call(this);
}
function oooi_AbstractStepper__init_() {
    var var_0 = new oooi_AbstractStepper();
    oooi_AbstractStepper__init_0(var_0);
    return var_0;
}
function oooi_AbstractStepper__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_IShaderData$DefaultImpls() {
    jl_Object.call(this);
}
function oktsg_IShaderData$DefaultImpls_getRef($$this) {
    return !$$this.$getScope() ? $$this.$getInlineCode() : jl_StringBuilder__init_().$append($$this.$getName()).$append1($$this.$getUid()).$toString();
}
function oktsg_IShaderData$DefaultImpls_isUsed($$this) {
    return $$this.$getConnectedTo0().$isEmpty() ? 0 : 1;
}
function oktsg_IShaderData$DefaultImpls_getTypeStr($$this) {
    var var$2;
    a: {
        b: {
            switch ($$this.$getType()) {
                case 0:
                    break;
                case 1:
                    var$2 = $rt_s(1318);
                    break a;
                case 2:
                case 10:
                    break b;
                case 3:
                    var$2 = $rt_s(1319);
                    break a;
                case 4:
                    var$2 = $rt_s(1320);
                    break a;
                case 5:
                    var$2 = $rt_s(1321);
                    break a;
                case 6:
                    var$2 = $rt_s(1322);
                    break a;
                case 7:
                    var$2 = $rt_s(1323);
                    break a;
                case 8:
                    var$2 = $rt_s(1324);
                    break a;
                case 9:
                    var$2 = $rt_s(1325);
                    break a;
                case 11:
                    var$2 = $rt_s(1326);
                    break a;
                case 12:
                    var$2 = $rt_s(1327);
                    break a;
                case 13:
                    var$2 = $rt_s(1328);
                    break a;
                case 14:
                    var$2 = $rt_s(1329);
                    break a;
                case 15:
                    var$2 = $rt_s(1330);
                    break a;
                default:
                    break b;
            }
            var$2 = $rt_s(1331);
            break a;
        }
        var$2 = $rt_s(6);
    }
    return var$2;
}
function oktsg_IShaderData$DefaultImpls_getTypedRef($$this) {
    return jl_StringBuilder__init_().$append($$this.$getTypeStr0()).$append12(32).$append($$this.$getRef0()).$toString();
}
function ju_Enumeration() {
}
function oooig_GimTriCollision() {
    oooig_GimGeometry.call(this);
}
function oooig_GimTriCollision__init_() {
    var var_0 = new oooig_GimTriCollision();
    oooig_GimTriCollision__init_0(var_0);
    return var_0;
}
function oooig_GimTriCollision__init_0($this) {
    oooig_GimGeometry__init_0($this);
}
function oooig_GimTriCollision_PLANE_CLIP_POLYGON($plane, $polygon_points, $polygon_point_count, $clipped, $max_clipped) {
    var $clipped_count, $_prevclassif, $_i, var$9, var$10, $_vi, $_d, $_classif, var$14;
    $clipped_count = 0;
    $_prevclassif = 32000;
    $_i = 0;
    while (true) {
        var$9 = $rt_compare($_i, $polygon_point_count);
        if (var$9 > 0)
            break;
        var$10 = $polygon_points.data;
        $_vi = $_i % $polygon_point_count | 0;
        $_d = oooig_GimGeometry_DISTANCE_PLANE_POINT($plane, var$10[$_vi]);
        $_classif = $_d <= 1.0000000116860974E-7 ? 0 : 1;
        if ($_classif) {
            if (!$_prevclassif && $clipped_count < $max_clipped) {
                var$14 = $clipped.data;
                oooig_GimGeometry_PLANE_CLIP_SEGMENT(var$10[$_i - 1 | 0], var$10[$_vi], $plane, var$14[$clipped_count]);
                $clipped_count = $clipped_count + 1 | 0;
            }
            $_prevclassif = 1;
        } else {
            if ($_prevclassif == 1 && $clipped_count < $max_clipped) {
                var$14 = $clipped.data;
                oooig_GimGeometry_PLANE_CLIP_SEGMENT(var$10[$_i - 1 | 0], var$10[$_vi], $plane, var$14[$clipped_count]);
                $clipped_count = $clipped_count + 1 | 0;
            }
            if ($clipped_count < $max_clipped && var$9 < 0) {
                oooig_GimGeometry_VEC_COPY($clipped.data[$clipped_count], var$10[$_vi]);
                $clipped_count = $clipped_count + 1 | 0;
            }
            $_prevclassif = 0;
        }
        $_i = $_i + 1 | 0;
    }
    return $clipped_count;
}
function oooig_GimTriCollision_TRIANGLE_GET_UVPARAMETERS($point, $vec1, $vec2, $vec3, $tri_plane, $u, $v, $outside) {
    var $_axe1, $_axe2, $_vecproj, $_i1, $_i2, $sumuv;
    $_axe1 = oooig_GimGeometry$vec3f__init_();
    $_axe2 = oooig_GimGeometry$vec3f__init_();
    $_vecproj = oooig_GimGeometry$vec3f__init_();
    oooig_GimGeometry_VEC_DIFF($_axe1, $vec2, $vec1);
    oooig_GimGeometry_VEC_DIFF($_axe2, $vec3, $vec1);
    oooig_GimGeometry_VEC_DIFF($_vecproj, $point, $vec1);
    $_i1 = oooicj_RefInt__init_();
    $_i2 = oooicj_RefInt__init_();
    oooig_GimGeometry_PLANE_MINOR_AXES($tri_plane, $_i1, $_i2);
    if (jl_Math_abs0($_axe2.$f.data[$_i2.$i]) >= 1.0000000116860974E-7) {
        $u.$d0 = ($_vecproj.$f.data[$_i1.$i] * $_axe2.$f.data[$_i2.$i] - $_vecproj.$f.data[$_i2.$i] * $_axe2.$f.data[$_i1.$i]) / ($_axe1.$f.data[$_i1.$i] * $_axe2.$f.data[$_i2.$i] - $_axe1.$f.data[$_i2.$i] * $_axe2.$f.data[$_i1.$i]);
        $v.$d0 = ($_vecproj.$f.data[$_i2.$i] - $u.$d0 * $_axe1.$f.data[$_i2.$i]) / $_axe2.$f.data[$_i2.$i];
    } else {
        $u.$d0 = ($_vecproj.$f.data[$_i2.$i] * $_axe2.$f.data[$_i1.$i] - $_vecproj.$f.data[$_i1.$i] * $_axe2.$f.data[$_i2.$i]) / ($_axe1.$f.data[$_i2.$i] * $_axe2.$f.data[$_i1.$i] - $_axe1.$f.data[$_i1.$i] * $_axe2.$f.data[$_i2.$i]);
        $v.$d0 = ($_vecproj.$f.data[$_i1.$i] - $u.$d0 * $_axe1.$f.data[$_i1.$i]) / $_axe2.$f.data[$_i1.$i];
    }
    if ($u.$d0 < (-1.0000000116860974E-7))
        $outside.$b = 1;
    else if ($v.$d0 < (-1.0000000116860974E-7))
        $outside.$b = 1;
    else {
        $sumuv = $u.$d0 + $v.$d0;
        if ($sumuv < (-1.0000000116860974E-7))
            $outside.$b = 1;
        else if ($sumuv - 1.0 <= 1.0000000116860974E-7)
            $outside.$b = 0;
        else
            $outside.$b = 1;
    }
}
function oooig_GimTriCollision_RAY_TRIANGLE_INTERSECTION($vOrigin, $vDir, $vec1, $vec2, $vec3, $tri_plane, $pout, $u, $v, $tparam, $tmax, $does_intersect) {
    oooig_GimGeometry_RAY_PLANE_COLLISION($tri_plane, $vDir, $vOrigin, $pout, $tparam, $does_intersect);
    if ($does_intersect.$b) {
        if ($tparam.$d0 >= (-1.0000000116860974E-7) && $tparam.$d0 <= $tmax + 1.0000000116860974E-7) {
            oooig_GimTriCollision_TRIANGLE_GET_UVPARAMETERS($pout, $vec1, $vec2, $vec3, $tri_plane, $u, $v, $does_intersect);
            $does_intersect.$b = $does_intersect.$b ? 0 : 1;
        } else
            $does_intersect.$b = 0;
    }
}
function oktpo_OdeBoxShape() {
    var a = this; oktpo_OdeGeom.call(a);
    a.$box = null;
    a.$friction2 = 0.0;
    a.$userObject2 = null;
}
function oktpo_OdeBoxShape__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new oktpo_OdeBoxShape();
    oktpo_OdeBoxShape__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktpo_OdeBoxShape_getGeom($this) {
    return $this.$box;
}
function oktpo_OdeBoxShape_getGeom0(var$0) {
    return oktpo_OdeBoxShape_getGeom(var$0);
}
function oktpo_OdeBoxShape_getFriction($this) {
    return $this.$friction2;
}
function oktpo_OdeBoxShape__init_0($this, $world, $xSize, $ySize, $zSize) {
    var var$5;
    kji_Intrinsics_checkParameterIsNotNull($world, $rt_s(563));
    oktpo_OdeGeom__init_0($this);
    $this.$box = ooo_OdeHelper_createBox(oktpo_OdePhysicsWorld_getSpace($world), $xSize, $ySize, $zSize);
    $this.$friction2 = 1.0;
    $this.$userObject2 = $this;
    var$5 = oktpo_OdeBoxShape_getGeom($this);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$5, $rt_s(1332));
    var$5.$setData($this);
}
function jl_Thread() {
    var a = this; jl_Object.call(a);
    a.$id0 = Long_ZERO;
    a.$timeSliceStart = Long_ZERO;
    a.$finishedLock = null;
    a.$name40 = null;
    a.$alive = 0;
    a.$target1 = null;
}
var jl_Thread_mainThread = null;
var jl_Thread_currentThread0 = null;
var jl_Thread_nextId = Long_ZERO;
var jl_Thread_activeCount = 0;
function jl_Thread_$callClinit() {
    jl_Thread_$callClinit = $rt_eraseClinit(jl_Thread);
    jl_Thread__clinit_();
}
function jl_Thread__init_() {
    var var_0 = new jl_Thread();
    jl_Thread__init_0(var_0);
    return var_0;
}
function jl_Thread__init_1(var_0) {
    var var_1 = new jl_Thread();
    jl_Thread__init_2(var_1, var_0);
    return var_1;
}
function jl_Thread__init_3(var_0, var_1) {
    var var_2 = new jl_Thread();
    jl_Thread__init_4(var_2, var_0, var_1);
    return var_2;
}
function jl_Thread__init_0($this) {
    jl_Thread_$callClinit();
    jl_Thread__init_4($this, null, null);
}
function jl_Thread__init_2($this, $name) {
    jl_Thread_$callClinit();
    jl_Thread__init_4($this, null, $name);
}
function jl_Thread__init_4($this, $target, $name) {
    var var$3;
    jl_Thread_$callClinit();
    jl_Object__init_0($this);
    $this.$finishedLock = jl_Object__init_();
    $this.$alive = 1;
    $this.$name40 = $name;
    $this.$target1 = $target;
    var$3 = jl_Thread_nextId;
    jl_Thread_nextId = Long_add(var$3, Long_fromInt(1));
    $this.$id0 = var$3;
}
function jl_Thread_setCurrentThread($thread_0) {
    jl_Thread_$callClinit();
    if (jl_Thread_currentThread0 !== $thread_0)
        jl_Thread_currentThread0 = $thread_0;
    jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
}
function jl_Thread_currentThread() {
    jl_Thread_$callClinit();
    return jl_Thread_currentThread0;
}
function jl_Thread_getStackTrace($this) {
    return $rt_createArray(jl_StackTraceElement, 0);
}
function jl_Thread__clinit_() {
    jl_Thread_mainThread = jl_Thread__init_1($rt_s(1333));
    jl_Thread_currentThread0 = jl_Thread_mainThread;
    jl_Thread_nextId = Long_fromInt(1);
    jl_Thread_activeCount = 1;
}
function jnc_BufferOverflowException() {
    jl_RuntimeException.call(this);
}
function jnc_BufferOverflowException__init_() {
    var var_0 = new jnc_BufferOverflowException();
    jnc_BufferOverflowException__init_0(var_0);
    return var_0;
}
function jnc_BufferOverflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0() {
    jl_Object.call(this);
    this.$function1 = null;
}
function oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0__init_(var_0) {
    var var_1 = new oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0();
    oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0__init_0(var_1, var_0);
    return var_1;
}
function oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$function1 = var$1;
}
function oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0_onAnimationFrame($this, $p0) {
    kji_Intrinsics_checkExpressionValueIsNotNull($this.$function1.$invoke1(jl_Double_valueOf($p0)), $rt_s(1334));
}
function oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0_onAnimationFrame$exported$0(var$0, var$1) {
    oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0_onAnimationFrame(var$0, var$1);
}
function okttp_TrimeshShapeTest() {
    jl_Object.call(this);
}
function okttp_TrimeshShapeTest__init_() {
    var var_0 = new okttp_TrimeshShapeTest();
    okttp_TrimeshShapeTest__init_0(var_0);
    return var_0;
}
function okttp_TrimeshShapeTest_getName($this) {
    return $rt_s(1335);
}
function okttp_TrimeshShapeTest_testMain($this) {
    var $world, var$2, var$3, var$4, $mesh, var$6, $plane, $dynamic, $static, $shader, var$11, var$12, $control, $tmp_0;
    oktp_PHYS_$callClinit();
    $world = oktp_PHYS_createWorld(oktp_PHYS_INSTANCE);
    $world.$setGravity0(0.0, (-2.0), 0.0);
    var$2 = oktmb_BoxMeshBuilder__init_0(1.0, 1.0, 1.0);
    oktmb_MeshBuilder_setPositionName(var$2, $rt_s(543));
    oktmb_MeshBuilder_setUvName(var$2, $rt_s(857));
    var$3 = null;
    var$4 = null;
    $mesh = oktmb_MeshBuilder_build$default(var$2, var$3, 1, var$4);
    var$4 = new oktmb_PlaneMeshBuilder;
    var$2 = null;
    okttp_TrimeshShapeTest$testMain$plane$1_$callClinit();
    var$6 = okttp_TrimeshShapeTest$testMain$plane$1_INSTANCE;
    var$3 = null;
    oktmb_PlaneMeshBuilder__init_0(var$4, 20.0, 20.0, 5, 5, var$2, var$6, 16, var$3);
    oktmb_MeshBuilder_setPositionName(var$4, $rt_s(543));
    oktmb_MeshBuilder_setUvName(var$4, $rt_s(857));
    var$2 = null;
    var$3 = null;
    $plane = oktmb_MeshBuilder_build$default(var$4, var$2, 1, var$3);
    $dynamic = $world.$rigidBody($world.$boxShape(1.0, 1.0, 1.0), 5.0);
    $dynamic.$setPosition1(0.0, 5.0, 0.0);
    $static = $world.$rigidBody($world.$trimeshShape5($plane, $rt_s(543)), 0.0);
    $static.$setPosition1(0.0, (-3.0), 0.0);
    $shader = new okts_Shader;
    var$6 = null;
    var$11 = null;
    var$12 = null;
    var$2 = null;
    okts_Shader__init_($shader, $rt_s(858), $rt_s(859), var$6, 0, var$11, 0, var$12, 124, var$2);
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_setApi(oktgc_ActiveCamera_INSTANCE, oktgc_Camera__init_(null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null));
    $control = new oktgc_OrbitCameraControl;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    oktgc_OrbitCameraControl__init_($control, 0.0, 2.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 0.0, var$2, 0, var$3, 8173, var$4);
    oktgc_OrbitCameraControl_listenToMouse($control);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, oktgc_OrbitCameraControl_getHelp($control), null, 2, null);
    $tmp_0 = oktm_Mat4__init_();
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttp_TrimeshShapeTest$testMain$1__init_($control, $world, $shader, $static, $tmp_0, $plane, $dynamic, $mesh), 1, null);
}
function okttp_TrimeshShapeTest__init_0($this) {
    jl_Object__init_0($this);
}
function kji_Ref$BooleanRef() {
    jl_Object.call(this);
    this.$element1 = 0;
}
function kji_Ref$BooleanRef__init_() {
    var var_0 = new kji_Ref$BooleanRef();
    kji_Ref$BooleanRef__init_0(var_0);
    return var_0;
}
function kji_Ref$BooleanRef__init_0($this) {
    jl_Object__init_0($this);
}
function jl_StringIndexOutOfBoundsException() {
    jl_IndexOutOfBoundsException.call(this);
}
function jl_StringIndexOutOfBoundsException__init_() {
    var var_0 = new jl_StringIndexOutOfBoundsException();
    jl_StringIndexOutOfBoundsException__init_0(var_0);
    return var_0;
}
function jl_StringIndexOutOfBoundsException__init_0($this) {
    jl_IndexOutOfBoundsException__init_1($this);
}
function jur_UCIBackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
}
function jur_UCIBackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_UCIBackReferenceSet();
    jur_UCIBackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_UCIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter);
}
function jur_UCIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $i, var$6, var$7;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $i = 0;
        while (true) {
            if ($i >= $group.$length()) {
                $matchResult.$setConsumed($this.$consCounter0, $group.$length());
                return $this.$next0.$matches($stringIndex + $group.$length() | 0, $testString, $matchResult);
            }
            var$6 = jl_Character_toLowerCase(jl_Character_toUpperCase($group.$charAt($i)));
            var$7 = $stringIndex + $i | 0;
            var$7 = jl_Character_toUpperCase($testString.$charAt(var$7));
            if (var$6 != jl_Character_toLowerCase(var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
}
function oktt_TeaVMApp$anim$1() {
    kji_Lambda.call(this);
}
var oktt_TeaVMApp$anim$1_INSTANCE = null;
function oktt_TeaVMApp$anim$1_$callClinit() {
    oktt_TeaVMApp$anim$1_$callClinit = $rt_eraseClinit(oktt_TeaVMApp$anim$1);
    oktt_TeaVMApp$anim$1__clinit_();
}
function oktt_TeaVMApp$anim$1__init_() {
    var var_0 = new oktt_TeaVMApp$anim$1();
    oktt_TeaVMApp$anim$1__init_0(var_0);
    return var_0;
}
function oktt_TeaVMApp$anim$1_invoke(var$0, var$1) {
    oktt_TeaVMApp$anim$1_invoke0(var$0, var$1.$doubleValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktt_TeaVMApp$anim$1_invoke0($this, $it) {
    return;
}
function oktt_TeaVMApp$anim$1__init_0(var$0) {
    oktt_TeaVMApp$anim$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktt_TeaVMApp$anim$1__clinit_() {
    oktt_TeaVMApp$anim$1_INSTANCE = oktt_TeaVMApp$anim$1__init_();
}
function oooi_CollideTrimeshSphere() {
    jl_Object.call(this);
}
function oooi_CollideTrimeshSphere__init_() {
    var var_0 = new oooi_CollideTrimeshSphere();
    oooi_CollideTrimeshSphere__init_0(var_0);
    return var_0;
}
function oooi_CollideTrimeshSphere__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollideTrimeshSphere_dCollideSTL($this, $g1, $SphereGeom, $Flags, $Contacts, $Stride) {
    var var$6, $Position, $Radius, $trimeshcontacts, $ptrimeshcontacts, $contactcount, $i, $pcontact;
    oooi_Common_dIASSERT($Stride != 1 ? 0 : 1);
    var$6 = $Flags & 65535;
    oooi_Common_dIASSERT(var$6 < 1 ? 0 : 1);
    $Position = $SphereGeom.$getPosition2();
    $Radius = $SphereGeom.$getRadius();
    $trimeshcontacts = oooig_GimContact_GIM_CREATE_CONTACT_LIST();
    $g1.$recomputeAABB();
    $SphereGeom.$recomputeAABB();
    oooi_DxGimpactCollision_gim_trimesh_sphere_collisionODE($g1.$m_collision_trimesh, $Position, $Radius, $trimeshcontacts);
    if (!$trimeshcontacts.$size()) {
        $trimeshcontacts.$GIM_DYNARRAY_DESTROY();
        return 0;
    }
    $ptrimeshcontacts = $trimeshcontacts.$GIM_DYNARRAY_POINTER_V();
    $contactcount = $trimeshcontacts.$size();
    if ($contactcount <= var$6)
        var$6 = $contactcount;
    else {
        ooo_OdeConfig_$callClinit();
        if (ooo_OdeConfig_ENABLE_CONTACT_SORTING)
            ju_Arrays_sort0($trimeshcontacts.$GIM_DYNARRAY_POINTER(), 0, $contactcount, oooi_CollideTrimeshSphere$1__init_($this));
    }
    $i = 0;
    while ($i < var$6) {
        $pcontact = ooo_DContactGeomBuffer_getSafe($Contacts, $Flags, $i);
        $pcontact.$pos0.$set14($ptrimeshcontacts.$at0().$getPoint().$f);
        $pcontact.$normal.$set14($ptrimeshcontacts.$at0().$getNormal1().$f);
        $pcontact.$depth = $ptrimeshcontacts.$at0().$getDepth0();
        $pcontact.$g1 = $g1;
        $pcontact.$g2 = $SphereGeom;
        $pcontact.$side1 = $ptrimeshcontacts.$at0().$getFeature1();
        $pcontact.$side2 = (-1);
        $ptrimeshcontacts.$inc0();
        $i = $i + 1 | 0;
    }
    $trimeshcontacts.$GIM_DYNARRAY_DESTROY();
    return var$6;
}
function oooi_CollideTrimeshSphere_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideSTL($o1, $o2, $flags, $contacts, 1);
}
function k_Unit() {
    jl_Object.call(this);
}
var k_Unit_INSTANCE = null;
function k_Unit_$callClinit() {
    k_Unit_$callClinit = $rt_eraseClinit(k_Unit);
    k_Unit__clinit_();
}
function k_Unit__init_() {
    var var_0 = new k_Unit();
    k_Unit__init_0(var_0);
    return var_0;
}
function k_Unit__init_0($this) {
    k_Unit_$callClinit();
    jl_Object__init_0($this);
}
function k_Unit__clinit_() {
    k_Unit_INSTANCE = k_Unit__init_();
}
function jur_DotAllQuantifierSet() {
    jur_QuantifierSet.call(this);
}
function jur_DotAllQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_DotAllQuantifierSet();
    jur_DotAllQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_DotAllQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_DotAllQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength;
    $strLength = $matchResult.$getRightBound();
    if ($strLength > $stringIndex)
        return $this.$next0.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
}
function jur_DotAllQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength;
    $strLength = $matchResult.$getRightBound();
    if ($this.$next0.$findBack($stringIndex, $strLength, $testString, $matchResult) >= 0)
        return $stringIndex;
    return (-1);
}
function oktt_TvmGL$shaders$1() {
    kji_Lambda.call(this);
}
var oktt_TvmGL$shaders$1_INSTANCE = null;
function oktt_TvmGL$shaders$1_$callClinit() {
    oktt_TvmGL$shaders$1_$callClinit = $rt_eraseClinit(oktt_TvmGL$shaders$1);
    oktt_TvmGL$shaders$1__clinit_();
}
function oktt_TvmGL$shaders$1__init_() {
    var var_0 = new oktt_TvmGL$shaders$1();
    oktt_TvmGL$shaders$1__init_0(var_0);
    return var_0;
}
function oktt_TvmGL$shaders$1_invoke(var$0, var$1) {
    return oktt_TvmGL$shaders$1_invoke0(var$0, var$1);
}
function oktt_TvmGL$shaders$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    return oktt_TvmGL$ShaderWrap__init_($it);
}
function oktt_TvmGL$shaders$1__init_0(var$0) {
    oktt_TvmGL$shaders$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktt_TvmGL$shaders$1__clinit_() {
    oktt_TvmGL$shaders$1_INSTANCE = oktt_TvmGL$shaders$1__init_();
}
function oktmb_PlaneMeshBuilder() {
    var a = this; oktmb_MeshBuilder.call(a);
    a.$width4 = 0.0;
    a.$height4 = 0.0;
    a.$xDivisions = 0;
    a.$yDivisions = 0;
    a.$normal2 = null;
    a.$heightProvider = null;
}
function oktmb_PlaneMeshBuilder__init_1(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktmb_PlaneMeshBuilder();
    oktmb_PlaneMeshBuilder__init_2(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktmb_PlaneMeshBuilder__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new oktmb_PlaneMeshBuilder();
    oktmb_PlaneMeshBuilder__init_0(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function oktmb_PlaneMeshBuilder__init_3() {
    var var_0 = new oktmb_PlaneMeshBuilder();
    oktmb_PlaneMeshBuilder__init_4(var_0);
    return var_0;
}
function oktmb_PlaneMeshBuilder_build($this, $out) {
    var $xNum, $yNum;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $xNum = $this.$xDivisions + 1 | 0;
    $yNum = $this.$yDivisions + 1 | 0;
    $out.$setVertices(oktmb_MeshBuilder_createVerticesFloat($this, $rt_imul($xNum, $yNum), oktmb_PlaneMeshBuilder$build$1__init_($this, $yNum, $xNum)));
    $out.$setIndices(oktmb_MeshBuilder_createIndicesShort($this, $rt_imul(6 * $this.$xDivisions | 0, $this.$yDivisions), oktmb_PlaneMeshBuilder$build$2__init_($this)));
    return oktmb_MeshBuilder_build($this, $out);
}
function oktmb_PlaneMeshBuilder_getWidth($this) {
    return $this.$width4;
}
function oktmb_PlaneMeshBuilder_getHeight($this) {
    return $this.$height4;
}
function oktmb_PlaneMeshBuilder_getXDivisions($this) {
    return $this.$xDivisions;
}
function oktmb_PlaneMeshBuilder_getYDivisions($this) {
    return $this.$yDivisions;
}
function oktmb_PlaneMeshBuilder_getNormal($this) {
    return $this.$normal2;
}
function oktmb_PlaneMeshBuilder_getHeightProvider($this) {
    return $this.$heightProvider;
}
function oktmb_PlaneMeshBuilder__init_2($this, $width, $height, $xDivisions, $yDivisions, $normal, $heightProvider) {
    kji_Intrinsics_checkParameterIsNotNull($normal, $rt_s(291));
    kji_Intrinsics_checkParameterIsNotNull($heightProvider, $rt_s(1336));
    oktmb_MeshBuilder__init_0($this);
    $this.$width4 = $width;
    $this.$height4 = $height;
    $this.$xDivisions = $xDivisions;
    $this.$yDivisions = $yDivisions;
    $this.$normal2 = $normal;
    $this.$heightProvider = $heightProvider;
}
function oktmb_PlaneMeshBuilder__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    if (var$7 & 1)
        var$1 = 1.0;
    if (var$7 & 2)
        var$2 = 1.0;
    if (var$7 & 4)
        var$3 = 1;
    if (var$7 & 8)
        var$4 = 1;
    if (var$7 & 16) {
        oktm_IVec3_$callClinit();
        var$5 = oktm_IVec3$Companion_getY(oktm_IVec3_Companion);
    }
    if (var$7 & 32) {
        oktmb_PlaneMeshBuilder$1_$callClinit();
        var$6 = oktmb_PlaneMeshBuilder$1_INSTANCE;
    }
    oktmb_PlaneMeshBuilder__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6);
}
function oktmb_PlaneMeshBuilder__init_4(var$0) {
    oktmb_PlaneMeshBuilder__init_0(var$0, 0.0, 0.0, 0, 0, null, null, 63, null);
}
function jnc_CoderMalfunctionError() {
    jl_Error.call(this);
}
function jnc_CoderMalfunctionError__init_(var_0) {
    var var_1 = new jnc_CoderMalfunctionError();
    jnc_CoderMalfunctionError__init_0(var_1, var_0);
    return var_1;
}
function jnc_CoderMalfunctionError__init_0($this, $cause) {
    jl_Error__init_6($this, $cause);
}
function oooip_DxWorldProcessIslandsInfo() {
    var a = this; jl_Object.call(a);
    a.$m_IslandCount = 0;
    a.$m_pIslandSizes = null;
    a.$m_pBodies = null;
    a.$m_pBodiesP = 0;
    a.$m_pJoints = null;
    a.$m_pJointsP = 0;
}
function oooip_DxWorldProcessIslandsInfo__init_() {
    var var_0 = new oooip_DxWorldProcessIslandsInfo();
    oooip_DxWorldProcessIslandsInfo__init_0(var_0);
    return var_0;
}
function oooip_DxWorldProcessIslandsInfo__init_0($this) {
    jl_Object__init_0($this);
}
function oooip_DxWorldProcessIslandsInfo_AssignInfo($this, $islandcount, $islandsizes, $bodies, $joints) {
    $this.$m_IslandCount = $islandcount;
    $this.$m_pIslandSizes = $islandsizes;
    $this.$m_pBodies = $bodies;
    $this.$m_pBodiesP = 0;
    $this.$m_pJoints = $joints;
    $this.$m_pJointsP = 0;
}
function oooip_DxWorldProcessIslandsInfo_GetIslandsCount($this) {
    return $this.$m_IslandCount;
}
function oooip_DxWorldProcessIslandsInfo_GetIslandSizes($this) {
    return $this.$m_pIslandSizes;
}
function oooip_DxWorldProcessIslandsInfo_GetBodiesArray($this) {
    return $this.$m_pBodies;
}
function oooip_DxWorldProcessIslandsInfo_GetJointsArray($this) {
    return $this.$m_pJoints;
}
function oooip_DxWorldProcessIslandsInfo_BuildIslandsAndEstimateStepperMemoryRequirements($islandsinfo, $memarena, $world, $stepsize, $stepperestimate) {
    var $maxreq, $stackalloc, $stackalloc_0, $islandsizes, $body, $joint, $stackstate, $stack, $b, $j, $sizescurrP, $bodystart, $jointstart, $bb, var$20, var$21, $stacksize, var$23, $n, $njoint, var$26, var$27, $nbody, $bcount, $jcount, $islandreq, var$32, $islandcount;
    $maxreq = 0;
    $world.$dInternalHandleAutoDisabling($stepsize);
    $stackalloc = $world.$nb;
    $stackalloc_0 = $world.$nj;
    $islandsizes = oooip_DxWorldProcessMemArena_AllocateArrayInt($memarena, 2 * $stackalloc | 0);
    $body = oooip_DxWorldProcessMemArena_AllocateArrayDxBody($memarena, $stackalloc);
    $joint = oooip_DxWorldProcessMemArena_AllocateArrayDxJoint($memarena, $stackalloc_0);
    $stackstate = oooip_DxWorldProcessMemArena_BEGIN_STATE_SAVE($memarena);
    if ($stackalloc_0 < $stackalloc)
        $stackalloc = $stackalloc_0;
    $stack = oooip_DxWorldProcessMemArena_AllocateArrayDxBody($memarena, $stackalloc);
    $b = oooicj_Ref_get($world.$firstbody);
    while ($b !== null) {
        $b.$tag = 0;
        $b = $b.$getNext1();
    }
    $j = oooicj_Ref_get($world.$firstjoint0);
    while ($j !== null) {
        $j.$tag = 0;
        $j = $j.$getNext1();
    }
    $sizescurrP = 0;
    $bodystart = 0;
    $jointstart = 0;
    $bb = oooicj_Ref_get($world.$firstbody);
    while ($bb !== null) {
        if (!$bb.$tag) {
            if (!$bb.$dBodyIsEnabled())
                $bb.$tag = (-1);
            else {
                var$20 = $body.data;
                $bb.$tag = 1;
                var$21 = $bodystart + 1 | 0;
                var$20[$bodystart] = $bb;
                $stacksize = 0;
                var$23 = $jointstart;
                $b = $bb;
                while (true) {
                    $n = oooicj_Ref_get($b.$firstjoint);
                    while ($n !== null) {
                        $njoint = $n.$joint;
                        if (!$njoint.$tag) {
                            if (!$njoint.$isEnabled1())
                                $njoint.$tag = (-1);
                            else {
                                var$26 = $joint.data;
                                $njoint.$tag = 1;
                                var$27 = var$23 + 1 | 0;
                                var$26[var$23] = $njoint;
                                $nbody = $n.$body0;
                                if ($nbody !== null && $nbody.$tag <= 0) {
                                    var$26 = $stack.data;
                                    $nbody.$tag = 1;
                                    $nbody.$dBodyEnable_noAdis();
                                    var$23 = $stacksize + 1 | 0;
                                    var$26[$stacksize] = $nbody;
                                    $stacksize = var$23;
                                }
                                var$23 = var$27;
                            }
                        }
                        $n = $n.$next2;
                    }
                    oooi_Common_dIASSERT($stacksize > $world.$nb ? 0 : 1);
                    oooi_Common_dIASSERT($stacksize > $world.$nj ? 0 : 1);
                    if (!$stacksize)
                        break;
                    var$26 = $stack.data;
                    $stacksize = $stacksize + (-1) | 0;
                    $b = var$26[$stacksize];
                    var$27 = var$21 + 1 | 0;
                    var$20[var$21] = $b;
                    var$21 = var$27;
                }
                $bcount = var$21 - $bodystart | 0;
                $jcount = var$23 - $jointstart | 0;
                oooi_Common_dIASSERT($bcount > 2147483647 ? 0 : 1);
                var$27 = $jcount > 2147483647 ? 0 : 1;
                var$26 = $islandsizes.data;
                oooi_Common_dIASSERT(var$27);
                var$26[$sizescurrP + 0 | 0] = $bcount;
                var$26[$sizescurrP + 1 | 0] = $jcount;
                $sizescurrP = $sizescurrP + 2 | 0;
                $islandreq = $stepperestimate.$dxEstimateMemoryRequirements($body, $bodystart, $bcount, $joint, $jointstart, $jcount);
                if ($maxreq > $islandreq)
                    $islandreq = $maxreq;
                $maxreq = $islandreq;
                $bodystart = var$21;
                $jointstart = var$23;
            }
        }
        $bb = $bb.$getNext1();
    }
    oooip_DxWorldProcessMemArena_END_STATE_SAVE($memarena, $stackstate);
    $b = oooicj_Ref_get($world.$firstbody);
    while ($b !== null) {
        if ($b.$isEnabled1()) {
            if ($b.$tag <= 0)
                oooi_ErrorHandler_dDebug(0, $rt_s(1337), $rt_createArray(jl_Object, 0));
        } else if ($b.$tag > 0)
            oooi_ErrorHandler_dDebug(0, $rt_s(1338), $rt_createArray(jl_Object, 0));
        $b = $b.$getNext1();
    }
    $j = oooicj_Ref_get($world.$firstjoint0);
    while ($j !== null) {
        a: {
            b: {
                c: {
                    if (!($j.$node0.data[0].$body0 !== null && $j.$node0.data[0].$body0.$isEnabled1())) {
                        if ($j.$node0.data[1].$body0 === null)
                            break c;
                        var$32 = $j.$node0.data[1].$body0;
                        if (!var$32.$isEnabled1())
                            break c;
                    }
                    if ($j.$isEnabled1())
                        break b;
                }
                if ($j.$tag <= 0)
                    break a;
                oooi_ErrorHandler_dDebug(0, $rt_s(1339), $rt_createArray(jl_Object, 0));
                break a;
            }
            if ($j.$tag <= 0)
                oooi_ErrorHandler_dDebug(0, $rt_s(1340), $rt_createArray(jl_Object, 0));
        }
        $j = $j.$getNext1();
    }
    $islandcount = $sizescurrP / 2 | 0;
    $islandsinfo.$AssignInfo($islandcount, $islandsizes, $body, $joint);
    return $maxreq;
}
function oktgg_GLTF$read$10$1() {
    kji_Lambda.call(this);
    this.$this$0198 = null;
}
function oktgg_GLTF$read$10$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$10$1();
    oktgg_GLTF$read$10$1__init_0(var_1, var_0);
    return var_1;
}
function oktgg_GLTF$read$10$1_invoke(var$0, var$1) {
    oktgg_GLTF$read$10$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_GLTF$read$10$1_invoke0($this, $$this$objs) {
    var $camera;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $camera = oktgg_GLTFCamera__init_1($this.$this$0198.$this$0199, oktgg_GLTFArray_size($this.$this$0198.$this$0199.$getCameras0()), null, 4, null);
    $this.$this$0198.$this$0199.$getCameras0().$add1($camera);
    oktgg_GLTFCamera_read($camera, $$this$objs);
}
function oktgg_GLTF$read$10$1__init_0(var$0, var$1) {
    var$0.$this$0198 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function jur_CIDecomposedCharSet() {
    jur_DecomposedCharSet.call(this);
}
function jur_CIDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_CIDecomposedCharSet();
    jur_CIDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CIDecomposedCharSet__init_0($this, $decomp, $decomposedCharLength) {
    jur_DecomposedCharSet__init_0($this, $decomp, $decomposedCharLength);
}
function oktm_VertexInputs() {
    var a = this; jl_Object.call(a);
    a.$map0 = null;
    a.$bytesPerVertex = 0;
}
function oktm_VertexInputs__init_0() {
    var var_0 = new oktm_VertexInputs();
    oktm_VertexInputs__init_1(var_0);
    return var_0;
}
function oktm_VertexInputs__init_2(var_0) {
    var var_1 = new oktm_VertexInputs();
    oktm_VertexInputs__init_(var_1, var_0);
    return var_1;
}
function oktm_VertexInputs_getBytesPerVertex($this) {
    return $this.$bytesPerVertex;
}
function oktm_VertexInputs_setBytesPerVertex($this, $_set___) {
    $this.$bytesPerVertex = $_set___;
}
function oktm_VertexInputs_getSize($this) {
    return $this.$map0.$size();
}
function oktm_VertexInputs_size(var$0) {
    return var$0.$getSize();
}
function oktm_VertexInputs_contains($this, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    return $this.$map0.$containsKey($name);
}
function oktm_VertexInputs_add($this, $element) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($element, $rt_s(1241));
    if ($this.$map0.$containsKey($element.$getName()))
        var$2 = 0;
    else {
        $this.$map0.$put3($element.$getName(), $element);
        oktm_VertexInputs_updateVertexOffsets($this);
        var$2 = 1;
    }
    return var$2;
}
function oktm_VertexInputs_get($this, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    return $this.$map0.$get0($name);
}
function oktm_VertexInputs_get0($this, $index) {
    var var$2, var$3;
    var$2 = $this.$map0.$values();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(1341));
    var$3 = kc_CollectionsKt___CollectionsKt_elementAt(var$2, $index);
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(1342));
    return var$3;
}
function oktm_VertexInputs_iterator($this) {
    return $this.$map0.$values().$iterator();
}
function oktm_VertexInputs_updateVertexOffsets($this) {
    var $byteCount, $componentCount, var$3, $$this$forEach$iv, var$5, $element$iv, $it;
    $byteCount = 0;
    $componentCount = 0;
    var$3 = $this.$map0.$values();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(1341));
    $$this$forEach$iv = var$3;
    var$5 = $$this$forEach$iv.$iterator();
    while (var$5.$hasNext()) {
        $element$iv = var$5.$next();
        $it = $element$iv;
        $it.$setByteOffset($byteCount);
        $it.$setComponentOffset($componentCount);
        $byteCount = $byteCount + $it.$getSizeInBytes0() | 0;
        $componentCount = $componentCount + $it.$getSize() | 0;
    }
    $this.$setBytesPerVertex($byteCount);
}
function oktm_VertexInputs__init_1($this) {
    jl_Object__init_0($this);
    $this.$map0 = ju_LinkedHashMap__init_();
}
function oktm_VertexInputs__init_($this, $inputs) {
    var var$2, var$3, var$4, $element$iv;
    var$2 = $inputs.data;
    kji_Intrinsics_checkParameterIsNotNull($inputs, $rt_s(1076));
    oktm_VertexInputs__init_1($this);
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $element$iv = var$2[var$4];
        $this.$map0.$put3($element$iv.$getName(), $element$iv);
        var$4 = var$4 + 1 | 0;
    }
    oktm_VertexInputs_updateVertexOffsets($this);
}
function oktm_VertexInputs_getFloatsPerVertex($this) {
    return oktm_IVertexInputs$DefaultImpls_getFloatsPerVertex($this);
}
function oktm_VertexInputs_floatOffsetOf($this, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    return oktm_IVertexInputs$DefaultImpls_floatOffsetOf($this, $name);
}
function oooi_CollisionLibccd$CollideConvexCylinderCCD() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$CollideConvexCylinderCCD__init_() {
    var var_0 = new oooi_CollisionLibccd$CollideConvexCylinderCCD();
    oooi_CollisionLibccd$CollideConvexCylinderCCD__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$CollideConvexCylinderCCD__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollisionLibccd$CollideConvexCylinderCCD_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    var $cyl, $conv, var$7, var$8, var$9, var$10;
    $cyl = oooi_CollisionLibccd$ccd_cyl_t__init_();
    $conv = oooi_CollisionLibccd$ccd_convex_t__init_(null);
    oooi_CollisionLibccd_ccdGeomToConvex($o1, $conv);
    oooi_CollisionLibccd_ccdGeomToCyl($o2, $cyl);
    var$7 = oooi_CollisionLibccd_access$500();
    var$8 = oooi_CollisionLibccd_access$100();
    var$9 = oooi_CollisionLibccd_ccdSupportCyl;
    var$10 = oooi_CollisionLibccd_access$100();
    return oooi_CollisionLibccd_ccdCollide($o1, $o2, $flags, $contacts, $conv, var$7, var$8, $cyl, var$9, var$10);
}
function oktts_ShadowMappingBaseTest() {
    jl_Object.call(this);
}
function oktts_ShadowMappingBaseTest__init_() {
    var var_0 = new oktts_ShadowMappingBaseTest();
    oktts_ShadowMappingBaseTest__init_0(var_0);
    return var_0;
}
function oktts_ShadowMappingBaseTest_getName($this) {
    return $rt_s(1343);
}
function oktts_ShadowMappingBaseTest_testMain($this) {
    var $sceneObjectShader, var$2, var$3, var$4, var$5, $depthRenderShader, $depthBuffer, var$8, $lightMatrix, $halfWidth, $halfHeight, var$12, $cube, $plane, $lightFrustumMesh, $cubeColor, $control, $screenQuad, $cubesStartX, $cubesEndX, $cubesStepX, $cubesStartZ, $cubesEndZ, $cubesStepZ, $cubesY;
    $sceneObjectShader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($sceneObjectShader, $rt_s(1344), $rt_s(1345), var$2, 0, var$3, 0, var$4, 124, var$5);
    $sceneObjectShader.$bind();
    $sceneObjectShader.$set35($rt_s(1346), 0);
    $depthRenderShader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($depthRenderShader, $rt_s(1347), $rt_s(1348), var$2, 0, var$3, 0, var$4, 124, var$5);
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_setApi(oktgc_ActiveCamera_INSTANCE, oktgc_Camera__init_(null, null, null, 0.10000000149011612, 500.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4071, null));
    $depthBuffer = oktt_FrameBuffer__init_0(1024, 1024);
    var$8 = oktt_FrameBuffer_getAttachments($depthBuffer);
    oktt_Attachments_$callClinit();
    var$8.$add1(oktt_Attachments_depth$default(oktt_Attachments_INSTANCE, 0, 0, 0, 0, 0, 31, null));
    oktt_FrameBuffer_buildAttachments($depthBuffer);
    var$8 = oktt_FrameBuffer_getTexture($depthBuffer, 0);
    var$8.$bind();
    var$8.$setMinFilter(9728);
    var$8.$setMagFilter(9728);
    $lightMatrix = oktm_Mat4__init_();
    $halfWidth = 50.0;
    $halfHeight = 50.0;
    $lightMatrix.$setToOrtho((-50.0), $halfWidth, (-50.0), $halfHeight, 0.10000000149011612, 100.0);
    var$8 = oktm_Mat4__init_();
    var$12 = oktm_Vec3__init_0(50.0, 50.0, 50.0);
    var$2 = oktm_Vec3__init_0((-50.0), (-50.0), (-50.0)).$nor();
    var$3 = oktm_Vec3__init_0(0.0, 1.0, 0.0);
    $lightMatrix.$mul(var$8.$setToLookAt(var$12, var$2, var$3));
    $cube = oktmb_MeshBuilder_build$default(oktmb_BoxMeshBuilder__init_0(2.0, 2.0, 2.0), null, 1, null);
    $plane = oktmb_MeshBuilder_build$default(oktmb_PlaneMeshBuilder__init_(500.0, 500.0, 0, 0, null, null, 60, null), null, 1, null);
    $lightFrustumMesh = oktmb_MeshBuilder_build$default(oktmb_FrustumMeshBuilder__init_(oktm_Mat4__init_().$set3($lightMatrix).$inv()), null, 1, null);
    $cubeColor = oktm_Vec4__init_0(1.0, 0.5, 0.0, 1.0);
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    $control = new oktgc_OrbitCameraControl;
    var$8 = oktm_Vec3__init_0(10.0, 3.0, 0.0);
    var$12 = null;
    var$2 = null;
    oktgc_OrbitCameraControl__init_($control, 1.0, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, var$12, 0, var$8, 4076, var$2);
    oktgc_OrbitCameraControl_listenToMouse($control);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, oktgc_OrbitCameraControl_getHelp($control), null, 2, null);
    $screenQuad = oktm_ScreenQuad$TextureRenderer__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    $cubesStartX = (-100.0);
    $cubesEndX = 100.0;
    $cubesStepX = 20.0;
    $cubesStartZ = (-100.0);
    $cubesEndZ = 100.0;
    $cubesStepZ = 20.0;
    $cubesY = 1.0;
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktts_ShadowMappingBaseTest$testMain$2__init_($control, $depthBuffer, $depthRenderShader, $lightMatrix, $plane, $cubesStartX, $cubesEndX, $cubesStartZ, $cubesEndZ, $cubesY, $cube, $cubesStepZ, $cubesStepX, $sceneObjectShader, $cubeColor, $lightFrustumMesh, $screenQuad), 1, null);
}
function oktts_ShadowMappingBaseTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktsg_NormalMapNode() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$tangentResult = null;
    a.$biNormalResult = null;
    a.$normalResult = null;
}
var oktsg_NormalMapNode_InputForm = null;
var oktsg_NormalMapNode_Companion = null;
function oktsg_NormalMapNode_$callClinit() {
    oktsg_NormalMapNode_$callClinit = $rt_eraseClinit(oktsg_NormalMapNode);
    oktsg_NormalMapNode__clinit_();
}
function oktsg_NormalMapNode__init_(var_0) {
    var var_1 = new oktsg_NormalMapNode();
    oktsg_NormalMapNode__init_0(var_1, var_0);
    return var_1;
}
function oktsg_NormalMapNode__init_1(var_0, var_1, var_2) {
    var var_3 = new oktsg_NormalMapNode();
    oktsg_NormalMapNode__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktsg_NormalMapNode__init_3() {
    var var_0 = new oktsg_NormalMapNode();
    oktsg_NormalMapNode__init_4(var_0);
    return var_0;
}
function oktsg_NormalMapNode_getNormalizedViewVector($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1126));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_NormalMapNode_setNormalizedViewVector($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(1126), $value);
}
function oktsg_NormalMapNode_getVertexPosition($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1115));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_NormalMapNode_getUv($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(333));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_NormalMapNode_setUv($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(333), $value);
}
function oktsg_NormalMapNode_getNormalScale($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1349));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_NormalMapNode_getNormalColor($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1350));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getDefaultNormal(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_NormalMapNode_setNormalColor($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(1350), $value);
}
function oktsg_NormalMapNode_getTbn($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1072));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
}
function oktsg_NormalMapNode_setTbn($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(1072), $value);
}
function oktsg_NormalMapNode_getNormalResult($this) {
    return $this.$normalResult;
}
function oktsg_NormalMapNode_executionFrag($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if (!(!$this.$normalResult.$isUsed0() && !$this.$tangentResult.$isUsed0() && !$this.$biNormalResult.$isUsed0()))
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1351)).$append(oktsg_NormalMapNode_getNormalizedViewVector($this).$asVec3()).$append($rt_s(268)).$append(oktsg_NormalMapNode_getTbn($this).$getRef0()).$append($rt_s(268)).$append(oktsg_NormalMapNode_getVertexPosition($this).$asVec3()).$append($rt_s(268)).$append(oktsg_NormalMapNode_getUv($this).$asVec2()).$append($rt_s(268)).$append(oktsg_NormalMapNode_getNormalScale($this).$asFloat()).$append($rt_s(268)).$append(oktsg_NormalMapNode_getNormalColor($this).$asVec3()).$append($rt_s(1053)).$toString());
}
function oktsg_NormalMapNode_declarationFrag($this, $out) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if (!(!$this.$normalResult.$isUsed0() && !$this.$tangentResult.$isUsed0() && !$this.$biNormalResult.$isUsed0())) {
        var$2 = $out.$append(oktsg_NormalMapNode$Companion_normalCode(oktsg_NormalMapNode_Companion, $this.$tangentResult.$getRef0(), $this.$biNormalResult.$getRef0(), $this.$normalResult.$getRef0()));
        kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(504));
        kt_StringsKt__StringBuilderJVMKt_appendln(var$2);
    }
}
function oktsg_NormalMapNode__init_0($this, $vertexPosition) {
    oktsg_NormalMapNode_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($vertexPosition, $rt_s(1115));
    oktsg_ShaderNode__init_0($this);
    $this.$tangentResult = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec3__init_($rt_s(1352)));
    $this.$biNormalResult = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec3__init_($rt_s(1353)));
    $this.$normalResult = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec3__init_($rt_s(291)));
    $this.$setInput($rt_s(1115), $vertexPosition);
}
function oktsg_NormalMapNode__init_2(var$0, var$1, var$2, var$3) {
    oktsg_NormalMapNode_$callClinit();
    if (var$2 & 1) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    oktsg_NormalMapNode__init_0(var$0, var$1);
}
function oktsg_NormalMapNode__init_4(var$0) {
    oktsg_NormalMapNode_$callClinit();
    oktsg_NormalMapNode__init_2(var$0, null, 1, null);
}
function oktsg_NormalMapNode__clinit_() {
    var var$1;
    oktsg_NormalMapNode_Companion = oktsg_NormalMapNode$Companion__init_1(null);
    var$1 = ju_LinkedHashMap__init_();
    var$1.$put3($rt_s(1126), jl_Integer_valueOf(5));
    var$1.$put3($rt_s(1115), jl_Integer_valueOf(5));
    var$1.$put3($rt_s(333), jl_Integer_valueOf(4));
    var$1.$put3($rt_s(1349), jl_Integer_valueOf(3));
    var$1.$put3($rt_s(1350), jl_Integer_valueOf(5));
    var$1.$put3($rt_s(1072), jl_Integer_valueOf(8));
    oktsg_NormalMapNode_InputForm = var$1;
}
function oktm_IIndexBufferObject$DefaultImpls() {
    jl_Object.call(this);
}
function oktm_IIndexBufferObject$DefaultImpls_getSize($$this) {
    return $$this.$getSizeInBytes0() / $$this.$getBytesPerIndex() | 0;
}
function oktm_IIndexBufferObject$DefaultImpls_getSizeInBytes($$this) {
    return $$this.$getBytes().$getSize();
}
function oooil_CCD() {
    jl_Object.call(this);
}
function oooil_CCD__init_() {
    var var_0 = new oooil_CCD();
    oooil_CCD__init_0(var_0);
    return var_0;
}
function oooil_CCD__init_0($this) {
    jl_Object__init_0($this);
}
function oooil_CCD_CCD_INIT($ccd) {
    $ccd.$first_dir = oooil_CCD$1__init_();
    $ccd.$support1 = null;
    $ccd.$support2 = null;
    $ccd.$center1 = null;
    $ccd.$center2 = null;
    $ccd.$max_iterations = new Long(4294967295, 2147483647);
    $ccd.$epa_tolerance = 1.0E-4;
    $ccd.$mpr_tolerance = 1.0E-4;
}
function oktt_ITexture$DefaultImpls() {
    jl_Object.call(this);
}
function oktt_ITexture$DefaultImpls_bind($$this) {
    oktg_GL_$callClinit();
    oktg_GL_glBindTexture(oktg_GL_INSTANCE, $$this.$getGlTarget(), $$this.$getTextureHandle());
}
function oktt_ITexture$DefaultImpls_bind0($$this, $unit) {
    oktg_GL_$callClinit();
    oktg_GL_setActiveTexture(oktg_GL_INSTANCE, $unit);
    oktg_GL_glBindTexture(oktg_GL_INSTANCE, $$this.$getGlTarget(), $$this.$getTextureHandle());
}
function oktt_ITexture$DefaultImpls_generateMipmapsGPU($$this) {
    okt_APP_$callClinit();
    if (okt_APP_getPlatformType(okt_APP_INSTANCE)) {
        oktg_GL_$callClinit();
        oktg_GL_glGenerateMipmap(oktg_GL_INSTANCE, $$this.$getGlTarget());
    } else {
        oktg_GL_$callClinit();
        if (!oktg_GL_isExtensionSupported(oktg_GL_INSTANCE, $rt_s(1354)) && !oktg_GL_isExtensionSupported(oktg_GL_INSTANCE, $rt_s(1355)))
            $rt_throw(jl_RuntimeException__init_($rt_s(1356)));
        oktg_GL_glGenerateMipmap(oktg_GL_INSTANCE, $$this.$getGlTarget());
    }
}
function oktt_ITexture$DefaultImpls_destroy($$this) {
    if ($$this.$getTextureHandle()) {
        oktg_GL_$callClinit();
        oktg_GL_glDeleteTexture(oktg_GL_INSTANCE, $$this.$getTextureHandle());
        $$this.$setTextureHandle(0);
    }
}
function oooig_GimRadixSort$GimCompMacro() {
}
function oktsg_CameraDataNode$Companion() {
    jl_Object.call(this);
}
function oktsg_CameraDataNode$Companion__init_0() {
    var var_0 = new oktsg_CameraDataNode$Companion();
    oktsg_CameraDataNode$Companion__init_1(var_0);
    return var_0;
}
function oktsg_CameraDataNode$Companion__init_(var_0) {
    var var_1 = new oktsg_CameraDataNode$Companion();
    oktsg_CameraDataNode$Companion__init_2(var_1, var_0);
    return var_1;
}
function oktsg_CameraDataNode$Companion__init_1($this) {
    jl_Object__init_0($this);
}
function oktsg_CameraDataNode$Companion__init_2($this, $$constructor_marker) {
    oktsg_CameraDataNode$Companion__init_1($this);
}
function oktt_TvmGL$ProgramWrap() {
    var a = this; oktt_TvmGL$GLObject.call(a);
    a.$gl7 = null;
    a.$uniformLocations = null;
    a.$uniformLocationsMap = null;
}
function oktt_TvmGL$ProgramWrap__init_(var_0, var_1, var_2) {
    var var_3 = new oktt_TvmGL$ProgramWrap();
    oktt_TvmGL$ProgramWrap__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktt_TvmGL$ProgramWrap__init_1(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktt_TvmGL$ProgramWrap();
    oktt_TvmGL$ProgramWrap__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktt_TvmGL$ProgramWrap_getGl($this) {
    return $this.$gl7;
}
function oktt_TvmGL$ProgramWrap_getGl0(var$0) {
    return oktt_TvmGL$ProgramWrap_getGl(var$0);
}
function oktt_TvmGL$ProgramWrap_getUniformLocations($this) {
    return $this.$uniformLocations;
}
function oktt_TvmGL$ProgramWrap_getUniformLocationsMap($this) {
    return $this.$uniformLocationsMap;
}
function oktt_TvmGL$ProgramWrap__init_0($this, $gl, $uniformLocations, $uniformLocationsMap) {
    kji_Intrinsics_checkParameterIsNotNull($gl, $rt_s(814));
    kji_Intrinsics_checkParameterIsNotNull($uniformLocations, $rt_s(1357));
    kji_Intrinsics_checkParameterIsNotNull($uniformLocationsMap, $rt_s(1358));
    oktt_TvmGL$GLObject__init_0($this);
    $this.$gl7 = $gl;
    $this.$uniformLocations = $uniformLocations;
    $this.$uniformLocationsMap = $uniformLocationsMap;
}
function oktt_TvmGL$ProgramWrap__init_2(var$0, var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 2)
        var$2 = ju_ArrayList__init_();
    if (var$4 & 4)
        var$3 = ju_HashMap__init_();
    oktt_TvmGL$ProgramWrap__init_0(var$0, var$1, var$2, var$3);
}
function oktg_GL$Request() {
    var a = this; jl_Object.call(a);
    a.$name41 = null;
    a.$call2 = null;
}
function oktg_GL$Request__init_(var_0, var_1) {
    var var_2 = new oktg_GL$Request();
    oktg_GL$Request__init_0(var_2, var_0, var_1);
    return var_2;
}
function oktg_GL$Request_getName($this) {
    return $this.$name41;
}
function oktg_GL$Request_getCall($this) {
    return $this.$call2;
}
function oktg_GL$Request__init_0($this, $name, $call) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    jl_Object__init_0($this);
    $this.$name41 = $name;
    $this.$call2 = $call;
}
function otcit_DoubleAnalyzer$Result() {
    var a = this; jl_Object.call(a);
    a.$mantissa0 = Long_ZERO;
    a.$exponent0 = 0;
    a.$sign0 = 0;
}
function otcit_DoubleAnalyzer$Result__init_() {
    var var_0 = new otcit_DoubleAnalyzer$Result();
    otcit_DoubleAnalyzer$Result__init_0(var_0);
    return var_0;
}
function otcit_DoubleAnalyzer$Result__init_0($this) {
    jl_Object__init_0($this);
}
function jur_PossessiveAltQuantifierSet() {
    jur_AltQuantifierSet.call(this);
}
function jur_PossessiveAltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveAltQuantifierSet();
    jur_PossessiveAltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveAltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_PossessiveAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
        var$4 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$4 >= 1)
            $stringIndex = $stringIndex + var$4 | 0;
    }
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
}
function oktgg_GLTFPrimitive() {
    var a = this; jl_Object.call(a);
    a.$attributesMap = null;
    a.$name42 = null;
    a.$indices1 = 0;
    a.$material1 = 0;
    a.$gltf10 = null;
    a.$elementIndex9 = 0;
    a.$meshIndex = 0;
    a.$mesh1 = null;
}
var oktgg_GLTFPrimitive_tmp1_vab_t = null;
var oktgg_GLTFPrimitive_tmp2_vac_bn = null;
var oktgg_GLTFPrimitive_edge1 = null;
var oktgg_GLTFPrimitive_edge2 = null;
var oktgg_GLTFPrimitive_deltaUV1 = null;
var oktgg_GLTFPrimitive_deltaUV2 = null;
var oktgg_GLTFPrimitive_ind = null;
var oktgg_GLTFPrimitive_Companion = null;
function oktgg_GLTFPrimitive_$callClinit() {
    oktgg_GLTFPrimitive_$callClinit = $rt_eraseClinit(oktgg_GLTFPrimitive);
    oktgg_GLTFPrimitive__clinit_();
}
function oktgg_GLTFPrimitive__init_0(var_0, var_1, var_2, var_3) {
    var var_4 = new oktgg_GLTFPrimitive();
    oktgg_GLTFPrimitive__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function oktgg_GLTFPrimitive__init_2(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktgg_GLTFPrimitive();
    oktgg_GLTFPrimitive__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oktgg_GLTFPrimitive_getAttributesMap($this) {
    return $this.$attributesMap;
}
function oktgg_GLTFPrimitive_getName($this) {
    return $this.$name42;
}
function oktgg_GLTFPrimitive_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name42 = $_set___;
}
function oktgg_GLTFPrimitive_setMaterial($this, $_set___) {
    $this.$material1 = $_set___;
}
function oktgg_GLTFPrimitive_read($this, $json) {
    var var$2, var$3, $indices, $vertexInputs, $hasNormals, $hasTangents, $floatsPerVertex, $maxVertices, $vertexBuffer, $vertices, $loadedAttributes, $$this$forEach$iv, var$14, $element$iv, $attribute, var$17, $attributeAccessor, $completeCall, $bufferView;
    a: {
        kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
        oktgg_GLTFPrimitive_setName($this, $json.$string5($rt_s(17), $rt_s(6)));
        $this.$mesh1.$setName(oktgg_GLTFPrimitive_getName($this));
        var$2 = $this.$mesh1;
        switch ($json.$int1($rt_s(1359), 4)) {
            case 0:
                break;
            case 1:
                var$3 = 1;
                break a;
            case 2:
                var$3 = 2;
                break a;
            case 3:
                var$3 = 3;
                break a;
            case 4:
                var$3 = 4;
                break a;
            case 5:
                var$3 = 5;
                break a;
            case 6:
                var$3 = 6;
                break a;
            default:
                var$3 = 4;
                break a;
        }
        var$3 = 0;
    }
    var$2.$setPrimitiveType(var$3);
    $json.$int($rt_s(1073), oktgg_GLTFPrimitive$read$1__init_($this));
    $this.$indices1 = $json.$int1($rt_s(566), (-1));
    $indices = $this.$indices1 == (-1) ? null : oktgg_GLTFPrimitive_loadIndices$default($this, $this.$indices1, null, 2, null);
    $this.$mesh1.$setIndices($indices);
    $vertexInputs = oktm_VertexInputs__init_0();
    $hasNormals = kji_Ref$BooleanRef__init_();
    $hasNormals.$element1 = 0;
    $hasTangents = kji_Ref$BooleanRef__init_();
    $hasTangents.$element1 = 0;
    $json.$get16($rt_s(1360), oktgg_GLTFPrimitive$read$2__init_($this, $vertexInputs, $hasNormals, $hasTangents));
    if (!$hasNormals.$element1)
        $vertexInputs.$add5(oktm_VertexInput__init_(3, $rt_s(854), 5126, 0));
    if ($vertexInputs.$contains($rt_s(332)) && !$hasTangents.$element1)
        $vertexInputs.$add5(oktm_VertexInput__init_(4, $rt_s(855), 5126, 0));
    $floatsPerVertex = $vertexInputs.$getFloatsPerVertex0();
    $maxVertices = oktgg_GLTFAccessor_getCount(oktgg_GLTFPrimitive_getGltf($this).$getAccessors().$get1(kc_CollectionsKt___CollectionsKt_first($this.$attributesMap.$values()).$intValue()));
    oktd_DATA_$callClinit();
    $vertexBuffer = oktd_DATA_bytes(oktd_DATA_INSTANCE, $rt_imul($maxVertices, $floatsPerVertex) * 4 | 0);
    $vertices = $vertexBuffer.$floatView();
    $loadedAttributes = kji_Ref$IntRef__init_();
    $loadedAttributes.$element = 0;
    $$this$forEach$iv = $vertexInputs;
    var$14 = $$this$forEach$iv.$iterator();
    while (var$14.$hasNext()) {
        $element$iv = var$14.$next();
        $attribute = $element$iv;
        var$17 = oktgg_GLTFPrimitive_getGltf($this).$getAccessors();
        var$2 = $this.$attributesMap.$get0($attribute.$getName());
        $attributeAccessor = kc_CollectionsKt___CollectionsKt_getOrNull(var$17, var$2 === null ? (-1) : var$2.$intValue());
        $completeCall = oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1__init_($this, $hasNormals, $vertexInputs, $indices, $floatsPerVertex, $vertices, $maxVertices, $hasTangents, $vertexBuffer, $loadedAttributes);
        if ($attributeAccessor === null) {
            $loadedAttributes.$element = $loadedAttributes.$element + 1 | 0;
            if ($loadedAttributes.$element == oktm_VertexInputs_size($vertexInputs))
                $completeCall.$invoke6();
        } else {
            $bufferView = oktgg_GLTFPrimitive_getGltf($this).$getBufferViews0().$get1(oktgg_GLTFAccessor_getBufferView($attributeAccessor));
            oktgg_GLTFPrimitive_getGltf($this).$getBuffers0().$getOrWait0(oktgg_GLTFBufferView_getBuffer($bufferView), oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2__init_($bufferView, $attributeAccessor, $attribute, $completeCall, $this, $hasNormals, $vertexInputs, $indices, $floatsPerVertex, $vertices, $maxVertices, $hasTangents, $vertexBuffer, $loadedAttributes));
        }
    }
}
function oktgg_GLTFPrimitive_loadIndices($this, $accessorIndex, $out) {
    var $accessor, $bufferView;
    $accessor = oktgg_GLTFPrimitive_getGltf($this).$getAccessors().$get1($accessorIndex);
    $bufferView = oktgg_GLTFPrimitive_getGltf($this).$getBufferViews0().$get1(oktgg_GLTFAccessor_getBufferView($accessor));
    oktgg_GLTFPrimitive_getGltf($this).$getBuffers0().$getOrWait0(oktgg_GLTFBufferView_getBuffer($bufferView), oktgg_GLTFPrimitive$loadIndices$1__init_($this, $accessor, $bufferView, $out));
    return $out;
}
function oktgg_GLTFPrimitive_loadIndices$default(var$1, var$2, var$3, var$4, var$5) {
    oktgg_GLTFPrimitive_$callClinit();
    if (var$4 & 2) {
        var$3 = new oktm_IndexBufferObject;
        oktd_DATA_$callClinit();
        oktm_IndexBufferObject__init_2(var$3, oktd_DATA_getNullBuffer(oktd_DATA_INSTANCE), 0, 0, 0, 6, null);
    }
    return oktgg_GLTFPrimitive_loadIndices(var$1, var$2, var$3);
}
function oktgg_GLTFPrimitive_getV123($this, $i1, $i2, $i3, $floatsPerVertex, $out) {
    oktgg_GLTFPrimitive$Vec3I_setX($out, $rt_imul($i1, $floatsPerVertex));
    oktgg_GLTFPrimitive$Vec3I_setY($out, $rt_imul($i2, $floatsPerVertex));
    oktgg_GLTFPrimitive$Vec3I_setZ($out, $rt_imul($i3, $floatsPerVertex));
}
function oktgg_GLTFPrimitive_getV1230($this, $i1, $i2, $i3, $indices, $floatsPerVertex, $out) {
    oktgg_GLTFPrimitive$Vec3I_setX($out, $rt_imul($indices.$toInt0($i1), $floatsPerVertex));
    oktgg_GLTFPrimitive$Vec3I_setY($out, $rt_imul($indices.$toInt0($i2), $floatsPerVertex));
    oktgg_GLTFPrimitive$Vec3I_setZ($out, $rt_imul($indices.$toInt0($i3), $floatsPerVertex));
}
function oktgg_GLTFPrimitive_calculateFlatNormal($this, $v1, $v2, $v3, $positionOffset, $vertices) {
    var $offset, $ax, $ay, $az, var$10, $bx, $by, $bz, var$14, $cx, $cy, $cz;
    $offset = $v1 + $positionOffset | 0;
    $ax = $vertices.$get1($offset).$floatValue();
    $ay = $vertices.$get1($offset + 1 | 0).$floatValue();
    $az = $vertices.$get1($offset + 2 | 0).$floatValue();
    var$10 = $v2 + $positionOffset | 0;
    $bx = $vertices.$get1(var$10).$floatValue();
    $by = $vertices.$get1(var$10 + 1 | 0).$floatValue();
    $bz = $vertices.$get1(var$10 + 2 | 0).$floatValue();
    var$14 = $v3 + $positionOffset | 0;
    $cx = $vertices.$get1(var$14).$floatValue();
    $cy = $vertices.$get1(var$14 + 1 | 0).$floatValue();
    $cz = $vertices.$get1(var$14 + 2 | 0).$floatValue();
    oktgg_GLTFPrimitive_tmp1_vab_t.$set44($bx, $by, $bz).$sub3($ax, $ay, $az);
    oktgg_GLTFPrimitive_tmp2_vac_bn.$set44($cx, $cy, $cz).$sub3($ax, $ay, $az);
    return oktgg_GLTFPrimitive_tmp1_vab_t.$crs2(oktgg_GLTFPrimitive_tmp2_vac_bn).$nor();
}
function oktgg_GLTFPrimitive_calculateFlatNormal0($this, $v1, $v2, $v3, $positionOffset, $normalOffset, $vertices) {
    var $n;
    $n = oktgg_GLTFPrimitive_calculateFlatNormal($this, $v1, $v2, $v3, $positionOffset, $vertices);
    oktgg_GLTFPrimitive_setVec3InputToTriangle($this, $n.$getX0(), $n.$getY0(), $n.$getZ(), $vertices, $normalOffset, $v1, $v2, $v3);
}
function oktgg_GLTFPrimitive_setVec3InputToTriangle($this, $x, $y, $z, $vertices, $dataOffset, $v1, $v2, $v3) {
    var $offset, var$10;
    $offset = $v1 + $dataOffset | 0;
    $vertices.$set53($offset, jl_Float_valueOf($x));
    $vertices.$set53($offset + 1 | 0, jl_Float_valueOf($y));
    $vertices.$set53($offset + 2 | 0, jl_Float_valueOf($z));
    var$10 = $v2 + $dataOffset | 0;
    $vertices.$set53(var$10, jl_Float_valueOf($x));
    $vertices.$set53(var$10 + 1 | 0, jl_Float_valueOf($y));
    $vertices.$set53(var$10 + 2 | 0, jl_Float_valueOf($z));
    var$10 = $v3 + $dataOffset | 0;
    $vertices.$set53(var$10, jl_Float_valueOf($x));
    $vertices.$set53(var$10 + 1 | 0, jl_Float_valueOf($y));
    $vertices.$set53(var$10 + 2 | 0, jl_Float_valueOf($z));
}
function oktgg_GLTFPrimitive_setVec4InputToTriangle($this, $x, $y, $z, $w, $vertices, $dataOffset, $v1, $v2, $v3) {
    var $offset, var$11;
    $offset = $v1 + $dataOffset | 0;
    $vertices.$set53($offset, jl_Float_valueOf($x));
    $vertices.$set53($offset + 1 | 0, jl_Float_valueOf($y));
    $vertices.$set53($offset + 2 | 0, jl_Float_valueOf($z));
    $vertices.$set53($offset + 3 | 0, jl_Float_valueOf($w));
    var$11 = $v2 + $dataOffset | 0;
    $vertices.$set53(var$11, jl_Float_valueOf($x));
    $vertices.$set53(var$11 + 1 | 0, jl_Float_valueOf($y));
    $vertices.$set53(var$11 + 2 | 0, jl_Float_valueOf($z));
    $vertices.$set53(var$11 + 3 | 0, jl_Float_valueOf($w));
    var$11 = $v3 + $dataOffset | 0;
    $vertices.$set53(var$11, jl_Float_valueOf($x));
    $vertices.$set53(var$11 + 1 | 0, jl_Float_valueOf($y));
    $vertices.$set53(var$11 + 2 | 0, jl_Float_valueOf($z));
    $vertices.$set53(var$11 + 3 | 0, jl_Float_valueOf($w));
}
function oktgg_GLTFPrimitive_calculateTangent($this, $v1, $v2, $v3, $vertices, $positionOffset, $uvOffset, $tangentOffset) {
    var $offset, $x1, $y1, $z1, var$12, var$13, $u1, $v11, $f;
    $offset = $v1 + $positionOffset | 0;
    $x1 = $vertices.$get1($offset).$floatValue();
    $y1 = $vertices.$get1($offset + 1 | 0).$floatValue();
    $z1 = $vertices.$get1($offset + 2 | 0).$floatValue();
    var$12 = $v2 + $positionOffset | 0;
    oktgg_GLTFPrimitive_edge1.$setX0($vertices.$get1(var$12).$floatValue() - $x1);
    oktgg_GLTFPrimitive_edge1.$setY0($vertices.$get1(var$12 + 1 | 0).$floatValue() - $y1);
    oktgg_GLTFPrimitive_edge1.$setZ($vertices.$get1(var$12 + 2 | 0).$floatValue() - $z1);
    var$13 = $v3 + $positionOffset | 0;
    oktgg_GLTFPrimitive_edge2.$setX0($vertices.$get1(var$13).$floatValue() - $x1);
    oktgg_GLTFPrimitive_edge2.$setY0($vertices.$get1(var$13 + 1 | 0).$floatValue() - $y1);
    oktgg_GLTFPrimitive_edge2.$setZ($vertices.$get1(var$13 + 2 | 0).$floatValue() - $z1);
    var$13 = $v1 + $uvOffset | 0;
    $u1 = $vertices.$get1(var$13).$floatValue();
    $v11 = $vertices.$get1(var$13 + 1 | 0).$floatValue();
    var$13 = $v2 + $uvOffset | 0;
    oktgg_GLTFPrimitive_deltaUV1.$setX0($vertices.$get1(var$13).$floatValue() - $u1);
    oktgg_GLTFPrimitive_deltaUV1.$setY0($vertices.$get1(var$13 + 1 | 0).$floatValue() - $v11);
    var$13 = $v3 + $uvOffset | 0;
    oktgg_GLTFPrimitive_deltaUV2.$setX0($vertices.$get1(var$13).$floatValue() - $u1);
    oktgg_GLTFPrimitive_deltaUV2.$setY0($vertices.$get1(var$13 + 1 | 0).$floatValue() - $v11);
    $f = 1.0 / (oktgg_GLTFPrimitive_deltaUV1.$getX0() * oktgg_GLTFPrimitive_deltaUV2.$getY0() - oktgg_GLTFPrimitive_deltaUV2.$getX0() * oktgg_GLTFPrimitive_deltaUV1.$getY0());
    oktgg_GLTFPrimitive_tmp1_vab_t.$setX0($f * (oktgg_GLTFPrimitive_deltaUV2.$getY0() * oktgg_GLTFPrimitive_edge1.$getX0() - oktgg_GLTFPrimitive_deltaUV1.$getY0() * oktgg_GLTFPrimitive_edge2.$getX0()));
    oktgg_GLTFPrimitive_tmp1_vab_t.$setY0($f * (oktgg_GLTFPrimitive_deltaUV2.$getY0() * oktgg_GLTFPrimitive_edge1.$getY0() - oktgg_GLTFPrimitive_deltaUV1.$getY0() * oktgg_GLTFPrimitive_edge2.$getY0()));
    oktgg_GLTFPrimitive_tmp1_vab_t.$setZ($f * (oktgg_GLTFPrimitive_deltaUV2.$getY0() * oktgg_GLTFPrimitive_edge1.$getZ() - oktgg_GLTFPrimitive_deltaUV1.$getY0() * oktgg_GLTFPrimitive_edge2.$getZ()));
    oktgg_GLTFPrimitive_tmp1_vab_t.$nor();
    oktgg_GLTFPrimitive_setVec4InputToTriangle($this, oktgg_GLTFPrimitive_tmp1_vab_t.$getX0(), oktgg_GLTFPrimitive_tmp1_vab_t.$getY0(), oktgg_GLTFPrimitive_tmp1_vab_t.$getZ(), 1.0, $vertices, $tangentOffset, $v1, $v2, $v3);
}
function oktgg_GLTFPrimitive_getGltf($this) {
    return $this.$gltf10;
}
function oktgg_GLTFPrimitive_getElementIndex($this) {
    return $this.$elementIndex9;
}
function oktgg_GLTFPrimitive_getMeshIndex($this) {
    return $this.$meshIndex;
}
function oktgg_GLTFPrimitive_getMesh($this) {
    return $this.$mesh1;
}
function oktgg_GLTFPrimitive__init_1($this, $gltf, $elementIndex, $meshIndex, $mesh) {
    oktgg_GLTFPrimitive_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($mesh, $rt_s(43));
    jl_Object__init_0($this);
    $this.$gltf10 = $gltf;
    $this.$elementIndex9 = $elementIndex;
    $this.$meshIndex = $meshIndex;
    $this.$mesh1 = $mesh;
    $this.$attributesMap = ju_HashMap__init_();
    $this.$name42 = $rt_s(6);
    $this.$indices1 = (-1);
    $this.$material1 = (-1);
}
function oktgg_GLTFPrimitive__init_(var$0, var$1, var$2, var$3, var$4, var$5, var$6) {
    oktgg_GLTFPrimitive_$callClinit();
    if (var$5 & 8)
        var$4 = oktm_Mesh__init_1(null, null, null, null, 0, 31, null);
    oktgg_GLTFPrimitive__init_1(var$0, var$1, var$2, var$3, var$4);
}
function oktgg_GLTFPrimitive__clinit_() {
    oktgg_GLTFPrimitive_Companion = oktgg_GLTFPrimitive$Companion__init_1(null);
    oktgg_GLTFPrimitive_tmp1_vab_t = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktgg_GLTFPrimitive_tmp2_vac_bn = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktgg_GLTFPrimitive_edge1 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktgg_GLTFPrimitive_edge2 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    oktgg_GLTFPrimitive_deltaUV1 = oktm_Vec2__init_1(0.0, 0.0, 3, null);
    oktgg_GLTFPrimitive_deltaUV2 = oktm_Vec2__init_1(0.0, 0.0, 3, null);
    oktgg_GLTFPrimitive_ind = oktgg_GLTFPrimitive$Vec3I__init_1(0, 0, 0, 7, null);
}
function oktgg_GLTFPrimitive_access$getV123($$this, $i1, $i2, $i3, $indices, $floatsPerVertex, $out) {
    oktgg_GLTFPrimitive_$callClinit();
    oktgg_GLTFPrimitive_getV1230($$this, $i1, $i2, $i3, $indices, $floatsPerVertex, $out);
}
function oktgg_GLTFPrimitive_access$calculateFlatNormal($$this, $v1, $v2, $v3, $positionOffset, $normalOffset, $vertices) {
    oktgg_GLTFPrimitive_$callClinit();
    oktgg_GLTFPrimitive_calculateFlatNormal0($$this, $v1, $v2, $v3, $positionOffset, $normalOffset, $vertices);
}
function oktgg_GLTFPrimitive_access$getV1230($$this, $i1, $i2, $i3, $floatsPerVertex, $out) {
    oktgg_GLTFPrimitive_$callClinit();
    oktgg_GLTFPrimitive_getV123($$this, $i1, $i2, $i3, $floatsPerVertex, $out);
}
function oktgg_GLTFPrimitive_access$calculateTangent($$this, $v1, $v2, $v3, $vertices, $positionOffset, $uvOffset, $tangentOffset) {
    oktgg_GLTFPrimitive_$callClinit();
    oktgg_GLTFPrimitive_calculateTangent($$this, $v1, $v2, $v3, $vertices, $positionOffset, $uvOffset, $tangentOffset);
}
function oktgg_GLTFPrimitive_access$getInd$cp() {
    oktgg_GLTFPrimitive_$callClinit();
    return oktgg_GLTFPrimitive_ind;
}
function ooo_OdeMath() {
    ooo_DRotation.call(this);
}
function ooo_OdeMath__init_() {
    var var_0 = new ooo_OdeMath();
    ooo_OdeMath__init_0(var_0);
    return var_0;
}
function ooo_OdeMath__init_0($this) {
    ooo_DRotation__init_0($this);
}
function ooo_OdeMath_dDOTpq($a, $o1, $b, $o2, $p, $q) {
    var var$7, var$8;
    var$7 = $b.data;
    var$8 = $a.data;
    return var$8[0 + $o1 | 0] * var$7[0 + $o2 | 0] + var$8[$p + $o1 | 0] * var$7[$q + $o2 | 0] + var$8[(2 * $p | 0) + $o1 | 0] * var$7[(2 * $q | 0) + $o2 | 0];
}
function ooo_OdeMath_dDOTpq0($a, $o1, $b) {
    var var$4;
    var$4 = $a.data;
    return var$4[$o1] * $b.$get01() + var$4[1 + $o1 | 0] * $b.$get10() + var$4[2 + $o1 | 0] * $b.$get20();
}
function ooo_OdeMath_dDOTpq1($a, $b, $o2, $q) {
    var var$5;
    var$5 = $b.data;
    return $a.$get01() * var$5[0 + $o2 | 0] + $a.$get10() * var$5[$q + $o2 | 0] + $a.$get20() * var$5[(2 * $q | 0) + $o2 | 0];
}
function ooo_OdeMath_dCalcVectorDot3($a, $b) {
    return $a.$dot($b);
}
function ooo_OdeMath_dCalcVectorDot31($a, $o1, $b) {
    return ooo_OdeMath_dDOTpq0($a, $o1, $b);
}
function ooo_OdeMath_dCalcVectorDot30($a, $b, $o2) {
    return ooo_OdeMath_dDOTpq1($a, $b, $o2, 1);
}
function ooo_OdeMath_dCalcVectorDot32($a, $o1, $b, $o2) {
    return ooo_OdeMath_dDOTpq($a, $o1, $b, $o2, 1, 1);
}
function ooo_OdeMath_dCalcVectorDot3_14($a, $b, $o2) {
    return $a.$dotCol($b, $o2);
}
function ooo_OdeMath_dCalcVectorDot3_41($a, $o1, $b) {
    return $a.$dotCol0($o1, $b);
}
function ooo_OdeMath_dCalcVectorDot3_44($a, $o1, $b, $o2) {
    return $a.$dotColCol($o1, $b, $o2);
}
function ooo_OdeMath_dCalcVectorCross3($a, $b, $c) {
    oom_DVector3_set00($a, $b.$get10() * $c.$get20() - $b.$get20() * $c.$get10());
    oom_DVector3_set10($a, $b.$get20() * $c.$get01() - $b.$get01() * $c.$get20());
    oom_DVector3_set20($a, $b.$get01() * $c.$get10() - $b.$get10() * $c.$get01());
}
function ooo_OdeMath_dSetCrossMatrixPlus($A, $a) {
    oom_DMatrix3_set01($A,  -$a.$get20());
    oom_DMatrix3_set02($A, $a.$get10());
    oom_DMatrix3_set10($A, $a.$get20());
    oom_DMatrix3_set12($A,  -$a.$get01());
    oom_DMatrix3_set20($A,  -$a.$get10());
    oom_DMatrix3_set21($A, $a.$get01());
}
function ooo_OdeMath_dSetCrossMatrixMinus($A, $a) {
    oom_DMatrix3_set01($A, $a.$get20());
    oom_DMatrix3_set02($A,  -$a.$get10());
    oom_DMatrix3_set10($A,  -$a.$get20());
    oom_DMatrix3_set12($A, $a.$get01());
    oom_DMatrix3_set20($A, $a.$get10());
    oom_DMatrix3_set21($A,  -$a.$get01());
}
function ooo_OdeMath_dMultiplyHelper0_331($res, $a, $b) {
    var $res_0, $res_1, $res_2;
    $res_0 = $a.$dotRow(0, $b);
    $res_1 = $a.$dotRow(1, $b);
    $res_2 = $a.$dotRow(2, $b);
    oom_DVector3_set0($res, $res_0, $res_1, $res_2);
}
function ooo_OdeMath_dMultiplyHelper1_331($res, $a, $b) {
    var $res_0, $res_1, $res_2;
    $res_0 = $a.$dotCol0(0, $b);
    $res_1 = $a.$dotCol0(1, $b);
    $res_2 = $a.$dotCol0(2, $b);
    oom_DVector3_set0($res, $res_0, $res_1, $res_2);
}
function ooo_OdeMath_dMULTIPLYOP0_331($A, $B, $C, $c) {
    oom_DVector3_set00($A, $B.$dotRow0(0, $C, $c));
    oom_DVector3_set10($A, $B.$dotRow0(1, $C, $c));
    oom_DVector3_set20($A, $B.$dotRow0(2, $C, $c));
}
function ooo_OdeMath_dMULTIPLYOP0_3310($A, $a, $B, $b, $C, $c) {
    var var$7;
    var$7 = $A.data;
    var$7[0 + $a | 0] = ooo_OdeMath_dCalcVectorDot32($B, 0 + $b | 0, $C, $c);
    var$7[1 + $a | 0] = ooo_OdeMath_dCalcVectorDot32($B, 4 + $b | 0, $C, $c);
    var$7[2 + $a | 0] = ooo_OdeMath_dCalcVectorDot32($B, 8 + $b | 0, $C, $c);
}
function ooo_OdeMath_dMULTIPLYOP0_3311($A, $a, $B, $b, $C) {
    var var$6;
    var$6 = $A.data;
    var$6[0 + $a | 0] = ooo_OdeMath_dCalcVectorDot31($B, 0 + $b | 0, $C);
    var$6[1 + $a | 0] = ooo_OdeMath_dCalcVectorDot31($B, 4 + $b | 0, $C);
    var$6[2 + $a | 0] = ooo_OdeMath_dCalcVectorDot31($B, 8 + $b | 0, $C);
}
function ooo_OdeMath_dMULTIPLYOP0_333($A, $a, $B, $C) {
    var var$5;
    var$5 = $A.data;
    var$5[0 + $a | 0] = $B.$dotRowCol(0, $C, 0);
    var$5[1 + $a | 0] = $B.$dotRowCol(0, $C, 1);
    var$5[2 + $a | 0] = $B.$dotRowCol(0, $C, 2);
    var$5[4 + $a | 0] = $B.$dotRowCol(1, $C, 0);
    var$5[5 + $a | 0] = $B.$dotRowCol(1, $C, 1);
    var$5[6 + $a | 0] = $B.$dotRowCol(1, $C, 2);
    var$5[8 + $a | 0] = $B.$dotRowCol(2, $C, 0);
    var$5[9 + $a | 0] = $B.$dotRowCol(2, $C, 1);
    var$5[10 + $a | 0] = $B.$dotRowCol(2, $C, 2);
}
function ooo_OdeMath_dMULTIPLYOP0_3330($A, $B, $C) {
    oom_DMatrix3_set00($A, $B.$dotRowCol(0, $C, 0));
    oom_DMatrix3_set01($A, $B.$dotRowCol(0, $C, 1));
    oom_DMatrix3_set02($A, $B.$dotRowCol(0, $C, 2));
    oom_DMatrix3_set10($A, $B.$dotRowCol(1, $C, 0));
    oom_DMatrix3_set11($A, $B.$dotRowCol(1, $C, 1));
    oom_DMatrix3_set12($A, $B.$dotRowCol(1, $C, 2));
    oom_DMatrix3_set20($A, $B.$dotRowCol(2, $C, 0));
    oom_DMatrix3_set21($A, $B.$dotRowCol(2, $C, 1));
    oom_DMatrix3_set22($A, $B.$dotRowCol(2, $C, 2));
}
function ooo_OdeMath_dMULTIPLYOP1_333($A, $B, $C) {
    oom_DMatrix3_set00($A, ooo_OdeMath_dCalcVectorDot3_44($B, 0, $C, 0));
    oom_DMatrix3_set01($A, ooo_OdeMath_dCalcVectorDot3_44($B, 0, $C, 1));
    oom_DMatrix3_set02($A, ooo_OdeMath_dCalcVectorDot3_44($B, 0, $C, 2));
    oom_DMatrix3_set10($A, ooo_OdeMath_dCalcVectorDot3_44($B, 1, $C, 0));
    oom_DMatrix3_set11($A, ooo_OdeMath_dCalcVectorDot3_44($B, 1, $C, 1));
    oom_DMatrix3_set12($A, ooo_OdeMath_dCalcVectorDot3_44($B, 1, $C, 2));
    oom_DMatrix3_set20($A, ooo_OdeMath_dCalcVectorDot3_44($B, 2, $C, 0));
    oom_DMatrix3_set21($A, ooo_OdeMath_dCalcVectorDot3_44($B, 2, $C, 1));
    oom_DMatrix3_set22($A, ooo_OdeMath_dCalcVectorDot3_44($B, 2, $C, 2));
}
function ooo_OdeMath_dMULTIPLYOP2_333($A, $B, $C) {
    oom_DMatrix3_set00($A, $B.$dotRowRow(0, $C, 0));
    oom_DMatrix3_set01($A, $B.$dotRowRow(0, $C, 1));
    oom_DMatrix3_set02($A, $B.$dotRowRow(0, $C, 2));
    oom_DMatrix3_set10($A, $B.$dotRowRow(1, $C, 0));
    oom_DMatrix3_set11($A, $B.$dotRowRow(1, $C, 1));
    oom_DMatrix3_set12($A, $B.$dotRowRow(1, $C, 2));
    oom_DMatrix3_set20($A, $B.$dotRowRow(2, $C, 0));
    oom_DMatrix3_set21($A, $B.$dotRowRow(2, $C, 1));
    oom_DMatrix3_set22($A, $B.$dotRowRow(2, $C, 2));
}
function ooo_OdeMath_dMultiply0_331($res, $a, $b) {
    ooo_OdeMath_dMultiplyHelper0_331($res, $a, $b);
}
function ooo_OdeMath_dMultiply0_3310($A, $B, $C, $c) {
    ooo_OdeMath_dMULTIPLYOP0_331($A, $B, $C, $c);
}
function ooo_OdeMath_dMultiply0_3311($A, $a, $B, $b, $C) {
    ooo_OdeMath_dMULTIPLYOP0_3311($A, $a, $B, $b, $C);
}
function ooo_OdeMath_dMultiply0_3312($A, $a, $B, $b, $C, $c) {
    ooo_OdeMath_dMULTIPLYOP0_3310($A, $a, $B, $b, $C, $c);
}
function ooo_OdeMath_dMultiply1_331($res, $a, $b) {
    ooo_OdeMath_dMultiplyHelper1_331($res, $a, $b);
}
function ooo_OdeMath_dMultiply0_333($A, $B, $C) {
    ooo_OdeMath_dMULTIPLYOP0_3330($A, $B, $C);
}
function ooo_OdeMath_dMultiply0_3330($A, $a, $B, $C) {
    ooo_OdeMath_dMULTIPLYOP0_333($A, $a, $B, $C);
}
function ooo_OdeMath_dMultiply1_333($A, $B, $C) {
    ooo_OdeMath_dMULTIPLYOP1_333($A, $B, $C);
}
function ooo_OdeMath_dMultiply2_333($A, $B, $C) {
    ooo_OdeMath_dMULTIPLYOP2_333($A, $B, $C);
}
function ooo_OdeMath_dMultiplyAdd0_331($A, $B, $b, $C) {
    oom_DVector3_add00($A, ooo_OdeMath_dCalcVectorDot31($B, $b + 0 | 0, $C));
    oom_DVector3_add1($A, ooo_OdeMath_dCalcVectorDot31($B, $b + 4 | 0, $C));
    oom_DVector3_add2($A, ooo_OdeMath_dCalcVectorDot31($B, $b + 8 | 0, $C));
}
function ooo_OdeMath_dCalcMatrix3Det($mat) {
    var var$2, $det;
    var$2 = $mat.$get00() * ($mat.$get11() * $mat.$get22() - $mat.$get21() * $mat.$get12());
    var$2 = var$2 - $mat.$get010() * ($mat.$get100() * $mat.$get22() - $mat.$get200() * $mat.$get12());
    $det = var$2 + $mat.$get02() * ($mat.$get100() * $mat.$get21() - $mat.$get200() * $mat.$get11());
    return $det;
}
function ooo_OdeMath_dInvertMatrix3($dst, $ma) {
    var $det, $detRecip;
    $det = ooo_OdeMath_dCalcMatrix3Det($ma);
    if ($det === 0.0)
        return 0.0;
    $detRecip = oooi_Common_dRecip($det);
    oom_DMatrix3_set00($dst, ($ma.$get11() * $ma.$get22() - $ma.$get12() * $ma.$get21()) * $detRecip);
    oom_DMatrix3_set01($dst, ($ma.$get21() * $ma.$get02() - $ma.$get010() * $ma.$get22()) * $detRecip);
    oom_DMatrix3_set02($dst, ($ma.$get010() * $ma.$get12() - $ma.$get11() * $ma.$get02()) * $detRecip);
    oom_DMatrix3_set10($dst, ($ma.$get12() * $ma.$get200() - $ma.$get100() * $ma.$get22()) * $detRecip);
    oom_DMatrix3_set11($dst, ($ma.$get00() * $ma.$get22() - $ma.$get200() * $ma.$get02()) * $detRecip);
    oom_DMatrix3_set12($dst, ($ma.$get100() * $ma.$get02() - $ma.$get00() * $ma.$get12()) * $detRecip);
    oom_DMatrix3_set20($dst, ($ma.$get100() * $ma.$get21() - $ma.$get200() * $ma.$get11()) * $detRecip);
    oom_DMatrix3_set21($dst, ($ma.$get200() * $ma.$get010() - $ma.$get00() * $ma.$get21()) * $detRecip);
    oom_DMatrix3_set22($dst, ($ma.$get00() * $ma.$get11() - $ma.$get010() * $ma.$get100()) * $detRecip);
    return $det;
}
function ooo_OdeMath__dNormalize3($a) {
    var $bNormalizationResult;
    $bNormalizationResult = ooo_OdeMath__dSafeNormalize3($a);
    oooi_Common_dIVERIFY($bNormalizationResult);
}
function ooo_OdeMath__dSafeNormalize3($a) {
    var $s, $s_0, $s_1;
    $s = jl_Math_abs(oom_DVector3_get0($a));
    $s_0 = jl_Math_abs(oom_DVector3_get1($a));
    $s_1 = jl_Math_abs(oom_DVector3_get2($a));
    if ($s_0 > $s) {
        if ($s_1 > $s_0)
            $s_0 = $s_1;
    } else if ($s_1 > $s)
        $s_0 = $s_1;
    else {
        if ($s <= 0.0) {
            oom_DVector3_set0($a, 1.0, 0.0, 0.0);
            return 0;
        }
        $s_0 = $s;
    }
    oom_DVector3_scale($a, 1.0 / $s_0);
    oom_DVector3_scale($a, 1.0 / oom_DVector3_length($a));
    return 1;
}
function ooo_OdeMath_dSafeNormalize3($a) {
    return ooo_OdeMath__dSafeNormalize3($a);
}
function ooo_OdeMath_dNormalize3($a) {
    ooo_OdeMath__dNormalize3($a);
}
function ooo_OdeMath_dNormalize4($a) {
    $a.$normalize0();
}
function ooo_OdeMath_dPlaneSpace($n, $p, $q) {
    var $a, $k;
    if (jl_Math_abs($n.$get20()) > 0.7071067811865476) {
        $a = $n.$get10() * $n.$get10() + $n.$get20() * $n.$get20();
        $k = oooi_Common_dRecipSqrt($a);
        oom_DVector3_set0($p, 0.0,  -$n.$get20() * $k, $n.$get10() * $k);
        oom_DVector3_set00($q, $a * $k);
        oom_DVector3_set10($q,  -$n.$get01() * oom_DVector3_get2($p));
        oom_DVector3_set20($q, $n.$get01() * oom_DVector3_get1($p));
    } else {
        $a = $n.$get01() * $n.$get01() + $n.$get10() * $n.$get10();
        $k = oooi_Common_dRecipSqrt($a);
        oom_DVector3_set00($p,  -$n.$get10() * $k);
        oom_DVector3_set10($p, $n.$get01() * $k);
        oom_DVector3_set20($p, 0.0);
        oom_DVector3_set00($q,  -$n.$get20() * oom_DVector3_get1($p));
        oom_DVector3_set10($q, $n.$get20() * oom_DVector3_get0($p));
        oom_DVector3_set20($q, $a * $k);
    }
}
function oooi_Step() {
    oooi_AbstractStepper.call(this);
}
var oooi_Step_INSTANCE = null;
function oooi_Step_$callClinit() {
    oooi_Step_$callClinit = $rt_eraseClinit(oooi_Step);
    oooi_Step__clinit_();
}
function oooi_Step__init_() {
    var var_0 = new oooi_Step();
    oooi_Step__init_0(var_0);
    return var_0;
}
function oooi_Step__init_0($this) {
    oooi_Step_$callClinit();
    oooi_AbstractStepper__init_0($this);
}
function oooi_Step__clinit_() {
    oooi_Step_INSTANCE = oooi_Step__init_();
}
function oktg_Material() {
    var a = this; jl_Object.call(a);
    a.$shader1 = null;
    a.$baseColor = null;
    a.$metallic = 0.0;
    a.$roughness = 0.0;
    a.$alphaCutoff0 = 0.0;
    a.$alphaMode0 = 0;
    a.$cullFaceMode0 = 0;
    a.$translucentPriority = 0;
    a.$depthMask = 0;
    a.$name43 = null;
    a.$shaderChannels = null;
}
function oktg_Material__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) {
    var var_11 = new oktg_Material();
    oktg_Material__init_1(var_11, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10);
    return var_11;
}
function oktg_Material__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12) {
    var var_13 = new oktg_Material();
    oktg_Material__init_2(var_13, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12);
    return var_13;
}
function oktg_Material__init_3() {
    var var_0 = new oktg_Material();
    oktg_Material__init_4(var_0);
    return var_0;
}
function oktg_Material_getShader($this) {
    return $this.$shader1;
}
function oktg_Material_setShader($this, $_set___) {
    $this.$shader1 = $_set___;
}
function oktg_Material_getAlphaCutoff($this) {
    return $this.$alphaCutoff0;
}
function oktg_Material_setAlphaCutoff($this, $_set___) {
    $this.$alphaCutoff0 = $_set___;
}
function oktg_Material_getAlphaMode($this) {
    return $this.$alphaMode0;
}
function oktg_Material_setAlphaMode($this, $_set___) {
    $this.$alphaMode0 = $_set___;
}
function oktg_Material_getCullFaceMode($this) {
    return $this.$cullFaceMode0;
}
function oktg_Material_setCullFaceMode($this, $_set___) {
    $this.$cullFaceMode0 = $_set___;
}
function oktg_Material_getTranslucentPriority($this) {
    return $this.$translucentPriority;
}
function oktg_Material_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name43 = $_set___;
}
function oktg_Material_getShaderChannels($this) {
    return $this.$shaderChannels;
}
function oktg_Material__init_1($this, $shader, $baseColor, $metallic, $roughness, $alphaCutoff, $alphaMode, $cullFaceMode, $translucentPriority, $depthMask, $name, $shaderChannels) {
    kji_Intrinsics_checkParameterIsNotNull($baseColor, $rt_s(1361));
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($shaderChannels, $rt_s(1362));
    jl_Object__init_0($this);
    $this.$shader1 = $shader;
    $this.$baseColor = $baseColor;
    $this.$metallic = $metallic;
    $this.$roughness = $roughness;
    $this.$alphaCutoff0 = $alphaCutoff;
    $this.$alphaMode0 = $alphaMode;
    $this.$cullFaceMode0 = $cullFaceMode;
    $this.$translucentPriority = $translucentPriority;
    $this.$depthMask = $depthMask;
    $this.$name43 = $name;
    $this.$shaderChannels = $shaderChannels;
}
function oktg_Material__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13) {
    if (var$12 & 1)
        var$1 = null;
    if (var$12 & 2)
        var$2 = oktm_Vec4__init_5(1.0);
    if (var$12 & 4)
        var$3 = 0.0;
    if (var$12 & 8)
        var$4 = 1.0;
    if (var$12 & 16)
        var$5 = 0.5;
    if (var$12 & 32)
        var$6 = 1;
    if (var$12 & 64)
        var$7 = 1029;
    if (var$12 & 128)
        var$8 = 0;
    if (var$12 & 256)
        var$9 = 1;
    if (var$12 & 512)
        var$10 = $rt_s(6);
    if (var$12 & 1024)
        var$11 = ju_HashMap__init_();
    oktg_Material__init_1(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11);
}
function oktg_Material__init_4(var$0) {
    oktg_Material__init_2(var$0, null, null, 0.0, 0.0, 0.0, 0, 0, 0, 0, null, null, 2047, null);
}
function ju_Objects() {
    jl_Object.call(this);
}
function ju_Objects__init_() {
    var var_0 = new ju_Objects();
    ju_Objects__init_0(var_0);
    return var_0;
}
function ju_Objects__init_0($this) {
    jl_Object__init_0($this);
}
function ju_Objects_equals($a, $b) {
    if ($a === $b)
        return 1;
    return $a !== null ? $a.$equals0($b) : $b !== null ? 0 : 1;
}
function ju_Objects_hashCode($o) {
    return $o !== null ? $o.$hashCode() : 0;
}
function ju_Objects_requireNonNull($obj) {
    return ju_Objects_requireNonNull0($obj, $rt_s(6));
}
function ju_Objects_requireNonNull0($obj, $message) {
    if ($obj !== null)
        return $obj;
    $rt_throw(jl_NullPointerException__init_0($message));
}
function oktmb_SphereMeshBuilder$build$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$0200 = null;
    a.$$vNum = 0;
    a.$$pi = 0.0;
    a.$$hNum = 0;
    a.$$pi2 = 0.0;
}
function oktmb_SphereMeshBuilder$build$1__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktmb_SphereMeshBuilder$build$1();
    oktmb_SphereMeshBuilder$build$1__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktmb_SphereMeshBuilder$build$1_invoke(var$0, var$1) {
    oktmb_SphereMeshBuilder$build$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktmb_SphereMeshBuilder$build$1_invoke0($this, $$this$createVerticesFloat) {
    var $yi, var$3, $v, $zenith, var$6, $yn, $y, $zenithSinR, $xi, var$11, $u, $azimuth, $xn, $zn, $x, $z, var$18, var$19;
    kji_Intrinsics_checkParameterIsNotNull($$this$createVerticesFloat, $rt_s(33));
    $yi = 0;
    var$3 = $this.$$vNum;
    while ($yi < var$3) {
        $v = $yi / oktmb_SphereMeshBuilder_getVDivisions($this.$this$0200);
        $zenith = $v * $this.$$pi;
        var$6 = $zenith;
        $yn = jl_Math_cos(var$6);
        $y = oktmb_SphereMeshBuilder_getRadius($this.$this$0200) * $yn;
        $zenithSinR = oktmb_SphereMeshBuilder_getRadius($this.$this$0200) * jl_Math_sin(var$6);
        $xi = 0;
        var$11 = $this.$$hNum;
        while ($xi < var$11) {
            $u = $xi / oktmb_SphereMeshBuilder_getHDivisions($this.$this$0200);
            $azimuth = $u * $this.$$pi2;
            var$6 = $azimuth;
            $xn = jl_Math_cos(var$6);
            $zn = jl_Math_sin(var$6);
            $x = $zenithSinR * $xn;
            $z = $zenithSinR * $zn;
            var$18 = $rt_createArray(jl_Float, 3);
            var$19 = var$18.data;
            var$19[0] = jl_Float_valueOf($x);
            var$19[1] = jl_Float_valueOf($y);
            var$19[2] = jl_Float_valueOf($z);
            $$this$createVerticesFloat.$put4(var$18);
            if ($this.$this$0200.$getUv()) {
                var$18 = $rt_createArray(jl_Float, 2);
                var$19 = var$18.data;
                var$19[0] = jl_Float_valueOf($u);
                var$19[1] = jl_Float_valueOf($v);
                $$this$createVerticesFloat.$put4(var$18);
            }
            if ($this.$this$0200.$getNormals()) {
                var$18 = $rt_createArray(jl_Float, 3);
                var$19 = var$18.data;
                var$19[0] = jl_Float_valueOf($xn);
                var$19[1] = jl_Float_valueOf($yn);
                var$19[2] = jl_Float_valueOf($zn);
                $$this$createVerticesFloat.$put4(var$18);
            }
            $xi = $xi + 1 | 0;
        }
        $yi = $yi + 1 | 0;
    }
}
function oktmb_SphereMeshBuilder$build$1__init_0(var$0, var$1, var$2, var$3, var$4, var$5) {
    var$0.$this$0200 = var$1;
    var$0.$$vNum = var$2;
    var$0.$$pi = var$3;
    var$0.$$hNum = var$4;
    var$0.$$pi2 = var$5;
    kji_Lambda__init_0(var$0, 1);
}
function oooip_DxStepperProcessingCallContext() {
    var a = this; jl_Object.call(a);
    a.$m_world0 = null;
    a.$m_stepSize0 = 0.0;
    a.$m_stepperArena0 = null;
    a.$m_islandBodiesStartA0 = null;
    a.$m_islandBodiesStartOfs = 0;
    a.$m_islandJointsStartA0 = null;
    a.$m_islandJointsStartOfs = 0;
    a.$m_islandBodiesCount = 0;
    a.$m_islandJointsCount = 0;
    a.$m_stepperAllowedThreads0 = 0;
    a.$m_taskGroup = null;
}
function oooip_DxStepperProcessingCallContext__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oooip_DxStepperProcessingCallContext();
    oooip_DxStepperProcessingCallContext__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function oooip_DxStepperProcessingCallContext__init_0($this, $world, $stepSize, $stepperAllowedThreads, $stepperArena, $islandBodiesStart, $islandJointsStart) {
    jl_Object__init_0($this);
    $this.$m_world0 = $world;
    $this.$m_stepSize0 = $stepSize;
    $this.$m_stepperArena0 = $stepperArena;
    $this.$m_islandBodiesStartA0 = $islandBodiesStart;
    $this.$m_islandBodiesStartOfs = 0;
    $this.$m_islandJointsStartA0 = $islandJointsStart;
    $this.$m_islandJointsStartOfs = 0;
    $this.$m_islandBodiesCount = 0;
    $this.$m_islandJointsCount = 0;
    $this.$m_stepperAllowedThreads0 = $stepperAllowedThreads;
}
function oooip_DxStepperProcessingCallContext_AssignIslandSelection($this, $islandBodiesStartA, $islandBodiesStartOfs, $islandJointsStartA, $islandJointsStartOfs, $islandBodiesCount, $islandJointsCount) {
    $this.$m_islandBodiesStartA0 = $islandBodiesStartA;
    $this.$m_islandBodiesStartOfs = $islandBodiesStartOfs;
    $this.$m_islandJointsStartA0 = $islandJointsStartA;
    $this.$m_islandJointsStartOfs = $islandJointsStartOfs;
    $this.$m_islandBodiesCount = $islandBodiesCount;
    $this.$m_islandJointsCount = $islandJointsCount;
}
function oooip_DxStepperProcessingCallContext_GetSelectedIslandBodiesEnd($this) {
    return $this.$m_islandBodiesStartOfs + $this.$m_islandBodiesCount | 0;
}
function oooip_DxStepperProcessingCallContext_GetSelectedIslandJointsEnd($this) {
    return $this.$m_islandJointsStartOfs + $this.$m_islandJointsCount | 0;
}
function oooip_DxStepperProcessingCallContext_m_stepperArena($this) {
    return $this.$m_stepperArena0;
}
function oooip_DxStepperProcessingCallContext_m_world($this) {
    return $this.$m_world0;
}
function oooip_DxStepperProcessingCallContext_m_islandBodiesCount($this) {
    return $this.$m_islandBodiesCount;
}
function oooip_DxStepperProcessingCallContext_m_islandJointsCount($this) {
    return $this.$m_islandJointsCount;
}
function oooip_DxStepperProcessingCallContext_m_stepperAllowedThreads($this) {
    return $this.$m_stepperAllowedThreads0;
}
function oooip_DxStepperProcessingCallContext_m_islandBodiesStartA($this) {
    return $this.$m_islandBodiesStartA0;
}
function oooip_DxStepperProcessingCallContext_m_islandBodiesStartOfs($this) {
    return $this.$m_islandBodiesStartOfs;
}
function oooip_DxStepperProcessingCallContext_m_islandJointsStartA($this) {
    return $this.$m_islandJointsStartA0;
}
function oooip_DxStepperProcessingCallContext_m_islandJointsStartOfs($this) {
    return $this.$m_islandJointsStartOfs;
}
function oooip_DxStepperProcessingCallContext_m_stepSize($this) {
    return $this.$m_stepSize0;
}
function oooip_DxStepperProcessingCallContext_m_taskGroup($this) {
    return $this.$m_taskGroup;
}
function oooip_DxStepperProcessingCallContext_AssignStepperTaskGroup($this, $group) {
    $this.$m_taskGroup = $group;
}
function oktmb_SphereMeshBuilder$build$2() {
    kji_Lambda.call(this);
    this.$this$0201 = null;
}
function oktmb_SphereMeshBuilder$build$2__init_(var_0) {
    var var_1 = new oktmb_SphereMeshBuilder$build$2();
    oktmb_SphereMeshBuilder$build$2__init_0(var_1, var_0);
    return var_1;
}
function oktmb_SphereMeshBuilder$build$2_invoke(var$0, var$1) {
    oktmb_SphereMeshBuilder$build$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktmb_SphereMeshBuilder$build$2_invoke0($this, $$this$createIndicesShort) {
    var $ringIndex, $curRingVertexIndex, $prevRingVertexIndex, var$5, $ringIndex_0, var$7, var$8, var$9, var$10;
    kji_Intrinsics_checkParameterIsNotNull($$this$createIndicesShort, $rt_s(33));
    $ringIndex = 1;
    while ($ringIndex < (oktmb_SphereMeshBuilder_getVDivisions($this.$this$0201) + 2 | 0)) {
        $curRingVertexIndex = $rt_imul(oktmb_SphereMeshBuilder_getHDivisions($this.$this$0201), $ringIndex);
        $prevRingVertexIndex = $rt_imul(oktmb_SphereMeshBuilder_getHDivisions($this.$this$0201), $ringIndex - 1 | 0);
        while (true) {
            var$5 = oktmb_SphereMeshBuilder_getHDivisions($this.$this$0201);
            $ringIndex_0 = $ringIndex + 1 | 0;
            if ($curRingVertexIndex >= ($rt_imul(var$5, $ringIndex_0) + 1 | 0))
                break;
            var$7 = $rt_createArray(jl_Short, 3);
            var$8 = var$7.data;
            var$9 = $curRingVertexIndex + 1 | 0;
            var$10 = var$9 << 16 >> 16;
            var$8[0] = jl_Short_valueOf(var$10);
            var$5 = $prevRingVertexIndex << 16 >> 16;
            var$8[1] = jl_Short_valueOf(var$5);
            $prevRingVertexIndex = $prevRingVertexIndex + 1 | 0;
            var$8[2] = jl_Short_valueOf($prevRingVertexIndex << 16 >> 16);
            $$this$createIndicesShort.$put4(var$7);
            var$7 = $rt_createArray(jl_Short, 3);
            var$8 = var$7.data;
            var$8[0] = jl_Short_valueOf($curRingVertexIndex << 16 >> 16);
            var$8[1] = jl_Short_valueOf(var$5);
            var$8[2] = jl_Short_valueOf(var$10);
            $$this$createIndicesShort.$put4(var$7);
            $curRingVertexIndex = var$9;
        }
        $ringIndex = $ringIndex_0;
    }
}
function oktmb_SphereMeshBuilder$build$2__init_0(var$0, var$1) {
    var$0.$this$0201 = var$1;
    kji_Lambda__init_0(var$0, 1);
}
function oktsg_GLSL$15() {
    kji_Lambda.call(this);
}
var oktsg_GLSL$15_INSTANCE = null;
function oktsg_GLSL$15_$callClinit() {
    oktsg_GLSL$15_$callClinit = $rt_eraseClinit(oktsg_GLSL$15);
    oktsg_GLSL$15__clinit_();
}
function oktsg_GLSL$15__init_() {
    var var_0 = new oktsg_GLSL$15();
    oktsg_GLSL$15__init_0(var_0);
    return var_0;
}
function oktsg_GLSL$15_invoke(var$0) {
    return oktsg_GLSL$15_invoke0(var$0);
}
function oktsg_GLSL$15_invoke0($this) {
    return oktsg_VelocityNode__init_2(null, null, null, null, 0, 0, 0, 127, null);
}
function oktsg_GLSL$15__init_0(var$0) {
    oktsg_GLSL$15_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktsg_GLSL$15__clinit_() {
    oktsg_GLSL$15_INSTANCE = oktsg_GLSL$15__init_();
}
function oktsg_GLSL$14() {
    kji_Lambda.call(this);
}
var oktsg_GLSL$14_INSTANCE = null;
function oktsg_GLSL$14_$callClinit() {
    oktsg_GLSL$14_$callClinit = $rt_eraseClinit(oktsg_GLSL$14);
    oktsg_GLSL$14__clinit_();
}
function oktsg_GLSL$14__init_() {
    var var_0 = new oktsg_GLSL$14();
    oktsg_GLSL$14__init_0(var_0);
    return var_0;
}
function oktsg_GLSL$14_invoke(var$0) {
    return oktsg_GLSL$14_invoke0(var$0);
}
function oktsg_GLSL$14_invoke0($this) {
    return oktsg_SkyboxVertexNode__init_0(null, 1, null);
}
function oktsg_GLSL$14__init_0(var$0) {
    oktsg_GLSL$14_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktsg_GLSL$14__clinit_() {
    oktsg_GLSL$14_INSTANCE = oktsg_GLSL$14__init_();
}
function oooi_CollideTrimeshBox() {
    jl_Object.call(this);
}
function oooi_CollideTrimeshBox__init_() {
    var var_0 = new oooi_CollideTrimeshBox();
    oooi_CollideTrimeshBox__init_0(var_0);
    return var_0;
}
function oooi_CollideTrimeshBox__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_CollideTrimeshBox_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideBTL($o1, $o2, $flags, $contacts, 1);
}
function oooi_CollideTrimeshBox_SUBTRACT($this, $a, $b, $r) {
    oom_DVector3_eqDiff($r, $a, $b);
}
function oooi_CollideTrimeshBox_SET($this, $a, $b) {
    oom_DVector3_set($a, $b);
}
function oooi_CollideTrimeshBox_ADD($this, $a, $b, $r) {
    oom_DVector3_eqSum1($r, $a, $b);
}
function oooi_CollideTrimeshBox_GETCOL($this, $m, $a, $v) {
    if (!$a)
        oom_DVector3_set0($v, $m.$get00(), $m.$get100(), $m.$get200());
    else if ($a == 1)
        oom_DVector3_set0($v, $m.$get010(), $m.$get11(), $m.$get21());
    else {
        if ($a != 2)
            $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(449)).$append1($a).$toString()));
        oom_DVector3_set0($v, $m.$get02(), $m.$get12(), $m.$get22());
    }
}
function oooi_CollideTrimeshBox_POINTDISTANCE($this, $p, $v) {
    return $p.$get01() * $v.$get01() + $p.$get10() * $v.$get10() + $p.$get20() * $v.$get20() + $p.$get30();
}
function oooi_CollideTrimeshBox_CONSTRUCTPLANE($this, $plane, $n, $d) {
    $plane.$set16($n.$get01(), $n.$get10(), $n.$get20(), $d);
}
function oooi_CollideTrimeshBox_LENGTHOF($this, $a) {
    return $a.$length2();
}
function oooi_CollideTrimeshBox_dCollideBTL($this, $g1, $BoxGeom, $Flags, $Contacts, $Stride) {
    var var$6, $TriMesh, $cData, $ptrimesh, $test_aabb, $aabb, $collision_result, $boxesresult, $ctContacts0, $dvTZ, var$16, $dv, var$18, $i, $Triint, $bFinishSearching, $contactcount;
    oooi_Common_dIASSERT($Stride < 1 ? 0 : 1);
    var$6 = $Flags & 65535;
    oooi_Common_dIASSERT(var$6 < 1 ? 0 : 1);
    $TriMesh = $g1;
    $g1.$recomputeAABB();
    $BoxGeom.$recomputeAABB();
    $cData = oooi_CollideTrimeshBox$sTrimeshBoxColliderData__init_($this);
    $cData.$SetupInitialContext($TriMesh, $BoxGeom, $Flags, $Contacts, $Stride);
    $ptrimesh = $TriMesh.$m_collision_trimesh;
    $test_aabb = oooig_GimGeometry$aabb3f__init_();
    $aabb = $BoxGeom.$getAABB();
    $test_aabb.$minX = $aabb.$getMin0();
    $test_aabb.$maxX = $aabb.$getMax0();
    $test_aabb.$minY = $aabb.$getMin1();
    $test_aabb.$maxY = $aabb.$getMax1();
    $test_aabb.$minZ = $aabb.$getMin2();
    $test_aabb.$maxZ = $aabb.$getMax2();
    $collision_result = oooig_GimDynArrayInt_GIM_CREATE_BOXQUERY_LIST();
    $ptrimesh.$getAabbSet().$gim_aabbset_box_collision($test_aabb, $collision_result);
    if (!$collision_result.$size()) {
        $collision_result.$GIM_DYNARRAY_DESTROY();
        return 0;
    }
    $boxesresult = $collision_result.$GIM_DYNARRAY_POINTER0();
    $ptrimesh.$gim_trimesh_locks_work_data();
    $ctContacts0 = 0;
    $dvTZ = $rt_createArray(oom_DVector3, 3);
    var$16 = $dvTZ.data;
    var$16[0] = oom_DVector3__init_();
    var$16[1] = oom_DVector3__init_();
    var$16[2] = oom_DVector3__init_();
    $dv = $rt_createArray(oooig_GimGeometry$vec3f, 3);
    var$18 = $dv.data;
    var$18[0] = oooig_GimGeometry$vec3f__init_();
    var$18[1] = oooig_GimGeometry$vec3f__init_();
    var$18[2] = oooig_GimGeometry$vec3f__init_();
    $i = 0;
    while ($i < $collision_result.$size()) {
        $Triint = $boxesresult.data[$i];
        $ptrimesh.$gim_trimesh_get_triangle_vertices($Triint, var$18[0], var$18[1], var$18[2]);
        $bFinishSearching = oooicj_RefBoolean__init_(0);
        var$16[0].$set14(var$18[0].$f);
        var$16[1].$set14(var$18[1].$f);
        var$16[2].$set14(var$18[2].$f);
        $ctContacts0 = oooi_CollideTrimeshBox$sTrimeshBoxColliderData_access$700($cData, $ctContacts0, $Triint, $dvTZ, $bFinishSearching);
        $i = $i + 1 | 0;
    }
    $contactcount = $cData.$m_TempContactGeoms.$size();
    if ($contactcount <= var$6)
        var$6 = $contactcount;
    else {
        ooo_OdeConfig_$callClinit();
        if (ooo_OdeConfig_ENABLE_CONTACT_SORTING)
            ju_Collections_sort($cData.$m_TempContactGeoms, oooi_CollideTrimeshBox$1__init_($this));
    }
    $ptrimesh.$gim_trimesh_unlocks_work_data();
    $collision_result.$GIM_DYNARRAY_DESTROY();
    $i = 0;
    while ($i < var$6) {
        ooo_DContactGeomBuffer_get($cData.$m_ContactGeoms, $i).$depth = $cData.$m_TempContactGeoms.$get1($i).$depth;
        ooo_DContactGeomBuffer_get($cData.$m_ContactGeoms, $i).$g1 = $cData.$m_TempContactGeoms.$get1($i).$g1;
        ooo_DContactGeomBuffer_get($cData.$m_ContactGeoms, $i).$g2 = $cData.$m_TempContactGeoms.$get1($i).$g2;
        oom_DVector3_set(ooo_DContactGeomBuffer_get($cData.$m_ContactGeoms, $i).$normal, $cData.$m_TempContactGeoms.$get1($i).$normal);
        oom_DVector3_set(ooo_DContactGeomBuffer_get($cData.$m_ContactGeoms, $i).$pos0, $cData.$m_TempContactGeoms.$get1($i).$pos0);
        ooo_DContactGeomBuffer_get($cData.$m_ContactGeoms, $i).$side1 = $cData.$m_TempContactGeoms.$get1($i).$side1;
        ooo_DContactGeomBuffer_get($cData.$m_ContactGeoms, $i).$side2 = $cData.$m_TempContactGeoms.$get1($i).$side2;
        $i = $i + 1 | 0;
    }
    return var$6;
}
function oooi_CollideTrimeshBox_GenerateContact($in_Flags, $in_Contacts, $in_Stride, $in_g1, $in_g2, $TriIndex, $in_ContactPos, $in_Normal, $in_Depth) {
    var $duplicate, $diff, var$12, $contact, var$14, $Contact;
    if ($in_Stride != 1)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1363)).$append1($in_Stride).$toString()));
    $duplicate = 0;
    $diff = oom_DVector3__init_();
    var$12 = $in_Contacts.$iterator();
    while (var$12.$hasNext()) {
        $contact = var$12.$next();
        oom_DVector3_eqDiff($diff, $in_ContactPos, $contact.$pos0);
        var$14 = oom_DVector3_dot($diff, $diff);
        oooi_Common_$callClinit();
        if (var$14 < oooi_Common_dEpsilon && 1.0 - oooi_Common_dFabs($in_Normal.$dot($contact.$normal)) < oooi_Common_dEpsilon) {
            if ($in_Depth > $contact.$depth)
                $contact.$depth = $in_Depth;
            $duplicate = 1;
        }
    }
    if (!$duplicate) {
        $Contact = ooo_DContactGeom__init_();
        oom_DVector3_set($Contact.$pos0, $in_ContactPos);
        oom_DVector3_set($Contact.$normal, $in_Normal);
        $Contact.$depth = $in_Depth;
        $Contact.$g1 = $in_g1;
        $Contact.$g2 = $in_g2;
        $Contact.$side1 = $TriIndex;
        $Contact.$side2 = (-1);
        $in_Contacts.$add1($Contact);
    }
}
function oooi_CollideTrimeshBox_access$000($x0, $x1) {
    return oooi_CollideTrimeshBox_LENGTHOF($x0, $x1);
}
function oooi_CollideTrimeshBox_access$100($x0, $x1, $x2) {
    return oooi_CollideTrimeshBox_POINTDISTANCE($x0, $x1, $x2);
}
function oooi_CollideTrimeshBox_access$200($x0, $x1, $x2, $x3) {
    oooi_CollideTrimeshBox_SUBTRACT($x0, $x1, $x2, $x3);
}
function oooi_CollideTrimeshBox_access$300($x0, $x1, $x2, $x3) {
    oooi_CollideTrimeshBox_GETCOL($x0, $x1, $x2, $x3);
}
function oooi_CollideTrimeshBox_access$400($x0, $x1, $x2) {
    oooi_CollideTrimeshBox_SET($x0, $x1, $x2);
}
function oooi_CollideTrimeshBox_access$500($x0, $x1, $x2, $x3) {
    oooi_CollideTrimeshBox_ADD($x0, $x1, $x2, $x3);
}
function oooi_CollideTrimeshBox_access$600($x0, $x1, $x2, $x3) {
    oooi_CollideTrimeshBox_CONSTRUCTPLANE($x0, $x1, $x2, $x3);
}
function oktsg_GLSL$13() {
    kji_Lambda.call(this);
}
var oktsg_GLSL$13_INSTANCE = null;
function oktsg_GLSL$13_$callClinit() {
    oktsg_GLSL$13_$callClinit = $rt_eraseClinit(oktsg_GLSL$13);
    oktsg_GLSL$13__clinit_();
}
function oktsg_GLSL$13__init_() {
    var var_0 = new oktsg_GLSL$13();
    oktsg_GLSL$13__init_0(var_0);
    return var_0;
}
function oktsg_GLSL$13_invoke(var$0) {
    return oktsg_GLSL$13_invoke0(var$0);
}
function oktsg_GLSL$13_invoke0($this) {
    return oktsg_AttributeNode__init_1(null, 0, 3, null);
}
function oktsg_GLSL$13__init_0(var$0) {
    oktsg_GLSL$13_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktsg_GLSL$13__clinit_() {
    oktsg_GLSL$13_INSTANCE = oktsg_GLSL$13__init_();
}
function oktsg_GLSL$12() {
    kji_Lambda.call(this);
}
var oktsg_GLSL$12_INSTANCE = null;
function oktsg_GLSL$12_$callClinit() {
    oktsg_GLSL$12_$callClinit = $rt_eraseClinit(oktsg_GLSL$12);
    oktsg_GLSL$12__clinit_();
}
function oktsg_GLSL$12__init_() {
    var var_0 = new oktsg_GLSL$12();
    oktsg_GLSL$12__init_0(var_0);
    return var_0;
}
function oktsg_GLSL$12_invoke(var$0) {
    return oktsg_GLSL$12_invoke0(var$0);
}
function oktsg_GLSL$12_invoke0($this) {
    return oktsg_MergeVec4__init_(null, null, null, null, 15, null);
}
function oktsg_GLSL$12__init_0(var$0) {
    oktsg_GLSL$12_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktsg_GLSL$12__clinit_() {
    oktsg_GLSL$12_INSTANCE = oktsg_GLSL$12__init_();
}
function oktsg_GLSL$11() {
    kji_Lambda.call(this);
}
var oktsg_GLSL$11_INSTANCE = null;
function oktsg_GLSL$11_$callClinit() {
    oktsg_GLSL$11_$callClinit = $rt_eraseClinit(oktsg_GLSL$11);
    oktsg_GLSL$11__clinit_();
}
function oktsg_GLSL$11__init_() {
    var var_0 = new oktsg_GLSL$11();
    oktsg_GLSL$11__init_0(var_0);
    return var_0;
}
function oktsg_GLSL$11_invoke(var$0) {
    return oktsg_GLSL$11_invoke0(var$0);
}
function oktsg_GLSL$11_invoke0($this) {
    return oktsg_SplitVec4Node__init_1(null, 1, null);
}
function oktsg_GLSL$11__init_0(var$0) {
    oktsg_GLSL$11_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktsg_GLSL$11__clinit_() {
    oktsg_GLSL$11_INSTANCE = oktsg_GLSL$11__init_();
}
function oktsg_GLSL$10() {
    kji_Lambda.call(this);
}
var oktsg_GLSL$10_INSTANCE = null;
function oktsg_GLSL$10_$callClinit() {
    oktsg_GLSL$10_$callClinit = $rt_eraseClinit(oktsg_GLSL$10);
    oktsg_GLSL$10__clinit_();
}
function oktsg_GLSL$10__init_() {
    var var_0 = new oktsg_GLSL$10();
    oktsg_GLSL$10__init_0(var_0);
    return var_0;
}
function oktsg_GLSL$10_invoke(var$0) {
    return oktsg_GLSL$10_invoke0(var$0);
}
function oktsg_GLSL$10_invoke0($this) {
    return oktsg_GBufferOutputNode__init_();
}
function oktsg_GLSL$10__init_0(var$0) {
    oktsg_GLSL$10_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktsg_GLSL$10__clinit_() {
    oktsg_GLSL$10_INSTANCE = oktsg_GLSL$10__init_();
}
function oktgn_ITransformNode$Companion$Build$1() {
    kji_Lambda.call(this);
}
var oktgn_ITransformNode$Companion$Build$1_INSTANCE = null;
function oktgn_ITransformNode$Companion$Build$1_$callClinit() {
    oktgn_ITransformNode$Companion$Build$1_$callClinit = $rt_eraseClinit(oktgn_ITransformNode$Companion$Build$1);
    oktgn_ITransformNode$Companion$Build$1__clinit_();
}
function oktgn_ITransformNode$Companion$Build$1__init_() {
    var var_0 = new oktgn_ITransformNode$Companion$Build$1();
    oktgn_ITransformNode$Companion$Build$1__init_0(var_0);
    return var_0;
}
function oktgn_ITransformNode$Companion$Build$1__init_0(var$0) {
    oktgn_ITransformNode$Companion$Build$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
function oktgn_ITransformNode$Companion$Build$1__clinit_() {
    oktgn_ITransformNode$Companion$Build$1_INSTANCE = oktgn_ITransformNode$Companion$Build$1__init_();
}
function oktt_TvmGL$renderBuffers$1() {
    kji_Lambda.call(this);
}
var oktt_TvmGL$renderBuffers$1_INSTANCE = null;
function oktt_TvmGL$renderBuffers$1_$callClinit() {
    oktt_TvmGL$renderBuffers$1_$callClinit = $rt_eraseClinit(oktt_TvmGL$renderBuffers$1);
    oktt_TvmGL$renderBuffers$1__clinit_();
}
function oktt_TvmGL$renderBuffers$1__init_() {
    var var_0 = new oktt_TvmGL$renderBuffers$1();
    oktt_TvmGL$renderBuffers$1__init_0(var_0);
    return var_0;
}
function oktt_TvmGL$renderBuffers$1_invoke(var$0, var$1) {
    return oktt_TvmGL$renderBuffers$1_invoke0(var$0, var$1);
}
function oktt_TvmGL$renderBuffers$1_invoke0($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    return oktt_TvmGL$RenderBufferWrap__init_($it);
}
function oktt_TvmGL$renderBuffers$1__init_0(var$0) {
    oktt_TvmGL$renderBuffers$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
function oktt_TvmGL$renderBuffers$1__clinit_() {
    oktt_TvmGL$renderBuffers$1_INSTANCE = oktt_TvmGL$renderBuffers$1__init_();
}
function otp_Platform() {
    jl_Object.call(this);
}
var otp_Platform_newInstancePrepared = 0;
function otp_Platform__init_() {
    var var_0 = new otp_Platform();
    otp_Platform__init_0(var_0);
    return var_0;
}
function otp_Platform__init_0($this) {
    jl_Object__init_0($this);
}
function otp_Platform_clone(var$1) {
    var copy = new var$1.constructor();
    for (var field in var$1) {
        if (!var$1.hasOwnProperty(field)) {
            continue;
        }
        copy[field] = var$1[field];
    }
    return copy;
}
function otp_Platform_isInstance($obj, $cls) {
    return $obj !== null && !(typeof $obj.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable($obj.constructor, $cls) ? 1 : 0;
}
function otp_Platform_isAssignable($from, $to) {
    var $supertypes, $i;
    if ($from === $to)
        return 1;
    $supertypes = $from.$meta.supertypes;
    $i = 0;
    while ($i < $supertypes.length) {
        if (otp_Platform_isAssignable($supertypes[$i], $to))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function otp_Platform_newInstance($cls) {
    if (!otp_Platform_newInstancePrepared) {
        otp_Platform_prepareNewInstance();
        otp_Platform_newInstancePrepared = 1;
    }
    return otp_Platform_newInstanceImpl($cls);
}
function otp_Platform_prepareNewInstance() {
    var c = '$$constructor$$';
    jl_String[c] = jl_String__init_2;
    jl_Object[c] = jl_Object__init_0;
    jl_NoClassDefFoundError[c] = jl_NoClassDefFoundError__init_0;
    jl_LinkageError[c] = jl_LinkageError__init_0;
    jl_Error[c] = jl_Error__init_0;
    jl_Throwable[c] = jl_Throwable__init_0;
    jl_NoSuchFieldError[c] = jl_NoSuchFieldError__init_0;
    jl_IncompatibleClassChangeError[c] = jl_IncompatibleClassChangeError__init_0;
    jl_NoSuchMethodError[c] = jl_NoSuchMethodError__init_0;
    jl_RuntimeException[c] = jl_RuntimeException__init_1;
    jl_Exception[c] = jl_Exception__init_0;
    jl_StringBuilder[c] = jl_StringBuilder__init_2;
    jl_AbstractStringBuilder[c] = jl_AbstractStringBuilder__init_1;
    okttt_MainTeaVMTests[c] = okttt_MainTeaVMTests__init_0;
    oktt_Tests[c] = oktt_Tests__init_0;
    ju_ArrayList[c] = ju_ArrayList__init_2;
    k_TypeCastException[c] = k_TypeCastException__init_1;
    jl_ClassCastException[c] = jl_ClassCastException__init_0;
    otji_JS[c] = otji_JS__init_0;
    otp_Platform[c] = otp_Platform__init_0;
    kji_Intrinsics[c] = kji_Intrinsics__init_0;
    jl_IllegalStateException[c] = jl_IllegalStateException__init_1;
    jl_String$_clinit_$lambda$_81_0[c] = jl_String$_clinit_$lambda$_81_0__init_0;
    otci_IntegerUtil[c] = otci_IntegerUtil__init_0;
    jl_Thread[c] = jl_Thread__init_0;
    jl_IllegalArgumentException[c] = jl_IllegalArgumentException__init_1;
    okttm_MeshTest[c] = okttm_MeshTest__init_0;
    okttm_MeshCubeTest[c] = okttm_MeshCubeTest__init_0;
    okttm_PlaneMeshBuilderTest[c] = okttm_PlaneMeshBuilderTest__init_0;
    okttm_BoxMeshBuilderTest[c] = okttm_BoxMeshBuilderTest__init_0;
    okttm_FrustumMeshBuilderTest[c] = okttm_FrustumMeshBuilderTest__init_0;
    okttm_InstancingTest[c] = okttm_InstancingTest__init_0;
    oktts_BloomBaseTest[c] = oktts_BloomBaseTest__init_0;
    oktts_BloomTest[c] = oktts_BloomTest__init_0;
    oktts_CascadedShadowMappingBaseTest[c] = oktts_CascadedShadowMappingBaseTest__init_0;
    oktts_FXAATest[c] = oktts_FXAATest__init_0;
    oktts_GBufferBaseTest[c] = oktts_GBufferBaseTest__init_0;
    oktts_MotionBlurBaseTest[c] = oktts_MotionBlurBaseTest__init_0;
    oktts_ShadowMappingBaseTest[c] = oktts_ShadowMappingBaseTest__init_0;
    oktts_SSAOBaseTest[c] = oktts_SSAOBaseTest__init_0;
    oktts_ThresholdTest[c] = oktts_ThresholdTest__init_0;
    okttsg_CascadedShadowMappingTest[c] = okttsg_CascadedShadowMappingTest__init_0;
    okttsg_EmissionBloomTest[c] = okttsg_EmissionBloomTest__init_0;
    okttsg_GBufferTest[c] = okttsg_GBufferTest__init_0;
    okttsg_MotionBlurTest[c] = okttsg_MotionBlurTest__init_0;
    okttsg_SkyboxVertexNodeTest[c] = okttsg_SkyboxVertexNodeTest__init_0;
    okttsg_SSAOTest[c] = okttsg_SSAOTest__init_0;
    oktt_Texture2DTest[c] = oktt_Texture2DTest__init_0;
    oktt_FrameBufferTest[c] = oktt_FrameBufferTest__init_0;
    oktts_SoundWavTest[c] = oktts_SoundWavTest__init_0;
    oktt_KeyboardTest[c] = oktt_KeyboardTest__init_0;
    oktt_MouseTest[c] = oktt_MouseTest__init_0;
    oktt_CascadedShadowMatricesTest[c] = oktt_CascadedShadowMatricesTest__init_0;
    oktt_SkyboxTest[c] = oktt_SkyboxTest__init_0;
    oktt_GLTFLoaderAnimTest[c] = oktt_GLTFLoaderAnimTest__init_0;
    okttp_BoxShapeTest[c] = okttp_BoxShapeTest__init_0;
    okttp_SphereShapeTest[c] = okttp_SphereShapeTest__init_0;
    okttp_TrimeshShapeTest[c] = okttp_TrimeshShapeTest__init_0;
    oktm_Vec3[c] = oktm_Vec3__init_6;
    oktm_Mat4[c] = oktm_Mat4__init_0;
    oktm_IVec3$Companion[c] = oktm_IVec3$Companion__init_0;
    oktm_Frustum[c] = oktm_Frustum__init_1;
    oktgc_ActiveCamera[c] = oktgc_ActiveCamera__init_;
    oktm_Mesh[c] = oktm_Mesh__init_4;
    oktgc_Camera[c] = oktgc_Camera__init_4;
    jl_System[c] = jl_System__init_;
    ju_Arrays[c] = ju_Arrays__init_0;
    kc_CollectionsKt[c] = kc_CollectionsKt__init_0;
    kc_CollectionsKt___CollectionsKt[c] = kc_CollectionsKt___CollectionsKt__init_0;
    kc_CollectionsKt___CollectionsJvmKt[c] = kc_CollectionsKt___CollectionsJvmKt__init_0;
    kc_CollectionsKt__ReversedViewsKt[c] = kc_CollectionsKt__ReversedViewsKt__init_0;
    kc_CollectionsKt__MutableCollectionsKt[c] = kc_CollectionsKt__MutableCollectionsKt__init_0;
    kc_CollectionsKt__MutableCollectionsJVMKt[c] = kc_CollectionsKt__MutableCollectionsJVMKt__init_0;
    kc_CollectionsKt__IteratorsKt[c] = kc_CollectionsKt__IteratorsKt__init_0;
    kc_CollectionsKt__IteratorsJVMKt[c] = kc_CollectionsKt__IteratorsJVMKt__init_0;
    kc_CollectionsKt__IterablesKt[c] = kc_CollectionsKt__IterablesKt__init_0;
    kc_CollectionsKt__CollectionsKt[c] = kc_CollectionsKt__CollectionsKt__init_0;
    kc_CollectionsKt__CollectionsJVMKt[c] = kc_CollectionsKt__CollectionsJVMKt__init_0;
    oktm_Plane[c] = oktm_Plane__init_4;
    oktg_Material[c] = oktg_Material__init_4;
    okt_APP[c] = okt_APP__init_0;
    jlr_Array[c] = jlr_Array__init_0;
    jl_NullPointerException[c] = jl_NullPointerException__init_2;
    jl_NegativeArraySizeException[c] = jl_NegativeArraySizeException__init_0;
    kc_ArraysKt[c] = kc_ArraysKt__init_0;
    kc_ArraysKt___ArraysKt[c] = kc_ArraysKt___ArraysKt__init_0;
    kc_ArraysKt___ArraysJvmKt[c] = kc_ArraysKt___ArraysJvmKt__init_0;
    kc_ArraysKt__ArraysKt[c] = kc_ArraysKt__ArraysKt__init_0;
    kc_ArraysKt__ArraysJVMKt[c] = kc_ArraysKt__ArraysJVMKt__init_0;
    oktm_Vec3$Companion[c] = oktm_Vec3$Companion__init_0;
    oktm_Mat4$Companion[c] = oktm_Mat4$Companion__init_0;
    oktgc_ICamera$Companion[c] = oktgc_ICamera$Companion__init_0;
    oktm_Frustum$Companion[c] = oktm_Frustum$Companion__init_0;
    oktm_Vec4[c] = oktm_Vec4__init_4;
    ju_HashMap[c] = ju_HashMap__init_0;
    kc_ArraysUtilJVM[c] = kc_ArraysUtilJVM__init_0;
    oktm_Plane$Companion[c] = oktm_Plane$Companion__init_1;
    okt_APP$api$1[c] = okt_APP$api$1__init_0;
    oktgc_CameraAdapter$Companion[c] = oktgc_CameraAdapter$Companion__init_1;
    oktm_IVec3$Companion$Build$1[c] = oktm_IVec3$Companion$Build$1__init_0;
    jl_StringIndexOutOfBoundsException[c] = jl_StringIndexOutOfBoundsException__init_0;
    jl_IndexOutOfBoundsException[c] = jl_IndexOutOfBoundsException__init_1;
    oktu_LOG[c] = oktu_LOG__init_;
    oktt_TeaVMApp[c] = oktt_TeaVMApp__init_4;
    oktpo_OdePhys[c] = oktpo_OdePhys__init_0;
    oktp_PHYS[c] = oktp_PHYS__init_;
    okti_KB[c] = okti_KB__init_0;
    okti_MOUSE[c] = okti_MOUSE__init_0;
    oktg_GL[c] = oktg_GL__init_0;
    jl_CloneNotSupportedException[c] = jl_CloneNotSupportedException__init_0;
    k_KotlinNullPointerException[c] = k_KotlinNullPointerException__init_0;
    oktu_DefaultLog[c] = oktu_DefaultLog__init_;
    okti_IMG[c] = okti_IMG__init_0;
    oktt_TvmDATA[c] = oktt_TvmDATA__init_0;
    oktd_DATA[c] = oktd_DATA__init_0;
    oktt_TvmFS[c] = oktt_TvmFS__init_0;
    oktf_FS[c] = oktf_FS__init_0;
    oktjj_JsonSimple3Api[c] = oktjj_JsonSimple3Api__init_0;
    oktj_JSON[c] = oktj_JSON__init_0;
    oktt_TvmKB[c] = oktt_TvmKB__init_0;
    oktt_TvmAL[c] = oktt_TvmAL__init_0;
    okta_AL[c] = okta_AL__init_0;
    ooo_OdeConfig[c] = ooo_OdeConfig__init_0;
    oktg_GL$api$1[c] = oktg_GL$api$1__init_0;
    jl_Math[c] = jl_Math__init_0;
    oktm_IMat4$Companion[c] = oktm_IMat4$Companion__init_0;
    oktt_TeaVMApp$anim$1[c] = oktt_TeaVMApp$anim$1__init_0;
    oktt_TvmIMG[c] = oktt_TvmIMG__init_0;
    ju_HashSet[c] = ju_HashSet__init_0;
    jl_UnsupportedOperationException[c] = jl_UnsupportedOperationException__init_1;
    oooi_OdeFactoryImpl[c] = oooi_OdeFactoryImpl__init_0;
    oooij_OdeJointsFactoryImpl[c] = oooij_OdeJointsFactoryImpl__init_0;
    oooi_OdeInit[c] = oooi_OdeInit__init_;
    oktam_MockAudio[c] = oktam_MockAudio__init_0;
    oktm_IMat4$Companion$Build$1[c] = oktm_IMat4$Companion$Build$1__init_;
    oktt_TvmGL$textures$1[c] = oktt_TvmGL$textures$1__init_;
    oktt_TvmGL$programs$1[c] = oktt_TvmGL$programs$1__init_;
    oktt_TvmGL$buffers$1[c] = oktt_TvmGL$buffers$1__init_0;
    oktt_TvmGL$vertexArrays$1[c] = oktt_TvmGL$vertexArrays$1__init_0;
    oktt_TvmGL$frameBuffers$1[c] = oktt_TvmGL$frameBuffers$1__init_0;
    oktt_TvmGL$renderBuffers$1[c] = oktt_TvmGL$renderBuffers$1__init_0;
    oktt_TvmGL$shaders$1[c] = oktt_TvmGL$shaders$1__init_0;
    oooig_Gimpact[c] = oooig_Gimpact__init_0;
    oooi_DxGeom$dColliderEntry[c] = oooi_DxGeom$dColliderEntry__init_1;
    oooi_DxSphere$CollideSphereSphere[c] = oooi_DxSphere$CollideSphereSphere__init_0;
    oooi_DxSphere$CollideSphereBox[c] = oooi_DxSphere$CollideSphereBox__init_0;
    oooi_DxSphere$CollideSpherePlane[c] = oooi_DxSphere$CollideSpherePlane__init_0;
    oooi_CollideBoxBox[c] = oooi_CollideBoxBox__init_0;
    oooi_CollideBoxPlane[c] = oooi_CollideBoxPlane__init_0;
    oooi_DxCapsule$CollideCapsuleSphere[c] = oooi_DxCapsule$CollideCapsuleSphere__init_0;
    oooi_DxCapsule$CollideCapsuleBox[c] = oooi_DxCapsule$CollideCapsuleBox__init_0;
    oooi_DxCapsule$CollideCapsuleCapsule[c] = oooi_DxCapsule$CollideCapsuleCapsule__init_0;
    oooi_DxCapsule$CollideCapsulePlane[c] = oooi_DxCapsule$CollideCapsulePlane__init_0;
    oooi_DxRay$CollideRaySphere[c] = oooi_DxRay$CollideRaySphere__init_0;
    oooi_DxRay$CollideRayBox[c] = oooi_DxRay$CollideRayBox__init_0;
    oooi_DxRay$CollideRayCapsule[c] = oooi_DxRay$CollideRayCapsule__init_0;
    oooi_DxRay$CollideRayPlane[c] = oooi_DxRay$CollideRayPlane__init_0;
    oooi_DxRay$CollideRayCylinder[c] = oooi_DxRay$CollideRayCylinder__init_0;
    oooi_CollideTrimeshSphere[c] = oooi_CollideTrimeshSphere__init_0;
    oooi_CollideTrimeshBox[c] = oooi_CollideTrimeshBox__init_0;
    oooi_CollideTrimeshRay[c] = oooi_CollideTrimeshRay__init_0;
    oooi_CollideTrimeshTrimesh[c] = oooi_CollideTrimeshTrimesh__init_0;
    oooi_CollideTrimeshCCylinder[c] = oooi_CollideTrimeshCCylinder__init_0;
    oooi_CollideTrimeshPlane[c] = oooi_CollideTrimeshPlane__init_0;
    oooi_CollideCylinderTrimesh[c] = oooi_CollideCylinderTrimesh__init_0;
    oooi_CollideConvexTrimesh[c] = oooi_CollideConvexTrimesh__init_0;
    oooi_CollideSpaceGeom[c] = oooi_CollideSpaceGeom__init_0;
    oooi_CollideCylinderBox[c] = oooi_CollideCylinderBox__init_0;
    oooi_DxCollisionUtil[c] = oooi_DxCollisionUtil__init_0;
    oooi_CollisionLibccd$CollideBoxCylinderCCD[c] = oooi_CollisionLibccd$CollideBoxCylinderCCD__init_0;
    oooi_CollideCylinderSphere[c] = oooi_CollideCylinderSphere__init_0;
    oooi_CollideCylinderPlane[c] = oooi_CollideCylinderPlane__init_0;
    oooi_CollisionLibccd$CollideCylinderCylinder[c] = oooi_CollisionLibccd$CollideCylinderCylinder__init_0;
    oooi_CollisionLibccd$CollideCapsuleCylinder[c] = oooi_CollisionLibccd$CollideCapsuleCylinder__init_0;
    oooi_DxConvex$CollideConvexBox[c] = oooi_DxConvex$CollideConvexBox__init_0;
    oooi_CollisionLibccd$CollideConvexBoxCCD[c] = oooi_CollisionLibccd$CollideConvexBoxCCD__init_0;
    oooi_DxConvex$CollideConvexCapsule[c] = oooi_DxConvex$CollideConvexCapsule__init_0;
    oooi_CollisionLibccd$CollideConvexCapsuleCCD[c] = oooi_CollisionLibccd$CollideConvexCapsuleCCD__init_0;
    oooi_CollisionLibccd$CollideConvexCylinderCCD[c] = oooi_CollisionLibccd$CollideConvexCylinderCCD__init_0;
    oooi_DxConvex$CollideSphereConvex[c] = oooi_DxConvex$CollideSphereConvex__init_0;
    oooi_CollisionLibccd$CollideConvexSphereCCD[c] = oooi_CollisionLibccd$CollideConvexSphereCCD__init_0;
    oooi_DxConvex$CollideConvexConvex[c] = oooi_DxConvex$CollideConvexConvex__init_0;
    oooi_CollisionLibccd$CollideConvexConvexCCD[c] = oooi_CollisionLibccd$CollideConvexConvexCCD__init_0;
    oooi_DxConvex$CollideConvexPlane[c] = oooi_DxConvex$CollideConvexPlane__init_0;
    oooi_DxConvex$CollideRayConvex[c] = oooi_DxConvex$CollideRayConvex__init_0;
    oooi_DxHeightfield$CollideHeightfield[c] = oooi_DxHeightfield$CollideHeightfield__init_0;
    oooi_DxWorld[c] = oooi_DxWorld__init_0;
    oooig_GimMath[c] = oooig_GimMath__init_0;
    oom_DVector3[c] = oom_DVector3__init_2;
    oom_DMatrix3[c] = oom_DMatrix3__init_2;
    ooo_OdeMath[c] = ooo_OdeMath__init_0;
    ooo_DRotation[c] = ooo_DRotation__init_0;
    ooo_DMatrix[c] = ooo_DMatrix__init_0;
    ooo_DMisc[c] = ooo_DMisc__init_0;
    oooi_Common[c] = oooi_Common__init_0;
    ooo_OdeConstants[c] = ooo_OdeConstants__init_0;
    ju_Random[c] = ju_Random__init_1;
    oooi_ErrorHdl[c] = oooi_ErrorHdl__init_;
    otjb_Performance[c] = otjb_Performance__init_;
    jl_ConsoleOutputStreamStdout[c] = jl_ConsoleOutputStreamStdout__init_;
    jnci_UTF8Charset[c] = jnci_UTF8Charset__init_0;
    jl_ConsoleOutputStreamStderr[c] = jl_ConsoleOutputStreamStderr__init_0;
    k_UninitializedPropertyAccessException[c] = k_UninitializedPropertyAccessException__init_1;
    oktt_TvmUInt8Array$Companion[c] = oktt_TvmUInt8Array$Companion__init_0;
    ju_ConcurrentModificationException[c] = ju_ConcurrentModificationException__init_0;
    k_NotImplementedError[c] = k_NotImplementedError__init_1;
    ji_IOException[c] = ji_IOException__init_0;
    k_Unit[c] = k_Unit__init_0;
    oktt_GLTFModel[c] = oktt_GLTFModel__init_4;
    oktgg_GLTFConf[c] = oktgg_GLTFConf__init_4;
    oktt_MouseTest$testMain$1[c] = oktt_MouseTest$testMain$1__init_0;
    oktt_CubeModel[c] = oktt_CubeModel__init_0;
    oktt_SimpleFrameBuffer[c] = oktt_SimpleFrameBuffer__init_4;
    oktsp_Threshold[c] = oktsp_Threshold__init_4;
    oktm_ScreenQuad[c] = oktm_ScreenQuad__init_4;
    okts_Shader[c] = okts_Shader__init_4;
    oktt_GBuffer[c] = oktt_GBuffer__init_4;
    oktmb_BoxMeshBuilder[c] = oktmb_BoxMeshBuilder__init_4;
    oktmb_MeshBuilder[c] = oktmb_MeshBuilder__init_0;
    oktmb_PlaneMeshBuilder[c] = oktmb_PlaneMeshBuilder__init_4;
    oktg_Object3D[c] = oktg_Object3D__init_0;
    oktmb_BoxMeshBuilder$Companion[c] = oktmb_BoxMeshBuilder$Companion__init_0;
    oktsg_CameraDataNode[c] = oktsg_CameraDataNode__init_4;
    oktsg_GLSL[c] = oktsg_GLSL__init_;
    oktsg_SkyboxVertexNode[c] = oktsg_SkyboxVertexNode__init_1;
    oktt_TextureCube[c] = oktt_TextureCube__init_4;
    oktsg_TextureNode[c] = oktsg_TextureNode__init_4;
    oktsg_OutputNode[c] = oktsg_OutputNode__init_4;
    oktg_Scene[c] = oktg_Scene__init_4;
    oktgc_OrbitCameraControl[c] = oktgc_OrbitCameraControl__init_4;
    oktsp_FXAA[c] = oktsp_FXAA__init_0;
    oktm_ScreenQuad$TextureRenderer[c] = oktm_ScreenQuad$TextureRenderer__init_0;
    oktsp_MotionBlur[c] = oktsp_MotionBlur__init_4;
    kji_Ref$FloatRef[c] = kji_Ref$FloatRef__init_0;
    kji_Ref$BooleanRef[c] = kji_Ref$BooleanRef__init_0;
    oktt_FrameBuffer[c] = oktt_FrameBuffer__init_4;
    oktm_VertexInputs[c] = oktm_VertexInputs__init_1;
    oktt_KeyboardTest$testMain$1[c] = oktt_KeyboardTest$testMain$1__init_0;
    oktmb_SphereMeshBuilder[c] = oktmb_SphereMeshBuilder__init_4;
    oktt_Texture2D[c] = oktt_Texture2D__init_4;
    kji_Ref$IntRef[c] = kji_Ref$IntRef__init_0;
    oktm_Vec2[c] = oktm_Vec2__init_4;
    oktu_Color[c] = oktu_Color__init_;
    oktg_ShaderChannel[c] = oktg_ShaderChannel__init_0;
    oktt_GLTFLoaderAnimTest$testMain$1[c] = oktt_GLTFLoaderAnimTest$testMain$1__init_0;
    okttsg_SSAOTest$testMain$1[c] = okttsg_SSAOTest$testMain$1__init_0;
    oktt_CubeModel$Companion[c] = oktt_CubeModel$Companion__init_;
    oktm_IMesh$Companion[c] = oktm_IMesh$Companion__init_0;
    oktgn_Node[c] = oktgn_Node__init_0;
    oktgn_ITransformNode$Companion[c] = oktgn_ITransformNode$Companion__init_0;
    okttsg_CascadedShadowMappingTest$testMain$1[c] = okttsg_CascadedShadowMappingTest$testMain$1__init_0;
    okttsg_EmissionBloomTest$testMain$1[c] = okttsg_EmissionBloomTest$testMain$1__init_0;
    oktt_Attachments[c] = oktt_Attachments__init_0;
    oktm_IVertexBuffer$Companion[c] = oktm_IVertexBuffer$Companion__init_;
    okttp_TrimeshShapeTest$testMain$plane$1[c] = okttp_TrimeshShapeTest$testMain$plane$1__init_0;
    oktgl_DirectionalLight[c] = oktgl_DirectionalLight__init_4;
    oktt_GLTFModel$1[c] = oktt_GLTFModel$1__init_0;
    oktt_FrameBufferAttachment[c] = oktt_FrameBufferAttachment__init_0;
    oktsp_Threshold$Companion[c] = oktsp_Threshold$Companion__init_0;
    okts_Shader$Companion[c] = okts_Shader$Companion__init_1;
    oktsp_SSAO$Companion[c] = oktsp_SSAO$Companion__init_1;
    kr_Random$Default[c] = kr_Random$Default__init_1;
    oktmb_PlaneMeshBuilder$1[c] = oktmb_PlaneMeshBuilder$1__init_;
    oktsg_GLSLFloatInline[c] = oktsg_GLSLFloatInline__init_4;
    oktsg_GLSLVec3Inline[c] = oktsg_GLSLVec3Inline__init_4;
    ju_LinkedHashMap[c] = ju_LinkedHashMap__init_0;
    oktsg_CameraDataNode$Companion[c] = oktsg_CameraDataNode$Companion__init_1;
    oktsg_SkyboxVertexNode$Companion[c] = oktsg_SkyboxVertexNode$Companion__init_0;
    oktsg_TextureNode$Companion[c] = oktsg_TextureNode$Companion__init_1;
    oktsg_OutputNode$Companion[c] = oktsg_OutputNode$Companion__init_1;
    oktg_IWorld$Companion[c] = oktg_IWorld$Companion__init_0;
    oktg_Scene$Companion[c] = oktg_Scene$Companion__init_1;
    oktsp_FXAA$Companion[c] = oktsp_FXAA$Companion__init_0;
    oktsp_MotionBlur$Companion[c] = oktsp_MotionBlur$Companion__init_0;
    oktmb_FrustumMeshBuilder$Companion[c] = oktmb_FrustumMeshBuilder$Companion__init_0;
    oktm_IndexBufferObject$Companion[c] = oktm_IndexBufferObject$Companion__init_0;
    oktt_Texture2D$Companion[c] = oktt_Texture2D$Companion__init_1;
    oktm_Vec2$Companion[c] = oktm_Vec2$Companion__init_0;
    oktm_IVec4$Companion[c] = oktm_IVec4$Companion__init_0;
    oktsp_Bloom$Companion[c] = oktsp_Bloom$Companion__init_0;
    oktsg_GLSL$1[c] = oktsg_GLSL$1__init_;
    oktsg_GLSL$2[c] = oktsg_GLSL$2__init_;
    oktsg_GLSL$3[c] = oktsg_GLSL$3__init_;
    oktsg_GLSL$4[c] = oktsg_GLSL$4__init_;
    oktsg_GLSL$5[c] = oktsg_GLSL$5__init_;
    oktsg_GLSL$6[c] = oktsg_GLSL$6__init_;
    oktsg_GLSL$7[c] = oktsg_GLSL$7__init_;
    oktsg_GLSL$8[c] = oktsg_GLSL$8__init_;
    oktsg_GLSL$9[c] = oktsg_GLSL$9__init_;
    oktsg_GLSL$10[c] = oktsg_GLSL$10__init_0;
    oktsg_GLSL$11[c] = oktsg_GLSL$11__init_0;
    oktsg_GLSL$12[c] = oktsg_GLSL$12__init_0;
    oktsg_GLSL$13[c] = oktsg_GLSL$13__init_0;
    oktsg_GLSL$14[c] = oktsg_GLSL$14__init_0;
    oktsg_GLSL$15[c] = oktsg_GLSL$15__init_0;
    oktsg_ShaderNode$Companion[c] = oktsg_ShaderNode$Companion__init_1;
    oktg_Scene$objectSorter$1[c] = oktg_Scene$objectSorter$1__init_0;
    oktm_IVertexBuffer$Companion$Build$1[c] = oktm_IVertexBuffer$Companion$Build$1__init_0;
    oktgg_GLTF$Companion[c] = oktgg_GLTF$Companion__init_0;
    oktgl_DirectionalLight$Companion[c] = oktgl_DirectionalLight$Companion__init_0;
    ki_PlatformImplementations[c] = ki_PlatformImplementations__init_0;
    oktgn_AdapterTransformNode[c] = oktgn_AdapterTransformNode__init_0;
    oktu_AsyncArrayList[c] = oktu_AsyncArrayList__init_0;
    kr_Random$Companion[c] = kr_Random$Companion__init_0;
    oktm_IMesh$Companion$Build$1[c] = oktm_IMesh$Companion$Build$1__init_0;
    oktgn_ITransformNode$Companion$Build$1[c] = oktgn_ITransformNode$Companion$Build$1__init_0;
    oktg_World[c] = oktg_World__init_0;
    oktgn_AdapterTransformNode$Companion[c] = oktgn_AdapterTransformNode$Companion__init_0;
    oktu_AsyncArrayList$Companion[c] = oktu_AsyncArrayList$Companion__init_0;
    jl_ClassNotFoundException[c] = jl_ClassNotFoundException__init_0;
    jl_ReflectiveOperationException[c] = jl_ReflectiveOperationException__init_0;
    ju_Properties[c] = ju_Properties__init_0;
    ju_Hashtable[c] = ju_Hashtable__init_0;
    kt_StringsKt[c] = kt_StringsKt__init_0;
    kt_StringsKt___StringsKt[c] = kt_StringsKt___StringsKt__init_0;
    kt_StringsKt___StringsJvmKt[c] = kt_StringsKt___StringsJvmKt__init_0;
    kt_StringsKt__StringsKt[c] = kt_StringsKt__StringsKt__init_0;
    kt_StringsKt__StringsJVMKt[c] = kt_StringsKt__StringsJVMKt__init_0;
    kt_StringsKt__StringNumberConversionsKt[c] = kt_StringsKt__StringNumberConversionsKt__init_0;
    kt_StringsKt__StringNumberConversionsJVMKt[c] = kt_StringsKt__StringNumberConversionsJVMKt__init_0;
    kt_StringsKt__StringBuilderKt[c] = kt_StringsKt__StringBuilderKt__init_0;
    kt_StringsKt__StringBuilderJVMKt[c] = kt_StringsKt__StringBuilderJVMKt__init_0;
    kt_StringsKt__RegexExtensionsKt[c] = kt_StringsKt__RegexExtensionsKt__init_0;
    kt_StringsKt__RegexExtensionsJVMKt[c] = kt_StringsKt__RegexExtensionsJVMKt__init_0;
    kt_StringsKt__IndentKt[c] = kt_StringsKt__IndentKt__init_0;
    kt_StringsKt__AppendableKt[c] = kt_StringsKt__AppendableKt__init_0;
    jl_NumberFormatException[c] = jl_NumberFormatException__init_1;
    kr_RangesKt[c] = kr_RangesKt__init_0;
    kr_RangesKt___RangesKt[c] = kr_RangesKt___RangesKt__init_0;
    kr_RangesKt__RangesKt[c] = kr_RangesKt__RangesKt__init_0;
    ju_NoSuchElementException[c] = ju_NoSuchElementException__init_1;
    kt_CharsKt[c] = kt_CharsKt__init_0;
    kt_CharsKt__CharKt[c] = kt_CharsKt__CharKt__init_0;
    kt_CharsKt__CharJVMKt[c] = kt_CharsKt__CharJVMKt__init_0;
    ju_Hashtable$1[c] = ju_Hashtable$1__init_0;
    ju_Hashtable$2[c] = ju_Hashtable$2__init_0;
    otpp_ResourceAccessor[c] = otpp_ResourceAccessor__init_;
    otciu_UnicodeHelper[c] = otciu_UnicodeHelper__init_0;
    otci_Base46[c] = otci_Base46__init_0;
    kr_FallbackThreadLocalRandom[c] = kr_FallbackThreadLocalRandom__init_0;
    jl_InstantiationException[c] = jl_InstantiationException__init_0;
    kji_FloatCompanionObject[c] = kji_FloatCompanionObject__init_0;
    oktmb_FrustumMeshBuilder$build$1[c] = oktmb_FrustumMeshBuilder$build$1__init_0;
    oktmb_FrustumMeshBuilder$build$2[c] = oktmb_FrustumMeshBuilder$build$2__init_0;
    kr_FallbackThreadLocalRandom$implStorage$1[c] = kr_FallbackThreadLocalRandom$implStorage$1__init_0;
    jl_ThreadLocal[c] = jl_ThreadLocal__init_0;
    oktmb_BoxMeshBuilder$build$2[c] = oktmb_BoxMeshBuilder$build$2__init_;
    oktu_IPath$Companion[c] = oktu_IPath$Companion__init_0;
    oktm_IIndexBufferObject$Companion[c] = oktm_IIndexBufferObject$Companion__init_0;
    oktg_IMaterial$Companion[c] = oktg_IMaterial$Companion__init_0;
    oktg_IObject3D$Companion[c] = oktg_IObject3D$Companion__init_0;
    oktg_IScene$Companion[c] = oktg_IScene$Companion__init_0;
    oktm_IVec2$Companion[c] = oktm_IVec2$Companion__init_0;
    jl_IllegalMonitorStateException[c] = jl_IllegalMonitorStateException__init_0;
    oktt_IFrameBuffer$buildAttachments$1[c] = oktt_IFrameBuffer$buildAttachments$1__init_0;
    okti_IImg$load$1[c] = okti_IImg$load$1__init_0;
    jl_SystemClassLoader[c] = jl_SystemClassLoader__init_;
    jl_Object$Monitor[c] = jl_Object$Monitor__init_0;
    oktm_IIndexBufferObject$Companion$Build$1[c] = oktm_IIndexBufferObject$Companion$Build$1__init_0;
    oktg_IObject3D$Companion$Build$1[c] = oktg_IObject3D$Companion$Build$1__init_0;
    oktg_IScene$Companion$Build$1[c] = oktg_IScene$Companion$Build$1__init_0;
    oktm_IVec2$Companion$Pool$1[c] = oktm_IVec2$Companion$Pool$1__init_;
    oktm_IVec2$Companion$Pool$2[c] = oktm_IVec2$Companion$Pool$2__init_;
    jl_ArrayIndexOutOfBoundsException[c] = jl_ArrayIndexOutOfBoundsException__init_0;
    oktpo_OdePhysicsWorld[c] = oktpo_OdePhysicsWorld__init_0;
    oktam_MockSound[c] = oktam_MockSound__init_;
    ooott_SameThreadTaskExecutor[c] = ooott_SameThreadTaskExecutor__init_0;
    oooicj_Ref[c] = oooicj_Ref__init_0;
    oooi_Objects_H$dxAutoDisable[c] = oooi_Objects_H$dxAutoDisable__init_0;
    oooi_Objects_H$dxQuickStepParameters[c] = oooi_Objects_H$dxQuickStepParameters__init_0;
    oooi_Objects_H$CloneableParameter[c] = oooi_Objects_H$CloneableParameter__init_0;
    oooi_Objects_H$dxContactParameters[c] = oooi_Objects_H$dxContactParameters__init_0;
    oooi_Objects_H$dxDampingParameters[c] = oooi_Objects_H$dxDampingParameters__init_0;
    kt_Charsets[c] = kt_Charsets__init_;
    ju_LinkedList[c] = ju_LinkedList__init_0;
    ju_Collections[c] = ju_Collections__init_0;
    kt_SystemProperties[c] = kt_SystemProperties__init_0;
    oktpo_OdePhysicsWorld$Companion[c] = oktpo_OdePhysicsWorld$Companion__init_0;
    ju_Collections$_clinit_$lambda$_61_0[c] = ju_Collections$_clinit_$lambda$_61_0__init_0;
    ju_Collections$_clinit_$lambda$_61_1[c] = ju_Collections$_clinit_$lambda$_61_1__init_0;
    oooij_DxJointGroup[c] = oooij_DxJointGroup__init_0;
    oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1[c] = oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1__init_0;
    oktpo_OdePhysicsWorld$Companion$geomPairsPool$1[c] = oktpo_OdePhysicsWorld$Companion$geomPairsPool$1__init_0;
    ju_Collections$5[c] = ju_Collections$5__init_0;
    ju_Collections$6[c] = ju_Collections$6__init_0;
    ju_Collections$3[c] = ju_Collections$3__init_0;
    jnc_Charset$Charsets[c] = jnc_Charset$Charsets__init_;
    ooo_DAABB[c] = ooo_DAABB__init_0;
    oooi_Objects_H$DxPosR[c] = oooi_Objects_H$DxPosR__init_0;
    jn_ReadOnlyBufferException[c] = jn_ReadOnlyBufferException__init_0;
    jn_BufferOverflowException[c] = jn_BufferOverflowException__init_0;
    jn_BufferUnderflowException[c] = jn_BufferUnderflowException__init_0;
    oktsg_GLSLType[c] = oktsg_GLSLType__init_;
    oktga_AnimPlayer[c] = oktga_AnimPlayer__init_0;
    jl_AssertionError[c] = jl_AssertionError__init_1;
    oktgg_GLTF$glCalls$1[c] = oktgg_GLTF$glCalls$1__init_0;
    kc_ComparisonsKt[c] = kc_ComparisonsKt__init_0;
    kc_ComparisonsKt___ComparisonsKt[c] = kc_ComparisonsKt___ComparisonsKt__init_0;
    kc_ComparisonsKt___ComparisonsJvmKt[c] = kc_ComparisonsKt___ComparisonsJvmKt__init_0;
    kc_ComparisonsKt__ComparisonsKt[c] = kc_ComparisonsKt__ComparisonsKt__init_0;
    jnc_CharacterCodingException[c] = jnc_CharacterCodingException__init_0;
    oktpo_OdeRigidBody$Companion[c] = oktpo_OdeRigidBody$Companion__init_0;
    oom_DQuaternion[c] = oom_DQuaternion__init_0;
    oktga_AnimPlayer$Companion[c] = oktga_AnimPlayer$Companion__init_0;
    oktga_AnimPlayer$Companion$animationPool$1[c] = oktga_AnimPlayer$Companion$animationPool$1__init_0;
    oktga_AnimPlayer$Companion$vec3Pool$1[c] = oktga_AnimPlayer$Companion$vec3Pool$1__init_;
    oktga_AnimPlayer$Companion$vec4Pool$1[c] = oktga_AnimPlayer$Companion$vec4Pool$1__init_;
    oktgg_GLTFAnimation$Companion[c] = oktgg_GLTFAnimation$Companion__init_0;
    oooi_DxMass[c] = oooi_DxMass__init_0;
    ks_SequencesKt[c] = ks_SequencesKt__init_0;
    ks_SequencesKt___SequencesKt[c] = ks_SequencesKt___SequencesKt__init_0;
    ks_SequencesKt___SequencesJvmKt[c] = ks_SequencesKt___SequencesJvmKt__init_0;
    ks_SequencesKt__SequencesKt[c] = ks_SequencesKt__SequencesKt__init_0;
    ks_SequencesKt__SequencesJVMKt[c] = ks_SequencesKt__SequencesJVMKt__init_0;
    ks_SequencesKt__SequenceBuilderKt[c] = ks_SequencesKt__SequenceBuilderKt__init_0;
    kr_IntRange$Companion[c] = kr_IntRange$Companion__init_0;
    kr_IntProgression$Companion[c] = kr_IntProgression$Companion__init_0;
    kji_Ref$ObjectRef[c] = kji_Ref$ObjectRef__init_0;
    ji_EOFException[c] = ji_EOFException__init_0;
    oktjj_JsonSimple3Object$Companion[c] = oktjj_JsonSimple3Object$Companion__init_0;
    oktpo_IOdeGeom$Companion[c] = oktpo_IOdeGeom$Companion__init_;
    oktp_IShape$Companion[c] = oktp_IShape$Companion__init_;
    oooi_Rotation[c] = oooi_Rotation__init_0;
    oooi_Matrix[c] = oooi_Matrix__init_0;
    oooi_FastDot[c] = oooi_FastDot__init_0;
    oooi_Misc[c] = oooi_Misc__init_0;
    oktm_ScreenQuad$TextureRenderer$render$1[c] = oktm_ScreenQuad$TextureRenderer$render$1__init_0;
    oktm_IScreenQuad$render$1[c] = oktm_IScreenQuad$render$1__init_;
    cgcj_JsonObject[c] = cgcj_JsonObject__init_0;
    oktpo_BodyContactPair[c] = oktpo_BodyContactPair__init_0;
    oktpo_GeomContactPair[c] = oktpo_GeomContactPair__init_0;
    oktn_NET[c] = oktn_NET__init_;
    oooi_FastLDLT[c] = oooi_FastLDLT__init_0;
    juca_AtomicLong[c] = juca_AtomicLong__init_1;
    oktga_AnimPlayer$AnimationDesc[c] = oktga_AnimPlayer$AnimationDesc__init_0;
    cgcj_Jsoner[c] = cgcj_Jsoner__init_0;
    cgcj_JsonArray[c] = cgcj_JsonArray__init_1;
    ji_StringWriter[c] = ji_StringWriter__init_0;
    kji_TypeIntrinsics[c] = kji_TypeIntrinsics__init_0;
    jl_StringBuffer[c] = jl_StringBuffer__init_2;
    kc_EmptyList[c] = kc_EmptyList__init_0;
    oktsg_VertexNode[c] = oktsg_VertexNode__init_4;
    oktsg_GBufferOutputNode[c] = oktsg_GBufferOutputNode__init_0;
    oktsg_PrincipledBSDF[c] = oktsg_PrincipledBSDF__init_0;
    oktga_ActionTrack[c] = oktga_ActionTrack__init_0;
    oooi_DxHashSpace$dxAABB[c] = oooi_DxHashSpace$dxAABB__init_0;
    oooi_DxHashSpace$Node[c] = oooi_DxHashSpace$Node__init_0;
    ju_LinkedList$Entry[c] = ju_LinkedList$Entry__init_0;
    ju_Objects[c] = ju_Objects__init_0;
    oooicj_RefInt[c] = oooicj_RefInt__init_1;
    oooic_C_All[c] = oooic_C_All__init_0;
    oooic_Cmath[c] = oooic_Cmath__init_0;
    oooic_Csetjmp[c] = oooic_Csetjmp__init_0;
    oooic_Cstdarg[c] = oooic_Cstdarg__init_0;
    oooic_Cstdio[c] = oooic_Cstdio__init_0;
    oooic_Cstdlib[c] = oooic_Cstdlib__init_0;
    oooic_Cstring[c] = oooic_Cstring__init_0;
    oooic_Ctime[c] = oooic_Ctime__init_0;
    oooic_Ctype[c] = oooic_Ctype__init_0;
    oktsg_VertexNode$Companion[c] = oktsg_VertexNode$Companion__init_0;
    oktsg_GBufferOutputNode$Companion[c] = oktsg_GBufferOutputNode$Companion__init_0;
    oktsg_PrincipledBSDF$Companion[c] = oktsg_PrincipledBSDF$Companion__init_0;
    oktga_Vec3Track[c] = oktga_Vec3Track__init_4;
    oktga_Vec4Track[c] = oktga_Vec4Track__init_4;
    jl_AbstractStringBuilder$Constants[c] = jl_AbstractStringBuilder$Constants__init_0;
    otcit_FloatAnalyzer[c] = otcit_FloatAnalyzer__init_;
    otcit_FloatAnalyzer$Result[c] = otcit_FloatAnalyzer$Result__init_0;
    jl_ArrayStoreException[c] = jl_ArrayStoreException__init_0;
    oktgg_GLTFPrimitive$Companion[c] = oktgg_GLTFPrimitive$Companion__init_0;
    oktgg_GLTFPrimitive$Vec3I[c] = oktgg_GLTFPrimitive$Vec3I__init_4;
    otcit_DoubleAnalyzer$Result[c] = otcit_DoubleAnalyzer$Result__init_0;
    oooi_DxTriMeshDisabled$dxTriMeshDisabledData[c] = oooi_DxTriMeshDisabled$dxTriMeshDisabledData__init_0;
    oooi_DxGimpactData[c] = oooi_DxGimpactData__init_0;
    jm_Multiplication[c] = jm_Multiplication__init_0;
    jm_Conversion[c] = jm_Conversion__init_;
    jm_Elementary[c] = jm_Elementary__init_0;
    oktm_MATH[c] = oktm_MATH__init_0;
    oooip_DxWorldProcessIslandsInfo[c] = oooip_DxWorldProcessIslandsInfo__init_0;
    oooic_Cstdlib$Random31[c] = oooic_Cstdlib$Random31__init_0;
    ooo_DContact[c] = ooo_DContact__init_0;
    oooi_DxQuickStep[c] = oooi_DxQuickStep__init_;
    oooip_DxWorldProcessContext[c] = oooip_DxWorldProcessContext__init_0;
    oooip_DxStepWorkingMemory[c] = oooip_DxStepWorkingMemory__init_0;
    oooip_DxWorldProcessMemArena[c] = oooip_DxWorldProcessMemArena__init_0;
    oooi_Step[c] = oooi_Step__init_0;
    ooo_DContact$DSurfaceParameters[c] = ooo_DContact$DSurfaceParameters__init_0;
    ooo_DContactGeom[c] = ooo_DContactGeom__init_0;
    jm_BitLevel[c] = jm_BitLevel__init_0;
    oooig_GimTrimesh[c] = oooig_GimTrimesh__init_0;
    oooig_GimBufferArrayFloat[c] = oooig_GimBufferArrayFloat__init_0;
    oooig_GimBufferArrayInt[c] = oooig_GimBufferArrayInt__init_0;
    juca_AtomicInteger[c] = juca_AtomicInteger__init_1;
    oooip_DxUtil[c] = oooip_DxUtil__init_;
    oooij_DxJointNode[c] = oooij_DxJointNode__init_0;
    oooig_GimGeometry$vec3f[c] = oooig_GimGeometry$vec3f__init_0;
    oooi_DxQuickStep$DJointWithInfo1[c] = oooi_DxQuickStep$DJointWithInfo1__init_0;
    oooig_GimGeometry$mat4f[c] = oooig_GimGeometry$mat4f__init_0;
    oooig_GimGeometry$aabb3f[c] = oooig_GimGeometry$aabb3f__init_0;
    oooig_GimRadixSort$GIM_RSORT_TOKEN[c] = oooig_GimRadixSort$GIM_RSORT_TOKEN__init_0;
    oooig_GimDynArray[c] = oooig_GimDynArray__init_0;
    oooig_GimGeometry[c] = oooig_GimGeometry__init_0;
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo[c] = oooi_DxWorld$DWorldStepMemoryFunctionsInfo__init_0;
    oooig_GimAABBSet$1[c] = oooig_GimAABBSet$1__init_0;
    oooig_GimAABBSet$2[c] = oooig_GimAABBSet$2__init_0;
    ju_BitSet[c] = ju_BitSet__init_0;
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1[c] = oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1__init_0;
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo$2[c] = oooi_DxWorld$DWorldStepMemoryFunctionsInfo$2__init_0;
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3[c] = oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3__init_0;
    oooig_GimDynArrayInt[c] = oooig_GimDynArrayInt__init_0;
    oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD[c] = oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD__init_0;
    oooi_CollisionLibccd$ccd_cyl_t[c] = oooi_CollisionLibccd$ccd_cyl_t__init_0;
    oooi_CollisionLibccd$ccd_obj_t[c] = oooi_CollisionLibccd$ccd_obj_t__init_0;
    oooi_CollisionLibccd$ccd_box_t[c] = oooi_CollisionLibccd$ccd_box_t__init_0;
    oooi_CollisionLibccd$ccd_cap_t[c] = oooi_CollisionLibccd$ccd_cap_t__init_0;
    oooi_CollisionLibccd$ccd_convex_t[c] = oooi_CollisionLibccd$ccd_convex_t__init_0;
    oooi_CollisionLibccd$ccd_sphere_t[c] = oooi_CollisionLibccd$ccd_sphere_t__init_0;
    oooij_DxJoint$Info1[c] = oooij_DxJoint$Info1__init_0;
    oooi_DxGimpactCollision[c] = oooi_DxGimpactCollision__init_0;
    jl_ArithmeticException[c] = jl_ArithmeticException__init_0;
    oooil_CCDVec3$ccd_vec3_t[c] = oooil_CCDVec3$ccd_vec3_t__init_2;
    oooi_CollisionLibccd[c] = oooi_CollisionLibccd__init_0;
    oooil_CCD$ccd_t[c] = oooil_CCD$ccd_t__init_0;
    oooicj_RefDouble[c] = oooicj_RefDouble__init_1;
    oooi_CollisionLibccdCylinderStacking[c] = oooi_CollisionLibccdCylinderStacking__init_0;
    otcit_DoubleAnalyzer[c] = otcit_DoubleAnalyzer__init_0;
    oooi_CollisionLibccd$1[c] = oooi_CollisionLibccd$1__init_0;
    oooi_CollisionLibccd$2[c] = oooi_CollisionLibccd$2__init_0;
    oooi_CollisionLibccd$3[c] = oooi_CollisionLibccd$3__init_0;
    oooi_CollisionLibccd$4[c] = oooi_CollisionLibccd$4__init_0;
    oooi_CollisionLibccd$5[c] = oooi_CollisionLibccd$5__init_0;
    oooi_CollisionLibccd$6[c] = oooi_CollisionLibccd$6__init_0;
    oooi_CollisionLibccd$7[c] = oooi_CollisionLibccd$7__init_0;
    oooil_CCDVec3[c] = oooil_CCDVec3__init_0;
    oooil_CCDQuat[c] = oooil_CCDQuat__init_0;
    oooil_CCD[c] = oooil_CCD__init_0;
    oooil_CCD$1[c] = oooil_CCD$1__init_0;
    oooil_CCDMPR[c] = oooil_CCDMPR__init_0;
    oooil_CCDSimplex$ccd_simplex_t[c] = oooil_CCDSimplex$ccd_simplex_t__init_0;
    oooil_CCDQuat$ccd_quat_t[c] = oooil_CCDQuat$ccd_quat_t__init_0;
    oooil_CCDSupport$ccd_support_t[c] = oooil_CCDSupport$ccd_support_t__init_0;
    oom_DVector4[c] = oom_DVector4__init_0;
    oooil_CCDSimplex[c] = oooil_CCDSimplex__init_0;
    oooil_CCDSupport[c] = oooil_CCDSupport__init_0;
    jnc_BufferUnderflowException[c] = jnc_BufferUnderflowException__init_0;
    jnc_BufferOverflowException[c] = jnc_BufferOverflowException__init_0;
    ooot_MutexGroupImpl[c] = ooot_MutexGroupImpl__init_0;
    oooig_GimContact[c] = oooig_GimContact__init_0;
    oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA[c] = oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA__init_0;
    oooig_GimTrimeshCapsuleCollision$GIM_CAPSULE_DATA[c] = oooig_GimTrimeshCapsuleCollision$GIM_CAPSULE_DATA__init_0;
    oooig_GimGeometry$vec4f[c] = oooig_GimGeometry$vec4f__init_0;
    oooi_CollideCylinderTrimesh$sLocalContactData[c] = oooi_CollideCylinderTrimesh$sLocalContactData__init_1;
    oooi_CollisionLibccd$ccd_triangle_t[c] = oooi_CollisionLibccd$ccd_triangle_t__init_0;
    jm_Division[c] = jm_Division__init_0;
    oooi_DxSpace$1[c] = oooi_DxSpace$1__init_0;
    oooi_DxSpace$2[c] = oooi_DxSpace$2__init_0;
    oooi_DxHeightfieldData[c] = oooi_DxHeightfieldData__init_0;
    oooi_DxConvex$ConvexConvexSATOutput[c] = oooi_DxConvex$ConvexConvexSATOutput__init_0;
    oooi_DxConvex$Edge[c] = oooi_DxConvex$Edge__init_;
    jl_Math$ExponentConstants[c] = jl_Math$ExponentConstants__init_0;
    oooig_GimTrimeshTrimeshCol[c] = oooig_GimTrimeshTrimeshCol__init_;
    oooig_GimTriCollision$GIM_TRIANGLE_CONTACT_DATA[c] = oooig_GimTriCollision$GIM_TRIANGLE_CONTACT_DATA__init_0;
    oooig_GimTriCollision$GIM_TRIANGLE_DATA[c] = oooig_GimTriCollision$GIM_TRIANGLE_DATA__init_0;
    oooig_GimAABBSet$GIM_PAIR[c] = oooig_GimAABBSet$GIM_PAIR__init_0;
    oooig_GimTrimeshCapsuleCollision[c] = oooig_GimTrimeshCapsuleCollision__init_0;
    oooig_GimTrimeshSphereCollision[c] = oooig_GimTrimeshSphereCollision__init_;
    oooig_GimTrimeshRayCollision[c] = oooig_GimTrimeshRayCollision__init_0;
    oooicj_RefFloat[c] = oooicj_RefFloat__init_1;
    oooig_GimTriCollision$GIM_TRIPLANES_CACHE[c] = oooig_GimTriCollision$GIM_TRIPLANES_CACHE__init_0;
    oooig_GimTriCollision[c] = oooig_GimTriCollision__init_0;
    oooig_GimRadixSort[c] = oooig_GimRadixSort__init_;
    oooig_GimRadixSort$1[c] = oooig_GimRadixSort$1__init_;
    oooig_GimRadixSort$2[c] = oooig_GimRadixSort$2__init_;
    oooig_GimRadixSort$3[c] = oooig_GimRadixSort$3__init_;
    oktgl_PointLight[c] = oktgl_PointLight__init_0;
    oktgg_GLTFSparse[c] = oktgg_GLTFSparse__init_4;
    oktg_Armature[c] = oktg_Armature__init_0;
    oktga_Anim[c] = oktga_Anim__init_0;
    oktg_IArmature$Companion[c] = oktg_IArmature$Companion__init_0;
    oktsg_ToneMapNode[c] = oktsg_ToneMapNode__init_4;
    oktsg_VelocityNode[c] = oktsg_VelocityNode__init_4;
    oktsg_OperationNode[c] = oktsg_OperationNode__init_4;
    jur_Pattern[c] = jur_Pattern__init_;
    kt_Regex$Companion[c] = kt_Regex$Companion__init_1;
    oktsg_ToneMapNode$Companion[c] = oktsg_ToneMapNode$Companion__init_1;
    oktsg_VelocityNode$Companion[c] = oktsg_VelocityNode$Companion__init_1;
    oktsg_OperationNode$Companion[c] = oktsg_OperationNode$Companion__init_0;
    jur_AheadFSet[c] = jur_AheadFSet__init_0;
    jur_FinalSet[c] = jur_FinalSet__init_0;
    jur_NonCapJointSet[c] = jur_NonCapJointSet__init_0;
    jur_JointSet[c] = jur_JointSet__init_0;
    jur_CharClass[c] = jur_CharClass__init_0;
    jur_AbstractCharClass$PredefinedCharacterClasses[c] = jur_AbstractCharClass$PredefinedCharacterClasses__init_0;
    jur_FSet$PossessiveFSet[c] = jur_FSet$PossessiveFSet__init_0;
    jur_SOLSet[c] = jur_SOLSet__init_0;
    jur_PreviousMatch[c] = jur_PreviousMatch__init_0;
    jur_EOISet[c] = jur_EOISet__init_0;
    jur_DotAllSet[c] = jur_DotAllSet__init_;
    jur_AbstractLineTerminator$1[c] = jur_AbstractLineTerminator$1__init_0;
    jur_AbstractLineTerminator$2[c] = jur_AbstractLineTerminator$2__init_0;
    jur_AbstractCharClass$LazySpace[c] = jur_AbstractCharClass$LazySpace__init_0;
    jur_AbstractCharClass$LazyDigit[c] = jur_AbstractCharClass$LazyDigit__init_0;
    jur_AbstractCharClass$LazyLower[c] = jur_AbstractCharClass$LazyLower__init_0;
    jur_AbstractCharClass$LazyUpper[c] = jur_AbstractCharClass$LazyUpper__init_0;
    jur_AbstractCharClass$LazyASCII[c] = jur_AbstractCharClass$LazyASCII__init_0;
    jur_AbstractCharClass$LazyAlpha[c] = jur_AbstractCharClass$LazyAlpha__init_0;
    jur_AbstractCharClass$LazyAlnum[c] = jur_AbstractCharClass$LazyAlnum__init_0;
    jur_AbstractCharClass$LazyPunct[c] = jur_AbstractCharClass$LazyPunct__init_0;
    jur_AbstractCharClass$LazyGraph[c] = jur_AbstractCharClass$LazyGraph__init_0;
    jur_AbstractCharClass$LazyPrint[c] = jur_AbstractCharClass$LazyPrint__init_0;
    jur_AbstractCharClass$LazyBlank[c] = jur_AbstractCharClass$LazyBlank__init_0;
    jur_AbstractCharClass$LazyCntrl[c] = jur_AbstractCharClass$LazyCntrl__init_0;
    jur_AbstractCharClass$LazyXDigit[c] = jur_AbstractCharClass$LazyXDigit__init_0;
    jur_AbstractCharClass$LazyJavaLowerCase[c] = jur_AbstractCharClass$LazyJavaLowerCase__init_0;
    jur_AbstractCharClass$LazyJavaUpperCase[c] = jur_AbstractCharClass$LazyJavaUpperCase__init_0;
    jur_AbstractCharClass$LazyJavaWhitespace[c] = jur_AbstractCharClass$LazyJavaWhitespace__init_0;
    jur_AbstractCharClass$LazyJavaMirrored[c] = jur_AbstractCharClass$LazyJavaMirrored__init_0;
    jur_AbstractCharClass$LazyJavaDefined[c] = jur_AbstractCharClass$LazyJavaDefined__init_0;
    jur_AbstractCharClass$LazyJavaDigit[c] = jur_AbstractCharClass$LazyJavaDigit__init_0;
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable[c] = jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0;
    jur_AbstractCharClass$LazyJavaISOControl[c] = jur_AbstractCharClass$LazyJavaISOControl__init_0;
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart[c] = jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0;
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart[c] = jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0;
    jur_AbstractCharClass$LazyJavaLetter[c] = jur_AbstractCharClass$LazyJavaLetter__init_0;
    jur_AbstractCharClass$LazyJavaLetterOrDigit[c] = jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0;
    jur_AbstractCharClass$LazyJavaSpaceChar[c] = jur_AbstractCharClass$LazyJavaSpaceChar__init_0;
    jur_AbstractCharClass$LazyJavaTitleCase[c] = jur_AbstractCharClass$LazyJavaTitleCase__init_0;
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart[c] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0;
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart[c] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0;
    jur_AbstractCharClass$LazyWord[c] = jur_AbstractCharClass$LazyWord__init_0;
    jur_AbstractCharClass$LazyNonWord[c] = jur_AbstractCharClass$LazyNonWord__init_0;
    jur_AbstractCharClass$LazyNonSpace[c] = jur_AbstractCharClass$LazyNonSpace__init_0;
    jur_AbstractCharClass$LazyNonDigit[c] = jur_AbstractCharClass$LazyNonDigit__init_0;
    jur_AbstractCharClass$LazySpecialsBlock[c] = jur_AbstractCharClass$LazySpecialsBlock__init_0;
    jn_URLDecoder[c] = jn_URLDecoder__init_;
    ji_UnsupportedEncodingException[c] = ji_UnsupportedEncodingException__init_;
    oktgg_GLTFTexture$read$2$2[c] = oktgg_GLTFTexture$read$2$2__init_0;
    ooot_Atomics[c] = ooot_Atomics__init_0;
    oktgg_GLTFSparse$Indices[c] = oktgg_GLTFSparse$Indices__init_0;
    oktgg_GLTFSparse$Values[c] = oktgg_GLTFSparse$Values__init_4;
    oktsg_UVNode[c] = oktsg_UVNode__init_0;
    oktsg_NormalMapNode[c] = oktsg_NormalMapNode__init_4;
    oktsg_NormalMapNode$Companion[c] = oktsg_NormalMapNode$Companion__init_0;
    oktsg_UVNode$Companion[c] = oktsg_UVNode$Companion__init_0;
    oktsg_SplitVec4Node[c] = oktsg_SplitVec4Node__init_4;
    oktsg_MergeVec4[c] = oktsg_MergeVec4__init_0;
    oktsg_AttributeNode[c] = oktsg_AttributeNode__init_4;
    oktgn_PreviousTRS[c] = oktgn_PreviousTRS__init_0;
    oktgg_GLTFAnimationSampler[c] = oktgg_GLTFAnimationSampler__init_4;
    oktgg_GLTFTexture$read$2$2$1[c] = oktgg_GLTFTexture$read$2$2$1__init_0;
    oooi_DxQuickStep$dxQuickStepperStage1CallContext[c] = oooi_DxQuickStep$dxQuickStepperStage1CallContext__init_0;
    oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext[c] = oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext__init_;
    oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext[c] = oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext__init_;
    oktsg_SplitVec4Node$Companion[c] = oktsg_SplitVec4Node$Companion__init_0;
    oktsg_MergeVec4$Companion[c] = oktsg_MergeVec4$Companion__init_0;
    oktsg_AttributeNode$Companion[c] = oktsg_AttributeNode$Companion__init_1;
    oooi_DxQuickStep$dxQuickStepperLocalContext[c] = oooi_DxQuickStep$dxQuickStepperLocalContext__init_0;
    oooi_DxQuickStep$dxQuickStepperStage3CallContext[c] = oooi_DxQuickStep$dxQuickStepperStage3CallContext__init_;
    oooi_DxQuickStep$dxQuickStepperStage2CallContext[c] = oooi_DxQuickStep$dxQuickStepperStage2CallContext__init_0;
    oooi_DxQuickStep$dxQuickStepperStage0Outputs[c] = oooi_DxQuickStep$dxQuickStepperStage0Outputs__init_1;
    oooi_DxQuickStep$dxQuickStepperStage5CallContext[c] = oooi_DxQuickStep$dxQuickStepperStage5CallContext__init_0;
    oooi_DxQuickStep$IndexError[c] = oooi_DxQuickStep$IndexError__init_0;
    oooi_DxQuickStep$dxQuickStepperStage4CallContext[c] = oooi_DxQuickStep$dxQuickStepperStage4CallContext__init_0;
    oooij_Info2DescrQuickStep[c] = oooij_Info2DescrQuickStep__init_;
    oooi_DxQuickStep$dxQuickStepperStage6CallContext[c] = oooi_DxQuickStep$dxQuickStepperStage6CallContext__init_0;
    ooo_DJoint$DJointFeedback[c] = ooo_DJoint$DJointFeedback__init_0;
    oktsg_GLSLVec4Inline[c] = oktsg_GLSLVec4Inline__init_4;
    oktgg_GLTFTexture$read$2$2$1$1[c] = oktgg_GLTFTexture$read$2$2$1$1__init_;
    oktgg_GLTFTexture$read$2$2$1$2[c] = oktgg_GLTFTexture$read$2$2$1$2__init_;
}
function otp_Platform_newInstanceImpl(var$1) {
    if ($rt_resuming()) {
        var $r = $rt_nativeThread().pop();
        var$1.$$constructor$$($r);
        if ($rt_suspending()) {
            return $rt_nativeThread().push($r);
        }
        return $r;
    }
    if (!var$1.hasOwnProperty('$$constructor$$')) {
        return null;
    }
    var $r = new var$1();
    var$1.$$constructor$$($r);
    if ($rt_suspending()) {
        return $rt_nativeThread().push($r);
    }
    return $r;
}
function otp_Platform_lookupClass(var$1) {
    switch ($rt_ustr(var$1)) {
        case "org.ksdfv.thelema.test.mesh.FrustumMeshBuilderTest": okttm_FrustumMeshBuilderTest.$clinit(); return okttm_FrustumMeshBuilderTest;
        case "java.util.regex.AbstractCharClass$LazyBlank": jur_AbstractCharClass$LazyBlank.$clinit(); return jur_AbstractCharClass$LazyBlank;
        case "org.ksdfv.thelema.test.GLTFLoaderAnimTest$testMain$1": oktt_GLTFLoaderAnimTest$testMain$1.$clinit(); return oktt_GLTFLoaderAnimTest$testMain$1;
        case "org.ksdfv.thelema.mesh.VertexBufferObject": oktm_VertexBufferObject.$clinit(); return oktm_VertexBufferObject;
        case "java.lang.Integer": jl_Integer.$clinit(); return jl_Integer;
        case "org.ksdfv.thelema.json.IJsonObject": oktj_IJsonObject.$clinit(); return oktj_IJsonObject;
        case "org.ksdfv.thelema.g3d.gltf.GLTFImage": oktgg_GLTFImage.$clinit(); return oktgg_GLTFImage;
        case "java.util.regex.AbstractCharClass$LazyAlpha": jur_AbstractCharClass$LazyAlpha.$clinit(); return jur_AbstractCharClass$LazyAlpha;
        case "org.ksdfv.thelema.test.GLTFModel$3": oktt_GLTFModel$3.$clinit(); return oktt_GLTFModel$3;
        case "org.ksdfv.thelema.texture.ITexture2D": oktt_ITexture2D.$clinit(); return oktt_ITexture2D;
        case "java.lang.CharSequence": jl_CharSequence.$clinit(); return jl_CharSequence;
        case "org.ksdfv.thelema.test.GLTFModel$1": oktt_GLTFModel$1.$clinit(); return oktt_GLTFModel$1;
        case "org.ksdfv.thelema.teavm.TvmUInt8Array": oktt_TvmUInt8Array.$clinit(); return oktt_TvmUInt8Array;
        case "org.ksdfv.thelema.test.shaders.glsl.GBufferTest$testMain$1": okttsg_GBufferTest$testMain$1.$clinit(); return okttsg_GBufferTest$testMain$1;
        case "org.ode4j.ode.internal.gimpact.GimTriCollision$GIM_TRIANGLE_DATA": oooig_GimTriCollision$GIM_TRIANGLE_DATA.$clinit(); return oooig_GimTriCollision$GIM_TRIANGLE_DATA;
        case "java.io.Serializable": ji_Serializable.$clinit(); return ji_Serializable;
        case "java.util.regex.AbstractCharClass$LazyCategory": jur_AbstractCharClass$LazyCategory.$clinit(); return jur_AbstractCharClass$LazyCategory;
        case "org.ksdfv.thelema.mesh.ScreenQuad$TextureRenderer$render$1": oktm_ScreenQuad$TextureRenderer$render$1.$clinit(); return oktm_ScreenQuad$TextureRenderer$render$1;
        case "org.ksdfv.thelema.shader.glsl.UVNode$Companion": oktsg_UVNode$Companion.$clinit(); return oktsg_UVNode$Companion;
        case "java.util.regex.BehindFSet": jur_BehindFSet.$clinit(); return jur_BehindFSet;
        case "kotlin.text.SystemProperties": kt_SystemProperties.$clinit(); return kt_SystemProperties;
        case "org.ksdfv.thelema.test.shaders.BloomBaseTest$testMain$1": oktts_BloomBaseTest$testMain$1.$clinit(); return oktts_BloomBaseTest$testMain$1;
        case "org.ksdfv.thelema.test.shaders.BloomBaseTest$testMain$2": oktts_BloomBaseTest$testMain$2.$clinit(); return oktts_BloomBaseTest$testMain$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode": oktgg_GLTFNode.$clinit(); return oktgg_GLTFNode;
        case "java.util.regex.LowHighSurrogateRangeSet": jur_LowHighSurrogateRangeSet.$clinit(); return jur_LowHighSurrogateRangeSet;
        case "org.ksdfv.thelema.g3d.ShaderChannel": oktg_ShaderChannel.$clinit(); return oktg_ShaderChannel;
        case "org.ksdfv.thelema.test.Texture2DTest": oktt_Texture2DTest.$clinit(); return oktt_Texture2DTest;
        case "java.lang.ClassCastException": jl_ClassCastException.$clinit(); return jl_ClassCastException;
        case "org.ode4j.ode.internal.DxConvex$CollideRayConvex": oooi_DxConvex$CollideRayConvex.$clinit(); return oooi_DxConvex$CollideRayConvex;
        case "org.ksdfv.thelema.g3d.cam.Camera": oktgc_Camera.$clinit(); return oktgc_Camera;
        case "java.util.LinkedHashMap": ju_LinkedHashMap.$clinit(); return ju_LinkedHashMap;
        case "java.util.regex.PosPlusGroupQuantifierSet": jur_PosPlusGroupQuantifierSet.$clinit(); return jur_PosPlusGroupQuantifierSet;
        case "kotlin.collections.CollectionsKt__MutableCollectionsJVMKt": kc_CollectionsKt__MutableCollectionsJVMKt.$clinit(); return kc_CollectionsKt__MutableCollectionsJVMKt;
        case "kotlin.text.StringsKt__StringNumberConversionsJVMKt": kt_StringsKt__StringNumberConversionsJVMKt.$clinit(); return kt_StringsKt__StringNumberConversionsJVMKt;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFArray$DefaultImpls": oktgg_IGLTFArray$DefaultImpls.$clinit(); return oktgg_IGLTFArray$DefaultImpls;
        case "java.lang.StringBuffer": jl_StringBuffer.$clinit(); return jl_StringBuffer;
        case "java.util.regex.AbstractCharClass$PredefinedCharacterClasses": jur_AbstractCharClass$PredefinedCharacterClasses.$clinit(); return jur_AbstractCharClass$PredefinedCharacterClasses;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$10": oktgg_GLTFNode$read$10.$clinit(); return oktgg_GLTFNode$read$10;
        case "org.ksdfv.thelema.phys.ode4j.OdePhysicsWorld$Companion$bodyPairsPool$1": oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1.$clinit(); return oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1;
        case "org.ksdfv.thelema.math.Mat4$Companion": oktm_Mat4$Companion.$clinit(); return oktm_Mat4$Companion;
        case "org.ode4j.ode.internal.CollisionLibccd$ccd_triangle_t": oooi_CollisionLibccd$ccd_triangle_t.$clinit(); return oooi_CollisionLibccd$ccd_triangle_t;
        case "org.ksdfv.thelema.mesh.IVertexBuffer$DefaultImpls": oktm_IVertexBuffer$DefaultImpls.$clinit(); return oktm_IVertexBuffer$DefaultImpls;
        case "java.util.regex.NegativeLookAhead": jur_NegativeLookAhead.$clinit(); return jur_NegativeLookAhead;
        case "org.ksdfv.thelema.g3d.IMaterial$Companion": oktg_IMaterial$Companion.$clinit(); return oktg_IMaterial$Companion;
        case "org.ode4j.ode.internal.CollideTrimeshBox$1": oooi_CollideTrimeshBox$1.$clinit(); return oooi_CollideTrimeshBox$1;
        case "java.lang.reflect.Array": jlr_Array.$clinit(); return jlr_Array;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$1$3": oktgg_GLTF$read$1$3.$clinit(); return oktgg_GLTF$read$1$3;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$1$1": oktgg_GLTF$read$1$1.$clinit(); return oktgg_GLTF$read$1$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$1$2": oktgg_GLTF$read$1$2.$clinit(); return oktgg_GLTF$read$1$2;
        case "org.ksdfv.thelema.mesh.IVertexBuffer": oktm_IVertexBuffer.$clinit(); return oktm_IVertexBuffer;
        case "org.ksdfv.thelema.g3d.light.DirectionalLight$Companion": oktgl_DirectionalLight$Companion.$clinit(); return oktgl_DirectionalLight$Companion;
        case "java.util.regex.AbstractCharClass$LazyJavaDigit": jur_AbstractCharClass$LazyJavaDigit.$clinit(); return jur_AbstractCharClass$LazyJavaDigit;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSparse$Values": oktgg_GLTFSparse$Values.$clinit(); return oktgg_GLTFSparse$Values;
        case "org.ksdfv.thelema.shader.glsl.GLSLVec3Inline": oktsg_GLSLVec3Inline.$clinit(); return oktsg_GLSLVec3Inline;
        case "org.ode4j.ode.internal.DxBox": oooi_DxBox.$clinit(); return oooi_DxBox;
        case "kotlin.text.CharsKt__CharKt": kt_CharsKt__CharKt.$clinit(); return kt_CharsKt__CharKt;
        case "org.ode4j.ode.internal.DxTriMeshDisabled": oooi_DxTriMeshDisabled.$clinit(); return oooi_DxTriMeshDisabled;
        case "java.lang.Object$monitorEnterWait$lambda$_6_0": jl_Object$monitorEnterWait$lambda$_6_0.$clinit(); return jl_Object$monitorEnterWait$lambda$_6_0;
        case "org.ode4j.ode.internal.CollisionLibccd$ccd_obj_t": oooi_CollisionLibccd$ccd_obj_t.$clinit(); return oooi_CollisionLibccd$ccd_obj_t;
        case "org.ksdfv.thelema.img.IMG": okti_IMG.$clinit(); return okti_IMG;
        case "java.util.regex.AbstractCharClass$LazyPrint": jur_AbstractCharClass$LazyPrint.$clinit(); return jur_AbstractCharClass$LazyPrint;
        case "org.ode4j.ode.internal.ErrorHandler": oooi_ErrorHandler.$clinit(); return oooi_ErrorHandler;
        case "org.ode4j.ode.internal.joints.DxJointNode": oooij_DxJointNode.$clinit(); return oooij_DxJointNode;
        case "org.ksdfv.thelema.math.IMat4$Companion": oktm_IMat4$Companion.$clinit(); return oktm_IMat4$Companion;
        case "kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1": ks_SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1.$clinit(); return ks_SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1;
        case "org.ksdfv.thelema.teavm.TvmMouse$2": oktt_TvmMouse$2.$clinit(); return oktt_TvmMouse$2;
        case "org.ksdfv.thelema.teavm.TvmMouse$1": oktt_TvmMouse$1.$clinit(); return oktt_TvmMouse$1;
        case "org.ksdfv.thelema.teavm.TvmMouse$4": oktt_TvmMouse$4.$clinit(); return oktt_TvmMouse$4;
        case "java.lang.ArrayStoreException": jl_ArrayStoreException.$clinit(); return jl_ArrayStoreException;
        case "org.ksdfv.thelema.g3d.IArmature$Companion": oktg_IArmature$Companion.$clinit(); return oktg_IArmature$Companion;
        case "org.ksdfv.thelema.teavm.TvmMouse$3": oktt_TvmMouse$3.$clinit(); return oktt_TvmMouse$3;
        case "org.ksdfv.thelema.teavm.TvmMouse$5": oktt_TvmMouse$5.$clinit(); return oktt_TvmMouse$5;
        case "org.ksdfv.thelema.g3d.gltf.GLTFBufferView$read$1": oktgg_GLTFBufferView$read$1.$clinit(); return oktgg_GLTFBufferView$read$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFBufferView$read$2": oktgg_GLTFBufferView$read$2.$clinit(); return oktgg_GLTFBufferView$read$2;
        case "java.util.regex.MatchResultImpl": jur_MatchResultImpl.$clinit(); return jur_MatchResultImpl;
        case "org.ksdfv.thelema.math.Plane": oktm_Plane.$clinit(); return oktm_Plane;
        case "com.github.cliftonlabs.json_simple.Jsoner": cgcj_Jsoner.$clinit(); return cgcj_Jsoner;
        case "org.ksdfv.thelema.mesh.build.MeshBuilder$createIndicesShort$1": oktmb_MeshBuilder$createIndicesShort$1.$clinit(); return oktmb_MeshBuilder$createIndicesShort$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFBufferView$read$3": oktgg_GLTFBufferView$read$3.$clinit(); return oktgg_GLTFBufferView$read$3;
        case "org.ksdfv.thelema.shader.glsl.VertexNode$Companion": oktsg_VertexNode$Companion.$clinit(); return oktsg_VertexNode$Companion;
        case "java.util.regex.AbstractCharClass$LazyGraph": jur_AbstractCharClass$LazyGraph.$clinit(); return jur_AbstractCharClass$LazyGraph;
        case "java.nio.charset.Charset": jnc_Charset.$clinit(); return jnc_Charset;
        case "java.util.regex.DecomposedCharSet": jur_DecomposedCharSet.$clinit(); return jur_DecomposedCharSet;
        case "java.lang.AbstractStringBuilder": jl_AbstractStringBuilder.$clinit(); return jl_AbstractStringBuilder;
        case "java.nio.charset.IllegalCharsetNameException": jnc_IllegalCharsetNameException.$clinit(); return jnc_IllegalCharsetNameException;
        case "java.io.PrintStream": ji_PrintStream.$clinit(); return ji_PrintStream;
        case "java.util.regex.NegativeLookBehind": jur_NegativeLookBehind.$clinit(); return jur_NegativeLookBehind;
        case "java.util.regex.AbstractCharClass$LazyJavaJavaIdentifierPart": jur_AbstractCharClass$LazyJavaJavaIdentifierPart.$clinit(); return jur_AbstractCharClass$LazyJavaJavaIdentifierPart;
        case "kotlin.jvm.internal.markers.KMutableIterable": kjim_KMutableIterable.$clinit(); return kjim_KMutableIterable;
        case "org.ode4j.ode.DHashSpace": ooo_DHashSpace.$clinit(); return ooo_DHashSpace;
        case "org.ode4j.ode.internal.DxConvex$CollideConvexPlane": oooi_DxConvex$CollideConvexPlane.$clinit(); return oooi_DxConvex$CollideConvexPlane;
        case "org.ksdfv.thelema.teavm.HtmlImage": oktt_HtmlImage.$clinit(); return oktt_HtmlImage;
        case "org.ode4j.ode.internal.DxConvex$CollideConvexBox": oooi_DxConvex$CollideConvexBox.$clinit(); return oooi_DxConvex$CollideConvexBox;
        case "java.util.regex.UnifiedQuantifierSet": jur_UnifiedQuantifierSet.$clinit(); return jur_UnifiedQuantifierSet;
        case "org.ksdfv.thelema.json.JSON": oktj_JSON.$clinit(); return oktj_JSON;
        case "java.util.BitSet": ju_BitSet.$clinit(); return ju_BitSet;
        case "org.ode4j.ode.internal.DxGimpact": oooi_DxGimpact.$clinit(); return oooi_DxGimpact;
        case "java.lang.Float": jl_Float.$clinit(); return jl_Float;
        case "org.ksdfv.thelema.math.Vec3$Companion": oktm_Vec3$Companion.$clinit(); return oktm_Vec3$Companion;
        case "org.ode4j.ode.internal.CollisionLibccd$CollideConvexSphereCCD": oooi_CollisionLibccd$CollideConvexSphereCCD.$clinit(); return oooi_CollisionLibccd$CollideConvexSphereCCD;
        case "org.ksdfv.thelema.test.KeyboardTest$testMain$1": oktt_KeyboardTest$testMain$1.$clinit(); return oktt_KeyboardTest$testMain$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFConf": oktgg_GLTFConf.$clinit(); return oktgg_GLTFConf;
        case "org.ksdfv.thelema.mesh.build.MeshBuilder": oktmb_MeshBuilder.$clinit(); return oktmb_MeshBuilder;
        case "java.util.regex.AbstractCharClass$LazyCategoryScope": jur_AbstractCharClass$LazyCategoryScope.$clinit(); return jur_AbstractCharClass$LazyCategoryScope;
        case "org.ode4j.ode.threading.task.Task": ooott_Task.$clinit(); return ooott_Task;
        case "org.ksdfv.thelema.test.shaders.ThresholdTest$testMain$1$1": oktts_ThresholdTest$testMain$1$1.$clinit(); return oktts_ThresholdTest$testMain$1$1;
        case "org.ode4j.ode.internal.CollisionLibccd": oooi_CollisionLibccd.$clinit(); return oooi_CollisionLibccd;
        case "org.ksdfv.thelema.test.mesh.BoxMeshBuilderTest$testMain$2": okttm_BoxMeshBuilderTest$testMain$2.$clinit(); return okttm_BoxMeshBuilderTest$testMain$2;
        case "org.ode4j.ode.internal.FastDot": oooi_FastDot.$clinit(); return oooi_FastDot;
        case "org.ksdfv.thelema.test.Tests": oktt_Tests.$clinit(); return oktt_Tests;
        case "com.github.cliftonlabs.json_simple.Jsonable": cgcj_Jsonable.$clinit(); return cgcj_Jsonable;
        case "kotlin.jvm.functions.Function3": kjf_Function3.$clinit(); return kjf_Function3;
        case "kotlin.jvm.functions.Function4": kjf_Function4.$clinit(); return kjf_Function4;
        case "kotlin.jvm.functions.Function1": kjf_Function1.$clinit(); return kjf_Function1;
        case "org.ode4j.ode.internal.DxSphere$CollideSpherePlane": oooi_DxSphere$CollideSpherePlane.$clinit(); return oooi_DxSphere$CollideSpherePlane;
        case "java.util.regex.AbstractCharClass$LazyJavaTitleCase$1": jur_AbstractCharClass$LazyJavaTitleCase$1.$clinit(); return jur_AbstractCharClass$LazyJavaTitleCase$1;
        case "kotlin.jvm.functions.Function2": kjf_Function2.$clinit(); return kjf_Function2;
        case "org.ksdfv.thelema.test.mesh.InstancingTest": okttm_InstancingTest.$clinit(); return okttm_InstancingTest;
        case "kotlin.jvm.functions.Function0": kjf_Function0.$clinit(); return kjf_Function0;
        case "org.ksdfv.thelema.test.shaders.glsl.CascadedShadowMappingTest": okttsg_CascadedShadowMappingTest.$clinit(); return okttsg_CascadedShadowMappingTest;
        case "org.ksdfv.thelema.shader.glsl.GLSLVec3": oktsg_GLSLVec3.$clinit(); return oktsg_GLSLVec3;
        case "org.ksdfv.thelema.shader.glsl.GLSLVec4": oktsg_GLSLVec4.$clinit(); return oktsg_GLSLVec4;
        case "org.ode4j.ode.internal.DxTriMeshData": oooi_DxTriMeshData.$clinit(); return oooi_DxTriMeshData;
        case "kotlin.jvm.functions.Function9": kjf_Function9.$clinit(); return kjf_Function9;
        case "kotlin.jvm.functions.Function7": kjf_Function7.$clinit(); return kjf_Function7;
        case "org.ksdfv.thelema.shader.glsl.UVNode": oktsg_UVNode.$clinit(); return oktsg_UVNode;
        case "kotlin.jvm.functions.Function8": kjf_Function8.$clinit(); return kjf_Function8;
        case "kotlin.jvm.functions.Function5": kjf_Function5.$clinit(); return kjf_Function5;
        case "kotlin.jvm.functions.Function6": kjf_Function6.$clinit(); return kjf_Function6;
        case "org.ksdfv.thelema.g3d.light.ILight": oktgl_ILight.$clinit(); return oktgl_ILight;
        case "java.nio.charset.UnsupportedCharsetException": jnc_UnsupportedCharsetException.$clinit(); return jnc_UnsupportedCharsetException;
        case "java.util.regex.AbstractCharClass$LazyJavaISOControl$1": jur_AbstractCharClass$LazyJavaISOControl$1.$clinit(); return jur_AbstractCharClass$LazyJavaISOControl$1;
        case "org.ksdfv.thelema.test.shaders.GBufferBaseTest": oktts_GBufferBaseTest.$clinit(); return oktts_GBufferBaseTest;
        case "org.ode4j.ode.internal.libccd.CCDSupport$ccd_support_t": oooil_CCDSupport$ccd_support_t.$clinit(); return oooil_CCDSupport$ccd_support_t;
        case "java.util.regex.LowSurrogateCharSet": jur_LowSurrogateCharSet.$clinit(); return jur_LowSurrogateCharSet;
        case "kotlin.collections.ArrayAsCollection": kc_ArrayAsCollection.$clinit(); return kc_ArrayAsCollection;
        case "java.lang.Error": jl_Error.$clinit(); return jl_Error;
        case "org.ode4j.ode.internal.DxCapsule": oooi_DxCapsule.$clinit(); return oooi_DxCapsule;
        case "org.ode4j.ode.DHeightfield": ooo_DHeightfield.$clinit(); return ooo_DHeightfield;
        case "java.lang.AssertionError": jl_AssertionError.$clinit(); return jl_AssertionError;
        case "com.github.cliftonlabs.json_simple.JsonObject": cgcj_JsonObject.$clinit(); return cgcj_JsonObject;
        case "org.ksdfv.thelema.shader.glsl.GLSLVec2": oktsg_GLSLVec2.$clinit(); return oktsg_GLSLVec2;
        case "java.math.Division": jm_Division.$clinit(); return jm_Division;
        case "java.util.regex.CompositeQuantifierSet": jur_CompositeQuantifierSet.$clinit(); return jur_CompositeQuantifierSet;
        case "java.math.BitLevel": jm_BitLevel.$clinit(); return jm_BitLevel;
        case "java.util.regex.SupplRangeSet": jur_SupplRangeSet.$clinit(); return jur_SupplRangeSet;
        case "java.lang.String": jl_String.$clinit(); return jl_String;
        case "org.ksdfv.thelema.shader.glsl.SplitVec4Node": oktsg_SplitVec4Node.$clinit(); return oktsg_SplitVec4Node;
        case "java.nio.charset.impl.UTF8Encoder": jnci_UTF8Encoder.$clinit(); return jnci_UTF8Encoder;
        case "org.ksdfv.thelema.texture.Texture2D": oktt_Texture2D.$clinit(); return oktt_Texture2D;
        case "org.ode4j.ode.DTriMeshData": ooo_DTriMeshData.$clinit(); return ooo_DTriMeshData;
        case "org.ode4j.ode.internal.cpp4j.java.Ref": oooicj_Ref.$clinit(); return oooicj_Ref;
        case "java.util.Properties": ju_Properties.$clinit(); return ju_Properties;
        case "java.io.StringWriter": ji_StringWriter.$clinit(); return ji_StringWriter;
        case "org.ode4j.ode.threading.task.TaskExecutor": ooott_TaskExecutor.$clinit(); return ooott_TaskExecutor;
        case "kotlin.random.FallbackThreadLocalRandom": kr_FallbackThreadLocalRandom.$clinit(); return kr_FallbackThreadLocalRandom;
        case "org.ode4j.ode.internal.DxTriMeshData$1": oooi_DxTriMeshData$1.$clinit(); return oooi_DxTriMeshData$1;
        case "org.ode4j.ode.internal.CollisionLibccd$CollideCapsuleCylinder": oooi_CollisionLibccd$CollideCapsuleCylinder.$clinit(); return oooi_CollisionLibccd$CollideCapsuleCylinder;
        case "org.ksdfv.thelema.math.IVec3$Companion": oktm_IVec3$Companion.$clinit(); return oktm_IVec3$Companion;
        case "java.nio.charset.impl.UTF8Charset": jnci_UTF8Charset.$clinit(); return jnci_UTF8Charset;
        case "org.teavm.jso.dom.events.KeyboardEventTarget": otjde_KeyboardEventTarget.$clinit(); return otjde_KeyboardEventTarget;
        case "org.ksdfv.thelema.texture.Texture2D$Companion": oktt_Texture2D$Companion.$clinit(); return oktt_Texture2D$Companion;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$WhenMappings": oktgg_GLTF$WhenMappings.$clinit(); return oktgg_GLTF$WhenMappings;
        case "com.github.cliftonlabs.json_simple.Jsoner$DeserializationOptions": cgcj_Jsoner$DeserializationOptions.$clinit(); return cgcj_Jsoner$DeserializationOptions;
        case "kotlin.collections.ArraysKt___ArraysJvmKt": kc_ArraysKt___ArraysJvmKt.$clinit(); return kc_ArraysKt___ArraysJvmKt;
        case "org.ksdfv.thelema.utils.IPath$Companion": oktu_IPath$Companion.$clinit(); return oktu_IPath$Companion;
        case "org.ksdfv.thelema.texture.TextureCube$loadSide$1": oktt_TextureCube$loadSide$1.$clinit(); return oktt_TextureCube$loadSide$1;
        case "org.ksdfv.thelema.phys.ode4j.OdeCapsuleShape": oktpo_OdeCapsuleShape.$clinit(); return oktpo_OdeCapsuleShape;
        case "org.ksdfv.thelema.math.Vec2$Companion": oktm_Vec2$Companion.$clinit(); return oktm_Vec2$Companion;
        case "org.ode4j.ode.internal.CollideTrimeshSphere$1": oooi_CollideTrimeshSphere$1.$clinit(); return oooi_CollideTrimeshSphere$1;
        case "org.ksdfv.thelema.gl.IGL$DefaultImpls": oktg_IGL$DefaultImpls.$clinit(); return oktg_IGL$DefaultImpls;
        case "org.ksdfv.thelema.test.shaders.GBufferBaseTest$testMain$1": oktts_GBufferBaseTest$testMain$1.$clinit(); return oktts_GBufferBaseTest$testMain$1;
        case "kotlin.text.Regex": kt_Regex.$clinit(); return kt_Regex;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$5$1": oktgg_GLTF$read$5$1.$clinit(); return oktgg_GLTF$read$5$1;
        case "org.teavm.jso.ajax.XMLHttpRequest$onComplete$static$lambda$_27_0": otja_XMLHttpRequest$onComplete$static$lambda$_27_0.$clinit(); return otja_XMLHttpRequest$onComplete$static$lambda$_27_0;
        case "org.ode4j.ode.internal.processmem.DxUtil$BlockPointer": oooip_DxUtil$BlockPointer.$clinit(); return oooip_DxUtil$BlockPointer;
        case "org.ksdfv.thelema.shader.glsl.OperationNode$Companion": oktsg_OperationNode$Companion.$clinit(); return oktsg_OperationNode$Companion;
        case "org.ode4j.ode.internal.Objects_H$DxPosRC": oooi_Objects_H$DxPosRC.$clinit(); return oooi_Objects_H$DxPosRC;
        case "org.ksdfv.thelema.data.IFloatData$DefaultImpls": oktd_IFloatData$DefaultImpls.$clinit(); return oktd_IFloatData$DefaultImpls;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$5$3$1": oktgg_IGLTFMaterial$read$5$3$1.$clinit(); return oktgg_IGLTFMaterial$read$5$3$1;
        case "java.lang.Object$Monitor": jl_Object$Monitor.$clinit(); return jl_Object$Monitor;
        case "org.ksdfv.thelema.gl.GL$api$1": oktg_GL$api$1.$clinit(); return oktg_GL$api$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$11$1": oktgg_GLTF$read$11$1.$clinit(); return oktgg_GLTF$read$11$1;
        case "org.ksdfv.thelema.test.FrameBufferTest$testMain$1$1": oktt_FrameBufferTest$testMain$1$1.$clinit(); return oktt_FrameBufferTest$testMain$1$1;
        case "kotlin.collections.CollectionsKt__IterablesKt": kc_CollectionsKt__IterablesKt.$clinit(); return kc_CollectionsKt__IterablesKt;
        case "org.ksdfv.thelema.data.IByteData$DefaultImpls": oktd_IByteData$DefaultImpls.$clinit(); return oktd_IByteData$DefaultImpls;
        case "org.ode4j.ode.OdeConstants": ooo_OdeConstants.$clinit(); return ooo_OdeConstants;
        case "org.ksdfv.thelema.mesh.VertexInput": oktm_VertexInput.$clinit(); return oktm_VertexInput;
        case "org.ksdfv.thelema.mesh.IVertexInputs": oktm_IVertexInputs.$clinit(); return oktm_IVertexInputs;
        case "org.ksdfv.thelema.math.Frustum$Companion": oktm_Frustum$Companion.$clinit(); return oktm_Frustum$Companion;
        case "org.ode4j.ode.DMisc": ooo_DMisc.$clinit(); return ooo_DMisc;
        case "org.ksdfv.thelema.shader.Shader$buildSourceCode$$inlined$sortBy$1": okts_Shader$buildSourceCode$$inlined$sortBy$1.$clinit(); return okts_Shader$buildSourceCode$$inlined$sortBy$1;
        case "org.ode4j.ode.internal.libccd.CCDSimplex": oooil_CCDSimplex.$clinit(); return oooil_CCDSimplex;
        case "java.lang.String$<clinit>$lambda$_81_0": jl_String$_clinit_$lambda$_81_0.$clinit(); return jl_String$_clinit_$lambda$_81_0;
        case "org.ksdfv.thelema.g3d.IWorld": oktg_IWorld.$clinit(); return oktg_IWorld;
        case "org.ode4j.ode.DTriMesh": ooo_DTriMesh.$clinit(); return ooo_DTriMesh;
        case "java.nio.BufferOverflowException": jn_BufferOverflowException.$clinit(); return jn_BufferOverflowException;
        case "org.ksdfv.thelema.teavm.TvmIMG": oktt_TvmIMG.$clinit(); return oktt_TvmIMG;
        case "org.ksdfv.thelema.mesh.IIndexBufferObject$Companion": oktm_IIndexBufferObject$Companion.$clinit(); return oktm_IIndexBufferObject$Companion;
        case "org.ode4j.ode.internal.DxCylinder": oooi_DxCylinder.$clinit(); return oooi_DxCylinder;
        case "org.ode4j.ode.internal.libccd.CCDSimplex$ccd_simplex_t": oooil_CCDSimplex$ccd_simplex_t.$clinit(); return oooil_CCDSimplex$ccd_simplex_t;
        case "java.util.regex.AbstractCharClass$LazyJavaLetterOrDigit": jur_AbstractCharClass$LazyJavaLetterOrDigit.$clinit(); return jur_AbstractCharClass$LazyJavaLetterOrDigit;
        case "org.teavm.classlib.impl.unicode.UnicodeHelper$Range": otciu_UnicodeHelper$Range.$clinit(); return otciu_UnicodeHelper$Range;
        case "org.ode4j.ode.internal.DxQuickStep$dxQuickStepperStage2CallContext": oooi_DxQuickStep$dxQuickStepperStage2CallContext.$clinit(); return oooi_DxQuickStep$dxQuickStepperStage2CallContext;
        case "java.util.regex.AbstractLineTerminator$2": jur_AbstractLineTerminator$2.$clinit(); return jur_AbstractLineTerminator$2;
        case "java.util.regex.AbstractLineTerminator$1": jur_AbstractLineTerminator$1.$clinit(); return jur_AbstractLineTerminator$1;
        case "org.ode4j.ode.internal.processmem.DxStepperProcessingCallContext$dstepper_fn_t": oooip_DxStepperProcessingCallContext$dstepper_fn_t.$clinit(); return oooip_DxStepperProcessingCallContext$dstepper_fn_t;
        case "java.io.OutputStream": ji_OutputStream.$clinit(); return ji_OutputStream;
        case "kotlin.random.RandomKt": kr_RandomKt.$clinit(); return kr_RandomKt;
        case "org.ksdfv.thelema.shader.post.SSAO$render$4": oktsp_SSAO$render$4.$clinit(); return oktsp_SSAO$render$4;
        case "org.ksdfv.thelema.shader.post.SSAO$render$3": oktsp_SSAO$render$3.$clinit(); return oktsp_SSAO$render$3;
        case "org.ksdfv.thelema.shader.post.SSAO$render$2": oktsp_SSAO$render$2.$clinit(); return oktsp_SSAO$render$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTFTexture$read$2$2$1": oktgg_GLTFTexture$read$2$2$1.$clinit(); return oktgg_GLTFTexture$read$2$2$1;
        case "org.ksdfv.thelema.shader.post.SSAO$render$1": oktsp_SSAO$render$1.$clinit(); return oktsp_SSAO$render$1;
        case "java.util.regex.CharClass": jur_CharClass.$clinit(); return jur_CharClass;
        case "java.nio.BufferUnderflowException": jn_BufferUnderflowException.$clinit(); return jn_BufferUnderflowException;
        case "java.nio.charset.impl.BufferedEncoder": jnci_BufferedEncoder.$clinit(); return jnci_BufferedEncoder;
        case "org.ode4j.ode.internal.processmem.DxWorldProcessMemoryReserveInfo": oooip_DxWorldProcessMemoryReserveInfo.$clinit(); return oooip_DxWorldProcessMemoryReserveInfo;
        case "org.ksdfv.thelema.math.IVec3$Companion$Pool$1": oktm_IVec3$Companion$Pool$1.$clinit(); return oktm_IVec3$Companion$Pool$1;
        case "kotlin.internal.PlatformImplementationsKt": ki_PlatformImplementationsKt.$clinit(); return ki_PlatformImplementationsKt;
        case "org.ksdfv.thelema.data.IByteData": oktd_IByteData.$clinit(); return oktd_IByteData;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSparse$Values$read$1": oktgg_GLTFSparse$Values$read$1.$clinit(); return oktgg_GLTFSparse$Values$read$1;
        case "org.ode4j.ode.internal.DxQuickStep$dxQuickStepperStage1CallContext": oooi_DxQuickStep$dxQuickStepperStage1CallContext.$clinit(); return oooi_DxQuickStep$dxQuickStepperStage1CallContext;
        case "kotlin.ranges.ClosedRange": kr_ClosedRange.$clinit(); return kr_ClosedRange;
        case "kotlin.jvm.internal.FunctionBase": kji_FunctionBase.$clinit(); return kji_FunctionBase;
        case "java.lang.CloneNotSupportedException": jl_CloneNotSupportedException.$clinit(); return jl_CloneNotSupportedException;
        case "com.github.cliftonlabs.json_simple.Yytoken": cgcj_Yytoken.$clinit(); return cgcj_Yytoken;
        case "org.ksdfv.thelema.teavm.TvmFile$readBytes$1": oktt_TvmFile$readBytes$1.$clinit(); return oktt_TvmFile$readBytes$1;
        case "org.ksdfv.thelema.data.DATA": oktd_DATA.$clinit(); return oktd_DATA;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFArray": oktgg_IGLTFArray.$clinit(); return oktgg_IGLTFArray;
        case "org.ode4j.ode.internal.libccd.CCDQuat": oooil_CCDQuat.$clinit(); return oooil_CCDQuat;
        case "org.ode4j.ode.threading.task.AbstractTaskExecutor": ooott_AbstractTaskExecutor.$clinit(); return ooott_AbstractTaskExecutor;
        case "java.util.EnumSet": ju_EnumSet.$clinit(); return ju_EnumSet;
        case "org.ksdfv.thelema.g3d.anim.Anim": oktga_Anim.$clinit(); return oktga_Anim;
        case "org.ksdfv.thelema.g3d.gltf.GLTFScene$read$3$1$1": oktgg_GLTFScene$read$3$1$1.$clinit(); return oktgg_GLTFScene$read$3$1$1;
        case "org.ksdfv.thelema.fs.IFS$DefaultImpls": oktf_IFS$DefaultImpls.$clinit(); return oktf_IFS$DefaultImpls;
        case "org.teavm.jso.dom.events.LoadEventTarget": otjde_LoadEventTarget.$clinit(); return otjde_LoadEventTarget;
        case "org.ode4j.ode.internal.DxGeom$dColliderEntry": oooi_DxGeom$dColliderEntry.$clinit(); return oooi_DxGeom$dColliderEntry;
        case "kotlin.text.StringsKt___StringsJvmKt": kt_StringsKt___StringsJvmKt.$clinit(); return kt_StringsKt___StringsJvmKt;
        case "org.ode4j.ode.DWorld": ooo_DWorld.$clinit(); return ooo_DWorld;
        case "org.teavm.classlib.impl.Base46": otci_Base46.$clinit(); return otci_Base46;
        case "org.ode4j.ode.internal.DxHeightfield": oooi_DxHeightfield.$clinit(); return oooi_DxHeightfield;
        case "java.util.regex.CompositeRangeSet": jur_CompositeRangeSet.$clinit(); return jur_CompositeRangeSet;
        case "org.ode4j.ode.internal.CollisionLibccd$CollideConvexConvexCCD": oooi_CollisionLibccd$CollideConvexConvexCCD.$clinit(); return oooi_CollisionLibccd$CollideConvexConvexCCD;
        case "java.util.Hashtable$Entry": ju_Hashtable$Entry.$clinit(); return ju_Hashtable$Entry;
        case "kotlin.ranges.RangesKt": kr_RangesKt.$clinit(); return kr_RangesKt;
        case "kotlin.random.FallbackThreadLocalRandom$implStorage$1": kr_FallbackThreadLocalRandom$implStorage$1.$clinit(); return kr_FallbackThreadLocalRandom$implStorage$1;
        case "org.ksdfv.thelema.phys.ICapsuleShape": oktp_ICapsuleShape.$clinit(); return oktp_ICapsuleShape;
        case "java.util.regex.FinalSet": jur_FinalSet.$clinit(); return jur_FinalSet;
        case "kotlin.TypeCastException": k_TypeCastException.$clinit(); return k_TypeCastException;
        case "org.ode4j.ode.DConvex": ooo_DConvex.$clinit(); return ooo_DConvex;
        case "org.ode4j.ode.threading.MutexGroup$dxProcessContextMutex": ooot_MutexGroup$dxProcessContextMutex.$clinit(); return ooot_MutexGroup$dxProcessContextMutex;
        case "org.ode4j.ode.internal.gimpact.GimMath": oooig_GimMath.$clinit(); return oooig_GimMath;
        case "java.lang.StackTraceElement": jl_StackTraceElement.$clinit(); return jl_StackTraceElement;
        case "org.ksdfv.thelema.test.MouseTest$testMain$1": oktt_MouseTest$testMain$1.$clinit(); return oktt_MouseTest$testMain$1;
        case "java.util.LinkedHashMap$LinkedHashMapEntry": ju_LinkedHashMap$LinkedHashMapEntry.$clinit(); return ju_LinkedHashMap$LinkedHashMapEntry;
        case "org.ksdfv.thelema.g3d.node.IDelegateTransformNode": oktgn_IDelegateTransformNode.$clinit(); return oktgn_IDelegateTransformNode;
        case "org.ode4j.ode.internal.DxGimpactData": oooi_DxGimpactData.$clinit(); return oooi_DxGimpactData;
        case "org.ode4j.ode.internal.gimpact.GimGeometry": oooig_GimGeometry.$clinit(); return oooig_GimGeometry;
        case "org.ksdfv.thelema.utils.IAsyncList$DefaultImpls": oktu_IAsyncList$DefaultImpls.$clinit(); return oktu_IAsyncList$DefaultImpls;
        case "java.util.AbstractList$1": ju_AbstractList$1.$clinit(); return ju_AbstractList$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFCamera$read$3$4": oktgg_GLTFCamera$read$3$4.$clinit(); return oktgg_GLTFCamera$read$3$4;
        case "org.ksdfv.thelema.g3d.gltf.GLTFCamera$read$3$3": oktgg_GLTFCamera$read$3$3.$clinit(); return oktgg_GLTFCamera$read$3$3;
        case "org.ksdfv.thelema.g3d.gltf.GLTFCamera$read$3$2": oktgg_GLTFCamera$read$3$2.$clinit(); return oktgg_GLTFCamera$read$3$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTFCamera$read$3$1": oktgg_GLTFCamera$read$3$1.$clinit(); return oktgg_GLTFCamera$read$3$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFCamera": oktgg_GLTFCamera.$clinit(); return oktgg_GLTFCamera;
        case "org.ode4j.ode.internal.CollideTrimeshPlane": oooi_CollideTrimeshPlane.$clinit(); return oooi_CollideTrimeshPlane;
        case "org.ode4j.ode.DContactGeom": ooo_DContactGeom.$clinit(); return ooo_DContactGeom;
        case "org.ode4j.ode.internal.DxSpace$2": oooi_DxSpace$2.$clinit(); return oooi_DxSpace$2;
        case "java.lang.Runnable": jl_Runnable.$clinit(); return jl_Runnable;
        case "org.ode4j.ode.internal.DxSpace$1": oooi_DxSpace$1.$clinit(); return oooi_DxSpace$1;
        case "org.ode4j.ode.internal.DxHashSpace$dxAABB": oooi_DxHashSpace$dxAABB.$clinit(); return oooi_DxHashSpace$dxAABB;
        case "java.nio.charset.impl.BufferedDecoder$Controller": jnci_BufferedDecoder$Controller.$clinit(); return jnci_BufferedDecoder$Controller;
        case "java.util.regex.PossessiveQuantifierSet": jur_PossessiveQuantifierSet.$clinit(); return jur_PossessiveQuantifierSet;
        case "java.lang.Short": jl_Short.$clinit(); return jl_Short;
        case "java.lang.InstantiationException": jl_InstantiationException.$clinit(); return jl_InstantiationException;
        case "org.ode4j.ode.internal.OdeFactoryImpl": oooi_OdeFactoryImpl.$clinit(); return oooi_OdeFactoryImpl;
        case "org.ksdfv.thelema.utils.Pool": oktu_Pool.$clinit(); return oktu_Pool;
        case "org.teavm.platform.PlatformRunnable": otp_PlatformRunnable.$clinit(); return otp_PlatformRunnable;
        case "org.ode4j.ode.internal.DxSpace$3": oooi_DxSpace$3.$clinit(); return oooi_DxSpace$3;
        case "java.util.HashMap$HashEntry": ju_HashMap$HashEntry.$clinit(); return ju_HashMap$HashEntry;
        case "org.ode4j.ode.internal.gimpact.GimTrimeshCapsuleCollision": oooig_GimTrimeshCapsuleCollision.$clinit(); return oooig_GimTrimeshCapsuleCollision;
        case "org.ksdfv.thelema.input.IMouse": okti_IMouse.$clinit(); return okti_IMouse;
        case "org.ode4j.ode.internal.DxTriMeshDisabled$dxTriMeshDisabledData": oooi_DxTriMeshDisabled$dxTriMeshDisabledData.$clinit(); return oooi_DxTriMeshDisabled$dxTriMeshDisabledData;
        case "org.ode4j.ode.internal.CollideCylinderPlane": oooi_CollideCylinderPlane.$clinit(); return oooi_CollideCylinderPlane;
        case "org.ode4j.ode.internal.gimpact.GimBufferArrayFloat": oooig_GimBufferArrayFloat.$clinit(); return oooig_GimBufferArrayFloat;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAnimation$read$2$1": oktgg_GLTFAnimation$read$2$1.$clinit(); return oktgg_GLTFAnimation$read$2$1;
        case "org.ksdfv.thelema.data.IShortData": oktd_IShortData.$clinit(); return oktd_IShortData;
        case "org.ode4j.ode.DContactGeomBuffer": ooo_DContactGeomBuffer.$clinit(); return ooo_DContactGeomBuffer;
        case "org.ksdfv.thelema.math.IVec2$Companion": oktm_IVec2$Companion.$clinit(); return oktm_IVec2$Companion;
        case "org.ode4j.ode.internal.joints.Info2Descr": oooij_Info2Descr.$clinit(); return oooij_Info2Descr;
        case "java.util.HashSet": ju_HashSet.$clinit(); return ju_HashSet;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$16$1": oktgg_GLTF$read$16$1.$clinit(); return oktgg_GLTF$read$16$1;
        case "org.ksdfv.thelema.phys.IOverObject": oktp_IOverObject.$clinit(); return oktp_IOverObject;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAnimation$read$2$1$1": oktgg_GLTFAnimation$read$2$1$1.$clinit(); return oktgg_GLTFAnimation$read$2$1$1;
        case "org.ode4j.ode.internal.gimpact.GimTrimeshRayCollision": oooig_GimTrimeshRayCollision.$clinit(); return oooig_GimTrimeshRayCollision;
        case "org.ksdfv.thelema.test.mesh.BoxMeshBuilderTest": okttm_BoxMeshBuilderTest.$clinit(); return okttm_BoxMeshBuilderTest;
        case "org.ksdfv.thelema.shader.glsl.GLSLValue": oktsg_GLSLValue.$clinit(); return oktsg_GLSLValue;
        case "com.github.cliftonlabs.json_simple.JsonException$Problems": cgcj_JsonException$Problems.$clinit(); return cgcj_JsonException$Problems;
        case "org.ode4j.ode.internal.processmem.DxWorldProcessContext": oooip_DxWorldProcessContext.$clinit(); return oooip_DxWorldProcessContext;
        case "org.ksdfv.thelema.test.Texture2DTest$testMain$1": oktt_Texture2DTest$testMain$1.$clinit(); return oktt_Texture2DTest$testMain$1;
        case "org.ksdfv.thelema.APP": okt_APP.$clinit(); return okt_APP;
        case "java.util.regex.AbstractCharClass$LazyJavaTitleCase": jur_AbstractCharClass$LazyJavaTitleCase.$clinit(); return jur_AbstractCharClass$LazyJavaTitleCase;
        case "java.util.regex.PreviousMatch": jur_PreviousMatch.$clinit(); return jur_PreviousMatch;
        case "org.ode4j.ode.DAABB": ooo_DAABB.$clinit(); return ooo_DAABB;
        case "java.util.regex.NonCapFSet": jur_NonCapFSet.$clinit(); return jur_NonCapFSet;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAnimation$asFloatBuffer$1": oktgg_GLTFAnimation$asFloatBuffer$1.$clinit(); return oktgg_GLTFAnimation$asFloatBuffer$1;
        case "org.ksdfv.thelema.g3d.node.ITransformNode$Companion": oktgn_ITransformNode$Companion.$clinit(); return oktgn_ITransformNode$Companion;
        case "org.ksdfv.thelema.shader.glsl.GLSLFloatInline": oktsg_GLSLFloatInline.$clinit(); return oktsg_GLSLFloatInline;
        case "org.ksdfv.thelema.teavm.TvmMouse": oktt_TvmMouse.$clinit(); return oktt_TvmMouse;
        case "org.ode4j.ode.internal.gimpact.GimGeometry$mat4f": oooig_GimGeometry$mat4f.$clinit(); return oooig_GimGeometry$mat4f;
        case "org.ksdfv.thelema.g3d.IArmature": oktg_IArmature.$clinit(); return oktg_IArmature;
        case "java.util.regex.AbstractCharClass$LazyJavaLowerCase$1": jur_AbstractCharClass$LazyJavaLowerCase$1.$clinit(); return jur_AbstractCharClass$LazyJavaLowerCase$1;
        case "java.lang.Object$monitorExit$lambda$_8_0": jl_Object$monitorExit$lambda$_8_0.$clinit(); return jl_Object$monitorExit$lambda$_8_0;
        case "java.io.PrintWriter": ji_PrintWriter.$clinit(); return ji_PrintWriter;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAccessor": oktgg_GLTFAccessor.$clinit(); return oktgg_GLTFAccessor;
        case "java.util.regex.AbstractCharClass$LazyPunct": jur_AbstractCharClass$LazyPunct.$clinit(); return jur_AbstractCharClass$LazyPunct;
        case "org.ksdfv.thelema.phys.IPhysicsWorld$DefaultImpls": oktp_IPhysicsWorld$DefaultImpls.$clinit(); return oktp_IPhysicsWorld$DefaultImpls;
        case "kotlin.sequences.SequencesKt__SequenceBuilderKt": ks_SequencesKt__SequenceBuilderKt.$clinit(); return ks_SequencesKt__SequenceBuilderKt;
        case "org.ode4j.ode.internal.cpp4j.java.ObjArray": oooicj_ObjArray.$clinit(); return oooicj_ObjArray;
        case "org.ksdfv.thelema.g3d.gltf.GLTFPrimitive$Companion": oktgg_GLTFPrimitive$Companion.$clinit(); return oktgg_GLTFPrimitive$Companion;
        case "java.util.Dictionary": ju_Dictionary.$clinit(); return ju_Dictionary;
        case "org.ode4j.ode.threading.MutexGroupImpl": ooot_MutexGroupImpl.$clinit(); return ooot_MutexGroupImpl;
        case "java.lang.Throwable": jl_Throwable.$clinit(); return jl_Throwable;
        case "java.util.regex.AbstractCharClass$LazySpace": jur_AbstractCharClass$LazySpace.$clinit(); return jur_AbstractCharClass$LazySpace;
        case "org.ksdfv.thelema.shader.post.SSAO": oktsp_SSAO.$clinit(); return oktsp_SSAO;
        case "org.ksdfv.thelema.test.shaders.glsl.SkyboxVertexNodeTest": okttsg_SkyboxVertexNodeTest.$clinit(); return okttsg_SkyboxVertexNodeTest;
        case "org.ode4j.ode.internal.CollisionLibccd$CollideConvexBoxCCD": oooi_CollisionLibccd$CollideConvexBoxCCD.$clinit(); return oooi_CollisionLibccd$CollideConvexBoxCCD;
        case "java.math.Elementary": jm_Elementary.$clinit(); return jm_Elementary;
        case "java.util.LinkedHashMap$2": ju_LinkedHashMap$2.$clinit(); return ju_LinkedHashMap$2;
        case "java.util.LinkedList$SequentialListIterator": ju_LinkedList$SequentialListIterator.$clinit(); return ju_LinkedList$SequentialListIterator;
        case "org.ksdfv.thelema.phys.ode4j.OdePhysicsWorld$Companion": oktpo_OdePhysicsWorld$Companion.$clinit(); return oktpo_OdePhysicsWorld$Companion;
        case "org.ode4j.ode.internal.CollideTrimeshTrimesh$1": oooi_CollideTrimeshTrimesh$1.$clinit(); return oooi_CollideTrimeshTrimesh$1;
        case "org.ksdfv.thelema.img.IImg$DefaultImpls": okti_IImg$DefaultImpls.$clinit(); return okti_IImg$DefaultImpls;
        case "org.ksdfv.thelema.phys.IShape": oktp_IShape.$clinit(); return oktp_IShape;
        case "org.ksdfv.thelema.input.IMouseListener$DefaultImpls": okti_IMouseListener$DefaultImpls.$clinit(); return okti_IMouseListener$DefaultImpls;
        case "org.ode4j.ode.internal.cpp4j.java.RefDouble": oooicj_RefDouble.$clinit(); return oooicj_RefDouble;
        case "org.ksdfv.thelema.teavm.TvmFloat32Array": oktt_TvmFloat32Array.$clinit(); return oktt_TvmFloat32Array;
        case "org.ksdfv.thelema.test.KeyboardTest": oktt_KeyboardTest.$clinit(); return oktt_KeyboardTest;
        case "kotlin.random.Random": kr_Random.$clinit(); return kr_Random;
        case "org.ksdfv.thelema.g3d.IObject3D$Companion": oktg_IObject3D$Companion.$clinit(); return oktg_IObject3D$Companion;
        case "java.util.AbstractList": ju_AbstractList.$clinit(); return ju_AbstractList;
        case "java.util.regex.ReluctantCompositeQuantifierSet": jur_ReluctantCompositeQuantifierSet.$clinit(); return jur_ReluctantCompositeQuantifierSet;
        case "org.ksdfv.thelema.test.shaders.glsl.SSAOTest$testMain$1": okttsg_SSAOTest$testMain$1.$clinit(); return okttsg_SSAOTest$testMain$1;
        case "java.lang.AutoCloseable": jl_AutoCloseable.$clinit(); return jl_AutoCloseable;
        case "java.nio.ByteBuffer": jn_ByteBuffer.$clinit(); return jn_ByteBuffer;
        case "org.ksdfv.thelema.phys.ode4j.OdePhysicsWorld": oktpo_OdePhysicsWorld.$clinit(); return oktpo_OdePhysicsWorld;
        case "java.util.regex.SOLSet": jur_SOLSet.$clinit(); return jur_SOLSet;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$1": oktgg_IGLTFMaterial$read$1.$clinit(); return oktgg_IGLTFMaterial$read$1;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$3": oktgg_IGLTFMaterial$read$3.$clinit(); return oktgg_IGLTFMaterial$read$3;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$2": oktgg_IGLTFMaterial$read$2.$clinit(); return oktgg_IGLTFMaterial$read$2;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$5": oktgg_IGLTFMaterial$read$5.$clinit(); return oktgg_IGLTFMaterial$read$5;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$4": oktgg_IGLTFMaterial$read$4.$clinit(); return oktgg_IGLTFMaterial$read$4;
        case "org.ksdfv.thelema.shader.glsl.ToneMapNode": oktsg_ToneMapNode.$clinit(); return oktsg_ToneMapNode;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$9": oktgg_IGLTFMaterial$read$9.$clinit(); return oktgg_IGLTFMaterial$read$9;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$8": oktgg_IGLTFMaterial$read$8.$clinit(); return oktgg_IGLTFMaterial$read$8;
        case "java.lang.Cloneable": jl_Cloneable.$clinit(); return jl_Cloneable;
        case "org.ode4j.ode.internal.CollideSpaceGeom": oooi_CollideSpaceGeom.$clinit(); return oooi_CollideSpaceGeom;
        case "kotlin.sequences.Sequence": ks_Sequence.$clinit(); return ks_Sequence;
        case "org.ksdfv.thelema.gl.GL": oktg_GL.$clinit(); return oktg_GL;
        case "org.ksdfv.thelema.test.shaders.CascadedShadowMappingBaseTest$testMain$1$1": oktts_CascadedShadowMappingBaseTest$testMain$1$1.$clinit(); return oktts_CascadedShadowMappingBaseTest$testMain$1$1;
        case "kotlin.jvm.functions.Function18": kjf_Function18.$clinit(); return kjf_Function18;
        case "kotlin.jvm.functions.Function19": kjf_Function19.$clinit(); return kjf_Function19;
        case "kotlin.collections.ArraysUtilJVM": kc_ArraysUtilJVM.$clinit(); return kc_ArraysUtilJVM;
        case "org.ksdfv.thelema.g3d.gltf.GLTFBuffer": oktgg_GLTFBuffer.$clinit(); return oktgg_GLTFBuffer;
        case "org.ksdfv.thelema.audio.IMusic": okta_IMusic.$clinit(); return okta_IMusic;
        case "org.ksdfv.thelema.phys.ode4j.IOdeGeom": oktpo_IOdeGeom.$clinit(); return oktpo_IOdeGeom;
        case "kotlin.jvm.functions.Function14": kjf_Function14.$clinit(); return kjf_Function14;
        case "kotlin.jvm.functions.Function15": kjf_Function15.$clinit(); return kjf_Function15;
        case "org.ksdfv.thelema.json.IJsonArrayIO": oktj_IJsonArrayIO.$clinit(); return oktj_IJsonArrayIO;
        case "kotlin.jvm.functions.Function16": kjf_Function16.$clinit(); return kjf_Function16;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$3$1": oktgg_GLTFNode$read$3$1.$clinit(); return oktgg_GLTFNode$read$3$1;
        case "kotlin.jvm.functions.Function17": kjf_Function17.$clinit(); return kjf_Function17;
        case "kotlin.collections.ArraysKt": kc_ArraysKt.$clinit(); return kc_ArraysKt;
        case "kotlin.jvm.functions.Function10": kjf_Function10.$clinit(); return kjf_Function10;
        case "kotlin.jvm.functions.Function11": kjf_Function11.$clinit(); return kjf_Function11;
        case "kotlin.jvm.functions.Function12": kjf_Function12.$clinit(); return kjf_Function12;
        case "kotlin.jvm.functions.Function13": kjf_Function13.$clinit(); return kjf_Function13;
        case "org.teavm.classlib.impl.text.DoubleAnalyzer": otcit_DoubleAnalyzer.$clinit(); return otcit_DoubleAnalyzer;
        case "java.util.regex.EOLSet": jur_EOLSet.$clinit(); return jur_EOLSet;
        case "java.util.regex.Lexer": jur_Lexer.$clinit(); return jur_Lexer;
        case "org.ode4j.ode.internal.DxQuickStep$ReorderingMethod": oooi_DxQuickStep$ReorderingMethod.$clinit(); return oooi_DxQuickStep$ReorderingMethod;
        case "java.util.regex.AbstractCharClass$LazyNonSpace": jur_AbstractCharClass$LazyNonSpace.$clinit(); return jur_AbstractCharClass$LazyNonSpace;
        case "org.ode4j.ode.internal.joints.DxJointGroup": oooij_DxJointGroup.$clinit(); return oooij_DxJointGroup;
        case "kotlin.jvm.functions.Function21": kjf_Function21.$clinit(); return kjf_Function21;
        case "kotlin.jvm.functions.Function22": kjf_Function22.$clinit(); return kjf_Function22;
        case "kotlin.jvm.functions.Function20": kjf_Function20.$clinit(); return kjf_Function20;
        case "org.ksdfv.thelema.g3d.gltf.GLTFImage$read$5": oktgg_GLTFImage$read$5.$clinit(); return oktgg_GLTFImage$read$5;
        case "org.ksdfv.thelema.phys.ode4j.OdeRigidBody$Companion": oktpo_OdeRigidBody$Companion.$clinit(); return oktpo_OdeRigidBody$Companion;
        case "org.ksdfv.thelema.g3d.gltf.GLTFImage$read$1": oktgg_GLTFImage$read$1.$clinit(); return oktgg_GLTFImage$read$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFImage$read$2": oktgg_GLTFImage$read$2.$clinit(); return oktgg_GLTFImage$read$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTFImage$read$3": oktgg_GLTFImage$read$3.$clinit(); return oktgg_GLTFImage$read$3;
        case "org.ksdfv.thelema.g3d.gltf.GLTFImage$read$4": oktgg_GLTFImage$read$4.$clinit(); return oktgg_GLTFImage$read$4;
        case "org.ksdfv.thelema.test.CascadedShadowMatricesTest$testMain$1": oktt_CascadedShadowMatricesTest$testMain$1.$clinit(); return oktt_CascadedShadowMatricesTest$testMain$1;
        case "org.ksdfv.thelema.g3d.cam.ICamera": oktgc_ICamera.$clinit(); return oktgc_ICamera;
        case "org.ksdfv.thelema.mesh.IIndexBufferObject$Companion$Build$1": oktm_IIndexBufferObject$Companion$Build$1.$clinit(); return oktm_IIndexBufferObject$Companion$Build$1;
        case "org.ksdfv.thelema.json.jsonsimple3.JsonSimple3Object$Companion": oktjj_JsonSimple3Object$Companion.$clinit(); return oktjj_JsonSimple3Object$Companion;
        case "org.ksdfv.thelema.math.IVec3$Companion$Build$1": oktm_IVec3$Companion$Build$1.$clinit(); return oktm_IVec3$Companion$Build$1;
        case "org.ksdfv.thelema.phys.ode4j.OdeTrimeshShape": oktpo_OdeTrimeshShape.$clinit(); return oktpo_OdeTrimeshShape;
        case "java.lang.AbstractStringBuilder$Constants": jl_AbstractStringBuilder$Constants.$clinit(); return jl_AbstractStringBuilder$Constants;
        case "org.ode4j.ode.DBox": ooo_DBox.$clinit(); return ooo_DBox;
        case "org.ksdfv.thelema.phys.IPhysicsWorld": oktp_IPhysicsWorld.$clinit(); return oktp_IPhysicsWorld;
        case "java.util.regex.BackReferencedSingleSet": jur_BackReferencedSingleSet.$clinit(); return jur_BackReferencedSingleSet;
        case "org.teavm.platform.PlatformQueue": otp_PlatformQueue.$clinit(); return otp_PlatformQueue;
        case "org.ksdfv.thelema.shader.glsl.PrincipledBSDF$Companion": oktsg_PrincipledBSDF$Companion.$clinit(); return oktsg_PrincipledBSDF$Companion;
        case "org.ksdfv.thelema.json.IJsonArray$DefaultImpls": oktj_IJsonArray$DefaultImpls.$clinit(); return oktj_IJsonArray$DefaultImpls;
        case "org.ksdfv.thelema.g3d.gltf.GLTFMesh$read$2$1": oktgg_GLTFMesh$read$2$1.$clinit(); return oktgg_GLTFMesh$read$2$1;
        case "org.ksdfv.thelema.g3d.anim.Vec4Track": oktga_Vec4Track.$clinit(); return oktga_Vec4Track;
        case "java.util.MissingResourceException": ju_MissingResourceException.$clinit(); return ju_MissingResourceException;
        case "org.ksdfv.thelema.audio.ISound$DefaultImpls": okta_ISound$DefaultImpls.$clinit(); return okta_ISound$DefaultImpls;
        case "org.ksdfv.thelema.teavm.test.MainTeaVMTests$main$1": okttt_MainTeaVMTests$main$1.$clinit(); return okttt_MainTeaVMTests$main$1;
        case "java.nio.ByteOrder": jn_ByteOrder.$clinit(); return jn_ByteOrder;
        case "org.ode4j.ode.internal.cpp4j.Ctype": oooic_Ctype.$clinit(); return oooic_Ctype;
        case "org.ksdfv.thelema.mesh.IScreenQuad": oktm_IScreenQuad.$clinit(); return oktm_IScreenQuad;
        case "org.ksdfv.thelema.test.shaders.BloomTest": oktts_BloomTest.$clinit(); return oktts_BloomTest;
        case "org.ksdfv.thelema.math.IMat4": oktm_IMat4.$clinit(); return oktm_IMat4;
        case "org.ode4j.ode.internal.processmem.DxUtil$alloc_block_fn_t": oooip_DxUtil$alloc_block_fn_t.$clinit(); return oooip_DxUtil$alloc_block_fn_t;
        case "org.ksdfv.thelema.input.KB": okti_KB.$clinit(); return okti_KB;
        case "org.ksdfv.thelema.test.GLTFModel": oktt_GLTFModel.$clinit(); return oktt_GLTFModel;
        case "org.ode4j.ode.internal.DxHashSpace": oooi_DxHashSpace.$clinit(); return oooi_DxHashSpace;
        case "java.util.regex.ReluctantGroupQuantifierSet": jur_ReluctantGroupQuantifierSet.$clinit(); return jur_ReluctantGroupQuantifierSet;
        case "java.lang.ReflectiveOperationException": jl_ReflectiveOperationException.$clinit(); return jl_ReflectiveOperationException;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$2$1": oktgg_GLTF$read$2$1.$clinit(); return oktgg_GLTF$read$2$1;
        case "org.ksdfv.thelema.texture.IFrameBufferAttachment$DefaultImpls": oktt_IFrameBufferAttachment$DefaultImpls.$clinit(); return oktt_IFrameBufferAttachment$DefaultImpls;
        case "org.ksdfv.thelema.teavm.TvmGL$buffers$1": oktt_TvmGL$buffers$1.$clinit(); return oktt_TvmGL$buffers$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFPrimitive$read$2": oktgg_GLTFPrimitive$read$2.$clinit(); return oktgg_GLTFPrimitive$read$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTFPrimitive$read$1": oktgg_GLTFPrimitive$read$1.$clinit(); return oktgg_GLTFPrimitive$read$1;
        case "org.ksdfv.thelema.test.Test": oktt_Test.$clinit(); return oktt_Test;
        case "java.util.LinkedHashMap$EntryIterator": ju_LinkedHashMap$EntryIterator.$clinit(); return ju_LinkedHashMap$EntryIterator;
        case "java.io.Flushable": ji_Flushable.$clinit(); return ji_Flushable;
        case "org.ksdfv.thelema.teavm.TvmSound$1": oktt_TvmSound$1.$clinit(); return oktt_TvmSound$1;
        case "org.ksdfv.thelema.test.shaders.SSAOBaseTest": oktts_SSAOBaseTest.$clinit(); return oktts_SSAOBaseTest;
        case "kotlin.text.StringsKt": kt_StringsKt.$clinit(); return kt_StringsKt;
        case "org.ksdfv.thelema.teavm.TvmGL$FrameBufferWrap": oktt_TvmGL$FrameBufferWrap.$clinit(); return oktt_TvmGL$FrameBufferWrap;
        case "org.ode4j.ode.internal.DxQuickStep$dxQuickStepperLocalContext": oooi_DxQuickStep$dxQuickStepperLocalContext.$clinit(); return oooi_DxQuickStep$dxQuickStepperLocalContext;
        case "org.ksdfv.thelema.g3d.cam.OrbitCameraControl$listenToMouse$listener$1": oktgc_OrbitCameraControl$listenToMouse$listener$1.$clinit(); return oktgc_OrbitCameraControl$listenToMouse$listener$1;
        case "org.ode4j.ode.internal.Matrix": oooi_Matrix.$clinit(); return oooi_Matrix;
        case "org.ksdfv.thelema.teavm.TvmGL$ShaderWrap": oktt_TvmGL$ShaderWrap.$clinit(); return oktt_TvmGL$ShaderWrap;
        case "java.io.StringReader": ji_StringReader.$clinit(); return ji_StringReader;
        case "org.ksdfv.thelema.test.phys.SphereShapeTest$testMain$1": okttp_SphereShapeTest$testMain$1.$clinit(); return okttp_SphereShapeTest$testMain$1;
        case "kotlin.text.StringsKt__RegexExtensionsJVMKt": kt_StringsKt__RegexExtensionsJVMKt.$clinit(); return kt_StringsKt__RegexExtensionsJVMKt;
        case "org.ksdfv.thelema.g3d.gltf.GLTFTexture$read$2$1": oktgg_GLTFTexture$read$2$1.$clinit(); return oktgg_GLTFTexture$read$2$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFTexture$read$2$2": oktgg_GLTFTexture$read$2$2.$clinit(); return oktgg_GLTFTexture$read$2$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$Companion": oktgg_GLTF$Companion.$clinit(); return oktgg_GLTF$Companion;
        case "kotlin.text.StringsKt__StringBuilderJVMKt": kt_StringsKt__StringBuilderJVMKt.$clinit(); return kt_StringsKt__StringBuilderJVMKt;
        case "java.util.AbstractCollection": ju_AbstractCollection.$clinit(); return ju_AbstractCollection;
        case "org.teavm.classlib.impl.IntegerUtil": otci_IntegerUtil.$clinit(); return otci_IntegerUtil;
        case "java.util.concurrent.atomic.AtomicInteger": juca_AtomicInteger.$clinit(); return juca_AtomicInteger;
        case "org.ksdfv.thelema.teavm.TvmArrayBufferView": oktt_TvmArrayBufferView.$clinit(); return oktt_TvmArrayBufferView;
        case "java.lang.Readable": jl_Readable.$clinit(); return jl_Readable;
        case "org.ksdfv.thelema.shader.glsl.GLSLMat3": oktsg_GLSLMat3.$clinit(); return oktsg_GLSLMat3;
        case "org.ksdfv.thelema.shader.glsl.GLSLMat4": oktsg_GLSLMat4.$clinit(); return oktsg_GLSLMat4;
        case "org.ksdfv.thelema.input.IMouseListener": okti_IMouseListener.$clinit(); return okti_IMouseListener;
        case "org.ode4j.ode.internal.CollisionLibccd$CollideConvexTrimeshTrianglesCCD": oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD.$clinit(); return oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD;
        case "org.ksdfv.thelema.shader.post.Threshold$render$1": oktsp_Threshold$render$1.$clinit(); return oktsp_Threshold$render$1;
        case "org.ksdfv.thelema.utils.ILog": oktu_ILog.$clinit(); return oktu_ILog;
        case "org.ode4j.ode.internal.DxConvex$CollideConvexCapsule": oooi_DxConvex$CollideConvexCapsule.$clinit(); return oooi_DxConvex$CollideConvexCapsule;
        case "org.ksdfv.thelema.g3d.IScene$Companion": oktg_IScene$Companion.$clinit(); return oktg_IScene$Companion;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$destroy$1": oktgg_GLTF$destroy$1.$clinit(); return oktgg_GLTF$destroy$1;
        case "java.util.regex.AbstractCharClass$LazyWord": jur_AbstractCharClass$LazyWord.$clinit(); return jur_AbstractCharClass$LazyWord;
        case "kotlin.jvm.internal.ArrayIterator": kji_ArrayIterator.$clinit(); return kji_ArrayIterator;
        case "java.util.regex.SequenceSet": jur_SequenceSet.$clinit(); return jur_SequenceSet;
        case "kotlin.collections.CollectionsKt": kc_CollectionsKt.$clinit(); return kc_CollectionsKt;
        case "java.io.DataInput": ji_DataInput.$clinit(); return ji_DataInput;
        case "org.ode4j.ode.internal.gimpact.GimGeometry$aabb3f": oooig_GimGeometry$aabb3f.$clinit(); return oooig_GimGeometry$aabb3f;
        case "org.ksdfv.thelema.input.IKB": okti_IKB.$clinit(); return okti_IKB;
        case "java.util.regex.UCIRangeSet": jur_UCIRangeSet.$clinit(); return jur_UCIRangeSet;
        case "org.ode4j.ode.internal.DxCapsule$CollideCapsuleBox": oooi_DxCapsule$CollideCapsuleBox.$clinit(); return oooi_DxCapsule$CollideCapsuleBox;
        case "org.ksdfv.thelema.data.IDataArray": oktd_IDataArray.$clinit(); return oktd_IDataArray;
        case "org.ksdfv.thelema.teavm.TvmFile$readText$1": oktt_TvmFile$readText$1.$clinit(); return oktt_TvmFile$readText$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSourceType": oktgg_GLTFSourceType.$clinit(); return oktgg_GLTFSourceType;
        case "org.ksdfv.thelema.teavm.TvmFile": oktt_TvmFile.$clinit(); return oktt_TvmFile;
        case "java.lang.Boolean": jl_Boolean.$clinit(); return jl_Boolean;
        case "java.util.NoSuchElementException": ju_NoSuchElementException.$clinit(); return ju_NoSuchElementException;
        case "org.ode4j.ode.internal.cpp4j.java.RefBoolean": oooicj_RefBoolean.$clinit(); return oooicj_RefBoolean;
        case "org.ksdfv.thelema.teavm.TvmGL$VertexArrayWrap": oktt_TvmGL$VertexArrayWrap.$clinit(); return oktt_TvmGL$VertexArrayWrap;
        case "java.util.regex.BackReferenceSet": jur_BackReferenceSet.$clinit(); return jur_BackReferenceSet;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$load$1": oktgg_GLTF$load$1.$clinit(); return oktgg_GLTF$load$1;
        case "org.ode4j.ode.internal.CollideTrimeshCCylinder": oooi_CollideTrimeshCCylinder.$clinit(); return oooi_CollideTrimeshCCylinder;
        case "org.ksdfv.thelema.shader.glsl.GLSLFloat": oktsg_GLSLFloat.$clinit(); return oktsg_GLSLFloat;
        case "org.ksdfv.thelema.mesh.build.SphereMeshBuilder": oktmb_SphereMeshBuilder.$clinit(); return oktmb_SphereMeshBuilder;
        case "java.util.Arrays": ju_Arrays.$clinit(); return ju_Arrays;
        case "org.ode4j.ode.internal.joints.DxJoint": oooij_DxJoint.$clinit(); return oooij_DxJoint;
        case "org.ksdfv.thelema.teavm.test.MainTeaVMTests": okttt_MainTeaVMTests.$clinit(); return okttt_MainTeaVMTests;
        case "org.ksdfv.thelema.g3d.gltf.GLTFPrimitive$read$2$1": oktgg_GLTFPrimitive$read$2$1.$clinit(); return oktgg_GLTFPrimitive$read$2$1;
        case "java.util.regex.DotSet": jur_DotSet.$clinit(); return jur_DotSet;
        case "java.util.regex.CICharSet": jur_CICharSet.$clinit(); return jur_CICharSet;
        case "java.util.regex.SupplCharSet": jur_SupplCharSet.$clinit(); return jur_SupplCharSet;
        case "org.ode4j.ode.internal.gimpact.GimAABBSet$1": oooig_GimAABBSet$1.$clinit(); return oooig_GimAABBSet$1;
        case "org.ode4j.ode.internal.gimpact.GimAABBSet$2": oooig_GimAABBSet$2.$clinit(); return oooig_GimAABBSet$2;
        case "org.ksdfv.thelema.test.phys.BoxShapeTest": okttp_BoxShapeTest.$clinit(); return okttp_BoxShapeTest;
        case "org.ksdfv.thelema.math.IVec4$Companion": oktm_IVec4$Companion.$clinit(); return oktm_IVec4$Companion;
        case "java.util.regex.AbstractLineTerminator": jur_AbstractLineTerminator.$clinit(); return jur_AbstractLineTerminator;
        case "kotlin.random.Random$Companion": kr_Random$Companion.$clinit(); return kr_Random$Companion;
        case "org.ksdfv.thelema.test.mesh.InstancingTest$testMain$2": okttm_InstancingTest$testMain$2.$clinit(); return okttm_InstancingTest$testMain$2;
        case "kotlin.text.StringsKt__StringsKt": kt_StringsKt__StringsKt.$clinit(); return kt_StringsKt__StringsKt;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$glCalls$1": oktgg_GLTF$glCalls$1.$clinit(); return oktgg_GLTF$glCalls$1;
        case "org.ode4j.ode.internal.processmem.DxIslandsProcessingCallContext$1": oooip_DxIslandsProcessingCallContext$1.$clinit(); return oooip_DxIslandsProcessingCallContext$1;
        case "org.ode4j.ode.internal.processmem.DxIslandsProcessingCallContext$2": oooip_DxIslandsProcessingCallContext$2.$clinit(); return oooip_DxIslandsProcessingCallContext$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTFMesh$read$2": oktgg_GLTFMesh$read$2.$clinit(); return oktgg_GLTFMesh$read$2;
        case "org.ode4j.ode.internal.processmem.DxIslandsProcessingCallContext$3": oooip_DxIslandsProcessingCallContext$3.$clinit(); return oooip_DxIslandsProcessingCallContext$3;
        case "org.ksdfv.thelema.g3d.gltf.GLTFMesh$read$1": oktgg_GLTFMesh$read$1.$clinit(); return oktgg_GLTFMesh$read$1;
        case "java.util.regex.AbstractCharClass$LazyJavaMirrored$1": jur_AbstractCharClass$LazyJavaMirrored$1.$clinit(); return jur_AbstractCharClass$LazyJavaMirrored$1;
        case "org.ode4j.ode.internal.CollideTrimeshBox$sTrimeshBoxColliderData": oooi_CollideTrimeshBox$sTrimeshBoxColliderData.$clinit(); return oooi_CollideTrimeshBox$sTrimeshBoxColliderData;
        case "org.ode4j.ode.internal.gimpact.GimDynArray": oooig_GimDynArray.$clinit(); return oooig_GimDynArray;
        case "java.util.regex.UEOLSet": jur_UEOLSet.$clinit(); return jur_UEOLSet;
        case "org.ksdfv.thelema.g3d.gltf.GLTFTexture": oktgg_GLTFTexture.$clinit(); return oktgg_GLTFTexture;
        case "java.util.regex.UCICharSet": jur_UCICharSet.$clinit(); return jur_UCICharSet;
        case "org.ksdfv.thelema.g3d.IMaterial": oktg_IMaterial.$clinit(); return oktg_IMaterial;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$6$1": oktgg_GLTF$read$6$1.$clinit(); return oktgg_GLTF$read$6$1;
        case "org.ksdfv.thelema.shader.glsl.OutputNode": oktsg_OutputNode.$clinit(); return oktsg_OutputNode;
        case "org.ksdfv.thelema.g3d.gltf.GLTFScene$read$3$1": oktgg_GLTFScene$read$3$1.$clinit(); return oktgg_GLTFScene$read$3$1;
        case "org.teavm.jso.typedarrays.Uint16Array": otjt_Uint16Array.$clinit(); return otjt_Uint16Array;
        case "org.ksdfv.thelema.audio.IAL": okta_IAL.$clinit(); return okta_IAL;
        case "org.teavm.jso.dom.events.FocusEventTarget": otjde_FocusEventTarget.$clinit(); return otjde_FocusEventTarget;
        case "org.ode4j.ode.DColliderFn": ooo_DColliderFn.$clinit(); return ooo_DColliderFn;
        case "org.ksdfv.thelema.img.IImage": okti_IImage.$clinit(); return okti_IImage;
        case "java.util.regex.FSet$PossessiveFSet": jur_FSet$PossessiveFSet.$clinit(); return jur_FSet$PossessiveFSet;
        case "java.lang.RuntimeException": jl_RuntimeException.$clinit(); return jl_RuntimeException;
        case "java.util.regex.PosCompositeGroupQuantifierSet": jur_PosCompositeGroupQuantifierSet.$clinit(); return jur_PosCompositeGroupQuantifierSet;
        case "org.ksdfv.thelema.test.shaders.MotionBlurBaseTest": oktts_MotionBlurBaseTest.$clinit(); return oktts_MotionBlurBaseTest;
        case "org.ksdfv.thelema.g3d.light.DirectionalLight$renderShadowMaps$1": oktgl_DirectionalLight$renderShadowMaps$1.$clinit(); return oktgl_DirectionalLight$renderShadowMaps$1;
        case "org.ksdfv.thelema.shader.post.Bloom$render$3": oktsp_Bloom$render$3.$clinit(); return oktsp_Bloom$render$3;
        case "org.ode4j.ode.internal.gimpact.GimTriCollision$GIM_TRIANGLE_CONTACT_DATA": oooig_GimTriCollision$GIM_TRIANGLE_CONTACT_DATA.$clinit(); return oooig_GimTriCollision$GIM_TRIANGLE_CONTACT_DATA;
        case "org.ksdfv.thelema.shader.post.Bloom$render$2": oktsp_Bloom$render$2.$clinit(); return oktsp_Bloom$render$2;
        case "org.ksdfv.thelema.shader.post.Bloom$render$1": oktsp_Bloom$render$1.$clinit(); return oktsp_Bloom$render$1;
        case "org.ksdfv.thelema.shader.post.FXAA$render$1": oktsp_FXAA$render$1.$clinit(); return oktsp_FXAA$render$1;
        case "org.ode4j.ode.internal.DxGeom": oooi_DxGeom.$clinit(); return oooi_DxGeom;
        case "kotlin.sequences.TransformingSequence": ks_TransformingSequence.$clinit(); return ks_TransformingSequence;
        case "java.util.regex.AbstractCharClass$LazyJavaDigit$1": jur_AbstractCharClass$LazyJavaDigit$1.$clinit(); return jur_AbstractCharClass$LazyJavaDigit$1;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFArrayElement": oktgg_IGLTFArrayElement.$clinit(); return oktgg_IGLTFArrayElement;
        case "org.ksdfv.thelema.test.shaders.ShadowMappingBaseTest$testMain$2$1": oktts_ShadowMappingBaseTest$testMain$2$1.$clinit(); return oktts_ShadowMappingBaseTest$testMain$2$1;
        case "org.ksdfv.thelema.teavm.TvmGL$RenderBufferWrap": oktt_TvmGL$RenderBufferWrap.$clinit(); return oktt_TvmGL$RenderBufferWrap;
        case "kotlin.Pair": k_Pair.$clinit(); return k_Pair;
        case "java.lang.NullPointerException": jl_NullPointerException.$clinit(); return jl_NullPointerException;
        case "org.ode4j.ode.internal.libccd.CCDSupport": oooil_CCDSupport.$clinit(); return oooil_CCDSupport;
        case "java.util.regex.AbstractCharClass$LazyJavaSpaceChar$1": jur_AbstractCharClass$LazyJavaSpaceChar$1.$clinit(); return jur_AbstractCharClass$LazyJavaSpaceChar$1;
        case "java.util.regex.LeafQuantifierSet": jur_LeafQuantifierSet.$clinit(); return jur_LeafQuantifierSet;
        case "org.ksdfv.thelema.test.sound.SoundWavTest": oktts_SoundWavTest.$clinit(); return oktts_SoundWavTest;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$DefaultImpls": oktgg_IGLTFMaterial$DefaultImpls.$clinit(); return oktgg_IGLTFMaterial$DefaultImpls;
        case "org.ksdfv.thelema.test.mesh.MeshCubeTest$testMain$4": okttm_MeshCubeTest$testMain$4.$clinit(); return okttm_MeshCubeTest$testMain$4;
        case "java.lang.Math": jl_Math.$clinit(); return jl_Math;
        case "org.ode4j.ode.internal.CollideTrimeshCCylinder$1": oooi_CollideTrimeshCCylinder$1.$clinit(); return oooi_CollideTrimeshCCylinder$1;
        case "org.ksdfv.thelema.g3d.IScene$DefaultImpls": oktg_IScene$DefaultImpls.$clinit(); return oktg_IScene$DefaultImpls;
        case "org.ode4j.ode.DPlane": ooo_DPlane.$clinit(); return ooo_DPlane;
        case "java.util.regex.AbstractCharClass$LazyJavaUnicodeIdentifierPart": jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart.$clinit(); return jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart;
        case "org.ode4j.ode.DGeom$DNearCallback": ooo_DGeom$DNearCallback.$clinit(); return ooo_DGeom$DNearCallback;
        case "org.ksdfv.thelema.test.shaders.BloomTest$testMain$1": oktts_BloomTest$testMain$1.$clinit(); return oktts_BloomTest$testMain$1;
        case "org.ksdfv.thelema.mesh.build.FrustumMeshBuilder$Companion": oktmb_FrustumMeshBuilder$Companion.$clinit(); return oktmb_FrustumMeshBuilder$Companion;
        case "kotlin.text.StringsKt__StringNumberConversionsKt": kt_StringsKt__StringNumberConversionsKt.$clinit(); return kt_StringsKt__StringNumberConversionsKt;
        case "org.ksdfv.thelema.test.phys.TrimeshShapeTest$testMain$plane$1": okttp_TrimeshShapeTest$testMain$plane$1.$clinit(); return okttp_TrimeshShapeTest$testMain$plane$1;
        case "java.util.AbstractSequentialList": ju_AbstractSequentialList.$clinit(); return ju_AbstractSequentialList;
        case "java.util.regex.AbstractCharClass$LazyJavaDefined": jur_AbstractCharClass$LazyJavaDefined.$clinit(); return jur_AbstractCharClass$LazyJavaDefined;
        case "org.ksdfv.thelema.g3d.gltf.GLTFTexture$read$2$1$1": oktgg_GLTFTexture$read$2$1$1.$clinit(); return oktgg_GLTFTexture$read$2$1$1;
        case "java.io.Writer": ji_Writer.$clinit(); return ji_Writer;
        case "org.ode4j.ode.internal.CollideCylinderSphere": oooi_CollideCylinderSphere.$clinit(); return oooi_CollideCylinderSphere;
        case "org.ode4j.ode.internal.processmem.DxWorldProcessIslandsInfo$dmemestimate_fn_t": oooip_DxWorldProcessIslandsInfo$dmemestimate_fn_t.$clinit(); return oooip_DxWorldProcessIslandsInfo$dmemestimate_fn_t;
        case "java.util.regex.PosAltGroupQuantifierSet": jur_PosAltGroupQuantifierSet.$clinit(); return jur_PosAltGroupQuantifierSet;
        case "org.ksdfv.thelema.g3d.IScene$Companion$Build$1": oktg_IScene$Companion$Build$1.$clinit(); return oktg_IScene$Companion$Build$1;
        case "java.util.Deque": ju_Deque.$clinit(); return ju_Deque;
        case "org.ode4j.ode.internal.FastLDLT": oooi_FastLDLT.$clinit(); return oooi_FastLDLT;
        case "org.ksdfv.thelema.g3d.anim.Vec3Track": oktga_Vec3Track.$clinit(); return oktga_Vec3Track;
        case "org.ode4j.ode.DJoint$DJointFeedback": ooo_DJoint$DJointFeedback.$clinit(); return ooo_DJoint$DJointFeedback;
        case "org.ode4j.ode.internal.CollisionLibccd$ccd_cyl_t": oooi_CollisionLibccd$ccd_cyl_t.$clinit(); return oooi_CollisionLibccd$ccd_cyl_t;
        case "org.ode4j.ode.internal.CollideSpaceGeom$SpaceGeomColliderData": oooi_CollideSpaceGeom$SpaceGeomColliderData.$clinit(); return oooi_CollideSpaceGeom$SpaceGeomColliderData;
        case "org.ksdfv.thelema.math.Mat4": oktm_Mat4.$clinit(); return oktm_Mat4;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$12$1": oktgg_GLTF$read$12$1.$clinit(); return oktgg_GLTF$read$12$1;
        case "org.ksdfv.thelema.test.shaders.glsl.CascadedShadowMappingTest$testMain$1$2": okttsg_CascadedShadowMappingTest$testMain$1$2.$clinit(); return okttsg_CascadedShadowMappingTest$testMain$1$2;
        case "java.nio.charset.UnmappableCharacterException": jnc_UnmappableCharacterException.$clinit(); return jnc_UnmappableCharacterException;
        case "org.ode4j.ode.internal.gimpact.GimDynArrayInt": oooig_GimDynArrayInt.$clinit(); return oooig_GimDynArrayInt;
        case "org.ode4j.ode.internal.DxWorld$DWorldStepMemoryFunctionsInfo": oooi_DxWorld$DWorldStepMemoryFunctionsInfo.$clinit(); return oooi_DxWorld$DWorldStepMemoryFunctionsInfo;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAnimationSampler$read$1": oktgg_GLTFAnimationSampler$read$1.$clinit(); return oktgg_GLTFAnimationSampler$read$1;
        case "java.util.regex.UCIDecomposedCharSet": jur_UCIDecomposedCharSet.$clinit(); return jur_UCIDecomposedCharSet;
        case "org.ksdfv.thelema.fs.IFile$DefaultImpls": oktf_IFile$DefaultImpls.$clinit(); return oktf_IFile$DefaultImpls;
        case "org.ksdfv.thelema.texture.SimpleFrameBuffer": oktt_SimpleFrameBuffer.$clinit(); return oktt_SimpleFrameBuffer;
        case "java.lang.IndexOutOfBoundsException": jl_IndexOutOfBoundsException.$clinit(); return jl_IndexOutOfBoundsException;
        case "org.ode4j.ode.threading.task.TaskGroup": ooott_TaskGroup.$clinit(); return ooott_TaskGroup;
        case "kotlin.jvm.internal.markers.KMappedMarker": kjim_KMappedMarker.$clinit(); return kjim_KMappedMarker;
        case "org.ksdfv.thelema.test.shaders.SSAOBaseTest$testMain$1$1": oktts_SSAOBaseTest$testMain$1$1.$clinit(); return oktts_SSAOBaseTest$testMain$1$1;
        case "org.ksdfv.thelema.teavm.TvmKB": oktt_TvmKB.$clinit(); return oktt_TvmKB;
        case "java.lang.Long": jl_Long.$clinit(); return jl_Long;
        case "java.util.regex.SequenceSet$IntHash": jur_SequenceSet$IntHash.$clinit(); return jur_SequenceSet$IntHash;
        case "org.ksdfv.thelema.test.shaders.FXAATest$testMain$1": oktts_FXAATest$testMain$1.$clinit(); return oktts_FXAATest$testMain$1;
        case "java.lang.ArithmeticException": jl_ArithmeticException.$clinit(); return jl_ArithmeticException;
        case "org.ode4j.ode.internal.CollideTrimeshPlane$1": oooi_CollideTrimeshPlane$1.$clinit(); return oooi_CollideTrimeshPlane$1;
        case "org.ode4j.ode.internal.DxConvex$CollideSphereConvex": oooi_DxConvex$CollideSphereConvex.$clinit(); return oooi_DxConvex$CollideSphereConvex;
        case "java.util.regex.AbstractCharClass$LazyJavaLetterOrDigit$1": jur_AbstractCharClass$LazyJavaLetterOrDigit$1.$clinit(); return jur_AbstractCharClass$LazyJavaLetterOrDigit$1;
        case "java.util.regex.CharClass$18": jur_CharClass$18.$clinit(); return jur_CharClass$18;
        case "java.util.regex.PossessiveGroupQuantifierSet": jur_PossessiveGroupQuantifierSet.$clinit(); return jur_PossessiveGroupQuantifierSet;
        case "java.util.regex.CharClass$13": jur_CharClass$13.$clinit(); return jur_CharClass$13;
        case "java.util.regex.CharClass$12": jur_CharClass$12.$clinit(); return jur_CharClass$12;
        case "java.util.regex.CharClass$11": jur_CharClass$11.$clinit(); return jur_CharClass$11;
        case "java.util.regex.CharClass$10": jur_CharClass$10.$clinit(); return jur_CharClass$10;
        case "java.util.regex.CharClass$17": jur_CharClass$17.$clinit(); return jur_CharClass$17;
        case "org.ksdfv.thelema.g3d.gltf.GLTFScene$read$1": oktgg_GLTFScene$read$1.$clinit(); return oktgg_GLTFScene$read$1;
        case "java.util.regex.CharClass$16": jur_CharClass$16.$clinit(); return jur_CharClass$16;
        case "org.ksdfv.thelema.math.IVec": oktm_IVec.$clinit(); return oktm_IVec;
        case "java.util.regex.CharClass$15": jur_CharClass$15.$clinit(); return jur_CharClass$15;
        case "java.util.regex.CharClass$14": jur_CharClass$14.$clinit(); return jur_CharClass$14;
        case "java.lang.StringBuilder": jl_StringBuilder.$clinit(); return jl_StringBuilder;
        case "org.ode4j.ode.internal.Objects_H$DxPosR": oooi_Objects_H$DxPosR.$clinit(); return oooi_Objects_H$DxPosR;
        case "org.ksdfv.thelema.g3d.gltf.GLTFScene$read$3": oktgg_GLTFScene$read$3.$clinit(); return oktgg_GLTFScene$read$3;
        case "org.ode4j.ode.internal.DxSpace$3$1": oooi_DxSpace$3$1.$clinit(); return oooi_DxSpace$3$1;
        case "kotlin.Function": k_Function.$clinit(); return k_Function;
        case "org.ode4j.ode.internal.gimpact.GimRadixSort$GIM_RSORT_TOKEN": oooig_GimRadixSort$GIM_RSORT_TOKEN.$clinit(); return oooig_GimRadixSort$GIM_RSORT_TOKEN;
        case "org.ode4j.ode.internal.DxConvex$ConvexConvexSATOutput": oooi_DxConvex$ConvexConvexSATOutput.$clinit(); return oooi_DxConvex$ConvexConvexSATOutput;
        case "org.ksdfv.thelema.test.FrameBufferTest": oktt_FrameBufferTest.$clinit(); return oktt_FrameBufferTest;
        case "kotlin.collections.ArraysKt___ArraysKt": kc_ArraysKt___ArraysKt.$clinit(); return kc_ArraysKt___ArraysKt;
        case "org.ksdfv.thelema.teavm.TvmGL$vertexArrays$1": oktt_TvmGL$vertexArrays$1.$clinit(); return oktt_TvmGL$vertexArrays$1;
        case "org.ksdfv.thelema.g3d.Armature": oktg_Armature.$clinit(); return oktg_Armature;
        case "java.lang.IncompatibleClassChangeError": jl_IncompatibleClassChangeError.$clinit(); return jl_IncompatibleClassChangeError;
        case "java.util.regex.AbstractCharClass$LazyASCII": jur_AbstractCharClass$LazyASCII.$clinit(); return jur_AbstractCharClass$LazyASCII;
        case "org.ksdfv.thelema.teavm.TvmSound$1$1": oktt_TvmSound$1$1.$clinit(); return oktt_TvmSound$1$1;
        case "org.ode4j.ode.internal.DxAbstractHeightfield": oooi_DxAbstractHeightfield.$clinit(); return oooi_DxAbstractHeightfield;
        case "org.ode4j.ode.internal.DxSphere": oooi_DxSphere.$clinit(); return oooi_DxSphere;
        case "java.util.regex.Quantifier": jur_Quantifier.$clinit(); return jur_Quantifier;
        case "kotlin.ranges.IntProgression$Companion": kr_IntProgression$Companion.$clinit(); return kr_IntProgression$Companion;
        case "org.ode4j.ode.OdeHelper": ooo_OdeHelper.$clinit(); return ooo_OdeHelper;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSampler": oktgg_GLTFSampler.$clinit(); return oktgg_GLTFSampler;
        case "org.ode4j.ode.internal.cpp4j.Cstdarg": oooic_Cstdarg.$clinit(); return oooic_Cstdarg;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAnimationSampler": oktgg_GLTFAnimationSampler.$clinit(); return oktgg_GLTFAnimationSampler;
        case "org.ode4j.ode.internal.CollideCylinderTrimesh$sCylinderTrimeshColliderData": oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData.$clinit(); return oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData;
        case "org.ksdfv.thelema.g3d.Scene$objectSorter$1": oktg_Scene$objectSorter$1.$clinit(); return oktg_Scene$objectSorter$1;
        case "org.ksdfv.thelema.teavm.TvmFS": oktt_TvmFS.$clinit(); return oktt_TvmFS;
        case "kotlin.text.DelimitedRangesSequence$iterator$1": kt_DelimitedRangesSequence$iterator$1.$clinit(); return kt_DelimitedRangesSequence$iterator$1;
        case "org.ode4j.ode.internal.gimpact.GimGeometry$vec3f": oooig_GimGeometry$vec3f.$clinit(); return oooig_GimGeometry$vec3f;
        case "java.util.regex.ReluctantQuantifierSet": jur_ReluctantQuantifierSet.$clinit(); return jur_ReluctantQuantifierSet;
        case "org.ksdfv.thelema.teavm.TvmGL": oktt_TvmGL.$clinit(); return oktt_TvmGL;
        case "org.ode4j.ode.DContactBuffer": ooo_DContactBuffer.$clinit(); return ooo_DContactBuffer;
        case "java.lang.ThreadLocal": jl_ThreadLocal.$clinit(); return jl_ThreadLocal;
        case "org.ksdfv.thelema.g3d.gltf.GLTFCamera$read$3": oktgg_GLTFCamera$read$3.$clinit(); return oktgg_GLTFCamera$read$3;
        case "org.ksdfv.thelema.g3d.gltf.GLTFCamera$read$1": oktgg_GLTFCamera$read$1.$clinit(); return oktgg_GLTFCamera$read$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFCamera$read$2": oktgg_GLTFCamera$read$2.$clinit(); return oktgg_GLTFCamera$read$2;
        case "org.ksdfv.thelema.shader.glsl.OutputNode$Companion": oktsg_OutputNode$Companion.$clinit(); return oktsg_OutputNode$Companion;
        case "org.ksdfv.thelema.utils.IAsyncList": oktu_IAsyncList.$clinit(); return oktu_IAsyncList;
        case "java.util.regex.AtomicJointSet": jur_AtomicJointSet.$clinit(); return jur_AtomicJointSet;
        case "org.ksdfv.thelema.g3d.gltf.GLTFCamera$read$2$3": oktgg_GLTFCamera$read$2$3.$clinit(); return oktgg_GLTFCamera$read$2$3;
        case "org.ode4j.ode.internal.gimpact.GimGeometry$vec4f": oooig_GimGeometry$vec4f.$clinit(); return oooig_GimGeometry$vec4f;
        case "java.util.regex.EOISet": jur_EOISet.$clinit(); return jur_EOISet;
        case "org.ksdfv.thelema.g3d.gltf.GLTFCamera$read$2$2": oktgg_GLTFCamera$read$2$2.$clinit(); return oktgg_GLTFCamera$read$2$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTFCamera$read$2$1": oktgg_GLTFCamera$read$2$1.$clinit(); return oktgg_GLTFCamera$read$2$1;
        case "java.util.MapEntry": ju_MapEntry.$clinit(); return ju_MapEntry;
        case "org.ksdfv.thelema.teavm.TvmDATA": oktt_TvmDATA.$clinit(); return oktt_TvmDATA;
        case "kotlin.text.Regex$Companion": kt_Regex$Companion.$clinit(); return kt_Regex$Companion;
        case "java.io.FilterInputStream": ji_FilterInputStream.$clinit(); return ji_FilterInputStream;
        case "java.nio.charset.BufferUnderflowException": jnc_BufferUnderflowException.$clinit(); return jnc_BufferUnderflowException;
        case "java.lang.Appendable": jl_Appendable.$clinit(); return jl_Appendable;
        case "org.ode4j.ode.internal.CollideTrimeshTrimesh": oooi_CollideTrimeshTrimesh.$clinit(); return oooi_CollideTrimeshTrimesh;
        case "org.ksdfv.thelema.g3d.gltf.GLTF": oktgg_GLTF.$clinit(); return oktgg_GLTF;
        case "org.ksdfv.thelema.json.IJSON": oktj_IJSON.$clinit(); return oktj_IJSON;
        case "org.ksdfv.thelema.shader.glsl.VertexNode": oktsg_VertexNode.$clinit(); return oktsg_VertexNode;
        case "java.lang.Object": jl_Object.$clinit(); return jl_Object;
        case "org.ksdfv.thelema.g3d.gltf.GLTFArray": oktgg_GLTFArray.$clinit(); return oktgg_GLTFArray;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAnimation$read$1$1": oktgg_GLTFAnimation$read$1$1.$clinit(); return oktgg_GLTFAnimation$read$1$1;
        case "org.ode4j.ode.DMassC": ooo_DMassC.$clinit(); return ooo_DMassC;
        case "org.ksdfv.thelema.teavm.TvmGL$GLObject": oktt_TvmGL$GLObject.$clinit(); return oktt_TvmGL$GLObject;
        case "org.ode4j.ode.internal.DxCapsule$CollideCapsuleSphere": oooi_DxCapsule$CollideCapsuleSphere.$clinit(); return oooi_DxCapsule$CollideCapsuleSphere;
        case "java.util.regex.LeafSet": jur_LeafSet.$clinit(); return jur_LeafSet;
        case "java.util.regex.JointSet": jur_JointSet.$clinit(); return jur_JointSet;
        case "org.ksdfv.thelema.test.phys.TrimeshShapeTest$testMain$1": okttp_TrimeshShapeTest$testMain$1.$clinit(); return okttp_TrimeshShapeTest$testMain$1;
        case "java.util.LinkedList$Entry": ju_LinkedList$Entry.$clinit(); return ju_LinkedList$Entry;
        case "org.ksdfv.thelema.mesh.Mesh": oktm_Mesh.$clinit(); return oktm_Mesh;
        case "org.ksdfv.thelema.shader.glsl.ShaderNode$Companion": oktsg_ShaderNode$Companion.$clinit(); return oktsg_ShaderNode$Companion;
        case "org.ksdfv.thelema.mesh.IVertexBuffer$Companion$Build$1": oktm_IVertexBuffer$Companion$Build$1.$clinit(); return oktm_IVertexBuffer$Companion$Build$1;
        case "org.ksdfv.thelema.audio.AL": okta_AL.$clinit(); return okta_AL;
        case "org.ode4j.ode.internal.gimpact.GimTrimeshCapsuleCollision$GIM_CAPSULE_DATA": oooig_GimTrimeshCapsuleCollision$GIM_CAPSULE_DATA.$clinit(); return oooig_GimTrimeshCapsuleCollision$GIM_CAPSULE_DATA;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$6": oktgg_GLTFNode$read$6.$clinit(); return oktgg_GLTFNode$read$6;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$7": oktgg_GLTFNode$read$7.$clinit(); return oktgg_GLTFNode$read$7;
        case "java.util.regex.HangulDecomposedCharSet": jur_HangulDecomposedCharSet.$clinit(); return jur_HangulDecomposedCharSet;
        case "org.ksdfv.thelema.utils.AsyncArrayList$Companion": oktu_AsyncArrayList$Companion.$clinit(); return oktu_AsyncArrayList$Companion;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$4": oktgg_GLTFNode$read$4.$clinit(); return oktgg_GLTFNode$read$4;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$5": oktgg_GLTFNode$read$5.$clinit(); return oktgg_GLTFNode$read$5;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$2": oktgg_GLTFNode$read$2.$clinit(); return oktgg_GLTFNode$read$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$3": oktgg_GLTFNode$read$3.$clinit(); return oktgg_GLTFNode$read$3;
        case "org.ksdfv.thelema.phys.ode4j.OdePhys": oktpo_OdePhys.$clinit(); return oktpo_OdePhys;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$1": oktgg_GLTFNode$read$1.$clinit(); return oktgg_GLTFNode$read$1;
        case "org.ksdfv.thelema.g3d.cam.ICamera$Companion": oktgc_ICamera$Companion.$clinit(); return oktgc_ICamera$Companion;
        case "java.util.Set": ju_Set.$clinit(); return ju_Set;
        case "org.ode4j.math.DMatrix3$DVector3ColView": oom_DMatrix3$DVector3ColView.$clinit(); return oom_DMatrix3$DVector3ColView;
        case "kotlin.jvm.internal.Intrinsics": kji_Intrinsics.$clinit(); return kji_Intrinsics;
        case "org.ksdfv.thelema.shader.glsl.TextureNode": oktsg_TextureNode.$clinit(); return oktsg_TextureNode;
        case "org.ode4j.ode.internal.DxQuickStep$dxQuickStepperStage0Outputs": oooi_DxQuickStep$dxQuickStepperStage0Outputs.$clinit(); return oooi_DxQuickStep$dxQuickStepperStage0Outputs;
        case "org.ode4j.ode.internal.processmem.DxSingleIslandCallContext": oooip_DxSingleIslandCallContext.$clinit(); return oooip_DxSingleIslandCallContext;
        case "org.ksdfv.thelema.phys.ode4j.OdeSphereShape": oktpo_OdeSphereShape.$clinit(); return oktpo_OdeSphereShape;
        case "java.math.Multiplication": jm_Multiplication.$clinit(); return jm_Multiplication;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$8": oktgg_GLTFNode$read$8.$clinit(); return oktgg_GLTFNode$read$8;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$9": oktgg_GLTFNode$read$9.$clinit(); return oktgg_GLTFNode$read$9;
        case "org.ode4j.ode.internal.DxRay$CollideRayCapsule": oooi_DxRay$CollideRayCapsule.$clinit(); return oooi_DxRay$CollideRayCapsule;
        case "java.util.LinkedHashMap$ValueIterator": ju_LinkedHashMap$ValueIterator.$clinit(); return ju_LinkedHashMap$ValueIterator;
        case "org.ode4j.ode.DCylinder": ooo_DCylinder.$clinit(); return ooo_DCylinder;
        case "org.ksdfv.thelema.phys.ode4j.OdeCylinderShape": oktpo_OdeCylinderShape.$clinit(); return oktpo_OdeCylinderShape;
        case "org.ksdfv.thelema.test.GLTFLoaderAnimTest": oktt_GLTFLoaderAnimTest.$clinit(); return oktt_GLTFLoaderAnimTest;
        case "org.ksdfv.thelema.g3d.gltf.GLTFImage$read$5$1": oktgg_GLTFImage$read$5$1.$clinit(); return oktgg_GLTFImage$read$5$1;
        case "org.ksdfv.thelema.test.phys.SphereShapeTest": okttp_SphereShapeTest.$clinit(); return okttp_SphereShapeTest;
        case "java.util.regex.IntHash": jur_IntHash.$clinit(); return jur_IntHash;
        case "org.ksdfv.thelema.mesh.IIndexBufferObject": oktm_IIndexBufferObject.$clinit(); return oktm_IIndexBufferObject;
        case "java.util.regex.ReluctantAltQuantifierSet": jur_ReluctantAltQuantifierSet.$clinit(); return jur_ReluctantAltQuantifierSet;
        case "java.lang.UnsupportedOperationException": jl_UnsupportedOperationException.$clinit(); return jl_UnsupportedOperationException;
        case "com.github.cliftonlabs.json_simple.JsonException": cgcj_JsonException.$clinit(); return cgcj_JsonException;
        case "java.lang.NumberFormatException": jl_NumberFormatException.$clinit(); return jl_NumberFormatException;
        case "org.ode4j.ode.internal.CollideBoxPlane": oooi_CollideBoxPlane.$clinit(); return oooi_CollideBoxPlane;
        case "org.ksdfv.thelema.teavm.TvmGL$TextureWrap": oktt_TvmGL$TextureWrap.$clinit(); return oktt_TvmGL$TextureWrap;
        case "java.lang.Comparable": jl_Comparable.$clinit(); return jl_Comparable;
        case "java.util.regex.IntArrHash": jur_IntArrHash.$clinit(); return jur_IntArrHash;
        case "org.ksdfv.thelema.shader.glsl.GLSLVec4Inline": oktsg_GLSLVec4Inline.$clinit(); return oktsg_GLSLVec4Inline;
        case "org.ksdfv.thelema.teavm.TvmAL": oktt_TvmAL.$clinit(); return oktt_TvmAL;
        case "org.ode4j.ode.internal.gimpact.GimAABBSet$PushPairMacro": oooig_GimAABBSet$PushPairMacro.$clinit(); return oooig_GimAABBSet$PushPairMacro;
        case "org.ksdfv.thelema.g3d.gltf.GLTFBufferView": oktgg_GLTFBufferView.$clinit(); return oktgg_GLTFBufferView;
        case "java.util.regex.MatchResult": jur_MatchResult.$clinit(); return jur_MatchResult;
        case "org.ksdfv.thelema.mesh.IMesh$Companion": oktm_IMesh$Companion.$clinit(); return oktm_IMesh$Companion;
        case "kotlin.collections.ArraysKt__ArraysJVMKt": kc_ArraysKt__ArraysJVMKt.$clinit(); return kc_ArraysKt__ArraysJVMKt;
        case "org.teavm.platform.plugin.AsyncCallbackWrapper": otpp_AsyncCallbackWrapper.$clinit(); return otpp_AsyncCallbackWrapper;
        case "java.lang.Enum": jl_Enum.$clinit(); return jl_Enum;
        case "java.util.LinkedHashMap$AbstractMapIterator": ju_LinkedHashMap$AbstractMapIterator.$clinit(); return ju_LinkedHashMap$AbstractMapIterator;
        case "org.ksdfv.thelema.img.IImg$load$1": okti_IImg$load$1.$clinit(); return okti_IImg$load$1;
        case "org.ksdfv.thelema.phys.ode4j.BodyContactPair": oktpo_BodyContactPair.$clinit(); return oktpo_BodyContactPair;
        case "org.ksdfv.thelema.test.shaders.SSAOBaseTest$testMain$1": oktts_SSAOBaseTest$testMain$1.$clinit(); return oktts_SSAOBaseTest$testMain$1;
        case "kotlin.ranges.IntRange": kr_IntRange.$clinit(); return kr_IntRange;
        case "org.ode4j.ode.internal.cpp4j.java.IntArray": oooicj_IntArray.$clinit(); return oooicj_IntArray;
        case "org.ode4j.ode.internal.cpp4j.C_All": oooic_C_All.$clinit(); return oooic_C_All;
        case "org.ode4j.ode.DHeightfieldData": ooo_DHeightfieldData.$clinit(); return ooo_DHeightfieldData;
        case "org.ksdfv.thelema.g3d.World": oktg_World.$clinit(); return oktg_World;
        case "org.ksdfv.thelema.test.phys.BoxShapeTest$testMain$1": okttp_BoxShapeTest$testMain$1.$clinit(); return okttp_BoxShapeTest$testMain$1;
        case "org.ode4j.ode.internal.DxSphere$CollideSphereSphere": oooi_DxSphere$CollideSphereSphere.$clinit(); return oooi_DxSphere$CollideSphereSphere;
        case "org.ksdfv.thelema.g3d.gltf.IGLTF": oktgg_IGLTF.$clinit(); return oktgg_IGLTF;
        case "org.ode4j.ode.internal.CollisionLibccd$CollideConvexCapsuleCCD": oooi_CollisionLibccd$CollideConvexCapsuleCCD.$clinit(); return oooi_CollisionLibccd$CollideConvexCapsuleCCD;
        case "org.ksdfv.thelema.phys.ode4j.IOdeGeom$DefaultImpls": oktpo_IOdeGeom$DefaultImpls.$clinit(); return oktpo_IOdeGeom$DefaultImpls;
        case "org.ode4j.ode.internal.cpp4j.Cstdio": oooic_Cstdio.$clinit(); return oooic_Cstdio;
        case "org.teavm.jso.dom.events.EventListener": otjde_EventListener.$clinit(); return otjde_EventListener;
        case "org.ode4j.ode.internal.DxPlane": oooi_DxPlane.$clinit(); return oooi_DxPlane;
        case "java.util.regex.UMultiLineEOLSet": jur_UMultiLineEOLSet.$clinit(); return jur_UMultiLineEOLSet;
        case "kotlin.jvm.internal.Ref$FloatRef": kji_Ref$FloatRef.$clinit(); return kji_Ref$FloatRef;
        case "org.ksdfv.thelema.shader.post.SSAO$Companion": oktsp_SSAO$Companion.$clinit(); return oktsp_SSAO$Companion;
        case "org.ode4j.ode.DJointGroup": ooo_DJointGroup.$clinit(); return ooo_DJointGroup;
        case "org.ode4j.ode.DContact": ooo_DContact.$clinit(); return ooo_DContact;
        case "java.util.Hashtable": ju_Hashtable.$clinit(); return ju_Hashtable;
        case "org.ode4j.ode.internal.gimpact.GimTrimesh$1": oooig_GimTrimesh$1.$clinit(); return oooig_GimTrimesh$1;
        case "org.ksdfv.thelema.test.shaders.glsl.GBufferTest$testMain$1$2": okttsg_GBufferTest$testMain$1$2.$clinit(); return okttsg_GBufferTest$testMain$1$2;
        case "org.ksdfv.thelema.test.shaders.glsl.GBufferTest$testMain$1$1": okttsg_GBufferTest$testMain$1$1.$clinit(); return okttsg_GBufferTest$testMain$1$1;
        case "org.ksdfv.thelema.test.shaders.glsl.GBufferTest$testMain$1$4": okttsg_GBufferTest$testMain$1$4.$clinit(); return okttsg_GBufferTest$testMain$1$4;
        case "org.ksdfv.thelema.IApp": okt_IApp.$clinit(); return okt_IApp;
        case "org.ksdfv.thelema.test.shaders.glsl.GBufferTest$testMain$1$3": okttsg_GBufferTest$testMain$1$3.$clinit(); return okttsg_GBufferTest$testMain$1$3;
        case "org.ode4j.ode.DJoint": ooo_DJoint.$clinit(); return ooo_DJoint;
        case "org.ksdfv.thelema.test.shaders.glsl.GBufferTest$testMain$1$5": okttsg_GBufferTest$testMain$1$5.$clinit(); return okttsg_GBufferTest$testMain$1$5;
        case "org.ode4j.ode.DSphere": ooo_DSphere.$clinit(); return ooo_DSphere;
        case "java.lang.ConsoleOutputStreamStderr": jl_ConsoleOutputStreamStderr.$clinit(); return jl_ConsoleOutputStreamStderr;
        case "kotlin.text.StringsKt__AppendableKt": kt_StringsKt__AppendableKt.$clinit(); return kt_StringsKt__AppendableKt;
        case "org.ksdfv.thelema.mesh.build.BoxMeshBuilder": oktmb_BoxMeshBuilder.$clinit(); return oktmb_BoxMeshBuilder;
        case "org.ksdfv.thelema.data.IDataArray$DefaultImpls": oktd_IDataArray$DefaultImpls.$clinit(); return oktd_IDataArray$DefaultImpls;
        case "org.teavm.jso.browser.StorageProvider": otjb_StorageProvider.$clinit(); return otjb_StorageProvider;
        case "org.ksdfv.thelema.g3d.node.IDelegateTransformNode$DefaultImpls": oktgn_IDelegateTransformNode$DefaultImpls.$clinit(); return oktgn_IDelegateTransformNode$DefaultImpls;
        case "java.util.regex.AbstractCharClass$LazyCntrl": jur_AbstractCharClass$LazyCntrl.$clinit(); return jur_AbstractCharClass$LazyCntrl;
        case "org.ksdfv.thelema.test.shaders.glsl.EmissionBloomTest$testMain$1": okttsg_EmissionBloomTest$testMain$1.$clinit(); return okttsg_EmissionBloomTest$testMain$1;
        case "kotlin.jvm.internal.markers.KMutableList": kjim_KMutableList.$clinit(); return kjim_KMutableList;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$3$1": oktgg_GLTF$read$3$1.$clinit(); return oktgg_GLTF$read$3$1;
        case "java.nio.charset.impl.BufferedEncoder$Controller": jnci_BufferedEncoder$Controller.$clinit(); return jnci_BufferedEncoder$Controller;
        case "org.ode4j.ode.internal.gimpact.GimRadixSort$GimExchangeMacro": oooig_GimRadixSort$GimExchangeMacro.$clinit(); return oooig_GimRadixSort$GimExchangeMacro;
        case "org.ksdfv.thelema.g3d.IArmature$DefaultImpls": oktg_IArmature$DefaultImpls.$clinit(); return oktg_IArmature$DefaultImpls;
        case "org.ksdfv.thelema.phys.IRigidBody": oktp_IRigidBody.$clinit(); return oktp_IRigidBody;
        case "org.ksdfv.thelema.shader.glsl.IShaderNode": oktsg_IShaderNode.$clinit(); return oktsg_IShaderNode;
        case "org.ksdfv.thelema.input.IKB$DefaultImpls": okti_IKB$DefaultImpls.$clinit(); return okti_IKB$DefaultImpls;
        case "org.ksdfv.thelema.shader.Shader$Companion": okts_Shader$Companion.$clinit(); return okts_Shader$Companion;
        case "org.ode4j.ode.internal.DxQuickStep$IndexError": oooi_DxQuickStep$IndexError.$clinit(); return oooi_DxQuickStep$IndexError;
        case "org.ksdfv.thelema.shader.glsl.AttributeNode": oktsg_AttributeNode.$clinit(); return oktsg_AttributeNode;
        case "java.util.regex.AbstractCharClass$LazyNonWord": jur_AbstractCharClass$LazyNonWord.$clinit(); return jur_AbstractCharClass$LazyNonWord;
        case "java.util.regex.CISequenceSet": jur_CISequenceSet.$clinit(); return jur_CISequenceSet;
        case "java.lang.LinkageError": jl_LinkageError.$clinit(); return jl_LinkageError;
        case "org.ode4j.ode.internal.gimpact.GimBufferArrayInt": oooig_GimBufferArrayInt.$clinit(); return oooig_GimBufferArrayInt;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$5$1": oktgg_IGLTFMaterial$read$5$1.$clinit(); return oktgg_IGLTFMaterial$read$5$1;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$5$2": oktgg_IGLTFMaterial$read$5$2.$clinit(); return oktgg_IGLTFMaterial$read$5$2;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$5$3": oktgg_IGLTFMaterial$read$5$3.$clinit(); return oktgg_IGLTFMaterial$read$5$3;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$5$4": oktgg_IGLTFMaterial$read$5$4.$clinit(); return oktgg_IGLTFMaterial$read$5$4;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$5$5": oktgg_IGLTFMaterial$read$5$5.$clinit(); return oktgg_IGLTFMaterial$read$5$5;
        case "org.ksdfv.thelema.mesh.IMesh$Companion$Build$1": oktm_IMesh$Companion$Build$1.$clinit(); return oktm_IMesh$Companion$Build$1;
        case "org.ksdfv.thelema.test.shaders.glsl.MotionBlurTest": okttsg_MotionBlurTest.$clinit(); return okttsg_MotionBlurTest;
        case "org.ksdfv.thelema.shader.glsl.CameraDataNode": oktsg_CameraDataNode.$clinit(); return oktsg_CameraDataNode;
        case "org.ksdfv.thelema.teavm.TvmGL$frameBuffers$1": oktt_TvmGL$frameBuffers$1.$clinit(); return oktt_TvmGL$frameBuffers$1;
        case "org.ksdfv.thelema.g3d.cam.ICamera$DefaultImpls": oktgc_ICamera$DefaultImpls.$clinit(); return oktgc_ICamera$DefaultImpls;
        case "org.ksdfv.thelema.data.IShortData$DefaultImpls": oktd_IShortData$DefaultImpls.$clinit(); return oktd_IShortData$DefaultImpls;
        case "org.ode4j.ode.internal.libccd.CCDVec3": oooil_CCDVec3.$clinit(); return oooil_CCDVec3;
        case "org.ksdfv.thelema.g3d.gltf.GLTFMesh": oktgg_GLTFMesh.$clinit(); return oktgg_GLTFMesh;
        case "java.nio.Buffer": jn_Buffer.$clinit(); return jn_Buffer;
        case "java.util.regex.AbstractCharClass$LazyJavaUnicodeIdentifierPart$1": jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1.$clinit(); return jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1;
        case "java.util.regex.AbstractCharClass$LazyDigit": jur_AbstractCharClass$LazyDigit.$clinit(); return jur_AbstractCharClass$LazyDigit;
        case "java.util.regex.AbstractCharClass$LazyJavaLetter": jur_AbstractCharClass$LazyJavaLetter.$clinit(); return jur_AbstractCharClass$LazyJavaLetter;
        case "kotlin.collections.CollectionsKt__IteratorsJVMKt": kc_CollectionsKt__IteratorsJVMKt.$clinit(); return kc_CollectionsKt__IteratorsJVMKt;
        case "java.util.regex.AheadFSet": jur_AheadFSet.$clinit(); return jur_AheadFSet;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$10$1": oktgg_GLTFNode$read$10$1.$clinit(); return oktgg_GLTFNode$read$10$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSkin$read$2": oktgg_GLTFSkin$read$2.$clinit(); return oktgg_GLTFSkin$read$2;
        case "org.ksdfv.thelema.utils.ILog$DefaultImpls": oktu_ILog$DefaultImpls.$clinit(); return oktu_ILog$DefaultImpls;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSkin$read$4": oktgg_GLTFSkin$read$4.$clinit(); return oktgg_GLTFSkin$read$4;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSkin$read$3": oktgg_GLTFSkin$read$3.$clinit(); return oktgg_GLTFSkin$read$3;
        case "java.util.regex.PositiveLookAhead": jur_PositiveLookAhead.$clinit(); return jur_PositiveLookAhead;
        case "kotlin.collections.ArraysKt__ArraysKt": kc_ArraysKt__ArraysKt.$clinit(); return kc_ArraysKt__ArraysKt;
        case "org.ksdfv.thelema.math.IVec2": oktm_IVec2.$clinit(); return oktm_IVec2;
        case "org.ksdfv.thelema.math.IVec4": oktm_IVec4.$clinit(); return oktm_IVec4;
        case "org.ksdfv.thelema.math.IVec3": oktm_IVec3.$clinit(); return oktm_IVec3;
        case "org.ode4j.ode.DContact$DSurfaceParameters": ooo_DContact$DSurfaceParameters.$clinit(); return ooo_DContact$DSurfaceParameters;
        case "java.nio.ReadOnlyBufferException": jn_ReadOnlyBufferException.$clinit(); return jn_ReadOnlyBufferException;
        case "org.ksdfv.thelema.g3d.node.Node": oktgn_Node.$clinit(); return oktgn_Node;
        case "org.ksdfv.thelema.shader.post.Threshold": oktsp_Threshold.$clinit(); return oktsp_Threshold;
        case "org.ksdfv.thelema.shader.glsl.VelocityNode": oktsg_VelocityNode.$clinit(); return oktsg_VelocityNode;
        case "java.lang.NoSuchFieldError": jl_NoSuchFieldError.$clinit(); return jl_NoSuchFieldError;
        case "kotlin.collections.CollectionsKt__CollectionsKt": kc_CollectionsKt__CollectionsKt.$clinit(); return kc_CollectionsKt__CollectionsKt;
        case "org.ksdfv.thelema.texture.Texture2D$load$1": oktt_Texture2D$load$1.$clinit(); return oktt_Texture2D$load$1;
        case "org.ksdfv.thelema.test.SkyboxTest$testMain$1": oktt_SkyboxTest$testMain$1.$clinit(); return oktt_SkyboxTest$testMain$1;
        case "org.ksdfv.thelema.json.jsonsimple3.JsonSimple3Array": oktjj_JsonSimple3Array.$clinit(); return oktjj_JsonSimple3Array;
        case "org.ksdfv.thelema.shader.post.Bloom$Companion": oktsp_Bloom$Companion.$clinit(); return oktsp_Bloom$Companion;
        case "org.ode4j.ode.internal.DxMass": oooi_DxMass.$clinit(); return oooi_DxMass;
        case "java.util.regex.FSet": jur_FSet.$clinit(); return jur_FSet;
        case "org.teavm.jso.impl.JS": otji_JS.$clinit(); return otji_JS;
        case "org.ksdfv.thelema.fs.FS": oktf_FS.$clinit(); return oktf_FS;
        case "java.util.regex.AbstractCharClass$LazyJavaUnicodeIdentifierStart$1": jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1.$clinit(); return jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1;
        case "org.teavm.classlib.impl.unicode.UnicodeHelper": otciu_UnicodeHelper.$clinit(); return otciu_UnicodeHelper;
        case "org.ode4j.ode.internal.libccd.CCD$ccd_t": oooil_CCD$ccd_t.$clinit(); return oooil_CCD$ccd_t;
        case "kotlin.text.StringsKt__IndentKt": kt_StringsKt__IndentKt.$clinit(); return kt_StringsKt__IndentKt;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAnimation$read$2$1$1$1": oktgg_GLTFAnimation$read$2$1$1$1.$clinit(); return oktgg_GLTFAnimation$read$2$1$1$1;
        case "org.ksdfv.thelema.test.shaders.glsl.SSAOTest$testMain$1$2": okttsg_SSAOTest$testMain$1$2.$clinit(); return okttsg_SSAOTest$testMain$1$2;
        case "org.ksdfv.thelema.test.shaders.glsl.SSAOTest$testMain$1$3": okttsg_SSAOTest$testMain$1$3.$clinit(); return okttsg_SSAOTest$testMain$1$3;
        case "java.util.regex.AbstractCharClass$LazyJavaSpaceChar": jur_AbstractCharClass$LazyJavaSpaceChar.$clinit(); return jur_AbstractCharClass$LazyJavaSpaceChar;
        case "java.util.regex.PositiveLookBehind": jur_PositiveLookBehind.$clinit(); return jur_PositiveLookBehind;
        case "org.ksdfv.thelema.gl.IGL": oktg_IGL.$clinit(); return oktg_IGL;
        case "java.nio.charset.CharsetEncoder": jnc_CharsetEncoder.$clinit(); return jnc_CharsetEncoder;
        case "kotlin.comparisons.ComparisonsKt": kc_ComparisonsKt.$clinit(); return kc_ComparisonsKt;
        case "org.ksdfv.thelema.test.GLTFLoaderAnimTest$testMain$1$2": oktt_GLTFLoaderAnimTest$testMain$1$2.$clinit(); return oktt_GLTFLoaderAnimTest$testMain$1$2;
        case "java.io.DataInputStream": ji_DataInputStream.$clinit(); return ji_DataInputStream;
        case "org.ksdfv.thelema.g3d.gltf.GLTFPrimitive$Vec3I": oktgg_GLTFPrimitive$Vec3I.$clinit(); return oktgg_GLTFPrimitive$Vec3I;
        case "org.ode4j.ode.internal.libccd.CCDMPR": oooil_CCDMPR.$clinit(); return oooil_CCDMPR;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSkin": oktgg_GLTFSkin.$clinit(); return oktgg_GLTFSkin;
        case "java.util.regex.AbstractCharClass$LazyJavaJavaIdentifierPart$1": jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1.$clinit(); return jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1;
        case "org.ksdfv.thelema.g3d.Scene": oktg_Scene.$clinit(); return oktg_Scene;
        case "kotlin.UninitializedPropertyAccessException": k_UninitializedPropertyAccessException.$clinit(); return k_UninitializedPropertyAccessException;
        case "org.ksdfv.thelema.g3d.Scene$Companion": oktg_Scene$Companion.$clinit(); return oktg_Scene$Companion;
        case "kotlin.text.StringsKt__StringsKt$splitToSequence$1": kt_StringsKt__StringsKt$splitToSequence$1.$clinit(); return kt_StringsKt__StringsKt$splitToSequence$1;
        case "org.teavm.jso.ajax.ReadyStateChangeHandler": otja_ReadyStateChangeHandler.$clinit(); return otja_ReadyStateChangeHandler;
        case "org.ksdfv.thelema.texture.FrameBuffer": oktt_FrameBuffer.$clinit(); return oktt_FrameBuffer;
        case "com.github.cliftonlabs.json_simple.JsonArray": cgcj_JsonArray.$clinit(); return cgcj_JsonArray;
        case "org.ode4j.ode.DAABBC": ooo_DAABBC.$clinit(); return ooo_DAABBC;
        case "org.ode4j.ode.internal.processmem.DxWorldProcessMemArena": oooip_DxWorldProcessMemArena.$clinit(); return oooip_DxWorldProcessMemArena;
        case "org.ksdfv.thelema.test.shaders.BloomBaseTest": oktts_BloomBaseTest.$clinit(); return oktts_BloomBaseTest;
        case "java.lang.Class": jl_Class.$clinit(); return jl_Class;
        case "org.ksdfv.thelema.test.shaders.glsl.CascadedShadowMappingTest$testMain$1": okttsg_CascadedShadowMappingTest$testMain$1.$clinit(); return okttsg_CascadedShadowMappingTest$testMain$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFPrimitive$loadIndices$1$1": oktgg_GLTFPrimitive$loadIndices$1$1.$clinit(); return oktgg_GLTFPrimitive$loadIndices$1$1;
        case "java.util.regex.CharSet": jur_CharSet.$clinit(); return jur_CharSet;
        case "org.ode4j.ode.internal.CollideTrimeshRay": oooi_CollideTrimeshRay.$clinit(); return oooi_CollideTrimeshRay;
        case "org.ksdfv.thelema.teavm.TeaVMApp": oktt_TeaVMApp.$clinit(); return oktt_TeaVMApp;
        case "org.ksdfv.thelema.shader.glsl.NormalMapNode$Companion": oktsg_NormalMapNode$Companion.$clinit(); return oktsg_NormalMapNode$Companion;
        case "org.ksdfv.thelema.shader.glsl.SkyboxVertexNode$Companion": oktsg_SkyboxVertexNode$Companion.$clinit(); return oktsg_SkyboxVertexNode$Companion;
        case "org.teavm.jso.browser.AnimationFrameCallback": otjb_AnimationFrameCallback.$clinit(); return otjb_AnimationFrameCallback;
        case "org.ode4j.ode.internal.gimpact.GimAABBSet$GIM_PAIR": oooig_GimAABBSet$GIM_PAIR.$clinit(); return oooig_GimAABBSet$GIM_PAIR;
        case "org.ode4j.ode.internal.DxWorld": oooi_DxWorld.$clinit(); return oooi_DxWorld;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$7$1": oktgg_GLTF$read$7$1.$clinit(); return oktgg_GLTF$read$7$1;
        case "kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt": kc_ComparisonsKt___ComparisonsJvmKt.$clinit(); return kc_ComparisonsKt___ComparisonsJvmKt;
        case "java.util.Collections$5": ju_Collections$5.$clinit(); return ju_Collections$5;
        case "org.ksdfv.thelema.g3d.cam.CameraAdapter": oktgc_CameraAdapter.$clinit(); return oktgc_CameraAdapter;
        case "java.util.Collections$6": ju_Collections$6.$clinit(); return ju_Collections$6;
        case "java.util.Collections$3": ju_Collections$3.$clinit(); return ju_Collections$3;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$5$1$1": oktgg_IGLTFMaterial$read$5$1$1.$clinit(); return oktgg_IGLTFMaterial$read$5$1$1;
        case "java.util.regex.QuantifierSet": jur_QuantifierSet.$clinit(); return jur_QuantifierSet;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$13$1": oktgg_GLTF$read$13$1.$clinit(); return oktgg_GLTF$read$13$1;
        case "java.util.Collections$7": ju_Collections$7.$clinit(); return ju_Collections$7;
        case "org.ode4j.ode.internal.gimpact.GimTrimesh": oooig_GimTrimesh.$clinit(); return oooig_GimTrimesh;
        case "kotlin.jvm.internal.Ref$ObjectRef": kji_Ref$ObjectRef.$clinit(); return kji_Ref$ObjectRef;
        case "org.ksdfv.thelema.teavm.TvmSound": oktt_TvmSound.$clinit(); return oktt_TvmSound;
        case "java.nio.CharBufferOverArray": jn_CharBufferOverArray.$clinit(); return jn_CharBufferOverArray;
        case "org.ksdfv.thelema.texture.Texture": oktt_Texture.$clinit(); return oktt_Texture;
        case "kotlin.random.AbstractPlatformRandom": kr_AbstractPlatformRandom.$clinit(); return kr_AbstractPlatformRandom;
        case "org.ode4j.ode.internal.joints.DxJointContact": oooij_DxJointContact.$clinit(); return oooij_DxJointContact;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSparse$read$1": oktgg_GLTFSparse$read$1.$clinit(); return oktgg_GLTFSparse$read$1;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$9$1": oktgg_IGLTFMaterial$read$9$1.$clinit(); return oktgg_IGLTFMaterial$read$9$1;
        case "org.ksdfv.thelema.test.mesh.FrustumMeshBuilderTest$testMain$1": okttm_FrustumMeshBuilderTest$testMain$1.$clinit(); return okttm_FrustumMeshBuilderTest$testMain$1;
        case "org.ksdfv.thelema.shader.glsl.VelocityNode$Companion": oktsg_VelocityNode$Companion.$clinit(); return oktsg_VelocityNode$Companion;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSparse$read$2": oktgg_GLTFSparse$read$2.$clinit(); return oktgg_GLTFSparse$read$2;
        case "kotlin.collections.CollectionsKt__MutableCollectionsKt": kc_CollectionsKt__MutableCollectionsKt.$clinit(); return kc_CollectionsKt__MutableCollectionsKt;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$9$1": oktgg_GLTFNode$read$9$1.$clinit(); return oktgg_GLTFNode$read$9$1;
        case "java.util.regex.AtomicFSet": jur_AtomicFSet.$clinit(); return jur_AtomicFSet;
        case "org.ode4j.ode.internal.DxQuickStep$dxQuickStepperStage5CallContext": oooi_DxQuickStep$dxQuickStepperStage5CallContext.$clinit(); return oooi_DxQuickStep$dxQuickStepperStage5CallContext;
        case "org.ksdfv.thelema.utils.IAsyncList$getOrWait$1": oktu_IAsyncList$getOrWait$1.$clinit(); return oktu_IAsyncList$getOrWait$1;
        case "org.ode4j.ode.DContactJoint": ooo_DContactJoint.$clinit(); return ooo_DContactJoint;
        case "org.ode4j.ode.internal.gimpact.Gimpact": oooig_Gimpact.$clinit(); return oooig_Gimpact;
        case "org.ksdfv.thelema.math.Vec3": oktm_Vec3.$clinit(); return oktm_Vec3;
        case "org.ksdfv.thelema.math.Vec2": oktm_Vec2.$clinit(); return oktm_Vec2;
        case "org.ksdfv.thelema.phys.ode4j.OdePhysicsWorld$Companion$geomPairsPool$1": oktpo_OdePhysicsWorld$Companion$geomPairsPool$1.$clinit(); return oktpo_OdePhysicsWorld$Companion$geomPairsPool$1;
        case "org.ksdfv.thelema.math.Vec4": oktm_Vec4.$clinit(); return oktm_Vec4;
        case "org.ode4j.ode.internal.cpp4j.Cstdlib": oooic_Cstdlib.$clinit(); return oooic_Cstdlib;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSparse": oktgg_GLTFSparse.$clinit(); return oktgg_GLTFSparse;
        case "org.ksdfv.thelema.texture.TextureCube": oktt_TextureCube.$clinit(); return oktt_TextureCube;
        case "org.ksdfv.thelema.g3d.IObject3D$Companion$Build$1": oktg_IObject3D$Companion$Build$1.$clinit(); return oktg_IObject3D$Companion$Build$1;
        case "org.ode4j.math.DVector4": oom_DVector4.$clinit(); return oom_DVector4;
        case "kotlin.collections.CollectionsKt__ReversedViewsKt": kc_CollectionsKt__ReversedViewsKt.$clinit(); return kc_CollectionsKt__ReversedViewsKt;
        case "org.ode4j.math.DVector3": oom_DVector3.$clinit(); return oom_DVector3;
        case "org.ksdfv.thelema.shader.post.FXAA": oktsp_FXAA.$clinit(); return oktsp_FXAA;
        case "java.util.regex.MultiLineEOLSet": jur_MultiLineEOLSet.$clinit(); return jur_MultiLineEOLSet;
        case "java.lang.ClassNotFoundException": jl_ClassNotFoundException.$clinit(); return jl_ClassNotFoundException;
        case "org.ksdfv.thelema.phys.ITrimeshShape": oktp_ITrimeshShape.$clinit(); return oktp_ITrimeshShape;
        case "java.util.HashMap$AbstractMapIterator": ju_HashMap$AbstractMapIterator.$clinit(); return ju_HashMap$AbstractMapIterator;
        case "org.ode4j.ode.internal.Rotation": oooi_Rotation.$clinit(); return oooi_Rotation;
        case "org.ode4j.ode.internal.DxRay$CollideRayBox": oooi_DxRay$CollideRayBox.$clinit(); return oooi_DxRay$CollideRayBox;
        case "org.ode4j.ode.internal.processmem.DxIslandsProcessingCallContext": oooip_DxIslandsProcessingCallContext.$clinit(); return oooip_DxIslandsProcessingCallContext;
        case "kotlin.jvm.internal.TypeIntrinsics": kji_TypeIntrinsics.$clinit(); return kji_TypeIntrinsics;
        case "org.ode4j.ode.internal.DxQuickStep$dxQuickStepperStage6CallContext": oooi_DxQuickStep$dxQuickStepperStage6CallContext.$clinit(); return oooi_DxQuickStep$dxQuickStepperStage6CallContext;
        case "org.ksdfv.thelema.json.jsonsimple3.JsonSimple3Api": oktjj_JsonSimple3Api.$clinit(); return oktjj_JsonSimple3Api;
        case "org.ode4j.ode.internal.processmem.DxStepperProcessingCallContext$dmaxcallcountestimate_fn_t": oooip_DxStepperProcessingCallContext$dmaxcallcountestimate_fn_t.$clinit(); return oooip_DxStepperProcessingCallContext$dmaxcallcountestimate_fn_t;
        case "java.nio.CharBuffer": jn_CharBuffer.$clinit(); return jn_CharBuffer;
        case "org.ksdfv.thelema.texture.IFrameBuffer$buildAttachments$1": oktt_IFrameBuffer$buildAttachments$1.$clinit(); return oktt_IFrameBuffer$buildAttachments$1;
        case "org.ode4j.ode.internal.cpp4j.Ctime": oooic_Ctime.$clinit(); return oooic_Ctime;
        case "kotlin.sequences.TransformingSequence$iterator$1": ks_TransformingSequence$iterator$1.$clinit(); return ks_TransformingSequence$iterator$1;
        case "java.util.List": ju_List.$clinit(); return ju_List;
        case "org.ksdfv.thelema.mesh.build.FrustumMeshBuilder$build$1": oktmb_FrustumMeshBuilder$build$1.$clinit(); return oktmb_FrustumMeshBuilder$build$1;
        case "org.ksdfv.thelema.mesh.build.FrustumMeshBuilder$build$2": oktmb_FrustumMeshBuilder$build$2.$clinit(); return oktmb_FrustumMeshBuilder$build$2;
        case "org.ksdfv.thelema.math.MATH": oktm_MATH.$clinit(); return oktm_MATH;
        case "kotlin.ranges.RangesKt__RangesKt": kr_RangesKt__RangesKt.$clinit(); return kr_RangesKt__RangesKt;
        case "org.ode4j.ode.internal.processmem.DxUtil$free_block_fn_t": oooip_DxUtil$free_block_fn_t.$clinit(); return oooip_DxUtil$free_block_fn_t;
        case "org.teavm.jso.dom.events.EventTarget": otjde_EventTarget.$clinit(); return otjde_EventTarget;
        case "org.ode4j.ode.internal.libccd.CCDQuat$ccd_quat_t": oooil_CCDQuat$ccd_quat_t.$clinit(); return oooil_CCDQuat$ccd_quat_t;
        case "java.util.AbstractSet": ju_AbstractSet.$clinit(); return ju_AbstractSet;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAnimation$Companion": oktgg_GLTFAnimation$Companion.$clinit(); return oktgg_GLTFAnimation$Companion;
        case "org.ksdfv.thelema.input.IKeyListener": okti_IKeyListener.$clinit(); return okti_IKeyListener;
        case "java.util.regex.NonCapJointSet": jur_NonCapJointSet.$clinit(); return jur_NonCapJointSet;
        case "java.lang.Iterable": jl_Iterable.$clinit(); return jl_Iterable;
        case "org.ode4j.ode.internal.processmem.DxWorldProcessMemoryManager": oooip_DxWorldProcessMemoryManager.$clinit(); return oooip_DxWorldProcessMemoryManager;
        case "org.ksdfv.thelema.test.shaders.glsl.GBufferTest": okttsg_GBufferTest.$clinit(); return okttsg_GBufferTest;
        case "org.ksdfv.thelema.g3d.anim.IAnimTrack$DefaultImpls": oktga_IAnimTrack$DefaultImpls.$clinit(); return oktga_IAnimTrack$DefaultImpls;
        case "kotlin.ranges.IntProgression": kr_IntProgression.$clinit(); return kr_IntProgression;
        case "java.util.regex.AbstractCharClass$LazyCharClass": jur_AbstractCharClass$LazyCharClass.$clinit(); return jur_AbstractCharClass$LazyCharClass;
        case "java.lang.NoClassDefFoundError": jl_NoClassDefFoundError.$clinit(); return jl_NoClassDefFoundError;
        case "java.util.regex.AbstractCharClass$LazyJavaUnicodeIdentifierStart": jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart.$clinit(); return jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart;
        case "org.teavm.classlib.impl.CharFlow": otci_CharFlow.$clinit(); return otci_CharFlow;
        case "java.util.regex.RangeSet": jur_RangeSet.$clinit(); return jur_RangeSet;
        case "org.teavm.jso.typedarrays.Float32Array": otjt_Float32Array.$clinit(); return otjt_Float32Array;
        case "org.ode4j.math.DQuaternion": oom_DQuaternion.$clinit(); return oom_DQuaternion;
        case "org.ode4j.ode.internal.DxWorld$DWorldStepMemoryFunctionsInfo$1": oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1.$clinit(); return oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1;
        case "org.ode4j.ode.internal.DxWorld$DWorldStepMemoryFunctionsInfo$2": oooi_DxWorld$DWorldStepMemoryFunctionsInfo$2.$clinit(); return oooi_DxWorld$DWorldStepMemoryFunctionsInfo$2;
        case "org.ode4j.ode.internal.DxWorld$DWorldStepMemoryFunctionsInfo$3": oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3.$clinit(); return oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3;
        case "org.ksdfv.thelema.texture.Attachments": oktt_Attachments.$clinit(); return oktt_Attachments;
        case "java.io.Closeable": ji_Closeable.$clinit(); return ji_Closeable;
        case "org.ksdfv.thelema.shader.glsl.MergeVec4$Companion": oktsg_MergeVec4$Companion.$clinit(); return oktsg_MergeVec4$Companion;
        case "org.ksdfv.thelema.math.Plane$Companion": oktm_Plane$Companion.$clinit(); return oktm_Plane$Companion;
        case "org.ksdfv.thelema.mesh.IMesh$DefaultImpls": oktm_IMesh$DefaultImpls.$clinit(); return oktm_IMesh$DefaultImpls;
        case "org.ode4j.ode.internal.DxCapsule$CollideCapsulePlane": oooi_DxCapsule$CollideCapsulePlane.$clinit(); return oooi_DxCapsule$CollideCapsulePlane;
        case "org.ksdfv.thelema.input.MOUSE": okti_MOUSE.$clinit(); return okti_MOUSE;
        case "org.ksdfv.thelema.g3d.node.AdapterTransformNode": oktgn_AdapterTransformNode.$clinit(); return oktgn_AdapterTransformNode;
        case "java.nio.charset.MalformedInputException": jnc_MalformedInputException.$clinit(); return jnc_MalformedInputException;
        case "org.ksdfv.thelema.shader.glsl.ShaderNodeLink": oktsg_ShaderNodeLink.$clinit(); return oktsg_ShaderNodeLink;
        case "org.ode4j.ode.internal.DxHeightfieldData": oooi_DxHeightfieldData.$clinit(); return oooi_DxHeightfieldData;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAnimation$read$1": oktgg_GLTFAnimation$read$1.$clinit(); return oktgg_GLTFAnimation$read$1;
        case "org.ksdfv.thelema.test.shaders.glsl.SSAOTest": okttsg_SSAOTest.$clinit(); return okttsg_SSAOTest;
        case "org.ksdfv.thelema.phys.IRigidBody$DefaultImpls": oktp_IRigidBody$DefaultImpls.$clinit(); return oktp_IRigidBody$DefaultImpls;
        case "org.ksdfv.thelema.teavm.SoundInstance": oktt_SoundInstance.$clinit(); return oktt_SoundInstance;
        case "java.math.BigInteger": jm_BigInteger.$clinit(); return jm_BigInteger;
        case "java.util.regex.AbstractCharClass$LazyNonDigit": jur_AbstractCharClass$LazyNonDigit.$clinit(); return jur_AbstractCharClass$LazyNonDigit;
        case "org.ode4j.ode.internal.Objects_H$dxContactParameters": oooi_Objects_H$dxContactParameters.$clinit(); return oooi_Objects_H$dxContactParameters;
        case "java.util.regex.CIBackReferenceSet": jur_CIBackReferenceSet.$clinit(); return jur_CIBackReferenceSet;
        case "java.util.regex.AbstractCharClass$1": jur_AbstractCharClass$1.$clinit(); return jur_AbstractCharClass$1;
        case "java.util.regex.AbstractCharClass$2": jur_AbstractCharClass$2.$clinit(); return jur_AbstractCharClass$2;
        case "java.util.regex.PossessiveCompositeQuantifierSet": jur_PossessiveCompositeQuantifierSet.$clinit(); return jur_PossessiveCompositeQuantifierSet;
        case "org.ode4j.ode.internal.CollideCylinderBox": oooi_CollideCylinderBox.$clinit(); return oooi_CollideCylinderBox;
        case "org.ksdfv.thelema.g3d.anim.AnimPlayer$Companion": oktga_AnimPlayer$Companion.$clinit(); return oktga_AnimPlayer$Companion;
        case "org.ode4j.ode.internal.DxBox$TstClass": oooi_DxBox$TstClass.$clinit(); return oooi_DxBox$TstClass;
        case "org.ode4j.ode.OdeConfig": ooo_OdeConfig.$clinit(); return ooo_OdeConfig;
        case "org.ode4j.ode.internal.DObject": oooi_DObject.$clinit(); return oooi_DObject;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSampler$read$1": oktgg_GLTFSampler$read$1.$clinit(); return oktgg_GLTFSampler$read$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAnimation$read$2": oktgg_GLTFAnimation$read$2.$clinit(); return oktgg_GLTFAnimation$read$2;
        case "org.teavm.jso.webaudio.AudioContext": otjw_AudioContext.$clinit(); return otjw_AudioContext;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSampler$read$4": oktgg_GLTFSampler$read$4.$clinit(); return oktgg_GLTFSampler$read$4;
        case "java.util.regex.UCISequenceSet": jur_UCISequenceSet.$clinit(); return jur_UCISequenceSet;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSampler$read$2": oktgg_GLTFSampler$read$2.$clinit(); return oktgg_GLTFSampler$read$2;
        case "java.util.regex.AbstractCharClass$LazyJavaDefined$1": jur_AbstractCharClass$LazyJavaDefined$1.$clinit(); return jur_AbstractCharClass$LazyJavaDefined$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSampler$read$3": oktgg_GLTFSampler$read$3.$clinit(); return oktgg_GLTFSampler$read$3;
        case "org.ksdfv.thelema.shader.glsl.ToneMapNode$Companion": oktsg_ToneMapNode$Companion.$clinit(); return oktsg_ToneMapNode$Companion;
        case "org.ksdfv.thelema.g3d.light.DirectionalLight": oktgl_DirectionalLight.$clinit(); return oktgl_DirectionalLight;
        case "java.util.regex.AbstractCharClass$LazyAlnum": jur_AbstractCharClass$LazyAlnum.$clinit(); return jur_AbstractCharClass$LazyAlnum;
        case "org.ode4j.ode.internal.Objects_H$dxDampingParameters": oooi_Objects_H$dxDampingParameters.$clinit(); return oooi_Objects_H$dxDampingParameters;
        case "kotlin.text.DelimitedRangesSequence": kt_DelimitedRangesSequence.$clinit(); return kt_DelimitedRangesSequence;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAccessor$read$6": oktgg_GLTFAccessor$read$6.$clinit(); return oktgg_GLTFAccessor$read$6;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAccessor$read$5": oktgg_GLTFAccessor$read$5.$clinit(); return oktgg_GLTFAccessor$read$5;
        case "kotlin.text.StringsKt__RegexExtensionsKt": kt_StringsKt__RegexExtensionsKt.$clinit(); return kt_StringsKt__RegexExtensionsKt;
        case "org.ode4j.ode.internal.gimpact.GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA": oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA.$clinit(); return oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA;
        case "org.ksdfv.thelema.mesh.build.FrustumMeshBuilder": oktmb_FrustumMeshBuilder.$clinit(); return oktmb_FrustumMeshBuilder;
        case "org.ode4j.ode.internal.DxRay": oooi_DxRay.$clinit(); return oooi_DxRay;
        case "org.ksdfv.thelema.g3d.IWorld$Companion": oktg_IWorld$Companion.$clinit(); return oktg_IWorld$Companion;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAccessor$read$2": oktgg_GLTFAccessor$read$2.$clinit(); return oktgg_GLTFAccessor$read$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAccessor$read$1": oktgg_GLTFAccessor$read$1.$clinit(); return oktgg_GLTFAccessor$read$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAccessor$read$4": oktgg_GLTFAccessor$read$4.$clinit(); return oktgg_GLTFAccessor$read$4;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAccessor$read$3": oktgg_GLTFAccessor$read$3.$clinit(); return oktgg_GLTFAccessor$read$3;
        case "java.util.regex.EmptySet": jur_EmptySet.$clinit(); return jur_EmptySet;
        case "org.ksdfv.thelema.utils.LittleEndianInputStream": oktu_LittleEndianInputStream.$clinit(); return oktu_LittleEndianInputStream;
        case "org.ode4j.ode.internal.OdeInit$EODEINITMODE": oooi_OdeInit$EODEINITMODE.$clinit(); return oooi_OdeInit$EODEINITMODE;
        case "org.ksdfv.thelema.teavm.TvmKB$2": oktt_TvmKB$2.$clinit(); return oktt_TvmKB$2;
        case "org.ksdfv.thelema.teavm.TvmKB$1": oktt_TvmKB$1.$clinit(); return oktt_TvmKB$1;
        case "org.ksdfv.thelema.teavm.TvmKB$3": oktt_TvmKB$3.$clinit(); return oktt_TvmKB$3;
        case "org.ode4j.ode.internal.CollisionLibccdCylinderStacking": oooi_CollisionLibccdCylinderStacking.$clinit(); return oooi_CollisionLibccdCylinderStacking;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$2": oktgg_GLTF$read$2.$clinit(); return oktgg_GLTF$read$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$3": oktgg_GLTF$read$3.$clinit(); return oktgg_GLTF$read$3;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$4": oktgg_GLTF$read$4.$clinit(); return oktgg_GLTF$read$4;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$5": oktgg_GLTF$read$5.$clinit(); return oktgg_GLTF$read$5;
        case "java.lang.NoSuchMethodError": jl_NoSuchMethodError.$clinit(); return jl_NoSuchMethodError;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$1": oktgg_GLTF$read$1.$clinit(); return oktgg_GLTF$read$1;
        case "org.ksdfv.thelema.phys.IBoxShape": oktp_IBoxShape.$clinit(); return oktp_IBoxShape;
        case "java.io.IOException": ji_IOException.$clinit(); return ji_IOException;
        case "java.lang.ArrayIndexOutOfBoundsException": jl_ArrayIndexOutOfBoundsException.$clinit(); return jl_ArrayIndexOutOfBoundsException;
        case "org.ksdfv.thelema.test.shaders.CascadedShadowMappingBaseTest$testMain$1": oktts_CascadedShadowMappingBaseTest$testMain$1.$clinit(); return oktts_CascadedShadowMappingBaseTest$testMain$1;
        case "org.ksdfv.thelema.test.mesh.MeshTest$testMain$2": okttm_MeshTest$testMain$2.$clinit(); return okttm_MeshTest$testMain$2;
        case "java.util.concurrent.atomic.AtomicLong": juca_AtomicLong.$clinit(); return juca_AtomicLong;
        case "org.ode4j.ode.internal.gimpact.GimBitSet": oooig_GimBitSet.$clinit(); return oooig_GimBitSet;
        case "org.ksdfv.thelema.teavm.TvmIMG$load$2": oktt_TvmIMG$load$2.$clinit(); return oktt_TvmIMG$load$2;
        case "kotlin.sequences.SequencesKt": ks_SequencesKt.$clinit(); return ks_SequencesKt;
        case "org.ksdfv.thelema.teavm.TvmIMG$load$1": oktt_TvmIMG$load$1.$clinit(); return oktt_TvmIMG$load$1;
        case "org.ksdfv.thelema.g3d.anim.AnimPlayer$Companion$animationPool$1": oktga_AnimPlayer$Companion$animationPool$1.$clinit(); return oktga_AnimPlayer$Companion$animationPool$1;
        case "org.ksdfv.thelema.teavm.TvmIMG$load$4": oktt_TvmIMG$load$4.$clinit(); return oktt_TvmIMG$load$4;
        case "org.ode4j.ode.internal.CollideCylinderBox$sCylinderBoxData": oooi_CollideCylinderBox$sCylinderBoxData.$clinit(); return oooi_CollideCylinderBox$sCylinderBoxData;
        case "org.ksdfv.thelema.teavm.TvmIMG$load$3": oktt_TvmIMG$load$3.$clinit(); return oktt_TvmIMG$load$3;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$6": oktgg_GLTF$read$6.$clinit(); return oktgg_GLTF$read$6;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$7": oktgg_GLTF$read$7.$clinit(); return oktgg_GLTF$read$7;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$8": oktgg_GLTF$read$8.$clinit(); return oktgg_GLTF$read$8;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$9": oktgg_GLTF$read$9.$clinit(); return oktgg_GLTF$read$9;
        case "org.ksdfv.thelema.test.MouseTest": oktt_MouseTest.$clinit(); return oktt_MouseTest;
        case "java.util.ListIterator": ju_ListIterator.$clinit(); return ju_ListIterator;
        case "java.util.Random": ju_Random.$clinit(); return ju_Random;
        case "com.github.cliftonlabs.json_simple.Jsoner$2": cgcj_Jsoner$2.$clinit(); return cgcj_Jsoner$2;
        case "java.nio.charset.impl.UTF8Decoder": jnci_UTF8Decoder.$clinit(); return jnci_UTF8Decoder;
        case "org.ksdfv.thelema.phys.ICylinderShape": oktp_ICylinderShape.$clinit(); return oktp_ICylinderShape;
        case "org.ksdfv.thelema.shader.post.MotionBlur": oktsp_MotionBlur.$clinit(); return oktsp_MotionBlur;
        case "org.ksdfv.thelema.shader.glsl.AttributeNode$Companion": oktsg_AttributeNode$Companion.$clinit(); return oktsg_AttributeNode$Companion;
        case "java.util.regex.AbstractCharClass$LazyJavaLetter$1": jur_AbstractCharClass$LazyJavaLetter$1.$clinit(); return jur_AbstractCharClass$LazyJavaLetter$1;
        case "org.ksdfv.thelema.utils.IPath": oktu_IPath.$clinit(); return oktu_IPath;
        case "org.ksdfv.thelema.mesh.ScreenQuad": oktm_ScreenQuad.$clinit(); return oktm_ScreenQuad;
        case "org.ode4j.ode.internal.DxTriMesh$1": oooi_DxTriMesh$1.$clinit(); return oooi_DxTriMesh$1;
        case "java.util.regex.SpecialToken": jur_SpecialToken.$clinit(); return jur_SpecialToken;
        case "org.ode4j.ode.DRotation": ooo_DRotation.$clinit(); return ooo_DRotation;
        case "org.ode4j.ode.internal.cpp4j.FILE": oooic_FILE.$clinit(); return oooic_FILE;
        case "org.ode4j.ode.DRay": ooo_DRay.$clinit(); return ooo_DRay;
        case "org.ksdfv.thelema.g3d.anim.IAnim": oktga_IAnim.$clinit(); return oktga_IAnim;
        case "org.ksdfv.thelema.g3d.cam.CameraAdapter$Companion": oktgc_CameraAdapter$Companion.$clinit(); return oktgc_CameraAdapter$Companion;
        case "org.ode4j.ode.OdeConfig$TRIMESH": ooo_OdeConfig$TRIMESH.$clinit(); return ooo_OdeConfig$TRIMESH;
        case "org.ode4j.ode.internal.DxWorld$2": oooi_DxWorld$2.$clinit(); return oooi_DxWorld$2;
        case "java.util.regex.AbstractCharClass$LazyUpper": jur_AbstractCharClass$LazyUpper.$clinit(); return jur_AbstractCharClass$LazyUpper;
        case "org.ode4j.ode.internal.DxWorld$1": oooi_DxWorld$1.$clinit(); return oooi_DxWorld$1;
        case "java.util.HashMap$KeyIterator": ju_HashMap$KeyIterator.$clinit(); return ju_HashMap$KeyIterator;
        case "org.ode4j.ode.internal.libccd.CCDVec3$ccd_vec3_t": oooil_CCDVec3$ccd_vec3_t.$clinit(); return oooil_CCDVec3$ccd_vec3_t;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$8$1": oktgg_GLTF$read$8$1.$clinit(); return oktgg_GLTF$read$8$1;
        case "java.lang.Math$ExponentConstants": jl_Math$ExponentConstants.$clinit(); return jl_Math$ExponentConstants;
        case "org.ksdfv.thelema.test.CascadedShadowMatricesTest": oktt_CascadedShadowMatricesTest.$clinit(); return oktt_CascadedShadowMatricesTest;
        case "kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2": kt_StringsKt__StringsKt$rangesDelimitedBy$2.$clinit(); return kt_StringsKt__StringsKt$rangesDelimitedBy$2;
        case "kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4": kt_StringsKt__StringsKt$rangesDelimitedBy$4.$clinit(); return kt_StringsKt__StringsKt$rangesDelimitedBy$4;
        case "java.util.regex.MultiLineSOLSet": jur_MultiLineSOLSet.$clinit(); return jur_MultiLineSOLSet;
        case "org.ode4j.ode.internal.gimpact.GimAABBSet": oooig_GimAABBSet.$clinit(); return oooig_GimAABBSet;
        case "kotlin.collections.CollectionsKt__IteratorsKt": kc_CollectionsKt__IteratorsKt.$clinit(); return kc_CollectionsKt__IteratorsKt;
        case "org.ode4j.ode.threading.Atomics": ooot_Atomics.$clinit(); return ooot_Atomics;
        case "java.util.regex.AbstractCharClass$LazyLower": jur_AbstractCharClass$LazyLower.$clinit(); return jur_AbstractCharClass$LazyLower;
        case "org.ksdfv.thelema.g3d.gltf.GLTFPrimitive$loadIndices$1": oktgg_GLTFPrimitive$loadIndices$1.$clinit(); return oktgg_GLTFPrimitive$loadIndices$1;
        case "java.util.LinkedHashMap$LinkedHashMapEntrySet": ju_LinkedHashMap$LinkedHashMapEntrySet.$clinit(); return ju_LinkedHashMap$LinkedHashMapEntrySet;
        case "kotlin.collections.EmptyList": kc_EmptyList.$clinit(); return kc_EmptyList;
        case "org.ode4j.ode.internal.Objects_H$dxAutoDisable": oooi_Objects_H$dxAutoDisable.$clinit(); return oooi_Objects_H$dxAutoDisable;
        case "java.util.Comparator": ju_Comparator.$clinit(); return ju_Comparator;
        case "kotlin.comparisons.ComparisonsKt___ComparisonsKt": kc_ComparisonsKt___ComparisonsKt.$clinit(); return kc_ComparisonsKt___ComparisonsKt;
        case "java.util.regex.UCISupplCharSet": jur_UCISupplCharSet.$clinit(); return jur_UCISupplCharSet;
        case "org.ksdfv.thelema.g3d.light.PointLight": oktgl_PointLight.$clinit(); return oktgl_PointLight;
        case "kotlin.text.StringsKt___StringsKt": kt_StringsKt___StringsKt.$clinit(); return kt_StringsKt___StringsKt;
        case "java.util.regex.AbstractCharClass$LazyRange": jur_AbstractCharClass$LazyRange.$clinit(); return jur_AbstractCharClass$LazyRange;
        case "java.util.regex.AltQuantifierSet": jur_AltQuantifierSet.$clinit(); return jur_AltQuantifierSet;
        case "org.ode4j.ode.internal.DxBody": oooi_DxBody.$clinit(); return oooi_DxBody;
        case "org.ksdfv.thelema.test.shaders.MotionBlurBaseTest$testMain$1": oktts_MotionBlurBaseTest$testMain$1.$clinit(); return oktts_MotionBlurBaseTest$testMain$1;
        case "org.ksdfv.thelema.test.shaders.MotionBlurBaseTest$testMain$2": oktts_MotionBlurBaseTest$testMain$2.$clinit(); return oktts_MotionBlurBaseTest$testMain$2;
        case "org.ksdfv.thelema.test.mesh.MeshCubeTest": okttm_MeshCubeTest.$clinit(); return okttm_MeshCubeTest;
        case "java.util.regex.UCISupplRangeSet": jur_UCISupplRangeSet.$clinit(); return jur_UCISupplRangeSet;
        case "kotlin.jvm.internal.FloatCompanionObject": kji_FloatCompanionObject.$clinit(); return kji_FloatCompanionObject;
        case "org.ode4j.math.DMatrix3C": oom_DMatrix3C.$clinit(); return oom_DMatrix3C;
        case "org.ode4j.ode.DMatrix": ooo_DMatrix.$clinit(); return ooo_DMatrix;
        case "org.ode4j.ode.internal.CollisionLibccd$1": oooi_CollisionLibccd$1.$clinit(); return oooi_CollisionLibccd$1;
        case "org.ksdfv.thelema.texture.IFrameBufferAttachment": oktt_IFrameBufferAttachment.$clinit(); return oktt_IFrameBufferAttachment;
        case "org.ode4j.ode.internal.CollisionLibccd$3": oooi_CollisionLibccd$3.$clinit(); return oooi_CollisionLibccd$3;
        case "org.ode4j.ode.internal.CollisionLibccd$2": oooi_CollisionLibccd$2.$clinit(); return oooi_CollisionLibccd$2;
        case "kotlin.text.StringsKt__StringsJVMKt": kt_StringsKt__StringsJVMKt.$clinit(); return kt_StringsKt__StringsJVMKt;
        case "org.ksdfv.thelema.g3d.gltf.GLTFPrimitive$read$$inlined$forEach$lambda$1$1": oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1.$clinit(); return oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1;
        case "org.ode4j.ode.internal.DxQuickStep$dxQuickStepperStage4CallContext": oooi_DxQuickStep$dxQuickStepperStage4CallContext.$clinit(); return oooi_DxQuickStep$dxQuickStepperStage4CallContext;
        case "org.ode4j.ode.internal.DxConvex$CollideConvexConvex": oooi_DxConvex$CollideConvexConvex.$clinit(); return oooi_DxConvex$CollideConvexConvex;
        case "org.ksdfv.thelema.phys.ode4j.GeomContactPair": oktpo_GeomContactPair.$clinit(); return oktpo_GeomContactPair;
        case "org.ksdfv.thelema.teavm.TvmInt32Array": oktt_TvmInt32Array.$clinit(); return oktt_TvmInt32Array;
        case "java.util.HashMap$1": ju_HashMap$1.$clinit(); return ju_HashMap$1;
        case "kotlin.jvm.internal.ArrayIteratorKt": kji_ArrayIteratorKt.$clinit(); return kji_ArrayIteratorKt;
        case "java.util.HashMap$2": ju_HashMap$2.$clinit(); return ju_HashMap$2;
        case "org.ode4j.ode.internal.gimpact.GimRadixSort$GimRSortTokenComparator": oooig_GimRadixSort$GimRSortTokenComparator.$clinit(); return oooig_GimRadixSort$GimRSortTokenComparator;
        case "org.ode4j.ode.internal.Common": oooi_Common.$clinit(); return oooi_Common;
        case "org.ksdfv.thelema.g3d.cam.OrbitCameraControl": oktgc_OrbitCameraControl.$clinit(); return oktgc_OrbitCameraControl;
        case "org.teavm.jso.browser.WindowEventTarget": otjb_WindowEventTarget.$clinit(); return otjb_WindowEventTarget;
        case "java.util.RandomAccess": ju_RandomAccess.$clinit(); return ju_RandomAccess;
        case "org.ode4j.ode.internal.CollisionLibccd$5": oooi_CollisionLibccd$5.$clinit(); return oooi_CollisionLibccd$5;
        case "org.ode4j.ode.internal.CollisionLibccd$4": oooi_CollisionLibccd$4.$clinit(); return oooi_CollisionLibccd$4;
        case "org.ode4j.ode.internal.CollisionLibccd$7": oooi_CollisionLibccd$7.$clinit(); return oooi_CollisionLibccd$7;
        case "org.ode4j.ode.internal.CollisionLibccd$6": oooi_CollisionLibccd$6.$clinit(); return oooi_CollisionLibccd$6;
        case "org.ksdfv.thelema.data.IIntData$DefaultImpls": oktd_IIntData$DefaultImpls.$clinit(); return oktd_IIntData$DefaultImpls;
        case "java.lang.NegativeArraySizeException": jl_NegativeArraySizeException.$clinit(); return jl_NegativeArraySizeException;
        case "org.ksdfv.thelema.shader.post.Bloom": oktsp_Bloom.$clinit(); return oktsp_Bloom;
        case "kotlin.jvm.internal.markers.KMutableCollection": kjim_KMutableCollection.$clinit(); return kjim_KMutableCollection;
        case "java.util.Map$Entry": ju_Map$Entry.$clinit(); return ju_Map$Entry;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial": oktgg_IGLTFMaterial.$clinit(); return oktgg_IGLTFMaterial;
        case "org.ode4j.ode.internal.processmem.DxStepWorkingMemory": oooip_DxStepWorkingMemory.$clinit(); return oooip_DxStepWorkingMemory;
        case "org.ksdfv.thelema.phys.ode4j.OdePhysicsWorld$nearCallback$1": oktpo_OdePhysicsWorld$nearCallback$1.$clinit(); return oktpo_OdePhysicsWorld$nearCallback$1;
        case "org.ode4j.ode.internal.DxHeightfield$CollideHeightfield": oooi_DxHeightfield$CollideHeightfield.$clinit(); return oooi_DxHeightfield$CollideHeightfield;
        case "org.ksdfv.thelema.texture.GBuffer": oktt_GBuffer.$clinit(); return oktt_GBuffer;
        case "org.ksdfv.thelema.phys.ode4j.OdeGeom": oktpo_OdeGeom.$clinit(); return oktpo_OdeGeom;
        case "java.util.regex.GroupQuantifierSet": jur_GroupQuantifierSet.$clinit(); return jur_GroupQuantifierSet;
        case "java.lang.IllegalStateException": jl_IllegalStateException.$clinit(); return jl_IllegalStateException;
        case "org.ksdfv.thelema.shader.glsl.GBufferOutputNode$Companion": oktsg_GBufferOutputNode$Companion.$clinit(); return oktsg_GBufferOutputNode$Companion;
        case "org.ksdfv.thelema.shader.glsl.OperationNode": oktsg_OperationNode.$clinit(); return oktsg_OperationNode;
        case "org.ksdfv.thelema.math.IMat4$DefaultImpls": oktm_IMat4$DefaultImpls.$clinit(); return oktm_IMat4$DefaultImpls;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSkin$read$2$1": oktgg_GLTFSkin$read$2$1.$clinit(); return oktgg_GLTFSkin$read$2$1;
        case "org.ksdfv.thelema.test.shaders.glsl.SkyboxVertexNodeTest$testMain$1": okttsg_SkyboxVertexNodeTest$testMain$1.$clinit(); return okttsg_SkyboxVertexNodeTest$testMain$1;
        case "java.util.HashMap$HashMapEntrySet": ju_HashMap$HashMapEntrySet.$clinit(); return ju_HashMap$HashMapEntrySet;
        case "org.ode4j.ode.internal.DxGimpactCollision": oooi_DxGimpactCollision.$clinit(); return oooi_DxGimpactCollision;
        case "java.lang.Byte": jl_Byte.$clinit(); return jl_Byte;
        case "org.ksdfv.thelema.json.IJsonObject$DefaultImpls": oktj_IJsonObject$DefaultImpls.$clinit(); return oktj_IJsonObject$DefaultImpls;
        case "java.util.regex.AbstractCharClass": jur_AbstractCharClass.$clinit(); return jur_AbstractCharClass;
        case "kotlin.text.CharsKt": kt_CharsKt.$clinit(); return kt_CharsKt;
        case "org.ode4j.ode.internal.CollisionLibccd$CollideCylinderCylinder": oooi_CollisionLibccd$CollideCylinderCylinder.$clinit(); return oooi_CollisionLibccd$CollideCylinderCylinder;
        case "com.github.cliftonlabs.json_simple.Jsoner$States": cgcj_Jsoner$States.$clinit(); return cgcj_Jsoner$States;
        case "java.io.EOFException": ji_EOFException.$clinit(); return ji_EOFException;
        case "org.ksdfv.thelema.shader.glsl.TextureNode$Companion": oktsg_TextureNode$Companion.$clinit(); return oktsg_TextureNode$Companion;
        case "kotlin.text.StringsKt__StringBuilderKt": kt_StringsKt__StringBuilderKt.$clinit(); return kt_StringsKt__StringBuilderKt;
        case "org.ode4j.ode.internal.CollisionLibccd$ccd_cap_t": oooi_CollisionLibccd$ccd_cap_t.$clinit(); return oooi_CollisionLibccd$ccd_cap_t;
        case "org.ksdfv.thelema.mesh.IVertexInput": oktm_IVertexInput.$clinit(); return oktm_IVertexInput;
        case "org.ksdfv.thelema.math.IVec3$DefaultImpls": oktm_IVec3$DefaultImpls.$clinit(); return oktm_IVec3$DefaultImpls;
        case "kotlin.random.Random$Default": kr_Random$Default.$clinit(); return kr_Random$Default;
        case "java.util.regex.AbstractCharClass$LazyJavaIdentifierIgnorable": jur_AbstractCharClass$LazyJavaIdentifierIgnorable.$clinit(); return jur_AbstractCharClass$LazyJavaIdentifierIgnorable;
        case "java.util.HashMap": ju_HashMap.$clinit(); return ju_HashMap;
        case "org.ksdfv.thelema.shader.glsl.IShaderNode$DefaultImpls": oktsg_IShaderNode$DefaultImpls.$clinit(); return oktsg_IShaderNode$DefaultImpls;
        case "org.ode4j.ode.internal.DBase": oooi_DBase.$clinit(); return oooi_DBase;
        case "java.nio.charset.CoderResult": jnc_CoderResult.$clinit(); return jnc_CoderResult;
        case "org.ode4j.ode.internal.DxQuickStep$DJointWithInfo1": oooi_DxQuickStep$DJointWithInfo1.$clinit(); return oooi_DxQuickStep$DJointWithInfo1;
        case "org.ode4j.ode.internal.CollideCylinderTrimesh$sLocalContactData": oooi_CollideCylinderTrimesh$sLocalContactData.$clinit(); return oooi_CollideCylinderTrimesh$sLocalContactData;
        case "org.ksdfv.thelema.math.Frustum": oktm_Frustum.$clinit(); return oktm_Frustum;
        case "org.ksdfv.thelema.g3d.anim.ActionTrack": oktga_ActionTrack.$clinit(); return oktga_ActionTrack;
        case "org.ode4j.ode.internal.gimpact.GimConstants": oooig_GimConstants.$clinit(); return oooig_GimConstants;
        case "org.ksdfv.thelema.texture.ITexture": oktt_ITexture.$clinit(); return oktt_ITexture;
        case "org.teavm.jso.typedarrays.Int32Array": otjt_Int32Array.$clinit(); return otjt_Int32Array;
        case "org.ode4j.ode.internal.gimpact.GimContact": oooig_GimContact.$clinit(); return oooig_GimContact;
        case "java.lang.IllegalArgumentException": jl_IllegalArgumentException.$clinit(); return jl_IllegalArgumentException;
        case "org.ksdfv.thelema.g3d.node.PreviousTRS": oktgn_PreviousTRS.$clinit(); return oktgn_PreviousTRS;
        case "org.ode4j.ode.internal.cpp4j.Cstring": oooic_Cstring.$clinit(); return oooic_Cstring;
        case "org.ksdfv.thelema.mesh.IVertexInputs$DefaultImpls": oktm_IVertexInputs$DefaultImpls.$clinit(); return oktm_IVertexInputs$DefaultImpls;
        case "org.ksdfv.thelema.mesh.IndexBufferObject": oktm_IndexBufferObject.$clinit(); return oktm_IndexBufferObject;
        case "java.util.HashMap$EntryIterator": ju_HashMap$EntryIterator.$clinit(); return ju_HashMap$EntryIterator;
        case "org.ode4j.ode.DGeom": ooo_DGeom.$clinit(); return ooo_DGeom;
        case "java.util.Collections": ju_Collections.$clinit(); return ju_Collections;
        case "org.ode4j.ode.internal.AbstractStepper": oooi_AbstractStepper.$clinit(); return oooi_AbstractStepper;
        case "org.ode4j.ode.internal.processmem.DxUtil$shrink_block_fn_t": oooip_DxUtil$shrink_block_fn_t.$clinit(); return oooip_DxUtil$shrink_block_fn_t;
        case "org.ksdfv.thelema.shader.glsl.IShaderData$DefaultImpls": oktsg_IShaderData$DefaultImpls.$clinit(); return oktsg_IShaderData$DefaultImpls;
        case "java.util.Enumeration": ju_Enumeration.$clinit(); return ju_Enumeration;
        case "org.ode4j.ode.internal.gimpact.GimTriCollision": oooig_GimTriCollision.$clinit(); return oooig_GimTriCollision;
        case "org.ksdfv.thelema.phys.ode4j.OdeBoxShape": oktpo_OdeBoxShape.$clinit(); return oktpo_OdeBoxShape;
        case "java.util.regex.SingleSet": jur_SingleSet.$clinit(); return jur_SingleSet;
        case "java.lang.Thread": jl_Thread.$clinit(); return jl_Thread;
        case "kotlin.text.CharsKt__CharJVMKt": kt_CharsKt__CharJVMKt.$clinit(); return kt_CharsKt__CharJVMKt;
        case "java.nio.charset.BufferOverflowException": jnc_BufferOverflowException.$clinit(); return jnc_BufferOverflowException;
        case "org.ksdfv.thelema.teavm.TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0": oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0.$clinit(); return oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0;
        case "org.ksdfv.thelema.test.phys.TrimeshShapeTest": okttp_TrimeshShapeTest.$clinit(); return okttp_TrimeshShapeTest;
        case "kotlin.jvm.internal.Ref$BooleanRef": kji_Ref$BooleanRef.$clinit(); return kji_Ref$BooleanRef;
        case "java.lang.StringIndexOutOfBoundsException": jl_StringIndexOutOfBoundsException.$clinit(); return jl_StringIndexOutOfBoundsException;
        case "java.nio.charset.CharsetDecoder": jnc_CharsetDecoder.$clinit(); return jnc_CharsetDecoder;
        case "java.util.regex.UCIBackReferenceSet": jur_UCIBackReferenceSet.$clinit(); return jur_UCIBackReferenceSet;
        case "org.ksdfv.thelema.teavm.TeaVMApp$anim$1": oktt_TeaVMApp$anim$1.$clinit(); return oktt_TeaVMApp$anim$1;
        case "org.ode4j.ode.internal.joints.OdeJointsFactoryImpl": oooij_OdeJointsFactoryImpl.$clinit(); return oooij_OdeJointsFactoryImpl;
        case "org.ode4j.ode.internal.CollideTrimeshSphere": oooi_CollideTrimeshSphere.$clinit(); return oooi_CollideTrimeshSphere;
        case "kotlin.Unit": k_Unit.$clinit(); return k_Unit;
        case "java.util.regex.DotAllQuantifierSet": jur_DotAllQuantifierSet.$clinit(); return jur_DotAllQuantifierSet;
        case "org.ksdfv.thelema.teavm.TvmGL$shaders$1": oktt_TvmGL$shaders$1.$clinit(); return oktt_TvmGL$shaders$1;
        case "org.ode4j.ode.threading.MutexGroup": ooot_MutexGroup.$clinit(); return ooot_MutexGroup;
        case "org.ksdfv.thelema.mesh.build.PlaneMeshBuilder": oktmb_PlaneMeshBuilder.$clinit(); return oktmb_PlaneMeshBuilder;
        case "org.ode4j.math.DVector3C": oom_DVector3C.$clinit(); return oom_DVector3C;
        case "org.ode4j.ode.internal.DDestructible": oooi_DDestructible.$clinit(); return oooi_DDestructible;
        case "org.ksdfv.thelema.img.IImg": okti_IImg.$clinit(); return okti_IImg;
        case "org.ode4j.math.DVector3I": oom_DVector3I.$clinit(); return oom_DVector3I;
        case "java.nio.charset.CoderMalfunctionError": jnc_CoderMalfunctionError.$clinit(); return jnc_CoderMalfunctionError;
        case "org.ode4j.ode.internal.processmem.DxWorldProcessIslandsInfo": oooip_DxWorldProcessIslandsInfo.$clinit(); return oooip_DxWorldProcessIslandsInfo;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$10$1": oktgg_GLTF$read$10$1.$clinit(); return oktgg_GLTF$read$10$1;
        case "java.util.regex.CIDecomposedCharSet": jur_CIDecomposedCharSet.$clinit(); return jur_CIDecomposedCharSet;
        case "org.ksdfv.thelema.mesh.VertexInputs": oktm_VertexInputs.$clinit(); return oktm_VertexInputs;
        case "org.ode4j.ode.internal.CollisionLibccd$CollideConvexCylinderCCD": oooi_CollisionLibccd$CollideConvexCylinderCCD.$clinit(); return oooi_CollisionLibccd$CollideConvexCylinderCCD;
        case "org.ode4j.math.DVector4C": oom_DVector4C.$clinit(); return oom_DVector4C;
        case "org.ksdfv.thelema.test.shaders.ShadowMappingBaseTest": oktts_ShadowMappingBaseTest.$clinit(); return oktts_ShadowMappingBaseTest;
        case "org.ksdfv.thelema.shader.glsl.NormalMapNode": oktsg_NormalMapNode.$clinit(); return oktsg_NormalMapNode;
        case "org.ksdfv.thelema.mesh.IIndexBufferObject$DefaultImpls": oktm_IIndexBufferObject$DefaultImpls.$clinit(); return oktm_IIndexBufferObject$DefaultImpls;
        case "org.ode4j.ode.internal.libccd.CCD": oooil_CCD.$clinit(); return oooil_CCD;
        case "org.ksdfv.thelema.texture.ITexture$DefaultImpls": oktt_ITexture$DefaultImpls.$clinit(); return oktt_ITexture$DefaultImpls;
        case "org.ode4j.ode.internal.gimpact.GimRadixSort$GimCompMacro": oooig_GimRadixSort$GimCompMacro.$clinit(); return oooig_GimRadixSort$GimCompMacro;
        case "org.ksdfv.thelema.shader.glsl.CameraDataNode$Companion": oktsg_CameraDataNode$Companion.$clinit(); return oktsg_CameraDataNode$Companion;
        case "org.ksdfv.thelema.teavm.TvmGL$ProgramWrap": oktt_TvmGL$ProgramWrap.$clinit(); return oktt_TvmGL$ProgramWrap;
        case "org.ksdfv.thelema.gl.GL$Request": oktg_GL$Request.$clinit(); return oktg_GL$Request;
        case "org.teavm.classlib.impl.text.DoubleAnalyzer$Result": otcit_DoubleAnalyzer$Result.$clinit(); return otcit_DoubleAnalyzer$Result;
        case "java.util.regex.PossessiveAltQuantifierSet": jur_PossessiveAltQuantifierSet.$clinit(); return jur_PossessiveAltQuantifierSet;
        case "org.ode4j.ode.internal.DxCollisionUtil": oooi_DxCollisionUtil.$clinit(); return oooi_DxCollisionUtil;
        case "org.ksdfv.thelema.g3d.gltf.GLTFPrimitive": oktgg_GLTFPrimitive.$clinit(); return oktgg_GLTFPrimitive;
        case "org.ode4j.ode.OdeMath": ooo_OdeMath.$clinit(); return ooo_OdeMath;
        case "org.ode4j.ode.internal.Step": oooi_Step.$clinit(); return oooi_Step;
        case "org.ode4j.math.DQuaternionC": oom_DQuaternionC.$clinit(); return oom_DQuaternionC;
        case "org.ksdfv.thelema.g3d.Material": oktg_Material.$clinit(); return oktg_Material;
        case "java.util.Objects": ju_Objects.$clinit(); return ju_Objects;
        case "org.ksdfv.thelema.mesh.build.SphereMeshBuilder$build$1": oktmb_SphereMeshBuilder$build$1.$clinit(); return oktmb_SphereMeshBuilder$build$1;
        case "org.ode4j.ode.internal.processmem.DxStepperProcessingCallContext": oooip_DxStepperProcessingCallContext.$clinit(); return oooip_DxStepperProcessingCallContext;
        case "org.ksdfv.thelema.mesh.build.SphereMeshBuilder$build$2": oktmb_SphereMeshBuilder$build$2.$clinit(); return oktmb_SphereMeshBuilder$build$2;
        case "org.ksdfv.thelema.shader.glsl.GLSL$15": oktsg_GLSL$15.$clinit(); return oktsg_GLSL$15;
        case "org.ksdfv.thelema.shader.glsl.GLSL$14": oktsg_GLSL$14.$clinit(); return oktsg_GLSL$14;
        case "org.ode4j.ode.internal.CollideTrimeshBox": oooi_CollideTrimeshBox.$clinit(); return oooi_CollideTrimeshBox;
        case "org.ksdfv.thelema.shader.glsl.GLSL$13": oktsg_GLSL$13.$clinit(); return oktsg_GLSL$13;
        case "org.ksdfv.thelema.shader.glsl.GLSL$12": oktsg_GLSL$12.$clinit(); return oktsg_GLSL$12;
        case "org.ksdfv.thelema.shader.glsl.GLSL$11": oktsg_GLSL$11.$clinit(); return oktsg_GLSL$11;
        case "org.ksdfv.thelema.shader.glsl.GLSL$10": oktsg_GLSL$10.$clinit(); return oktsg_GLSL$10;
        case "org.ksdfv.thelema.g3d.node.ITransformNode$Companion$Build$1": oktgn_ITransformNode$Companion$Build$1.$clinit(); return oktgn_ITransformNode$Companion$Build$1;
        case "java.util.regex.AltGroupQuantifierSet": jur_AltGroupQuantifierSet.$clinit(); return jur_AltGroupQuantifierSet;
        case "org.ode4j.ode.internal.DxSpace": oooi_DxSpace.$clinit(); return oooi_DxSpace;
        case "org.ode4j.ode.internal.libccd.CCD$ccd_center_fn": oooil_CCD$ccd_center_fn.$clinit(); return oooil_CCD$ccd_center_fn;
        case "org.ksdfv.thelema.teavm.TvmGL$renderBuffers$1": oktt_TvmGL$renderBuffers$1.$clinit(); return oktt_TvmGL$renderBuffers$1;
        case "org.teavm.platform.Platform": otp_Platform.$clinit(); return otp_Platform;
        case "org.ksdfv.thelema.g3d.anim.IAnim$DefaultImpls": oktga_IAnim$DefaultImpls.$clinit(); return oktga_IAnim$DefaultImpls;
        case "org.ksdfv.thelema.shader.post.PostShader": oktsp_PostShader.$clinit(); return oktsp_PostShader;
        case "kotlin.TuplesKt": k_TuplesKt.$clinit(); return k_TuplesKt;
        case "java.nio.charset.CodingErrorAction": jnc_CodingErrorAction.$clinit(); return jnc_CodingErrorAction;
        case "org.ksdfv.thelema.texture.ITexture2D$DefaultImpls": oktt_ITexture2D$DefaultImpls.$clinit(); return oktt_ITexture2D$DefaultImpls;
        case "org.ode4j.ode.internal.DxCapsule$CollideCapsuleCapsule": oooi_DxCapsule$CollideCapsuleCapsule.$clinit(); return oooi_DxCapsule$CollideCapsuleCapsule;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$10": oktgg_IGLTFMaterial$read$10.$clinit(); return oktgg_IGLTFMaterial$read$10;
        case "org.ksdfv.thelema.utils.LOG": oktu_LOG.$clinit(); return oktu_LOG;
        case "org.ksdfv.thelema.g3d.anim.AnimPlayer": oktga_AnimPlayer.$clinit(); return oktga_AnimPlayer;
        case "kotlin.collections.CollectionsKt__CollectionsJVMKt": kc_CollectionsKt__CollectionsJVMKt.$clinit(); return kc_CollectionsKt__CollectionsJVMKt;
        case "org.ode4j.ode.DSpace": ooo_DSpace.$clinit(); return ooo_DSpace;
        case "org.ode4j.ode.internal.Objects_H$CloneableParameter": oooi_Objects_H$CloneableParameter.$clinit(); return oooi_Objects_H$CloneableParameter;
        case "java.util.regex.DotQuantifierSet": jur_DotQuantifierSet.$clinit(); return jur_DotQuantifierSet;
        case "org.teavm.classlib.impl.text.FloatAnalyzer": otcit_FloatAnalyzer.$clinit(); return otcit_FloatAnalyzer;
        case "kotlin.KotlinNullPointerException": k_KotlinNullPointerException.$clinit(); return k_KotlinNullPointerException;
        case "java.util.HashMap$ValueIterator": ju_HashMap$ValueIterator.$clinit(); return ju_HashMap$ValueIterator;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$4$1": oktgg_IGLTFMaterial$read$4$1.$clinit(); return oktgg_IGLTFMaterial$read$4$1;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$4$2": oktgg_IGLTFMaterial$read$4$2.$clinit(); return oktgg_IGLTFMaterial$read$4$2;
        case "kotlin.collections.CollectionsKt___CollectionsKt": kc_CollectionsKt___CollectionsKt.$clinit(); return kc_CollectionsKt___CollectionsKt;
        case "java.util.regex.AbstractCharClass$LazyJavaJavaIdentifierStart$1": jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1.$clinit(); return jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1;
        case "org.ksdfv.thelema.test.shaders.FXAATest": oktts_FXAATest.$clinit(); return oktts_FXAATest;
        case "java.lang.ConsoleOutputStreamStdout": jl_ConsoleOutputStreamStdout.$clinit(); return jl_ConsoleOutputStreamStdout;
        case "java.util.regex.CharClass$3": jur_CharClass$3.$clinit(); return jur_CharClass$3;
        case "java.util.regex.CharClass$4": jur_CharClass$4.$clinit(); return jur_CharClass$4;
        case "org.ode4j.ode.internal.DxTriMesh": oooi_DxTriMesh.$clinit(); return oooi_DxTriMesh;
        case "java.util.regex.CharClass$1": jur_CharClass$1.$clinit(); return jur_CharClass$1;
        case "java.util.regex.CharClass$2": jur_CharClass$2.$clinit(); return jur_CharClass$2;
        case "org.ode4j.ode.internal.CollideCylinderTrimesh": oooi_CollideCylinderTrimesh.$clinit(); return oooi_CollideCylinderTrimesh;
        case "java.util.regex.CharClass$7": jur_CharClass$7.$clinit(); return jur_CharClass$7;
        case "java.util.regex.CharClass$8": jur_CharClass$8.$clinit(); return jur_CharClass$8;
        case "java.util.regex.CharClass$5": jur_CharClass$5.$clinit(); return jur_CharClass$5;
        case "java.util.regex.CharClass$6": jur_CharClass$6.$clinit(); return jur_CharClass$6;
        case "java.math.BigDecimal": jm_BigDecimal.$clinit(); return jm_BigDecimal;
        case "org.ode4j.ode.DCapsule": ooo_DCapsule.$clinit(); return ooo_DCapsule;
        case "java.util.regex.CharClass$9": jur_CharClass$9.$clinit(); return jur_CharClass$9;
        case "java.lang.Character": jl_Character.$clinit(); return jl_Character;
        case "org.ksdfv.thelema.mesh.IndexBufferObject$Companion": oktm_IndexBufferObject$Companion.$clinit(); return oktm_IndexBufferObject$Companion;
        case "org.ksdfv.thelema.mesh.IVertexInput$DefaultImpls": oktm_IVertexInput$DefaultImpls.$clinit(); return oktm_IVertexInput$DefaultImpls;
        case "org.ode4j.ode.DBody": ooo_DBody.$clinit(); return ooo_DBody;
        case "org.ode4j.ode.threading.task.SameThreadTaskExecutor": ooott_SameThreadTaskExecutor.$clinit(); return ooott_SameThreadTaskExecutor;
        case "org.ksdfv.thelema.texture.IFrameBuffer": oktt_IFrameBuffer.$clinit(); return oktt_IFrameBuffer;
        case "org.ode4j.ode.internal.joints.Info2DescrQuickStep": oooij_Info2DescrQuickStep.$clinit(); return oooij_Info2DescrQuickStep;
        case "org.ksdfv.thelema.phys.ode4j.IOdeGeom$Companion": oktpo_IOdeGeom$Companion.$clinit(); return oktpo_IOdeGeom$Companion;
        case "org.ksdfv.thelema.shader.post.MotionBlur$render$1": oktsp_MotionBlur$render$1.$clinit(); return oktsp_MotionBlur$render$1;
        case "java.lang.Exception": jl_Exception.$clinit(); return jl_Exception;
        case "org.ode4j.ode.internal.GimpactDataPreprocessor": oooi_GimpactDataPreprocessor.$clinit(); return oooi_GimpactDataPreprocessor;
        case "org.ksdfv.thelema.shader.glsl.GLSLType": oktsg_GLSLType.$clinit(); return oktsg_GLSLType;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAnimation": oktgg_GLTFAnimation.$clinit(); return oktgg_GLTFAnimation;
        case "org.ksdfv.thelema.test.mesh.PlaneMeshBuilderTest$testMain$2": okttm_PlaneMeshBuilderTest$testMain$2.$clinit(); return okttm_PlaneMeshBuilderTest$testMain$2;
        case "org.ksdfv.thelema.texture.IFrameBuffer$DefaultImpls": oktt_IFrameBuffer$DefaultImpls.$clinit(); return oktt_IFrameBuffer$DefaultImpls;
        case "kotlin.sequences.SequencesKt__SequencesKt": ks_SequencesKt__SequencesKt.$clinit(); return ks_SequencesKt__SequencesKt;
        case "org.ksdfv.thelema.test.CubeModel$Companion": oktt_CubeModel$Companion.$clinit(); return oktt_CubeModel$Companion;
        case "java.lang.reflect.AnnotatedElement": jlr_AnnotatedElement.$clinit(); return jlr_AnnotatedElement;
        case "org.ksdfv.thelema.test.shaders.GBufferBaseTest$testMain$1$1": oktts_GBufferBaseTest$testMain$1$1.$clinit(); return oktts_GBufferBaseTest$testMain$1$1;
        case "org.ode4j.ode.internal.gimpact.GimTrimeshTrimeshCol": oooig_GimTrimeshTrimeshCol.$clinit(); return oooig_GimTrimeshTrimeshCol;
        case "org.ksdfv.thelema.test.CubeModel": oktt_CubeModel.$clinit(); return oktt_CubeModel;
        case "org.ksdfv.thelema.teavm.TvmGL$textures$1": oktt_TvmGL$textures$1.$clinit(); return oktt_TvmGL$textures$1;
        case "org.ode4j.ode.internal.CollisionLibccd$CollideBoxCylinderCCD": oooi_CollisionLibccd$CollideBoxCylinderCCD.$clinit(); return oooi_CollisionLibccd$CollideBoxCylinderCCD;
        case "com.github.cliftonlabs.json_simple.Yytoken$Types": cgcj_Yytoken$Types.$clinit(); return cgcj_Yytoken$Types;
        case "java.util.regex.RelCompositeGroupQuantifierSet": jur_RelCompositeGroupQuantifierSet.$clinit(); return jur_RelCompositeGroupQuantifierSet;
        case "java.util.ArrayList": ju_ArrayList.$clinit(); return ju_ArrayList;
        case "java.lang.IllegalMonitorStateException": jl_IllegalMonitorStateException.$clinit(); return jl_IllegalMonitorStateException;
        case "org.ksdfv.thelema.test.shaders.MotionBlurBaseTest$testMain$2$2": oktts_MotionBlurBaseTest$testMain$2$2.$clinit(); return oktts_MotionBlurBaseTest$testMain$2$2;
        case "org.ksdfv.thelema.test.shaders.MotionBlurBaseTest$testMain$2$1": oktts_MotionBlurBaseTest$testMain$2$1.$clinit(); return oktts_MotionBlurBaseTest$testMain$2$1;
        case "org.ode4j.ode.internal.CollideSpaceGeom$1": oooi_CollideSpaceGeom$1.$clinit(); return oooi_CollideSpaceGeom$1;
        case "java.util.regex.RelAltGroupQuantifierSet": jur_RelAltGroupQuantifierSet.$clinit(); return jur_RelAltGroupQuantifierSet;
        case "org.ode4j.ode.internal.cpp4j.Cstdlib$Random31": oooic_Cstdlib$Random31.$clinit(); return oooic_Cstdlib$Random31;
        case "org.ksdfv.thelema.g3d.anim.IAnimTrack": oktga_IAnimTrack.$clinit(); return oktga_IAnimTrack;
        case "java.nio.charset.Charset$Charsets": jnc_Charset$Charsets.$clinit(); return jnc_Charset$Charsets;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$14$1": oktgg_GLTF$read$14$1.$clinit(); return oktgg_GLTF$read$14$1;
        case "org.ksdfv.thelema.test.shaders.glsl.MotionBlurTest$testMain$3$1": okttsg_MotionBlurTest$testMain$3$1.$clinit(); return okttsg_MotionBlurTest$testMain$3$1;
        case "org.ksdfv.thelema.test.shaders.glsl.MotionBlurTest$testMain$3$2": okttsg_MotionBlurTest$testMain$3$2.$clinit(); return okttsg_MotionBlurTest$testMain$3$2;
        case "org.ode4j.ode.internal.DxRay$CollideRaySphere": oooi_DxRay$CollideRaySphere.$clinit(); return oooi_DxRay$CollideRaySphere;
        case "org.ksdfv.thelema.teavm.TvmUInt8Array$Companion": oktt_TvmUInt8Array$Companion.$clinit(); return oktt_TvmUInt8Array$Companion;
        case "org.ksdfv.thelema.test.TestGroup": oktt_TestGroup.$clinit(); return oktt_TestGroup;
        case "org.ode4j.ode.internal.cpp4j.java.RefInt": oooicj_RefInt.$clinit(); return oooicj_RefInt;
        case "org.ksdfv.thelema.g3d.IScene": oktg_IScene.$clinit(); return oktg_IScene;
        case "org.ksdfv.thelema.test.shaders.GBufferBaseTest$testMain$1$3": oktts_GBufferBaseTest$testMain$1$3.$clinit(); return oktts_GBufferBaseTest$testMain$1$3;
        case "org.ksdfv.thelema.test.shaders.GBufferBaseTest$testMain$1$2": oktts_GBufferBaseTest$testMain$1$2.$clinit(); return oktts_GBufferBaseTest$testMain$1$2;
        case "org.ksdfv.thelema.test.shaders.GBufferBaseTest$testMain$1$5": oktts_GBufferBaseTest$testMain$1$5.$clinit(); return oktts_GBufferBaseTest$testMain$1$5;
        case "org.ksdfv.thelema.test.shaders.GBufferBaseTest$testMain$1$4": oktts_GBufferBaseTest$testMain$1$4.$clinit(); return oktts_GBufferBaseTest$testMain$1$4;
        case "org.ksdfv.thelema.g3d.node.ITransformNode$DefaultImpls": oktgn_ITransformNode$DefaultImpls.$clinit(); return oktgn_ITransformNode$DefaultImpls;
        case "org.ksdfv.thelema.shader.glsl.ShaderData": oktsg_ShaderData.$clinit(); return oktsg_ShaderData;
        case "org.ksdfv.thelema.g3d.IObject3D": oktg_IObject3D.$clinit(); return oktg_IObject3D;
        case "kotlin.collections.CollectionsKt___CollectionsJvmKt": kc_CollectionsKt___CollectionsJvmKt.$clinit(); return kc_CollectionsKt___CollectionsJvmKt;
        case "org.ksdfv.thelema.teavm.TvmGL$programs$1": oktt_TvmGL$programs$1.$clinit(); return oktt_TvmGL$programs$1;
        case "org.ksdfv.thelema.utils.AsyncArrayList": oktu_AsyncArrayList.$clinit(); return oktu_AsyncArrayList;
        case "org.ksdfv.thelema.teavm.TvmSound$pool$1": oktt_TvmSound$pool$1.$clinit(); return oktt_TvmSound$pool$1;
        case "org.ode4j.ode.internal.libccd.CCD$1": oooil_CCD$1.$clinit(); return oooil_CCD$1;
        case "org.ksdfv.thelema.teavm.TvmGL$BufferWrap": oktt_TvmGL$BufferWrap.$clinit(); return oktt_TvmGL$BufferWrap;
        case "java.util.regex.PatternSyntaxException": jur_PatternSyntaxException.$clinit(); return jur_PatternSyntaxException;
        case "com.github.cliftonlabs.json_simple.Yylex": cgcj_Yylex.$clinit(); return cgcj_Yylex;
        case "org.ksdfv.thelema.test.shaders.glsl.EmissionBloomTest$testMain$1$1": okttsg_EmissionBloomTest$testMain$1$1.$clinit(); return okttsg_EmissionBloomTest$testMain$1$1;
        case "org.ksdfv.thelema.shader.glsl.GLSL": oktsg_GLSL.$clinit(); return oktsg_GLSL;
        case "org.ksdfv.thelema.teavm.TvmGL$UniformLocationWrap": oktt_TvmGL$UniformLocationWrap.$clinit(); return oktt_TvmGL$UniformLocationWrap;
        case "org.ksdfv.thelema.mesh.IScreenQuad$DefaultImpls": oktm_IScreenQuad$DefaultImpls.$clinit(); return oktm_IScreenQuad$DefaultImpls;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSparse$Indices$read$1": oktgg_GLTFSparse$Indices$read$1.$clinit(); return oktgg_GLTFSparse$Indices$read$1;
        case "java.util.regex.Pattern": jur_Pattern.$clinit(); return jur_Pattern;
        case "java.io.UnsupportedEncodingException": ji_UnsupportedEncodingException.$clinit(); return ji_UnsupportedEncodingException;
        case "org.ksdfv.thelema.g3d.gltf.GLTFTexture$read$1": oktgg_GLTFTexture$read$1.$clinit(); return oktgg_GLTFTexture$read$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFTexture$read$2": oktgg_GLTFTexture$read$2.$clinit(); return oktgg_GLTFTexture$read$2;
        case "org.ode4j.ode.internal.DxConvex": oooi_DxConvex.$clinit(); return oooi_DxConvex;
        case "org.ode4j.ode.internal.gimpact.GimRadixSort": oooig_GimRadixSort.$clinit(); return oooig_GimRadixSort;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$4$1": oktgg_GLTF$read$4$1.$clinit(); return oktgg_GLTF$read$4$1;
        case "org.ode4j.ode.internal.DxSphere$CollideSphereBox": oooi_DxSphere$CollideSphereBox.$clinit(); return oooi_DxSphere$CollideSphereBox;
        case "java.util.regex.UnicodeCategoryScope": jur_UnicodeCategoryScope.$clinit(); return jur_UnicodeCategoryScope;
        case "kotlin.sequences.SequencesKt__SequencesJVMKt": ks_SequencesKt__SequencesJVMKt.$clinit(); return ks_SequencesKt__SequencesJVMKt;
        case "org.ksdfv.thelema.teavm.TeaVMApp$2": oktt_TeaVMApp$2.$clinit(); return oktt_TeaVMApp$2;
        case "org.ksdfv.thelema.g3d.anim.AnimPlayer$AnimationDesc": oktga_AnimPlayer$AnimationDesc.$clinit(); return oktga_AnimPlayer$AnimationDesc;
        case "org.ode4j.ode.internal.cpp4j.Cmath": oooic_Cmath.$clinit(); return oooic_Cmath;
        case "org.ksdfv.thelema.teavm.TeaVMApp$1": oktt_TeaVMApp$1.$clinit(); return oktt_TeaVMApp$1;
        case "org.ksdfv.thelema.data.IFloatData": oktd_IFloatData.$clinit(); return oktd_IFloatData;
        case "org.ode4j.ode.internal.DxSpace$DataCallback": oooi_DxSpace$DataCallback.$clinit(); return oooi_DxSpace$DataCallback;
        case "org.teavm.classlib.impl.text.FloatAnalyzer$Result": otcit_FloatAnalyzer$Result.$clinit(); return otcit_FloatAnalyzer$Result;
        case "org.ksdfv.thelema.phys.IPhys": oktp_IPhys.$clinit(); return oktp_IPhys;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$8$1": oktgg_IGLTFMaterial$read$8$1.$clinit(); return oktgg_IGLTFMaterial$read$8$1;
        case "org.ksdfv.thelema.g3d.gltf.IGLTFMaterial$read$8$2": oktgg_IGLTFMaterial$read$8$2.$clinit(); return oktgg_IGLTFMaterial$read$8$2;
        case "org.ksdfv.thelema.shader.glsl.SplitVec4Node$Companion": oktsg_SplitVec4Node$Companion.$clinit(); return oktsg_SplitVec4Node$Companion;
        case "java.io.InputStream": ji_InputStream.$clinit(); return ji_InputStream;
        case "java.util.regex.AbstractCharClass$LazyJavaWhitespace$1": jur_AbstractCharClass$LazyJavaWhitespace$1.$clinit(); return jur_AbstractCharClass$LazyJavaWhitespace$1;
        case "org.ode4j.ode.internal.DxQuickStep$dxQuickStepperStage0BodiesCallContext": oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext.$clinit(); return oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext;
        case "java.util.regex.AbstractCharClass$LazyJavaJavaIdentifierStart": jur_AbstractCharClass$LazyJavaJavaIdentifierStart.$clinit(); return jur_AbstractCharClass$LazyJavaJavaIdentifierStart;
        case "org.ksdfv.thelema.shader.glsl.GLSL$2": oktsg_GLSL$2.$clinit(); return oktsg_GLSL$2;
        case "org.ksdfv.thelema.shader.glsl.GLSL$1": oktsg_GLSL$1.$clinit(); return oktsg_GLSL$1;
        case "org.teavm.jso.typedarrays.Uint8Array": otjt_Uint8Array.$clinit(); return otjt_Uint8Array;
        case "org.ksdfv.thelema.shader.glsl.GLSL$6": oktsg_GLSL$6.$clinit(); return oktsg_GLSL$6;
        case "org.ksdfv.thelema.shader.glsl.GLSL$5": oktsg_GLSL$5.$clinit(); return oktsg_GLSL$5;
        case "org.ksdfv.thelema.shader.glsl.GLSL$4": oktsg_GLSL$4.$clinit(); return oktsg_GLSL$4;
        case "org.ksdfv.thelema.shader.glsl.GLSL$3": oktsg_GLSL$3.$clinit(); return oktsg_GLSL$3;
        case "org.ksdfv.thelema.shader.glsl.GLSL$9": oktsg_GLSL$9.$clinit(); return oktsg_GLSL$9;
        case "org.ksdfv.thelema.shader.glsl.GLSL$8": oktsg_GLSL$8.$clinit(); return oktsg_GLSL$8;
        case "java.util.Map": ju_Map.$clinit(); return ju_Map;
        case "org.ksdfv.thelema.shader.glsl.GLSL$7": oktsg_GLSL$7.$clinit(); return oktsg_GLSL$7;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$12": oktgg_GLTF$read$12.$clinit(); return oktgg_GLTF$read$12;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$11": oktgg_GLTF$read$11.$clinit(); return oktgg_GLTF$read$11;
        case "java.util.regex.AbstractCharClass$LazyJavaLowerCase": jur_AbstractCharClass$LazyJavaLowerCase.$clinit(); return jur_AbstractCharClass$LazyJavaLowerCase;
        case "org.ksdfv.thelema.mesh.build.MeshBuilder$createVerticesFloat$1": oktmb_MeshBuilder$createVerticesFloat$1.$clinit(); return oktmb_MeshBuilder$createVerticesFloat$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$10": oktgg_GLTF$read$10.$clinit(); return oktgg_GLTF$read$10;
        case "org.ksdfv.thelema.utils.Color": oktu_Color.$clinit(); return oktu_Color;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$17": oktgg_GLTF$read$17.$clinit(); return oktgg_GLTF$read$17;
        case "org.ksdfv.thelema.test.shaders.FXAATest$testMain$1$1": oktts_FXAATest$testMain$1$1.$clinit(); return oktts_FXAATest$testMain$1$1;
        case "org.ode4j.math.DMatrix3": oom_DMatrix3.$clinit(); return oom_DMatrix3;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$16": oktgg_GLTF$read$16.$clinit(); return oktgg_GLTF$read$16;
        case "org.ksdfv.thelema.utils.IResourceLoader": oktu_IResourceLoader.$clinit(); return oktu_IResourceLoader;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$15": oktgg_GLTF$read$15.$clinit(); return oktgg_GLTF$read$15;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$14": oktgg_GLTF$read$14.$clinit(); return oktgg_GLTF$read$14;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$13": oktgg_GLTF$read$13.$clinit(); return oktgg_GLTF$read$13;
        case "org.ksdfv.thelema.math.IMat4$Companion$Build$1": oktm_IMat4$Companion$Build$1.$clinit(); return oktm_IMat4$Companion$Build$1;
        case "org.ksdfv.thelema.test.mesh.PlaneMeshBuilderTest": okttm_PlaneMeshBuilderTest.$clinit(); return okttm_PlaneMeshBuilderTest;
        case "java.util.GenericEnumSet": ju_GenericEnumSet.$clinit(); return ju_GenericEnumSet;
        case "org.ksdfv.thelema.data.IIntData": oktd_IIntData.$clinit(); return oktd_IIntData;
        case "java.lang.ClassLoader": jl_ClassLoader.$clinit(); return jl_ClassLoader;
        case "java.util.ConcurrentModificationException": ju_ConcurrentModificationException.$clinit(); return ju_ConcurrentModificationException;
        case "java.util.Hashtable$1": ju_Hashtable$1.$clinit(); return ju_Hashtable$1;
        case "java.util.Hashtable$2": ju_Hashtable$2.$clinit(); return ju_Hashtable$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTFMaterial": oktgg_GLTFMaterial.$clinit(); return oktgg_GLTFMaterial;
        case "org.ksdfv.thelema.test.shaders.CascadedShadowMappingBaseTest": oktts_CascadedShadowMappingBaseTest.$clinit(); return oktts_CascadedShadowMappingBaseTest;
        case "org.ksdfv.thelema.shader.glsl.SkyboxVertexNode": oktsg_SkyboxVertexNode.$clinit(); return oktsg_SkyboxVertexNode;
        case "kotlin.sequences.SequencesKt___SequencesJvmKt": ks_SequencesKt___SequencesJvmKt.$clinit(); return ks_SequencesKt___SequencesJvmKt;
        case "org.ksdfv.thelema.shader.post.Threshold$Companion": oktsp_Threshold$Companion.$clinit(); return oktsp_Threshold$Companion;
        case "org.ode4j.ode.internal.CollideBoxBox": oooi_CollideBoxBox.$clinit(); return oooi_CollideBoxBox;
        case "org.ksdfv.thelema.g3d.anim.AnimPlayer$Companion$vec4Pool$1": oktga_AnimPlayer$Companion$vec4Pool$1.$clinit(); return oktga_AnimPlayer$Companion$vec4Pool$1;
        case "org.ksdfv.thelema.shader.glsl.MergeVec4": oktsg_MergeVec4.$clinit(); return oktsg_MergeVec4;
        case "org.ksdfv.thelema.audio.mock.MockAudio": oktam_MockAudio.$clinit(); return oktam_MockAudio;
        case "kotlin.jvm.internal.Lambda": kji_Lambda.$clinit(); return kji_Lambda;
        case "org.teavm.jso.typedarrays.ArrayBufferView": otjt_ArrayBufferView.$clinit(); return otjt_ArrayBufferView;
        case "org.ksdfv.thelema.test.SkyboxTest": oktt_SkyboxTest.$clinit(); return oktt_SkyboxTest;
        case "org.ksdfv.thelema.test.shaders.BloomBaseTest$testMain$2$4": oktts_BloomBaseTest$testMain$2$4.$clinit(); return oktts_BloomBaseTest$testMain$2$4;
        case "org.ksdfv.thelema.shader.IShader": okts_IShader.$clinit(); return okts_IShader;
        case "org.ksdfv.thelema.test.shaders.BloomBaseTest$testMain$2$3": oktts_BloomBaseTest$testMain$2$3.$clinit(); return oktts_BloomBaseTest$testMain$2$3;
        case "org.ksdfv.thelema.test.shaders.BloomBaseTest$testMain$2$2": oktts_BloomBaseTest$testMain$2$2.$clinit(); return oktts_BloomBaseTest$testMain$2$2;
        case "org.ksdfv.thelema.test.shaders.BloomBaseTest$testMain$2$1": oktts_BloomBaseTest$testMain$2$1.$clinit(); return oktts_BloomBaseTest$testMain$2$1;
        case "java.util.regex.AbstractCharClass$LazyJavaUpperCase$1": jur_AbstractCharClass$LazyJavaUpperCase$1.$clinit(); return jur_AbstractCharClass$LazyJavaUpperCase$1;
        case "org.ksdfv.thelema.json.IJsonObjectIO": oktj_IJsonObjectIO.$clinit(); return oktj_IJsonObjectIO;
        case "java.net.URLDecoder": jn_URLDecoder.$clinit(); return jn_URLDecoder;
        case "org.ksdfv.thelema.mesh.build.PlaneMeshBuilder$1": oktmb_PlaneMeshBuilder$1.$clinit(); return oktmb_PlaneMeshBuilder$1;
        case "org.teavm.platform.plugin.ResourceAccessor": otpp_ResourceAccessor.$clinit(); return otpp_ResourceAccessor;
        case "org.ode4j.ode.internal.OdeInit": oooi_OdeInit.$clinit(); return oooi_OdeInit;
        case "java.util.regex.AbstractCharClass$LazyJavaIdentifierIgnorable$1": jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1.$clinit(); return jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1;
        case "java.nio.charset.impl.BufferedDecoder": jnci_BufferedDecoder.$clinit(); return jnci_BufferedDecoder;
        case "org.ksdfv.thelema.shader.post.FXAA$Companion": oktsp_FXAA$Companion.$clinit(); return oktsp_FXAA$Companion;
        case "org.ksdfv.thelema.audio.mock.MockSound": oktam_MockSound.$clinit(); return oktam_MockSound;
        case "org.ode4j.ode.internal.libccd.CCD$ccd_support_fn": oooil_CCD$ccd_support_fn.$clinit(); return oooil_CCD$ccd_support_fn;
        case "org.ksdfv.thelema.shader.glsl.IShaderData": oktsg_IShaderData.$clinit(); return oktsg_IShaderData;
        case "java.util.Collection": ju_Collection.$clinit(); return ju_Collection;
        case "org.ksdfv.thelema.teavm.TvmGL$GLObjectArray": oktt_TvmGL$GLObjectArray.$clinit(); return oktt_TvmGL$GLObjectArray;
        case "org.ode4j.ode.internal.DxQuickStep$dxQuickStepperStage3CallContext": oooi_DxQuickStep$dxQuickStepperStage3CallContext.$clinit(); return oooi_DxQuickStep$dxQuickStepperStage3CallContext;
        case "org.ksdfv.thelema.test.shaders.glsl.MotionBlurTest$testMain$3": okttsg_MotionBlurTest$testMain$3.$clinit(); return okttsg_MotionBlurTest$testMain$3;
        case "org.ksdfv.thelema.test.shaders.glsl.MotionBlurTest$testMain$2": okttsg_MotionBlurTest$testMain$2.$clinit(); return okttsg_MotionBlurTest$testMain$2;
        case "org.ksdfv.thelema.g3d.gltf.GLTF$read$9$1": oktgg_GLTF$read$9$1.$clinit(); return oktgg_GLTF$read$9$1;
        case "org.teavm.jso.browser.Performance": otjb_Performance.$clinit(); return otjb_Performance;
        case "java.util.Queue": ju_Queue.$clinit(); return ju_Queue;
        case "org.ksdfv.thelema.test.shaders.glsl.SSAOTest$testMain$1$3$1": okttsg_SSAOTest$testMain$1$3$1.$clinit(); return okttsg_SSAOTest$testMain$1$3$1;
        case "java.nio.ByteBufferImpl": jn_ByteBufferImpl.$clinit(); return jn_ByteBufferImpl;
        case "org.ode4j.ode.internal.joints.DxJoint$Info1": oooij_DxJoint$Info1.$clinit(); return oooij_DxJoint$Info1;
        case "org.ksdfv.thelema.phys.ode4j.OdeRigidBody": oktpo_OdeRigidBody.$clinit(); return oktpo_OdeRigidBody;
        case "org.ode4j.ode.internal.DxQuickStep": oooi_DxQuickStep.$clinit(); return oooi_DxQuickStep;
        case "org.ode4j.ode.internal.Misc": oooi_Misc.$clinit(); return oooi_Misc;
        case "org.ksdfv.thelema.g3d.IObject3D$DefaultImpls": oktg_IObject3D$DefaultImpls.$clinit(); return oktg_IObject3D$DefaultImpls;
        case "kotlin.text.Charsets": kt_Charsets.$clinit(); return kt_Charsets;
        case "org.ksdfv.thelema.shader.glsl.GBufferOutputNode": oktsg_GBufferOutputNode.$clinit(); return oktsg_GBufferOutputNode;
        case "org.ksdfv.thelema.g3d.Object3D": oktg_Object3D.$clinit(); return oktg_Object3D;
        case "org.ksdfv.thelema.audio.ISound": okta_ISound.$clinit(); return okta_ISound;
        case "java.util.LinkedList": ju_LinkedList.$clinit(); return ju_LinkedList;
        case "org.ksdfv.thelema.test.shaders.ShadowMappingBaseTest$testMain$2": oktts_ShadowMappingBaseTest$testMain$2.$clinit(); return oktts_ShadowMappingBaseTest$testMain$2;
        case "org.teavm.jso.core.JSString": otjc_JSString.$clinit(); return otjc_JSString;
        case "org.ksdfv.thelema.shader.IShader$DefaultImpls": okts_IShader$DefaultImpls.$clinit(); return okts_IShader$DefaultImpls;
        case "org.ode4j.ode.internal.DxConvex$Edge": oooi_DxConvex$Edge.$clinit(); return oooi_DxConvex$Edge;
        case "org.teavm.interop.AsyncCallback": oti_AsyncCallback.$clinit(); return oti_AsyncCallback;
        case "org.ode4j.ode.internal.cpp4j.Csetjmp": oooic_Csetjmp.$clinit(); return oooic_Csetjmp;
        case "org.teavm.jso.ajax.XMLHttpRequest": otja_XMLHttpRequest.$clinit(); return otja_XMLHttpRequest;
        case "org.ksdfv.thelema.net.NET": oktn_NET.$clinit(); return oktn_NET;
        case "java.util.AbstractMap": ju_AbstractMap.$clinit(); return ju_AbstractMap;
        case "kotlin.ranges.RangesKt___RangesKt": kr_RangesKt___RangesKt.$clinit(); return kr_RangesKt___RangesKt;
        case "org.ksdfv.thelema.mesh.ScreenQuad$TextureRenderer": oktm_ScreenQuad$TextureRenderer.$clinit(); return oktm_ScreenQuad$TextureRenderer;
        case "kotlin.ranges.IntRange$Companion": kr_IntRange$Companion.$clinit(); return kr_IntRange$Companion;
        case "org.ode4j.ode.internal.DxQuickStep$10": oooi_DxQuickStep$10.$clinit(); return oooi_DxQuickStep$10;
        case "java.lang.System": jl_System.$clinit(); return jl_System;
        case "java.math.Conversion": jm_Conversion.$clinit(); return jm_Conversion;
        case "org.ksdfv.thelema.data.IData": oktd_IData.$clinit(); return oktd_IData;
        case "org.ksdfv.thelema.math.IVec4$DefaultImpls": oktm_IVec4$DefaultImpls.$clinit(); return oktm_IVec4$DefaultImpls;
        case "java.util.regex.AbstractCharClass$LazyXDigit": jur_AbstractCharClass$LazyXDigit.$clinit(); return jur_AbstractCharClass$LazyXDigit;
        case "org.ksdfv.thelema.teavm.TvmUInt16Array": oktt_TvmUInt16Array.$clinit(); return oktt_TvmUInt16Array;
        case "org.ode4j.ode.internal.cpp4j.java.RefFloat": oooicj_RefFloat.$clinit(); return oooicj_RefFloat;
        case "java.util.regex.Matcher": jur_Matcher.$clinit(); return jur_Matcher;
        case "java.util.regex.DotAllSet": jur_DotAllSet.$clinit(); return jur_DotAllSet;
        case "org.ode4j.ode.internal.gimpact.GimTrimeshSphereCollision": oooig_GimTrimeshSphereCollision.$clinit(); return oooig_GimTrimeshSphereCollision;
        case "org.ksdfv.thelema.test.mesh.MeshTest": okttm_MeshTest.$clinit(); return okttm_MeshTest;
        case "java.util.regex.AbstractCharClass$LazyJavaUpperCase": jur_AbstractCharClass$LazyJavaUpperCase.$clinit(); return jur_AbstractCharClass$LazyJavaUpperCase;
        case "org.ksdfv.thelema.test.shaders.ThresholdTest": oktts_ThresholdTest.$clinit(); return oktts_ThresholdTest;
        case "org.ode4j.ode.internal.DxQuickStep$21": oooi_DxQuickStep$21.$clinit(); return oooi_DxQuickStep$21;
        case "org.ode4j.ode.internal.DxQuickStep$20": oooi_DxQuickStep$20.$clinit(); return oooi_DxQuickStep$20;
        case "org.ode4j.ode.internal.gimpact.GimRadixSort$3": oooig_GimRadixSort$3.$clinit(); return oooig_GimRadixSort$3;
        case "kotlin.jvm.internal.Ref$IntRef": kji_Ref$IntRef.$clinit(); return kji_Ref$IntRef;
        case "org.ode4j.ode.internal.gimpact.GimRadixSort$1": oooig_GimRadixSort$1.$clinit(); return oooig_GimRadixSort$1;
        case "org.ode4j.ode.internal.gimpact.GimRadixSort$2": oooig_GimRadixSort$2.$clinit(); return oooig_GimRadixSort$2;
        case "java.io.FilterOutputStream": ji_FilterOutputStream.$clinit(); return ji_FilterOutputStream;
        case "java.io.Reader": ji_Reader.$clinit(); return ji_Reader;
        case "org.ksdfv.thelema.mesh.IVertexBuffer$Companion": oktm_IVertexBuffer$Companion.$clinit(); return oktm_IVertexBuffer$Companion;
        case "org.ksdfv.thelema.g3d.cam.ActiveCamera": oktgc_ActiveCamera.$clinit(); return oktgc_ActiveCamera;
        case "org.ksdfv.thelema.shader.glsl.PrincipledBSDF": oktsg_PrincipledBSDF.$clinit(); return oktsg_PrincipledBSDF;
        case "org.ode4j.ode.internal.DxQuickStep$19": oooi_DxQuickStep$19.$clinit(); return oooi_DxQuickStep$19;
        case "org.ksdfv.thelema.test.shaders.glsl.EmissionBloomTest": okttsg_EmissionBloomTest.$clinit(); return okttsg_EmissionBloomTest;
        case "org.ode4j.ode.internal.DxQuickStep$18": oooi_DxQuickStep$18.$clinit(); return oooi_DxQuickStep$18;
        case "org.ode4j.ode.internal.DxQuickStep$17": oooi_DxQuickStep$17.$clinit(); return oooi_DxQuickStep$17;
        case "org.ode4j.ode.internal.DxQuickStep$16": oooi_DxQuickStep$16.$clinit(); return oooi_DxQuickStep$16;
        case "org.ode4j.ode.internal.DxQuickStep$15": oooi_DxQuickStep$15.$clinit(); return oooi_DxQuickStep$15;
        case "org.ode4j.ode.internal.DxRay$CollideRayCylinder": oooi_DxRay$CollideRayCylinder.$clinit(); return oooi_DxRay$CollideRayCylinder;
        case "org.ode4j.ode.internal.DxQuickStep$14": oooi_DxQuickStep$14.$clinit(); return oooi_DxQuickStep$14;
        case "org.ode4j.ode.internal.DxQuickStep$13": oooi_DxQuickStep$13.$clinit(); return oooi_DxQuickStep$13;
        case "java.util.regex.WordBoundary": jur_WordBoundary.$clinit(); return jur_WordBoundary;
        case "org.ode4j.ode.internal.DxQuickStep$12": oooi_DxQuickStep$12.$clinit(); return oooi_DxQuickStep$12;
        case "java.lang.SystemClassLoader": jl_SystemClassLoader.$clinit(); return jl_SystemClassLoader;
        case "org.ode4j.ode.internal.DxQuickStep$11": oooi_DxQuickStep$11.$clinit(); return oooi_DxQuickStep$11;
        case "org.ksdfv.thelema.g3d.node.AdapterTransformNode$Companion": oktgn_AdapterTransformNode$Companion.$clinit(); return oktgn_AdapterTransformNode$Companion;
        case "org.ksdfv.thelema.test.shaders.BloomTest$testMain$1$1": oktts_BloomTest$testMain$1$1.$clinit(); return oktts_BloomTest$testMain$1$1;
        case "org.ksdfv.thelema.texture.FrameBufferAttachment": oktt_FrameBufferAttachment.$clinit(); return oktt_FrameBufferAttachment;
        case "org.ksdfv.thelema.g3d.gltf.GLTFBuffer$read$3": oktgg_GLTFBuffer$read$3.$clinit(); return oktgg_GLTFBuffer$read$3;
        case "java.nio.charset.CharacterCodingException": jnc_CharacterCodingException.$clinit(); return jnc_CharacterCodingException;
        case "org.ksdfv.thelema.g3d.gltf.GLTFBuffer$read$2": oktgg_GLTFBuffer$read$2.$clinit(); return oktgg_GLTFBuffer$read$2;
        case "org.teavm.jso.JSObject": otj_JSObject.$clinit(); return otj_JSObject;
        case "org.ksdfv.thelema.fs.IFile": oktf_IFile.$clinit(); return oktf_IFile;
        case "org.ksdfv.thelema.g3d.gltf.GLTFBuffer$read$1": oktgg_GLTFBuffer$read$1.$clinit(); return oktgg_GLTFBuffer$read$1;
        case "java.lang.Double": jl_Double.$clinit(); return jl_Double;
        case "org.ksdfv.thelema.g3d.gltf.GLTFAnimation$read$2$1$1$1$1": oktgg_GLTFAnimation$read$2$1$1$1$1.$clinit(); return oktgg_GLTFAnimation$read$2$1$1$1$1;
        case "org.ksdfv.thelema.mesh.IMesh": oktm_IMesh.$clinit(); return oktm_IMesh;
        case "org.ksdfv.thelema.test.FrameBufferTest$testMain$1": oktt_FrameBufferTest$testMain$1.$clinit(); return oktt_FrameBufferTest$testMain$1;
        case "org.ode4j.ode.internal.DxHashSpace$Node": oooi_DxHashSpace$Node.$clinit(); return oooi_DxHashSpace$Node;
        case "org.ksdfv.thelema.math.IVec2$Companion$Pool$2": oktm_IVec2$Companion$Pool$2.$clinit(); return oktm_IVec2$Companion$Pool$2;
        case "kotlin.comparisons.ComparisonsKt__ComparisonsKt": kc_ComparisonsKt__ComparisonsKt.$clinit(); return kc_ComparisonsKt__ComparisonsKt;
        case "org.ksdfv.thelema.APP$api$1": okt_APP$api$1.$clinit(); return okt_APP$api$1;
        case "org.ksdfv.thelema.math.IVec2$Companion$Pool$1": oktm_IVec2$Companion$Pool$1.$clinit(); return oktm_IVec2$Companion$Pool$1;
        case "org.ode4j.ode.internal.gimpact.GimTriCollision$GIM_TRIPLANES_CACHE": oooig_GimTriCollision$GIM_TRIPLANES_CACHE.$clinit(); return oooig_GimTriCollision$GIM_TRIPLANES_CACHE;
        case "org.ode4j.ode.internal.CollisionLibccd$ccd_sphere_t": oooi_CollisionLibccd$ccd_sphere_t.$clinit(); return oooi_CollisionLibccd$ccd_sphere_t;
        case "org.teavm.jso.browser.Window": otjb_Window.$clinit(); return otjb_Window;
        case "org.ksdfv.thelema.test.shaders.glsl.EmissionBloomTest$testMain$1$1$1": okttsg_EmissionBloomTest$testMain$1$1$1.$clinit(); return okttsg_EmissionBloomTest$testMain$1$1$1;
        case "com.github.cliftonlabs.json_simple.Yytoken$1": cgcj_Yytoken$1.$clinit(); return cgcj_Yytoken$1;
        case "org.ksdfv.thelema.test.shaders.glsl.EmissionBloomTest$testMain$1$1$2": okttsg_EmissionBloomTest$testMain$1$1$2.$clinit(); return okttsg_EmissionBloomTest$testMain$1$1$2;
        case "org.ode4j.ode.internal.DxQuickStep$28": oooi_DxQuickStep$28.$clinit(); return oooi_DxQuickStep$28;
        case "org.ode4j.ode.internal.DxQuickStep$27": oooi_DxQuickStep$27.$clinit(); return oooi_DxQuickStep$27;
        case "org.ode4j.ode.internal.DxQuickStep$26": oooi_DxQuickStep$26.$clinit(); return oooi_DxQuickStep$26;
        case "java.lang.Number": jl_Number.$clinit(); return jl_Number;
        case "org.ode4j.ode.internal.DxQuickStep$25": oooi_DxQuickStep$25.$clinit(); return oooi_DxQuickStep$25;
        case "org.ode4j.ode.internal.DxQuickStep$24": oooi_DxQuickStep$24.$clinit(); return oooi_DxQuickStep$24;
        case "org.ode4j.ode.internal.DxQuickStep$23": oooi_DxQuickStep$23.$clinit(); return oooi_DxQuickStep$23;
        case "org.ode4j.ode.internal.DxQuickStep$22": oooi_DxQuickStep$22.$clinit(); return oooi_DxQuickStep$22;
        case "java.util.regex.AbstractCharClass$LazyJavaWhitespace": jur_AbstractCharClass$LazyJavaWhitespace.$clinit(); return jur_AbstractCharClass$LazyJavaWhitespace;
        case "org.teavm.jso.dom.events.MouseEventTarget": otjde_MouseEventTarget.$clinit(); return otjde_MouseEventTarget;
        case "java.util.Collections$<clinit>$lambda$_61_1": ju_Collections$_clinit_$lambda$_61_1.$clinit(); return ju_Collections$_clinit_$lambda$_61_1;
        case "org.ksdfv.thelema.mesh.IScreenQuad$render$2": oktm_IScreenQuad$render$2.$clinit(); return oktm_IScreenQuad$render$2;
        case "java.util.Collections$<clinit>$lambda$_61_0": ju_Collections$_clinit_$lambda$_61_0.$clinit(); return ju_Collections$_clinit_$lambda$_61_0;
        case "org.ksdfv.thelema.mesh.IScreenQuad$render$1": oktm_IScreenQuad$render$1.$clinit(); return oktm_IScreenQuad$render$1;
        case "org.ode4j.ode.internal.gimpact.GimBufferArrayFloat$GIM_PROCESS_BUFFER_ARRAY_FN": oooig_GimBufferArrayFloat$GIM_PROCESS_BUFFER_ARRAY_FN.$clinit(); return oooig_GimBufferArrayFloat$GIM_PROCESS_BUFFER_ARRAY_FN;
        case "org.ksdfv.thelema.g3d.gltf.GLTFTexture$read$2$2$1$2": oktgg_GLTFTexture$read$2$2$1$2.$clinit(); return oktgg_GLTFTexture$read$2$2$1$2;
        case "kotlin.NotImplementedError": k_NotImplementedError.$clinit(); return k_NotImplementedError;
        case "org.ksdfv.thelema.g3d.gltf.GLTFTexture$read$2$2$1$1": oktgg_GLTFTexture$read$2$2$1$1.$clinit(); return oktgg_GLTFTexture$read$2$2$1$1;
        case "java.util.regex.AbstractSet": jur_AbstractSet.$clinit(); return jur_AbstractSet;
        case "java.nio.CharBufferImpl": jn_CharBufferImpl.$clinit(); return jn_CharBufferImpl;
        case "java.util.regex.AbstractCharClass$LazyJavaMirrored": jur_AbstractCharClass$LazyJavaMirrored.$clinit(); return jur_AbstractCharClass$LazyJavaMirrored;
        case "java.util.regex.AbstractCharClass$LazyJavaISOControl": jur_AbstractCharClass$LazyJavaISOControl.$clinit(); return jur_AbstractCharClass$LazyJavaISOControl;
        case "org.ksdfv.thelema.mesh.build.BoxMeshBuilder$build$1": oktmb_BoxMeshBuilder$build$1.$clinit(); return oktmb_BoxMeshBuilder$build$1;
        case "java.util.regex.HighSurrogateCharSet": jur_HighSurrogateCharSet.$clinit(); return jur_HighSurrogateCharSet;
        case "org.ksdfv.thelema.utils.ResourceLoader": oktu_ResourceLoader.$clinit(); return oktu_ResourceLoader;
        case "org.ksdfv.thelema.g3d.gltf.GLTFNode$read$2$1": oktgg_GLTFNode$read$2$1.$clinit(); return oktgg_GLTFNode$read$2$1;
        case "kotlin.collections.CollectionsKt___CollectionsKt$elementAt$1": kc_CollectionsKt___CollectionsKt$elementAt$1.$clinit(); return kc_CollectionsKt___CollectionsKt$elementAt$1;
        case "org.ode4j.math.DVector3View": oom_DVector3View.$clinit(); return oom_DVector3View;
        case "org.ksdfv.thelema.mesh.build.PlaneMeshBuilder$build$2": oktmb_PlaneMeshBuilder$build$2.$clinit(); return oktmb_PlaneMeshBuilder$build$2;
        case "org.ode4j.ode.internal.processmem.DxUtil": oooip_DxUtil.$clinit(); return oooip_DxUtil;
        case "org.ksdfv.thelema.mesh.build.PlaneMeshBuilder$build$1": oktmb_PlaneMeshBuilder$build$1.$clinit(); return oktmb_PlaneMeshBuilder$build$1;
        case "org.ksdfv.thelema.test.shaders.ThresholdTest$testMain$1": oktts_ThresholdTest$testMain$1.$clinit(); return oktts_ThresholdTest$testMain$1;
        case "org.ode4j.ode.DMass": ooo_DMass.$clinit(); return ooo_DMass;
        case "org.ode4j.ode.internal.DxRay$CollideRayPlane": oooi_DxRay$CollideRayPlane.$clinit(); return oooi_DxRay$CollideRayPlane;
        case "org.ksdfv.thelema.g3d.anim.AnimPlayer$Companion$vec3Pool$1": oktga_AnimPlayer$Companion$vec3Pool$1.$clinit(); return oktga_AnimPlayer$Companion$vec3Pool$1;
        case "org.ksdfv.thelema.phys.PHYS": oktp_PHYS.$clinit(); return oktp_PHYS;
        case "org.ksdfv.thelema.fs.IFS": oktf_IFS.$clinit(); return oktf_IFS;
        case "org.ksdfv.thelema.g3d.node.ITransformNode": oktgn_ITransformNode.$clinit(); return oktgn_ITransformNode;
        case "org.ksdfv.thelema.shader.Shader": okts_Shader.$clinit(); return okts_Shader;
        case "org.ksdfv.thelema.mesh.build.BoxMeshBuilder$Companion": oktmb_BoxMeshBuilder$Companion.$clinit(); return oktmb_BoxMeshBuilder$Companion;
        case "org.ode4j.ode.internal.libccd.CCD$ccd_first_dir_fn": oooil_CCD$ccd_first_dir_fn.$clinit(); return oooil_CCD$ccd_first_dir_fn;
        case "kotlin.sequences.SequencesKt___SequencesKt": ks_SequencesKt___SequencesKt.$clinit(); return ks_SequencesKt___SequencesKt;
        case "org.ksdfv.thelema.g3d.gltf.GLTFPrimitive$read$$inlined$forEach$lambda$1": oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1.$clinit(); return oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1;
        case "org.ksdfv.thelema.g3d.gltf.GLTFPrimitive$read$$inlined$forEach$lambda$2": oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2.$clinit(); return oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2;
        case "org.ksdfv.thelema.mesh.build.BoxMeshBuilder$build$2": oktmb_BoxMeshBuilder$build$2.$clinit(); return oktmb_BoxMeshBuilder$build$2;
        case "org.ksdfv.thelema.data.DataByteOrder": oktd_DataByteOrder.$clinit(); return oktd_DataByteOrder;
        case "java.util.regex.CompositeGroupQuantifierSet": jur_CompositeGroupQuantifierSet.$clinit(); return jur_CompositeGroupQuantifierSet;
        case "kotlin.internal.PlatformImplementations": ki_PlatformImplementations.$clinit(); return ki_PlatformImplementations;
        case "org.ksdfv.thelema.g3d.gltf.GLTFSparse$Indices": oktgg_GLTFSparse$Indices.$clinit(); return oktgg_GLTFSparse$Indices;
        case "org.ode4j.ode.internal.CollisionLibccd$ccd_convex_t": oooi_CollisionLibccd$ccd_convex_t.$clinit(); return oooi_CollisionLibccd$ccd_convex_t;
        case "org.ksdfv.thelema.g3d.gltf.GLTFScene": oktgg_GLTFScene.$clinit(); return oktgg_GLTFScene;
        case "org.ode4j.ode.internal.CollisionLibccd$ccd_box_t": oooi_CollisionLibccd$ccd_box_t.$clinit(); return oooi_CollisionLibccd$ccd_box_t;
        case "org.ksdfv.thelema.shader.post.MotionBlur$Companion": oktsp_MotionBlur$Companion.$clinit(); return oktsp_MotionBlur$Companion;
        case "org.ksdfv.thelema.utils.DefaultLog": oktu_DefaultLog.$clinit(); return oktu_DefaultLog;
        case "org.ksdfv.thelema.json.jsonsimple3.JsonSimple3Object": oktjj_JsonSimple3Object.$clinit(); return oktjj_JsonSimple3Object;
        case "org.ode4j.ode.internal.Objects_H$dxQuickStepParameters": oooi_Objects_H$dxQuickStepParameters.$clinit(); return oooi_Objects_H$dxQuickStepParameters;
        case "org.ode4j.ode.internal.CollideConvexTrimesh": oooi_CollideConvexTrimesh.$clinit(); return oooi_CollideConvexTrimesh;
        case "org.ode4j.ode.internal.ErrorHdl": oooi_ErrorHdl.$clinit(); return oooi_ErrorHdl;
        case "org.ksdfv.thelema.phys.ISphereShape": oktp_ISphereShape.$clinit(); return oktp_ISphereShape;
        case "kotlin.internal.ProgressionUtilKt": ki_ProgressionUtilKt.$clinit(); return ki_ProgressionUtilKt;
        case "java.util.regex.AbstractCharClass$LazySpecialsBlock": jur_AbstractCharClass$LazySpecialsBlock.$clinit(); return jur_AbstractCharClass$LazySpecialsBlock;
        case "org.ode4j.ode.internal.DxQuickStep$dxQuickStepperStage0JointsCallContext": oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext.$clinit(); return oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext;
        case "java.util.Iterator": ju_Iterator.$clinit(); return ju_Iterator;
        case "org.ode4j.ode.internal.DxQuickStep$7": oooi_DxQuickStep$7.$clinit(); return oooi_DxQuickStep$7;
        case "org.ode4j.ode.internal.DxQuickStep$6": oooi_DxQuickStep$6.$clinit(); return oooi_DxQuickStep$6;
        case "org.ode4j.ode.internal.DxQuickStep$5": oooi_DxQuickStep$5.$clinit(); return oooi_DxQuickStep$5;
        case "org.ode4j.ode.internal.DxQuickStep$4": oooi_DxQuickStep$4.$clinit(); return oooi_DxQuickStep$4;
        case "org.ode4j.ode.internal.DxQuickStep$3": oooi_DxQuickStep$3.$clinit(); return oooi_DxQuickStep$3;
        case "org.ode4j.ode.internal.DxQuickStep$2": oooi_DxQuickStep$2.$clinit(); return oooi_DxQuickStep$2;
        case "org.ode4j.ode.internal.DxQuickStep$1": oooi_DxQuickStep$1.$clinit(); return oooi_DxQuickStep$1;
        case "java.util.regex.UnicodeCategory": jur_UnicodeCategory.$clinit(); return jur_UnicodeCategory;
        case "org.ksdfv.thelema.phys.IShape$Companion": oktp_IShape$Companion.$clinit(); return oktp_IShape$Companion;
        case "org.teavm.jso.core.JSArrayReader": otjc_JSArrayReader.$clinit(); return otjc_JSArrayReader;
        case "java.util.Arrays$ArrayAsList": ju_Arrays$ArrayAsList.$clinit(); return ju_Arrays$ArrayAsList;
        case "org.ksdfv.thelema.shader.glsl.ShaderNode": oktsg_ShaderNode.$clinit(); return oktsg_ShaderNode;
        case "org.ksdfv.thelema.json.IJsonArray": oktj_IJsonArray.$clinit(); return oktj_IJsonArray;
        case "org.ode4j.ode.internal.DxQuickStep$9": oooi_DxQuickStep$9.$clinit(); return oooi_DxQuickStep$9;
        case "org.ode4j.ode.internal.DxQuickStep$8": oooi_DxQuickStep$8.$clinit(); return oooi_DxQuickStep$8;
        default: return null;
    }
}
function otp_Platform_getEnumConstants(var$1) {
    var c = '$$enumConstants$$';
    cgcj_Jsoner$DeserializationOptions[c] = cgcj_Jsoner$DeserializationOptions_values;
    ooot_MutexGroup$dxProcessContextMutex[c] = ooot_MutexGroup$dxProcessContextMutex_values;
    cgcj_JsonException$Problems[c] = cgcj_JsonException$Problems_values;
    oooi_DxQuickStep$ReorderingMethod[c] = oooi_DxQuickStep$ReorderingMethod_values;
    oktgg_GLTFSourceType[c] = oktgg_GLTFSourceType_values;
    oooi_OdeInit$EODEINITMODE[c] = oooi_OdeInit$EODEINITMODE_values;
    ooo_OdeConfig$TRIMESH[c] = ooo_OdeConfig$TRIMESH_values;
    cgcj_Jsoner$States[c] = cgcj_Jsoner$States_values;
    cgcj_Yytoken$Types[c] = cgcj_Yytoken$Types_values;
    oktd_DataByteOrder[c] = oktd_DataByteOrder_values;
    otp_Platform_getEnumConstants = function(cls) {
        if (!cls.hasOwnProperty(c)) {
            return null;
        }
        if (typeof cls[c] === "function") {
            cls[c] = cls[c]();
        }
        return cls[c];
    };
    return otp_Platform_getEnumConstants(var$1);
}
function otp_Platform_launchThread($runnable) {
    $runnable.$run();
}
function otp_Platform_postpone($runnable) {
    otp_Platform_schedule($runnable, 0);
}
function otp_Platform_schedule(var$1, var$2) {
    return setTimeout(function() {
        otp_Platform_launchThread(var$1);
    }, var$2);
}
function otp_Platform_createQueue() {
    return otp_Platform_createQueueJs$js_body$_30();
}
function otp_Platform_stringFromCharCode($charCode) {
    return otj_JSObject_cast$static(String.fromCharCode($charCode));
}
function otp_Platform_isPrimitive($cls) {
    return $cls.$meta.primitive ? 1 : 0;
}
function otp_Platform_getArrayItem($cls) {
    return $cls.$meta.item;
}
function otp_Platform_getName($cls) {
    return $rt_str($cls.$meta.name);
}
function otp_Platform_createQueueJs$js_body$_30() {
    return [];
}
function oktga_IAnim$DefaultImpls() {
    jl_Object.call(this);
}
function oktga_IAnim$DefaultImpls_calculateDuration($$this) {
    var $duration, $$this$traverseSafe$iv, $i$iv, $item$iv, $it, $$this$forEach$iv, var$8, $element$iv;
    $duration = 0.0;
    $$this$traverseSafe$iv = $$this.$getTranslationTracks();
    $i$iv = 0;
    while ($i$iv < $$this$traverseSafe$iv.$size()) {
        $item$iv = $$this$traverseSafe$iv.$get1($i$iv);
        if ($item$iv !== null) {
            $it = $item$iv;
            if (oktga_Vec3Track_getDuration($it) > $duration)
                $duration = oktga_Vec3Track_getDuration($it);
        }
        $i$iv = $i$iv + 1 | 0;
    }
    $$this$traverseSafe$iv = $$this.$getRotationTracks();
    $i$iv = 0;
    while ($i$iv < $$this$traverseSafe$iv.$size()) {
        $item$iv = $$this$traverseSafe$iv.$get1($i$iv);
        if ($item$iv !== null) {
            $it = $item$iv;
            if (oktga_Vec4Track_getDuration($it) > $duration)
                $duration = oktga_Vec4Track_getDuration($it);
        }
        $i$iv = $i$iv + 1 | 0;
    }
    $$this$traverseSafe$iv = $$this.$getScaleTracks();
    $i$iv = 0;
    while ($i$iv < $$this$traverseSafe$iv.$size()) {
        $item$iv = $$this$traverseSafe$iv.$get1($i$iv);
        if ($item$iv !== null) {
            $it = $item$iv;
            if (oktga_Vec3Track_getDuration($it) > $duration)
                $duration = oktga_Vec3Track_getDuration($it);
        }
        $i$iv = $i$iv + 1 | 0;
    }
    if (oktga_ActionTrack_getDuration($$this.$getActionTrack()) > $duration)
        $duration = oktga_ActionTrack_getDuration($$this.$getActionTrack());
    $$this$forEach$iv = $$this.$getExtra().$values();
    var$8 = $$this$forEach$iv.$iterator();
    while (var$8.$hasNext()) {
        $element$iv = var$8.$next();
        $it = $element$iv;
        if ($it.$getDuration() <= $duration)
            continue;
        $duration = $it.$getDuration();
    }
    $$this.$setDuration($duration);
}
function k_TuplesKt() {
    jl_Object.call(this);
}
function k_TuplesKt_to($$this$to, $that) {
    return k_Pair__init_($$this$to, $that);
}
function jnc_CodingErrorAction() {
    jl_Object.call(this);
    this.$name44 = null;
}
var jnc_CodingErrorAction_IGNORE = null;
var jnc_CodingErrorAction_REPLACE = null;
var jnc_CodingErrorAction_REPORT = null;
function jnc_CodingErrorAction_$callClinit() {
    jnc_CodingErrorAction_$callClinit = $rt_eraseClinit(jnc_CodingErrorAction);
    jnc_CodingErrorAction__clinit_();
}
function jnc_CodingErrorAction__init_(var_0) {
    var var_1 = new jnc_CodingErrorAction();
    jnc_CodingErrorAction__init_0(var_1, var_0);
    return var_1;
}
function jnc_CodingErrorAction__init_0($this, $name) {
    jnc_CodingErrorAction_$callClinit();
    jl_Object__init_0($this);
    $this.$name44 = $name;
}
function jnc_CodingErrorAction__clinit_() {
    jnc_CodingErrorAction_IGNORE = jnc_CodingErrorAction__init_($rt_s(1364));
    jnc_CodingErrorAction_REPLACE = jnc_CodingErrorAction__init_($rt_s(1365));
    jnc_CodingErrorAction_REPORT = jnc_CodingErrorAction__init_($rt_s(1366));
}
function oktt_ITexture2D$DefaultImpls() {
    jl_Object.call(this);
}
function oktt_ITexture2D$DefaultImpls_load$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10) {
    if (var$10 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(550)));
    if (var$9 & 2)
        var$3 = var$1.$getMinFilter();
    if (var$9 & 4)
        var$4 = var$1.$getMagFilter();
    if (var$9 & 8)
        var$5 = var$1.$getSWrap();
    if (var$9 & 16)
        var$6 = var$1.$getTWrap();
    if (var$9 & 32)
        var$7 = var$1.$getAnisotropicFilter();
    if (var$9 & 64)
        var$8 = 0;
    return var$1.$load5(var$2, var$3, var$4, var$5, var$6, var$7, var$8);
}
function oktt_ITexture2D$DefaultImpls_load$default1(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10) {
    if (var$10 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(550)));
    if (var$9 & 2)
        var$3 = var$1.$getMinFilter();
    if (var$9 & 4)
        var$4 = var$1.$getMagFilter();
    if (var$9 & 8)
        var$5 = var$1.$getSWrap();
    if (var$9 & 16)
        var$6 = var$1.$getTWrap();
    if (var$9 & 32)
        var$7 = var$1.$getAnisotropicFilter();
    if (var$9 & 64)
        var$8 = 0;
    return var$1.$load6(var$2, var$3, var$4, var$5, var$6, var$7, var$8);
}
function oktt_ITexture2D$DefaultImpls_load$default0(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16) {
    if (var$16 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(550)));
    if (var$15 & 4)
        var$4 = null;
    if (var$15 & 8)
        var$5 = 0;
    if (var$15 & 16)
        var$6 = 6408;
    if (var$15 & 32)
        var$7 = 6408;
    if (var$15 & 64)
        var$8 = 5121;
    if (var$15 & 128)
        var$9 = var$1.$getMinFilter();
    if (var$15 & 256)
        var$10 = var$1.$getMagFilter();
    if (var$15 & 512)
        var$11 = var$1.$getSWrap();
    if (var$15 & 1024)
        var$12 = var$1.$getTWrap();
    if (var$15 & 2048)
        var$13 = var$1.$getAnisotropicFilter();
    if (var$15 & 4096)
        var$14 = 0;
    return var$1.$load7(var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14);
}
function oktt_ITexture2D$DefaultImpls_bind($$this) {
    oktt_ITexture$DefaultImpls_bind($$this);
}
function oktt_ITexture2D$DefaultImpls_bind0($$this, $unit) {
    oktt_ITexture$DefaultImpls_bind0($$this, $unit);
}
function oktt_ITexture2D$DefaultImpls_destroy($$this) {
    oktt_ITexture$DefaultImpls_destroy($$this);
}
function oktt_ITexture2D$DefaultImpls_generateMipmapsGPU($$this) {
    oktt_ITexture$DefaultImpls_generateMipmapsGPU($$this);
}
function oooi_DxCapsule$CollideCapsuleCapsule() {
    jl_Object.call(this);
}
function oooi_DxCapsule$CollideCapsuleCapsule__init_() {
    var var_0 = new oooi_DxCapsule$CollideCapsuleCapsule();
    oooi_DxCapsule$CollideCapsuleCapsule__init_0(var_0);
    return var_0;
}
function oooi_DxCapsule$CollideCapsuleCapsule__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxCapsule$CollideCapsuleCapsule_dCollideCapsuleCapsule($this, $cyl1, $cyl2, $flags, $contacts, $skip) {
    var var$6, $lz1, $lz2, $pos1, $pos2, $axis1, $axis2, $sphere1, $sphere2, $a1a2, $det, $q, $k, $lo, $lo_0, $hi, var$22, var$23, var$24, $n1, $c2, $n2, $alpha1, $alpha2, $a1, $a2, $b1, $b2;
    oooi_Common_dIASSERT($skip != 1 ? 0 : 1);
    var$6 = $flags & 65535;
    oooi_Common_dIASSERT(var$6 < 1 ? 0 : 1);
    ooo_DContactGeomBuffer_get($contacts, 0).$g1 = $cyl1;
    ooo_DContactGeomBuffer_get($contacts, 0).$g2 = $cyl2;
    ooo_DContactGeomBuffer_get($contacts, 0).$side1 = (-1);
    ooo_DContactGeomBuffer_get($contacts, 0).$side2 = (-1);
    $lz1 = oooi_DxCapsule_access$000($cyl1) * 0.5;
    $lz2 = oooi_DxCapsule_access$000($cyl2) * 0.5;
    $pos1 = $cyl1.$final_posr().$pos();
    $pos2 = $cyl2.$final_posr().$pos();
    $axis1 = $cyl1.$final_posr().$R().$columnAsNewVector(2);
    $axis2 = $cyl2.$final_posr().$R().$columnAsNewVector(2);
    $sphere1 = oom_DVector3__init_();
    $sphere2 = oom_DVector3__init_();
    $a1a2 = ooo_OdeMath_dCalcVectorDot3($axis1, $axis2);
    $det = 1.0 - $a1a2 * $a1a2;
    if ($det < 1.0E-5) {
        if ($a1a2 < 0.0)
            oom_DVector3_scale($axis2, (-1.0));
        $q = oom_DVector3__init_();
        oom_DVector3_sub(oom_DVector3_set($q, $pos1), $pos2);
        $k = ooo_OdeMath_dCalcVectorDot3($axis1, $q);
        $lo =  -$lz1;
        $lo_0 =  -$lz2 - $k;
        $hi = $lz2 - $k;
        if ($lo > $lo_0)
            $lo_0 = $lo;
        if ($lz1 < $hi)
            $hi = $lz1;
        var$22 = $rt_compare($lo_0, $hi);
        if (var$22 <= 0) {
            if (var$6 >= 2 && var$22 < 0) {
                oom_DVector3_add(oom_DVector3_scale(oom_DVector3_set($sphere1, $axis1), $lo_0), $pos1);
                oom_DVector3_add(oom_DVector3_scale(oom_DVector3_set($sphere2, $axis2), $lo_0 + $k), $pos2);
                var$23 = oooi_DxCapsule_access$100($cyl1);
                var$24 = oooi_DxCapsule_access$100($cyl2);
                $n1 = oooi_DxCollisionUtil_dCollideSpheres($sphere1, var$23, $sphere2, var$24, $contacts);
                if ($n1) {
                    oom_DVector3_add(oom_DVector3_scale(oom_DVector3_set($sphere1, $axis1), $hi), $pos1);
                    oom_DVector3_add(oom_DVector3_scale(oom_DVector3_set($sphere2, $axis2), $hi + $k), $pos2);
                    $c2 = ooo_DContactGeomBuffer_createView($contacts, $skip);
                    var$23 = oooi_DxCapsule_access$100($cyl1);
                    var$24 = oooi_DxCapsule_access$100($cyl2);
                    $n2 = oooi_DxCollisionUtil_dCollideSpheres($sphere1, var$23, $sphere2, var$24, $c2);
                    if ($n2) {
                        ooo_DContactGeomBuffer_get0($c2).$g1 = $cyl1;
                        ooo_DContactGeomBuffer_get0($c2).$g2 = $cyl2;
                        ooo_DContactGeomBuffer_get0($c2).$side1 = (-1);
                        ooo_DContactGeomBuffer_get0($c2).$side2 = (-1);
                        return 2;
                    }
                }
            }
            $alpha1 = ($lo_0 + $hi) * 0.5;
            $alpha2 = $alpha1 + $k;
            oom_DVector3_add(oom_DVector3_scale(oom_DVector3_set($sphere1, $axis1), $alpha1), $pos1);
            oom_DVector3_add(oom_DVector3_scale(oom_DVector3_set($sphere2, $axis2), $alpha2), $pos2);
            var$23 = oooi_DxCapsule_access$100($cyl1);
            var$24 = oooi_DxCapsule_access$100($cyl2);
            return oooi_DxCollisionUtil_dCollideSpheres($sphere1, var$23, $sphere2, var$24, $contacts);
        }
    }
    $a1 = oom_DVector3__init_();
    $a2 = oom_DVector3__init_();
    $b1 = oom_DVector3__init_();
    $b2 = oom_DVector3__init_();
    oom_DVector3_add(oom_DVector3_scale(oom_DVector3_set($a1, $axis1), $lz1), $cyl1.$final_posr().$pos());
    oom_DVector3_add(oom_DVector3_scale(oom_DVector3_set($a2, $axis1),  -$lz1), $cyl1.$final_posr().$pos());
    oom_DVector3_add(oom_DVector3_scale(oom_DVector3_set($b1, $axis2), $lz2), $cyl2.$final_posr().$pos());
    oom_DVector3_add(oom_DVector3_scale(oom_DVector3_set($b2, $axis2),  -$lz2), $cyl2.$final_posr().$pos());
    oooi_DxCollisionUtil_dClosestLineSegmentPoints($a1, $a2, $b1, $b2, $sphere1, $sphere2);
    return oooi_DxCollisionUtil_dCollideSpheres($sphere1, oooi_DxCapsule_access$100($cyl1), $sphere2, oooi_DxCapsule_access$100($cyl2), $contacts);
}
function oooi_DxCapsule$CollideCapsuleCapsule_dColliderFn($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideCapsuleCapsule($o1, $o2, $flags, $contacts, 1);
}
function oktgg_IGLTFMaterial$read$10() {
    var a = this; kji_Lambda.call(a);
    a.$this$0202 = null;
    a.$$emissiveValue0 = null;
    a.$$shader13 = null;
}
function oktgg_IGLTFMaterial$read$10__init_(var_0, var_1, var_2) {
    var var_3 = new oktgg_IGLTFMaterial$read$10();
    oktgg_IGLTFMaterial$read$10__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function oktgg_IGLTFMaterial$read$10_invoke(var$0, var$1) {
    oktgg_IGLTFMaterial$read$10_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
}
function oktgg_IGLTFMaterial$read$10_invoke0($this, $$this$array) {
    var $color, var$3, var$4, var$5, $factor, var$7, var$8, $op, var$10, var$11, $node;
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $color = new oktm_Vec3;
    var$3 = $$this$array.$float0(0);
    var$4 = $$this$array.$float0(1);
    var$5 = $$this$array.$float0(2);
    oktm_Vec3__init_3($color, var$3, var$4, var$5);
    $this.$this$0202.$setEmissiveFactor($color);
    $factor = oktsg_GLSLVec3Inline__init_1($color.$getX0(), $color.$getY0(), $color.$getZ(), null, 8, null);
    var$7 = $this.$$emissiveValue0;
    var$8 = $this.$$emissiveValue0.$element0;
    oktsg_GLSL_$callClinit();
    if (var$8 === oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE))
        var$8 = $factor;
    else {
        $op = new oktsg_OperationNode;
        var$10 = $rt_createArray(oktsg_IShaderData, 2);
        var$11 = var$10.data;
        var$11[0] = $this.$$emissiveValue0.$element0;
        var$11[1] = $factor;
        oktsg_OperationNode__init_($op, kc_CollectionsKt__CollectionsKt_listOf(var$10), $rt_s(1367), 5);
        oktsg_OperationNode_setFragment($op, 1);
        oktsg_OperationNode_setVarying($op, 0);
        $node = $this.$$shader13.$addNode0($op);
        var$8 = oktsg_OperationNode_getResult($node);
    }
    var$7.$element0 = var$8;
}
function oktgg_IGLTFMaterial$read$10__init_0(var$0, var$1, var$2, var$3) {
    var$0.$this$0202 = var$1;
    var$0.$$emissiveValue0 = var$2;
    var$0.$$shader13 = var$3;
    kji_Lambda__init_0(var$0, 1);
}
function oktu_LOG() {
    jl_Object.call(this);
}
var oktu_LOG_api = null;
var oktu_LOG_INSTANCE = null;
function oktu_LOG_$callClinit() {
    oktu_LOG_$callClinit = $rt_eraseClinit(oktu_LOG);
    oktu_LOG__clinit_();
}
function oktu_LOG__init_0() {
    var var_0 = new oktu_LOG();
    oktu_LOG__init_(var_0);
    return var_0;
}
function oktu_LOG_setCollectLogs($this, $value) {
    oktu_LOG_api.$setCollectLogs($value);
}
function oktu_LOG_info($this, $message, $tag) {
    kji_Intrinsics_checkParameterIsNotNull($message, $rt_s(466));
    kji_Intrinsics_checkParameterIsNotNull($tag, $rt_s(1136));
    oktu_LOG_api.$info0($message, $tag);
}
function oktu_LOG__init_($this) {
    oktu_LOG_$callClinit();
    jl_Object__init_0($this);
}
function oktu_LOG__clinit_() {
    oktu_LOG_INSTANCE = oktu_LOG__init_0();
    oktu_LOG_api = oktu_DefaultLog__init_0();
}
function oktga_AnimPlayer() {
    var a = this; jl_Object.call(a);
    a.$applying = 0;
    a.$current0 = null;
    a.$queued = null;
    a.$queuedTransitionTime = 0.0;
    a.$previous0 = null;
    a.$transitionCurrentTime = 0.0;
    a.$transitionTargetTime = 0.0;
    a.$inAction = 0;
    a.$paused = 0;
    a.$allowSameAnimation = 0;
    a.$justChangedAnimation = 0;
    a.$blendingPosition = null;
    a.$blendingRotation = null;
    a.$blendingScale = null;
    a.$nodes2 = null;
    a.$tmpPosition = null;
    a.$tmpRotation = null;
    a.$tmpScale = null;
}
var oktga_AnimPlayer_animationPool = null;
var oktga_AnimPlayer_vec3Pool = null;
var oktga_AnimPlayer_vec4Pool = null;
var oktga_AnimPlayer_Companion = null;
function oktga_AnimPlayer_$callClinit() {
    oktga_AnimPlayer_$callClinit = $rt_eraseClinit(oktga_AnimPlayer);
    oktga_AnimPlayer__clinit_();
}
function oktga_AnimPlayer__init_() {
    var var_0 = new oktga_AnimPlayer();
    oktga_AnimPlayer__init_0(var_0);
    return var_0;
}
function oktga_AnimPlayer_setNodes($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$nodes2 = $_set___;
}
function oktga_AnimPlayer_obtain($this, $anim, $offset, $duration, $loopCount, $speed, $listener) {
    var $result;
    if ($anim === null)
        return null;
    $result = oktu_Pool_get(oktga_AnimPlayer_animationPool);
    oktga_AnimPlayer$AnimationDesc_setAnimation($result, $anim);
    oktga_AnimPlayer$AnimationDesc_setListener($result, $listener);
    oktga_AnimPlayer$AnimationDesc_setLoopCount($result, $loopCount);
    oktga_AnimPlayer$AnimationDesc_setSpeed($result, $speed);
    oktga_AnimPlayer$AnimationDesc_setOffset($result, $offset);
    oktga_AnimPlayer$AnimationDesc_setDuration($result, $duration);
    oktga_AnimPlayer$AnimationDesc_setTime($result, $speed >= 0.0 ? 0.0 : oktga_AnimPlayer$AnimationDesc_getDuration($result));
    return $result;
}
function oktga_AnimPlayer_update($this, $delta) {
    var $previous, $current, var$4, $remain, var$6, var$7, var$8, var$9, $actionTrack, $times, $actions, $i, var$14, $time, $action;
    if ($this.$paused)
        return;
    $this.$transitionCurrentTime = $this.$transitionCurrentTime + $delta;
    $previous = $this.$previous0;
    $current = $this.$current0;
    if ($previous !== null && $this.$transitionCurrentTime >= $this.$transitionTargetTime) {
        var$4 = oktga_AnimPlayer$AnimationDesc_getAnimation($previous);
        if (var$4 === null)
            kji_Intrinsics_throwNpe();
        oktga_AnimPlayer_removeAnimation($this, var$4);
        $this.$justChangedAnimation = 1;
        oktu_Pool_free(oktga_AnimPlayer_animationPool, $previous);
        $this.$previous0 = null;
    }
    if ($this.$justChangedAnimation)
        $this.$justChangedAnimation = 0;
    if ($current !== null && oktga_AnimPlayer$AnimationDesc_getLoopCount($current) && oktga_AnimPlayer$AnimationDesc_getAnimation($current) !== null) {
        $remain = oktga_AnimPlayer$AnimationDesc_update($current, $delta);
        if ($remain !== 0.0 && $this.$queued !== null) {
            $this.$inAction = 0;
            oktga_AnimPlayer_animate($this, $this.$queued, $this.$queuedTransitionTime);
            $this.$queued = null;
            oktga_AnimPlayer_update($this, $remain);
            return;
        }
        if ($previous !== null) {
            var$4 = oktga_AnimPlayer$AnimationDesc_getAnimation($previous);
            var$6 = oktga_AnimPlayer$AnimationDesc_getOffset($previous) + $java.oktga_AnimPlayer$AnimationDesc_getTime($previous);
            var$7 = oktga_AnimPlayer$AnimationDesc_getAnimation($current);
            var$8 = oktga_AnimPlayer$AnimationDesc_getOffset($current) + $java.oktga_AnimPlayer$AnimationDesc_getTime($current);
            var$9 = $this.$transitionCurrentTime / $this.$transitionTargetTime;
            $java.oktga_AnimPlayer_applyAnimations($this, var$4, var$6, var$7, var$8, var$9);
        } else {
            var$4 = oktga_AnimPlayer$AnimationDesc_getAnimation($current);
            if (var$4 === null)
                kji_Intrinsics_throwNpe();
            $java.oktga_AnimPlayer_applyAnimation($this, var$4, oktga_AnimPlayer$AnimationDesc_getOffset($current) + $java.oktga_AnimPlayer$AnimationDesc_getTime($current));
        }
        var$4 = oktga_AnimPlayer$AnimationDesc_getAnimation($current);
        $actionTrack = var$4 === null ? null : var$4.$getActionTrack();
        a: {
            if ($actionTrack !== null && oktga_ActionTrack_getActions($actionTrack).$size() > 0) {
                $times = oktga_ActionTrack_getTimes($actionTrack);
                $actions = oktga_ActionTrack_getActions($actionTrack);
                $i = 0;
                var$14 = $times.$size();
                while (true) {
                    if ($i >= var$14)
                        break a;
                    $time = $times.$get1($i).$floatValue();
                    if ($time >= $java.oktga_AnimPlayer$AnimationDesc_getPreviousTime($current) && $time <= $java.oktga_AnimPlayer$AnimationDesc_getTime($current)) {
                        var$4 = $actions.$get1($i);
                        kji_Intrinsics_checkExpressionValueIsNotNull(var$4, $rt_s(1368));
                        $action = var$4;
                        $java.oktga_AnimPlayer$AnimationDesc_getExecutedActions($current).$add1($action);
                        $action.$invoke6();
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
        return;
    }
}
$java.oktga_AnimPlayer_setAnimation = function($this, $animation, $loopCount, $speed, $duration, $offset, $listener) {
    kji_Intrinsics_checkParameterIsNotNull($animation, $rt_s(1369));
    return $java.oktga_AnimPlayer_setAnimation0($this, oktga_AnimPlayer_obtain($this, $animation, $offset, $duration, $loopCount, $speed, $listener));
};
function oktga_AnimPlayer_setAnimation$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9) {
    oktga_AnimPlayer_$callClinit();
    if (var$8 & 2)
        var$3 = 1;
    if (var$8 & 4)
        var$4 = 1.0;
    if (var$8 & 8)
        var$5 = (-1.0);
    if (var$8 & 16)
        var$6 = 0.0;
    if (var$8 & 32)
        var$7 = null;
    return $java.oktga_AnimPlayer_setAnimation(var$1, var$2, var$3, var$4, var$5, var$6, var$7);
}
$java.oktga_AnimPlayer_setAnimation0 = function($this, $anim) {
    var var$2, var$3;
    if ($this.$current0 === null)
        $this.$current0 = $anim;
    else {
        a: {
            if (!$this.$allowSameAnimation && $anim !== null) {
                var$2 = $this.$current0;
                if (var$2 === null)
                    kji_Intrinsics_throwNpe();
                if (oktga_AnimPlayer$AnimationDesc_getAnimation(var$2) === oktga_AnimPlayer$AnimationDesc_getAnimation($anim)) {
                    var$2 = $this.$current0;
                    if (var$2 === null)
                        kji_Intrinsics_throwNpe();
                    oktga_AnimPlayer$AnimationDesc_setTime($anim, $java.oktga_AnimPlayer$AnimationDesc_getTime(var$2));
                    break a;
                }
            }
            var$2 = $this.$current0;
            if (var$2 === null)
                kji_Intrinsics_throwNpe();
            var$2 = oktga_AnimPlayer$AnimationDesc_getAnimation(var$2);
            if (var$2 === null)
                kji_Intrinsics_throwNpe();
            oktga_AnimPlayer_removeAnimation($this, var$2);
        }
        var$2 = oktga_AnimPlayer_animationPool;
        var$3 = $this.$current0;
        if (var$3 === null)
            kji_Intrinsics_throwNpe();
        oktu_Pool_free(var$2, var$3);
        $this.$current0 = $anim;
    }
    $this.$justChangedAnimation = 1;
    return $anim;
};
function oktga_AnimPlayer_animate($this, $anim, $transitionTime) {
    var var$3, var$4;
    a: {
        if ($this.$current0 === null)
            $this.$current0 = $anim;
        else if ($this.$inAction)
            $java.oktga_AnimPlayer_queue($this, $anim, $transitionTime);
        else {
            if (!$this.$allowSameAnimation && $anim !== null) {
                var$3 = $this.$current0;
                if (var$3 === null)
                    kji_Intrinsics_throwNpe();
                if (oktga_AnimPlayer$AnimationDesc_getAnimation(var$3) === oktga_AnimPlayer$AnimationDesc_getAnimation($anim)) {
                    var$3 = $this.$current0;
                    if (var$3 === null)
                        kji_Intrinsics_throwNpe();
                    oktga_AnimPlayer$AnimationDesc_setTime($anim, $java.oktga_AnimPlayer$AnimationDesc_getTime(var$3));
                    var$3 = oktga_AnimPlayer_animationPool;
                    var$4 = $this.$current0;
                    if (var$4 === null)
                        kji_Intrinsics_throwNpe();
                    oktu_Pool_free(var$3, var$4);
                    $this.$current0 = $anim;
                    break a;
                }
            }
            if ($this.$previous0 !== null) {
                var$3 = $this.$previous0;
                if (var$3 === null)
                    kji_Intrinsics_throwNpe();
                var$3 = oktga_AnimPlayer$AnimationDesc_getAnimation(var$3);
                if (var$3 === null)
                    kji_Intrinsics_throwNpe();
                oktga_AnimPlayer_removeAnimation($this, var$3);
                var$3 = oktga_AnimPlayer_animationPool;
                var$4 = $this.$previous0;
                if (var$4 === null)
                    kji_Intrinsics_throwNpe();
                oktu_Pool_free(var$3, var$4);
            }
            $this.$previous0 = $this.$current0;
            $this.$current0 = $anim;
            $this.$transitionCurrentTime = 0.0;
            $this.$transitionTargetTime = $transitionTime;
        }
    }
    return $anim;
}
$java.oktga_AnimPlayer_queue = function($this, $anim, $transitionTime) {
    var var$3, var$4;
    a: {
        if ($this.$current0 !== null) {
            var$3 = $this.$current0;
            if (var$3 === null)
                kji_Intrinsics_throwNpe();
            if (oktga_AnimPlayer$AnimationDesc_getLoopCount(var$3)) {
                if ($this.$queued !== null) {
                    var$3 = oktga_AnimPlayer_animationPool;
                    var$4 = $this.$queued;
                    if (var$4 === null)
                        kji_Intrinsics_throwNpe();
                    oktu_Pool_free(var$3, var$4);
                }
                $this.$queued = $anim;
                $this.$queuedTransitionTime = $transitionTime;
                var$3 = $this.$current0;
                if (var$3 === null)
                    kji_Intrinsics_throwNpe();
                if (oktga_AnimPlayer$AnimationDesc_getLoopCount(var$3) >= 0)
                    break a;
                var$3 = $this.$current0;
                if (var$3 === null)
                    kji_Intrinsics_throwNpe();
                oktga_AnimPlayer$AnimationDesc_setLoopCount(var$3, 1);
                break a;
            }
        }
        oktga_AnimPlayer_animate($this, $anim, $transitionTime);
    }
    return $anim;
};
$java.oktga_AnimPlayer_begin = function($this) {
    if (!$this.$applying) {
        $this.$applying = 1;
        return;
    }
    $rt_throw(jl_RuntimeException__init_($rt_s(1370)));
};
$java.oktga_AnimPlayer_apply = function($this, $animation, $time, $weight) {
    if ($this.$applying) {
        $java.oktga_AnimPlayer_applyAnimation0($this, 1, $weight, $animation, $time);
        return;
    }
    $rt_throw(jl_RuntimeException__init_($rt_s(1371)));
};
$java.oktga_AnimPlayer_end = function($this) {
    var var$1, $$this$forEach$iv, var$3, $element$iv, $it, var$6, var$7;
    if (!$this.$applying)
        $rt_throw(jl_RuntimeException__init_($rt_s(1372)));
    var$1 = $this.$blendingPosition.$entrySet();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(1373));
    $$this$forEach$iv = var$1;
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $it = $element$iv;
        var$1 = $it.$getKey().$getPosition0();
        var$6 = $it.$getValue();
        kji_Intrinsics_checkExpressionValueIsNotNull(var$6, $rt_s(1374));
        var$1.$set11(var$6);
        var$1 = oktga_AnimPlayer_vec3Pool;
        var$6 = $it.$getValue();
        kji_Intrinsics_checkExpressionValueIsNotNull(var$6, $rt_s(1374));
        oktu_Pool_free(var$1, var$6);
    }
    $this.$blendingPosition.$clear();
    var$3 = $this.$blendingRotation.$entrySet();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(1375));
    $$this$forEach$iv = var$3;
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $it = $element$iv;
        var$1 = $it.$getKey().$getRotation0();
        var$6 = $it.$getValue();
        kji_Intrinsics_checkExpressionValueIsNotNull(var$6, $rt_s(1374));
        var$1.$set71(var$6);
        var$1 = oktga_AnimPlayer_vec4Pool;
        var$6 = $it.$getValue();
        kji_Intrinsics_checkExpressionValueIsNotNull(var$6, $rt_s(1374));
        oktu_Pool_free(var$1, var$6);
    }
    $this.$blendingRotation.$clear();
    var$3 = $this.$blendingScale.$entrySet();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$3, $rt_s(1376));
    $$this$forEach$iv = var$3;
    var$1 = $$this$forEach$iv.$iterator();
    while (var$1.$hasNext()) {
        $element$iv = var$1.$next();
        $it = $element$iv;
        var$6 = $it.$getKey().$getScale0();
        var$7 = $it.$getValue();
        kji_Intrinsics_checkExpressionValueIsNotNull(var$7, $rt_s(1374));
        var$6.$set11(var$7);
        var$3 = oktga_AnimPlayer_vec3Pool;
        var$6 = $it.$getValue();
        kji_Intrinsics_checkExpressionValueIsNotNull(var$6, $rt_s(1374));
        oktu_Pool_free(var$3, var$6);
    }
    $this.$blendingScale.$clear();
    $this.$applying = 0;
};
$java.oktga_AnimPlayer_applyAnimation = function($this, $animation, $time) {
    if (!$this.$applying) {
        $java.oktga_AnimPlayer_applyAnimation0($this, 0, 1.0, $animation, $time);
        return;
    }
    $rt_throw(jl_RuntimeException__init_($rt_s(1377)));
};
$java.oktga_AnimPlayer_applyAnimations = function($this, $anim1, $time1, $anim2, $time2, $weight) {
    if ($anim2 !== null && $weight !== 0.0) {
        if ($anim1 !== null && $weight !== 1.0) {
            if ($this.$applying)
                $rt_throw(jl_RuntimeException__init_($rt_s(1377)));
            $java.oktga_AnimPlayer_begin($this);
            $java.oktga_AnimPlayer_apply($this, $anim1, $time1, 1.0);
            $java.oktga_AnimPlayer_apply($this, $anim2, $time2, $weight);
            $java.oktga_AnimPlayer_end($this);
        } else
            $java.oktga_AnimPlayer_applyAnimation($this, $anim2, $time2);
    } else {
        if ($anim1 === null)
            kji_Intrinsics_throwNpe();
        $java.oktga_AnimPlayer_applyAnimation($this, $anim1, $time1);
    }
};
$java.oktga_AnimPlayer_applyAnimation0 = function($this, $blending, $alpha, $animation, $time) {
    var $translationTracks, $rotationTracks, $scaleTracks, $nodes, $i, var$10, var$11, $track, var$13, $node, $target, var$16, $t, var$18, $$this$apply, var$20;
    a: {
        $translationTracks = $animation.$getTranslationTracks();
        $rotationTracks = $animation.$getRotationTracks();
        $scaleTracks = $animation.$getScaleTracks();
        if (!$blending) {
            $nodes = $this.$nodes2;
            $i = 0;
            var$10 = $translationTracks;
            var$11 = var$10.$size();
            while ($i < var$11) {
                $track = $translationTracks.$get1($i);
                $java.oktga_AnimPlayer_getTranslationAtTime($this, $track, $time, $nodes.$get1(oktga_Vec3Track_getNodeIndex($track)).$getPosition0());
                $i = $i + 1 | 0;
            }
            $i = 0;
            var$13 = var$10.$size();
            while ($i < var$13) {
                $track = $rotationTracks.$get1($i);
                $java.oktga_AnimPlayer_getRotationAtTime($this, $track, $time, $nodes.$get1(oktga_Vec4Track_getNodeIndex($track)).$getRotation0());
                $i = $i + 1 | 0;
            }
            $i = 0;
            var$13 = var$10.$size();
            while (true) {
                if ($i >= var$13)
                    break a;
                $track = $scaleTracks.$get1($i);
                $java.oktga_AnimPlayer_getScalingAtTime($this, $track, $time, $nodes.$get1(oktga_Vec3Track_getNodeIndex($track)).$getScale0());
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        var$13 = $translationTracks.$size();
        while ($i < var$13) {
            $track = $translationTracks.$get1($i);
            $node = $this.$nodes2.$get1(oktga_Vec3Track_getNodeIndex($track));
            $target = $this.$tmpPosition;
            var$16 = $target;
            $java.oktga_AnimPlayer_getTranslationAtTime($this, $track, $time, var$16);
            $t = $this.$blendingPosition.$get0($node);
            if ($t !== null) {
                if ($alpha <= 0.9999989867210388)
                    $t.$lerp(var$16, $alpha);
                else
                    $t.$set11(var$16);
            } else if ($alpha > 0.9999989867210388)
                $this.$blendingPosition.$put3($node, oktu_Pool_get(oktga_AnimPlayer_vec3Pool).$set11(var$16));
            else {
                var$10 = $this.$blendingPosition;
                var$18 = oktu_Pool_get(oktga_AnimPlayer_vec3Pool);
                $$this$apply = var$18;
                $$this$apply.$set11($node.$getPosition0());
                $$this$apply.$lerp(var$16, $alpha);
                var$10.$put3($node, var$18);
            }
            $i = $i + 1 | 0;
        }
        $i = 0;
        var$13 = $rotationTracks.$size();
        while ($i < var$13) {
            $track = $rotationTracks.$get1($i);
            $node = $this.$nodes2.$get1(oktga_Vec4Track_getNodeIndex($track));
            $target = $this.$tmpRotation;
            var$16 = $target;
            $java.oktga_AnimPlayer_getRotationAtTime($this, $track, $time, var$16);
            $t = $this.$blendingRotation.$get0($node);
            if ($t !== null) {
                if ($alpha <= 0.9999989867210388)
                    $t.$lerp2(var$16, $alpha);
                else
                    $t.$set71(var$16);
            } else if ($alpha > 0.9999989867210388)
                $this.$blendingRotation.$put3($node, oktu_Pool_get(oktga_AnimPlayer_vec4Pool).$set71(var$16));
            else {
                var$10 = $this.$blendingRotation;
                var$18 = oktu_Pool_get(oktga_AnimPlayer_vec4Pool);
                $$this$apply = var$18;
                $$this$apply.$set71($node.$getRotation0());
                $$this$apply.$lerp2(var$16, $alpha);
                var$10.$put3($node, var$18);
            }
            $i = $i + 1 | 0;
        }
        $i = 0;
        var$11 = $scaleTracks.$size();
        while (true) {
            if ($i >= var$11)
                break a;
            $track = $scaleTracks.$get1($i);
            $node = $this.$nodes2.$get1(oktga_Vec3Track_getNodeIndex($track));
            $target = $this.$tmpScale;
            var$20 = $target;
            $java.oktga_AnimPlayer_getScalingAtTime($this, $track, $time, var$20);
            $t = $this.$blendingScale.$get0($node);
            if ($t !== null) {
                if ($alpha <= 0.9999989867210388)
                    $t.$lerp(var$20, $alpha);
                else
                    $t.$set11(var$20);
            } else if ($alpha > 0.9999989867210388)
                $this.$blendingScale.$put3($node, oktu_Pool_get(oktga_AnimPlayer_vec3Pool).$set11(var$20));
            else {
                var$16 = $this.$blendingScale;
                var$10 = oktu_Pool_get(oktga_AnimPlayer_vec3Pool);
                $$this$apply = var$10;
                $$this$apply.$set11($node.$getScale0());
                $$this$apply.$lerp(var$20, $alpha);
                var$16.$put3($node, var$10);
            }
            $i = $i + 1 | 0;
        }
    }
};
$java.oktga_AnimPlayer_getFirstKeyframeIndexAtTime = function($this, $arr, $time) {
    var $maxIndex, $minIndex, $i, var$6;
    $maxIndex = $arr.$size() - 1 | 0;
    if ($maxIndex > 0 && $time >= $arr.$get1(0).$floatValue() && $time <= $arr.$get1($maxIndex).$floatValue()) {
        $minIndex = 0;
        while ($minIndex < $maxIndex) {
            $i = ($minIndex + $maxIndex | 0) / 2 | 0;
            var$6 = $i + 1 | 0;
            if ($time <= $arr.$get1(var$6).$floatValue()) {
                if ($time >= $arr.$get1($i).$floatValue())
                    return $i;
                $maxIndex = $i - 1 | 0;
                var$6 = $minIndex;
            }
            $minIndex = var$6;
        }
        return $minIndex;
    }
    return 0;
};
$java.oktga_AnimPlayer_getTranslationAtTime = function($this, $track, $time, $out) {
    var $values, $index, $value1, $time1, var$8, $value2, $time2, $t;
    $values = oktga_Vec3Track_getValues($track);
    if ($values.$size() == 1)
        return $out.$set11($values.$get1(0));
    $index = $java.oktga_AnimPlayer_getFirstKeyframeIndexAtTime($this, oktga_Vec3Track_getTimes($track), $time);
    $value1 = $values.$get1($index);
    $time1 = oktga_Vec3Track_getTimes($track).$get1($index).$floatValue();
    $out.$set11($value1);
    var$8 = $index + 1 | 0;
    if (var$8 < $values.$size()) {
        $value2 = oktga_Vec3Track_getValues($track).$get1(var$8);
        $time2 = oktga_Vec3Track_getTimes($track).$get1(var$8).$floatValue();
        $t = ($time - $time1) / ($time2 - $time1);
        $out.$lerp($value2, $t);
    }
    return $out;
};
$java.oktga_AnimPlayer_getRotationAtTime = function($this, $track, $time, $out) {
    var $frames, $index, $value1, $time1, var$8, $value2, $time2, $t;
    $frames = oktga_Vec4Track_getValues($track);
    if ($frames.$size() == 1)
        return $out.$set71($frames.$get1(0));
    $index = $java.oktga_AnimPlayer_getFirstKeyframeIndexAtTime($this, oktga_Vec4Track_getTimes($track), $time);
    $value1 = $frames.$get1($index);
    $time1 = oktga_Vec4Track_getTimes($track).$get1($index).$floatValue();
    $out.$set71($value1);
    var$8 = $index + 1 | 0;
    if (var$8 < $frames.$size()) {
        $value2 = $frames.$get1(var$8);
        $time2 = oktga_Vec4Track_getTimes($track).$get1(var$8).$floatValue();
        $t = ($time - $time1) / ($time2 - $time1);
        $out.$slerp0($value2, $t);
    }
    return $out;
};
$java.oktga_AnimPlayer_getScalingAtTime = function($this, $track, $time, $out) {
    var $scaling, $index, $value1, $time1, var$8, $value2, $time2, $t;
    $scaling = oktga_Vec3Track_getValues($track);
    if ($scaling.$size() == 1)
        return $out.$set11($scaling.$get1(0));
    $index = $java.oktga_AnimPlayer_getFirstKeyframeIndexAtTime($this, oktga_Vec3Track_getTimes($track), $time);
    $value1 = $scaling.$get1($index);
    $time1 = oktga_Vec3Track_getTimes($track).$get1($index).$floatValue();
    $out.$set11($value1);
    var$8 = $index + 1 | 0;
    if (var$8 < $scaling.$size()) {
        $value2 = $scaling.$get1(var$8);
        $time2 = oktga_Vec3Track_getTimes($track).$get1(var$8).$floatValue();
        $t = ($time - $time1) / ($time2 - $time1);
        $out.$lerp($value2, $t);
    }
    return $out;
};
function oktga_AnimPlayer_removeAnimation($this, $animation) {
    return;
}
function oktga_AnimPlayer__init_0($this) {
    oktga_AnimPlayer_$callClinit();
    jl_Object__init_0($this);
    $this.$blendingPosition = ju_HashMap__init_();
    $this.$blendingRotation = ju_HashMap__init_();
    $this.$blendingScale = ju_HashMap__init_();
    $this.$nodes2 = ju_ArrayList__init_();
    $this.$tmpPosition = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    $this.$tmpRotation = oktm_Vec4__init_(0.0, 0.0, 0.0, 0.0, 15, null);
    $this.$tmpScale = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
}
function oktga_AnimPlayer__clinit_() {
    var var$1;
    oktga_AnimPlayer_Companion = oktga_AnimPlayer$Companion__init_1(null);
    var$1 = new oktu_Pool;
    oktga_AnimPlayer$Companion$animationPool$1_$callClinit();
    oktu_Pool__init_2(var$1, oktga_AnimPlayer$Companion$animationPool$1_INSTANCE);
    oktga_AnimPlayer_animationPool = var$1;
    var$1 = new oktu_Pool;
    $java.oktga_AnimPlayer$Companion$vec3Pool$1_$callClinit();
    oktu_Pool__init_2(var$1, $java.oktga_AnimPlayer$Companion$vec3Pool$1_INSTANCE);
    oktga_AnimPlayer_vec3Pool = var$1;
    var$1 = new oktu_Pool;
    $java.oktga_AnimPlayer$Companion$vec4Pool$1_$callClinit();
    oktu_Pool__init_2(var$1, $java.oktga_AnimPlayer$Companion$vec4Pool$1_INSTANCE);
    oktga_AnimPlayer_vec4Pool = var$1;
}
function jur_DotQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$lt1 = null;
}
$java.jur_DotQuantifierSet__init_ = function(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_DotQuantifierSet();
    $java.jur_DotQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
};
$java.jur_DotQuantifierSet__init_0 = function($this, $innerSet, $next, $type, $lt) {
    jur_QuantifierSet__init_0($this, $innerSet, $next, $type);
    $this.$lt1 = $lt;
};
$java.jur_DotQuantifierSet_matches = function($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $startSearch;
    $strLength = $matchResult.$getRightBound();
    $startSearch = $java.jur_DotQuantifierSet_findLineTerminator($this, $stringIndex, $strLength, $testString);
    if ($startSearch >= 0)
        $strLength = $startSearch;
    if ($strLength > $stringIndex)
        return $this.$next0.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
};
$java.jur_DotQuantifierSet_find = function($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $res, $nextSearch, var$7, $leftBound;
    $strLength = $matchResult.$getRightBound();
    $res = $this.$next0.$find($stringIndex, $testString, $matchResult);
    if ($res < 0)
        return (-1);
    $nextSearch = $java.jur_DotQuantifierSet_findLineTerminator($this, $res, $strLength, $testString);
    if ($nextSearch >= 0)
        $strLength = $nextSearch;
    var$7 = $this.$next0.$findBack($res, $strLength, $testString, $matchResult);
    if ($res < var$7)
        $res = var$7;
    $leftBound = $res > 0 ? $java.jur_DotQuantifierSet_findBackLineTerminator($this, $stringIndex, $res - 1 | 0, $testString) : $res ? (-1) : 0;
    if ($leftBound >= $stringIndex)
        $stringIndex = $leftBound >= $res ? $leftBound : $leftBound + 1 | 0;
    return $stringIndex;
};
$java.jur_DotQuantifierSet_findLineTerminator = function($this, $i, $to, $testString) {
    while (true) {
        if ($i >= $to)
            return (-1);
        if ($this.$lt1.$isLineTerminator($testString.$charAt($i)))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
};
$java.jur_DotQuantifierSet_findBackLineTerminator = function($this, $from, $i, $testString) {
    while (true) {
        if ($i < $from)
            return (-1);
        if ($this.$lt1.$isLineTerminator($testString.$charAt($i)))
            break;
        $i = $i + (-1) | 0;
    }
    return $i;
};
function otcit_FloatAnalyzer() {
    jl_Object.call(this);
}
$java.otcit_FloatAnalyzer_mantissa10Table = null;
$java.otcit_FloatAnalyzer_exp10Table = null;
$java.otcit_FloatAnalyzer_$callClinit = function() {
    $java.otcit_FloatAnalyzer_$callClinit = $rt_eraseClinit(otcit_FloatAnalyzer);
    $java.otcit_FloatAnalyzer__clinit_();
};
$java.otcit_FloatAnalyzer__init_ = function() {
    var var_0 = new otcit_FloatAnalyzer();
    otcit_FloatAnalyzer__init_(var_0);
    return var_0;
};
function otcit_FloatAnalyzer__init_($this) {
    $java.otcit_FloatAnalyzer_$callClinit();
    jl_Object__init_0($this);
}
function otcit_FloatAnalyzer_analyze($d, $result) {
    var $bits, $mantissa, $exponent, $errorShift, var$7, $decExponent, $binExponentCorrection, $mantissaShift, var$11, $decMantissa, var$13, $error, $upError, $downError, $lowerPos, $upperPos;
    $java.otcit_FloatAnalyzer_$callClinit();
    $bits = $rt_floatToIntBits($d);
    $result.$sign = !($bits & (-2147483648)) ? 0 : 1;
    $mantissa = $bits & 8388607;
    $exponent = $bits >> 23 & 255;
    if (!$mantissa && !$exponent) {
        $result.$mantissa = 0;
        $result.$exponent = 0;
        return;
    }
    $errorShift = 0;
    if ($exponent)
        var$7 = $mantissa | 8388608;
    else {
        var$7 = $mantissa << 1;
        while (Long_eq(Long_and(Long_fromInt(var$7), Long_fromInt(8388608)), Long_ZERO)) {
            var$7 = var$7 << 1;
            $exponent = $exponent + (-1) | 0;
            $errorShift = $errorShift + 1 | 0;
        }
    }
    $decExponent = ju_Arrays_binarySearch($java.otcit_FloatAnalyzer_exp10Table, $exponent);
    if ($decExponent < 0)
        $decExponent =  -$decExponent - 2 | 0;
    $binExponentCorrection = $exponent - $java.otcit_FloatAnalyzer_exp10Table.data[$decExponent] | 0;
    $mantissaShift = 9 + $binExponentCorrection | 0;
    var$11 = Long_fromInt(var$7);
    $decMantissa = Long_shru(Long_mul(var$11, Long_fromInt($java.otcit_FloatAnalyzer_mantissa10Table.data[$decExponent])), 32 - $mantissaShift | 0).lo;
    if ($decMantissa >= 1000000000) {
        $decExponent = $decExponent + 1 | 0;
        var$13 = $exponent - $java.otcit_FloatAnalyzer_exp10Table.data[$decExponent] | 0;
        $mantissaShift = 9 + var$13 | 0;
        $decMantissa = Long_shru(Long_mul(var$11, Long_fromInt($java.otcit_FloatAnalyzer_mantissa10Table.data[$decExponent])), 32 - $mantissaShift | 0).lo;
    }
    var$13 = (31 - $mantissaShift | 0) - $errorShift | 0;
    $error = var$13 >= 0 ? $java.otcit_FloatAnalyzer_mantissa10Table.data[$decExponent] >>> var$13 : $java.otcit_FloatAnalyzer_mantissa10Table.data[$decExponent] <<  -var$13;
    $upError = ($error + 1 | 0) >> 1;
    $downError = $error >> 1;
    if (var$7 == 4194304)
        $downError = $downError >> 2;
    $lowerPos = $java.otcit_FloatAnalyzer_findLowerDistanceToZero($decMantissa, $downError);
    $upperPos = $java.otcit_FloatAnalyzer_findUpperDistanceToZero($decMantissa, $upError);
    var$7 = $rt_compare($lowerPos, $upperPos);
    var$7 = var$7 > 0 ? $rt_imul($decMantissa / $lowerPos | 0, $lowerPos) : var$7 < 0 ? $rt_imul($decMantissa / $upperPos | 0, $upperPos) + $upperPos | 0 : $rt_imul(($decMantissa + ($upperPos / 2 | 0) | 0) / $upperPos | 0, $upperPos);
    if (var$7 >= 1000000000) {
        $decExponent = $decExponent + 1 | 0;
        var$7 = var$7 / 10 | 0;
    } else if (var$7 < 100000000) {
        $decExponent = $decExponent + (-1) | 0;
        var$7 = var$7 * 10 | 0;
    }
    $result.$mantissa = var$7;
    $result.$exponent = $decExponent - 50 | 0;
}
$java.otcit_FloatAnalyzer_findLowerDistanceToZero = function($mantissa, $error) {
    var $pos, $mantissaRight;
    $java.otcit_FloatAnalyzer_$callClinit();
    $pos = 10;
    while ($pos <= $error) {
        $pos = $pos * 10 | 0;
    }
    $mantissaRight = $mantissa % $pos | 0;
    if ($mantissaRight >= ($error / 2 | 0))
        $pos = $pos / 10 | 0;
    return $pos;
};
$java.otcit_FloatAnalyzer_findUpperDistanceToZero = function($mantissa, $error) {
    var $pos, $mantissaRight;
    $java.otcit_FloatAnalyzer_$callClinit();
    $pos = 10;
    while ($pos <= $error) {
        $pos = $pos * 10 | 0;
    }
    $mantissaRight = $mantissa % $pos | 0;
    if (($pos - $mantissaRight | 0) > ($error / 2 | 0))
        $pos = $pos / 10 | 0;
    return $pos;
};
$java.otcit_FloatAnalyzer__clinit_ = function() {
    var $decMantissaOne, $exponent, $i, var$4, var$5, var$6, $remainder, $maxMantissa, $shift, var$10, $shiftedOffPart;
    $java.otcit_FloatAnalyzer_mantissa10Table = $rt_createIntArray(100);
    $java.otcit_FloatAnalyzer_exp10Table = $rt_createIntArray(100);
    $decMantissaOne = 2000000000;
    $exponent = 127;
    $i = 0;
    var$4 = $decMantissaOne;
    while ($i < 50) {
        var$5 = $java.otcit_FloatAnalyzer_mantissa10Table.data;
        var$6 = $i + 50 | 0;
        var$5[var$6] = $rt_udiv(var$4, 20);
        $java.otcit_FloatAnalyzer_exp10Table.data[var$6] = $exponent;
        var$6 = $rt_udiv(var$4, 10);
        $remainder = $rt_umod(var$6, 10);
        while (var$6 <= $decMantissaOne && !(var$6 & (-2147483648))) {
            var$6 = var$6 << 1;
            $exponent = $exponent + 1 | 0;
            $remainder = $remainder << 1;
        }
        var$4 = var$6 + ($remainder / 10 | 0) | 0;
        $i = $i + 1 | 0;
    }
    $maxMantissa = 214748364;
    var$4 = 127;
    $i = 0;
    while ($i < 50) {
        $shift = 0;
        var$10 = $decMantissaOne;
        while (var$10 > $maxMantissa) {
            var$10 = var$10 >> 1;
            $shift = $shift + 1 | 0;
            var$4 = var$4 + (-1) | 0;
        }
        var$10 = var$10 * 10 | 0;
        if ($shift <= 0)
            $decMantissaOne = var$10;
        else {
            $shiftedOffPart = Long_fromInt($decMantissaOne & ((1 << $shift) - 1 | 0));
            $decMantissaOne = Long_add(Long_fromInt(var$10), Long_shr(Long_mul($shiftedOffPart, Long_fromInt(10)), $shift)).lo;
        }
        var$5 = $java.otcit_FloatAnalyzer_mantissa10Table.data;
        var$10 = (50 - $i | 0) - 1 | 0;
        var$5[var$10] = $rt_udiv($decMantissaOne, 20);
        $java.otcit_FloatAnalyzer_exp10Table.data[var$10] = var$4;
        $i = $i + 1 | 0;
    }
};
function k_KotlinNullPointerException() {
    jl_NullPointerException.call(this);
}
function k_KotlinNullPointerException__init_() {
    var var_0 = new k_KotlinNullPointerException();
    k_KotlinNullPointerException__init_0(var_0);
    return var_0;
}
function k_KotlinNullPointerException__init_0($this) {
    jl_NullPointerException__init_2($this);
}
function ju_HashMap$ValueIterator() {
    ju_HashMap$AbstractMapIterator.call(this);
}
function ju_HashMap$ValueIterator__init_(var_0) {
    var var_1 = new ju_HashMap$ValueIterator();
    $java.ju_HashMap$ValueIterator__init_(var_1, var_0);
    return var_1;
}
$java.ju_HashMap$ValueIterator__init_ = function($this, $map) {
    ju_HashMap$AbstractMapIterator__init_0($this, $map);
};
$java.ju_HashMap$ValueIterator_next = function($this) {
    ju_HashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry1.$value0;
};
function oktgg_IGLTFMaterial$read$4$1() {
    kji_Lambda.call(this);
    this.$this$0203 = null;
}
function oktgg_IGLTFMaterial$read$4$1__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$4$1();
    $java.oktgg_IGLTFMaterial$read$4$1__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_IGLTFMaterial$read$4$1_invoke = function(var$0, var$1) {
    $java.oktgg_IGLTFMaterial$read$4$1_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_IGLTFMaterial$read$4$1_invoke0 = function($this, $it) {
    $this.$this$0203.$this$055.$setNormalScale($it);
};
$java.oktgg_IGLTFMaterial$read$4$1__init_ = function(var$0, var$1) {
    var$0.$this$0203 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktgg_IGLTFMaterial$read$4$2() {
    kji_Lambda.call(this);
    this.$this$0204 = null;
}
function oktgg_IGLTFMaterial$read$4$2__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$4$2();
    $java.oktgg_IGLTFMaterial$read$4$2__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_IGLTFMaterial$read$4$2_invoke = function(var$0, var$1) {
    $java.oktgg_IGLTFMaterial$read$4$2_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_IGLTFMaterial$read$4$2_invoke0 = function($this, $it) {
    $this.$this$0204.$this$055.$setNormalTextureUV($it);
};
$java.oktgg_IGLTFMaterial$read$4$2__init_ = function(var$0, var$1) {
    var$0.$this$0204 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$0205 = null;
}
$java.jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_ = function(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1();
    $java.jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0(var_1, var_0);
    return var_1;
};
$java.jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0 = function($this, $this$0) {
    $this.$this$0205 = $this$0;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains = function($this, $ch) {
    return $java.jl_Character_isJavaIdentifierStart($ch);
};
function oktts_FXAATest() {
    jl_Object.call(this);
}
function oktts_FXAATest__init_() {
    var var_0 = new oktts_FXAATest();
    oktts_FXAATest__init_0(var_0);
    return var_0;
}
$java.oktts_FXAATest_getName = function($this) {
    return $rt_s(1378);
};
$java.oktts_FXAATest_testMain = function($this) {
    var $model, $frameBuffer, var$3, var$4, var$5, $fxaa, $screenQuad;
    $model = oktt_CubeModel__init_(null, 1, null);
    $frameBuffer = new oktt_SimpleFrameBuffer;
    oktg_GL_$callClinit();
    var$3 = oktg_GL_getMainFrameBufferWidth(oktg_GL_INSTANCE);
    var$4 = oktg_GL_getMainFrameBufferHeight(oktg_GL_INSTANCE);
    var$5 = null;
    oktt_SimpleFrameBuffer__init_($frameBuffer, var$3, var$4, 6407, 0, 0, 1, 0, 88, var$5);
    $fxaa = oktsp_FXAA__init_();
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, okts_IShader$DefaultImpls_sourceCode$default(oktsp_FXAA_getShader($fxaa), 0, 1, null), null, 2, null);
    $screenQuad = oktm_ScreenQuad__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktts_FXAATest$testMain$1__init_($model, $frameBuffer, $fxaa, $screenQuad), 1, null);
};
function oktts_FXAATest__init_0($this) {
    jl_Object__init_0($this);
}
function jl_ConsoleOutputStreamStdout() {
    ji_OutputStream.call(this);
}
$java.jl_ConsoleOutputStreamStdout__init_ = function() {
    var var_0 = new jl_ConsoleOutputStreamStdout();
    jl_ConsoleOutputStreamStdout__init_(var_0);
    return var_0;
};
function jl_ConsoleOutputStreamStdout__init_($this) {
    ji_OutputStream__init_0($this);
}
$java.jl_ConsoleOutputStreamStdout_write = function($this, $b) {
    $rt_putStdout($b);
};
function jur_CharClass$3() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt5 = 0;
    a.$val$cc = null;
    a.$this$0206 = null;
}
function jur_CharClass$3__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$3();
    $java.jur_CharClass$3__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
$java.jur_CharClass$3__init_ = function($this, $this$0, var$2, var$3) {
    $this.$this$0206 = $this$0;
    $this.$val$curAlt5 = var$2;
    $this.$val$cc = var$3;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_CharClass$3_contains = function($this, $ch) {
    return !($this.$val$curAlt5 ^ $this.$this$0206.$bits.$get17($ch)) && !($this.$val$curAlt5 ^ $this.$this$0206.$inverted ^ $this.$val$cc.$contains0($ch)) ? 0 : 1;
};
function jur_CharClass$4() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt6 = 0;
    a.$val$nb3 = null;
    a.$val$cc0 = null;
    a.$this$0207 = null;
}
function jur_CharClass$4__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$4();
    $java.jur_CharClass$4__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
$java.jur_CharClass$4__init_ = function($this, $this$0, var$2, var$3, var$4) {
    $this.$this$0207 = $this$0;
    $this.$val$curAlt6 = var$2;
    $this.$val$nb3 = var$3;
    $this.$val$cc0 = var$4;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_CharClass$4_contains = function($this, $ch) {
    return $this.$val$curAlt6 ^ (!$this.$val$nb3.$contains0($ch) && !$this.$val$cc0.$contains0($ch) ? 0 : 1) ? 0 : 1;
};
function jur_CharClass$1() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$cc1 = null;
    a.$this$0208 = null;
}
function jur_CharClass$1__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$1();
    $java.jur_CharClass$1__init_(var_2, var_0, var_1);
    return var_2;
}
$java.jur_CharClass$1__init_ = function($this, $this$0, var$2) {
    $this.$this$0208 = $this$0;
    $this.$val$cc1 = var$2;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_CharClass$1_contains = function($this, $ch) {
    return $this.$val$cc1.$contains0($ch);
};
function jur_CharClass$2() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt7 = 0;
    a.$val$cc2 = null;
    a.$this$0209 = null;
}
function jur_CharClass$2__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$2();
    $java.jur_CharClass$2__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
$java.jur_CharClass$2__init_ = function($this, $this$0, var$2, var$3) {
    $this.$this$0209 = $this$0;
    $this.$val$curAlt7 = var$2;
    $this.$val$cc2 = var$3;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_CharClass$2_contains = function($this, $ch) {
    return !($this.$val$curAlt7 ^ $this.$this$0209.$bits.$get17($ch)) && !($this.$val$curAlt7 ^ $this.$this$0209.$inverted ^ $this.$val$cc2.$contains0($ch)) ? 1 : 0;
};
function oooi_CollideCylinderTrimesh() {
    jl_Object.call(this);
}
function oooi_CollideCylinderTrimesh__init_() {
    var var_0 = new oooi_CollideCylinderTrimesh();
    oooi_CollideCylinderTrimesh__init_0(var_0);
    return var_0;
}
function oooi_CollideCylinderTrimesh__init_0($this) {
    jl_Object__init_0($this);
}
$java.oooi_CollideCylinderTrimesh_dColliderFn = function($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideCylinderTrimesh($o1, $o2, $flags, $contacts, 1);
};
$java.oooi_CollideCylinderTrimesh_dCollideCylinderTrimesh = function($this, $o1, $o2, $flags, $contacts, $skip) {
    var $nContactCount, $cData, $test_aabb, $collision_result, $ctContacts0, $i, $boxesresult, $ptrimesh, $Triint, $dvf, var$16, $dv, var$18, $bFinishSearching;
    oooi_Common_dIASSERT($skip != 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $nContactCount = 0;
    $cData = oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__init_($flags, $skip);
    $cData.$_InitCylinderTrimeshData($o1, $o2);
    $test_aabb = oooig_GimGeometry$aabb3f__init_();
    $test_aabb.$minX = $o1.$_aabb.$getMin0();
    $test_aabb.$maxX = $o1.$_aabb.$getMax0();
    $test_aabb.$minY = $o1.$_aabb.$getMin1();
    $test_aabb.$maxY = $o1.$_aabb.$getMax1();
    $test_aabb.$minZ = $o1.$_aabb.$getMin2();
    $test_aabb.$maxZ = $o1.$_aabb.$getMax2();
    $collision_result = oooig_GimDynArrayInt_GIM_CREATE_BOXQUERY_LIST();
    $o2.$m_collision_trimesh.$getAabbSet().$gim_aabbset_box_collision($test_aabb, $collision_result);
    if ($collision_result.$size()) {
        $ctContacts0 = 0;
        $cData.$m_gLocalContacts = $rt_createArray(oooi_CollideCylinderTrimesh$sLocalContactData, $cData.$m_iFlags0 & 65535);
        $i = 0;
        while ($i < $cData.$m_gLocalContacts.data.length) {
            $cData.$m_gLocalContacts.data[$i] = oooi_CollideCylinderTrimesh$sLocalContactData__init_(null);
            $i = $i + 1 | 0;
        }
        $boxesresult = $collision_result.$GIM_DYNARRAY_POINTER0();
        $ptrimesh = $o2.$m_collision_trimesh;
        $ptrimesh.$gim_trimesh_locks_work_data();
        $i = 0;
        a: {
            while (true) {
                if ($i >= $collision_result.$size())
                    break a;
                $Triint = $boxesresult.data[$i];
                $dvf = $rt_createArray(oooig_GimGeometry$vec3f, 3);
                var$16 = $dvf.data;
                var$16[0] = oooig_GimGeometry$vec3f__init_();
                var$16[1] = oooig_GimGeometry$vec3f__init_();
                var$16[2] = oooig_GimGeometry$vec3f__init_();
                $ptrimesh.$gim_trimesh_get_triangle_vertices($Triint, var$16[0], var$16[1], var$16[2]);
                $dv = $rt_createArray(oom_DVector3, 3);
                var$18 = $dv.data;
                var$18[0] = oom_DVector3__init_();
                var$18[1] = oom_DVector3__init_();
                var$18[2] = oom_DVector3__init_();
                var$18[0].$set14(var$16[0].$f);
                var$18[1].$set14(var$16[1].$f);
                var$18[2].$set14(var$16[2].$f);
                $bFinishSearching = oooicj_RefBoolean__init_(0);
                $ctContacts0 = $cData.$TestCollisionForSingleTriangle($ctContacts0, $Triint, $dv, $bFinishSearching);
                if ($bFinishSearching.$b)
                    break;
                $i = $i + 1 | 0;
            }
        }
        $ptrimesh.$gim_trimesh_unlocks_work_data();
        if ($cData.$m_nContacts)
            $nContactCount = $cData.$_ProcessLocalContacts($contacts, $o1, $o2);
    }
    $collision_result.$GIM_DYNARRAY_DESTROY();
    return $nContactCount;
};
function jur_CharClass$7() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz7 = null;
    a.$this$0210 = null;
}
function jur_CharClass$7__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$7();
    $java.jur_CharClass$7__init_(var_2, var_0, var_1);
    return var_2;
}
$java.jur_CharClass$7__init_ = function($this, $this$0, var$2) {
    $this.$this$0210 = $this$0;
    $this.$val$clazz7 = var$2;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_CharClass$7_contains = function($this, $ch) {
    return $this.$val$clazz7.$contains0($ch);
};
function jur_CharClass$8() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz8 = null;
    a.$val$curAlt8 = 0;
    a.$this$0211 = null;
}
function jur_CharClass$8__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$8();
    $java.jur_CharClass$8__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
$java.jur_CharClass$8__init_ = function($this, $this$0, var$2, var$3) {
    $this.$this$0211 = $this$0;
    $this.$val$clazz8 = var$2;
    $this.$val$curAlt8 = var$3;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_CharClass$8_contains = function($this, $ch) {
    return !$this.$val$clazz8.$contains0($ch) && !($this.$val$curAlt8 ^ $this.$this$0211.$bits.$get17($ch)) ? 1 : 0;
};
function jur_CharClass$5() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt9 = 0;
    a.$val$nb4 = null;
    a.$val$cc3 = null;
    a.$this$0212 = null;
}
function jur_CharClass$5__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$5();
    $java.jur_CharClass$5__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
$java.jur_CharClass$5__init_ = function($this, $this$0, var$2, var$3, var$4) {
    $this.$this$0212 = $this$0;
    $this.$val$curAlt9 = var$2;
    $this.$val$nb4 = var$3;
    $this.$val$cc3 = var$4;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_CharClass$5_contains = function($this, $ch) {
    return $this.$val$curAlt9 ^ (!$this.$val$nb4.$contains0($ch) && !$this.$val$cc3.$contains0($ch) ? 0 : 1);
};
function jur_CharClass$6() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz9 = null;
    a.$this$0213 = null;
}
function jur_CharClass$6__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$6();
    $java.jur_CharClass$6__init_(var_2, var_0, var_1);
    return var_2;
}
$java.jur_CharClass$6__init_ = function($this, $this$0, var$2) {
    $this.$this$0213 = $this$0;
    $this.$val$clazz9 = var$2;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_CharClass$6_contains = function($this, $ch) {
    return $this.$val$clazz9.$contains0($ch) ? 0 : 1;
};
function jm_BigDecimal() {
    var a = this; jl_Number.call(a);
    a.$hashCode5 = 0;
    a.$intVal = null;
    a.$bitLength0 = 0;
    a.$smallValue = Long_ZERO;
    a.$scale6 = 0;
    a.$precision = 0;
}
$java.jm_BigDecimal_ZERO = null;
$java.jm_BigDecimal_ONE = null;
$java.jm_BigDecimal_TEN = null;
$java.jm_BigDecimal_FIVE_POW = null;
$java.jm_BigDecimal_TEN_POW = null;
$java.jm_BigDecimal_LONG_TEN_POW = null;
$java.jm_BigDecimal_LONG_FIVE_POW = null;
$java.jm_BigDecimal_LONG_FIVE_POW_BIT_LENGTH = null;
$java.jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH = null;
$java.jm_BigDecimal_BI_SCALED_BY_ZERO = null;
$java.jm_BigDecimal_ZERO_SCALED_BY = null;
$java.jm_BigDecimal_CH_ZEROS = null;
$java.jm_BigDecimal_$callClinit = function() {
    $java.jm_BigDecimal_$callClinit = $rt_eraseClinit(jm_BigDecimal);
    $java.jm_BigDecimal__clinit_();
};
$java.jm_BigDecimal__init_ = function(var_0, var_1) {
    var var_2 = new jm_BigDecimal();
    $java.jm_BigDecimal__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.jm_BigDecimal__init_1 = function(var_0, var_1, var_2) {
    var var_3 = new jm_BigDecimal();
    $java.jm_BigDecimal__init_2(var_3, var_0, var_1, var_2);
    return var_3;
};
$java.jm_BigDecimal__init_3 = function(var_0) {
    var var_1 = new jm_BigDecimal();
    $java.jm_BigDecimal__init_4(var_1, var_0);
    return var_1;
};
$java.jm_BigDecimal__init_0 = function($this, $smallValue, $scale) {
    $java.jm_BigDecimal_$callClinit();
    jl_Number__init_0($this);
    $this.$smallValue = Long_fromInt($smallValue);
    $this.$scale6 = $scale;
    $this.$bitLength0 = $java.jm_BigDecimal_bitLength($smallValue);
};
$java.jm_BigDecimal__init_2 = function($this, $in, $offset, $len) {
    var $last, var$5, $unscaledBuffer, $bufLength, var$8, $counter, $wasNonZero, var$11, var$12, var$13, var$14, $newScale;
    $java.jm_BigDecimal_$callClinit();
    jl_Number__init_0($this);
    $last = $offset + ($len - 1 | 0) | 0;
    if ($in === null)
        $rt_throw(jl_NullPointerException__init_());
    var$5 = $in.data;
    if ($last < var$5.length && $offset >= 0 && $len > 0 && $last >= 0) {
        $unscaledBuffer = jl_StringBuilder__init_0($len);
        $bufLength = 0;
        if ($offset > $last)
            var$8 = $offset;
        else if (var$5[$offset] != 43)
            var$8 = $offset;
        else {
            $offset = $offset + 1 | 0;
            var$8 = $offset;
        }
        $counter = 0;
        $wasNonZero = 0;
        while (true) {
            var$11 = $rt_compare(var$8, $last);
            if (var$11 > 0)
                break;
            if (var$5[var$8] == 46)
                break;
            if (var$5[var$8] == 101)
                break;
            if (var$5[var$8] == 69)
                break;
            if (!$wasNonZero) {
                if (var$5[var$8] != 48)
                    $wasNonZero = 1;
                else
                    $counter = $counter + 1 | 0;
            }
            var$8 = var$8 + 1 | 0;
        }
        var$12 = var$8 - $offset | 0;
        $unscaledBuffer.$append20($in, $offset, var$12);
        var$12 = $bufLength + var$12 | 0;
        if (var$11 <= 0 && var$5[var$8] == 46) {
            var$13 = var$8 + 1 | 0;
            var$8 = var$13;
            while (var$8 <= $last && var$5[var$8] != 101 && var$5[var$8] != 69) {
                if (!$wasNonZero) {
                    if (var$5[var$8] != 48)
                        $wasNonZero = 1;
                    else
                        $counter = $counter + 1 | 0;
                }
                var$8 = var$8 + 1 | 0;
            }
            $this.$scale6 = var$8 - var$13 | 0;
            var$12 = var$12 + $this.$scale6 | 0;
            $unscaledBuffer.$append20($in, var$13, $this.$scale6);
        } else
            $this.$scale6 = 0;
        if (var$8 <= $last && !(var$5[var$8] != 101 && var$5[var$8] != 69)) {
            var$13 = var$8 + 1 | 0;
            if (var$13 > $last)
                var$8 = var$13;
            else if (var$5[var$13] != 43)
                var$8 = var$13;
            else {
                var$8 = var$13 + 1 | 0;
                if (var$8 > $last)
                    var$8 = var$13;
                else if (var$5[var$8] == 45)
                    var$8 = var$13;
            }
            var$14 = jl_String_valueOf2($in, var$8, ($last + 1 | 0) - var$8 | 0);
            $newScale = Long_sub(Long_fromInt($this.$scale6), Long_fromInt(jl_Integer_parseInt0(var$14)));
            $this.$scale6 = $newScale.lo;
            if (Long_ne($newScale, Long_fromInt($this.$scale6)))
                $rt_throw(jl_NumberFormatException__init_0($rt_s(1379)));
        }
        if (var$12 >= 19)
            $java.jm_BigDecimal_setUnscaledValue($this, jm_BigInteger__init_3($unscaledBuffer.$toString()));
        else {
            $this.$smallValue = jl_Long_parseLong0($unscaledBuffer.$toString());
            $this.$bitLength0 = $java.jm_BigDecimal_bitLength0($this.$smallValue);
        }
        $this.$precision = $unscaledBuffer.$length() - $counter | 0;
        if ($unscaledBuffer.$charAt(0) == 45)
            $this.$precision = $this.$precision - 1 | 0;
        return;
    }
    $rt_throw(jl_NumberFormatException__init_());
};
$java.jm_BigDecimal__init_4 = function($this, $val) {
    $java.jm_BigDecimal_$callClinit();
    $java.jm_BigDecimal__init_2($this, $val.$toCharArray(), 0, $val.$length());
};
$java.jm_BigDecimal_signum = function($this) {
    if ($this.$bitLength0 >= 64)
        return $java.jm_BigDecimal_getUnscaledValue($this).$signum0();
    return jl_Long_signum($this.$smallValue);
};
$java.jm_BigDecimal_isZero = function($this) {
    return !$this.$bitLength0 && Long_ne($this.$smallValue, Long_fromInt(-1)) ? 1 : 0;
};
$java.jm_BigDecimal_compareTo = function($this, $val) {
    var $thisSign, $valueSign, var$4, $diffScale, $diffPrecision, var$7, $thisUnscaled, $valUnscaled;
    $thisSign = $this.$signum0();
    $valueSign = $val.$signum0();
    var$4 = $rt_compare($thisSign, $valueSign);
    if (var$4) {
        if (var$4 >= 0)
            return 1;
        return (-1);
    }
    if ($this.$scale6 == $val.$scale6 && $this.$bitLength0 < 64 && $val.$bitLength0 < 64)
        return Long_lt($this.$smallValue, $val.$smallValue) ? (-1) : Long_le($this.$smallValue, $val.$smallValue) ? 0 : 1;
    $diffScale = Long_sub(Long_fromInt($this.$scale6), Long_fromInt($val.$scale6));
    $diffPrecision = $java.jm_BigDecimal_aproxPrecision($this) - $java.jm_BigDecimal_aproxPrecision($val) | 0;
    var$7 = Long_fromInt($diffPrecision);
    if (Long_gt(var$7, Long_add($diffScale, Long_fromInt(1))))
        return $thisSign;
    if (Long_lt(var$7, Long_sub($diffScale, Long_fromInt(1))))
        return  -$thisSign;
    $thisUnscaled = $java.jm_BigDecimal_getUnscaledValue($this);
    $valUnscaled = $java.jm_BigDecimal_getUnscaledValue($val);
    var$4 = Long_compare($diffScale, Long_ZERO);
    if (var$4 < 0)
        $thisUnscaled = $thisUnscaled.$multiply(jm_Multiplication_powerOf10(Long_neg($diffScale)));
    else if (var$4 > 0)
        $valUnscaled = $valUnscaled.$multiply(jm_Multiplication_powerOf10($diffScale));
    return $thisUnscaled.$compareTo7($valUnscaled);
};
$java.jm_BigDecimal_equals = function($this, $x) {
    var $x1, var$3, var$4, var$5;
    if ($this === $x)
        return 1;
    if (!($x instanceof jm_BigDecimal))
        return 0;
    a: {
        b: {
            c: {
                $x1 = $x;
                if ($x1.$scale6 == $this.$scale6) {
                    if ($this.$bitLength0 >= 64) {
                        var$3 = $this.$intVal;
                        var$4 = $x1.$intVal;
                        if (!var$3.$equals0(var$4))
                            break c;
                        else
                            break b;
                    }
                    if (Long_eq($x1.$smallValue, $this.$smallValue))
                        break b;
                }
            }
            var$5 = 0;
            break a;
        }
        var$5 = 1;
    }
    return var$5;
};
$java.jm_BigDecimal_hashCode = function($this) {
    if ($this.$hashCode5)
        return $this.$hashCode5;
    if ($this.$bitLength0 >= 64) {
        $this.$hashCode5 = (17 * $this.$intVal.$hashCode() | 0) + $this.$scale6 | 0;
        return $this.$hashCode5;
    }
    $this.$hashCode5 = $this.$smallValue.lo;
    $this.$hashCode5 = (33 * $this.$hashCode5 | 0) + $this.$smallValue.hi | 0;
    $this.$hashCode5 = (17 * $this.$hashCode5 | 0) + $this.$scale6 | 0;
    return $this.$hashCode5;
};
$java.jm_BigDecimal_toBigInteger = function($this) {
    if ($this.$scale6 && !$java.jm_BigDecimal_isZero($this)) {
        if ($this.$scale6 >= 0)
            return $java.jm_BigDecimal_getUnscaledValue($this).$divide0(jm_Multiplication_powerOf10(Long_fromInt($this.$scale6)));
        return $java.jm_BigDecimal_getUnscaledValue($this).$multiply(jm_Multiplication_powerOf10(Long_neg(Long_fromInt($this.$scale6))));
    }
    return $java.jm_BigDecimal_getUnscaledValue($this);
};
$java.jm_BigDecimal_intValue = function($this) {
    return $this.$scale6 > (-32) && $this.$scale6 <= $java.jm_BigDecimal_aproxPrecision($this) ? $this.$toBigInteger().$intValue() : 0;
};
$java.jm_BigDecimal_floatValue = function($this) {
    var $floatResult, $powerOfTwo, var$3;
    $floatResult = $this.$signum0();
    $powerOfTwo = Long_sub(Long_fromInt($this.$bitLength0), Long_fromNumber($this.$scale6 / 0.3010299956639812));
    var$3 = Long_ge($powerOfTwo, Long_fromInt(-149)) && $floatResult !== 0.0 ? (Long_le($powerOfTwo, Long_fromInt(129)) ? $this.$doubleValue() : $floatResult * Infinity) : $floatResult * 0.0;
    return var$3;
};
$java.jm_BigDecimal_doubleValue = function($this) {
    var $sign, $exponent, $powerOfTwo, $mantisa, var$5, $powerOfTen, $k, $quotAndRem, var$9, $compRem, $lowestSetBit, $discardedSize, $bits, var$14, var$15, var$16, var$17;
    $sign = $this.$signum0();
    $exponent = 1076;
    $powerOfTwo = Long_sub(Long_fromInt($this.$bitLength0), Long_fromNumber($this.$scale6 / 0.3010299956639812));
    if (Long_ge($powerOfTwo, Long_fromInt(-1074)) && $sign) {
        if (Long_gt($powerOfTwo, Long_fromInt(1025)))
            return $sign * Infinity;
        $mantisa = $java.jm_BigDecimal_getUnscaledValue($this).$abs2();
        if ($this.$scale6 <= 0)
            var$5 = $mantisa.$multiply(jm_Multiplication_powerOf10(Long_fromInt( -$this.$scale6)));
        else {
            $powerOfTen = jm_Multiplication_powerOf10(Long_fromInt($this.$scale6));
            $k = 100 - $powerOfTwo.lo | 0;
            if ($k > 0) {
                $mantisa = $mantisa.$shiftLeft0($k);
                $exponent = $exponent - $k | 0;
            }
            $quotAndRem = $mantisa.$divideAndRemainder($powerOfTen);
            var$9 = $quotAndRem.data;
            $compRem = var$9[1].$shiftLeftOneBit1().$compareTo7($powerOfTen);
            var$5 = var$9[0].$shiftLeft0(2).$add11(jm_BigInteger_valueOf(Long_fromInt(($rt_imul($compRem, $compRem + 3 | 0) / 2 | 0) + 1 | 0)));
            $exponent = $exponent + (-2) | 0;
        }
        $lowestSetBit = var$5.$getLowestSetBit();
        $discardedSize = var$5.$bitLength3() - 54 | 0;
        if ($discardedSize <= 0) {
            $bits = Long_shl(var$5.$longValue(),  -$discardedSize);
            var$14 = Long_ne(Long_and($bits, Long_fromInt(3)), Long_fromInt(3)) ? $bits : Long_add($bits, Long_fromInt(2));
        } else {
            $bits = var$5.$shiftRight0($discardedSize).$longValue();
            var$14 = !(Long_eq(Long_and($bits, Long_fromInt(1)), Long_fromInt(1)) && $lowestSetBit < $discardedSize) && Long_ne(Long_and($bits, Long_fromInt(3)), Long_fromInt(3)) ? $bits : Long_add($bits, Long_fromInt(2));
        }
        if (Long_eq(Long_and(var$14, new Long(0, 4194304)), Long_ZERO)) {
            var$15 = Long_shr(var$14, 1);
            var$16 = $exponent + $discardedSize | 0;
        } else {
            var$15 = Long_shr(var$14, 2);
            var$16 = $exponent + ($discardedSize + 1 | 0) | 0;
        }
        if (var$16 > 2046)
            return $sign * Infinity;
        if (var$16 <= 0) {
            if (var$16 < (-53))
                return $sign * 0.0;
            a: {
                var$15 = Long_shr($bits, 1);
                var$17 = Long_and(var$15, Long_shru(Long_fromInt(-1), 63 + var$16 | 0));
                var$15 = Long_shr(var$15,  -var$16);
                if (Long_ne(Long_and(var$15, Long_fromInt(3)), Long_fromInt(3))) {
                    if (Long_ne(Long_and(var$15, Long_fromInt(1)), Long_fromInt(1)))
                        break a;
                    if (Long_eq(var$17, Long_ZERO))
                        break a;
                    if ($lowestSetBit >= $discardedSize)
                        break a;
                }
                var$15 = Long_add(var$15, Long_fromInt(1));
            }
            var$16 = 0;
            var$15 = Long_shr(var$15, 1);
        }
        var$15 = Long_or(Long_or(Long_and(Long_fromInt($sign), new Long(0, 2147483648)), Long_shl(Long_fromInt(var$16), 52)), Long_and(var$15, new Long(4294967295, 1048575)));
        return $rt_longBitsToDouble(var$15);
    }
    return $sign * 0.0;
};
$java.jm_BigDecimal_aproxPrecision = function($this) {
    return $this.$precision > 0 ? $this.$precision : (($this.$bitLength0 - 1 | 0) * 0.3010299956639812 | 0) + 1 | 0;
};
$java.jm_BigDecimal_getUnscaledValue = function($this) {
    if ($this.$intVal === null)
        $this.$intVal = jm_BigInteger_valueOf($this.$smallValue);
    return $this.$intVal;
};
$java.jm_BigDecimal_setUnscaledValue = function($this, $unscaledValue) {
    $this.$intVal = $unscaledValue;
    $this.$bitLength0 = $unscaledValue.$bitLength3();
    if ($this.$bitLength0 < 64)
        $this.$smallValue = $unscaledValue.$longValue();
};
$java.jm_BigDecimal_bitLength0 = function($smallValue) {
    $java.jm_BigDecimal_$callClinit();
    if (Long_lt($smallValue, Long_ZERO))
        $smallValue = Long_xor($smallValue, Long_fromInt(-1));
    return 64 - jl_Long_numberOfLeadingZeros($smallValue) | 0;
};
$java.jm_BigDecimal_bitLength = function($smallValue) {
    $java.jm_BigDecimal_$callClinit();
    if ($smallValue < 0)
        $smallValue = $smallValue ^ (-1);
    return 32 - jl_Integer_numberOfLeadingZeros($smallValue) | 0;
};
$java.jm_BigDecimal_compareTo0 = function($this, var$1) {
    return $this.$compareTo8(var$1);
};
$java.jm_BigDecimal__clinit_ = function() {
    var var$1, var$2, $i, $j;
    $java.jm_BigDecimal_ZERO = $java.jm_BigDecimal__init_(0, 0);
    $java.jm_BigDecimal_ONE = $java.jm_BigDecimal__init_(1, 0);
    $java.jm_BigDecimal_TEN = $java.jm_BigDecimal__init_(10, 0);
    var$1 = $rt_createLongArray(19);
    var$2 = var$1.data;
    var$2[0] = Long_fromInt(1);
    var$2[1] = Long_fromInt(10);
    var$2[2] = Long_fromInt(100);
    var$2[3] = Long_fromInt(1000);
    var$2[4] = Long_fromInt(10000);
    var$2[5] = Long_fromInt(100000);
    var$2[6] = Long_fromInt(1000000);
    var$2[7] = Long_fromInt(10000000);
    var$2[8] = Long_fromInt(100000000);
    var$2[9] = Long_fromInt(1000000000);
    var$2[10] = new Long(1410065408, 2);
    var$2[11] = new Long(1215752192, 23);
    var$2[12] = new Long(3567587328, 232);
    var$2[13] = new Long(1316134912, 2328);
    var$2[14] = new Long(276447232, 23283);
    var$2[15] = new Long(2764472320, 232830);
    var$2[16] = new Long(1874919424, 2328306);
    var$2[17] = new Long(1569325056, 23283064);
    var$2[18] = new Long(2808348672, 232830643);
    $java.jm_BigDecimal_LONG_TEN_POW = var$1;
    var$1 = $rt_createLongArray(28);
    var$2 = var$1.data;
    var$2[0] = Long_fromInt(1);
    var$2[1] = Long_fromInt(5);
    var$2[2] = Long_fromInt(25);
    var$2[3] = Long_fromInt(125);
    var$2[4] = Long_fromInt(625);
    var$2[5] = Long_fromInt(3125);
    var$2[6] = Long_fromInt(15625);
    var$2[7] = Long_fromInt(78125);
    var$2[8] = Long_fromInt(390625);
    var$2[9] = Long_fromInt(1953125);
    var$2[10] = Long_fromInt(9765625);
    var$2[11] = Long_fromInt(48828125);
    var$2[12] = Long_fromInt(244140625);
    var$2[13] = Long_fromInt(1220703125);
    var$2[14] = new Long(1808548329, 1);
    var$2[15] = new Long(452807053, 7);
    var$2[16] = new Long(2264035265, 35);
    var$2[17] = new Long(2730241733, 177);
    var$2[18] = new Long(766306777, 888);
    var$2[19] = new Long(3831533885, 4440);
    var$2[20] = new Long(1977800241, 22204);
    var$2[21] = new Long(1299066613, 111022);
    var$2[22] = new Long(2200365769, 555111);
    var$2[23] = new Long(2411894253, 2775557);
    var$2[24] = new Long(3469536673, 13877787);
    var$2[25] = new Long(167814181, 69388939);
    var$2[26] = new Long(839070905, 346944695);
    var$2[27] = new Long(4195354525, 1734723475);
    $java.jm_BigDecimal_LONG_FIVE_POW = var$1;
    $java.jm_BigDecimal_LONG_FIVE_POW_BIT_LENGTH = $rt_createIntArray($java.jm_BigDecimal_LONG_FIVE_POW.data.length);
    $java.jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH = $rt_createIntArray($java.jm_BigDecimal_LONG_TEN_POW.data.length);
    $java.jm_BigDecimal_BI_SCALED_BY_ZERO = $rt_createArray(jm_BigDecimal, 11);
    $java.jm_BigDecimal_ZERO_SCALED_BY = $rt_createArray(jm_BigDecimal, 11);
    $java.jm_BigDecimal_CH_ZEROS = $rt_createCharArray(100);
    $i = 0;
    while ($i < $java.jm_BigDecimal_ZERO_SCALED_BY.data.length) {
        $java.jm_BigDecimal_BI_SCALED_BY_ZERO.data[$i] = $java.jm_BigDecimal__init_($i, 0);
        $java.jm_BigDecimal_ZERO_SCALED_BY.data[$i] = $java.jm_BigDecimal__init_(0, $i);
        $java.jm_BigDecimal_CH_ZEROS.data[$i] = 48;
        $i = $i + 1 | 0;
    }
    while ($i < $java.jm_BigDecimal_CH_ZEROS.data.length) {
        $java.jm_BigDecimal_CH_ZEROS.data[$i] = 48;
        $i = $i + 1 | 0;
    }
    $j = 0;
    while ($j < $java.jm_BigDecimal_LONG_FIVE_POW_BIT_LENGTH.data.length) {
        $java.jm_BigDecimal_LONG_FIVE_POW_BIT_LENGTH.data[$j] = $java.jm_BigDecimal_bitLength0($java.jm_BigDecimal_LONG_FIVE_POW.data[$j]);
        $j = $j + 1 | 0;
    }
    $j = 0;
    while ($j < $java.jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH.data.length) {
        $java.jm_BigDecimal_LONG_TEN_POW_BIT_LENGTH.data[$j] = $java.jm_BigDecimal_bitLength0($java.jm_BigDecimal_LONG_TEN_POW.data[$j]);
        $j = $j + 1 | 0;
    }
    jm_Multiplication_$callClinit();
    $java.jm_BigDecimal_TEN_POW = jm_Multiplication_bigTenPows;
    $java.jm_BigDecimal_FIVE_POW = jm_Multiplication_bigFivePows;
};
function jur_CharClass$9() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz10 = null;
    a.$val$curAlt10 = 0;
    a.$this$0214 = null;
}
function jur_CharClass$9__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$9();
    $java.jur_CharClass$9__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
$java.jur_CharClass$9__init_ = function($this, $this$0, var$2, var$3) {
    $this.$this$0214 = $this$0;
    $this.$val$clazz10 = var$2;
    $this.$val$curAlt10 = var$3;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_CharClass$9_contains = function($this, $ch) {
    return !$this.$val$clazz10.$contains0($ch) && !($this.$val$curAlt10 ^ $this.$this$0214.$bits.$get17($ch)) ? 0 : 1;
};
function jl_Character() {
    jl_Object.call(this);
    this.$value11 = 0;
}
$java.jl_Character_TYPE = null;
$java.jl_Character_digitMapping = null;
$java.jl_Character_classMapping = null;
$java.jl_Character_characterCache = null;
$java.jl_Character_$$metadata$$0 = null;
$java.jl_Character_$$metadata$$1 = null;
$java.jl_Character_$callClinit = function() {
    $java.jl_Character_$callClinit = $rt_eraseClinit(jl_Character);
    $java.jl_Character__clinit_();
};
$java.jl_Character__init_ = function(var_0) {
    var var_1 = new jl_Character();
    $java.jl_Character__init_0(var_1, var_0);
    return var_1;
};
$java.jl_Character__init_0 = function($this, $value) {
    $java.jl_Character_$callClinit();
    jl_Object__init_0($this);
    $this.$value11 = $value;
};
function jl_Character_toString($c) {
    var var$2, var$3;
    $java.jl_Character_$callClinit();
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_3(var$2, var$3);
    return var$2;
}
$java.jl_Character_isBmpCodePoint = function($codePoint) {
    $java.jl_Character_$callClinit();
    return $codePoint > 0 && $codePoint <= 65535 ? 1 : 0;
};
function jl_Character_isSupplementaryCodePoint($codePoint) {
    $java.jl_Character_$callClinit();
    return $codePoint >= 65536 && $codePoint <= 1114111 ? 1 : 0;
}
function jl_Character_isHighSurrogate($ch) {
    $java.jl_Character_$callClinit();
    return ($ch & 64512) != 55296 ? 0 : 1;
}
function jl_Character_isLowSurrogate($ch) {
    $java.jl_Character_$callClinit();
    return ($ch & 64512) != 56320 ? 0 : 1;
}
function jl_Character_isSurrogate($ch) {
    $java.jl_Character_$callClinit();
    return !jl_Character_isHighSurrogate($ch) && !jl_Character_isLowSurrogate($ch) ? 0 : 1;
}
function jl_Character_isSurrogatePair($high, $low) {
    $java.jl_Character_$callClinit();
    return jl_Character_isHighSurrogate($high) && jl_Character_isLowSurrogate($low) ? 1 : 0;
}
function jl_Character_toCodePoint($high, $low) {
    $java.jl_Character_$callClinit();
    return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
}
function jl_Character_codePointAt($a, $index) {
    $java.jl_Character_$callClinit();
    return $java.jl_Character_codePointAt($a, $index, $a.data.length);
}
$java.jl_Character_codePointAt = function($a, $index, $limit) {
    var var$4, var$5;
    $java.jl_Character_$callClinit();
    if ($index < ($limit - 1 | 0)) {
        var$4 = $a.data;
        if (jl_Character_isHighSurrogate(var$4[$index])) {
            var$5 = $index + 1 | 0;
            if (jl_Character_isLowSurrogate(var$4[var$5]))
                return jl_Character_toCodePoint(var$4[$index], var$4[var$5]);
        }
    }
    return $a.data[$index];
};
function jl_Character_highSurrogate($codePoint) {
    var var$2;
    $java.jl_Character_$callClinit();
    var$2 = $codePoint - 65536 | 0;
    return (55296 | var$2 >> 10 & 1023) & 65535;
}
function jl_Character_lowSurrogate($codePoint) {
    $java.jl_Character_$callClinit();
    return (56320 | $codePoint & 1023) & 65535;
}
function jl_Character_toLowerCase($ch) {
    $java.jl_Character_$callClinit();
    return jl_Character_toLowerCase0($ch) & 65535;
}
function jl_Character_toLowerCase0($ch) {
    $java.jl_Character_$callClinit();
    return otp_Platform_stringFromCharCode($ch).toLowerCase().charCodeAt(0);
}
function jl_Character_toUpperCase($ch) {
    $java.jl_Character_$callClinit();
    return jl_Character_toUpperCase0($ch) & 65535;
}
function jl_Character_toUpperCase0($codePoint) {
    $java.jl_Character_$callClinit();
    return otp_Platform_stringFromCharCode($codePoint).toUpperCase().charCodeAt(0);
}
function jl_Character_digit($ch, $radix) {
    $java.jl_Character_$callClinit();
    return $java.jl_Character_digit($ch, $radix);
}
$java.jl_Character_digit = function($codePoint, $radix) {
    var $d;
    $java.jl_Character_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        $d = $java.jl_Character_getNumericValue($codePoint);
        if ($d >= $radix)
            $d = (-1);
        return $d;
    }
    return (-1);
};
function jl_Character_getNumericValue($ch) {
    $java.jl_Character_$callClinit();
    return $java.jl_Character_getNumericValue($ch);
}
$java.jl_Character_getNumericValue = function($codePoint) {
    var $digitMapping, var$3, $l, $u, $idx, var$7, $val, var$9;
    $java.jl_Character_$callClinit();
    $digitMapping = $java.jl_Character_getDigitMapping();
    var$3 = $digitMapping.data;
    $l = 0;
    $u = (var$3.length / 2 | 0) - 1 | 0;
    while ($u >= $l) {
        $idx = ($l + $u | 0) / 2 | 0;
        var$7 = $idx * 2 | 0;
        $val = var$3[var$7];
        var$9 = $rt_compare($codePoint, $val);
        if (var$9 > 0)
            $l = $idx + 1 | 0;
        else {
            if (var$9 >= 0)
                return var$3[var$7 + 1 | 0];
            $u = $idx - 1 | 0;
        }
    }
    return (-1);
};
function jl_Character_forDigit($digit, $radix) {
    $java.jl_Character_$callClinit();
    if ($radix >= 2 && $radix <= 36 && $digit < $radix)
        return $digit < 10 ? (48 + $digit | 0) & 65535 : ((97 + $digit | 0) - 10 | 0) & 65535;
    return 0;
}
function jl_Character_isDigit($codePoint) {
    $java.jl_Character_$callClinit();
    return $java.jl_Character_getType($codePoint) != 9 ? 0 : 1;
}
$java.jl_Character_getDigitMapping = function() {
    $java.jl_Character_$callClinit();
    if ($java.jl_Character_digitMapping === null)
        $java.jl_Character_digitMapping = otciu_UnicodeHelper_decodeIntByte(($java.jl_Character_obtainDigitMapping().value !== null ? $rt_str($java.jl_Character_obtainDigitMapping().value) : null));
    return $java.jl_Character_digitMapping;
};
$java.jl_Character_obtainDigitMapping = function() {
    $java.jl_Character_$callClinit();
    if ($java.jl_Character_$$metadata$$0 === null)
        $java.jl_Character_$$metadata$$0 = $java.jl_Character_obtainDigitMapping$$create();
    return $java.jl_Character_$$metadata$$0;
};
$java.jl_Character_getClasses = function() {
    $java.jl_Character_$callClinit();
    if ($java.jl_Character_classMapping === null)
        $java.jl_Character_classMapping = otciu_UnicodeHelper_extractRle(($java.jl_Character_obtainClasses().value !== null ? $rt_str($java.jl_Character_obtainClasses().value) : null));
    return $java.jl_Character_classMapping;
};
$java.jl_Character_obtainClasses = function() {
    $java.jl_Character_$callClinit();
    if ($java.jl_Character_$$metadata$$1 === null)
        $java.jl_Character_$$metadata$$1 = $java.jl_Character_obtainClasses$$create();
    return $java.jl_Character_$$metadata$$1;
};
function jl_Character_toChars($codePoint) {
    var var$2, var$3;
    $java.jl_Character_$callClinit();
    if ($codePoint < 65536) {
        var$2 = $rt_createCharArray(1);
        var$2.data[0] = $codePoint & 65535;
        return var$2;
    }
    var$2 = $rt_createCharArray(2);
    var$3 = var$2.data;
    var$3[0] = jl_Character_highSurrogate($codePoint);
    var$3[1] = jl_Character_lowSurrogate($codePoint);
    return var$2;
}
function jl_Character_isISOControl($codePoint) {
    var var$2;
    $java.jl_Character_$callClinit();
    a: {
        b: {
            if (!($codePoint >= 0 && $codePoint <= 31)) {
                if ($codePoint < 127)
                    break b;
                if ($codePoint > 159)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
}
$java.jl_Character_getType0 = function($c) {
    $java.jl_Character_$callClinit();
    return $java.jl_Character_getType($c);
};
$java.jl_Character_getType = function($codePoint) {
    var $classes, var$3, $l, $u, $i, $range;
    $java.jl_Character_$callClinit();
    if ($java.jl_Character_isBmpCodePoint($codePoint) && jl_Character_isSurrogate($codePoint & 65535))
        return 19;
    $classes = $java.jl_Character_getClasses();
    var$3 = $classes.data;
    $l = 0;
    $u = var$3.length - 1 | 0;
    while ($l <= $u) {
        $i = ($l + $u | 0) / 2 | 0;
        $range = var$3[$i];
        if ($codePoint >= $range.$end1)
            $l = $i + 1 | 0;
        else {
            if ($codePoint >= $range.$start1)
                return $range.$data0.data[$codePoint - $range.$start1 | 0];
            $u = $i - 1 | 0;
        }
    }
    return 0;
};
function jl_Character_isLowerCase($codePoint) {
    $java.jl_Character_$callClinit();
    return $java.jl_Character_getType($codePoint) != 2 ? 0 : 1;
}
$java.jl_Character_isUpperCase = function($codePoint) {
    $java.jl_Character_$callClinit();
    return $java.jl_Character_getType($codePoint) != 1 ? 0 : 1;
};
function jl_Character_isTitleCase($codePoint) {
    $java.jl_Character_$callClinit();
    return $java.jl_Character_getType($codePoint) != 3 ? 0 : 1;
}
function jl_Character_isDefined($codePoint) {
    $java.jl_Character_$callClinit();
    return !$java.jl_Character_getType($codePoint) ? 0 : 1;
}
function jl_Character_isLetter($codePoint) {
    $java.jl_Character_$callClinit();
    switch ($java.jl_Character_getType($codePoint)) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            break;
        default:
            return 0;
    }
    return 1;
}
$java.jl_Character_isLetterOrDigit = function($ch) {
    $java.jl_Character_$callClinit();
    return jl_Character_isLetterOrDigit($ch);
};
function jl_Character_isLetterOrDigit($codePoint) {
    $java.jl_Character_$callClinit();
    a: {
        switch ($java.jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 9:
                break;
            case 6:
            case 7:
            case 8:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return 0;
}
$java.jl_Character_isJavaIdentifierStart = function($codePoint) {
    $java.jl_Character_$callClinit();
    a: {
        switch ($java.jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 10:
            case 23:
            case 26:
                break;
            case 6:
            case 7:
            case 8:
            case 9:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 24:
            case 25:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return $java.jl_Character_isIdentifierIgnorable($codePoint);
};
function jl_Character_isJavaIdentifierPart($codePoint) {
    $java.jl_Character_$callClinit();
    a: {
        switch ($java.jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
            case 23:
            case 26:
                break;
            case 7:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 24:
            case 25:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return $java.jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isUnicodeIdentifierStart($codePoint) {
    $java.jl_Character_$callClinit();
    a: {
        switch ($java.jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 10:
                break;
            case 6:
            case 7:
            case 8:
            case 9:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return $java.jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isUnicodeIdentifierPart($codePoint) {
    $java.jl_Character_$callClinit();
    a: {
        switch ($java.jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
            case 23:
                break;
            case 7:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return $java.jl_Character_isIdentifierIgnorable($codePoint);
}
$java.jl_Character_isIdentifierIgnorable = function($codePoint) {
    $java.jl_Character_$callClinit();
    a: {
        if (!($codePoint >= 0 && $codePoint <= 8) && !($codePoint >= 14 && $codePoint <= 27)) {
            if ($codePoint < 127)
                break a;
            if ($codePoint > 159)
                break a;
        }
        return 1;
    }
    return $java.jl_Character_getType($codePoint) != 16 ? 0 : 1;
};
function jl_Character_isSpaceChar($codePoint) {
    $java.jl_Character_$callClinit();
    switch ($java.jl_Character_getType($codePoint)) {
        case 12:
        case 13:
        case 14:
            break;
        default:
            return 0;
    }
    return 1;
}
function jl_Character_isWhitespace($ch) {
    $java.jl_Character_$callClinit();
    return $java.jl_Character_isWhitespace($ch);
}
$java.jl_Character_isWhitespace = function($codePoint) {
    $java.jl_Character_$callClinit();
    switch ($codePoint) {
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 28:
        case 29:
        case 30:
        case 31:
            break;
        case 160:
        case 8199:
        case 8239:
            return 0;
        default:
            return jl_Character_isSpaceChar($codePoint);
    }
    return 1;
};
$java.jl_Character__clinit_ = function() {
    $java.jl_Character_TYPE = $rt_cls($rt_charcls());
    $java.jl_Character_characterCache = $rt_createArray(jl_Character, 128);
};
$java.jl_Character_obtainDigitMapping$$create = function() {
    return {"value" : "oD#*% .%%2%)6%-:%1>%5B%9F%=J%AN%Eo%Is%Mw%Q{%U!\'Y&\'^*\'b.\'f2\'j6\'n:\'r>\'vB\'zF\'!#J\'&#N\'*#R\'.#V\'2#Z\'6#_\':#c\'>#g\'B#k\'F#o\'J#s\'N#w\'R#6)I:)M>)QB)UF)YJ)^N)bR)fV)jZ)n_)rc)vg)zk)!#o)&#s)*#w).#{)2#!+6#&+:#*+>#.+B#2+F#6+J#:+N#>+R#{R# !T#%&T#)*T#-.T#12T#56T#9:T#=>T#ABT#E6a# :a#%>a#)Ba#-Fa#1Ja#5Na#9Ra#=Va#AZa#E:s# >s#%Bs#)Fs#-Js#1Ns#5Rs#9Vs#=Zs#A_s#EZ:% _:%%c:%)g:%-k:%1o:%5s:%9w:%={:%A!<%E2F% 6F%%:F%)>F%-BF%1FF%5JF%9NF%=RF%AVF%EgP% kP%%oP%)sP%-wP%1{P%5!R%9&R%=*R%A.R%E>]% B]%%F]%)J]%-N]%1R]%5V]%9Z]%=_]%Ac]%Esg% wg%%{g%)!i%-&"
    + "i%1*i%5.i%92i%=6i%A:i%EJs% Ns%%Rs%)Vs%-Zs%1_s%5cs%9gs%=ks%Aos%E!!\' &!\'%*!\').!\'-2!\'16!\'5:!\'9>!\'=B!\'AF!\'EV,\' Z,\'%_,\')c,\'-g,\'1k,\'5o,\'9s,\'=w,\'A{,\'E.8\' 28\'%68\'):8\'->8\'1B8\'5F8\'9J8\'=N8\'AR8\'EcB\' gB\'%kB\')oB\'-sB\'1wB\'5{B\'9!D\'=&D\'A*D\'E>L\' BL\'%FL\')JL\'-NL\'1RL\'5VL\'9ZL\'=_L\'AcL\'EsV\' wV\'%{V\')!X\'-&X\'1*X\'5.X\'92X\'=6X\'A:X\'EB_\' F_\'%J_\')N_\'-R_\'1V_\'5Z_\'9__\'=c_\'Ag_\'Esw\' ww\'%{w\')!y\'-&y\'1*y\'5.y\'92y\'=6y\'A:y\'EB!) F!)%J!))N!)-R!)1V!)5Z!)9_!)=c!)Ag!)Egi+ ki+%oi+)si+-wi+1{i+5!k+9&k+=*k+A.k+Eom+ sm+%wm+){m+-!o+1&o+5*o+9.o+=2o+A6o+E>,- B,-%F"
    + ",-)J,--N,-1R,-5V,-9Z,-=_,-Ac,-E>8- B8-%F8-)J8--N8-1R8-5V8-9Z8-=_8-Ac8-E{F- !H-%&H-)*H--.H-12H-56H-9:H-=>H-ABH-E_H- cH-%gH-)kH--oH-1sH-5wH-9{H-=!J-A&J-E!Z- &Z-%*Z-).Z--2Z-16Z-5:Z-9>Z-=BZ-AFZ-E2c- 6c-%:c-)>c--Bc-1Fc-5Jc-9Nc-=Rc-AVc-EJo- No-%Ro-)Vo--Zo-1_o-5co-9go-=ko-Aoo-E.q- 2q-%6q-):q-->q-1Bq-5Fq-9Jq-=Nq-ARq-E&4r *4r%.4r)24r-64r1:4r5>4r9B4r=F4rAJ4rE{or !qr%&qr)*qr-.qr12qr56qr9:qr=>qrABqrE&ur *ur%.ur)2ur-6ur1:ur5>ur9Bur=FurAJurE**t .*t%2*t)6*t-:*t1>*t5B*t9F*t=J*tAN*tEN,t R,t%V,t)Z,t-_,t1c,t5g,t9k,t=o,tAs,tE_"
    + "4t c4t%g4t)k4t-o4t1s4t5w4t9{4t=!6tA&6tEgXt kXt%oXt)sXt-wXt1{Xt5!Zt9&Zt=*ZtA.ZtE{c@# !e@#%&e@#)*e@#-.e@#12e@#56e@#9:e@#=>e@#ABe@#Ece@#Ige@#Mke@#Qoe@#Use@#Ywe@#^{e@#b!g@#f&g@#j*g@#n.g@#r2g@#v6g@#z:g@#!#>g@#&#Bg@#*#Fg@#.#Jg@#2#Ng@#6#Rg@#:#Vg@#>#Zg@#B#_g@#F#cg@#J#gg@#N#kg@#R#*i@#I.i@#M2i@#Q6i@#U:i@#Y>i@#^Bi@#bFi@#fJi@#jNi@#nRi@#rVi@#vZi@#z_i@#!#ci@#&#gi@#*#ki@#.#oi@#2#si@#6#wi@#:#{i@#>#!k@#B#&k@#F#*k@#J#.k@#N#2k@#R#s&D# w&D#%{&D#)!(D#-&(D#1*(D#5.(D#92(D#=6(D#A:(D#E2.H# 6.H#%:.H#)>.H#-B.H#1F.H#5J.H#9N.H#=R.H#AV."
    + "H#EwuH# {uH#%!wH#)&wH#-*wH#1.wH#52wH#96wH#=:wH#A>wH#Ew$J# {$J#%!&J#)&&J#-*&J#1.&J#52&J#96&J#=:&J#A>&J#E{*J# !,J#%&,J#)*,J#-.,J#12,J#56,J#9:,J#=>,J#AB,J#E_8J# c8J#%g8J#)k8J#-o8J#1s8J#5w8J#9{8J#=!:J#A&:J#E2RJ# 6RJ#%:RJ#)>RJ#-BRJ#1FRJ#5JRJ#9NRJ#=RRJ#AVRJ#ENqJ# RqJ#%VqJ#)ZqJ#-_qJ#1cqJ#5gqJ#9kqJ#=oqJ#AsqJ#E&}J# *}J#%.}J#)2}J#-6}J#1:}J#5>}J#9B}J#=F}J#AJ}J#Eg@L# k@L#%o@L#)s@L#-w@L#1{@L#5!BL#9&BL#=*BL#A.BL#EZJL# _JL#%cJL#)gJL#-kJL#1oJL#5sJL#9wJL#={JL#A!LL#ENTL# RTL#%VTL#)ZTL#-_TL#1cTL#5gTL#9kTL#=oTL#AsTL#E:{L# >{L#"
    + "%B{L#)F{L#-J{L#1N{L#5R{L#9V{L#=Z{L#A_{L#ERkN# VkN#%ZkN#)_kN#-ckN#1gkN#5kkN#9okN#=skN#AwkN#E_$P# c$P#%g$P#)k$P#-o$P#1s$P#5w$P#9{$P#=!&P#A&&P#E.,P# 2,P#%6,P#):,P#->,P#1B,P#5F,P#9J,P#=N,P#AR,P#EFau# Jau#%Nau#)Rau#-Vau#1Zau#5_au#9cau#=gau#Akau#Eouu# suu#%wuu#){uu#-!wu#1&wu#5*wu#9.wu#=2wu#A6wu#EF0N% J0N%%N0N%)R0N%-V0N%1Z0N%5_0N%9c0N%=g0N%Ak0N%Eo0N% s0N%%w0N%){0N%-!2N%1&2N%5*2N%9.2N%=22N%A62N%E:2N% >2N%%B2N%)F2N%-J2N%1N2N%5R2N%9V2N%=Z2N%A_2N%Ec2N% g2N%%k2N%)o2N%-s2N%1w2N%5{2N%9!4N%=&4N%A*4N%E.4N% 24N%%64N%):4N%->"
    + "4N%1B4N%5F4N%9J4N%=N4N%AR4N%ERJR% VJR%%ZJR%)_JR%-cJR%1gJR%5kJR%9oJR%=sJR%AwJR%E>qR% BqR%%FqR%)JqR%-NqR%1RqR%5VqR%9ZqR%=_qR%AcqR%E:FV% >FV%%BFV%)FFV%-JFV%1NFV%5RFV%9VFV%=ZFV%A_FV%E"};
};
$java.jl_Character_obtainClasses$$create = function() {
    return {"value" : "PA-Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:PB-9[%=9<=&>:1=<=:L#<#Y#<,&?L$9B8:B(C9:C)!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!C$B##!#B##B$C#B%#B##B$C$B##B##!#!#B##!C#!#B##B$#!#B#C#&!C$F%!$#!$#!$#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!C#!$#!#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C(B##B#C#!#B%#!#!#!#!Cg&C<E3]%E-]/E&](%<%]2b\'Q! !#!#%<!#A#%C$9!A%]#!9B$ ! B##B2 B*CD!C#B$C$!#!#!#!#!#!#!#!#!#!#!#!C&!#:!#B#C#BTCQ!#!#!#!#"
    + "!#!#!#!#!#!#!#!#!#!#!#!#!#=G&H#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!# BGA#%Y\'CJ95A#^#; GN5\'9G#9G#9\'A)F<A%F%Y#A,Q\'Z$Y#;Y#^#G,91 Y#FA%F+G6J+Y%F#\'b&D! 9&G(1=G\'E#G#=G%F#J+F$^#&Y/ 1&\'F?G<A#b&:! G,&A/J+FBG*E#=Y$%A#\'[#F7G%%G*%G$%G&A#Y0 F:G$A#9 F,AVF6 F)A6G01GA)FW\')\'&I$G)I%\'I#&G(F+G#Y#J+9%F0\'I# F)A#F#A#F7 F( &A$F%A#\'&I$G%A#I#A#I#\'&A))A%F# F$G#A#J+F#[#L\'=;&9\'A#G#) F\'A%F#A#F7 F( F# F# F#A#\' "

    + "I#F) FEA%G/)G&9G#F&G, GE ^)\'^\' ^#Y&^%Y#AFFLI#G%)G\')G#I#G#&J+Y\'F\'I#G#F%G$&I$F#I(F$G%F.\'I#G#I\'\'&)J+I$\'^#BG !A&!A#CL9%C$b&*&  F%A#F( & F%A#FJ F%A#FB F%A#F( & F%A#F0 FZ F%A#FeA#G$Y*L5A$F1^+A\'b!7! A#C\'A#5b&M* =9F2-F;67A$FmY$K$F)A(F. F%G$A,F3G$Y#A*F3G#A-F. F$ G#A-FUG#)G(I)\'I#G,Y$%Y$;&\'A#J+A\'L+A\'Y\'5Y%G$1 J+A\'FD%FVA(F&G#FC\'&A&FhA+F@ G$I%G#I$A%I#\'I\'G$A%=A$Y#J+F?A#F&A,FMA%F;A\'J+,A$^CF8G#I#\'A#Y#FV)\')G( \')\'I#G)I\'G+A#\'J+A\'J+A\'Y(%Y\'A#G/(AcG%)FP\')G&)\'I&\'I#F(A%J+Y(^+G*^*A$G#)F?)G%I#G#)G$F#J+FM\')G#I$\')G$I#A)Y%FEI)G)I#G#A$Y&"
    + "J+A$F$J+F?E\'Y#C*A(BLA#B$Y)A)G$9G.)G(F%\'F\'\'F#)G#&A&CMEaC.%CCEFG[ G&!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*B)C\'A#B\'A#C)B)C)B)C\'A#B\'A#C) ! ! ! !C)B)C/A#C)D)C)D)C)D)C& C#B%$<#]$C$ C#B%$]$C%A#C#B% ]$C)B&]$A#C$ C#B%$]# M,Q&U\'Y#>?6_#?6>Y)./Q&-Y*>?Y%X#Y$:67Y,:98Y+-Q& Q+,%A#L\'Z$67%L+Z$67 E.A$[AA1G.H%\'H$G-A0^#"
    + "!^%!^##B$C#B$#=!^#:B&^\'!=!=!=B%=#B%#F%#^#C#B#Z&!C%=:^##=L1KD!#K%,^#A%Z&^&Z#^%:^#:^#:^(:^@Z#^#:=:^@b:-% ^)6767^5Z#^(67b=2! :^?Z:^IZ\'^gA:^,A6L^^pL7b=X# :^*:^WZ)b=P! :b=Y$ 67676767676767L?^MZ&67Z@6767676767Z1b= % b:$# 6767676767676767676767Za6767ZA67b:#% ^QZ6^#Z\'^HA#^AA#b=I! BP CP !#B$C#!#!#!#B%#!C#!C\'E#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#^\'!#!#G$!#A&Y%,Y#CG #A&#A#FYA(%9A/\'F8A*F( F( F( F( F( F( F( F( GAY#>?>?Y$>?9>?Y*5Y#59>?Y#>?67676767Y&%Y+U#Y%"
    + "596Y.AQ^; b=:! A-b=7$ A;^-A%-Y$=%&+6767676767^#6767676756W#=K*G%I#5E&^#K$%&9^# b&7! A#G#]#E#&5b&;! 9E$&A&FL b&?!  ^#L%^+F<A&^EA-F1^@ L+^?L)=L0^AL+^HL0b= & &b UG!&A+^b&b   %b O(!&A1F6%b&X2 A$^XA*FIE\'Y#b&-% %Y$F1J+F#A5!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#&\'H$9G+9%!#!#!#!#!#!#!#!#!#!#!#!#!#!#E#G#FhK+G#Y\'A)]8E*]#!#!#!#!#!#!#!C$!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#%C)!#!#B##!#!#!#!#%]#!#!#&!#!C$!#!#!#!#!#!#!#!#!#!#B&#B&#!#!#!#!#!#A#!#B$AQ&E##F(\'F$\'F%\'F8I#G#)^%A%L\'^#;=A\'FUY%A)I#F"
    + "SI1G#A)Y#J+A\'G3F\'Y$&9F#\'J+F=G)Y#F8G,I#A,9F>A$G$)FP\'I#G%I#G#I$Y. %J+A%Y#F&\'%F*J+F& FJG\'I#G#I#G#A*F$\'F)\')A#J+A#Y%F1%F\'^$&)\')FS\'&G$F#G#F&G#&\'&A9F#%Y#F,)G#I#Y#&E#)\'A+F\'A#F\'A#F\'A*F( F( CL<E%C)A)b#1! FDI#\'I#\'I#9)\'A#J+A\'&b CO#&A-F8A%FRA%4b `. T#b `! T#b `0 43b `D!3b&O& A#b&K! AGC(A-C&A&&\'F+:F. F& & F# F# b&M! ]1A2b&L& 76A1FbA#FWAIF-;=A#G1Y(679A\'G19U#X#6767676767676767Y#67Y%X$Y$ Y%5676767Y$:5Z$ 9;Y#A%F& b&(# A#1 Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:67967Y#F+%FNE#F@A$F\'A#F\'A#F\'A#F$A$[#:<=[# =Z%^#A+Q$^#A#F- F; F4 F# F0"
    + "A#F/ACb&]! A&Y$A%LNA$^*KVL%^2L#^$ ^-A%=AP^N\'b ## F>A$FRA0\'L<A%FAL%A*F5+F)+A&FGG&A&F? 9FEA%F)9K&AKBICIFpA#J+A\'BEA%CEA%FIA)FUA,9b 1# b&X% A*F7A+F)b 9# F\'A#& FM F#A$&A#F8 9L)F8^#L(F@A)L*AQF4 F#A&L&F7L\'A$9F;A&9AbFYA%L#F#L1A#LO&G$ G#A&G%F% F$ F>A#G$A%\'L*A(Y*A(F>L#9F>L$AAF)=F=G#A%L&Y(A*FWA$Y(F7A#L)F4A&L)F3A(Y%A-L(b 1! FkAXBTA.CTA(L\'FEG%A)J+b G% L@b !# F>L+&A)F7G,L%Y&b \'# F8A*)\')FVG0Y(A%L5J+A0G$)FNI$G%I#G#Y#1Y%A,1A#F:A(J+A\'G$FEG&)G) J+Y%&I#A*FD\'Y#&A*G#)FQI$G*I#F%Y%G%9A#J+&9&Y$ L5A,F3 F:I$G$I#\')G#Y\'\'AcF( & F% F0 F+"
    + "9A\'FP\'I$G)A&J+A\'G#I# F)A#F#A#F7 F( F# F& G#&I#\'I%A#I#A#I$A#&A\')A&F&I#A#G(A$G&b ,# FVI$G)I#G$)\'F%Y&J+ 9 9\'&AAFQI$G\')\'I%G#)G#F#9&A)J+b G# FPI$G%A#I%G#)G#Y8F%G#ACFQI$G)I#\')G#Y$&A,J+A\'Y.A4FL\')\'I#G\')\'&A(J+AWF<A#G$I#G%)G&A%J+L#Y$=b  $ FMI$G*)G#9b E! BACAJ+L*A-&b A# F)A#FHI$G%A#G#I%\'&9&)A<&G+FIG\')&G%Y)\'A)&G\'I#G$FOG.)G#Y$&Y&A>FZb (% F* FF)G( G\')\'&Y&A+J+L4A$Y#F?A#G7 )G()G#)G#AkF( F# FGG\'A$\' G# G(&\'A)J+A\'F\' F# FAI& G# I#\')\'&A(J+b W% F4G#I#Y#b ($ L6^)[%^2A.9b&;/ b G! b+P!  Y&A,b&%$ b ^K b&P1  Q*b (a b&(* b Z\'#b&Z) A(F"
    + "@ J+A%Y#b A! F?A#G&9A+FQG(Y&^%E%9=A+J+ L( F6A&F4b Q+ BACAL8Y%b F! FmA%\'&IXA(G%E.AbE#9%A=&b W@!&A)b&T, b .5#b&@% ARF$A2F%A)b&-\' b %E b&L! A&F.A$F*A(F+A#=G#9Q%b =.!b=W$ A+^HA#^^I#G$^$I\'Q)G)^#G(^?G%^]A8^dG$=b ;# L5A-b=8! A*L:b (# B;C;B;C( C3B;C;! B#A#!A#B#A#B% B)C% # C( C,B;C;B# B%A#B) B( C;B# B% B& !A$B( C;B;C;B;C;B;C;B;C;B;C;B;C=A#B::C::C\'B::C::C\'B::C::C\'B::C::C\'B::C::C\'!#A#JSb= ) GX^%GS^)\'^/\'^#Y&A0G& G0b 16 G( G2A#G( G# G&b 6$ FNA$G(E(A#J+A%&=b Q& FMG%J+A&;b  5 b&&$ A#L*G(AJBCCCG(%A%J+A%Y#b 2- L]=L$;L%AnLN="
    + "L0b #$ F% F< F# &A#& F+ F% & &A\'&A%& & & F$ F# &A#& & & & & F# &A#F% F( F% F% & F+ F2A&F$ F& F2AUZ#b /% ^MA%b=E! A-^0A#^0 ^0 ^FA+L.A$b=>! A$^_AZ^>A.^MA%^*A(^#A/^\'b ;# b=]$ ]&b=7, A+^.A$^,A&b=U! A-b=:! A(^-A5^-A%^YA)^+A\'^IA)^?b 3! ^- b=F!  ^%A$^JA#^\'A$^>A#b=(# A-^/A#^%A%^$A&^$A.^\'b K6 &b   %b   %b 6<#&AJ&b T !&A,&b =$ &A#&b  ;!&A/&b PU!&b @Q b&?) b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   "
    + "%b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b D8 1A?b1A! b  # b\'Q$ b   %b   %b   %b 1Y$3b   %b   %b   %b ^a$3A#3b   %b   %b   %b ^a$3"};
};
function oktm_IndexBufferObject$Companion() {
    jl_Object.call(this);
}
$java.oktm_IndexBufferObject$Companion__init_ = function() {
    var var_0 = new oktm_IndexBufferObject$Companion();
    oktm_IndexBufferObject$Companion__init_0(var_0);
    return var_0;
};
function oktm_IndexBufferObject$Companion__init_(var_0) {
    var var_1 = new oktm_IndexBufferObject$Companion();
    $java.oktm_IndexBufferObject$Companion__init_0(var_1, var_0);
    return var_1;
}
function oktm_IndexBufferObject$Companion__init_0($this) {
    jl_Object__init_0($this);
}
$java.oktm_IndexBufferObject$Companion__init_0 = function($this, $$constructor_marker) {
    oktm_IndexBufferObject$Companion__init_0($this);
};
function oktm_IVertexInput$DefaultImpls() {
    jl_Object.call(this);
}
function oktm_IVertexInput$DefaultImpls_getSizeInBytes($$this) {
    var var$2, var$3;
    a: {
        var$2 = $$this.$getSize();
        switch ($$this.$getType()) {
            case 5120:
            case 5121:
                break;
            case 5122:
            case 5123:
                var$3 = 2;
                break a;
            case 5126:
            case 5132:
                var$3 = 4;
                break a;
            default:
                var$3 = 0;
                break a;
        }
        var$3 = 1;
    }
    var$2 = $rt_imul(var$2, var$3);
    return var$2;
}
function ooott_SameThreadTaskExecutor() {
    ooott_AbstractTaskExecutor.call(this);
    this.$queue0 = null;
}
function ooott_SameThreadTaskExecutor__init_() {
    var var_0 = new ooott_SameThreadTaskExecutor();
    ooott_SameThreadTaskExecutor__init_0(var_0);
    return var_0;
}
function ooott_SameThreadTaskExecutor__init_0($this) {
    ooott_AbstractTaskExecutor__init_0($this);
    $this.$queue0 = ju_LinkedList__init_();
}
$java.ooott_SameThreadTaskExecutor_submit = function($this, $task) {
    $this.$queue0.$add1($task);
};
$java.ooott_SameThreadTaskExecutor_getThreadCount = function($this) {
    return 1;
};
$java.ooott_SameThreadTaskExecutor_flush = function($this) {
    var $task;
    $task = $this.$queue0.$poll();
    while ($task !== null) {
        if ($task.$parent !== null)
            $task.$parent.$subtaskCompleted();
        $task.$runnable.$run();
        $task = $this.$queue0.$poll();
    }
};
function oooij_Info2DescrQuickStep() {
    var a = this; jl_Object.call(a);
    a.$_findexA = null;
    a.$_J = null;
    a.$j1 = 0;
    a.$j2 = 0;
    a.$pairRhsCfm = 0;
    a.$pairLoHi = 0;
    a.$findex = 0;
    a.$rowskip = 0;
    a.$pairskip = 0;
}
$java.oooij_Info2DescrQuickStep__init_ = function() {
    var var_0 = new oooij_Info2DescrQuickStep();
    oooij_Info2DescrQuickStep__init_(var_0);
    return var_0;
};
function oooij_Info2DescrQuickStep__init_($this) {
    jl_Object__init_0($this);
}
$java.oooij_Info2DescrQuickStep_setFindex = function($this, $i, $val) {
    $this.$_findexA.data[$this.$findex + $i | 0] = $val;
};
$java.oooij_Info2DescrQuickStep_setAllP = function($this, $j1, $j2, $pairRhsCfm, $pairLoHi, $findex) {
    $this.$j1 = $j1;
    $this.$j2 = $j2;
    $this.$pairRhsCfm = $pairRhsCfm;
    $this.$pairLoHi = $pairLoHi;
    $this.$findex = $findex;
};
$java.oooij_Info2DescrQuickStep_setArrays = function($this, $j, $findex) {
    $this.$_J = $j;
    $this.$_findexA = $findex;
};
$java.oooij_Info2DescrQuickStep_setC = function($this, $i, $d) {
    $this.$_J.data[($this.$pairRhsCfm + $rt_imul($i, $this.$pairskip) | 0) + 0 | 0] = $d;
};
$java.oooij_Info2DescrQuickStep_getC = function($this, $i) {
    return $this.$_J.data[($this.$pairRhsCfm + $rt_imul($i, $this.$pairskip) | 0) + 0 | 0];
};
$java.oooij_Info2DescrQuickStep_setCfm = function($this, $i, $d) {
    $this.$_J.data[($this.$pairRhsCfm + $rt_imul($i, $this.$pairskip) | 0) + 1 | 0] = $d;
};
$java.oooij_Info2DescrQuickStep_setLo = function($this, $i, $d) {
    $this.$_J.data[($this.$pairLoHi + $rt_imul($i, $this.$pairskip) | 0) + 0 | 0] = $d;
};
$java.oooij_Info2DescrQuickStep_setHi = function($this, $i, $d) {
    $this.$_J.data[($this.$pairLoHi + $rt_imul($i, $this.$pairskip) | 0) + 1 | 0] = $d;
};
$java.oooij_Info2DescrQuickStep_setRowskip = function($this, $combinedRowskip, $pairskip) {
    $this.$rowskip = $combinedRowskip;
    $this.$pairskip = $pairskip;
};
$java.oooij_Info2DescrQuickStep_setJ1l = function($this, $row, $v) {
    $this.$setJ1l0($row, $v.$get01(), $v.$get10(), $v.$get20());
};
$java.oooij_Info2DescrQuickStep_setJ1a = function($this, $row, $v) {
    $this.$setJ1a0($row, $v.$get01(), $v.$get10(), $v.$get20());
};
$java.oooij_Info2DescrQuickStep_setJ2l = function($this, $row, $v) {
    $this.$setJ2l0($row, $v.$get01(), $v.$get10(), $v.$get20());
};
$java.oooij_Info2DescrQuickStep_setJ2a = function($this, $row, $v) {
    $this.$setJ2a0($row, $v.$get01(), $v.$get10(), $v.$get20());
};
$java.oooij_Info2DescrQuickStep_setJ2lNegated = function($this, $row, $v) {
    $this.$setJ2l0($row,  -$v.$get01(),  -$v.$get10(),  -$v.$get20());
};
$java.oooij_Info2DescrQuickStep_setJ2aNegated = function($this, $row, $v) {
    $this.$setJ2a0($row,  -$v.$get01(),  -$v.$get10(),  -$v.$get20());
};
$java.oooij_Info2DescrQuickStep_setJ1l0 = function($this, $row, $x, $y, $z) {
    $java.oooij_Info2DescrQuickStep_setJ1($this, $row, 0, $x);
    $java.oooij_Info2DescrQuickStep_setJ1($this, $row, 1, $y);
    $java.oooij_Info2DescrQuickStep_setJ1($this, $row, 2, $z);
};
$java.oooij_Info2DescrQuickStep_setJ1a0 = function($this, $row, $x, $y, $z) {
    $java.oooij_Info2DescrQuickStep_setJ1($this, $row, 3, $x);
    $java.oooij_Info2DescrQuickStep_setJ1($this, $row, 4, $y);
    $java.oooij_Info2DescrQuickStep_setJ1($this, $row, 5, $z);
};
$java.oooij_Info2DescrQuickStep_setJ2l0 = function($this, $row, $x, $y, $z) {
    $java.oooij_Info2DescrQuickStep_setJ2($this, $row, 0, $x);
    $java.oooij_Info2DescrQuickStep_setJ2($this, $row, 1, $y);
    $java.oooij_Info2DescrQuickStep_setJ2($this, $row, 2, $z);
};
$java.oooij_Info2DescrQuickStep_setJ2a0 = function($this, $row, $x, $y, $z) {
    $java.oooij_Info2DescrQuickStep_setJ2($this, $row, 3, $x);
    $java.oooij_Info2DescrQuickStep_setJ2($this, $row, 4, $y);
    $java.oooij_Info2DescrQuickStep_setJ2($this, $row, 5, $z);
};
$java.oooij_Info2DescrQuickStep_setJ1 = function($this, $row, $i, $d) {
    $this.$_J.data[($this.$j1 + $rt_imul($row, $this.$rowskip) | 0) + $i | 0] = $d;
};
$java.oooij_Info2DescrQuickStep_setJ2 = function($this, $row, $i, $d) {
    $this.$_J.data[($this.$j2 + $rt_imul($row, $this.$rowskip) | 0) + $i | 0] = $d;
};
function oktpo_IOdeGeom$Companion() {
    jl_Object.call(this);
}
$java.oktpo_IOdeGeom$Companion_tmp1 = null;
$java.oktpo_IOdeGeom$Companion_tmp2 = null;
$java.oktpo_IOdeGeom$Companion_tmp3 = null;
$java.oktpo_IOdeGeom$Companion_tmp4 = null;
var oktpo_IOdeGeom$Companion_$$INSTANCE = null;
function oktpo_IOdeGeom$Companion_$callClinit() {
    oktpo_IOdeGeom$Companion_$callClinit = $rt_eraseClinit(oktpo_IOdeGeom$Companion);
    $java.oktpo_IOdeGeom$Companion__clinit_();
}
$java.oktpo_IOdeGeom$Companion__init_ = function() {
    var var_0 = new oktpo_IOdeGeom$Companion();
    oktpo_IOdeGeom$Companion__init_(var_0);
    return var_0;
};
function oktpo_IOdeGeom$Companion__init_($this) {
    oktpo_IOdeGeom$Companion_$callClinit();
    jl_Object__init_0($this);
}
$java.oktpo_IOdeGeom$Companion__clinit_ = function() {
    oktpo_IOdeGeom$Companion_$$INSTANCE = $java.oktpo_IOdeGeom$Companion__init_();
    $java.oktpo_IOdeGeom$Companion_tmp1 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    $java.oktpo_IOdeGeom$Companion_tmp2 = oktm_Vec4__init_(0.0, 0.0, 0.0, 0.0, 15, null);
    $java.oktpo_IOdeGeom$Companion_tmp3 = oom_DQuaternion__init_();
    $java.oktpo_IOdeGeom$Companion_tmp4 = oom_DVector3__init_();
};
function oktsp_MotionBlur$render$1() {
    kji_Lambda.call(this);
    this.$this$0215 = null;
}
function oktsp_MotionBlur$render$1__init_(var_0) {
    var var_1 = new oktsp_MotionBlur$render$1();
    $java.oktsp_MotionBlur$render$1__init_(var_1, var_0);
    return var_1;
}
$java.oktsp_MotionBlur$render$1_invoke = function(var$0, var$1) {
    $java.oktsp_MotionBlur$render$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktsp_MotionBlur$render$1_invoke0 = function($this, $$this$render) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    var$2 = oktsp_MotionBlur_getColorMap($this.$this$0215);
    if (var$2 !== null)
        var$2.$bind4(oktsp_MotionBlur_getSceneColorMapUnit($this.$this$0215));
    var$2 = oktsp_MotionBlur_getVelocityMap($this.$this$0215);
    if (var$2 !== null)
        var$2.$bind4(oktsp_MotionBlur_getVelocityMapUnit($this.$this$0215));
};
$java.oktsp_MotionBlur$render$1__init_ = function(var$0, var$1) {
    var$0.$this$0215 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oooi_GimpactDataPreprocessor() {
    jl_Object.call(this);
    this.$data3 = null;
}
function oooi_GimpactDataPreprocessor__init_(var_0) {
    var var_1 = new oooi_GimpactDataPreprocessor();
    $java.oooi_GimpactDataPreprocessor__init_(var_1, var_0);
    return var_1;
}
$java.oooi_GimpactDataPreprocessor__init_ = function($this, $data) {
    jl_Object__init_0($this);
    $this.$data3 = $data;
};
$java.oooi_GimpactDataPreprocessor_buildAngles = function($this) {
    var $numVertices, $numIndices, $triangleListInfo, $i, var$5, var$6, $startOffset, $triangleLists, var$9, $triangle, $index, var$12, var$13, $angles, $startIndex, var$16, $i_0, $endIndex, $count, $offset, $j, $t;
    $numVertices = $this.$data3.$getDataRef().data.length / 3 | 0;
    $numIndices = $this.$data3.$getIndexRef().data.length;
    $triangleListInfo = $rt_createIntMultiArray([$numVertices, 2]);
    $i = 0;
    while ($i < $numIndices) {
        var$5 = $triangleListInfo.data[0].data;
        var$6 = $java.oooi_GimpactDataPreprocessor_getVertexIndex($this, $i);
        var$5[var$6] = var$5[var$6] + 1 | 0;
        $i = $i + 1 | 0;
    }
    $startOffset = 0;
    $i = 0;
    while ($i < $numVertices) {
        var$5 = $triangleListInfo.data;
        var$5[1].data[$i] = $startOffset;
        $startOffset = $startOffset + var$5[0].data[$i] | 0;
        var$5[0].data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $triangleLists = $rt_createIntArray($numIndices);
    $i = 0;
    while ($i < $numIndices) {
        var$9 = $triangleLists.data;
        var$5 = $triangleListInfo.data;
        $triangle = $i / 3 | 0;
        $index = $java.oooi_GimpactDataPreprocessor_getVertexIndex($this, $i);
        var$12 = var$5[1].data[$index];
        var$5 = var$5[0].data;
        var$13 = var$5[$index];
        var$5[$index] = var$13 + 1 | 0;
        var$9[var$12 + var$13 | 0] = $triangle;
        $i = $i + 1 | 0;
    }
    $angles = $rt_createFloatArray($numIndices);
    ju_Arrays_fill3($angles, 6.2831854820251465);
    $i = 0;
    while ($i < $numIndices) {
        var$5 = $triangleListInfo.data;
        $triangle = $i / 3 | 0;
        $startIndex = $java.oooi_GimpactDataPreprocessor_getVertexIndex($this, $i);
        var$16 = $triangle * 3 | 0;
        $i_0 = $i + 1 | 0;
        $endIndex = $java.oooi_GimpactDataPreprocessor_getVertexIndex($this, var$16 + ($i_0 % 3 | 0) | 0);
        $count = var$5[0].data[$startIndex];
        $offset = var$5[1].data[$startIndex];
        $j = 0;
        a: {
            while (true) {
                if ($j >= $count)
                    break a;
                $t = $triangleLists.data[$offset + $j | 0];
                if ($t != $triangle && $java.oooi_GimpactDataPreprocessor_hasEdge($this, $t, $endIndex, $startIndex))
                    break;
                $j = $j + 1 | 0;
            }
            $angles.data[$i] = $java.oooi_GimpactDataPreprocessor_getAngle($this, $triangle, $i % 3 | 0, $t);
        }
        $i = $i_0;
    }
    return $angles;
};
$java.oooi_GimpactDataPreprocessor_hasEdge = function($this, $triangle, $startIndex, $endIndex) {
    var $i, var$5, $index1, $index2;
    $i = 0;
    while ($i < 3) {
        var$5 = $triangle * 3 | 0;
        $index1 = $java.oooi_GimpactDataPreprocessor_getVertexIndex($this, var$5 + $i | 0);
        $i = $i + 1 | 0;
        $index2 = $java.oooi_GimpactDataPreprocessor_getVertexIndex($this, var$5 + ($i % 3 | 0) | 0);
        if ($index1 == $startIndex && $index2 == $endIndex)
            return 1;
    }
    return 0;
};
$java.oooi_GimpactDataPreprocessor_getVertexIndex = function($this, $index) {
    return $this.$data3.$getIndexRef().data[$index];
};
$java.oooi_GimpactDataPreprocessor_getAngle = function($this, $triangle, $vertexIndex, $neighbourTriangle) {
    var var$4, var$5, $startVertex, $endVertex, $oppositeVertex, $edgeAxis, $secondEdge, $normal, $tangent, var$13, $neighbourVertex1, $neighbourVertex2, $neighbourVertex3, $neighbourEdge1, $neighbourEdge2, $neighbourNormal, $angle, $angleCos, $length, var$23, var$24;
    var$4 = $this.$data3.$getIndexRef().data;
    var$5 = $triangle * 3 | 0;
    $startVertex = $java.oooi_GimpactDataPreprocessor_getVertex($this, var$4[var$5 + $vertexIndex | 0]);
    $endVertex = $java.oooi_GimpactDataPreprocessor_getVertex($this, $this.$data3.$getIndexRef().data[var$5 + (($vertexIndex + 1 | 0) % 3 | 0) | 0]);
    $oppositeVertex = $java.oooi_GimpactDataPreprocessor_getVertex($this, $this.$data3.$getIndexRef().data[var$5 + (($vertexIndex + 2 | 0) % 3 | 0) | 0]);
    $edgeAxis = oom_DVector3_sub(oom_DVector3__init_0($endVertex), $startVertex);
    $secondEdge = oom_DVector3_sub(oom_DVector3__init_0($oppositeVertex), $endVertex);
    $normal = oom_DVector3__init_();
    oom_DVector3_eqCross($normal, $edgeAxis, $secondEdge);
    $tangent = oom_DVector3__init_();
    oom_DVector3_eqCross($tangent, $edgeAxis, $normal);
    var$4 = $this.$data3.$getIndexRef().data;
    var$13 = $neighbourTriangle * 3 | 0;
    $neighbourVertex1 = $java.oooi_GimpactDataPreprocessor_getVertex($this, var$4[var$13]);
    $neighbourVertex2 = $java.oooi_GimpactDataPreprocessor_getVertex($this, $this.$data3.$getIndexRef().data[var$13 + 1 | 0]);
    $neighbourVertex3 = $java.oooi_GimpactDataPreprocessor_getVertex($this, $this.$data3.$getIndexRef().data[var$13 + 2 | 0]);
    $neighbourEdge1 = oom_DVector3_sub(oom_DVector3__init_0($neighbourVertex2), $neighbourVertex1);
    $neighbourEdge2 = oom_DVector3_sub(oom_DVector3__init_0($neighbourVertex3), $neighbourVertex2);
    $neighbourNormal = oom_DVector3__init_();
    oom_DVector3_eqCross($neighbourNormal, $neighbourEdge1, $neighbourEdge2);
    $angle = jl_Math_signum(oom_DVector3_dot($tangent, $neighbourNormal));
    $angleCos = oom_DVector3_dot($normal, $neighbourNormal);
    $length = jl_Math_sqrt(oom_DVector3_lengthSquared($normal) * oom_DVector3_lengthSquared($neighbourNormal));
    if ($length > 4.9E-324)
        $angleCos = $angleCos / $length;
    var$23 = jl_Math_max0(jl_Math_min0(1.0, $angleCos), (-1.0));
    var$24 = $angle * jl_Math_acos(var$23);
    return var$24;
};
$java.oooi_GimpactDataPreprocessor_getVertex = function($this, $index) {
    var var$2, var$3, var$4, var$5, var$6, var$7;
    var$2 = new oom_DVector3;
    var$3 = $this.$data3.$getDataRef().data;
    var$4 = $index * 3 | 0;
    var$5 = var$3[var$4];
    var$6 = $this.$data3.$getDataRef().data[var$4 + 1 | 0];
    var$7 = $this.$data3;
    oom_DVector3__init_4(var$2, var$5, var$6, var$7.$getDataRef().data[var$4 + 2 | 0]);
    return var$2;
};
function oktsg_GLSLType() {
    jl_Object.call(this);
}
var oktsg_GLSLType_INSTANCE = null;
function oktsg_GLSLType_$callClinit() {
    oktsg_GLSLType_$callClinit = $rt_eraseClinit(oktsg_GLSLType);
    $java.oktsg_GLSLType__clinit_();
}
$java.oktsg_GLSLType__init_ = function() {
    var var_0 = new oktsg_GLSLType();
    oktsg_GLSLType__init_(var_0);
    return var_0;
};
function oktsg_GLSLType_getTypeName($this, $type) {
    var var$2;
    a: {
        b: {
            switch ($type) {
                case 0:
                    break;
                case 1:
                    var$2 = $rt_s(1318);
                    break a;
                case 2:
                    break b;
                case 3:
                    var$2 = $rt_s(1319);
                    break a;
                case 4:
                    var$2 = $rt_s(1320);
                    break a;
                case 5:
                    var$2 = $rt_s(1321);
                    break a;
                case 6:
                    var$2 = $rt_s(1322);
                    break a;
                case 7:
                    var$2 = $rt_s(1323);
                    break a;
                case 8:
                    var$2 = $rt_s(1324);
                    break a;
                case 9:
                    var$2 = $rt_s(1325);
                    break a;
                case 10:
                    var$2 = $rt_s(1380);
                    break a;
                case 11:
                    var$2 = $rt_s(1326);
                    break a;
                case 12:
                    var$2 = $rt_s(1327);
                    break a;
                case 13:
                    var$2 = $rt_s(1328);
                    break a;
                case 14:
                    var$2 = $rt_s(1329);
                    break a;
                case 15:
                    var$2 = $rt_s(1330);
                    break a;
                default:
                    break b;
            }
            var$2 = $rt_s(1331);
            break a;
        }
        var$2 = $rt_s(6);
    }
    return var$2;
}
function oktsg_GLSLType__init_($this) {
    oktsg_GLSLType_$callClinit();
    jl_Object__init_0($this);
}
$java.oktsg_GLSLType__clinit_ = function() {
    oktsg_GLSLType_INSTANCE = $java.oktsg_GLSLType__init_();
};
function oktgg_GLTFAnimation() {
    var a = this; jl_Object.call(a);
    a.$name45 = null;
    a.$gltf11 = null;
    a.$elementIndex10 = 0;
    a.$anim0 = null;
}
$java.oktgg_GLTFAnimation_Companion = null;
$java.oktgg_GLTFAnimation_$callClinit = function() {
    $java.oktgg_GLTFAnimation_$callClinit = $rt_eraseClinit(oktgg_GLTFAnimation);
    $java.oktgg_GLTFAnimation__clinit_();
};
$java.oktgg_GLTFAnimation__init_ = function(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFAnimation();
    $java.oktgg_GLTFAnimation__init_0(var_3, var_0, var_1, var_2);
    return var_3;
};
function oktgg_GLTFAnimation__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgg_GLTFAnimation();
    $java.oktgg_GLTFAnimation__init_1(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
$java.oktgg_GLTFAnimation_getName = function($this) {
    return $this.$name45;
};
$java.oktgg_GLTFAnimation_setName = function($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name45 = $_set___;
};
$java.oktgg_GLTFAnimation_asFloatBuffer = function($this, $accessorIndex, $loaded) {
    var $accessor, $bufferView;
    $accessor = oktgg_GLTFAnimation_getGltf($this).$getAccessors().$get1($accessorIndex);
    $bufferView = oktgg_GLTFAnimation_getGltf($this).$getBufferViews0().$get1(oktgg_GLTFAccessor_getBufferView($accessor));
    oktgg_GLTFAnimation_getGltf($this).$getBuffers0().$getOrWait0(oktgg_GLTFBufferView_getBuffer($bufferView), oktgg_GLTFAnimation$asFloatBuffer$1__init_($bufferView, $accessor, $loaded));
};
function oktgg_GLTFAnimation_read($this, $json) {
    var $animationSamplers;
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $animationSamplers = ju_ArrayList__init_();
    $java.oktgg_GLTFAnimation_setName($this, $json.$string5($rt_s(17), $rt_s(6)));
    $this.$anim0.$setName($java.oktgg_GLTFAnimation_getName($this));
    $json.$array($rt_s(1006), oktgg_GLTFAnimation$read$1__init_($animationSamplers));
    $json.$array($rt_s(1381), oktgg_GLTFAnimation$read$2__init_($this, $animationSamplers));
    oktgg_GLTFAnimation_getGltf($this).$getAnimations0().$ready($java.oktgg_GLTFAnimation_getElementIndex($this));
}
function oktgg_GLTFAnimation_getGltf($this) {
    return $this.$gltf11;
}
$java.oktgg_GLTFAnimation_getElementIndex = function($this) {
    return $this.$elementIndex10;
};
function oktgg_GLTFAnimation_getAnim($this) {
    return $this.$anim0;
}
$java.oktgg_GLTFAnimation__init_0 = function($this, $gltf, $elementIndex, $anim) {
    $java.oktgg_GLTFAnimation_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($anim, $rt_s(1382));
    jl_Object__init_0($this);
    $this.$gltf11 = $gltf;
    $this.$elementIndex10 = $elementIndex;
    $this.$anim0 = $anim;
    $this.$name45 = $rt_s(6);
};
$java.oktgg_GLTFAnimation__init_1 = function(var$0, var$1, var$2, var$3, var$4, var$5) {
    $java.oktgg_GLTFAnimation_$callClinit();
    if (var$4 & 4)
        var$3 = oktga_Anim__init_();
    $java.oktgg_GLTFAnimation__init_0(var$0, var$1, var$2, var$3);
};
$java.oktgg_GLTFAnimation__clinit_ = function() {
    $java.oktgg_GLTFAnimation_Companion = oktgg_GLTFAnimation$Companion__init_1(null);
};
function oktgg_GLTFAnimation_access$asFloatBuffer($$this, $accessorIndex, $loaded) {
    $java.oktgg_GLTFAnimation_$callClinit();
    $java.oktgg_GLTFAnimation_asFloatBuffer($$this, $accessorIndex, $loaded);
}
function okttm_PlaneMeshBuilderTest$testMain$2() {
    var a = this; kji_Lambda.call(a);
    a.$$cubeMatrix41 = null;
    a.$$shader14 = null;
    a.$$temp1 = null;
    a.$$mesh5 = null;
}
$java.okttm_PlaneMeshBuilderTest$testMain$2__init_ = function(var_0, var_1, var_2, var_3) {
    var var_4 = new okttm_PlaneMeshBuilderTest$testMain$2();
    $java.okttm_PlaneMeshBuilderTest$testMain$2__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
};
$java.okttm_PlaneMeshBuilderTest$testMain$2_invoke = function(var$0) {
    $java.okttm_PlaneMeshBuilderTest$testMain$2_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.okttm_PlaneMeshBuilderTest$testMain$2_invoke0 = function($this) {
    var var$1, var$2;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    $this.$$cubeMatrix41.$rotate(0.0, 1.0, 0.0, 0.009999999776482582);
    $this.$$shader14.$bind();
    var$1 = $this.$$shader14;
    var$2 = $this.$$temp1.$set3($this.$$cubeMatrix41);
    oktgc_ActiveCamera_$callClinit();
    var$1.$set12($rt_s(306), var$2.$mulLeft(oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE)));
    oktm_IMesh$DefaultImpls_render$default($this.$$mesh5, $this.$$shader14, 0, 0, 0, 0, 30, null);
};
$java.okttm_PlaneMeshBuilderTest$testMain$2__init_0 = function(var$0, var$1, var$2, var$3, var$4) {
    var$0.$$cubeMatrix41 = var$1;
    var$0.$$shader14 = var$2;
    var$0.$$temp1 = var$3;
    var$0.$$mesh5 = var$4;
    kji_Lambda__init_0(var$0, 0);
};
function oktt_IFrameBuffer$DefaultImpls() {
    jl_Object.call(this);
}
function oktt_IFrameBuffer$DefaultImpls_getTexture($$this, $index) {
    var var$3;
    var$3 = $$this.$getAttachments0().$get1($index).$getTexture1();
    if (var$3 === null)
        kji_Intrinsics_throwNpe();
    return var$3;
}
function oktt_IFrameBuffer$DefaultImpls_buildAttachments($$this) {
    oktt_IFrameBuffer$buildAttachments$1_$callClinit();
    $$this.$bind8(oktt_IFrameBuffer$buildAttachments$1_INSTANCE);
}
function oktt_IFrameBuffer$DefaultImpls_initBuffersOrder($$this, $indices) {
    var var$3, var$4, $indicesBuffer, $i, $indices2, $count, var$9, $attachment;
    kji_Intrinsics_checkParameterIsNotNull($indices, $rt_s(566));
    if (!$$this.$getFrameBufferHandle())
        $rt_throw(jl_RuntimeException__init_($rt_s(1383)));
    if (!$$this.$isBound2())
        $rt_throw(jl_RuntimeException__init_($rt_s(1384)));
    var$3 = $indices.data;
    var$4 = var$3.length;
    if (!(var$4 ? 0 : 1)) {
        $indicesBuffer = $rt_createIntArray(var$4);
        $i = 0;
        while ($i < var$4) {
            $indicesBuffer.data[$i] = $$this.$getAttachments0().$get1(var$3[$i]).$getAttachment();
            $i = $i + 1 | 0;
        }
        oktg_GL_$callClinit();
        oktg_GL_glDrawBuffers(oktg_GL_INSTANCE, var$4, $indicesBuffer);
    } else {
        $indices2 = $rt_createIntArray($$this.$getAttachments0().$size());
        $count = 0;
        $i = 0;
        var$9 = $$this.$getAttachments0().$size();
        while ($i < var$9) {
            $attachment = $$this.$getAttachments0().$get1($i).$getAttachment();
            if ($attachment != 36096 && $attachment != 36128 && $attachment != 33306) {
                $indices2.data[$count] = $attachment;
                $count = $count + 1 | 0;
            }
            $i = $i + 1 | 0;
        }
        if ($count > 0) {
            oktg_GL_$callClinit();
            oktg_GL_glDrawBuffers(oktg_GL_INSTANCE, $count, $indices2);
        }
    }
}
function oktt_IFrameBuffer$DefaultImpls_checkErrors($$this) {
    var $result, var$3, var$4, $errorText;
    oktg_GL_$callClinit();
    $result = oktg_GL_glCheckFramebufferStatus(oktg_GL_INSTANCE, 36160);
    if ($result != 36053) {
        a: {
            b: {
                $java.oktt_IFrameBuffer$DefaultImpls_destroy$default($$this, 0, 1, null);
                var$3 = jl_StringBuilder__init_().$append($rt_s(1385));
                switch ($result) {
                    case 36054:
                        break;
                    case 36055:
                        var$4 = $rt_s(1386);
                        break a;
                    case 36056:
                    case 36058:
                    case 36059:
                    case 36060:
                        break b;
                    case 36057:
                        var$4 = $rt_s(1387);
                        break a;
                    case 36061:
                        var$4 = $rt_s(1388);
                        break a;
                    default:
                        break b;
                }
                var$4 = $rt_s(1389);
                break a;
            }
            var$4 = jl_StringBuilder__init_().$append($rt_s(1390)).$append1($result).$toString();
        }
        $errorText = var$3.$append(var$4).$toString();
        oktu_LOG_$callClinit();
        oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, $errorText, null, 2, null);
    }
}
function oktt_IFrameBuffer$DefaultImpls_destroy($$this, $destroyTextures) {
    var $i, var$4, $attachment, $texture;
    $i = 0;
    var$4 = $$this.$getAttachments0().$size();
    while ($i < var$4) {
        $attachment = $$this.$getAttachments0().$get1($i);
        if ($attachment.$isRenderBuffer()) {
            oktg_GL_$callClinit();
            oktg_GL_glDeleteRenderbuffer(oktg_GL_INSTANCE, $attachment.$getGlHandle());
        } else {
            $texture = $attachment.$getTexture1();
            if ($destroyTextures && $texture !== null)
                $texture.$destroy0();
        }
        $attachment.$setGlHandle(0);
        $i = $i + 1 | 0;
    }
    oktg_GL_$callClinit();
    oktg_GL_glDeleteFramebuffer(oktg_GL_INSTANCE, $$this.$getFrameBufferHandle());
}
$java.oktt_IFrameBuffer$DefaultImpls_destroy$default = function(var$1, var$2, var$3, var$4) {
    if (var$4 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1391)));
    if (var$3 & 1)
        var$2 = 1;
    var$1.$destroy4(var$2);
};
function oktt_IFrameBuffer$DefaultImpls_bind($$this, $block) {
    kji_Intrinsics_checkParameterIsNotNull($block, $rt_s(301));
    $$this.$setBound(1);
    oktg_GL_$callClinit();
    oktg_GL_glBindFramebuffer(oktg_GL_INSTANCE, 36160, $$this.$getFrameBufferHandle());
    $block.$invoke1($$this);
    oktg_GL_glBindFramebuffer(oktg_GL_INSTANCE, 36160, oktg_GL_getMainFrameBufferHandle(oktg_GL_INSTANCE));
    $$this.$setBound(0);
}
function oktt_IFrameBuffer$DefaultImpls_render($$this, $block) {
    kji_Intrinsics_checkParameterIsNotNull($block, $rt_s(301));
    $$this.$setBound(1);
    oktg_GL_$callClinit();
    oktg_GL_glBindFramebuffer(oktg_GL_INSTANCE, 36160, $$this.$getFrameBufferHandle());
    oktg_GL_glViewport(oktg_GL_INSTANCE, 0, 0, $$this.$getWidth(), $$this.$getHeight());
    $block.$invoke1($$this);
    oktg_GL_glBindFramebuffer(oktg_GL_INSTANCE, 36160, oktg_GL_getMainFrameBufferHandle(oktg_GL_INSTANCE));
    oktg_GL_glViewport(oktg_GL_INSTANCE, 0, 0, oktg_GL_getMainFrameBufferWidth(oktg_GL_INSTANCE), oktg_GL_getMainFrameBufferHeight(oktg_GL_INSTANCE));
    $$this.$setBound(0);
}
function oktt_CubeModel$Companion() {
    jl_Object.call(this);
}
$java.oktt_CubeModel$Companion__init_ = function() {
    var var_0 = new oktt_CubeModel$Companion();
    oktt_CubeModel$Companion__init_(var_0);
    return var_0;
};
$java.oktt_CubeModel$Companion__init_0 = function(var_0) {
    var var_1 = new oktt_CubeModel$Companion();
    $java.oktt_CubeModel$Companion__init_1(var_1, var_0);
    return var_1;
};
$java.oktt_CubeModel$Companion_defaultShader = function($this) {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_(var$1, $rt_s(1392), $rt_s(1393), var$2, 0, var$3, 0, var$4, 124, var$5);
    return var$1;
};
function oktt_CubeModel$Companion__init_($this) {
    jl_Object__init_0($this);
}
$java.oktt_CubeModel$Companion__init_1 = function($this, $$constructor_marker) {
    oktt_CubeModel$Companion__init_($this);
};
function oktts_GBufferBaseTest$testMain$1$1() {
    kji_Lambda.call(this);
    this.$this$0216 = null;
}
function oktts_GBufferBaseTest$testMain$1$1__init_(var_0) {
    var var_1 = new oktts_GBufferBaseTest$testMain$1$1();
    $java.oktts_GBufferBaseTest$testMain$1$1__init_(var_1, var_0);
    return var_1;
}
$java.oktts_GBufferBaseTest$testMain$1$1_invoke = function(var$0, var$1) {
    $java.oktts_GBufferBaseTest$testMain$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_GBufferBaseTest$testMain$1$1_invoke0 = function($this, $$this$render) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    $this.$this$0216.$$shader0.$bind();
    $this.$this$0216.$$shader0.$set12($rt_s(563), $this.$this$0216.$$cubeMatrix);
    var$2 = $this.$this$0216.$$shader0;
    oktgc_ActiveCamera_$callClinit();
    var$2.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    oktm_IMesh$DefaultImpls_render$default($this.$this$0216.$$cube, $this.$this$0216.$$shader0, 0, 0, 0, 0, 30, null);
};
$java.oktts_GBufferBaseTest$testMain$1$1__init_ = function(var$0, var$1) {
    var$0.$this$0216 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oooig_GimTrimeshTrimeshCol() {
    jl_Object.call(this);
}
$java.oooig_GimTrimeshTrimeshCol__init_ = function() {
    var var_0 = new oooig_GimTrimeshTrimeshCol();
    oooig_GimTrimeshTrimeshCol__init_(var_0);
    return var_0;
};
function oooig_GimTrimeshTrimeshCol__init_($this) {
    jl_Object__init_0($this);
}
$java.oooig_GimTrimeshTrimeshCol_CLASSIFY_TRI_BY_FACE = function($v, $faceplane) {
    var var$3, $d0, $d1, $d2;
    var$3 = $v.data;
    $d0 = oooig_GimGeometry_DISTANCE_PLANE_POINT($faceplane, var$3[0]);
    $d1 = $d0 * oooig_GimGeometry_DISTANCE_PLANE_POINT($faceplane, var$3[1]);
    $d2 = $d0 * oooig_GimGeometry_DISTANCE_PLANE_POINT($faceplane, var$3[2]);
    if ($d1 > 0.0 && $d2 > 0.0)
        return 1;
    return 0;
};
$java.oooig_GimTrimeshTrimeshCol_MOST_DEEP_POINTS = function($plane, $points, $point_count, $deep_points, $maxdeep, $_max_candidates) {
    var $deep_points_count, $_k, $_dist, var$10, var$11, var$12, var$13;
    $maxdeep.$d0 = (-1000.0);
    $deep_points_count = 0;
    $_k = 0;
    while ($_k < $point_count) {
        $_dist =  -oooig_GimGeometry_DISTANCE_PLANE_POINT($plane, $points.data[$_k]);
        if ($_dist > $maxdeep.$d0) {
            var$10 = $_max_candidates.data;
            $maxdeep.$d0 = $_dist;
            var$10[0] = $_k;
            $deep_points_count = 1;
        } else if ($_dist + 1.0000000116860974E-7 >= $maxdeep.$d0) {
            $_max_candidates.data[$deep_points_count] = $_k;
            $deep_points_count = $deep_points_count + 1 | 0;
        }
        $_k = $_k + 1 | 0;
    }
    if ($maxdeep.$d0 < 0.0)
        $deep_points_count = 0;
    else {
        var$11 = 0;
        while (var$11 < $deep_points_count) {
            var$12 = $points.data;
            var$13 = $_max_candidates.data;
            oooig_GimGeometry_VEC_COPY($deep_points.data[var$11], var$12[var$13[var$11]]);
            var$11 = var$11 + 1 | 0;
        }
    }
    return $deep_points_count;
};
$java.oooig_GimTrimeshTrimeshCol_CLIP_TRI_POINTS_BY_TRI_EDGE_PLANES = function($tri_points, $tri_edge_planes, $pos, $clipped_points, $_temp_clip, $_temp_clip2) {
    var var$7, $clipped_point_count, $_temp_clip_count, var$10;
    var$7 = $tri_edge_planes.data;
    $clipped_point_count = 0;
    $_temp_clip_count = oooig_GimTriCollision_PLANE_CLIP_POLYGON(var$7[0 + $pos | 0], $tri_points, 3, $_temp_clip, 8);
    if ($_temp_clip_count > 0) {
        var$10 = oooig_GimTriCollision_PLANE_CLIP_POLYGON(var$7[1 + $pos | 0], $_temp_clip, $_temp_clip_count, $_temp_clip2, 8);
        if (var$10 > 0)
            $clipped_point_count = oooig_GimTriCollision_PLANE_CLIP_POLYGON(var$7[2 + $pos | 0], $_temp_clip2, var$10, $clipped_points, 8);
    }
    return $clipped_point_count;
};
$java.oooig_GimTrimeshTrimeshCol__gim_triangle_triangle_collision = function($tri1, $tri2, $contact_data) {
    var $_max_candidates, $_temp_clip, $_temp_clip2, $clipped_points2, $deep_points2, $clipped_points1, $deep_points1, $i, var$12, var$13, var$14, var$15, var$16, $mostdir, var$18, $maxdeep, var$20, var$21, $dist;
    $_max_candidates = $rt_createIntArray(8);
    $_temp_clip = $rt_createArray(oooig_GimGeometry$vec3f, 8);
    $_temp_clip2 = $rt_createArray(oooig_GimGeometry$vec3f, 8);
    $clipped_points2 = $rt_createArray(oooig_GimGeometry$vec3f, 8);
    $deep_points2 = $rt_createArray(oooig_GimGeometry$vec3f, 8);
    $clipped_points1 = $rt_createArray(oooig_GimGeometry$vec3f, 8);
    $deep_points1 = $rt_createArray(oooig_GimGeometry$vec3f, 8);
    $i = 0;
    while ($i < 8) {
        var$12 = $deep_points2.data;
        var$13 = $deep_points1.data;
        var$14 = $clipped_points2.data;
        var$15 = $clipped_points1.data;
        var$16 = $_temp_clip2.data;
        $_temp_clip.data[$i] = oooig_GimGeometry$vec3f__init_();
        var$16[$i] = oooig_GimGeometry$vec3f__init_();
        var$15[$i] = oooig_GimGeometry$vec3f__init_();
        var$14[$i] = oooig_GimGeometry$vec3f__init_();
        var$13[$i] = oooig_GimGeometry$vec3f__init_();
        var$12[$i] = oooig_GimGeometry$vec3f__init_();
        $i = $i + 1 | 0;
    }
    $mostdir = 0;
    var$18 = $java.oooig_GimTrimeshTrimeshCol_CLIP_TRI_POINTS_BY_TRI_EDGE_PLANES($tri2.$m_vertices, $tri1.$m_planes.$m_planes0, 1, $clipped_points2, $_temp_clip, $_temp_clip2);
    if (!var$18)
        return 0;
    $maxdeep = oooicj_RefFloat__init_0();
    var$20 = $java.oooig_GimTrimeshTrimeshCol_MOST_DEEP_POINTS($tri1.$m_planes.$m_planes0.data[0], $clipped_points2, var$18, $deep_points2, $maxdeep, $_max_candidates);
    if (!var$20)
        return 0;
    oooig_GimGeometry_VEC_SCALE0($contact_data.$m_separating_normal, (-1.0), $tri1.$m_planes.$m_planes0.data[0]);
    var$21 = $java.oooig_GimTrimeshTrimeshCol_CLIP_TRI_POINTS_BY_TRI_EDGE_PLANES($tri1.$m_vertices, $tri2.$m_planes.$m_planes0, 1, $clipped_points1, $_temp_clip, $_temp_clip2);
    if (!var$18)
        return 0;
    $dist = oooicj_RefFloat__init_0();
    var$18 = $java.oooig_GimTrimeshTrimeshCol_MOST_DEEP_POINTS($tri2.$m_planes.$m_planes0.data[0], $clipped_points1, var$21, $deep_points1, $dist, $_max_candidates);
    if (!var$18)
        return 0;
    if ($dist.$d0 >= $maxdeep.$d0)
        $dist = $maxdeep;
    else {
        $mostdir = 1;
        oooig_GimGeometry_VEC_COPY0($contact_data.$m_separating_normal, $tri2.$m_planes.$m_planes0.data[0]);
    }
    a: {
        $contact_data.$m_penetration_depth = $dist.$d0;
        if ($mostdir) {
            $contact_data.$m_point_count = var$18;
            var$21 = 0;
            while (true) {
                if (var$21 >= var$18)
                    break a;
                var$16 = $deep_points1.data;
                oooig_GimGeometry_VEC_COPY($contact_data.$m_points.data[var$21], var$16[var$21]);
                var$21 = var$21 + 1 | 0;
            }
        }
        $contact_data.$m_point_count = var$20;
        var$18 = 0;
        while (true) {
            if (var$18 >= var$20)
                break a;
            var$16 = $deep_points2.data;
            oooig_GimGeometry_VEC_COPY($contact_data.$m_points.data[var$18], var$16[var$18]);
            var$18 = var$18 + 1 | 0;
        }
    }
    return 1;
};
$java.oooig_GimTrimeshTrimeshCol_gim_triangle_triangle_collision = function($tri1, $tri2, $contact_data) {
    if ($java.oooig_GimTrimeshTrimeshCol_CLASSIFY_TRI_BY_FACE($tri1.$m_vertices, $tri2.$m_planes.$m_planes0.data[0]))
        return 0;
    if (!$java.oooig_GimTrimeshTrimeshCol_CLASSIFY_TRI_BY_FACE($tri2.$m_vertices, $tri1.$m_planes.$m_planes0.data[0]))
        return $java.oooig_GimTrimeshTrimeshCol__gim_triangle_triangle_collision($tri1, $tri2, $contact_data);
    return 0;
};
function oooig_GimTrimeshTrimeshCol_gim_trimesh_trimesh_collision($trimesh1, $trimesh2, $contacts) {
    var $collision_pairs, $pairs, $dummycontacts, $tri_contact_data, $tri1data, $tri2data, $i, $ti1, $ti2, $colresult, $ci;
    $contacts.$m_size = 0;
    $collision_pairs = oooig_GimAABBSet_GIM_CREATE_PAIR_SET();
    oooig_GimAABBSet_gim_aabbset_bipartite_intersections($trimesh1.$m_aabbset, $trimesh2.$m_aabbset, $collision_pairs);
    if (!$collision_pairs.$size()) {
        $collision_pairs.$GIM_DYNARRAY_DESTROY();
        return;
    }
    $trimesh1.$gim_trimesh_locks_work_data();
    $trimesh2.$gim_trimesh_locks_work_data();
    $pairs = $collision_pairs.$GIM_DYNARRAY_POINTER_V();
    $dummycontacts = oooig_GimContact_GIM_CREATE_CONTACT_LIST();
    $tri_contact_data = oooig_GimTriCollision$GIM_TRIANGLE_CONTACT_DATA__init_();
    $tri1data = oooig_GimTriCollision$GIM_TRIANGLE_DATA__init_();
    $tri2data = oooig_GimTriCollision$GIM_TRIANGLE_DATA__init_();
    $i = 0;
    while ($i < $collision_pairs.$size()) {
        a: {
            $ti1 = $pairs.$at($i).$m_index1;
            $ti2 = $pairs.$at($i).$m_index2;
            $trimesh1.$gim_trimesh_get_triangle_data($ti1, $tri1data);
            $trimesh2.$gim_trimesh_get_triangle_data($ti2, $tri2data);
            $colresult = $java.oooig_GimTrimeshTrimeshCol_gim_triangle_triangle_collision($tri1data, $tri2data, $tri_contact_data);
            if ($colresult == 1) {
                $ci = 0;
                while (true) {
                    if ($ci >= $tri_contact_data.$m_point_count)
                        break a;
                    oooig_GimContact_GIM_PUSH_CONTACT0($dummycontacts, $tri_contact_data.$m_points.data[$ci], $tri_contact_data.$m_separating_normal, $tri_contact_data.$m_penetration_depth, $trimesh1, $trimesh2, $ti1, $ti2);
                    $ci = $ci + 1 | 0;
                }
            }
        }
        $i = $i + 1 | 0;
    }
    if (!$dummycontacts.$size()) {
        $dummycontacts.$GIM_DYNARRAY_DESTROY();
        $collision_pairs.$GIM_DYNARRAY_DESTROY();
        return;
    }
    oooig_GimContact_gim_merge_contacts($dummycontacts, $contacts);
    $dummycontacts.$GIM_DYNARRAY_DESTROY();
    $collision_pairs.$GIM_DYNARRAY_DESTROY();
    $trimesh1.$gim_trimesh_unlocks_work_data();
    $trimesh2.$gim_trimesh_unlocks_work_data();
}
function oooig_GimTrimeshTrimeshCol_gim_trimesh_plane_collision($trimesh, $plane, $contacts) {
    var $classify, $vertcount, $vertices, $i, $dist, $result_contact;
    $contacts.$m_size = 0;
    $classify = oooig_GimGeometry_PLANE_CLASSIFY_BOX($plane, $trimesh.$m_aabbset.$m_global_bound);
    if ($classify > 1)
        return;
    $trimesh.$gim_trimesh_locks_work_data();
    $vertcount = $trimesh.$m_transformed_vertex_buffer.$size();
    $vertices = $trimesh.$m_transformed_vertex_buffer.$GIM_BUFFER_ARRAY_POINTER(0);
    $i = 0;
    while ($i < $vertcount) {
        $dist = oooig_GimGeometry_DISTANCE_PLANE_POINT($plane, $vertices.$at($i));
        if ($dist <= 0.0) {
            $result_contact = oooig_GimGeometry$vec4f__init_();
            oooig_GimGeometry_VEC_COPY1($result_contact, $vertices.$at($i));
            $result_contact.$f0.data[3] =  -$dist;
            $contacts.$GIM_DYNARRAY_PUSH_ITEM_TZ($result_contact);
        }
        $i = $i + 1 | 0;
    }
    $trimesh.$gim_trimesh_unlocks_work_data();
}
function oktt_CubeModel() {
    var a = this; jl_Object.call(a);
    a.$mesh2 = null;
    a.$obj1 = null;
    a.$cubeMatrix4 = null;
    a.$scene1 = null;
    a.$shader2 = null;
}
$java.oktt_CubeModel_Companion = null;
$java.oktt_CubeModel_$callClinit = function() {
    $java.oktt_CubeModel_$callClinit = $rt_eraseClinit(oktt_CubeModel);
    $java.oktt_CubeModel__clinit_();
};
$java.oktt_CubeModel__init_ = function(var_0) {
    var var_1 = new oktt_CubeModel();
    $java.oktt_CubeModel__init_0(var_1, var_0);
    return var_1;
};
function oktt_CubeModel__init_(var_0, var_1, var_2) {
    var var_3 = new oktt_CubeModel();
    $java.oktt_CubeModel__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
$java.oktt_CubeModel__init_2 = function() {
    var var_0 = new oktt_CubeModel();
    oktt_CubeModel__init_0(var_0);
    return var_0;
};
function oktt_CubeModel_update($this) {
    var var$1;
    $this.$cubeMatrix4.$rotate(0.0, 1.0, 0.0, 0.009999999776482582);
    if ($this.$shader2 === null)
        $this.$obj1.$getNode().$getWorldMatrix().$set3($this.$cubeMatrix4);
    else {
        var$1 = $this.$obj1.$getNode().$getWorldMatrix().$set3($this.$cubeMatrix4);
        oktgc_ActiveCamera_$callClinit();
        var$1.$mulLeft(oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    }
}
function oktt_CubeModel_render($this) {
    if ($this.$shader2 !== null) {
        $this.$shader2.$bind();
        $this.$shader2.$set12($rt_s(306), $this.$obj1.$getNode().$getWorldMatrix());
        oktm_IMesh$DefaultImpls_render$default($this.$mesh2, $this.$shader2, 0, 0, 0, 0, 30, null);
    }
}
$java.oktt_CubeModel__init_0 = function($this, $shader) {
    var var$2, var$3, var$4;
    $java.oktt_CubeModel_$callClinit();
    jl_Object__init_0($this);
    $this.$shader2 = $shader;
    $this.$mesh2 = oktmb_MeshBuilder_build$default(oktmb_BoxMeshBuilder__init_0(2.0, 2.0, 2.0), null, 1, null);
    var$2 = oktg_Object3D__init_(null, null, null, 0, null, null, null, 127, null);
    var$2.$getMeshes0().$add1($this.$mesh2);
    $this.$obj1 = var$2;
    $this.$cubeMatrix4 = oktm_Mat4__init_();
    $this.$scene1 = oktg_Scene__init_(null, null, 3, null);
    $this.$scene1.$getObjects().$add1($this.$obj1);
    oktgc_ActiveCamera_$callClinit();
    var$3 = oktgc_ActiveCamera_INSTANCE;
    var$4 = oktgc_Camera__init_(null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null);
    oktgc_Camera_getPosition(var$4).$set44(0.0, 3.0, (-3.0));
    oktgc_Camera_getDirection(var$4).$set11(oktgc_Camera_getPosition(var$4)).$nor().$scl((-1.0));
    oktgn_ITransformNode$DefaultImpls_updateTransform$default(var$4, 0, 1, null);
    oktgc_Camera_setNear(var$4, 1.0);
    oktgc_Camera_setFar(var$4, 10.0);
    var$4.$update0();
    oktgc_ActiveCamera_setApi(var$3, var$4);
};
$java.oktt_CubeModel__init_1 = function(var$0, var$1, var$2, var$3) {
    $java.oktt_CubeModel_$callClinit();
    if (var$2 & 1)
        var$1 = $java.oktt_CubeModel$Companion_defaultShader($java.oktt_CubeModel_Companion);
    $java.oktt_CubeModel__init_0(var$0, var$1);
};
function oktt_CubeModel__init_0(var$0) {
    $java.oktt_CubeModel_$callClinit();
    $java.oktt_CubeModel__init_1(var$0, null, 1, null);
}
$java.oktt_CubeModel__clinit_ = function() {
    $java.oktt_CubeModel_Companion = $java.oktt_CubeModel$Companion__init_0(null);
};
function oktt_TvmGL$textures$1() {
    kji_Lambda.call(this);
}
var oktt_TvmGL$textures$1_INSTANCE = null;
function oktt_TvmGL$textures$1_$callClinit() {
    oktt_TvmGL$textures$1_$callClinit = $rt_eraseClinit(oktt_TvmGL$textures$1);
    $java.oktt_TvmGL$textures$1__clinit_();
}
$java.oktt_TvmGL$textures$1__init_ = function() {
    var var_0 = new oktt_TvmGL$textures$1();
    oktt_TvmGL$textures$1__init_(var_0);
    return var_0;
};
$java.oktt_TvmGL$textures$1_invoke = function(var$0, var$1) {
    return $java.oktt_TvmGL$textures$1_invoke0(var$0, var$1);
};
$java.oktt_TvmGL$textures$1_invoke0 = function($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    return oktt_TvmGL$TextureWrap__init_($it);
};
function oktt_TvmGL$textures$1__init_(var$0) {
    oktt_TvmGL$textures$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
$java.oktt_TvmGL$textures$1__clinit_ = function() {
    oktt_TvmGL$textures$1_INSTANCE = $java.oktt_TvmGL$textures$1__init_();
};
function oooi_CollisionLibccd$CollideBoxCylinderCCD() {
    jl_Object.call(this);
}
function oooi_CollisionLibccd$CollideBoxCylinderCCD__init_() {
    var var_0 = new oooi_CollisionLibccd$CollideBoxCylinderCCD();
    oooi_CollisionLibccd$CollideBoxCylinderCCD__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$CollideBoxCylinderCCD__init_0($this) {
    jl_Object__init_0($this);
}
$java.oooi_CollisionLibccd$CollideBoxCylinderCCD_dColliderFn = function($this, $o1, $o2, $flags, $contacts) {
    var $cyl, $box, var$7, var$8, var$9, var$10;
    $cyl = oooi_CollisionLibccd$ccd_cyl_t__init_();
    $box = oooi_CollisionLibccd$ccd_box_t__init_(null);
    oooi_CollisionLibccd_ccdGeomToBox($o1, $box);
    oooi_CollisionLibccd_ccdGeomToCyl($o2, $cyl);
    var$7 = oooi_CollisionLibccd_access$300();
    var$8 = oooi_CollisionLibccd_access$100();
    var$9 = oooi_CollisionLibccd_ccdSupportCyl;
    var$10 = oooi_CollisionLibccd_access$100();
    return oooi_CollisionLibccd_ccdCollide($o1, $o2, $flags, $contacts, $box, var$7, var$8, $cyl, var$9, var$10);
};
function cgcj_Yytoken$Types() {
    jl_Enum.call(this);
}
var cgcj_Yytoken$Types_COLON = null;
var cgcj_Yytoken$Types_COMMA = null;
var cgcj_Yytoken$Types_DATUM = null;
var cgcj_Yytoken$Types_END = null;
var cgcj_Yytoken$Types_LEFT_BRACE = null;
var cgcj_Yytoken$Types_LEFT_SQUARE = null;
var cgcj_Yytoken$Types_RIGHT_BRACE = null;
var cgcj_Yytoken$Types_RIGHT_SQUARE = null;
$java.cgcj_Yytoken$Types_$VALUES = null;
function cgcj_Yytoken$Types_$callClinit() {
    cgcj_Yytoken$Types_$callClinit = $rt_eraseClinit(cgcj_Yytoken$Types);
    $java.cgcj_Yytoken$Types__clinit_();
}
$java.cgcj_Yytoken$Types__init_ = function(var_0, var_1) {
    var var_2 = new cgcj_Yytoken$Types();
    $java.cgcj_Yytoken$Types__init_0(var_2, var_0, var_1);
    return var_2;
};
function cgcj_Yytoken$Types_values() {
    cgcj_Yytoken$Types_$callClinit();
    return $java.cgcj_Yytoken$Types_$VALUES.$clone();
}
$java.cgcj_Yytoken$Types__init_0 = function($this, var$1, var$2) {
    cgcj_Yytoken$Types_$callClinit();
    jl_Enum__init_0($this, var$1, var$2);
};
$java.cgcj_Yytoken$Types__clinit_ = function() {
    var var$1, var$2;
    cgcj_Yytoken$Types_COLON = $java.cgcj_Yytoken$Types__init_($rt_s(1394), 0);
    cgcj_Yytoken$Types_COMMA = $java.cgcj_Yytoken$Types__init_($rt_s(1395), 1);
    cgcj_Yytoken$Types_DATUM = $java.cgcj_Yytoken$Types__init_($rt_s(1396), 2);
    cgcj_Yytoken$Types_END = $java.cgcj_Yytoken$Types__init_($rt_s(1397), 3);
    cgcj_Yytoken$Types_LEFT_BRACE = $java.cgcj_Yytoken$Types__init_($rt_s(1398), 4);
    cgcj_Yytoken$Types_LEFT_SQUARE = $java.cgcj_Yytoken$Types__init_($rt_s(1399), 5);
    cgcj_Yytoken$Types_RIGHT_BRACE = $java.cgcj_Yytoken$Types__init_($rt_s(1400), 6);
    cgcj_Yytoken$Types_RIGHT_SQUARE = $java.cgcj_Yytoken$Types__init_($rt_s(1401), 7);
    var$1 = $rt_createArray(cgcj_Yytoken$Types, 8);
    var$2 = var$1.data;
    var$2[0] = cgcj_Yytoken$Types_COLON;
    var$2[1] = cgcj_Yytoken$Types_COMMA;
    var$2[2] = cgcj_Yytoken$Types_DATUM;
    var$2[3] = cgcj_Yytoken$Types_END;
    var$2[4] = cgcj_Yytoken$Types_LEFT_BRACE;
    var$2[5] = cgcj_Yytoken$Types_LEFT_SQUARE;
    var$2[6] = cgcj_Yytoken$Types_RIGHT_BRACE;
    var$2[7] = cgcj_Yytoken$Types_RIGHT_SQUARE;
    $java.cgcj_Yytoken$Types_$VALUES = var$1;
};
function jur_RelCompositeGroupQuantifierSet() {
    jur_CompositeGroupQuantifierSet.call(this);
}
$java.jur_RelCompositeGroupQuantifierSet__init_ = function(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_RelCompositeGroupQuantifierSet();
    $java.jur_RelCompositeGroupQuantifierSet__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
};
$java.jur_RelCompositeGroupQuantifierSet__init_0 = function($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_CompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter);
};
$java.jur_RelCompositeGroupQuantifierSet_matches = function($this, $stringIndex, $testString, $matchResult) {
    var $enterCounter, $nextIndex;
    $enterCounter = $matchResult.$getEnterCounter($this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier0.$max0()) {
        $matchResult.$setEnterCounter($this.$setCounter, 0);
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    }
    if ($enterCounter < $this.$quantifier0.$min0()) {
        $matchResult.$setEnterCounter($this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    } else {
        $nextIndex = $this.$next0.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0) {
            $matchResult.$setEnterCounter($this.$setCounter, 0);
            return $nextIndex;
        }
        $matchResult.$setEnterCounter($this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    }
    return $nextIndex;
};
function jl_IllegalMonitorStateException() {
    jl_RuntimeException.call(this);
}
function jl_IllegalMonitorStateException__init_() {
    var var_0 = new jl_IllegalMonitorStateException();
    jl_IllegalMonitorStateException__init_0(var_0);
    return var_0;
}
function jl_IllegalMonitorStateException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function oktts_MotionBlurBaseTest$testMain$2$2() {
    kji_Lambda.call(this);
    this.$this$0217 = null;
}
function oktts_MotionBlurBaseTest$testMain$2$2__init_(var_0) {
    var var_1 = new oktts_MotionBlurBaseTest$testMain$2$2();
    $java.oktts_MotionBlurBaseTest$testMain$2$2__init_(var_1, var_0);
    return var_1;
}
$java.oktts_MotionBlurBaseTest$testMain$2$2_invoke = function(var$0, var$1) {
    $java.oktts_MotionBlurBaseTest$testMain$2$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_MotionBlurBaseTest$testMain$2$2_invoke0 = function($this, $$this$render) {
    var var$2, var$3;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    $this.$this$0217.$$sceneColorShader.$bind();
    var$2 = $this.$this$0217.$$sceneColorShader;
    oktgc_ActiveCamera_$callClinit();
    var$2.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $this.$this$0217.$$sceneColorShader.$set54($rt_s(608), $this.$this$0217.$$cubePos);
    $this.$this$0217.$$sceneColorShader.$set54($rt_s(623), $this.$this$0217.$$cubeColor0);
    oktm_IMesh$DefaultImpls_render$default($this.$this$0217.$$cube3, $this.$this$0217.$$sceneColorShader, 0, 0, 0, 0, 30, null);
    var$3 = $this.$this$0217.$$sceneColorShader;
    oktm_IVec3_$callClinit();
    var$3.$set54($rt_s(608), oktm_IVec3$Companion_getZero(oktm_IVec3_Companion));
    $this.$this$0217.$$sceneColorShader.$set54($rt_s(623), oktm_IVec3$Companion_getOne(oktm_IVec3_Companion));
    oktm_IMesh$DefaultImpls_render$default($this.$this$0217.$$plane4, $this.$this$0217.$$sceneColorShader, 0, 0, 0, 0, 30, null);
};
$java.oktts_MotionBlurBaseTest$testMain$2$2__init_ = function(var$0, var$1) {
    var$0.$this$0217 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktts_MotionBlurBaseTest$testMain$2$1() {
    kji_Lambda.call(this);
    this.$this$0218 = null;
}
function oktts_MotionBlurBaseTest$testMain$2$1__init_(var_0) {
    var var_1 = new oktts_MotionBlurBaseTest$testMain$2$1();
    $java.oktts_MotionBlurBaseTest$testMain$2$1__init_(var_1, var_0);
    return var_1;
}
$java.oktts_MotionBlurBaseTest$testMain$2$1_invoke = function(var$0, var$1) {
    $java.oktts_MotionBlurBaseTest$testMain$2$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_MotionBlurBaseTest$testMain$2$1_invoke0 = function($this, $$this$render) {
    var var$2, var$3;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    $this.$this$0218.$$velocityShader.$bind();
    var$2 = $this.$this$0218.$$velocityShader;
    oktgc_ActiveCamera_$callClinit();
    var$2.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $this.$this$0218.$$velocityShader.$set12($rt_s(1402), oktgc_ActiveCamera_getPreviousViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $this.$this$0218.$$velocityShader.$set54($rt_s(608), $this.$this$0218.$$cubePos);
    $this.$this$0218.$$velocityShader.$set54($rt_s(1145), $this.$this$0218.$$cubePrevPos);
    oktm_IMesh$DefaultImpls_render$default($this.$this$0218.$$cube3, $this.$this$0218.$$velocityShader, 0, 0, 0, 0, 30, null);
    var$3 = $this.$this$0218.$$velocityShader;
    oktm_IVec3_$callClinit();
    var$3.$set54($rt_s(608), oktm_IVec3$Companion_getZero(oktm_IVec3_Companion));
    $this.$this$0218.$$velocityShader.$set54($rt_s(1145), oktm_IVec3$Companion_getZero(oktm_IVec3_Companion));
    oktm_IMesh$DefaultImpls_render$default($this.$this$0218.$$plane4, $this.$this$0218.$$velocityShader, 0, 0, 0, 0, 30, null);
};
$java.oktts_MotionBlurBaseTest$testMain$2$1__init_ = function(var$0, var$1) {
    var$0.$this$0218 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oooi_CollideSpaceGeom$1() {
    jl_Object.call(this);
    this.$this$0219 = null;
}
function oooi_CollideSpaceGeom$1__init_(var_0) {
    var var_1 = new oooi_CollideSpaceGeom$1();
    $java.oooi_CollideSpaceGeom$1__init_(var_1, var_0);
    return var_1;
}
$java.oooi_CollideSpaceGeom$1__init_ = function($this, $this$0) {
    $this.$this$0219 = $this$0;
    jl_Object__init_0($this);
};
$java.oooi_CollideSpaceGeom$1_call = function($this, $data, $g1, $g2) {
    oooi_CollideSpaceGeom_space_geom_collider($data, $g1, $g2);
};
function jur_RelAltGroupQuantifierSet() {
    jur_AltGroupQuantifierSet.call(this);
}
$java.jur_RelAltGroupQuantifierSet__init_ = function(var_0, var_1, var_2) {
    var var_3 = new jur_RelAltGroupQuantifierSet();
    $java.jur_RelAltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
};
$java.jur_RelAltGroupQuantifierSet__init_0 = function($this, $innerSet, $next, $type) {
    jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type);
};
$java.jur_RelAltGroupQuantifierSet_matches = function($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$next0.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    return $nextIndex;
};
function oooic_Cstdlib$Random31() {
    ju_Random.call(this);
}
$java.oooic_Cstdlib$Random31__init_ = function() {
    var var_0 = new oooic_Cstdlib$Random31();
    oooic_Cstdlib$Random31__init_0(var_0);
    return var_0;
};
function oooic_Cstdlib$Random31__init_(var_0) {
    var var_1 = new oooic_Cstdlib$Random31();
    $java.oooic_Cstdlib$Random31__init_0(var_1, var_0);
    return var_1;
}
function oooic_Cstdlib$Random31__init_0($this) {
    ju_Random__init_1($this);
}
$java.oooic_Cstdlib$Random31__init_0 = function($this, $x0) {
    oooic_Cstdlib$Random31__init_0($this);
};
function jnc_Charset$Charsets() {
    jl_Object.call(this);
}
$java.jnc_Charset$Charsets_value = null;
$java.jnc_Charset$Charsets_$callClinit = function() {
    $java.jnc_Charset$Charsets_$callClinit = $rt_eraseClinit(jnc_Charset$Charsets);
    $java.jnc_Charset$Charsets__clinit_();
};
$java.jnc_Charset$Charsets__init_ = function() {
    var var_0 = new jnc_Charset$Charsets();
    jnc_Charset$Charsets__init_(var_0);
    return var_0;
};
function jnc_Charset$Charsets__init_($this) {
    $java.jnc_Charset$Charsets_$callClinit();
    jl_Object__init_0($this);
}
function jnc_Charset$Charsets_access$000() {
    $java.jnc_Charset$Charsets_$callClinit();
    return $java.jnc_Charset$Charsets_value;
}
$java.jnc_Charset$Charsets__clinit_ = function() {
    $java.jnc_Charset$Charsets_value = ju_HashMap__init_();
    $java.jnc_Charset$Charsets_value.$put3($rt_s(355), jnci_UTF8Charset__init_());
};
function oktgg_GLTF$read$14$1() {
    kji_Lambda.call(this);
    this.$this$0220 = null;
}
$java.oktgg_GLTF$read$14$1__init_ = function(var_0) {
    var var_1 = new oktgg_GLTF$read$14$1();
    $java.oktgg_GLTF$read$14$1__init_0(var_1, var_0);
    return var_1;
};
$java.oktgg_GLTF$read$14$1_invoke = function(var$0, var$1) {
    $java.oktgg_GLTF$read$14$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTF$read$14$1_invoke0 = function($this, $$this$objs) {
    var $scene;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $scene = $java.oktgg_GLTFScene__init_($this.$this$0220.$this$0221, oktgg_GLTFArray_size($this.$this$0220.$this$0221.$getScenes()), null, 4, null);
    $this.$this$0220.$this$0221.$getScenes().$add1($scene);
    $java.oktgg_GLTFScene_read($scene, $$this$objs);
};
$java.oktgg_GLTF$read$14$1__init_0 = function(var$0, var$1) {
    var$0.$this$0220 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function okttsg_MotionBlurTest$testMain$3$1() {
    kji_Lambda.call(this);
    this.$this$0222 = null;
}
$java.okttsg_MotionBlurTest$testMain$3$1__init_ = function(var_0) {
    var var_1 = new okttsg_MotionBlurTest$testMain$3$1();
    $java.okttsg_MotionBlurTest$testMain$3$1__init_0(var_1, var_0);
    return var_1;
};
$java.okttsg_MotionBlurTest$testMain$3$1_invoke = function(var$0, var$1) {
    $java.okttsg_MotionBlurTest$testMain$3$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.okttsg_MotionBlurTest$testMain$3$1_invoke0 = function($this, $$this$render) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$2 = oktt_GLTFModel_getScene($this.$this$0222.$$model7);
    if (var$2 !== null) {
        oktg_ShaderChannel_$callClinit();
        var$2.$setShaderChannel(oktg_ShaderChannel_getVelocity(oktg_ShaderChannel_INSTANCE));
    }
    oktt_GLTFModel_render($this.$this$0222.$$model7);
};
$java.okttsg_MotionBlurTest$testMain$3$1__init_0 = function(var$0, var$1) {
    var$0.$this$0222 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function okttsg_MotionBlurTest$testMain$3$2() {
    kji_Lambda.call(this);
    this.$this$0223 = null;
}
$java.okttsg_MotionBlurTest$testMain$3$2__init_ = function(var_0) {
    var var_1 = new okttsg_MotionBlurTest$testMain$3$2();
    $java.okttsg_MotionBlurTest$testMain$3$2__init_0(var_1, var_0);
    return var_1;
};
$java.okttsg_MotionBlurTest$testMain$3$2_invoke = function(var$0, var$1) {
    $java.okttsg_MotionBlurTest$testMain$3$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.okttsg_MotionBlurTest$testMain$3$2_invoke0 = function($this, $$this$render) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$2 = oktt_GLTFModel_getScene($this.$this$0223.$$model7);
    if (var$2 !== null)
        var$2.$setShaderChannel((-1));
    oktt_GLTFModel_render($this.$this$0223.$$model7);
};
$java.okttsg_MotionBlurTest$testMain$3$2__init_0 = function(var$0, var$1) {
    var$0.$this$0223 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oooi_DxRay$CollideRaySphere() {
    jl_Object.call(this);
}
function oooi_DxRay$CollideRaySphere__init_() {
    var var_0 = new oooi_DxRay$CollideRaySphere();
    oooi_DxRay$CollideRaySphere__init_0(var_0);
    return var_0;
}
function oooi_DxRay$CollideRaySphere__init_0($this) {
    jl_Object__init_0($this);
}
$java.oooi_DxRay$CollideRaySphere_dCollideRaySphere = function($this, $ray, $sphere, $flags, $contacts, $skip) {
    var $contact;
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $contact = ooo_DContactGeomBuffer_get($contacts, 0);
    $contact.$g1 = $ray;
    $contact.$g2 = $sphere;
    $contact.$side1 = (-1);
    $contact.$side2 = (-1);
    return oooi_DxRay_access$000($ray, $sphere.$final_posr().$pos(), $sphere.$getRadius(), $contacts, 0);
};
$java.oooi_DxRay$CollideRaySphere_dColliderFn = function($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideRaySphere($o1, $o2, $flags, $contacts, 1);
};
function oktt_TvmUInt8Array$Companion() {
    jl_Object.call(this);
}
$java.oktt_TvmUInt8Array$Companion__init_ = function() {
    var var_0 = new oktt_TvmUInt8Array$Companion();
    oktt_TvmUInt8Array$Companion__init_0(var_0);
    return var_0;
};
function oktt_TvmUInt8Array$Companion__init_(var_0) {
    var var_1 = new oktt_TvmUInt8Array$Companion();
    $java.oktt_TvmUInt8Array$Companion__init_0(var_1, var_0);
    return var_1;
}
function oktt_TvmUInt8Array$Companion__init_0($this) {
    jl_Object__init_0($this);
}
$java.oktt_TvmUInt8Array$Companion__init_0 = function($this, $$constructor_marker) {
    oktt_TvmUInt8Array$Companion__init_0($this);
};
function oktt_TestGroup() {
    ju_ArrayList.call(this);
    this.$name46 = null;
}
$java.oktt_TestGroup__init_ = function(var_0) {
    var var_1 = new oktt_TestGroup();
    $java.oktt_TestGroup__init_0(var_1, var_0);
    return var_1;
};
$java.oktt_TestGroup__init_1 = function(var_0, var_1) {
    var var_2 = new oktt_TestGroup();
    oktt_TestGroup__init_(var_2, var_0, var_1);
    return var_2;
};
function oktt_TestGroup_getName($this) {
    return $this.$name46;
}
$java.oktt_TestGroup__init_0 = function($this, $name) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    ju_ArrayList__init_2($this);
    $this.$name46 = $name;
};
function oktt_TestGroup__init_($this, $name, $tests) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($tests, $rt_s(1403));
    $java.oktt_TestGroup__init_0($this, $name);
    kc_CollectionsKt__MutableCollectionsKt_addAll($this, $tests);
}
$java.oktt_TestGroup_getSize = function(var$0) {
    return ju_ArrayList_size(var$0);
};
$java.oktt_TestGroup_size = function(var$0) {
    return $java.oktt_TestGroup_getSize(var$0);
};
function oooicj_RefInt() {
    jl_Object.call(this);
    this.$i = 0;
}
function oooicj_RefInt__init_() {
    var var_0 = new oooicj_RefInt();
    oooicj_RefInt__init_1(var_0);
    return var_0;
}
function oooicj_RefInt__init_0(var_0) {
    var var_1 = new oooicj_RefInt();
    $java.oooicj_RefInt__init_(var_1, var_0);
    return var_1;
}
function oooicj_RefInt__init_1($this) {
    jl_Object__init_0($this);
    $this.$i = 0;
}
$java.oooicj_RefInt__init_ = function($this, $v) {
    jl_Object__init_0($this);
    $this.$i = 0;
    $this.$i = $v;
};
function oooicj_RefInt_set($this, $v) {
    $this.$i = $v;
}
function oooicj_RefInt_get($this) {
    return $this.$i;
}
function oooicj_RefInt_inc($this) {
    $this.$i = $this.$i + 1 | 0;
}
function oktts_GBufferBaseTest$testMain$1$3() {
    kji_Lambda.call(this);
    this.$this$0224 = null;
}
function oktts_GBufferBaseTest$testMain$1$3__init_(var_0) {
    var var_1 = new oktts_GBufferBaseTest$testMain$1$3();
    $java.oktts_GBufferBaseTest$testMain$1$3__init_(var_1, var_0);
    return var_1;
}
$java.oktts_GBufferBaseTest$testMain$1$3_invoke = function(var$0, var$1) {
    $java.oktts_GBufferBaseTest$testMain$1$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_GBufferBaseTest$testMain$1$3_invoke0 = function($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktm_ScreenQuad$TextureRenderer_setPosition($this.$this$0224.$$screenQuad1, 0.5, 0.5);
};
$java.oktts_GBufferBaseTest$testMain$1$3__init_ = function(var$0, var$1) {
    var$0.$this$0224 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktts_GBufferBaseTest$testMain$1$2() {
    kji_Lambda.call(this);
    this.$this$0225 = null;
}
function oktts_GBufferBaseTest$testMain$1$2__init_(var_0) {
    var var_1 = new oktts_GBufferBaseTest$testMain$1$2();
    $java.oktts_GBufferBaseTest$testMain$1$2__init_(var_1, var_0);
    return var_1;
}
$java.oktts_GBufferBaseTest$testMain$1$2_invoke = function(var$0, var$1) {
    $java.oktts_GBufferBaseTest$testMain$1$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_GBufferBaseTest$testMain$1$2_invoke0 = function($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktm_ScreenQuad$TextureRenderer_setPosition($this.$this$0225.$$screenQuad1, (-0.5), 0.5);
};
$java.oktts_GBufferBaseTest$testMain$1$2__init_ = function(var$0, var$1) {
    var$0.$this$0225 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktts_GBufferBaseTest$testMain$1$5() {
    kji_Lambda.call(this);
    this.$this$0226 = null;
}
function oktts_GBufferBaseTest$testMain$1$5__init_(var_0) {
    var var_1 = new oktts_GBufferBaseTest$testMain$1$5();
    $java.oktts_GBufferBaseTest$testMain$1$5__init_(var_1, var_0);
    return var_1;
}
$java.oktts_GBufferBaseTest$testMain$1$5_invoke = function(var$0, var$1) {
    $java.oktts_GBufferBaseTest$testMain$1$5_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_GBufferBaseTest$testMain$1$5_invoke0 = function($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktm_ScreenQuad$TextureRenderer_setPosition($this.$this$0226.$$screenQuad1, 0.5, (-0.5));
};
$java.oktts_GBufferBaseTest$testMain$1$5__init_ = function(var$0, var$1) {
    var$0.$this$0226 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktts_GBufferBaseTest$testMain$1$4() {
    kji_Lambda.call(this);
    this.$this$0227 = null;
}
function oktts_GBufferBaseTest$testMain$1$4__init_(var_0) {
    var var_1 = new oktts_GBufferBaseTest$testMain$1$4();
    $java.oktts_GBufferBaseTest$testMain$1$4__init_(var_1, var_0);
    return var_1;
}
$java.oktts_GBufferBaseTest$testMain$1$4_invoke = function(var$0, var$1) {
    $java.oktts_GBufferBaseTest$testMain$1$4_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_GBufferBaseTest$testMain$1$4_invoke0 = function($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktm_ScreenQuad$TextureRenderer_setPosition($this.$this$0227.$$screenQuad1, (-0.5), (-0.5));
};
$java.oktts_GBufferBaseTest$testMain$1$4__init_ = function(var$0, var$1) {
    var$0.$this$0227 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktgn_ITransformNode$DefaultImpls() {
    jl_Object.call(this);
}
function oktgn_ITransformNode$DefaultImpls_addChildNode($$this, $node) {
    kji_Intrinsics_checkParameterIsNotNull($node, $rt_s(45));
    $node.$setParentNode($$this);
}
function oktgn_ITransformNode$DefaultImpls_addChildren($$this, $nodes) {
    var $i, var$4;
    kji_Intrinsics_checkParameterIsNotNull($nodes, $rt_s(1012));
    $i = 0;
    var$4 = $nodes.$size();
    while ($i < var$4) {
        $$this.$addChildNode($nodes.$get1($i));
        $i = $i + 1 | 0;
    }
}
function oktgn_ITransformNode$DefaultImpls_removeChildNode($$this, $node) {
    kji_Intrinsics_checkParameterIsNotNull($node, $rt_s(45));
    $node.$setParentNode(null);
}
function oktgn_ITransformNode$DefaultImpls_updateTransform($$this, $recursive) {
    return;
}
function oktgn_ITransformNode$DefaultImpls_updateTransform$default(var$1, var$2, var$3, var$4) {
    if (var$4 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1404)));
    if (var$3 & 1)
        var$2 = 1;
    var$1.$updateTransform0(var$2);
}
function oktgn_ITransformNode$DefaultImpls_set($$this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    $$this.$setName($other.$getName());
    return $$this;
}
function oktgn_ITransformNode$DefaultImpls_getPosition($$this, $out, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return $out.$set11($$this.$getPosition0());
}
function oktgn_ITransformNode$DefaultImpls_getWorldMatrix($$this, $out, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return $out.$set3($$this.$getWorldMatrix());
}
function oktgn_ITransformNode$DefaultImpls_getWorldMatrix$default(var$1, var$2, var$3, var$4, var$5) {
    if (var$5 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1405)));
    if (var$4 & 1) {
        oktgn_ITransformNode_$callClinit();
        var$2 = oktgn_ITransformNode$Companion_access$getTmpM$p(oktgn_ITransformNode_Companion);
    }
    if (var$4 & 2)
        var$3 = 0;
    return var$1.$getWorldMatrix0(var$2, var$3);
}
function oktgn_ITransformNode$DefaultImpls_dst2($$this, $position, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($position, $rt_s(53));
    oktgn_ITransformNode_$callClinit();
    return $$this.$getPosition4(oktgn_ITransformNode$Companion_access$getTmp$p(oktgn_ITransformNode_Companion), $isLocal).$dst22($position);
}
function oktgn_ITransformNode$DefaultImpls_dst2$default(var$1, var$2, var$3, var$4, var$5) {
    if (var$5 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1406)));
    if (var$4 & 2)
        var$3 = 0;
    return var$1.$dst23(var$2, var$3);
}
function oktgn_ITransformNode$DefaultImpls_clear($$this) {
    var var$2, $$this$traverseSafe$iv, $i$iv, $item$iv, $it;
    var$2 = $$this.$getParentNode();
    if (var$2 !== null)
        var$2.$removeChildNode0($$this);
    $$this$traverseSafe$iv = $$this.$getChildNodes0();
    $i$iv = 0;
    while ($i$iv < $$this$traverseSafe$iv.$size()) {
        $item$iv = $$this$traverseSafe$iv.$get1($i$iv);
        if ($item$iv !== null) {
            $it = $item$iv;
            $$this.$removeChildNode0($it);
        }
        $i$iv = $i$iv + 1 | 0;
    }
}
function oktg_IObject3D() {
}
$java.oktg_IObject3D_Companion = null;
$java.oktg_IObject3D_$callClinit = function() {
    $java.oktg_IObject3D_$callClinit = $rt_eraseClinit(oktg_IObject3D);
    $java.oktg_IObject3D__clinit_();
};
$java.oktg_IObject3D__clinit_ = function() {
    oktg_IObject3D$Companion_$callClinit();
    $java.oktg_IObject3D_Companion = oktg_IObject3D$Companion_$$INSTANCE;
};
function oktt_TvmGL$programs$1() {
    kji_Lambda.call(this);
}
var oktt_TvmGL$programs$1_INSTANCE = null;
function oktt_TvmGL$programs$1_$callClinit() {
    oktt_TvmGL$programs$1_$callClinit = $rt_eraseClinit(oktt_TvmGL$programs$1);
    $java.oktt_TvmGL$programs$1__clinit_();
}
$java.oktt_TvmGL$programs$1__init_ = function() {
    var var_0 = new oktt_TvmGL$programs$1();
    oktt_TvmGL$programs$1__init_(var_0);
    return var_0;
};
$java.oktt_TvmGL$programs$1_invoke = function(var$0, var$1) {
    return $java.oktt_TvmGL$programs$1_invoke0(var$0, var$1);
};
$java.oktt_TvmGL$programs$1_invoke0 = function($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    return oktt_TvmGL$ProgramWrap__init_1($it, null, null, 6, null);
};
function oktt_TvmGL$programs$1__init_(var$0) {
    oktt_TvmGL$programs$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
$java.oktt_TvmGL$programs$1__clinit_ = function() {
    oktt_TvmGL$programs$1_INSTANCE = $java.oktt_TvmGL$programs$1__init_();
};
function oktu_AsyncArrayList() {
    var a = this; ju_ArrayList.call(a);
    a.$ready3 = null;
    a.$requests0 = null;
}
$java.oktu_AsyncArrayList_tmp = null;
$java.oktu_AsyncArrayList_Companion = null;
$java.oktu_AsyncArrayList_$callClinit = function() {
    $java.oktu_AsyncArrayList_$callClinit = $rt_eraseClinit(oktu_AsyncArrayList);
    $java.oktu_AsyncArrayList__clinit_();
};
function oktu_AsyncArrayList__init_() {
    var var_0 = new oktu_AsyncArrayList();
    oktu_AsyncArrayList__init_0(var_0);
    return var_0;
}
$java.oktu_AsyncArrayList_getReady = function($this) {
    return $this.$ready3;
};
$java.oktu_AsyncArrayList_getRequests = function($this) {
    return $this.$requests0;
};
$java.oktu_AsyncArrayList_clear = function($this) {
    ju_ArrayList_clear($this);
    $this.$getReady0().$clear();
    $this.$getRequests0().$clear();
};
function oktu_AsyncArrayList__init_0($this) {
    $java.oktu_AsyncArrayList_$callClinit();
    ju_ArrayList__init_2($this);
    $this.$ready3 = ju_HashSet__init_();
    $this.$requests0 = ju_ArrayList__init_();
}
$java.oktu_AsyncArrayList__clinit_ = function() {
    $java.oktu_AsyncArrayList_Companion = oktu_AsyncArrayList$Companion__init_1(null);
    $java.oktu_AsyncArrayList_tmp = ju_ArrayList__init_();
};
$java.oktu_AsyncArrayList_getSize = function(var$0) {
    return ju_ArrayList_size(var$0);
};
$java.oktu_AsyncArrayList_size = function(var$0) {
    return var$0.$getSize();
};
function oktt_TvmSound$pool$1() {
    kji_Lambda.call(this);
    this.$this$0228 = null;
}
function oktt_TvmSound$pool$1__init_(var_0) {
    var var_1 = new oktt_TvmSound$pool$1();
    $java.oktt_TvmSound$pool$1__init_(var_1, var_0);
    return var_1;
}
$java.oktt_TvmSound$pool$1_invoke = function(var$0) {
    return $java.oktt_TvmSound$pool$1_invoke0(var$0);
};
$java.oktt_TvmSound$pool$1_invoke0 = function($this) {
    var var$1, var$2, $element, $source, $gain, $panner;
    var$1 = window;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(380));
    var$2 = var$1.document.createElement("audio");
    if (var$2 === null)
        $rt_throw(k_TypeCastException__init_($rt_s(806)));
    $element = var$2;
    var$2 = oktt_TvmAL_getContext(oktt_TvmSound_getAl($this.$this$0228));
    var$1 = $element;
    $source = var$2.createMediaElementSource(var$1);
    $gain = oktt_TvmAL_getContext(oktt_TvmSound_getAl($this.$this$0228)).createGain();
    $panner = oktt_TvmAL_getContext(oktt_TvmSound_getAl($this.$this$0228)).createStereoPanner();
    var$1 = new oktt_SoundInstance;
    kji_Intrinsics_checkExpressionValueIsNotNull($source, $rt_s(808));
    kji_Intrinsics_checkExpressionValueIsNotNull($gain, $rt_s(809));
    kji_Intrinsics_checkExpressionValueIsNotNull($panner, $rt_s(810));
    oktt_SoundInstance__init_(var$1, $element, $source, $gain, $panner);
    return var$1;
};
$java.oktt_TvmSound$pool$1__init_ = function(var$0, var$1) {
    var$0.$this$0228 = var$1;
    kji_Lambda__init_0(var$0, 0);
};
function oooil_CCD$ccd_first_dir_fn() {
}
function oooil_CCD$1() {
    jl_Object.call(this);
}
function oooil_CCD$1__init_() {
    var var_0 = new oooil_CCD$1();
    oooil_CCD$1__init_0(var_0);
    return var_0;
}
function oooil_CCD$1__init_0($this) {
    jl_Object__init_0($this);
}
function oktt_TvmGL$BufferWrap() {
    oktt_TvmGL$GLObject.call(this);
    this.$gl8 = null;
}
function oktt_TvmGL$BufferWrap__init_(var_0) {
    var var_1 = new oktt_TvmGL$BufferWrap();
    $java.oktt_TvmGL$BufferWrap__init_(var_1, var_0);
    return var_1;
}
$java.oktt_TvmGL$BufferWrap_getGl = function($this) {
    return $this.$gl8;
};
$java.oktt_TvmGL$BufferWrap_getGl0 = function(var$0) {
    return $java.oktt_TvmGL$BufferWrap_getGl(var$0);
};
$java.oktt_TvmGL$BufferWrap__init_ = function($this, $gl) {
    kji_Intrinsics_checkParameterIsNotNull($gl, $rt_s(814));
    oktt_TvmGL$GLObject__init_0($this);
    $this.$gl8 = $gl;
};
function jur_PatternSyntaxException() {
    var a = this; jl_IllegalArgumentException.call(a);
    a.$desc = null;
    a.$pattern0 = null;
    a.$index8 = 0;
}
function jur_PatternSyntaxException__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PatternSyntaxException();
    $java.jur_PatternSyntaxException__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
$java.jur_PatternSyntaxException__init_ = function($this, $description, $pattern, $index) {
    jl_IllegalArgumentException__init_1($this);
    $this.$index8 = (-1);
    $this.$desc = $description;
    $this.$pattern0 = $pattern;
    $this.$index8 = $index;
};
function cgcj_Yylex() {
    var a = this; jl_Object.call(a);
    a.$zzReader = null;
    a.$zzState = 0;
    a.$zzLexicalState = 0;
    a.$zzBuffer = null;
    a.$zzMarkedPos = 0;
    a.$zzCurrentPos = 0;
    a.$zzStartRead = 0;
    a.$zzEndRead = 0;
    a.$yychar = 0;
    a.$zzAtBOL = 0;
    a.$zzAtEOF = 0;
    a.$sb0 = null;
}
$java.cgcj_Yylex_ZZ_LEXSTATE = null;
$java.cgcj_Yylex_ZZ_CMAP = null;
$java.cgcj_Yylex_ZZ_ACTION = null;
$java.cgcj_Yylex_ZZ_ROWMAP = null;
$java.cgcj_Yylex_ZZ_TRANS = null;
$java.cgcj_Yylex_ZZ_ERROR_MSG = null;
$java.cgcj_Yylex_ZZ_ATTRIBUTE = null;
$java.cgcj_Yylex_$callClinit = function() {
    $java.cgcj_Yylex_$callClinit = $rt_eraseClinit(cgcj_Yylex);
    $java.cgcj_Yylex__clinit_();
};
function cgcj_Yylex__init_(var_0) {
    var var_1 = new cgcj_Yylex();
    $java.cgcj_Yylex__init_(var_1, var_0);
    return var_1;
}
$java.cgcj_Yylex_zzUnpackAction = function() {
    var $result, $offset;
    $java.cgcj_Yylex_$callClinit();
    $result = $rt_createIntArray(45);
    $offset = 0;
    $java.cgcj_Yylex_zzUnpackAction0($rt_s(1407), $offset, $result);
    return $result;
};
$java.cgcj_Yylex_zzUnpackAction0 = function($packed, $offset, $result) {
    var $i, $l, var$6, $count, $value, var$9, var$10;
    $java.cgcj_Yylex_$callClinit();
    $i = 0;
    $l = $packed.$length();
    while ($i < $l) {
        var$6 = $i + 1 | 0;
        $count = $packed.$charAt($i);
        $i = var$6 + 1 | 0;
        $value = $packed.$charAt(var$6);
        while (true) {
            var$9 = $result.data;
            var$10 = $offset + 1 | 0;
            var$9[$offset] = $value;
            $count = $count + (-1) | 0;
            if ($count <= 0)
                break;
            $offset = var$10;
        }
        $offset = var$10;
    }
    return $offset;
};
$java.cgcj_Yylex_zzUnpackRowMap = function() {
    var $result, $offset;
    $java.cgcj_Yylex_$callClinit();
    $result = $rt_createIntArray(45);
    $offset = 0;
    $java.cgcj_Yylex_zzUnpackRowMap0($rt_s(1408), $offset, $result);
    return $result;
};
$java.cgcj_Yylex_zzUnpackRowMap0 = function($packed, $offset, $result) {
    var $i, $l, var$6, var$7, $high, var$9;
    $java.cgcj_Yylex_$callClinit();
    $i = 0;
    $l = $packed.$length();
    while ($i < $l) {
        var$6 = $result.data;
        var$7 = $i + 1 | 0;
        $high = $packed.$charAt($i) << 16;
        var$9 = $offset + 1 | 0;
        $i = var$7 + 1 | 0;
        var$6[$offset] = $high | $packed.$charAt(var$7);
        $offset = var$9;
    }
    return $offset;
};
$java.cgcj_Yylex_zzUnpackAttribute = function() {
    var $result, $offset;
    $java.cgcj_Yylex_$callClinit();
    $result = $rt_createIntArray(45);
    $offset = 0;
    $java.cgcj_Yylex_zzUnpackAttribute0($rt_s(1409), $offset, $result);
    return $result;
};
$java.cgcj_Yylex_zzUnpackAttribute0 = function($packed, $offset, $result) {
    var $i, $l, var$6, $count, $value, var$9, var$10;
    $java.cgcj_Yylex_$callClinit();
    $i = 0;
    $l = $packed.$length();
    while ($i < $l) {
        var$6 = $i + 1 | 0;
        $count = $packed.$charAt($i);
        $i = var$6 + 1 | 0;
        $value = $packed.$charAt(var$6);
        while (true) {
            var$9 = $result.data;
            var$10 = $offset + 1 | 0;
            var$9[$offset] = $value;
            $count = $count + (-1) | 0;
            if ($count <= 0)
                break;
            $offset = var$10;
        }
        $offset = var$10;
    }
    return $offset;
};
$java.cgcj_Yylex_getPosition = function($this) {
    return $this.$yychar;
};
$java.cgcj_Yylex__init_ = function($this, $in) {
    $java.cgcj_Yylex_$callClinit();
    jl_Object__init_0($this);
    $this.$zzLexicalState = 0;
    $this.$zzBuffer = $rt_createCharArray(16384);
    $this.$zzAtBOL = 1;
    $this.$sb0 = jl_StringBuilder__init_();
    $this.$zzReader = $in;
};
$java.cgcj_Yylex_zzUnpackCMap = function($packed) {
    var $map, $i, $j, var$5, $count, $value, var$8, $j_0;
    $java.cgcj_Yylex_$callClinit();
    $map = $rt_createCharArray(65536);
    $i = 0;
    $j = 0;
    while ($i < 90) {
        var$5 = $i + 1 | 0;
        $count = $packed.$charAt($i);
        $i = var$5 + 1 | 0;
        $value = $packed.$charAt(var$5);
        while (true) {
            var$8 = $map.data;
            $j_0 = $j + 1 | 0;
            var$8[$j] = $value;
            $count = $count + (-1) | 0;
            if ($count <= 0)
                break;
            $j = $j_0;
        }
        $j = $j_0;
    }
    return $map;
};
$java.cgcj_Yylex_zzRefill = function($this) {
    var $newBuffer, $numRead, $c, var$4, var$5;
    if ($this.$zzStartRead > 0) {
        jl_System_arraycopy($this.$zzBuffer, $this.$zzStartRead, $this.$zzBuffer, 0, $this.$zzEndRead - $this.$zzStartRead | 0);
        $this.$zzEndRead = $this.$zzEndRead - $this.$zzStartRead | 0;
        $this.$zzCurrentPos = $this.$zzCurrentPos - $this.$zzStartRead | 0;
        $this.$zzMarkedPos = $this.$zzMarkedPos - $this.$zzStartRead | 0;
        $this.$zzStartRead = 0;
    }
    if ($this.$zzCurrentPos >= $this.$zzBuffer.data.length) {
        $newBuffer = $rt_createCharArray($this.$zzCurrentPos * 2 | 0);
        jl_System_arraycopy($this.$zzBuffer, 0, $newBuffer, 0, $this.$zzBuffer.data.length);
        $this.$zzBuffer = $newBuffer;
    }
    $numRead = $this.$zzReader.$read3($this.$zzBuffer, $this.$zzEndRead, $this.$zzBuffer.data.length - $this.$zzEndRead | 0);
    if ($numRead > 0) {
        $this.$zzEndRead = $this.$zzEndRead + $numRead | 0;
        return 0;
    }
    if ($numRead)
        return 1;
    $c = $this.$zzReader.$read0();
    if ($c == (-1))
        return 1;
    var$4 = $this.$zzBuffer.data;
    var$5 = $this.$zzEndRead;
    $this.$zzEndRead = var$5 + 1 | 0;
    var$4[var$5] = $c & 65535;
    return 0;
};
$java.cgcj_Yylex_yybegin = function($this, $newState) {
    $this.$zzLexicalState = $newState;
};
$java.cgcj_Yylex_yytext = function($this) {
    return jl_String__init_0($this.$zzBuffer, $this.$zzStartRead, $this.$zzMarkedPos - $this.$zzStartRead | 0);
};
$java.cgcj_Yylex_yycharat = function($this, $pos) {
    return $this.$zzBuffer.data[$this.$zzStartRead + $pos | 0];
};
$java.cgcj_Yylex_zzScanError = function($this, $errorCode) {
    var $message, $$je;
    a: {
        b: {
            try {
                $message = $java.cgcj_Yylex_ZZ_ERROR_MSG.data[$errorCode];
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_ArrayIndexOutOfBoundsException) {
                    break b;
                } else {
                    throw $$e;
                }
            }
            break a;
        }
        $message = $java.cgcj_Yylex_ZZ_ERROR_MSG.data[0];
    }
    $rt_throw(jl_Error__init_3($message));
};
$java.cgcj_Yylex_yylex = function($this) {
    var $zzEndReadL, $zzBufferL, $zzCMapL, $zzTransL, $zzRowMapL, $zzAttrL, $zzMarkedPosL, $zzAction, var$9, var$10, var$11, $zzInput, $eof, var$14, var$15, var$16, $zzNext, $zzAttributes, var$19, $val, var$21, $ch, $e, $$je;
    $zzEndReadL = $this.$zzEndRead;
    $zzBufferL = $this.$zzBuffer;
    $zzCMapL = $java.cgcj_Yylex_ZZ_CMAP;
    $zzTransL = $java.cgcj_Yylex_ZZ_TRANS;
    $zzRowMapL = $java.cgcj_Yylex_ZZ_ROWMAP;
    $zzAttrL = $java.cgcj_Yylex_ZZ_ATTRIBUTE;
    a: while (true) {
        $zzMarkedPosL = $this.$zzMarkedPos;
        $this.$yychar = $this.$yychar + ($zzMarkedPosL - $this.$zzStartRead | 0) | 0;
        $zzAction = (-1);
        $this.$zzStartRead = $zzMarkedPosL;
        $this.$zzCurrentPos = $zzMarkedPosL;
        $this.$zzState = $java.cgcj_Yylex_ZZ_LEXSTATE.data[$this.$zzLexicalState];
        var$9 = $zzMarkedPosL;
        b: {
            while (true) {
                if ($zzMarkedPosL < $zzEndReadL) {
                    var$10 = $zzBufferL.data;
                    var$11 = $zzMarkedPosL + 1 | 0;
                    $zzInput = var$10[$zzMarkedPosL];
                } else {
                    if ($this.$zzAtEOF) {
                        $zzInput = (-1);
                        break b;
                    }
                    $this.$zzCurrentPos = $zzMarkedPosL;
                    $this.$zzMarkedPos = var$9;
                    $eof = $java.cgcj_Yylex_zzRefill($this);
                    var$14 = $this.$zzCurrentPos;
                    var$9 = $this.$zzMarkedPos;
                    $zzBufferL = $this.$zzBuffer;
                    $zzEndReadL = $this.$zzEndRead;
                    if ($eof) {
                        $zzInput = (-1);
                        break b;
                    }
                    var$10 = $zzBufferL.data;
                    var$11 = var$14 + 1 | 0;
                    $zzInput = var$10[var$14];
                }
                var$15 = $zzTransL.data;
                var$16 = $zzCMapL.data;
                $zzNext = var$15[$zzRowMapL.data[$this.$zzState] + var$16[$zzInput] | 0];
                if ($zzNext == (-1))
                    break;
                var$10 = $zzAttrL.data;
                $this.$zzState = $zzNext;
                $zzAttributes = var$10[$this.$zzState];
                if (($zzAttributes & 1) == 1) {
                    $zzAction = $this.$zzState;
                    if (($zzAttributes & 8) == 8) {
                        var$9 = var$11;
                        break b;
                    }
                    var$9 = var$11;
                }
                $zzMarkedPosL = var$11;
            }
        }
        $this.$zzMarkedPos = var$9;
        if ($zzAction >= 0)
            $zzAction = $java.cgcj_Yylex_ZZ_ACTION.data[$zzAction];
        c: {
            d: {
                e: {
                    f: {
                        g: {
                            h: {
                                i: {
                                    j: {
                                        k: {
                                            l: {
                                                m: {
                                                    switch ($zzAction) {
                                                        case 1:
                                                            var$19 = new cgcj_JsonException;
                                                            var$14 = $this.$yychar;
                                                            cgcj_JsonException$Problems_$callClinit();
                                                            cgcj_JsonException__init_(var$19, var$14, cgcj_JsonException$Problems_UNEXPECTED_CHARACTER, $java.jl_Character__init_($java.cgcj_Yylex_yycharat($this, 0)));
                                                            $rt_throw(var$19);
                                                        case 2:
                                                            $val = $java.jm_BigDecimal__init_3($java.cgcj_Yylex_yytext($this));
                                                            var$21 = new cgcj_Yytoken;
                                                            cgcj_Yytoken$Types_$callClinit();
                                                            cgcj_Yytoken__init_(var$21, cgcj_Yytoken$Types_DATUM, $val);
                                                            return var$21;
                                                        case 3:
                                                        case 46:
                                                            break;
                                                        case 4:
                                                            $this.$sb0 = null;
                                                            $this.$sb0 = jl_StringBuilder__init_();
                                                            $java.cgcj_Yylex_yybegin($this, 2);
                                                            break d;
                                                        case 5:
                                                            var$21 = new cgcj_Yytoken;
                                                            cgcj_Yytoken$Types_$callClinit();
                                                            cgcj_Yytoken__init_(var$21, cgcj_Yytoken$Types_LEFT_BRACE, null);
                                                            return var$21;
                                                        case 6:
                                                            var$21 = new cgcj_Yytoken;
                                                            cgcj_Yytoken$Types_$callClinit();
                                                            cgcj_Yytoken__init_(var$21, cgcj_Yytoken$Types_RIGHT_BRACE, null);
                                                            return var$21;
                                                        case 7:
                                                            var$21 = new cgcj_Yytoken;
                                                            cgcj_Yytoken$Types_$callClinit();
                                                            cgcj_Yytoken__init_(var$21, cgcj_Yytoken$Types_LEFT_SQUARE, null);
                                                            return var$21;
                                                        case 8:
                                                            var$21 = new cgcj_Yytoken;
                                                            cgcj_Yytoken$Types_$callClinit();
                                                            cgcj_Yytoken__init_(var$21, cgcj_Yytoken$Types_RIGHT_SQUARE, null);
                                                            return var$21;
                                                        case 9:
                                                            var$21 = new cgcj_Yytoken;
                                                            cgcj_Yytoken$Types_$callClinit();
                                                            cgcj_Yytoken__init_(var$21, cgcj_Yytoken$Types_COMMA, null);
                                                            return var$21;
                                                        case 10:
                                                            var$21 = new cgcj_Yytoken;
                                                            cgcj_Yytoken$Types_$callClinit();
                                                            cgcj_Yytoken__init_(var$21, cgcj_Yytoken$Types_COLON, null);
                                                            return var$21;
                                                        case 11:
                                                            $this.$sb0.$append($java.cgcj_Yylex_yytext($this));
                                                            break m;
                                                        case 12:
                                                            $this.$sb0.$append12(92);
                                                            break l;
                                                        case 13:
                                                            $java.cgcj_Yylex_yybegin($this, 0);
                                                            var$21 = new cgcj_Yytoken;
                                                            cgcj_Yytoken$Types_$callClinit();
                                                            cgcj_Yytoken__init_(var$21, cgcj_Yytoken$Types_DATUM, $this.$sb0.$toString());
                                                            return var$21;
                                                        case 14:
                                                            $this.$sb0.$append12(34);
                                                            break k;
                                                        case 15:
                                                            $this.$sb0.$append12(47);
                                                            break j;
                                                        case 16:
                                                            $this.$sb0.$append12(8);
                                                            break i;
                                                        case 17:
                                                            $this.$sb0.$append12(12);
                                                            break h;
                                                        case 18:
                                                            $this.$sb0.$append12(10);
                                                            break g;
                                                        case 19:
                                                            $this.$sb0.$append12(13);
                                                            break f;
                                                        case 20:
                                                            $this.$sb0.$append12(9);
                                                            break e;
                                                        case 21:
                                                            var$21 = new cgcj_Yytoken;
                                                            cgcj_Yytoken$Types_$callClinit();
                                                            cgcj_Yytoken__init_(var$21, cgcj_Yytoken$Types_DATUM, null);
                                                            return var$21;
                                                        case 22:
                                                            $val = jl_Boolean_valueOf0($java.cgcj_Yylex_yytext($this));
                                                            var$21 = new cgcj_Yytoken;
                                                            cgcj_Yytoken$Types_$callClinit();
                                                            cgcj_Yytoken__init_(var$21, cgcj_Yytoken$Types_DATUM, $val);
                                                            return var$21;
                                                        case 23:
                                                            try {
                                                                $ch = jl_Integer_parseInt($java.cgcj_Yylex_yytext($this).$substring1(2), 16);
                                                                $this.$sb0.$append12($ch & 65535);
                                                                break c;
                                                            } catch ($$e) {
                                                                $$je = $rt_wrapException($$e);
                                                                if ($$je instanceof jl_Exception) {
                                                                    $e = $$je;
                                                                    var$21 = new cgcj_JsonException;
                                                                    var$11 = $this.$yychar;
                                                                    cgcj_JsonException$Problems_$callClinit();
                                                                    cgcj_JsonException__init_(var$21, var$11, cgcj_JsonException$Problems_UNEXPECTED_EXCEPTION, $e);
                                                                    $rt_throw(var$21);
                                                                } else {
                                                                    throw $$e;
                                                                }
                                                            }
                                                        case 24:
                                                            continue a;
                                                        case 25:
                                                            break d;
                                                        case 26:
                                                            break m;
                                                        case 27:
                                                            continue a;
                                                        case 28:
                                                            break i;
                                                        case 29:
                                                            continue a;
                                                        case 30:
                                                            break l;
                                                        case 31:
                                                            continue a;
                                                        case 32:
                                                            continue a;
                                                        case 33:
                                                            continue a;
                                                        case 34:
                                                            break f;
                                                        case 35:
                                                            break j;
                                                        case 36:
                                                            continue a;
                                                        case 37:
                                                            break k;
                                                        case 38:
                                                            continue a;
                                                        case 39:
                                                            break c;
                                                        case 40:
                                                            break h;
                                                        case 41:
                                                            continue a;
                                                        case 42:
                                                            break e;
                                                        case 43:
                                                            continue a;
                                                        case 44:
                                                            break g;
                                                        case 45:
                                                            continue a;
                                                        default:
                                                            if ($zzInput == (-1) && $this.$zzStartRead == $this.$zzCurrentPos)
                                                                break a;
                                                            $java.cgcj_Yylex_zzScanError($this, 1);
                                                            continue a;
                                                    }
                                                    continue a;
                                                }
                                                continue a;
                                            }
                                            continue a;
                                        }
                                        continue a;
                                    }
                                    continue a;
                                }
                                continue a;
                            }
                            continue a;
                        }
                        continue a;
                    }
                    continue a;
                }
                continue a;
            }
            continue a;
        }
    }
    $this.$zzAtEOF = 1;
    return null;
};
$java.cgcj_Yylex__clinit_ = function() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(4);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = 1;
    var$2[3] = 1;
    $java.cgcj_Yylex_ZZ_LEXSTATE = var$1;
    $java.cgcj_Yylex_ZZ_CMAP = $java.cgcj_Yylex_zzUnpackCMap($rt_s(1410));
    $java.cgcj_Yylex_ZZ_ACTION = $java.cgcj_Yylex_zzUnpackAction();
    $java.cgcj_Yylex_ZZ_ROWMAP = $java.cgcj_Yylex_zzUnpackRowMap();
    var$1 = $rt_createIntArray(675);
    var$2 = var$1.data;
    var$2[0] = 2;
    var$2[1] = 2;
    var$2[2] = 3;
    var$2[3] = 4;
    var$2[4] = 2;
    var$2[5] = 2;
    var$2[6] = 2;
    var$2[7] = 5;
    var$2[8] = 2;
    var$2[9] = 6;
    var$2[10] = 2;
    var$2[11] = 2;
    var$2[12] = 7;
    var$2[13] = 8;
    var$2[14] = 2;
    var$2[15] = 9;
    var$2[16] = 2;
    var$2[17] = 2;
    var$2[18] = 2;
    var$2[19] = 2;
    var$2[20] = 2;
    var$2[21] = 10;
    var$2[22] = 11;
    var$2[23] = 12;
    var$2[24] = 13;
    var$2[25] = 14;
    var$2[26] = 15;
    var$2[27] = 16;
    var$2[28] = 16;
    var$2[29] = 16;
    var$2[30] = 16;
    var$2[31] = 16;
    var$2[32] = 16;
    var$2[33] = 16;
    var$2[34] = 16;
    var$2[35] = 17;
    var$2[36] = 18;
    var$2[37] = 16;
    var$2[38] = 16;
    var$2[39] = 16;
    var$2[40] = 16;
    var$2[41] = 16;
    var$2[42] = 16;
    var$2[43] = 16;
    var$2[44] = 16;
    var$2[45] = 16;
    var$2[46] = 16;
    var$2[47] = 16;
    var$2[48] = 16;
    var$2[49] = 16;
    var$2[50] = 16;
    var$2[51] = 16;
    var$2[52] = 16;
    var$2[53] = 16;
    var$2[54] = (-1);
    var$2[55] = (-1);
    var$2[56] = (-1);
    var$2[57] = (-1);
    var$2[58] = (-1);
    var$2[59] = (-1);
    var$2[60] = (-1);
    var$2[61] = (-1);
    var$2[62] = (-1);
    var$2[63] = (-1);
    var$2[64] = (-1);
    var$2[65] = (-1);
    var$2[66] = (-1);
    var$2[67] = (-1);
    var$2[68] = (-1);
    var$2[69] = (-1);
    var$2[70] = (-1);
    var$2[71] = (-1);
    var$2[72] = (-1);
    var$2[73] = (-1);
    var$2[74] = (-1);
    var$2[75] = (-1);
    var$2[76] = (-1);
    var$2[77] = (-1);
    var$2[78] = (-1);
    var$2[79] = (-1);
    var$2[80] = (-1);
    var$2[81] = (-1);
    var$2[82] = (-1);
    var$2[83] = (-1);
    var$2[84] = 4;
    var$2[85] = (-1);
    var$2[86] = (-1);
    var$2[87] = (-1);
    var$2[88] = (-1);
    var$2[89] = (-1);
    var$2[90] = (-1);
    var$2[91] = (-1);
    var$2[92] = (-1);
    var$2[93] = (-1);
    var$2[94] = (-1);
    var$2[95] = (-1);
    var$2[96] = (-1);
    var$2[97] = (-1);
    var$2[98] = (-1);
    var$2[99] = (-1);
    var$2[100] = (-1);
    var$2[101] = (-1);
    var$2[102] = (-1);
    var$2[103] = (-1);
    var$2[104] = (-1);
    var$2[105] = (-1);
    var$2[106] = (-1);
    var$2[107] = (-1);
    var$2[108] = (-1);
    var$2[109] = (-1);
    var$2[110] = (-1);
    var$2[111] = 4;
    var$2[112] = 19;
    var$2[113] = 20;
    var$2[114] = (-1);
    var$2[115] = (-1);
    var$2[116] = (-1);
    var$2[117] = (-1);
    var$2[118] = (-1);
    var$2[119] = (-1);
    var$2[120] = (-1);
    var$2[121] = (-1);
    var$2[122] = (-1);
    var$2[123] = (-1);
    var$2[124] = (-1);
    var$2[125] = 20;
    var$2[126] = (-1);
    var$2[127] = (-1);
    var$2[128] = (-1);
    var$2[129] = (-1);
    var$2[130] = (-1);
    var$2[131] = (-1);
    var$2[132] = (-1);
    var$2[133] = (-1);
    var$2[134] = (-1);
    var$2[135] = (-1);
    var$2[136] = (-1);
    var$2[137] = (-1);
    var$2[138] = (-1);
    var$2[139] = (-1);
    var$2[140] = (-1);
    var$2[141] = (-1);
    var$2[142] = 5;
    var$2[143] = (-1);
    var$2[144] = (-1);
    var$2[145] = (-1);
    var$2[146] = (-1);
    var$2[147] = (-1);
    var$2[148] = (-1);
    var$2[149] = (-1);
    var$2[150] = (-1);
    var$2[151] = (-1);
    var$2[152] = (-1);
    var$2[153] = (-1);
    var$2[154] = (-1);
    var$2[155] = (-1);
    var$2[156] = (-1);
    var$2[157] = (-1);
    var$2[158] = (-1);
    var$2[159] = (-1);
    var$2[160] = (-1);
    var$2[161] = (-1);
    var$2[162] = (-1);
    var$2[163] = (-1);
    var$2[164] = (-1);
    var$2[165] = (-1);
    var$2[166] = (-1);
    var$2[167] = (-1);
    var$2[168] = (-1);
    var$2[169] = (-1);
    var$2[170] = (-1);
    var$2[171] = (-1);
    var$2[172] = (-1);
    var$2[173] = (-1);
    var$2[174] = (-1);
    var$2[175] = (-1);
    var$2[176] = (-1);
    var$2[177] = (-1);
    var$2[178] = (-1);
    var$2[179] = (-1);
    var$2[180] = 21;
    var$2[181] = (-1);
    var$2[182] = (-1);
    var$2[183] = (-1);
    var$2[184] = (-1);
    var$2[185] = (-1);
    var$2[186] = (-1);
    var$2[187] = (-1);
    var$2[188] = (-1);
    var$2[189] = (-1);
    var$2[190] = (-1);
    var$2[191] = (-1);
    var$2[192] = (-1);
    var$2[193] = (-1);
    var$2[194] = (-1);
    var$2[195] = (-1);
    var$2[196] = (-1);
    var$2[197] = (-1);
    var$2[198] = (-1);
    var$2[199] = (-1);
    var$2[200] = (-1);
    var$2[201] = (-1);
    var$2[202] = (-1);
    var$2[203] = (-1);
    var$2[204] = (-1);
    var$2[205] = 22;
    var$2[206] = (-1);
    var$2[207] = (-1);
    var$2[208] = (-1);
    var$2[209] = (-1);
    var$2[210] = (-1);
    var$2[211] = (-1);
    var$2[212] = (-1);
    var$2[213] = (-1);
    var$2[214] = (-1);
    var$2[215] = (-1);
    var$2[216] = (-1);
    var$2[217] = (-1);
    var$2[218] = (-1);
    var$2[219] = (-1);
    var$2[220] = (-1);
    var$2[221] = (-1);
    var$2[222] = (-1);
    var$2[223] = (-1);
    var$2[224] = (-1);
    var$2[225] = (-1);
    var$2[226] = (-1);
    var$2[227] = (-1);
    var$2[228] = (-1);
    var$2[229] = (-1);
    var$2[230] = 23;
    var$2[231] = (-1);
    var$2[232] = (-1);
    var$2[233] = (-1);
    var$2[234] = (-1);
    var$2[235] = (-1);
    var$2[236] = (-1);
    var$2[237] = (-1);
    var$2[238] = (-1);
    var$2[239] = (-1);
    var$2[240] = (-1);
    var$2[241] = (-1);
    var$2[242] = (-1);
    var$2[243] = 16;
    var$2[244] = 16;
    var$2[245] = 16;
    var$2[246] = 16;
    var$2[247] = 16;
    var$2[248] = 16;
    var$2[249] = 16;
    var$2[250] = 16;
    var$2[251] = (-1);
    var$2[252] = (-1);
    var$2[253] = 16;
    var$2[254] = 16;
    var$2[255] = 16;
    var$2[256] = 16;
    var$2[257] = 16;
    var$2[258] = 16;
    var$2[259] = 16;
    var$2[260] = 16;
    var$2[261] = 16;
    var$2[262] = 16;
    var$2[263] = 16;
    var$2[264] = 16;
    var$2[265] = 16;
    var$2[266] = 16;
    var$2[267] = 16;
    var$2[268] = 16;
    var$2[269] = 16;
    var$2[270] = (-1);
    var$2[271] = (-1);
    var$2[272] = (-1);
    var$2[273] = (-1);
    var$2[274] = (-1);
    var$2[275] = (-1);
    var$2[276] = (-1);
    var$2[277] = (-1);
    var$2[278] = 24;
    var$2[279] = 25;
    var$2[280] = 26;
    var$2[281] = 27;
    var$2[282] = 28;
    var$2[283] = 29;
    var$2[284] = 30;
    var$2[285] = 31;
    var$2[286] = 32;
    var$2[287] = (-1);
    var$2[288] = (-1);
    var$2[289] = (-1);
    var$2[290] = (-1);
    var$2[291] = (-1);
    var$2[292] = (-1);
    var$2[293] = (-1);
    var$2[294] = (-1);
    var$2[295] = (-1);
    var$2[296] = (-1);
    var$2[297] = (-1);
    var$2[298] = (-1);
    var$2[299] = (-1);
    var$2[300] = 33;
    var$2[301] = (-1);
    var$2[302] = (-1);
    var$2[303] = (-1);
    var$2[304] = (-1);
    var$2[305] = (-1);
    var$2[306] = (-1);
    var$2[307] = (-1);
    var$2[308] = (-1);
    var$2[309] = (-1);
    var$2[310] = (-1);
    var$2[311] = (-1);
    var$2[312] = (-1);
    var$2[313] = (-1);
    var$2[314] = (-1);
    var$2[315] = (-1);
    var$2[316] = (-1);
    var$2[317] = (-1);
    var$2[318] = (-1);
    var$2[319] = (-1);
    var$2[320] = (-1);
    var$2[321] = (-1);
    var$2[322] = (-1);
    var$2[323] = (-1);
    var$2[324] = (-1);
    var$2[325] = (-1);
    var$2[326] = 34;
    var$2[327] = 35;
    var$2[328] = (-1);
    var$2[329] = (-1);
    var$2[330] = 34;
    var$2[331] = (-1);
    var$2[332] = (-1);
    var$2[333] = (-1);
    var$2[334] = (-1);
    var$2[335] = (-1);
    var$2[336] = (-1);
    var$2[337] = (-1);
    var$2[338] = (-1);
    var$2[339] = (-1);
    var$2[340] = (-1);
    var$2[341] = (-1);
    var$2[342] = (-1);
    var$2[343] = (-1);
    var$2[344] = (-1);
    var$2[345] = (-1);
    var$2[346] = (-1);
    var$2[347] = (-1);
    var$2[348] = (-1);
    var$2[349] = (-1);
    var$2[350] = (-1);
    var$2[351] = (-1);
    var$2[352] = (-1);
    var$2[353] = (-1);
    var$2[354] = (-1);
    var$2[355] = (-1);
    var$2[356] = (-1);
    var$2[357] = (-1);
    var$2[358] = (-1);
    var$2[359] = (-1);
    var$2[360] = (-1);
    var$2[361] = (-1);
    var$2[362] = (-1);
    var$2[363] = (-1);
    var$2[364] = (-1);
    var$2[365] = (-1);
    var$2[366] = (-1);
    var$2[367] = (-1);
    var$2[368] = (-1);
    var$2[369] = (-1);
    var$2[370] = 36;
    var$2[371] = (-1);
    var$2[372] = (-1);
    var$2[373] = (-1);
    var$2[374] = (-1);
    var$2[375] = (-1);
    var$2[376] = (-1);
    var$2[377] = (-1);
    var$2[378] = (-1);
    var$2[379] = (-1);
    var$2[380] = (-1);
    var$2[381] = (-1);
    var$2[382] = (-1);
    var$2[383] = (-1);
    var$2[384] = (-1);
    var$2[385] = (-1);
    var$2[386] = (-1);
    var$2[387] = (-1);
    var$2[388] = (-1);
    var$2[389] = (-1);
    var$2[390] = (-1);
    var$2[391] = (-1);
    var$2[392] = (-1);
    var$2[393] = (-1);
    var$2[394] = (-1);
    var$2[395] = (-1);
    var$2[396] = (-1);
    var$2[397] = 37;
    var$2[398] = (-1);
    var$2[399] = (-1);
    var$2[400] = (-1);
    var$2[401] = (-1);
    var$2[402] = (-1);
    var$2[403] = (-1);
    var$2[404] = (-1);
    var$2[405] = (-1);
    var$2[406] = (-1);
    var$2[407] = (-1);
    var$2[408] = (-1);
    var$2[409] = (-1);
    var$2[410] = (-1);
    var$2[411] = (-1);
    var$2[412] = (-1);
    var$2[413] = (-1);
    var$2[414] = (-1);
    var$2[415] = (-1);
    var$2[416] = (-1);
    var$2[417] = (-1);
    var$2[418] = (-1);
    var$2[419] = (-1);
    var$2[420] = (-1);
    var$2[421] = 38;
    var$2[422] = (-1);
    var$2[423] = (-1);
    var$2[424] = (-1);
    var$2[425] = (-1);
    var$2[426] = (-1);
    var$2[427] = (-1);
    var$2[428] = (-1);
    var$2[429] = (-1);
    var$2[430] = (-1);
    var$2[431] = (-1);
    var$2[432] = (-1);
    var$2[433] = 39;
    var$2[434] = (-1);
    var$2[435] = 39;
    var$2[436] = (-1);
    var$2[437] = 39;
    var$2[438] = (-1);
    var$2[439] = (-1);
    var$2[440] = (-1);
    var$2[441] = (-1);
    var$2[442] = (-1);
    var$2[443] = 39;
    var$2[444] = 39;
    var$2[445] = (-1);
    var$2[446] = (-1);
    var$2[447] = (-1);
    var$2[448] = (-1);
    var$2[449] = 39;
    var$2[450] = 39;
    var$2[451] = (-1);
    var$2[452] = (-1);
    var$2[453] = (-1);
    var$2[454] = (-1);
    var$2[455] = (-1);
    var$2[456] = (-1);
    var$2[457] = (-1);
    var$2[458] = (-1);
    var$2[459] = (-1);
    var$2[460] = (-1);
    var$2[461] = (-1);
    var$2[462] = 33;
    var$2[463] = (-1);
    var$2[464] = 20;
    var$2[465] = (-1);
    var$2[466] = (-1);
    var$2[467] = (-1);
    var$2[468] = (-1);
    var$2[469] = (-1);
    var$2[470] = (-1);
    var$2[471] = (-1);
    var$2[472] = (-1);
    var$2[473] = (-1);
    var$2[474] = (-1);
    var$2[475] = (-1);
    var$2[476] = 20;
    var$2[477] = (-1);
    var$2[478] = (-1);
    var$2[479] = (-1);
    var$2[480] = (-1);
    var$2[481] = (-1);
    var$2[482] = (-1);
    var$2[483] = (-1);
    var$2[484] = (-1);
    var$2[485] = (-1);
    var$2[486] = (-1);
    var$2[487] = (-1);
    var$2[488] = (-1);
    var$2[489] = 35;
    var$2[490] = (-1);
    var$2[491] = (-1);
    var$2[492] = (-1);
    var$2[493] = (-1);
    var$2[494] = (-1);
    var$2[495] = (-1);
    var$2[496] = (-1);
    var$2[497] = (-1);
    var$2[498] = (-1);
    var$2[499] = (-1);
    var$2[500] = (-1);
    var$2[501] = (-1);
    var$2[502] = (-1);
    var$2[503] = (-1);
    var$2[504] = (-1);
    var$2[505] = (-1);
    var$2[506] = (-1);
    var$2[507] = (-1);
    var$2[508] = (-1);
    var$2[509] = (-1);
    var$2[510] = (-1);
    var$2[511] = (-1);
    var$2[512] = (-1);
    var$2[513] = (-1);
    var$2[514] = (-1);
    var$2[515] = (-1);
    var$2[516] = (-1);
    var$2[517] = (-1);
    var$2[518] = (-1);
    var$2[519] = (-1);
    var$2[520] = (-1);
    var$2[521] = (-1);
    var$2[522] = (-1);
    var$2[523] = (-1);
    var$2[524] = (-1);
    var$2[525] = (-1);
    var$2[526] = (-1);
    var$2[527] = (-1);
    var$2[528] = (-1);
    var$2[529] = (-1);
    var$2[530] = (-1);
    var$2[531] = (-1);
    var$2[532] = (-1);
    var$2[533] = 38;
    var$2[534] = (-1);
    var$2[535] = (-1);
    var$2[536] = (-1);
    var$2[537] = (-1);
    var$2[538] = (-1);
    var$2[539] = (-1);
    var$2[540] = (-1);
    var$2[541] = (-1);
    var$2[542] = (-1);
    var$2[543] = (-1);
    var$2[544] = (-1);
    var$2[545] = (-1);
    var$2[546] = (-1);
    var$2[547] = (-1);
    var$2[548] = (-1);
    var$2[549] = (-1);
    var$2[550] = (-1);
    var$2[551] = (-1);
    var$2[552] = (-1);
    var$2[553] = (-1);
    var$2[554] = (-1);
    var$2[555] = (-1);
    var$2[556] = (-1);
    var$2[557] = (-1);
    var$2[558] = (-1);
    var$2[559] = 40;
    var$2[560] = (-1);
    var$2[561] = (-1);
    var$2[562] = (-1);
    var$2[563] = (-1);
    var$2[564] = (-1);
    var$2[565] = (-1);
    var$2[566] = (-1);
    var$2[567] = (-1);
    var$2[568] = (-1);
    var$2[569] = (-1);
    var$2[570] = (-1);
    var$2[571] = (-1);
    var$2[572] = (-1);
    var$2[573] = (-1);
    var$2[574] = (-1);
    var$2[575] = (-1);
    var$2[576] = (-1);
    var$2[577] = (-1);
    var$2[578] = (-1);
    var$2[579] = (-1);
    var$2[580] = (-1);
    var$2[581] = (-1);
    var$2[582] = (-1);
    var$2[583] = (-1);
    var$2[584] = 41;
    var$2[585] = (-1);
    var$2[586] = (-1);
    var$2[587] = (-1);
    var$2[588] = (-1);
    var$2[589] = (-1);
    var$2[590] = (-1);
    var$2[591] = (-1);
    var$2[592] = (-1);
    var$2[593] = (-1);
    var$2[594] = (-1);
    var$2[595] = 42;
    var$2[596] = (-1);
    var$2[597] = 42;
    var$2[598] = (-1);
    var$2[599] = 42;
    var$2[600] = (-1);
    var$2[601] = (-1);
    var$2[602] = (-1);
    var$2[603] = (-1);
    var$2[604] = (-1);
    var$2[605] = 42;
    var$2[606] = 42;
    var$2[607] = (-1);
    var$2[608] = (-1);
    var$2[609] = (-1);
    var$2[610] = (-1);
    var$2[611] = 42;
    var$2[612] = 42;
    var$2[613] = (-1);
    var$2[614] = (-1);
    var$2[615] = (-1);
    var$2[616] = (-1);
    var$2[617] = (-1);
    var$2[618] = (-1);
    var$2[619] = (-1);
    var$2[620] = (-1);
    var$2[621] = (-1);
    var$2[622] = 43;
    var$2[623] = (-1);
    var$2[624] = 43;
    var$2[625] = (-1);
    var$2[626] = 43;
    var$2[627] = (-1);
    var$2[628] = (-1);
    var$2[629] = (-1);
    var$2[630] = (-1);
    var$2[631] = (-1);
    var$2[632] = 43;
    var$2[633] = 43;
    var$2[634] = (-1);
    var$2[635] = (-1);
    var$2[636] = (-1);
    var$2[637] = (-1);
    var$2[638] = 43;
    var$2[639] = 43;
    var$2[640] = (-1);
    var$2[641] = (-1);
    var$2[642] = (-1);
    var$2[643] = (-1);
    var$2[644] = (-1);
    var$2[645] = (-1);
    var$2[646] = (-1);
    var$2[647] = (-1);
    var$2[648] = (-1);
    var$2[649] = 44;
    var$2[650] = (-1);
    var$2[651] = 44;
    var$2[652] = (-1);
    var$2[653] = 44;
    var$2[654] = (-1);
    var$2[655] = (-1);
    var$2[656] = (-1);
    var$2[657] = (-1);
    var$2[658] = (-1);
    var$2[659] = 44;
    var$2[660] = 44;
    var$2[661] = (-1);
    var$2[662] = (-1);
    var$2[663] = (-1);
    var$2[664] = (-1);
    var$2[665] = 44;
    var$2[666] = 44;
    var$2[667] = (-1);
    var$2[668] = (-1);
    var$2[669] = (-1);
    var$2[670] = (-1);
    var$2[671] = (-1);
    var$2[672] = (-1);
    var$2[673] = (-1);
    var$2[674] = (-1);
    $java.cgcj_Yylex_ZZ_TRANS = var$1;
    var$1 = $rt_createArray(jl_String, 3);
    var$2 = var$1.data;
    var$2[0] = $rt_s(1411);
    var$2[1] = $rt_s(1412);
    var$2[2] = $rt_s(1413);
    $java.cgcj_Yylex_ZZ_ERROR_MSG = var$1;
    $java.cgcj_Yylex_ZZ_ATTRIBUTE = $java.cgcj_Yylex_zzUnpackAttribute();
};
function okttsg_EmissionBloomTest$testMain$1$1() {
    var a = this; kji_Lambda.call(a);
    a.$$control10 = null;
    a.$$model8 = null;
    a.$$sceneBuffer0 = null;
    a.$$thresholdBuffer = null;
    a.$$threshold = null;
    a.$$screenQuad10 = null;
    a.$$bloom0 = null;
}
function okttsg_EmissionBloomTest$testMain$1$1__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new okttsg_EmissionBloomTest$testMain$1$1();
    $java.okttsg_EmissionBloomTest$testMain$1$1__init_(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
$java.okttsg_EmissionBloomTest$testMain$1$1_invoke = function(var$0) {
    $java.okttsg_EmissionBloomTest$testMain$1$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.okttsg_EmissionBloomTest$testMain$1$1_invoke0 = function($this) {
    var var$1;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$control10;
    okt_APP_$callClinit();
    var$1.$update(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    oktt_GLTFModel_update$default($this.$$model8, 0.0, 1, null);
    oktt_SimpleFrameBuffer_render($this.$$sceneBuffer0, $java.okttsg_EmissionBloomTest$testMain$1$1$1__init_($this));
    oktt_SimpleFrameBuffer_render($this.$$thresholdBuffer, $java.okttsg_EmissionBloomTest$testMain$1$1$2__init_($this));
    oktsp_Bloom_render($this.$$bloom0, $this.$$screenQuad10, oktt_SimpleFrameBuffer_getTexture0($this.$$sceneBuffer0), oktt_SimpleFrameBuffer_getTexture0($this.$$thresholdBuffer), null);
};
$java.okttsg_EmissionBloomTest$testMain$1$1__init_ = function(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    var$0.$$control10 = var$1;
    var$0.$$model8 = var$2;
    var$0.$$sceneBuffer0 = var$3;
    var$0.$$thresholdBuffer = var$4;
    var$0.$$threshold = var$5;
    var$0.$$screenQuad10 = var$6;
    var$0.$$bloom0 = var$7;
    kji_Lambda__init_0(var$0, 0);
};
function oktsg_GLSL() {
    jl_Object.call(this);
}
$java.oktsg_GLSL_nodes = null;
$java.oktsg_GLSL_zeroFloat = null;
$java.oktsg_GLSL_oneFloat = null;
$java.oktsg_GLSL_defaultNormal = null;
var oktsg_GLSL_INSTANCE = null;
function oktsg_GLSL_$callClinit() {
    oktsg_GLSL_$callClinit = $rt_eraseClinit(oktsg_GLSL);
    $java.oktsg_GLSL__clinit_();
}
$java.oktsg_GLSL__init_ = function() {
    var var_0 = new oktsg_GLSL();
    oktsg_GLSL__init_(var_0);
    return var_0;
};
function oktsg_GLSL_getZeroFloat($this) {
    return $java.oktsg_GLSL_zeroFloat;
}
function oktsg_GLSL_getOneFloat($this) {
    return $java.oktsg_GLSL_oneFloat;
}
function oktsg_GLSL_getDefaultNormal($this) {
    return $java.oktsg_GLSL_defaultNormal;
}
function oktsg_GLSL__init_($this) {
    oktsg_GLSL_$callClinit();
    jl_Object__init_0($this);
}
$java.oktsg_GLSL__clinit_ = function() {
    var var$1;
    oktsg_GLSL_INSTANCE = $java.oktsg_GLSL__init_();
    $java.oktsg_GLSL_nodes = ju_HashMap__init_();
    $java.oktsg_GLSL_zeroFloat = oktsg_GLSLFloatInline__init_1(0.0, null, 2, null);
    $java.oktsg_GLSL_oneFloat = oktsg_GLSLFloatInline__init_1(1.0, null, 2, null);
    $java.oktsg_GLSL_defaultNormal = oktsg_GLSLVec3Inline__init_1(0.5, 0.5, 1.0, null, 8, null);
    var$1 = $java.oktsg_GLSL_nodes;
    $java.oktsg_GLSL$1_$callClinit();
    var$1.$put3($rt_s(1414), $java.oktsg_GLSL$1_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    $java.oktsg_GLSL$2_$callClinit();
    var$1.$put3($rt_s(1415), $java.oktsg_GLSL$2_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    $java.oktsg_GLSL$3_$callClinit();
    var$1.$put3($rt_s(333), $java.oktsg_GLSL$3_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    $java.oktsg_GLSL$4_$callClinit();
    var$1.$put3($rt_s(1416), $java.oktsg_GLSL$4_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    $java.oktsg_GLSL$5_$callClinit();
    var$1.$put3($rt_s(983), $java.oktsg_GLSL$5_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    $java.oktsg_GLSL$6_$callClinit();
    var$1.$put3($rt_s(861), $java.oktsg_GLSL$6_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    $java.oktsg_GLSL$7_$callClinit();
    var$1.$put3($rt_s(525), $java.oktsg_GLSL$7_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    $java.oktsg_GLSL$8_$callClinit();
    var$1.$put3($rt_s(1417), $java.oktsg_GLSL$8_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    $java.oktsg_GLSL$9_$callClinit();
    var$1.$put3($rt_s(1418), $java.oktsg_GLSL$9_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    oktsg_GLSL$10_$callClinit();
    var$1.$put3($rt_s(1419), oktsg_GLSL$10_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    oktsg_GLSL$11_$callClinit();
    var$1.$put3($rt_s(1420), oktsg_GLSL$11_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    oktsg_GLSL$12_$callClinit();
    var$1.$put3($rt_s(1421), oktsg_GLSL$12_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    oktsg_GLSL$13_$callClinit();
    var$1.$put3($rt_s(324), oktsg_GLSL$13_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    oktsg_GLSL$14_$callClinit();
    var$1.$put3($rt_s(1422), oktsg_GLSL$14_INSTANCE);
    var$1 = $java.oktsg_GLSL_nodes;
    oktsg_GLSL$15_$callClinit();
    var$1.$put3($rt_s(1160), oktsg_GLSL$15_INSTANCE);
};
function oktt_TvmGL$UniformLocationWrap() {
    var a = this; oktt_TvmGL$GLObject.call(a);
    a.$id1 = 0;
    a.$gl9 = null;
}
function oktt_TvmGL$UniformLocationWrap__init_(var_0, var_1) {
    var var_2 = new oktt_TvmGL$UniformLocationWrap();
    $java.oktt_TvmGL$UniformLocationWrap__init_(var_2, var_0, var_1);
    return var_2;
}
function oktt_TvmGL$UniformLocationWrap_getId($this) {
    return $this.$id1;
}
function oktt_TvmGL$UniformLocationWrap_getGl($this) {
    return $this.$gl9;
}
$java.oktt_TvmGL$UniformLocationWrap_getGl = function(var$0) {
    return oktt_TvmGL$UniformLocationWrap_getGl(var$0);
};
$java.oktt_TvmGL$UniformLocationWrap__init_ = function($this, $id, $gl) {
    kji_Intrinsics_checkParameterIsNotNull($gl, $rt_s(814));
    oktt_TvmGL$GLObject__init_0($this);
    $this.$id1 = $id;
    $this.$gl9 = $gl;
};
function oktm_IScreenQuad$DefaultImpls() {
    jl_Object.call(this);
}
$java.oktm_IScreenQuad$DefaultImpls_renderBase = function($$this, $shader, $clearMask, $set) {
    if ($clearMask !== null) {
        oktg_GL_$callClinit();
        oktg_GL_glClear(oktg_GL_INSTANCE, $clearMask.$intValue());
    }
    $shader.$bind();
    $set.$invoke1($$this);
    oktm_IMesh$DefaultImpls_render$default($$this.$getMesh(), $shader, 0, 0, 0, 0, 30, null);
};
function oktm_IScreenQuad$DefaultImpls_render($$this, $shader, $out, $clearMask, $set) {
    kji_Intrinsics_checkParameterIsNotNull($shader, $rt_s(1074));
    kji_Intrinsics_checkParameterIsNotNull($set, $rt_s(1281));
    if ($out === null)
        $java.oktm_IScreenQuad$DefaultImpls_renderBase($$this, $shader, $clearMask, $set);
    else
        $out.$render($java.oktm_IScreenQuad$render$2__init_($$this, $shader, $clearMask, $set));
}
function oktm_IScreenQuad$DefaultImpls_render$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$7 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1237)));
    if (var$6 & 2)
        var$3 = null;
    if (var$6 & 4)
        var$4 = jl_Integer_valueOf(16640);
    if (var$6 & 8) {
        $java.oktm_IScreenQuad$render$1_$callClinit();
        var$5 = $java.oktm_IScreenQuad$render$1_INSTANCE;
    }
    var$1.$render10(var$2, var$3, var$4, var$5);
}
$java.oktm_IScreenQuad$DefaultImpls_access$renderBase = function($$this, $shader, $clearMask, $set) {
    $java.oktm_IScreenQuad$DefaultImpls_renderBase($$this, $shader, $clearMask, $set);
};
function oktgg_GLTFSparse$Indices$read$1() {
    kji_Lambda.call(this);
    this.$this$0229 = null;
}
$java.oktgg_GLTFSparse$Indices$read$1__init_ = function(var_0) {
    var var_1 = new oktgg_GLTFSparse$Indices$read$1();
    $java.oktgg_GLTFSparse$Indices$read$1__init_0(var_1, var_0);
    return var_1;
};
$java.oktgg_GLTFSparse$Indices$read$1_invoke = function(var$0, var$1) {
    $java.oktgg_GLTFSparse$Indices$read$1_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTFSparse$Indices$read$1_invoke0 = function($this, $it) {
    $java.oktgg_GLTFSparse$Indices_setByteOffset($this.$this$0229, $it);
};
$java.oktgg_GLTFSparse$Indices$read$1__init_0 = function(var$0, var$1) {
    var$0.$this$0229 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function jur_Pattern() {
    var a = this; jl_Object.call(a);
    a.$lexemes = null;
    a.$flags3 = 0;
    a.$backRefs = null;
    a.$needsBackRefReplacement = 0;
    a.$globalGroupIndex = 0;
    a.$compCount = 0;
    a.$consCount = 0;
    a.$start5 = null;
}
$java.jur_Pattern__init_ = function() {
    var var_0 = new jur_Pattern();
    jur_Pattern__init_(var_0);
    return var_0;
};
function jur_Pattern_matcher($this, $input) {
    return $java.jur_Matcher__init_($this, $input);
}
$java.jur_Pattern_pattern = function($this) {
    return $this.$lexemes.$toString();
};
$java.jur_Pattern_compile = function($pattern, $flags) {
    if ($pattern === null)
        $rt_throw(jl_NullPointerException__init_0($rt_s(1423)));
    if ($flags && ($flags | 255) != 255)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(6)));
    jur_AbstractSet_$callClinit();
    jur_AbstractSet_counter = 1;
    return $java.jur_Pattern_compileImpl($java.jur_Pattern__init_(), $pattern, $flags);
};
$java.jur_Pattern_compileImpl = function($this, $pattern, $flags) {
    $this.$lexemes = jur_Lexer__init_($pattern, $flags);
    $this.$flags3 = $flags;
    $this.$start5 = $java.jur_Pattern_processExpression($this, (-1), $this.$flags3, null);
    if ($this.$lexemes.$isEmpty()) {
        $java.jur_Pattern_finalizeCompile($this);
        return $this;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
};
$java.jur_Pattern_processAlternations = function($this, $last) {
    var $auxRange, var$3, $rangeSet;
    $auxRange = jur_CharClass__init_1($java.jur_Pattern_hasFlag($this, 2), $java.jur_Pattern_hasFlag($this, 64));
    while (!$this.$lexemes.$isEmpty()) {
        var$3 = $this.$lexemes;
        if (!var$3.$isLetter0())
            break;
        var$3 = $this.$lexemes;
        if (var$3.$lookAhead0() && $this.$lexemes.$lookAhead0() != (-536870788)) {
            var$3 = $this.$lexemes;
            if (var$3.$lookAhead0() != (-536870871))
                break;
        }
        $auxRange.$add($this.$lexemes.$next10());
        if ($this.$lexemes.$peek() != (-536870788))
            continue;
        $this.$lexemes.$next10();
    }
    $rangeSet = $java.jur_Pattern_processRangeSet($this, $auxRange);
    $rangeSet.$setNext($last);
    return $rangeSet;
};
$java.jur_Pattern_processExpression = function($this, $ch, $newFlags, $last) {
    var $children, $saveFlags, $saveChangedFlags, $fSet, var$8, $child;
    $children = ju_ArrayList__init_();
    $saveFlags = $this.$flags3;
    $saveChangedFlags = 0;
    if ($newFlags != $this.$flags3)
        $this.$flags3 = $newFlags;
    a: {
        switch ($ch) {
            case -1073741784:
                $fSet = new jur_NonCapFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_NonCapFSet__init_0($fSet, var$8);
                break a;
            case -536870872:
            case -268435416:
                break;
            case -134217688:
            case -67108824:
                $fSet = new jur_BehindFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_BehindFSet__init_0($fSet, var$8);
                break a;
            case -33554392:
                $fSet = new jur_AtomicFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_AtomicFSet__init_0($fSet, var$8);
                break a;
            default:
                $this.$globalGroupIndex = $this.$globalGroupIndex + 1 | 0;
                if ($last !== null)
                    $fSet = jur_FSet__init_($this.$globalGroupIndex);
                else {
                    $fSet = jur_FinalSet__init_();
                    $saveChangedFlags = 1;
                }
                if ($this.$globalGroupIndex <= (-1))
                    break a;
                if ($this.$globalGroupIndex >= 10)
                    break a;
                $this.$backRefs.data[$this.$globalGroupIndex] = $fSet;
                break a;
        }
        $fSet = jur_AheadFSet__init_();
    }
    while (true) {
        if ($this.$lexemes.$isLetter0() && $this.$lexemes.$lookAhead0() == (-536870788))
            $child = $java.jur_Pattern_processAlternations($this, $fSet);
        else if ($this.$lexemes.$peek() == (-536870788)) {
            $child = jur_EmptySet__init_($fSet);
            $this.$lexemes.$next10();
        } else {
            $child = $java.jur_Pattern_processSubExpression($this, $fSet);
            if ($this.$lexemes.$peek() == (-536870788))
                $this.$lexemes.$next10();
        }
        if ($child !== null)
            $children.$add1($child);
        if ($this.$lexemes.$isEmpty())
            break;
        if ($this.$lexemes.$peek() == (-536870871))
            break;
    }
    if ($this.$lexemes.$back() == (-536870788))
        $children.$add1(jur_EmptySet__init_($fSet));
    if ($this.$flags3 != $saveFlags && !$saveChangedFlags) {
        $this.$flags3 = $saveFlags;
        $this.$lexemes.$restoreFlags($this.$flags3);
    }
    switch ($ch) {
        case -1073741784:
            break;
        case -536870872:
            return jur_PositiveLookAhead__init_($children, $fSet);
        case -268435416:
            return jur_NegativeLookAhead__init_($children, $fSet);
        case -134217688:
            return jur_PositiveLookBehind__init_($children, $fSet);
        case -67108824:
            return jur_NegativeLookBehind__init_($children, $fSet);
        case -33554392:
            return jur_AtomicJointSet__init_($children, $fSet);
        default:
            switch ($children.$size()) {
                case 0:
                    break;
                case 1:
                    return jur_SingleSet__init_($children.$get1(0), $fSet);
                default:
                    return jur_JointSet__init_1($children, $fSet);
            }
            return jur_EmptySet__init_($fSet);
    }
    return jur_NonCapJointSet__init_1($children, $fSet);
};
$java.jur_Pattern_processSequence = function($this) {
    var $substring, var$2, $ch;
    $substring = jl_StringBuffer__init_1();
    while (!$this.$lexemes.$isEmpty()) {
        var$2 = $this.$lexemes;
        if (!var$2.$isLetter0())
            break;
        var$2 = $this.$lexemes;
        if (var$2.$isHighSurrogate1())
            break;
        var$2 = $this.$lexemes;
        if (var$2.$isLowSurrogate1())
            break;
        var$2 = $this.$lexemes;
        if (!(!var$2.$isNextSpecial() && !$this.$lexemes.$lookAhead0())) {
            var$2 = $this.$lexemes;
            if (!(!var$2.$isNextSpecial() && jur_Lexer_isLetter($this.$lexemes.$lookAhead0()))) {
                var$2 = $this.$lexemes;
                if (var$2.$lookAhead0() != (-536870871)) {
                    var$2 = $this.$lexemes;
                    if ((var$2.$lookAhead0() & (-2147418113)) != (-2147483608)) {
                        var$2 = $this.$lexemes;
                        if (var$2.$lookAhead0() != (-536870788)) {
                            var$2 = $this.$lexemes;
                            if (var$2.$lookAhead0() != (-536870876))
                                break;
                        }
                    }
                }
            }
        }
        $ch = $this.$lexemes.$next10();
        if (!jl_Character_isSupplementaryCodePoint($ch))
            $substring.$append25($ch & 65535);
        else
            $substring.$append26(jl_Character_toChars($ch));
    }
    if (!$java.jur_Pattern_hasFlag($this, 2))
        return jur_SequenceSet__init_($substring);
    if ($java.jur_Pattern_hasFlag($this, 64))
        return jur_UCISequenceSet__init_($substring);
    return jur_CISequenceSet__init_($substring);
};
$java.jur_Pattern_processDecomposedChar = function($this) {
    var $codePoints, $readCodePoints, $curSymb, $curSymbIndex, var$5, $codePointsHangul, var$7, var$8, var$9, var$10;
    $codePoints = $rt_createIntArray(4);
    $readCodePoints = 0;
    $curSymb = (-1);
    $curSymbIndex = (-1);
    if (!$this.$lexemes.$isEmpty() && $this.$lexemes.$isLetter0()) {
        var$5 = $codePoints.data;
        $curSymb = $this.$lexemes.$next10();
        var$5[$readCodePoints] = $curSymb;
        $curSymbIndex = $curSymb - 4352 | 0;
    }
    if ($curSymbIndex >= 0 && $curSymbIndex < 19) {
        $codePointsHangul = $rt_createCharArray(3);
        var$5 = $codePointsHangul.data;
        var$5[$readCodePoints] = $curSymb & 65535;
        var$7 = $this.$lexemes.$peek();
        var$8 = var$7 - 4449 | 0;
        if (var$8 >= 0 && var$8 < 21) {
            var$5[1] = var$7 & 65535;
            $this.$lexemes.$next10();
            var$9 = $this.$lexemes.$peek();
            var$7 = var$9 - 4519 | 0;
            if (var$7 >= 0 && var$7 < 28) {
                var$5[2] = var$9 & 65535;
                $this.$lexemes.$next10();
                return jur_HangulDecomposedCharSet__init_($codePointsHangul, 3);
            }
            return jur_HangulDecomposedCharSet__init_($codePointsHangul, 2);
        }
        if (!$java.jur_Pattern_hasFlag($this, 2))
            return jur_CharSet__init_(var$5[0]);
        if ($java.jur_Pattern_hasFlag($this, 64))
            return jur_UCICharSet__init_(var$5[0]);
        return jur_CICharSet__init_(var$5[0]);
    }
    var$10 = 1;
    while (var$10 < 4 && !$this.$lexemes.$isEmpty() && $this.$lexemes.$isLetter0()) {
        var$5 = $codePoints.data;
        var$9 = var$10 + 1 | 0;
        var$5[var$10] = $this.$lexemes.$next10();
        var$10 = var$9;
    }
    if (var$10 == 1) {
        var$5 = $codePoints.data;
        if (!jur_Lexer_hasSingleCodepointDecomposition(var$5[0]))
            return $java.jur_Pattern_processCharSet($this, var$5[0]);
    }
    if (!$java.jur_Pattern_hasFlag($this, 2))
        return jur_DecomposedCharSet__init_($codePoints, var$10);
    if ($java.jur_Pattern_hasFlag($this, 64))
        return jur_UCIDecomposedCharSet__init_($codePoints, var$10);
    return jur_CIDecomposedCharSet__init_($codePoints, var$10);
};
$java.jur_Pattern_processSubExpression = function($this, $last) {
    var $cur, $term, var$4, $next;
    if ($this.$lexemes.$isLetter0() && !$this.$lexemes.$isNextSpecial() && jur_Lexer_isLetter($this.$lexemes.$lookAhead0())) {
        if (!$java.jur_Pattern_hasFlag($this, 128)) {
            if (!$this.$lexemes.$isHighSurrogate1() && !$this.$lexemes.$isLowSurrogate1())
                $cur = $java.jur_Pattern_processSequence($this);
            else {
                $term = $java.jur_Pattern_processTerminal($this, $last);
                $cur = $java.jur_Pattern_processQuantifier($this, $last, $term);
            }
        } else {
            $cur = $java.jur_Pattern_processDecomposedChar($this);
            if (!$this.$lexemes.$isEmpty()) {
                var$4 = $this.$lexemes;
                if (!(var$4.$peek() == (-536870871) && !($last instanceof jur_FinalSet))) {
                    var$4 = $this.$lexemes;
                    if (var$4.$peek() != (-536870788) && !$this.$lexemes.$isLetter0())
                        $cur = $java.jur_Pattern_processQuantifier($this, $last, $cur);
                }
            }
        }
    } else if ($this.$lexemes.$peek() != (-536870871)) {
        $term = $java.jur_Pattern_processTerminal($this, $last);
        $cur = $java.jur_Pattern_processQuantifier($this, $last, $term);
    } else {
        if ($last instanceof jur_FinalSet)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
        $cur = jur_EmptySet__init_($last);
    }
    a: {
        if (!$this.$lexemes.$isEmpty()) {
            var$4 = $this.$lexemes;
            if (!(var$4.$peek() == (-536870871) && !($last instanceof jur_FinalSet))) {
                var$4 = $this.$lexemes;
                if (var$4.$peek() != (-536870788)) {
                    $next = $java.jur_Pattern_processSubExpression($this, $last);
                    if ($cur instanceof jur_LeafQuantifierSet && !($cur instanceof jur_CompositeQuantifierSet) && !($cur instanceof jur_GroupQuantifierSet) && !($cur instanceof jur_AltQuantifierSet)) {
                        var$4 = $cur;
                        if (!$next.$first(var$4.$getInnerSet()))
                            $cur = jur_UnifiedQuantifierSet__init_(var$4);
                    }
                    if (($next.$getType() & 65535) != 43)
                        $cur.$setNext($next);
                    else
                        $cur.$setNext($next.$getInnerSet());
                    break a;
                }
            }
        }
        if ($cur === null)
            return null;
        $cur.$setNext($last);
    }
    if (($cur.$getType() & 65535) != 43)
        return $cur;
    return $cur.$getInnerSet();
};
$java.jur_Pattern_processQuantifier = function($this, $last, $term) {
    var $quant, var$4, var$5, var$6, $q, var$8, $leaf;
    $quant = $this.$lexemes.$peek();
    if ($term !== null && !($term instanceof jur_LeafSet)) {
        switch ($quant) {
            case -2147483606:
                $this.$lexemes.$next10();
                return jur_PossessiveGroupQuantifierSet__init_($term, $last, $quant);
            case -2147483605:
                $this.$lexemes.$next10();
                return jur_PosPlusGroupQuantifierSet__init_($term, $last, (-2147483606));
            case -2147483585:
                $this.$lexemes.$next10();
                return jur_PosAltGroupQuantifierSet__init_($term, $last, (-536870849));
            case -2147483525:
                var$4 = new jur_PosCompositeGroupQuantifierSet;
                var$5 = $this.$lexemes.$nextSpecial();
                var$6 = $this.$compCount + 1 | 0;
                $this.$compCount = var$6;
                jur_PosCompositeGroupQuantifierSet__init_0(var$4, var$5, $term, $last, (-536870849), var$6);
                return var$4;
            case -1073741782:
            case -1073741781:
                $this.$lexemes.$next10();
                $q = jur_ReluctantGroupQuantifierSet__init_($term, $last, $quant);
                $term.$setNext($q);
                return $q;
            case -1073741761:
                $this.$lexemes.$next10();
                $q = $java.jur_RelAltGroupQuantifierSet__init_($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -1073741701:
                $q = new jur_RelCompositeGroupQuantifierSet;
                var$4 = $this.$lexemes;
                var$4 = var$4.$nextSpecial();
                var$8 = $this.$compCount + 1 | 0;
                $this.$compCount = var$8;
                $java.jur_RelCompositeGroupQuantifierSet__init_0($q, var$4, $term, $last, (-536870849), var$8);
                $term.$setNext($q);
                return $q;
            case -536870870:
            case -536870869:
                $this.$lexemes.$next10();
                $q = $term.$getType() != (-2147483602) ? jur_GroupQuantifierSet__init_($term, $last, $quant) : $java.jur_Pattern_hasFlag($this, 32) ? jur_DotAllQuantifierSet__init_($term, $last, $quant) : $java.jur_DotQuantifierSet__init_($term, $last, $quant, jur_AbstractLineTerminator_getInstance($this.$flags3));
                $term.$setNext($q);
                return $q;
            case -536870849:
                $this.$lexemes.$next10();
                $q = jur_AltGroupQuantifierSet__init_($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -536870789:
                $q = new jur_CompositeGroupQuantifierSet;
                var$4 = $this.$lexemes;
                var$4 = var$4.$nextSpecial();
                var$6 = $this.$compCount + 1 | 0;
                $this.$compCount = var$6;
                jur_CompositeGroupQuantifierSet__init_0($q, var$4, $term, $last, (-536870849), var$6);
                $term.$setNext($q);
                return $q;
            default:
        }
        return $term;
    }
    $leaf = null;
    if ($term !== null)
        $leaf = $term;
    switch ($quant) {
        case -2147483606:
        case -2147483605:
            $this.$lexemes.$next10();
            $q = jur_PossessiveQuantifierSet__init_($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -2147483585:
            $this.$lexemes.$next10();
            return jur_PossessiveAltQuantifierSet__init_($leaf, $last, (-2147483585));
        case -2147483525:
            return jur_PossessiveCompositeQuantifierSet__init_($this.$lexemes.$nextSpecial(), $leaf, $last, (-2147483525));
        case -1073741782:
        case -1073741781:
            $this.$lexemes.$next10();
            $q = jur_ReluctantQuantifierSet__init_($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -1073741761:
            $this.$lexemes.$next10();
            return jur_ReluctantAltQuantifierSet__init_($leaf, $last, (-1073741761));
        case -1073741701:
            return jur_ReluctantCompositeQuantifierSet__init_($this.$lexemes.$nextSpecial(), $leaf, $last, (-1073741701));
        case -536870870:
        case -536870869:
            $this.$lexemes.$next10();
            $q = jur_LeafQuantifierSet__init_($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -536870849:
            $this.$lexemes.$next10();
            return jur_AltQuantifierSet__init_($leaf, $last, (-536870849));
        case -536870789:
            return jur_CompositeQuantifierSet__init_($this.$lexemes.$nextSpecial(), $leaf, $last, (-536870789));
        default:
    }
    return $term;
};
$java.jur_Pattern_processTerminal = function($this, $last) {
    var $term, $ch, $newFlags, $number, var$6, $negative, $cc, var$9, var$10, var$11;
    $term = null;
    while (true) {
        a: {
            $ch = $this.$lexemes.$peek();
            if (($ch & (-2147418113)) == (-2147483608)) {
                $this.$lexemes.$next10();
                $newFlags = ($ch & 16711680) >> 16;
                $ch = $ch & (-16711681);
                if ($ch == (-16777176))
                    $this.$flags3 = $newFlags;
                else {
                    if ($ch != (-1073741784))
                        $newFlags = $this.$flags3;
                    $term = $java.jur_Pattern_processExpression($this, $ch, $newFlags, $last);
                    if ($this.$lexemes.$peek() != (-536870871))
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $this.$lexemes.$next10();
                }
            } else {
                b: {
                    c: {
                        switch ($ch) {
                            case -2147483599:
                            case -2147483598:
                            case -2147483597:
                            case -2147483596:
                            case -2147483595:
                            case -2147483594:
                            case -2147483593:
                            case -2147483592:
                            case -2147483591:
                                $number = ($ch & 2147483647) - 48 | 0;
                                if ($this.$globalGroupIndex < $number)
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                                $this.$lexemes.$next10();
                                $this.$consCount = $this.$consCount + 1 | 0;
                                $term = !$java.jur_Pattern_hasFlag($this, 2) ? jur_BackReferenceSet__init_($number, $this.$consCount) : $java.jur_Pattern_hasFlag($this, 64) ? jur_UCIBackReferenceSet__init_($number, $this.$consCount) : jur_CIBackReferenceSet__init_($number, $this.$consCount);
                                $this.$backRefs.data[$number].$isBackReferenced = 1;
                                $this.$needsBackRefReplacement = 1;
                                break a;
                            case -2147483583:
                                break;
                            case -2147483582:
                                $this.$lexemes.$next10();
                                $term = $java.jur_WordBoundary__init_(0);
                                break a;
                            case -2147483577:
                                $this.$lexemes.$next10();
                                $term = jur_PreviousMatch__init_();
                                break a;
                            case -2147483558:
                                $this.$lexemes.$next10();
                                $term = new jur_EOLSet;
                                var$6 = $this.$consCount + 1 | 0;
                                $this.$consCount = var$6;
                                jur_EOLSet__init_0($term, var$6);
                                break a;
                            case -2147483550:
                                $this.$lexemes.$next10();
                                $term = $java.jur_WordBoundary__init_(1);
                                break a;
                            case -2147483526:
                                $this.$lexemes.$next10();
                                $term = jur_EOISet__init_();
                                break a;
                            case -536870876:
                                break c;
                            case -536870866:
                                $this.$lexemes.$next10();
                                if ($java.jur_Pattern_hasFlag($this, 32)) {
                                    $term = $java.jur_DotAllSet__init_();
                                    break a;
                                }
                                $term = jur_DotSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags3));
                                break a;
                            case -536870821:
                                $this.$lexemes.$next10();
                                $negative = 0;
                                if ($this.$lexemes.$peek() == (-536870818)) {
                                    $negative = 1;
                                    $this.$lexemes.$next10();
                                }
                                $term = $java.jur_Pattern_processRange($this, $negative, $last);
                                if ($this.$lexemes.$peek() != (-536870819))
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                                $this.$lexemes.$setMode(1);
                                $this.$lexemes.$next10();
                                break a;
                            case -536870818:
                                $this.$lexemes.$next10();
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (!$java.jur_Pattern_hasFlag($this, 8)) {
                                    $term = jur_SOLSet__init_();
                                    break a;
                                }
                                $term = jur_MultiLineSOLSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags3));
                                break a;
                            case 0:
                                $cc = $this.$lexemes.$peekSpecial();
                                if ($cc !== null)
                                    $term = $java.jur_Pattern_processRangeSet($this, $cc);
                                else {
                                    if ($this.$lexemes.$isEmpty()) {
                                        $term = jur_EmptySet__init_($last);
                                        break a;
                                    }
                                    $term = jur_CharSet__init_($ch & 65535);
                                }
                                $this.$lexemes.$next10();
                                break a;
                            default:
                                break b;
                        }
                        $this.$lexemes.$next10();
                        $term = jur_SOLSet__init_();
                        break a;
                    }
                    $this.$lexemes.$next10();
                    $this.$consCount = $this.$consCount + 1 | 0;
                    if ($java.jur_Pattern_hasFlag($this, 8)) {
                        if ($java.jur_Pattern_hasFlag($this, 1)) {
                            $term = jur_UMultiLineEOLSet__init_($this.$consCount);
                            break a;
                        }
                        $term = jur_MultiLineEOLSet__init_($this.$consCount);
                        break a;
                    }
                    if ($java.jur_Pattern_hasFlag($this, 1)) {
                        $term = jur_UEOLSet__init_($this.$consCount);
                        break a;
                    }
                    $term = jur_EOLSet__init_($this.$consCount);
                    break a;
                }
                if ($ch >= 0 && !$this.$lexemes.$isSpecial()) {
                    $term = $java.jur_Pattern_processCharSet($this, $ch);
                    $this.$lexemes.$next10();
                } else if ($ch == (-536870788))
                    $term = jur_EmptySet__init_($last);
                else {
                    if ($ch != (-536870871)) {
                        var$9 = new jur_PatternSyntaxException;
                        var$10 = $this.$lexemes;
                        if (!var$10.$isSpecial()) {
                            var$6 = $ch & 65535;
                            var$10 = jl_Character_toString(var$6);
                        } else
                            var$10 = $this.$lexemes.$peekSpecial().$toString();
                        var$11 = $this.$lexemes;
                        $java.jur_PatternSyntaxException__init_(var$9, var$10, var$11.$toString(), $this.$lexemes.$getIndex());
                        $rt_throw(var$9);
                    }
                    if ($last instanceof jur_FinalSet)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $term = jur_EmptySet__init_($last);
                }
            }
        }
        if ($ch != (-16777176))
            break;
    }
    return $term;
};
$java.jur_Pattern_processRange = function($this, $negative, $last) {
    var $res, $rangeSet;
    $res = $java.jur_Pattern_processRangeExpression($this, $negative);
    $rangeSet = $java.jur_Pattern_processRangeSet($this, $res);
    $rangeSet.$setNext($last);
    return $rangeSet;
};
$java.jur_Pattern_processRangeExpression = function($this, $alt) {
    var $res, $buffer, $intersection, $notClosed, $firstInClass, var$7, $cur, $negative, $cs, $$je;
    $res = jur_CharClass__init_3($alt, $java.jur_Pattern_hasFlag($this, 2), $java.jur_Pattern_hasFlag($this, 64));
    $buffer = (-1);
    $intersection = 0;
    $notClosed = 0;
    $firstInClass = 1;
    a: {
        b: {
            c: while (true) {
                if ($this.$lexemes.$isEmpty())
                    break a;
                $notClosed = $this.$lexemes.$peek() == (-536870819) && !$firstInClass ? 0 : 1;
                if (!$notClosed)
                    break a;
                d: {
                    switch ($this.$lexemes.$peek()) {
                        case -536870874:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = $this.$lexemes.$next10();
                            if ($this.$lexemes.$peek() != (-536870874)) {
                                $buffer = 38;
                                break d;
                            }
                            if ($this.$lexemes.$lookAhead0() == (-536870821)) {
                                $this.$lexemes.$next10();
                                $intersection = 1;
                                $buffer = (-1);
                                break d;
                            }
                            $this.$lexemes.$next10();
                            if ($firstInClass) {
                                $res = $java.jur_Pattern_processRangeExpression($this, 0);
                                break d;
                            }
                            if ($this.$lexemes.$peek() == (-536870819))
                                break d;
                            $res.$intersection($java.jur_Pattern_processRangeExpression($this, 0));
                            break d;
                        case -536870867:
                            if (!$firstInClass && $this.$lexemes.$lookAhead0() != (-536870819)) {
                                var$7 = $this.$lexemes;
                                if (var$7.$lookAhead0() != (-536870821) && $buffer >= 0) {
                                    $this.$lexemes.$next10();
                                    $cur = $this.$lexemes.$peek();
                                    if ($this.$lexemes.$isSpecial())
                                        break c;
                                    if ($cur < 0) {
                                        var$7 = $this.$lexemes;
                                        if (var$7.$lookAhead0() != (-536870819)) {
                                            var$7 = $this.$lexemes;
                                            if (var$7.$lookAhead0() != (-536870821) && $buffer >= 0)
                                                break c;
                                        }
                                    }
                                    e: {
                                        try {
                                            if (jur_Lexer_isLetter($cur))
                                                break e;
                                            $cur = $cur & 65535;
                                            break e;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_Exception) {
                                                break b;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                    try {
                                        $res.$add0($buffer, $cur);
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            break b;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                    $this.$lexemes.$next10();
                                    $buffer = (-1);
                                    break d;
                                }
                            }
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 45;
                            $this.$lexemes.$next10();
                            break d;
                        case -536870821:
                            if ($buffer >= 0) {
                                $res.$add($buffer);
                                $buffer = (-1);
                            }
                            $this.$lexemes.$next10();
                            $negative = 0;
                            if ($this.$lexemes.$peek() == (-536870818)) {
                                $this.$lexemes.$next10();
                                $negative = 1;
                            }
                            if (!$intersection)
                                $res.$union($java.jur_Pattern_processRangeExpression($this, $negative));
                            else
                                $res.$intersection($java.jur_Pattern_processRangeExpression($this, $negative));
                            $intersection = 0;
                            $this.$lexemes.$next10();
                            break d;
                        case -536870819:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 93;
                            $this.$lexemes.$next10();
                            break d;
                        case -536870818:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 94;
                            $this.$lexemes.$next10();
                            break d;
                        case 0:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $cs = $this.$lexemes.$peekSpecial();
                            if ($cs === null)
                                $buffer = 0;
                            else {
                                $res.$add19($cs);
                                $buffer = (-1);
                            }
                            $this.$lexemes.$next10();
                            break d;
                        default:
                    }
                    if ($buffer >= 0)
                        $res.$add($buffer);
                    $buffer = $this.$lexemes.$next10();
                }
                $firstInClass = 0;
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $java.jur_Pattern_pattern($this), $this.$lexemes.$getIndex()));
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $java.jur_Pattern_pattern($this), $this.$lexemes.$getIndex()));
    }
    if (!$notClosed) {
        if ($buffer >= 0)
            $res.$add($buffer);
        return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(6), $java.jur_Pattern_pattern($this), $this.$lexemes.$getIndex() - 1 | 0));
};
$java.jur_Pattern_processCharSet = function($this, $ch) {
    var $isSupplCodePoint;
    $isSupplCodePoint = jl_Character_isSupplementaryCodePoint($ch);
    if ($java.jur_Pattern_hasFlag($this, 2)) {
        a: {
            if (!($ch >= 97 && $ch <= 122)) {
                if ($ch < 65)
                    break a;
                if ($ch > 90)
                    break a;
            }
            return jur_CICharSet__init_($ch & 65535);
        }
        if ($java.jur_Pattern_hasFlag($this, 64) && $ch > 128) {
            if ($isSupplCodePoint)
                return jur_UCISupplCharSet__init_($ch);
            if (jur_Lexer_isLowSurrogate($ch))
                return jur_LowSurrogateCharSet__init_($ch & 65535);
            if (!jur_Lexer_isHighSurrogate($ch))
                return jur_UCICharSet__init_($ch & 65535);
            return $java.jur_HighSurrogateCharSet__init_($ch & 65535);
        }
    }
    if ($isSupplCodePoint)
        return jur_SupplCharSet__init_($ch);
    if (jur_Lexer_isLowSurrogate($ch))
        return jur_LowSurrogateCharSet__init_($ch & 65535);
    if (!jur_Lexer_isHighSurrogate($ch))
        return jur_CharSet__init_($ch & 65535);
    return $java.jur_HighSurrogateCharSet__init_($ch & 65535);
};
$java.jur_Pattern_processRangeSet = function($this, $charClass) {
    var $surrogates, $lowHighSurrRangeSet;
    if (!$charClass.$hasLowHighSurrogates()) {
        if (!$charClass.$mayContainSupplCodepoints2()) {
            if ($charClass.$hasUCI0())
                return jur_UCIRangeSet__init_($charClass);
            return jur_RangeSet__init_($charClass);
        }
        if ($charClass.$hasUCI0())
            return jur_UCISupplRangeSet__init_($charClass);
        return jur_SupplRangeSet__init_($charClass);
    }
    $surrogates = $charClass.$getSurrogates();
    $lowHighSurrRangeSet = jur_LowHighSurrogateRangeSet__init_($surrogates);
    if (!$charClass.$mayContainSupplCodepoints2()) {
        if ($charClass.$hasUCI0())
            return jur_CompositeRangeSet__init_(jur_UCIRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
        return jur_CompositeRangeSet__init_(jur_RangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
    }
    if ($charClass.$hasUCI0())
        return jur_CompositeRangeSet__init_(jur_UCISupplRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
    return jur_CompositeRangeSet__init_(jur_SupplRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
};
function jur_Pattern_compile($pattern) {
    return $java.jur_Pattern_compile($pattern, 0);
}
$java.jur_Pattern_finalizeCompile = function($this) {
    if ($this.$needsBackRefReplacement)
        $this.$start5.$processSecondPass();
};
function jur_Pattern_quote($s) {
    var $sb, $apos, var$4, $apos_0;
    $sb = jl_StringBuilder__init_().$append($rt_s(1424));
    $apos = 0;
    while (true) {
        var$4 = $s.$indexOf1($rt_s(1425), $apos);
        if (var$4 < 0)
            break;
        $apos_0 = var$4 + 2 | 0;
        $sb.$append($s.$substring($apos, $apos_0)).$append($rt_s(1426));
        $apos = $apos_0;
    }
    return $sb.$append($s.$substring1($apos)).$append($rt_s(1425)).$toString();
}
$java.jur_Pattern_groupCount = function($this) {
    return $this.$globalGroupIndex;
};
$java.jur_Pattern_compCount = function($this) {
    return $this.$compCount + 1 | 0;
};
$java.jur_Pattern_consCount = function($this) {
    return $this.$consCount + 1 | 0;
};
function jur_Pattern_getSupplement($ch) {
    if ($ch >= 97 && $ch <= 122)
        $ch = ($ch - 32 | 0) & 65535;
    else if ($ch >= 65 && $ch <= 90)
        $ch = ($ch + 32 | 0) & 65535;
    return $ch;
}
$java.jur_Pattern_hasFlag = function($this, $flag) {
    return ($this.$flags3 & $flag) != $flag ? 0 : 1;
};
function jur_Pattern__init_($this) {
    jl_Object__init_0($this);
    $this.$backRefs = $rt_createArray(jur_FSet, 10);
    $this.$globalGroupIndex = (-1);
    $this.$compCount = (-1);
    $this.$consCount = (-1);
}
function ji_UnsupportedEncodingException() {
    ji_IOException.call(this);
}
$java.ji_UnsupportedEncodingException__init_ = function() {
    var var_0 = new ji_UnsupportedEncodingException();
    ji_UnsupportedEncodingException__init_(var_0);
    return var_0;
};
$java.ji_UnsupportedEncodingException__init_0 = function(var_0) {
    var var_1 = new ji_UnsupportedEncodingException();
    $java.ji_UnsupportedEncodingException__init_1(var_1, var_0);
    return var_1;
};
function ji_UnsupportedEncodingException__init_($this) {
    ji_IOException__init_0($this);
}
$java.ji_UnsupportedEncodingException__init_1 = function($this, $message) {
    ji_IOException__init_2($this, $message);
};
function oktgg_GLTFTexture$read$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$0230 = null;
    a.$$minFilter1 = null;
    a.$$magFilter1 = null;
    a.$$sWrap1 = null;
    a.$$tWrap1 = null;
}
function oktgg_GLTFTexture$read$1__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgg_GLTFTexture$read$1();
    $java.oktgg_GLTFTexture$read$1__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
$java.oktgg_GLTFTexture$read$1_invoke = function(var$0, var$1) {
    $java.oktgg_GLTFTexture$read$1_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTFTexture$read$1_invoke0 = function($this, $it) {
    var $sampler;
    oktgg_GLTFTexture_setSampler($this.$this$0230, $it);
    $sampler = oktgg_GLTFTexture_getGltf($this.$this$0230).$getSamplers0().$get1($it);
    $this.$$minFilter1.$element = oktgg_GLTFSampler_getMinFilter($sampler);
    $this.$$magFilter1.$element = oktgg_GLTFSampler_getMagFilter($sampler);
    $this.$$sWrap1.$element = oktgg_GLTFSampler_getWrapS($sampler);
    $this.$$tWrap1.$element = oktgg_GLTFSampler_getWrapT($sampler);
};
$java.oktgg_GLTFTexture$read$1__init_ = function(var$0, var$1, var$2, var$3, var$4, var$5) {
    var$0.$this$0230 = var$1;
    var$0.$$minFilter1 = var$2;
    var$0.$$magFilter1 = var$3;
    var$0.$$sWrap1 = var$4;
    var$0.$$tWrap1 = var$5;
    kji_Lambda__init_0(var$0, 1);
};
function oktgg_GLTFTexture$read$2() {
    var a = this; kji_Lambda.call(a);
    a.$this$077 = null;
    a.$$minFilter = null;
    a.$$magFilter = null;
    a.$$sWrap = null;
    a.$$tWrap = null;
    a.$$generateMipmaps = 0;
    a.$$json1 = null;
}
function oktgg_GLTFTexture$read$2__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktgg_GLTFTexture$read$2();
    $java.oktgg_GLTFTexture$read$2__init_(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
$java.oktgg_GLTFTexture$read$2_invoke = function(var$0, var$1) {
    $java.oktgg_GLTFTexture$read$2_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTFTexture$read$2_invoke0 = function($this, $sourceIndex) {
    var var$2;
    oktgg_GLTFTexture_setSource($this.$this$077, $sourceIndex);
    oktgg_GLTFTexture_getGltf($this.$this$077).$getImages0().$getOrWait0(oktgg_GLTFTexture_getSource($this.$this$077), oktgg_GLTFTexture$read$2$1__init_($this));
    var$2 = $this.$$json1;
    oktgg_GLTFTexture$read$2$2_$callClinit();
    var$2.$get16($rt_s(1427), oktgg_GLTFTexture$read$2$2_INSTANCE);
};
$java.oktgg_GLTFTexture$read$2__init_ = function(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    var$0.$this$077 = var$1;
    var$0.$$minFilter = var$2;
    var$0.$$magFilter = var$3;
    var$0.$$sWrap = var$4;
    var$0.$$tWrap = var$5;
    var$0.$$generateMipmaps = var$6;
    var$0.$$json1 = var$7;
    kji_Lambda__init_0(var$0, 1);
};
function oooi_DxConvex() {
    var a = this; oooi_DxGeom.call(a);
    a.$planesV = null;
    a.$planesD = null;
    a.$points0 = null;
    a.$polygons = null;
    a.$planecount = 0;
    a.$pointcount = 0;
    a.$edgecount = 0;
    a.$edges = null;
}
$java.oooi_DxConvex_SupportIndex = function($this, $dir) {
    var $rdir, $index, $max, $i, $tmp_0;
    $rdir = oom_DVector3__init_();
    $index = 0;
    ooo_OdeMath_dMultiply1_331($rdir, $this.$final_posr().$R(), $dir);
    $max = ooo_OdeMath_dCalcVectorDot31($this.$points0, 0, $rdir);
    $i = 1;
    while ($i < $this.$pointcount) {
        $tmp_0 = ooo_OdeMath_dCalcVectorDot31($this.$points0, $i * 3 | 0, $rdir);
        if ($tmp_0 > $max) {
            $index = $i;
            $max = $tmp_0;
        }
        $i = $i + 1 | 0;
    }
    return $index;
};
$java.oooi_DxConvex_dMIN = function($a, $b) {
    if ($a > $b)
        $a = $b;
    return $a;
};
$java.oooi_DxConvex_dMAX = function($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
};
$java.oooi_DxConvex_IntersectSegmentPlane = function($a, $b, $pV, $pD, $t, $q) {
    var $ab;
    $ab = oom_DVector3__init_();
    oom_DVector3_eqDiff($ab, $b, $a);
    oooicj_RefDouble_set($t, ($pD - ooo_OdeMath_dCalcVectorDot3($pV, $a)) / ooo_OdeMath_dCalcVectorDot3($pV, $ab));
    if (oooicj_RefDouble_get($t) >= 0.0 && oooicj_RefDouble_get($t) <= 1.0) {
        oom_DVector3_eqSum0($q, $a, $ab, oooicj_RefDouble_get($t));
        return 1;
    }
    return 0;
};
$java.oooi_DxConvex_Clamp = function($n, $min, $max) {
    if ($n < $min)
        return $min;
    if ($n <= $max)
        return $n;
    return $max;
};
$java.oooi_DxConvex_ClosestPointBetweenSegments = function($p1, $q1, $p2, $q2, $c1, $c2) {
    var $d1, $d2, $r, $a, $e, $f, $s, $t, $c, $b, $denom, $tnom, var$19;
    $d1 = oom_DVector3_reSub($q1, $p1);
    $d2 = oom_DVector3_reSub($q2, $p2);
    $r = oom_DVector3_reSub($p1, $p2);
    $a = oom_DVector3_lengthSquared($d1);
    $e = oom_DVector3_lengthSquared($d2);
    $f = oom_DVector3_dot($d2, $r);
    oooi_Common_$callClinit();
    if ($a <= oooi_Common_dEpsilon && $e <= oooi_Common_dEpsilon) {
        oom_DVector3_set($c1, $p1);
        oom_DVector3_set($c2, $p2);
        return oom_DVector3_lengthSquared(oom_DVector3_reSub($c1, $c2));
    }
    if ($a <= oooi_Common_dEpsilon) {
        $s = 0.0;
        $t = $f / $e;
        $t = $java.oooi_DxConvex_Clamp($t, 0.0, 1.0);
    } else {
        $c = ooo_OdeMath_dCalcVectorDot3($d1, $r);
        if ($e <= oooi_Common_dEpsilon) {
            $t = 0.0;
            $s = $java.oooi_DxConvex_Clamp( -$c / $a, 0.0, 1.0);
        } else {
            $b = ooo_OdeMath_dCalcVectorDot3($d1, $d2);
            $denom = $a * $e - $b * $b;
            $s = $denom === 0.0 ? 0.0 : $java.oooi_DxConvex_Clamp(($b * $f - $c * $e) / $denom, 0.0, 1.0);
            $tnom = $b * $s + $f;
            if ($tnom < 0.0) {
                $t = 0.0;
                $s = $java.oooi_DxConvex_Clamp( -$c / $a, 0.0, 1.0);
            } else if ($tnom <= $e)
                $t = $tnom / $e;
            else {
                $t = 1.0;
                $s = $java.oooi_DxConvex_Clamp(($b - $c) / $a, 0.0, 1.0);
            }
        }
    }
    oom_DVector3_eqSum0($c1, $p1, $d1, $s);
    oom_DVector3_eqSum0($c2, $p2, $d2, $t);
    var$19 = (oom_DVector3_get0($c1) - oom_DVector3_get0($c2)) * (oom_DVector3_get0($c1) - oom_DVector3_get0($c2));
    var$19 = var$19 + (oom_DVector3_get1($c1) - oom_DVector3_get1($c2)) * (oom_DVector3_get1($c1) - oom_DVector3_get1($c2));
    var$19 = var$19 + (oom_DVector3_get2($c1) - oom_DVector3_get2($c2)) * (oom_DVector3_get2($c1) - oom_DVector3_get2($c2));
    return var$19;
};
$java.oooi_DxConvex_IsPointInPolygon = function($p, $polygonA, $polyPos, $plane, $convex, $out) {
    var var$7, $a, $b, $ab, $ap, $v, $pointcount, var$14, $i, $ab_m2, $s;
    var$7 = $polygonA.data;
    $a = oom_DVector3__init_();
    $b = oom_DVector3__init_();
    $ab = oom_DVector3__init_();
    $ap = oom_DVector3__init_();
    $v = oom_DVector3__init_();
    $pointcount = var$7[0 + $polyPos | 0];
    oooi_Common_dIASSERT(!$pointcount ? 0 : 1);
    var$14 = $polyPos + 1 | 0;
    ooo_OdeMath_dMultiply0_3310($b, $convex.$final_posr().$R(), $convex.$points0, var$7[(var$14 + $pointcount | 0) - 1 | 0] * 3 | 0);
    oom_DVector3_eqSum1($b, $convex.$final_posr().$pos(), $b);
    $i = 0;
    while ($i < $pointcount) {
        oom_DVector3_set($a, $b);
        ooo_OdeMath_dMultiply0_3310($b, $convex.$final_posr().$R(), $convex.$points0, var$7[var$14 + $i | 0] * 3 | 0);
        oom_DVector3_eqSum1($b, $convex.$final_posr().$pos(), $b);
        oom_DVector3_eqDiff($ab, $b, $a);
        oom_DVector3_eqDiff($ap, $p, $a);
        ooo_OdeMath_dCalcVectorCross3($v, $ab, $plane);
        if (ooo_OdeMath_dCalcVectorDot3($ap, $v) > 0.0) {
            $ab_m2 = ooo_OdeMath_dCalcVectorDot3($ab, $ab);
            $s = $ab_m2 === 0.0 ? 0.0 : ooo_OdeMath_dCalcVectorDot3($ab, $ap) / $ab_m2;
            if ($s <= 0.0)
                oom_DVector3_set($out, $a);
            else if ($s < 1.0)
                oom_DVector3_eqSum0($out, $a, $ab, $s);
            else
                oom_DVector3_set($out, $b);
            return 0;
        }
        $i = $i + 1 | 0;
    }
    return 1;
};
$java.oooi_DxConvex_ComputeInterval = function($cvx, $axis, $axisD, $min, $max) {
    var $point, $i, $value;
    $point = oom_DVector3__init_();
    ooo_OdeMath_dMultiply0_3310($point, $cvx.$final_posr().$R(), $cvx.$points0, 0);
    oom_DVector3_add($point, $cvx.$final_posr().$pos());
    oooicj_RefDouble_set($min, ooo_OdeMath_dCalcVectorDot3($point, $axis) - $axisD);
    oooicj_RefDouble_set($max, oooicj_RefDouble_get($min));
    $i = 1;
    while ($i < $cvx.$pointcount) {
        ooo_OdeMath_dMultiply0_3310($point, $cvx.$final_posr().$R(), $cvx.$points0, $i * 3 | 0);
        oom_DVector3_add($point, $cvx.$final_posr().$pos());
        $value = ooo_OdeMath_dCalcVectorDot3($point, $axis) - $axisD;
        if ($value < oooicj_RefDouble_get($min))
            oooicj_RefDouble_set($min, $value);
        else if ($value > oooicj_RefDouble_get($max))
            oooicj_RefDouble_set($max, $value);
        $i = $i + 1 | 0;
    }
};
$java.oooi_DxConvex_CheckSATConvexFaces = function($cvx1, $cvx2, $ccso) {
    var $min1, $max1, $min2, $max2, $planeV, $i, var$10, $planeD, $min, $max, $depth;
    $min1 = oooicj_RefDouble__init_0();
    $max1 = oooicj_RefDouble__init_0();
    $min2 = oooicj_RefDouble__init_0();
    $max2 = oooicj_RefDouble__init_0();
    $planeV = oom_DVector3__init_();
    $i = 0;
    a: {
        while ($i < $cvx1.$planecount) {
            ooo_OdeMath_dMultiply0_331($planeV, $cvx1.$final_posr().$R(), $cvx1.$planesV.data[$i]);
            ooo_OdeMath_dNormalize3($planeV);
            var$10 = $cvx1.$planesD.data[$i];
            $planeD = var$10 + oom_DVector3_dot($planeV, $cvx1.$final_posr().$pos());
            $java.oooi_DxConvex_ComputeInterval($cvx1, $planeV, $planeD, $min1, $max1);
            $java.oooi_DxConvex_ComputeInterval($cvx2, $planeV, $planeD, $min2, $max2);
            if (oooicj_RefDouble_get($max2) < oooicj_RefDouble_get($min1))
                break a;
            if (oooicj_RefDouble_get($max1) < oooicj_RefDouble_get($min2))
                break a;
            $min = $java.oooi_DxConvex_dMAX(oooicj_RefDouble_get($min1), oooicj_RefDouble_get($min2));
            $max = $java.oooi_DxConvex_dMIN(oooicj_RefDouble_get($max1), oooicj_RefDouble_get($max2));
            $depth = $max - $min;
            if (oooicj_RefDouble_get($max2) * oooicj_RefDouble_get($min2) <= 0.0 && oooi_Common_dFabs($depth) < oooi_Common_dFabs($ccso.$min_depth)) {
                $ccso.$min_depth =  -$depth;
                $ccso.$depth_type = 1;
            }
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
};
$java.oooi_DxConvex_CheckSATConvexEdges = function($cvx1, $cvx2, $ccso) {
    var $min1, $max1, $min2, $max2, $planeV, $e1, $e2, $e1a, $e1b, $e2a, $e2b, $dist, $s1, $s2, $i, $j, var$20, $planeD, $min, $max, $depth;
    $min1 = oooicj_RefDouble__init_0();
    $max1 = oooicj_RefDouble__init_0();
    $min2 = oooicj_RefDouble__init_0();
    $max2 = oooicj_RefDouble__init_0();
    $planeV = oom_DVector3__init_();
    $e1 = oom_DVector3__init_();
    $e2 = oom_DVector3__init_();
    $e1a = oom_DVector3__init_();
    $e1b = oom_DVector3__init_();
    $e2a = oom_DVector3__init_();
    $e2b = oom_DVector3__init_();
    $dist = oom_DVector3__init_0($ccso.$dist);
    $s1 = $java.oooi_DxConvex_SupportIndex($cvx1, $dist);
    oom_DVector3_scale($dist, (-1.0));
    $s2 = $java.oooi_DxConvex_SupportIndex($cvx2, $dist);
    $i = 0;
    a: {
        while ($i < $cvx1.$edgecount) {
            b: {
                if (!($cvx1.$edges.data[$i].$first4 != $s1 && $cvx1.$edges.data[$i].$second0 != $s1)) {
                    ooo_OdeMath_dMultiply0_3310($e1a, $cvx1.$final_posr().$R(), $cvx1.$points0, $cvx1.$edges.data[$i].$first4 * 3 | 0);
                    ooo_OdeMath_dMultiply0_3310($e1b, $cvx1.$final_posr().$R(), $cvx1.$points0, $cvx1.$edges.data[$i].$second0 * 3 | 0);
                    oom_DVector3_eqDiff($e1, $e1b, $e1a);
                    $j = 0;
                    while (true) {
                        if ($j >= $cvx2.$edgecount)
                            break b;
                        if (!($cvx2.$edges.data[$j].$first4 != $s2 && $cvx2.$edges.data[$j].$second0 != $s2)) {
                            ooo_OdeMath_dMultiply0_3310($e2a, $cvx2.$final_posr().$R(), $cvx2.$points0, $cvx2.$edges.data[$j].$first4 * 3 | 0);
                            ooo_OdeMath_dMultiply0_3310($e2b, $cvx2.$final_posr().$R(), $cvx2.$points0, $cvx2.$edges.data[$j].$second0 * 3 | 0);
                            oom_DVector3_eqDiff($e2, $e2b, $e2a);
                            ooo_OdeMath_dCalcVectorCross3($planeV, $e1, $e2);
                            var$20 = oom_DVector3_dot($planeV, $planeV);
                            oooi_Common_$callClinit();
                            if (var$20 >= oooi_Common_dEpsilon) {
                                ooo_OdeMath_dNormalize3($planeV);
                                $planeD = 0.0;
                                $java.oooi_DxConvex_ComputeInterval($cvx1, $planeV, $planeD, $min1, $max1);
                                $java.oooi_DxConvex_ComputeInterval($cvx2, $planeV, $planeD, $min2, $max2);
                                if (oooicj_RefDouble_get($max2) < oooicj_RefDouble_get($min1))
                                    break a;
                                if (oooicj_RefDouble_get($max1) < oooicj_RefDouble_get($min2))
                                    break a;
                                $min = $java.oooi_DxConvex_dMAX(oooicj_RefDouble_get($min1), oooicj_RefDouble_get($min2));
                                $max = $java.oooi_DxConvex_dMIN(oooicj_RefDouble_get($max1), oooicj_RefDouble_get($max2));
                                $depth = $max - $min;
                                if (oooi_Common_dFabs($depth) + oooi_Common_dEpsilon < oooi_Common_dFabs($ccso.$min_depth)) {
                                    $ccso.$min_depth = $depth;
                                    $ccso.$depth_type = 2;
                                    oom_DVector3_set($ccso.$e1a, $e1a);
                                    oom_DVector3_set($ccso.$e1b, $e1b);
                                    oom_DVector3_add($ccso.$e1a, $cvx1.$final_posr().$pos());
                                    oom_DVector3_add($ccso.$e1b, $cvx1.$final_posr().$pos());
                                    oom_DVector3_set($ccso.$e2a, $e2a);
                                    oom_DVector3_set($ccso.$e2b, $e2b);
                                    oom_DVector3_add($ccso.$e2a, $cvx2.$final_posr().$pos());
                                    oom_DVector3_add($ccso.$e2b, $cvx2.$final_posr().$pos());
                                }
                            }
                        }
                        $j = $j + 1 | 0;
                    }
                }
            }
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
};
$java.oooi_DxConvex_GetSupportSide = function($dir, $cvx) {
    var $dics, $tmp_0, $side, $SavedDot, $i, $Dot;
    $dics = oom_DVector3__init_();
    $tmp_0 = oom_DVector3__init_();
    $side = 0;
    oom_DVector3_set($tmp_0, $dir);
    ooo_OdeMath_dNormalize3($tmp_0);
    ooo_OdeMath_dMultiply1_331($dics, $cvx.$final_posr().$R(), $tmp_0);
    $SavedDot = oom_DVector3_dot($dics, $cvx.$planesV.data[0]);
    $i = 1;
    while ($i < $cvx.$planecount) {
        $Dot = ooo_OdeMath_dCalcVectorDot3($dics, $cvx.$planesV.data[$i]);
        if ($Dot > $SavedDot) {
            $side = $i;
            $SavedDot = $Dot;
        }
        $i = $i + 1 | 0;
    }
    return $side;
};
$java.oooi_DxConvex_TestConvexIntersection = function($cvx1, $cvx2, $flags, $contactBuf, $skip) {
    var $ccso, $maxc, $i1, $i2, $r1, $r2, $contacts, $planeV, $rplaneV, $iplaneV, $tmp_0, $p, $t, $dist, $reference_side, $incident_side, $pReferencePolyPos, $pIncidentPolyPos, $refPolys, $incPolys, var$26, $rplaneD, var$28, $i, var$30, $pIncidentPointsPos, $iplaneD, $pReferencePointsPos, var$34, $out, $j, $d, $outside, $contact, var$40, $planeD, $d1, $d2, $k, $c1, $c2;
    $ccso = oooi_DxConvex$ConvexConvexSATOutput__init_1(null);
    $ccso.$min_depth = Infinity;
    $ccso.$depth_type = 0;
    oom_DVector3_eqDiff($ccso.$dist, $cvx2.$final_posr().$pos(), $cvx1.$final_posr().$pos());
    $maxc = $flags & 65535;
    oooi_Common_dIASSERT(!$maxc ? 0 : 1);
    $i1 = oom_DVector3__init_();
    $i2 = oom_DVector3__init_();
    $r1 = oom_DVector3__init_();
    $r2 = oom_DVector3__init_();
    $contacts = 0;
    if (!$java.oooi_DxConvex_CheckSATConvexFaces($cvx1, $cvx2, $ccso))
        return 0;
    if (!$java.oooi_DxConvex_CheckSATConvexFaces($cvx2, $cvx1, $ccso))
        return 0;
    if (!$java.oooi_DxConvex_CheckSATConvexEdges($cvx1, $cvx2, $ccso))
        return 0;
    a: {
        if ($ccso.$depth_type == 1) {
            $planeV = oom_DVector3__init_();
            $rplaneV = oom_DVector3__init_();
            $iplaneV = oom_DVector3__init_();
            $tmp_0 = oom_DVector3__init_();
            $p = oom_DVector3__init_();
            $t = oooicj_RefDouble__init_0();
            $dist = oom_DVector3__init_0($ccso.$dist);
            $reference_side = $java.oooi_DxConvex_GetSupportSide($dist, $cvx1);
            oom_DVector3_scale($dist, (-1.0));
            $incident_side = $java.oooi_DxConvex_GetSupportSide($dist, $cvx2);
            $pReferencePolyPos = 0;
            $pIncidentPolyPos = 0;
            $refPolys = $cvx1.$polygons;
            $incPolys = $cvx2.$polygons;
            ooo_OdeMath_dMultiply0_331($rplaneV, $cvx1.$final_posr().$R(), $cvx1.$planesV.data[$reference_side]);
            ooo_OdeMath_dNormalize3($rplaneV);
            var$26 = $cvx1.$planesD.data[$reference_side];
            $rplaneD = var$26 + oom_DVector3_dot($rplaneV, $cvx1.$final_posr().$pos());
            oom_DVector3_scale($rplaneV, (-1.0));
            var$28 =  -$rplaneD;
            $i = 0;
            while ($i < $incident_side) {
                $pIncidentPolyPos = $pIncidentPolyPos + ($incPolys.data[$pIncidentPolyPos] + 1 | 0) | 0;
                $i = $i + 1 | 0;
            }
            var$30 = $incPolys.data;
            $pIncidentPointsPos = $pIncidentPolyPos + 1 | 0;
            ooo_OdeMath_dMultiply0_3310($i2, $cvx2.$final_posr().$R(), $cvx2.$points0, var$30[$pIncidentPointsPos] * 3 | 0);
            oom_DVector3_add($i2, $cvx2.$final_posr().$pos());
            oom_DVector3_set($r2, $i2);
            oom_DVector3_sub($r2, $cvx1.$final_posr().$pos());
            oom_DVector3_set($tmp_0, $r2);
            ooo_OdeMath_dMultiply1_331($r2, $cvx1.$final_posr().$R(), $tmp_0);
            $i = 0;
            while (true) {
                if ($i >= $cvx2.$polygons.data[$pIncidentPolyPos]) {
                    ooo_OdeMath_dMultiply0_331($iplaneV, $cvx2.$final_posr().$R(), $cvx2.$planesV.data[$incident_side]);
                    ooo_OdeMath_dNormalize3($iplaneV);
                    $iplaneD = $cvx2.$planesD.data[$incident_side] + oom_DVector3_dot($iplaneV, $cvx2.$final_posr().$pos());
                    $i = 0;
                    while ($i < $reference_side) {
                        $pReferencePolyPos = $pReferencePolyPos + ($refPolys.data[$pReferencePolyPos] + 1 | 0) | 0;
                        $i = $i + 1 | 0;
                    }
                    $pReferencePointsPos = $pReferencePolyPos + 1 | 0;
                    $i = 0;
                    while (true) {
                        var$34 = $refPolys.data;
                        if ($i >= var$34[$pReferencePolyPos])
                            break a;
                        ooo_OdeMath_dMultiply0_3310($i1, $cvx1.$final_posr().$R(), $cvx1.$points0, var$34[$pReferencePointsPos + $i | 0] * 3 | 0);
                        oom_DVector3_add($i1, $cvx1.$final_posr().$pos());
                        oooicj_RefDouble_set($t,  -(oom_DVector3_dot($i1, $iplaneV) - $iplaneD));
                        oom_DVector3_eqSum0($i1, $i1, $iplaneV, oooicj_RefDouble_get($t));
                        oom_DVector3_set($r1, $i1);
                        oom_DVector3_sub($r1, $cvx2.$final_posr().$pos());
                        oom_DVector3_set($tmp_0, $r1);
                        ooo_OdeMath_dMultiply1_331($r1, $cvx2.$final_posr().$R(), $tmp_0);
                        $out = 0;
                        $j = 0;
                        b: {
                            while ($j < $cvx2.$planecount) {
                                $d = oom_DVector3_dot($r1, $cvx2.$planesV.data[$j]) - $cvx2.$planesD.data[$j];
                                if ($d >= 0.0) {
                                    $out = 1;
                                    break b;
                                }
                                $j = $j + 1 | 0;
                            }
                        }
                        if (!$out) {
                            $outside = 0;
                            $j = 0;
                            while ($j < $contacts) {
                                if (oom_DVector3_isEq(ooo_DContactGeomBuffer_getSafe($contactBuf, $flags, $j).$pos0, $i1))
                                    $outside = 1;
                                $j = $j + 1 | 0;
                            }
                            if (!$outside) {
                                $d = oom_DVector3_dot($i1, $rplaneV) - var$28;
                                if ($d > 0.0) {
                                    $contact = ooo_DContactGeomBuffer_getSafe($contactBuf, $flags, $contacts);
                                    oom_DVector3_set($contact.$pos0, $i1);
                                    oom_DVector3_set($contact.$normal, $rplaneV);
                                    $contact.$g1 = $cvx1;
                                    $contact.$g2 = $cvx2;
                                    $contact.$depth = $d;
                                    $contacts = $contacts + 1 | 0;
                                    if ($contacts == $maxc)
                                        break;
                                }
                            }
                        }
                        $i = $i + 1 | 0;
                    }
                    return $contacts;
                }
                oom_DVector3_set($i1, $i2);
                oom_DVector3_set($r1, $r2);
                var$40 = $cvx2.$final_posr().$R();
                var$34 = $cvx2.$points0;
                $i = $i + 1 | 0;
                ooo_OdeMath_dMultiply0_3310($i2, var$40, var$34, var$30[$pIncidentPointsPos + ($i % var$30[$pIncidentPolyPos] | 0) | 0] * 3 | 0);
                oom_DVector3_add($i2, $cvx2.$final_posr().$pos());
                oom_DVector3_set($r2, $i1);
                oom_DVector3_sub($r2, $cvx1.$final_posr().$pos());
                oom_DVector3_set($tmp_0, $r2);
                ooo_OdeMath_dMultiply1_331($r2, $cvx1.$final_posr().$R(), $tmp_0);
                $outside = 0;
                $j = 0;
                while ($j < $cvx1.$planecount) {
                    oom_DVector3_set($planeV, $cvx1.$planesV.data[$j]);
                    $planeD = $cvx1.$planesD.data[$j];
                    $d1 = oom_DVector3_dot($r1, $planeV) - $planeD;
                    $d2 = oom_DVector3_dot($r2, $planeV) - $planeD;
                    if ($d1 * $d2 < 0.0) {
                        $java.oooi_DxConvex_IntersectSegmentPlane($r1, $r2, $planeV, $planeD, $t, $p);
                        $out = 0;
                        $k = 0;
                        c: {
                            while ($k < $cvx1.$planecount) {
                                $d = oom_DVector3_dot($p, $cvx1.$planesV.data[$k]) - $cvx1.$planesD.data[$k];
                                if ($d > 0.0) {
                                    $out = 1;
                                    break c;
                                }
                                $k = $k + 1 | 0;
                            }
                        }
                        if (!$out) {
                            ooo_OdeMath_dMultiply0_331($tmp_0, $cvx1.$final_posr().$R(), $p);
                            oom_DVector3_eqSum1($p, $tmp_0, $cvx1.$final_posr().$pos());
                            $d = oom_DVector3_dot($p, $rplaneV) - var$28;
                            if ($d > 0.0) {
                                $contact = ooo_DContactGeomBuffer_getSafe($contactBuf, $flags, $contacts);
                                oom_DVector3_set($contact.$pos0, $p);
                                oom_DVector3_set($contact.$normal, $rplaneV);
                                $contact.$g1 = $cvx1;
                                $contact.$g2 = $cvx2;
                                $contact.$depth = $d;
                                $contacts = $contacts + 1 | 0;
                                if ($contacts == $maxc)
                                    return $contacts;
                            }
                        }
                    }
                    if ($d1 > 0.0)
                        $outside = 1;
                    $j = $j + 1 | 0;
                }
                if (!$outside) {
                    $d = oom_DVector3_dot($i1, $rplaneV) - var$28;
                    if ($d > 0.0) {
                        $contact = ooo_DContactGeomBuffer_getSafe($contactBuf, $flags, $contacts);
                        oom_DVector3_set($contact.$pos0, $i1);
                        oom_DVector3_set($contact.$normal, $rplaneV);
                        $contact.$g1 = $cvx1;
                        $contact.$g2 = $cvx2;
                        $contact.$depth = $d;
                        $contacts = $contacts + 1 | 0;
                        if ($contacts == $maxc)
                            break;
                    }
                }
            }
            return $contacts;
        } else if ($ccso.$depth_type == 2) {
            $c1 = oom_DVector3__init_();
            $c2 = oom_DVector3__init_();
            $contact = ooo_DContactGeomBuffer_getSafe($contactBuf, $flags, $contacts);
            $contact.$depth = oooi_Common_dSqrt($java.oooi_DxConvex_ClosestPointBetweenSegments($ccso.$e1a, $ccso.$e1b, $ccso.$e2a, $ccso.$e2b, $c1, $c2));
            $contact.$g1 = $cvx1;
            $contact.$g2 = $cvx2;
            oom_DVector3_set($contact.$pos0, $c1);
            oom_DVector3_eqDiff($contact.$normal, $c2, $c1);
            oom_DVector3_normalize($contact.$normal);
            $contacts = 1;
        }
    }
    return $contacts;
};
function oooi_DxConvex_access$100($x0) {
    return $x0.$pointcount;
}
function oooi_DxConvex_access$200($x0) {
    return $x0.$points0;
}
function oooi_DxConvex_access$300($x0) {
    return $x0.$polygons;
}
function oooi_DxConvex_access$400($x0) {
    return $x0.$planecount;
}
function oooi_DxConvex_access$500($x0) {
    return $x0.$planesV;
}
function oooi_DxConvex_access$600($x0) {
    return $x0.$planesD;
}
function oooi_DxConvex_access$700($x0, $x1, $x2, $x3, $x4, $x5) {
    return $java.oooi_DxConvex_IsPointInPolygon($x0, $x1, $x2, $x3, $x4, $x5);
}
function oooi_DxConvex_access$900($x0, $x1, $x2, $x3, $x4) {
    return $java.oooi_DxConvex_TestConvexIntersection($x0, $x1, $x2, $x3, $x4);
}
function oooig_GimRadixSort() {
    jl_Object.call(this);
}
var oooig_GimRadixSort_RSORT_TOKEN_COMPARATOR = null;
var oooig_GimRadixSort_GIM_DEF_EXCHANGE_MACRO = null;
$java.oooig_GimRadixSort_GIM_COMP_MACRO = null;
function oooig_GimRadixSort_$callClinit() {
    oooig_GimRadixSort_$callClinit = $rt_eraseClinit(oooig_GimRadixSort);
    $java.oooig_GimRadixSort__clinit_();
}
$java.oooig_GimRadixSort__init_ = function() {
    var var_0 = new oooig_GimRadixSort();
    oooig_GimRadixSort__init_(var_0);
    return var_0;
};
function oooig_GimRadixSort__init_($this) {
    oooig_GimRadixSort_$callClinit();
    jl_Object__init_0($this);
}
$java.oooig_GimRadixSort_RSORT_TOKEN_COMPARATOR = function($x, $y) {
    oooig_GimRadixSort_$callClinit();
    return Long_sub($x.$m_key, $y.$m_key);
};
$java.oooig_GimRadixSort_D11_0 = function($x) {
    oooig_GimRadixSort_$callClinit();
    return Long_and($x, Long_fromInt(2047)).lo;
};
$java.oooig_GimRadixSort_D11_1 = function($x) {
    oooig_GimRadixSort_$callClinit();
    return Long_and(Long_shru($x, 11), Long_fromInt(2047)).lo;
};
$java.oooig_GimRadixSort_D11_2 = function($x) {
    oooig_GimRadixSort_$callClinit();
    return Long_and(Long_shru($x, 22), Long_fromInt(1023)).lo;
};
function oooig_GimRadixSort_GIM_RADIX_SORT_RTOKENS($array, $sorted, $element_count) {
    var $b0, $b1, $b2, $i, var$8, var$9, var$10, $fi, var$12, var$13, $sum0, $sum1, $sum2, var$17, $tsum, var$19, $pos;
    oooig_GimRadixSort_$callClinit();
    $b0 = $rt_createIntArray(2048);
    $b1 = $rt_createIntArray(2048);
    $b2 = $rt_createIntArray(2048);
    $i = 0;
    while ($i < $element_count) {
        var$8 = $b2.data;
        var$9 = $b1.data;
        var$10 = $b0.data;
        $fi = $array.data[$i].$m_key;
        var$12 = $java.oooig_GimRadixSort_D11_0($fi);
        var$10[var$12] = var$10[var$12] + 1 | 0;
        var$12 = $java.oooig_GimRadixSort_D11_1($fi);
        var$9[var$12] = var$9[var$12] + 1 | 0;
        var$13 = $java.oooig_GimRadixSort_D11_2($fi);
        var$8[var$13] = var$8[var$13] + 1 | 0;
        $i = $i + 1 | 0;
    }
    $sum0 = 0;
    $sum1 = 0;
    $sum2 = 0;
    var$12 = 0;
    while (var$12 < 2048) {
        var$8 = $b2.data;
        var$10 = $b1.data;
        var$17 = $b0.data;
        $tsum = var$17[var$12] + $sum0 | 0;
        var$17[var$12] = $sum0 - 1 | 0;
        var$19 = var$10[var$12] + $sum1 | 0;
        var$10[var$12] = $sum1 - 1 | 0;
        var$13 = var$8[var$12] + $sum2 | 0;
        var$8[var$12] = $sum2 - 1 | 0;
        var$12 = var$12 + 1 | 0;
        $sum0 = $tsum;
        $sum1 = var$19;
        $sum2 = var$13;
    }
    var$12 = 0;
    while (var$12 < $element_count) {
        var$17 = $sorted.data;
        var$10 = $b0.data;
        var$8 = $array.data;
        $fi = var$8[var$12].$m_key;
        $pos = $java.oooig_GimRadixSort_D11_0($fi);
        var$13 = var$10[$pos] + 1 | 0;
        var$10[$pos] = var$13;
        var$17[var$13].$m_key = var$8[var$12].$m_key;
        var$17[var$13].$m_value = var$8[var$12].$m_value;
        var$12 = var$12 + 1 | 0;
    }
    var$12 = 0;
    while (var$12 < $element_count) {
        var$10 = $array.data;
        var$17 = $b1.data;
        var$8 = $sorted.data;
        $fi = var$8[var$12].$m_key;
        $pos = $java.oooig_GimRadixSort_D11_1($fi);
        var$13 = var$17[$pos] + 1 | 0;
        var$17[$pos] = var$13;
        var$10[var$13].$m_key = var$8[var$12].$m_key;
        var$10[var$13].$m_value = var$8[var$12].$m_value;
        var$12 = var$12 + 1 | 0;
    }
    var$12 = 0;
    while (var$12 < $element_count) {
        var$10 = $sorted.data;
        var$17 = $b2.data;
        var$8 = $array.data;
        $fi = var$8[var$12].$m_key;
        $pos = $java.oooig_GimRadixSort_D11_2($fi);
        var$13 = var$17[$pos] + 1 | 0;
        var$17[$pos] = var$13;
        var$10[var$13].$m_key = var$8[var$12].$m_key;
        var$10[var$13].$m_value = var$8[var$12].$m_value;
        var$12 = var$12 + 1 | 0;
    }
}
function oooig_GimRadixSort_GIM_QUICK_SORT_ARRAY($array, $array_count, $comp_macro, $exchange_macro) {
    var $_start_stack_, var$6, $_end_stack_, var$8, $_stack_index_, $_start_, $_end_, var$12, $_end__0, $_j_, var$15, var$16, var$17, var$18, var$19;
    oooig_GimRadixSort_$callClinit();
    $_start_stack_ = $rt_createIntArray(64);
    var$6 = $_start_stack_.data;
    $_end_stack_ = $rt_createIntArray(64);
    var$8 = $_end_stack_.data;
    var$6[0] = 0;
    var$8[0] = $array_count;
    $_stack_index_ = 1;
    while ($_stack_index_ > 0) {
        $_stack_index_ = $_stack_index_ + (-1) | 0;
        $_start_ = var$6[$_stack_index_];
        $_end_ = var$8[$_stack_index_];
        while (true) {
            var$12 = $rt_compare($_end_ - $_start_ | 0, 2);
            if (var$12 <= 0)
                break;
            $_end__0 = $_start_ + 1 | 0;
            $_j_ = $_end_ - 1 | 0;
            while ($_end__0 < $_j_) {
                var$15 = $_end__0;
                while (true) {
                    var$16 = $rt_compare(var$15, $_j_);
                    if (var$16 > 0)
                        break;
                    var$17 = $array.data;
                    if (Long_gt($comp_macro.$run8(var$17[var$15], var$17[$_start_]), Long_ZERO))
                        break;
                    var$15 = var$15 + 1 | 0;
                }
                if (var$16 > 0) {
                    $exchange_macro.$run9($array, $_j_, $_start_);
                    $_end__0 = $_j_;
                    continue;
                }
                while (true) {
                    var$12 = $rt_compare(var$15, $_j_);
                    if (var$12 > 0)
                        break;
                    var$17 = $array.data;
                    if (Long_lt($comp_macro.$run8(var$17[$_j_], var$17[$_start_]), Long_ZERO))
                        break;
                    $_j_ = $_j_ + (-1) | 0;
                }
                if (var$12 > 0) {
                    $exchange_macro.$run9($array, $_j_, $_start_);
                    $_end__0 = $_j_;
                    continue;
                }
                if (var$12 >= 0) {
                    $_end__0 = var$15;
                    continue;
                }
                $exchange_macro.$run9($array, var$15, $_j_);
                if ((var$15 + 2 | 0) < $_j_) {
                    $_end__0 = var$15 + 1 | 0;
                    $_j_ = $_j_ + (-1) | 0;
                    continue;
                }
                $_end__0 = var$15 + 1 | 0;
                if ($_end__0 < $_j_)
                    continue;
                $_end__0 = var$15;
            }
            var$16 = $_end__0 - $_start_ | 0;
            var$18 = $rt_compare(var$16, 1);
            if (var$18 > 0) {
                var$12 = $_end_ - $_j_ | 0;
                if (var$12 > 1) {
                    if (var$16 >= (var$12 - 1 | 0)) {
                        var$6[$_stack_index_] = $_start_;
                        var$8[$_stack_index_] = $_end__0;
                        $_stack_index_ = $_stack_index_ + 1 | 0;
                        $_start_ = $_j_ + 1 | 0;
                        continue;
                    }
                    var$6[$_stack_index_] = $_j_ + 1 | 0;
                    var$8[$_stack_index_] = $_end_;
                    $_stack_index_ = $_stack_index_ + 1 | 0;
                    $_end_ = $_end__0;
                    continue;
                }
            }
            if (var$18 > 0) {
                $_end_ = $_end__0;
                continue;
            }
            $_start_ = $_j_ + 1 | 0;
        }
        if (var$12)
            continue;
        var$17 = $array.data;
        var$19 = var$17[$_start_];
        var$12 = $_end_ - 1 | 0;
        if (Long_le($comp_macro.$run8(var$19, var$17[var$12]), Long_ZERO))
            continue;
        $exchange_macro.$run9($array, $_start_, var$12);
    }
}
$java.oooig_GimRadixSort_GIM_DEF_EXCHANGE_MACRO = function($_array, $_i, $_j) {
    var var$4, $_e_tmp_;
    oooig_GimRadixSort_$callClinit();
    var$4 = $_array.data;
    $_e_tmp_ = var$4[$_i];
    var$4[$_i] = var$4[$_j];
    var$4[$_j] = $_e_tmp_;
};
$java.oooig_GimRadixSort_access$000 = function($x0, $x1) {
    oooig_GimRadixSort_$callClinit();
    return $java.oooig_GimRadixSort_RSORT_TOKEN_COMPARATOR($x0, $x1);
};
$java.oooig_GimRadixSort_access$100 = function($x0, $x1, $x2) {
    oooig_GimRadixSort_$callClinit();
    $java.oooig_GimRadixSort_GIM_DEF_EXCHANGE_MACRO($x0, $x1, $x2);
};
$java.oooig_GimRadixSort__clinit_ = function() {
    oooig_GimRadixSort_RSORT_TOKEN_COMPARATOR = $java.oooig_GimRadixSort$1__init_();
    oooig_GimRadixSort_GIM_DEF_EXCHANGE_MACRO = $java.oooig_GimRadixSort$2__init_();
    $java.oooig_GimRadixSort_GIM_COMP_MACRO = $java.oooig_GimRadixSort$3__init_();
};
function oktgg_GLTF$read$4$1() {
    kji_Lambda.call(this);
    this.$this$0231 = null;
}
function oktgg_GLTF$read$4$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$4$1();
    $java.oktgg_GLTF$read$4$1__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_GLTF$read$4$1_invoke = function(var$0, var$1) {
    $java.oktgg_GLTF$read$4$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTF$read$4$1_invoke0 = function($this, $$this$objs) {
    var $accessor;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $accessor = oktgg_GLTFAccessor__init_1($this.$this$0231.$this$0183, oktgg_GLTFArray_size($this.$this$0231.$this$0183.$getAccessors0()), 0, 0, 0, 0, 0, null, null, null, null, null, 4092, null);
    $this.$this$0231.$this$0183.$getAccessors0().$add1($accessor);
    oktgg_GLTFAccessor_read($accessor, $$this$objs);
};
$java.oktgg_GLTF$read$4$1__init_ = function(var$0, var$1) {
    var$0.$this$0231 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oooi_DxSphere$CollideSphereBox() {
    jl_Object.call(this);
}
function oooi_DxSphere$CollideSphereBox__init_() {
    var var_0 = new oooi_DxSphere$CollideSphereBox();
    oooi_DxSphere$CollideSphereBox__init_0(var_0);
    return var_0;
}
function oooi_DxSphere$CollideSphereBox__init_0($this) {
    jl_Object__init_0($this);
}
$java.oooi_DxSphere$CollideSphereBox_dCollideSphereBox = function($this, $o1, $o2, $flags, $contacts, $skip) {
    var $l, var$7, $t, var$9, $p, $q, $r, $onborder, $contact, $depth, $min_distance, $mini, $i, $face_distance, $tmp_0;
    oooi_Common_dIASSERT($skip != 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $l = $rt_createDoubleArray(3);
    var$7 = $l.data;
    $t = $rt_createDoubleArray(3);
    var$9 = $t.data;
    $p = oom_DVector3__init_();
    $q = oom_DVector3__init_();
    $r = oom_DVector3__init_();
    $onborder = 0;
    $contact = ooo_DContactGeomBuffer_get($contacts, 0);
    $contact.$g1 = $o1;
    $contact.$g2 = $o2;
    $contact.$side1 = (-1);
    $contact.$side2 = (-1);
    oom_DVector3_eqDiff($p, $o1.$final_posr().$pos(), $o2.$final_posr().$pos());
    var$7[0] = oom_DVector3_get0($o2.$side) * 0.5;
    var$9[0] = ooo_OdeMath_dCalcVectorDot3_14($p, $o2.$final_posr().$R(), 0);
    if (var$9[0] <  -var$7[0]) {
        var$9[0] =  -var$7[0];
        $onborder = 1;
    }
    if (var$9[0] > var$7[0]) {
        var$9[0] = var$7[0];
        $onborder = 1;
    }
    var$7[1] = oom_DVector3_get1($o2.$side) * 0.5;
    var$9[1] = ooo_OdeMath_dCalcVectorDot3_14($p, $o2.$final_posr().$R(), 1);
    if (var$9[1] <  -var$7[1]) {
        var$9[1] =  -var$7[1];
        $onborder = 1;
    }
    if (var$9[1] > var$7[1]) {
        var$9[1] = var$7[1];
        $onborder = 1;
    }
    var$9[2] = ooo_OdeMath_dCalcVectorDot3_14($p, $o2.$final_posr().$R(), 2);
    var$7[2] = oom_DVector3_get2($o2.$side) * 0.5;
    if (var$9[2] <  -var$7[2]) {
        var$9[2] =  -var$7[2];
        $onborder = 1;
    }
    if (var$9[2] > var$7[2]) {
        var$9[2] = var$7[2];
        $onborder = 1;
    }
    if ($onborder) {
        ooo_OdeMath_dMultiply0_331($q, $o2.$final_posr().$R(), oom_DVector3__init_1(var$9[0], var$9[1], var$9[2]));
        oom_DVector3_eqDiff($r, $p, $q);
        $depth = oooi_DxSphere_access$000($o1) - oooi_Common_dSqrt(oom_DVector3_dot($r, $r));
        if ($depth < 0.0)
            return 0;
        oom_DVector3_eqSum1(ooo_DContactGeomBuffer_get($contacts, 0).$pos0, $q, $o2.$final_posr().$pos());
        oom_DVector3_set(ooo_DContactGeomBuffer_get($contacts, 0).$normal, $r);
        ooo_OdeMath_dNormalize3(ooo_DContactGeomBuffer_get($contacts, 0).$normal);
        ooo_DContactGeomBuffer_get($contacts, 0).$depth = $depth;
        return 1;
    }
    $min_distance = var$7[0] - oooi_Common_dFabs(var$9[0]);
    $mini = 0;
    $i = 1;
    while ($i < 3) {
        $face_distance = var$7[$i] - oooi_Common_dFabs(var$9[$i]);
        if ($face_distance < $min_distance) {
            $mini = $i;
            $min_distance = $face_distance;
        }
        $i = $i + 1 | 0;
    }
    oom_DVector3_set(ooo_DContactGeomBuffer_get($contacts, 0).$pos0, $o1.$final_posr().$pos());
    $tmp_0 = oom_DVector3__init_();
    oom_DVector3_set2($tmp_0, $mini, var$9[$mini] <= 0.0 ? (-1.0) : 1.0);
    ooo_OdeMath_dMultiply0_331(ooo_DContactGeomBuffer_get($contacts, 0).$normal, $o2.$final_posr().$R(), $tmp_0);
    ooo_DContactGeomBuffer_get($contacts, 0).$depth = $min_distance + oooi_DxSphere_access$000($o1);
    return 1;
};
$java.oooi_DxSphere$CollideSphereBox_dColliderFn = function($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideSphereBox($o1, $o2, $flags, $contacts, 1);
};
function jur_UnicodeCategory() {
    jur_AbstractCharClass.call(this);
    this.$category1 = 0;
}
function jur_UnicodeCategory__init_(var_0) {
    var var_1 = new jur_UnicodeCategory();
    $java.jur_UnicodeCategory__init_(var_1, var_0);
    return var_1;
}
$java.jur_UnicodeCategory__init_ = function($this, $category) {
    jur_AbstractCharClass__init_0($this);
    $this.$category1 = $category;
};
$java.jur_UnicodeCategory_contains = function($this, $ch) {
    return $this.$alt0 ^ ($this.$category1 != $java.jl_Character_getType0($ch & 65535) ? 0 : 1);
};
function jur_UnicodeCategoryScope() {
    jur_UnicodeCategory.call(this);
}
function jur_UnicodeCategoryScope__init_(var_0) {
    var var_1 = new jur_UnicodeCategoryScope();
    $java.jur_UnicodeCategoryScope__init_(var_1, var_0);
    return var_1;
}
$java.jur_UnicodeCategoryScope__init_ = function($this, $category) {
    $java.jur_UnicodeCategory__init_($this, $category);
};
$java.jur_UnicodeCategoryScope_contains = function($this, $ch) {
    return $this.$alt0 ^ (!($this.$category1 >> $java.jl_Character_getType0($ch & 65535) & 1) ? 0 : 1);
};
function oktt_TeaVMApp$2() {
    kji_Lambda.call(this);
    this.$this$0232 = null;
}
function oktt_TeaVMApp$2__init_(var_0) {
    var var_1 = new oktt_TeaVMApp$2();
    $java.oktt_TeaVMApp$2__init_(var_1, var_0);
    return var_1;
}
$java.oktt_TeaVMApp$2_invoke = function(var$0, var$1) {
    $java.oktt_TeaVMApp$2_invoke0(var$0, var$1.$doubleValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktt_TeaVMApp$2_invoke0 = function($this, $it) {
    var $time, var$3;
    $time = jl_System_nanoTime();
    if (Long_eq(oktt_TeaVMApp_access$getLastFrameTime$p($this.$this$0232), Long_fromInt(-1)))
        oktt_TeaVMApp_access$setLastFrameTime$p($this.$this$0232, $time);
    oktt_TeaVMApp_setDeltaTime($this.$this$0232, Long_toNumber(Long_sub($time, oktt_TeaVMApp_access$getLastFrameTime$p($this.$this$0232))) * 9.999999717180685E-10);
    oktt_TeaVMApp_setRawDeltaTime($this.$this$0232, Long_toNumber(Long_sub($time, oktt_TeaVMApp_access$getLastFrameTime$p($this.$this$0232))) / 1.0E9);
    oktt_TeaVMApp_access$setLastFrameTime$p($this.$this$0232, $time);
    if (Long_ge(Long_sub($time, oktt_TeaVMApp_access$getFrameCounterStart$p($this.$this$0232)), Long_fromInt(1000000000))) {
        oktt_TeaVMApp_setFps($this.$this$0232, oktt_TeaVMApp_access$getFrames$p($this.$this$0232));
        oktt_TeaVMApp_access$setFrames$p($this.$this$0232, 0);
        oktt_TeaVMApp_access$setFrameCounterStart$p($this.$this$0232, $time);
    }
    var$3 = $this.$this$0232;
    oktt_TeaVMApp_access$setFrames$p(var$3, oktt_TeaVMApp_access$getFrames$p(var$3) + 1 | 0);
    oktg_GL_$callClinit();
    oktg_GL_doSingleCalls(oktg_GL_INSTANCE);
    oktg_GL_doRenderCalls(oktg_GL_INSTANCE);
    if (oktt_TeaVMApp_isEnabled($this.$this$0232)) {
        var$3 = oktt_TeaVMApp_getAnim($this.$this$0232);
        requestAnimationFrame(otji_JS_function(otji_JS_functionAsObject(var$3 === null ? var$3 : oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0__init_(var$3), "onAnimationFrame"), "onAnimationFrame"));
    }
};
$java.oktt_TeaVMApp$2__init_ = function(var$0, var$1) {
    var$0.$this$0232 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktga_AnimPlayer$AnimationDesc() {
    var a = this; jl_Object.call(a);
    a.$listener = null;
    a.$animation = null;
    a.$speed = 0.0;
    a.$time = 0.0;
    a.$offset = 0.0;
    a.$duration3 = 0.0;
    a.$loopCount = 0;
    a.$previousTime = 0.0;
    a.$executedActions = null;
}
function oktga_AnimPlayer$AnimationDesc__init_() {
    var var_0 = new oktga_AnimPlayer$AnimationDesc();
    oktga_AnimPlayer$AnimationDesc__init_0(var_0);
    return var_0;
}
function oktga_AnimPlayer$AnimationDesc_setListener($this, $_set___) {
    $this.$listener = $_set___;
}
function oktga_AnimPlayer$AnimationDesc_getAnimation($this) {
    return $this.$animation;
}
function oktga_AnimPlayer$AnimationDesc_setAnimation($this, $_set___) {
    $this.$animation = $_set___;
}
function oktga_AnimPlayer$AnimationDesc_setSpeed($this, $_set___) {
    $this.$speed = $_set___;
}
$java.oktga_AnimPlayer$AnimationDesc_getTime = function($this) {
    return $this.$time;
};
function oktga_AnimPlayer$AnimationDesc_setTime($this, $_set___) {
    $this.$time = $_set___;
}
function oktga_AnimPlayer$AnimationDesc_getOffset($this) {
    return $this.$offset;
}
function oktga_AnimPlayer$AnimationDesc_setOffset($this, $_set___) {
    $this.$offset = $_set___;
}
function oktga_AnimPlayer$AnimationDesc_getDuration($this) {
    var var$1, $anim;
    if ($this.$duration3 >= 0.0)
        var$1 = $this.$duration3;
    else {
        $anim = $this.$animation;
        var$1 = $anim === null ? 0.0 : $anim.$getDuration() - $this.$offset;
    }
    return var$1;
}
function oktga_AnimPlayer$AnimationDesc_setDuration($this, $_set___) {
    $this.$duration3 = $_set___;
}
function oktga_AnimPlayer$AnimationDesc_getLoopCount($this) {
    return $this.$loopCount;
}
function oktga_AnimPlayer$AnimationDesc_setLoopCount($this, $_set___) {
    $this.$loopCount = $_set___;
}
$java.oktga_AnimPlayer$AnimationDesc_getPreviousTime = function($this) {
    return $this.$previousTime;
};
$java.oktga_AnimPlayer$AnimationDesc_getExecutedActions = function($this) {
    return $this.$executedActions;
};
function oktga_AnimPlayer$AnimationDesc_update($this, $delta) {
    var $diff, $duration, var$4, $i, $listener, var$7, var$8, $result;
    $this.$previousTime = $this.$time;
    if ($this.$loopCount && $this.$animation !== null) {
        $diff = $this.$speed * $delta;
        $duration = oktga_AnimPlayer$AnimationDesc_getDuration($this);
        oktm_MATH_$callClinit();
        if (!oktm_MATH_isNotZero(oktm_MATH_INSTANCE, $duration))
            var$4 = 1;
        else {
            $this.$time = $this.$time + $diff;
            var$4 = jl_Math_abs0($this.$time / $duration) | 0;
            if ($this.$time < 0.0) {
                var$4 = var$4 + 1 | 0;
                while ($this.$time < 0.0) {
                    $this.$time = $this.$time + $duration;
                }
            }
            $this.$time = jl_Math_abs0($this.$time % $duration);
        }
        $i = 0;
        while ($i < var$4) {
            if ($this.$loopCount > 0)
                $this.$loopCount = $this.$loopCount + (-1) | 0;
            $listener = $this.$listener;
            if ($this.$loopCount && $listener !== null)
                $listener.$onLoop($this);
            if (!$this.$loopCount) {
                var$7 = ((var$4 - 1 | 0) - $i | 0) * $duration;
                var$8 = $rt_compare($diff, 0.0);
                $result = var$7 + (var$8 >= 0 ? $this.$time : $duration - $this.$time);
                if (var$8 < 0)
                    $duration = 0.0;
                $this.$time = $duration;
                if ($listener !== null)
                    $listener.$onEnd($this);
                return $result;
            }
            $i = $i + 1 | 0;
        }
        return 0.0;
    }
    return $delta;
}
function oktga_AnimPlayer$AnimationDesc__init_0($this) {
    jl_Object__init_0($this);
    $this.$executedActions = ju_HashSet__init_();
}
function oktt_TeaVMApp$1() {
    jl_Object.call(this);
    this.$this$0233 = null;
}
function oktt_TeaVMApp$1__init_(var_0) {
    var var_1 = new oktt_TeaVMApp$1();
    $java.oktt_TeaVMApp$1__init_(var_1, var_0);
    return var_1;
}
$java.oktt_TeaVMApp$1_handleEvent = function($this, $it) {
    var $i, var$3;
    $i = 0;
    var$3 = oktt_TeaVMApp_getListeners($this.$this$0233).$size();
    while ($i < var$3) {
        oktt_TeaVMApp_getListeners($this.$this$0233).$get1($i).$resized(oktt_TeaVMApp_getCanvas($this.$this$0233).width, oktt_TeaVMApp_getCanvas($this.$this$0233).height);
        $i = $i + 1 | 0;
    }
};
$java.oktt_TeaVMApp$1__init_ = function(var$0, var$1) {
    var$0.$this$0233 = var$1;
    jl_Object__init_0(var$0);
};
$java.oktt_TeaVMApp$1_handleEvent$exported$0 = function(var$0, var$1) {
    $java.oktt_TeaVMApp$1_handleEvent(var$0, var$1);
};
function oooi_DxSpace$DataCallback() {
    var a = this; jl_Object.call(a);
    a.$data1 = null;
    a.$callback = null;
}
function oooi_DxSpace$DataCallback__init_(var_0, var_1) {
    var var_2 = new oooi_DxSpace$DataCallback();
    $java.oooi_DxSpace$DataCallback__init_(var_2, var_0, var_1);
    return var_2;
}
$java.oooi_DxSpace$DataCallback__init_ = function($this, $data, $callback) {
    jl_Object__init_0($this);
    $this.$data1 = $data;
    $this.$callback = $callback;
};
function otcit_FloatAnalyzer$Result() {
    var a = this; jl_Object.call(a);
    a.$mantissa = 0;
    a.$exponent = 0;
    a.$sign = 0;
}
function otcit_FloatAnalyzer$Result__init_() {
    var var_0 = new otcit_FloatAnalyzer$Result();
    otcit_FloatAnalyzer$Result__init_0(var_0);
    return var_0;
}
function otcit_FloatAnalyzer$Result__init_0($this) {
    jl_Object__init_0($this);
}
function oktgg_IGLTFMaterial$read$8$1() {
    kji_Lambda.call(this);
    this.$this$0234 = null;
}
function oktgg_IGLTFMaterial$read$8$1__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$8$1();
    $java.oktgg_IGLTFMaterial$read$8$1__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_IGLTFMaterial$read$8$1_invoke = function(var$0, var$1) {
    $java.oktgg_IGLTFMaterial$read$8$1_invoke0(var$0, var$1.$floatValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_IGLTFMaterial$read$8$1_invoke0 = function($this, $it) {
    $this.$this$0234.$this$057.$setOcclusionStrength($it);
};
$java.oktgg_IGLTFMaterial$read$8$1__init_ = function(var$0, var$1) {
    var$0.$this$0234 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktgg_IGLTFMaterial$read$8$2() {
    kji_Lambda.call(this);
    this.$this$0235 = null;
}
function oktgg_IGLTFMaterial$read$8$2__init_(var_0) {
    var var_1 = new oktgg_IGLTFMaterial$read$8$2();
    $java.oktgg_IGLTFMaterial$read$8$2__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_IGLTFMaterial$read$8$2_invoke = function(var$0, var$1) {
    $java.oktgg_IGLTFMaterial$read$8$2_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_IGLTFMaterial$read$8$2_invoke0 = function($this, $it) {
    $this.$this$0235.$this$057.$setOcclusionTextureUV($it);
};
$java.oktgg_IGLTFMaterial$read$8$2__init_ = function(var$0, var$1) {
    var$0.$this$0235 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktsg_SplitVec4Node$Companion() {
    jl_Object.call(this);
}
$java.oktsg_SplitVec4Node$Companion__init_ = function() {
    var var_0 = new oktsg_SplitVec4Node$Companion();
    oktsg_SplitVec4Node$Companion__init_0(var_0);
    return var_0;
};
function oktsg_SplitVec4Node$Companion__init_(var_0) {
    var var_1 = new oktsg_SplitVec4Node$Companion();
    $java.oktsg_SplitVec4Node$Companion__init_0(var_1, var_0);
    return var_1;
}
function oktsg_SplitVec4Node$Companion__init_0($this) {
    jl_Object__init_0($this);
}
$java.oktsg_SplitVec4Node$Companion__init_0 = function($this, $$constructor_marker) {
    oktsg_SplitVec4Node$Companion__init_0($this);
};
function jur_AbstractCharClass$LazyJavaWhitespace$1() {
    jur_AbstractCharClass.call(this);
    this.$this$0236 = null;
}
$java.jur_AbstractCharClass$LazyJavaWhitespace$1__init_ = function(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaWhitespace$1();
    $java.jur_AbstractCharClass$LazyJavaWhitespace$1__init_0(var_1, var_0);
    return var_1;
};
$java.jur_AbstractCharClass$LazyJavaWhitespace$1__init_0 = function($this, $this$0) {
    $this.$this$0236 = $this$0;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_AbstractCharClass$LazyJavaWhitespace$1_contains = function($this, $ch) {
    return $java.jl_Character_isWhitespace($ch);
};
function oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext() {
    var a = this; jl_Object.call(a);
    a.$m_stepperCallContext5 = null;
    a.$m_invI1 = null;
    a.$m_tagsTaken = null;
    a.$m_gravityTaken = null;
    a.$m_inertiaBodyIndex = null;
}
$java.oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext__init_ = function() {
    var var_0 = new oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext();
    oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext__init_(var_0);
    return var_0;
};
$java.oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext__init_0 = function(var_0) {
    var var_1 = new oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext();
    $java.oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext__init_1(var_1, var_0);
    return var_1;
};
function oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext__init_($this) {
    jl_Object__init_0($this);
    $this.$m_tagsTaken = juca_AtomicInteger__init_0();
    $this.$m_gravityTaken = juca_AtomicInteger__init_0();
    $this.$m_inertiaBodyIndex = juca_AtomicInteger__init_0();
}
$java.oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext_Initialize = function($this, $stepperCallContext, $invI) {
    $this.$m_stepperCallContext5 = $stepperCallContext;
    $this.$m_invI1 = $invI;
    juca_AtomicInteger_set($this.$m_tagsTaken, 0);
    juca_AtomicInteger_set($this.$m_gravityTaken, 0);
    juca_AtomicInteger_set($this.$m_inertiaBodyIndex, 0);
};
$java.oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext__init_1 = function($this, $x0) {
    oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext__init_($this);
};
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
$java.jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue = function($this) {
    var $chCl;
    $chCl = $java.jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function oktsg_GLSL$2() {
    kji_Lambda.call(this);
}
$java.oktsg_GLSL$2_INSTANCE = null;
$java.oktsg_GLSL$2_$callClinit = function() {
    $java.oktsg_GLSL$2_$callClinit = $rt_eraseClinit(oktsg_GLSL$2);
    $java.oktsg_GLSL$2__clinit_();
};
$java.oktsg_GLSL$2__init_ = function() {
    var var_0 = new oktsg_GLSL$2();
    oktsg_GLSL$2__init_(var_0);
    return var_0;
};
$java.oktsg_GLSL$2_invoke = function(var$0) {
    return $java.oktsg_GLSL$2_invoke0(var$0);
};
$java.oktsg_GLSL$2_invoke0 = function($this) {
    return oktsg_CameraDataNode__init_1(null, 1, null);
};
function oktsg_GLSL$2__init_(var$0) {
    $java.oktsg_GLSL$2_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktsg_GLSL$2__clinit_ = function() {
    $java.oktsg_GLSL$2_INSTANCE = $java.oktsg_GLSL$2__init_();
};
function oktsg_GLSL$1() {
    kji_Lambda.call(this);
}
$java.oktsg_GLSL$1_INSTANCE = null;
$java.oktsg_GLSL$1_$callClinit = function() {
    $java.oktsg_GLSL$1_$callClinit = $rt_eraseClinit(oktsg_GLSL$1);
    $java.oktsg_GLSL$1__clinit_();
};
$java.oktsg_GLSL$1__init_ = function() {
    var var_0 = new oktsg_GLSL$1();
    oktsg_GLSL$1__init_(var_0);
    return var_0;
};
$java.oktsg_GLSL$1_invoke = function(var$0) {
    return $java.oktsg_GLSL$1_invoke0(var$0);
};
$java.oktsg_GLSL$1_invoke0 = function($this) {
    return oktsg_VertexNode__init_(0, 0, 0, 7, null);
};
function oktsg_GLSL$1__init_(var$0) {
    $java.oktsg_GLSL$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktsg_GLSL$1__clinit_ = function() {
    $java.oktsg_GLSL$1_INSTANCE = $java.oktsg_GLSL$1__init_();
};
function otjt_Uint8Array() {
    otjt_ArrayBufferView.call(this);
}
function oktsg_GLSL$6() {
    kji_Lambda.call(this);
}
$java.oktsg_GLSL$6_INSTANCE = null;
$java.oktsg_GLSL$6_$callClinit = function() {
    $java.oktsg_GLSL$6_$callClinit = $rt_eraseClinit(oktsg_GLSL$6);
    $java.oktsg_GLSL$6__clinit_();
};
$java.oktsg_GLSL$6__init_ = function() {
    var var_0 = new oktsg_GLSL$6();
    oktsg_GLSL$6__init_(var_0);
    return var_0;
};
$java.oktsg_GLSL$6_invoke = function(var$0) {
    return $java.oktsg_GLSL$6_invoke0(var$0);
};
$java.oktsg_GLSL$6_invoke0 = function($this) {
    return oktsg_TextureNode__init_0(null, null, 0, 0, 15, null);
};
function oktsg_GLSL$6__init_(var$0) {
    $java.oktsg_GLSL$6_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktsg_GLSL$6__clinit_ = function() {
    $java.oktsg_GLSL$6_INSTANCE = $java.oktsg_GLSL$6__init_();
};
function oktsg_GLSL$5() {
    kji_Lambda.call(this);
}
$java.oktsg_GLSL$5_INSTANCE = null;
$java.oktsg_GLSL$5_$callClinit = function() {
    $java.oktsg_GLSL$5_$callClinit = $rt_eraseClinit(oktsg_GLSL$5);
    $java.oktsg_GLSL$5__clinit_();
};
$java.oktsg_GLSL$5__init_ = function() {
    var var_0 = new oktsg_GLSL$5();
    oktsg_GLSL$5__init_(var_0);
    return var_0;
};
$java.oktsg_GLSL$5_invoke = function(var$0) {
    return $java.oktsg_GLSL$5_invoke0(var$0);
};
$java.oktsg_GLSL$5_invoke0 = function($this) {
    return oktsg_OutputNode__init_1(null, null, 3, null);
};
function oktsg_GLSL$5__init_(var$0) {
    $java.oktsg_GLSL$5_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktsg_GLSL$5__clinit_ = function() {
    $java.oktsg_GLSL$5_INSTANCE = $java.oktsg_GLSL$5__init_();
};
function oktsg_GLSL$4() {
    kji_Lambda.call(this);
}
$java.oktsg_GLSL$4_INSTANCE = null;
$java.oktsg_GLSL$4_$callClinit = function() {
    $java.oktsg_GLSL$4_$callClinit = $rt_eraseClinit(oktsg_GLSL$4);
    $java.oktsg_GLSL$4__clinit_();
};
$java.oktsg_GLSL$4__init_ = function() {
    var var_0 = new oktsg_GLSL$4();
    oktsg_GLSL$4__init_(var_0);
    return var_0;
};
$java.oktsg_GLSL$4_invoke = function(var$0) {
    return $java.oktsg_GLSL$4_invoke0(var$0);
};
$java.oktsg_GLSL$4_invoke0 = function($this) {
    return oktsg_OperationNode__init_1(null, null, 0, 7, null);
};
function oktsg_GLSL$4__init_(var$0) {
    $java.oktsg_GLSL$4_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktsg_GLSL$4__clinit_ = function() {
    $java.oktsg_GLSL$4_INSTANCE = $java.oktsg_GLSL$4__init_();
};
function oktsg_GLSL$3() {
    kji_Lambda.call(this);
}
$java.oktsg_GLSL$3_INSTANCE = null;
$java.oktsg_GLSL$3_$callClinit = function() {
    $java.oktsg_GLSL$3_$callClinit = $rt_eraseClinit(oktsg_GLSL$3);
    $java.oktsg_GLSL$3__clinit_();
};
$java.oktsg_GLSL$3__init_ = function() {
    var var_0 = new oktsg_GLSL$3();
    oktsg_GLSL$3__init_(var_0);
    return var_0;
};
$java.oktsg_GLSL$3_invoke = function(var$0) {
    return $java.oktsg_GLSL$3_invoke0(var$0);
};
$java.oktsg_GLSL$3_invoke0 = function($this) {
    return oktsg_UVNode__init_();
};
function oktsg_GLSL$3__init_(var$0) {
    $java.oktsg_GLSL$3_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktsg_GLSL$3__clinit_ = function() {
    $java.oktsg_GLSL$3_INSTANCE = $java.oktsg_GLSL$3__init_();
};
function oktsg_GLSL$9() {
    kji_Lambda.call(this);
}
$java.oktsg_GLSL$9_INSTANCE = null;
$java.oktsg_GLSL$9_$callClinit = function() {
    $java.oktsg_GLSL$9_$callClinit = $rt_eraseClinit(oktsg_GLSL$9);
    $java.oktsg_GLSL$9__clinit_();
};
$java.oktsg_GLSL$9__init_ = function() {
    var var_0 = new oktsg_GLSL$9();
    oktsg_GLSL$9__init_(var_0);
    return var_0;
};
$java.oktsg_GLSL$9_invoke = function(var$0) {
    return $java.oktsg_GLSL$9_invoke0(var$0);
};
$java.oktsg_GLSL$9_invoke0 = function($this) {
    return oktsg_ToneMapNode__init_1(null, 0, 3, null);
};
function oktsg_GLSL$9__init_(var$0) {
    $java.oktsg_GLSL$9_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktsg_GLSL$9__clinit_ = function() {
    $java.oktsg_GLSL$9_INSTANCE = $java.oktsg_GLSL$9__init_();
};
function oktsg_GLSL$8() {
    kji_Lambda.call(this);
}
$java.oktsg_GLSL$8_INSTANCE = null;
$java.oktsg_GLSL$8_$callClinit = function() {
    $java.oktsg_GLSL$8_$callClinit = $rt_eraseClinit(oktsg_GLSL$8);
    $java.oktsg_GLSL$8__clinit_();
};
$java.oktsg_GLSL$8__init_ = function() {
    var var_0 = new oktsg_GLSL$8();
    oktsg_GLSL$8__init_(var_0);
    return var_0;
};
$java.oktsg_GLSL$8_invoke = function(var$0) {
    return $java.oktsg_GLSL$8_invoke0(var$0);
};
$java.oktsg_GLSL$8_invoke0 = function($this) {
    return oktsg_PrincipledBSDF__init_();
};
function oktsg_GLSL$8__init_(var$0) {
    $java.oktsg_GLSL$8_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktsg_GLSL$8__clinit_ = function() {
    $java.oktsg_GLSL$8_INSTANCE = $java.oktsg_GLSL$8__init_();
};
function oktsg_GLSL$7() {
    kji_Lambda.call(this);
}
$java.oktsg_GLSL$7_INSTANCE = null;
$java.oktsg_GLSL$7_$callClinit = function() {
    $java.oktsg_GLSL$7_$callClinit = $rt_eraseClinit(oktsg_GLSL$7);
    $java.oktsg_GLSL$7__clinit_();
};
$java.oktsg_GLSL$7__init_ = function() {
    var var_0 = new oktsg_GLSL$7();
    oktsg_GLSL$7__init_(var_0);
    return var_0;
};
$java.oktsg_GLSL$7_invoke = function(var$0) {
    return $java.oktsg_GLSL$7_invoke0(var$0);
};
$java.oktsg_GLSL$7_invoke0 = function($this) {
    return oktsg_NormalMapNode__init_1(null, 1, null);
};
function oktsg_GLSL$7__init_(var$0) {
    $java.oktsg_GLSL$7_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktsg_GLSL$7__clinit_ = function() {
    $java.oktsg_GLSL$7_INSTANCE = $java.oktsg_GLSL$7__init_();
};
function oktgg_GLTF$read$12() {
    kji_Lambda.call(this);
    this.$this$0101 = null;
}
function oktgg_GLTF$read$12__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$12();
    $java.oktgg_GLTF$read$12__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_GLTF$read$12_invoke = function(var$0, var$1) {
    $java.oktgg_GLTF$read$12_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTF$read$12_invoke0 = function($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTF$read$12$1__init_($this));
};
$java.oktgg_GLTF$read$12__init_ = function(var$0, var$1) {
    var$0.$this$0101 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktgg_GLTF$read$11() {
    kji_Lambda.call(this);
    this.$this$025 = null;
}
function oktgg_GLTF$read$11__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$11();
    $java.oktgg_GLTF$read$11__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_GLTF$read$11_invoke = function(var$0, var$1) {
    $java.oktgg_GLTF$read$11_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTF$read$11_invoke0 = function($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTF$read$11$1__init_($this));
};
$java.oktgg_GLTF$read$11__init_ = function(var$0, var$1) {
    var$0.$this$025 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function jur_AbstractCharClass$LazyJavaLowerCase() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaLowerCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLowerCase();
    jur_AbstractCharClass$LazyJavaLowerCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLowerCase__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
$java.jur_AbstractCharClass$LazyJavaLowerCase_computeValue = function($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLowerCase$1__init_($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function oktmb_MeshBuilder$createVerticesFloat$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$0237 = null;
    a.$$block0 = null;
}
function oktmb_MeshBuilder$createVerticesFloat$1__init_(var_0, var_1) {
    var var_2 = new oktmb_MeshBuilder$createVerticesFloat$1();
    $java.oktmb_MeshBuilder$createVerticesFloat$1__init_(var_2, var_0, var_1);
    return var_2;
}
$java.oktmb_MeshBuilder$createVerticesFloat$1_invoke = function(var$0, var$1) {
    $java.oktmb_MeshBuilder$createVerticesFloat$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktmb_MeshBuilder$createVerticesFloat$1_invoke0 = function($this, $$this$createVertices) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$createVertices, $rt_s(33));
    oktmb_MeshBuilder_setCurrentFloatBuffer($this.$this$0237, $$this$createVertices.$floatView());
    var$2 = oktmb_MeshBuilder_getCurrentFloatBuffer($this.$this$0237);
    $this.$$block0.$invoke1(var$2);
};
$java.oktmb_MeshBuilder$createVerticesFloat$1__init_ = function(var$0, var$1, var$2) {
    var$0.$this$0237 = var$1;
    var$0.$$block0 = var$2;
    kji_Lambda__init_0(var$0, 1);
};
function oktgg_GLTF$read$10() {
    kji_Lambda.call(this);
    this.$this$0199 = null;
}
function oktgg_GLTF$read$10__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$10();
    $java.oktgg_GLTF$read$10__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_GLTF$read$10_invoke = function(var$0, var$1) {
    $java.oktgg_GLTF$read$10_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTF$read$10_invoke0 = function($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTF$read$10$1__init_($this));
};
$java.oktgg_GLTF$read$10__init_ = function(var$0, var$1) {
    var$0.$this$0199 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktu_Color() {
    jl_Object.call(this);
}
$java.oktu_Color_WHITE_FLOAT = 0.0;
$java.oktu_Color_LIGHT_GRAY = null;
$java.oktu_Color_GRAY = null;
$java.oktu_Color_DARK_GRAY = null;
$java.oktu_Color_BLACK = null;
$java.oktu_Color_CLEAR = null;
$java.oktu_Color_BLUE = null;
$java.oktu_Color_NAVY = null;
$java.oktu_Color_ROYAL = null;
$java.oktu_Color_SLATE = null;
$java.oktu_Color_SKY = null;
$java.oktu_Color_CYAN = null;
$java.oktu_Color_TEAL = null;
$java.oktu_Color_GREEN = null;
$java.oktu_Color_CHARTREUSE = null;
$java.oktu_Color_LIME = null;
$java.oktu_Color_FOREST = null;
$java.oktu_Color_OLIVE = null;
$java.oktu_Color_YELLOW = null;
$java.oktu_Color_GOLD = null;
$java.oktu_Color_GOLDENROD = null;
$java.oktu_Color_ORANGE = null;
$java.oktu_Color_BROWN = null;
$java.oktu_Color_TAN = null;
$java.oktu_Color_FIREBRICK = null;
$java.oktu_Color_RED = null;
$java.oktu_Color_SCARLET = null;
$java.oktu_Color_CORAL = null;
$java.oktu_Color_SALMON = null;
$java.oktu_Color_PINK = null;
$java.oktu_Color_MAGENTA = null;
$java.oktu_Color_PURPLE = null;
$java.oktu_Color_VIOLET = null;
$java.oktu_Color_MAROON = null;
var oktu_Color_INSTANCE = null;
function oktu_Color_$callClinit() {
    oktu_Color_$callClinit = $rt_eraseClinit(oktu_Color);
    $java.oktu_Color__clinit_();
}
$java.oktu_Color__init_ = function() {
    var var_0 = new oktu_Color();
    oktu_Color__init_(var_0);
    return var_0;
};
$java.oktu_Color_int = function($this, $rgba8888) {
    var $newVec;
    $newVec = oktm_Vec4__init_(0.0, 0.0, 0.0, 0.0, 15, null);
    oktm_Vec4_setR($newVec, (($rgba8888 & (-16777216)) >>> 24) / 255.0);
    oktm_Vec4_setG($newVec, (($rgba8888 & 16711680) >>> 16) / 255.0);
    oktm_Vec4_setB($newVec, (($rgba8888 & 65280) >>> 8) / 255.0);
    oktm_Vec4_setA($newVec, ($rgba8888 & 255) / 255.0);
    return $newVec;
};
$java.oktu_Color_int0 = function($this, $r, $g, $b, $a) {
    return oktm_Vec4__init_0($r / 255.0, $g / 255.0, $b / 255.0, $a / 255.0);
};
$java.oktu_Color_int$default = function(var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    oktu_Color_$callClinit();
    if (var$6 & 8)
        var$5 = 255;
    return $java.oktu_Color_int0(var$1, var$2, var$3, var$4, var$5);
};
$java.oktu_Color_float = function($this, $r, $g, $b, $a) {
    return oktm_Vec4__init_0($r, $g, $b, $a);
};
$java.oktu_Color_float$default = function(var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    oktu_Color_$callClinit();
    if (var$6 & 8)
        var$5 = 1.0;
    return $java.oktu_Color_float(var$1, var$2, var$3, var$4, var$5);
};
function oktu_Color_getCYAN($this) {
    return $java.oktu_Color_CYAN;
}
function oktu_Color_getGREEN($this) {
    return $java.oktu_Color_GREEN;
}
function oktu_Color_getOLIVE($this) {
    return $java.oktu_Color_OLIVE;
}
function oktu_Color_getORANGE($this) {
    return $java.oktu_Color_ORANGE;
}
function oktu_Color_getPINK($this) {
    return $java.oktu_Color_PINK;
}
$java.oktu_Color_toFloatBits = function($this, $vec) {
    var $color;
    kji_Intrinsics_checkParameterIsNotNull($vec, $rt_s(901));
    $color = Long_or(Long_or(Long_or(Long_shl(Long_fromNumber(255.0 * $vec.$getA2()), 24), Long_shl(Long_fromNumber(255.0 * $vec.$getB2()), 16)), Long_shl(Long_fromNumber(255.0 * $vec.$getG0()), 8)), Long_fromNumber(255.0 * $vec.$getR0()));
    return $java.oktu_Color_intToFloatColor($this, $color.lo);
};
$java.oktu_Color_intToFloatColor = function($this, $value) {
    return $rt_intBitsToFloat($value & (-16777217));
};
function oktu_Color__init_($this) {
    oktu_Color_$callClinit();
    jl_Object__init_0($this);
}
$java.oktu_Color__clinit_ = function() {
    var var$1;
    var$1 = $java.oktu_Color__init_();
    oktu_Color_INSTANCE = var$1;
    oktm_IVec4_$callClinit();
    $java.oktu_Color_WHITE_FLOAT = $java.oktu_Color_toFloatBits(var$1, oktm_IVec4$Companion_getOne(oktm_IVec4_Companion));
    $java.oktu_Color_LIGHT_GRAY = $java.oktu_Color_int(var$1, (-1077952513));
    $java.oktu_Color_GRAY = $java.oktu_Color_int(var$1, 2139062271);
    $java.oktu_Color_DARK_GRAY = $java.oktu_Color_int(var$1, 1061109759);
    $java.oktu_Color_BLACK = $java.oktu_Color_float(var$1, 0.0, 0.0, 0.0, 1.0);
    $java.oktu_Color_CLEAR = oktm_IVec4$Companion_getZero(oktm_IVec4_Companion);
    $java.oktu_Color_BLUE = $java.oktu_Color_int$default(var$1, 0, 0, 255, 0, 8, null);
    $java.oktu_Color_NAVY = $java.oktu_Color_int$default(var$1, 0, 0, 128, 0, 8, null);
    $java.oktu_Color_ROYAL = $java.oktu_Color_int(var$1, 1097458175);
    $java.oktu_Color_SLATE = $java.oktu_Color_int(var$1, 1887473919);
    $java.oktu_Color_SKY = $java.oktu_Color_int(var$1, (-2016482305));
    $java.oktu_Color_CYAN = oktm_Vec4__init_0(0.0, 1.0, 1.0, 1.0);
    $java.oktu_Color_TEAL = oktm_Vec4__init_0(0.0, 0.5, 0.5, 1.0);
    $java.oktu_Color_GREEN = $java.oktu_Color_int(var$1, 16711935);
    $java.oktu_Color_CHARTREUSE = $java.oktu_Color_float$default(var$1, 0.5, 1.0, 0.0, 0.0, 8, null);
    $java.oktu_Color_LIME = $java.oktu_Color_int(var$1, 852308735);
    $java.oktu_Color_FOREST = $java.oktu_Color_int(var$1, 579543807);
    $java.oktu_Color_OLIVE = $java.oktu_Color_int(var$1, 1804477439);
    $java.oktu_Color_YELLOW = $java.oktu_Color_int(var$1, (-65281));
    $java.oktu_Color_GOLD = $java.oktu_Color_int(var$1, (-2686721));
    $java.oktu_Color_GOLDENROD = $java.oktu_Color_int(var$1, (-626712321));
    $java.oktu_Color_ORANGE = $java.oktu_Color_int$default(var$1, 255, 128, 0, 0, 8, null);
    $java.oktu_Color_BROWN = $java.oktu_Color_int(var$1, (-1958407169));
    $java.oktu_Color_TAN = $java.oktu_Color_int(var$1, (-759919361));
    $java.oktu_Color_FIREBRICK = $java.oktu_Color_int(var$1, (-1306385665));
    $java.oktu_Color_RED = $java.oktu_Color_int$default(var$1, 255, 0, 0, 0, 8, null);
    $java.oktu_Color_SCARLET = $java.oktu_Color_int$default(var$1, 255, 36, 0, 0, 8, null);
    $java.oktu_Color_CORAL = $java.oktu_Color_int(var$1, (-8433409));
    $java.oktu_Color_SALMON = $java.oktu_Color_int(var$1, (-92245249));
    $java.oktu_Color_PINK = $java.oktu_Color_int(var$1, (-9849601));
    $java.oktu_Color_MAGENTA = oktm_Vec4__init_0(1.0, 0.0, 1.0, 1.0);
    $java.oktu_Color_PURPLE = $java.oktu_Color_int(var$1, (-1608453889));
    $java.oktu_Color_VIOLET = $java.oktu_Color_int(var$1, (-293409025));
    $java.oktu_Color_MAROON = $java.oktu_Color_int(var$1, (-1339006721));
};
function oktgg_GLTF$read$17() {
    var a = this; kji_Lambda.call(a);
    a.$this$0238 = null;
    a.$$skinnedNodes = null;
}
function oktgg_GLTF$read$17__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTF$read$17();
    $java.oktgg_GLTF$read$17__init_(var_2, var_0, var_1);
    return var_2;
}
$java.oktgg_GLTF$read$17_invoke = function(var$0) {
    $java.oktgg_GLTF$read$17_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTF$read$17_invoke0 = function($this) {
    var $$this$forEach$iv, var$2, $element$iv, $it;
    $this.$this$0238.$glCalls();
    if ($this.$$skinnedNodes.$isEmpty()) {
        $$this$forEach$iv = $this.$this$0238.$getMaterials();
        var$2 = $$this$forEach$iv.$iterator();
        while (var$2.$hasNext()) {
            $element$iv = var$2.$next();
            $it = $element$iv;
            $it.$buildShaders();
        }
    }
};
$java.oktgg_GLTF$read$17__init_ = function(var$0, var$1, var$2) {
    var$0.$this$0238 = var$1;
    var$0.$$skinnedNodes = var$2;
    kji_Lambda__init_0(var$0, 0);
};
function oktts_FXAATest$testMain$1$1() {
    kji_Lambda.call(this);
    this.$this$0239 = null;
}
function oktts_FXAATest$testMain$1$1__init_(var_0) {
    var var_1 = new oktts_FXAATest$testMain$1$1();
    $java.oktts_FXAATest$testMain$1$1__init_(var_1, var_0);
    return var_1;
}
$java.oktts_FXAATest$testMain$1$1_invoke = function(var$0, var$1) {
    $java.oktts_FXAATest$testMain$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_FXAATest$testMain$1$1_invoke0 = function($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_CubeModel_render($this.$this$0239.$$model4);
};
$java.oktts_FXAATest$testMain$1$1__init_ = function(var$0, var$1) {
    var$0.$this$0239 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oom_DMatrix3() {
    jl_Object.call(this);
    this.$v5 = null;
}
$java.oom_DMatrix3_ZERO = null;
$java.oom_DMatrix3_$callClinit = function() {
    $java.oom_DMatrix3_$callClinit = $rt_eraseClinit(oom_DMatrix3);
    $java.oom_DMatrix3__clinit_();
};
function oom_DMatrix3__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new oom_DMatrix3();
    $java.oom_DMatrix3__init_(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function oom_DMatrix3__init_0(var_0) {
    var var_1 = new oom_DMatrix3();
    $java.oom_DMatrix3__init_0(var_1, var_0);
    return var_1;
}
function oom_DMatrix3__init_1() {
    var var_0 = new oom_DMatrix3();
    oom_DMatrix3__init_2(var_0);
    return var_0;
}
$java.oom_DMatrix3__init_ = function($this, $d, $e, $f, $g, $h, $i, $j, $k, $l) {
    $java.oom_DMatrix3_$callClinit();
    oom_DMatrix3__init_2($this);
    $this.$v5.data[0] = $d;
    $this.$v5.data[1] = $e;
    $this.$v5.data[2] = $f;
    $this.$v5.data[4] = $g;
    $this.$v5.data[5] = $h;
    $this.$v5.data[6] = $i;
    $this.$v5.data[8] = $j;
    $this.$v5.data[9] = $k;
    $this.$v5.data[10] = $l;
};
$java.oom_DMatrix3__init_0 = function($this, $matrix3) {
    $java.oom_DMatrix3_$callClinit();
    oom_DMatrix3__init_2($this);
    oom_DMatrix3_set($this, $matrix3);
};
function oom_DMatrix3__init_2($this) {
    $java.oom_DMatrix3_$callClinit();
    jl_Object__init_0($this);
    $this.$v5 = $rt_createDoubleArray(12);
}
function oom_DMatrix3_set($this, $m) {
    oom_DMatrix3_set00($this, $m.$get00());
    oom_DMatrix3_set01($this, $m.$get010());
    oom_DMatrix3_set02($this, $m.$get02());
    oom_DMatrix3_set10($this, $m.$get100());
    oom_DMatrix3_set11($this, $m.$get11());
    oom_DMatrix3_set12($this, $m.$get12());
    oom_DMatrix3_set20($this, $m.$get200());
    oom_DMatrix3_set21($this, $m.$get21());
    oom_DMatrix3_set22($this, $m.$get22());
    return $this;
}
$java.oom_DMatrix3_clone = function($this) {
    return oom_DMatrix3__init_0($this);
};
function oom_DMatrix3_setCol($this, $i, $v3) {
    var $ofs;
    $ofs = $i * 4 | 0;
    $this.$v5.data[$ofs] = oom_DVector3_get0($v3);
    $this.$v5.data[$ofs + 1 | 0] = oom_DVector3_get1($v3);
    $this.$v5.data[$ofs + 2 | 0] = oom_DVector3_get2($v3);
}
function oom_DMatrix3_set0($this, $i, $j, $k, $l, $m, $n, $o, $p, $q) {
    oom_DMatrix3_set00($this, $i);
    oom_DMatrix3_set01($this, $j);
    oom_DMatrix3_set02($this, $k);
    oom_DMatrix3_set10($this, $l);
    oom_DMatrix3_set11($this, $m);
    oom_DMatrix3_set12($this, $n);
    oom_DMatrix3_set20($this, $o);
    oom_DMatrix3_set21($this, $p);
    oom_DMatrix3_set22($this, $q);
}
$java.oom_DMatrix3_columnAsNewVector = function($this, $c) {
    return oom_DVector3__init_1($this.$v5.data[$c], $this.$v5.data[$c + 4 | 0], $this.$v5.data[$c + 8 | 0]);
};
function oom_DMatrix3_add($this, $m) {
    oom_DMatrix3_set00($this, oom_DMatrix3_get00($this) + $m.$get00());
    oom_DMatrix3_set01($this, oom_DMatrix3_get01($this) + $m.$get010());
    oom_DMatrix3_set02($this, oom_DMatrix3_get02($this) + $m.$get02());
    oom_DMatrix3_set10($this, oom_DMatrix3_get10($this) + $m.$get100());
    oom_DMatrix3_set11($this, oom_DMatrix3_get11($this) + $m.$get11());
    oom_DMatrix3_set12($this, oom_DMatrix3_get12($this) + $m.$get12());
    oom_DMatrix3_set20($this, oom_DMatrix3_get20($this) + $m.$get200());
    oom_DMatrix3_set21($this, oom_DMatrix3_get21($this) + $m.$get21());
    oom_DMatrix3_set22($this, oom_DMatrix3_get22($this) + $m.$get22());
    return $this;
}
function oom_DMatrix3_scale($this, $scale) {
    var $i, var$3;
    $i = 0;
    while ($i < $this.$v5.data.length) {
        var$3 = $this.$v5.data;
        var$3[$i] = var$3[$i] * $scale;
        $i = $i + 1 | 0;
    }
}
$java.oom_DMatrix3_viewCol = function($this, $column) {
    return oom_DMatrix3$DVector3ColView__init_($this, $column);
};
function oom_DMatrix3_get00($this) {
    return $this.$v5.data[0];
}
function oom_DMatrix3_get01($this) {
    return $this.$v5.data[1];
}
function oom_DMatrix3_get02($this) {
    return $this.$v5.data[2];
}
function oom_DMatrix3_get10($this) {
    return $this.$v5.data[4];
}
function oom_DMatrix3_get11($this) {
    return $this.$v5.data[5];
}
function oom_DMatrix3_get12($this) {
    return $this.$v5.data[6];
}
function oom_DMatrix3_get20($this) {
    return $this.$v5.data[8];
}
function oom_DMatrix3_get21($this) {
    return $this.$v5.data[9];
}
function oom_DMatrix3_get22($this) {
    return $this.$v5.data[10];
}
function oom_DMatrix3_set00($this, $d) {
    $this.$v5.data[0] = $d;
}
function oom_DMatrix3_set01($this, $d) {
    $this.$v5.data[1] = $d;
}
function oom_DMatrix3_set02($this, $d) {
    $this.$v5.data[2] = $d;
}
function oom_DMatrix3_set10($this, $d) {
    $this.$v5.data[4] = $d;
}
function oom_DMatrix3_set11($this, $d) {
    $this.$v5.data[5] = $d;
}
function oom_DMatrix3_set12($this, $d) {
    $this.$v5.data[6] = $d;
}
function oom_DMatrix3_set20($this, $d) {
    $this.$v5.data[8] = $d;
}
function oom_DMatrix3_set21($this, $d) {
    $this.$v5.data[9] = $d;
}
function oom_DMatrix3_set22($this, $d) {
    $this.$v5.data[10] = $d;
}
$java.oom_DMatrix3_eqIdentity = function($this) {
    $java.oom_DMatrix3_eqZero($this);
    oom_DMatrix3_set00($this, 1.0);
    oom_DMatrix3_set11($this, 1.0);
    oom_DMatrix3_set22($this, 1.0);
};
function oom_DMatrix3_setIdentity($this) {
    $java.oom_DMatrix3_eqIdentity($this);
    return $this;
}
$java.oom_DMatrix3_eqZero = function($this) {
    var $i;
    $i = 0;
    while ($i < $this.$v5.data.length) {
        $this.$v5.data[$i] = 0.0;
        $i = $i + 1 | 0;
    }
};
function oom_DMatrix3_setZero($this) {
    $java.oom_DMatrix3_eqZero($this);
}
function oom_DMatrix3_reTranspose($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = new oom_DMatrix3;
    var$2 = oom_DMatrix3_get00($this);
    var$3 = oom_DMatrix3_get10($this);
    var$4 = oom_DMatrix3_get20($this);
    var$5 = oom_DMatrix3_get01($this);
    var$6 = oom_DMatrix3_get11($this);
    var$7 = oom_DMatrix3_get21($this);
    $java.oom_DMatrix3__init_(var$1, var$2, var$3, var$4, var$5, var$6, var$7, oom_DMatrix3_get02($this), oom_DMatrix3_get12($this), oom_DMatrix3_get22($this));
    return var$1;
}
$java.oom_DMatrix3_dotCol = function($this, $col, $v3) {
    if (!$col)
        return oom_DMatrix3_get00($this) * $v3.$get01() + oom_DMatrix3_get10($this) * $v3.$get10() + oom_DMatrix3_get20($this) * $v3.$get20();
    if ($col == 1)
        return oom_DMatrix3_get01($this) * $v3.$get01() + oom_DMatrix3_get11($this) * $v3.$get10() + oom_DMatrix3_get21($this) * $v3.$get20();
    if ($col != 2)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(449)).$append1($col).$toString()));
    return oom_DMatrix3_get02($this) * $v3.$get01() + oom_DMatrix3_get12($this) * $v3.$get10() + oom_DMatrix3_get22($this) * $v3.$get20();
};
$java.oom_DMatrix3_dotRow = function($this, $row, $v3) {
    if (!$row)
        return oom_DMatrix3_get00($this) * $v3.$get01() + oom_DMatrix3_get01($this) * $v3.$get10() + oom_DMatrix3_get02($this) * $v3.$get20();
    if ($row == 1)
        return oom_DMatrix3_get10($this) * $v3.$get01() + oom_DMatrix3_get11($this) * $v3.$get10() + oom_DMatrix3_get12($this) * $v3.$get20();
    if ($row != 2)
        $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1428)).$append1($row).$toString()));
    return oom_DMatrix3_get20($this) * $v3.$get01() + oom_DMatrix3_get21($this) * $v3.$get10() + oom_DMatrix3_get22($this) * $v3.$get20();
};
$java.oom_DMatrix3_dotColCol = function($this, $col, $m2, $col2) {
    a: {
        if (!$col) {
            if (!$col2)
                return oom_DMatrix3_get00($this) * $m2.$get00() + oom_DMatrix3_get10($this) * $m2.$get100() + oom_DMatrix3_get20($this) * $m2.$get200();
            if ($col2 == 1)
                return oom_DMatrix3_get00($this) * $m2.$get010() + oom_DMatrix3_get10($this) * $m2.$get11() + oom_DMatrix3_get20($this) * $m2.$get21();
            if ($col2 != 2)
                break a;
            return oom_DMatrix3_get00($this) * $m2.$get02() + oom_DMatrix3_get10($this) * $m2.$get12() + oom_DMatrix3_get20($this) * $m2.$get22();
        }
        if ($col == 1) {
            if (!$col2)
                return oom_DMatrix3_get01($this) * $m2.$get00() + oom_DMatrix3_get11($this) * $m2.$get100() + oom_DMatrix3_get21($this) * $m2.$get200();
            if ($col2 == 1)
                return oom_DMatrix3_get01($this) * $m2.$get010() + oom_DMatrix3_get11($this) * $m2.$get11() + oom_DMatrix3_get21($this) * $m2.$get21();
            if ($col2 != 2)
                break a;
            return oom_DMatrix3_get01($this) * $m2.$get02() + oom_DMatrix3_get11($this) * $m2.$get12() + oom_DMatrix3_get21($this) * $m2.$get22();
        }
        if ($col == 2) {
            if (!$col2)
                return oom_DMatrix3_get02($this) * $m2.$get00() + oom_DMatrix3_get12($this) * $m2.$get100() + oom_DMatrix3_get22($this) * $m2.$get200();
            if ($col2 == 1)
                return oom_DMatrix3_get02($this) * $m2.$get010() + oom_DMatrix3_get12($this) * $m2.$get11() + oom_DMatrix3_get22($this) * $m2.$get21();
            if ($col2 == 2)
                return oom_DMatrix3_get02($this) * $m2.$get02() + oom_DMatrix3_get12($this) * $m2.$get12() + oom_DMatrix3_get22($this) * $m2.$get22();
        }
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(449)).$append1($col).$append($rt_s(1429)).$append1($col2).$toString()));
};
$java.oom_DMatrix3_dotRowCol = function($this, $row, $m2, $col2) {
    a: {
        if (!$row) {
            if (!$col2)
                return oom_DMatrix3_get00($this) * $m2.$get00() + oom_DMatrix3_get01($this) * $m2.$get100() + oom_DMatrix3_get02($this) * $m2.$get200();
            if ($col2 == 1)
                return oom_DMatrix3_get00($this) * $m2.$get010() + oom_DMatrix3_get01($this) * $m2.$get11() + oom_DMatrix3_get02($this) * $m2.$get21();
            if ($col2 != 2)
                break a;
            return oom_DMatrix3_get00($this) * $m2.$get02() + oom_DMatrix3_get01($this) * $m2.$get12() + oom_DMatrix3_get02($this) * $m2.$get22();
        }
        if ($row == 1) {
            if (!$col2)
                return oom_DMatrix3_get10($this) * $m2.$get00() + oom_DMatrix3_get11($this) * $m2.$get100() + oom_DMatrix3_get12($this) * $m2.$get200();
            if ($col2 == 1)
                return oom_DMatrix3_get10($this) * $m2.$get010() + oom_DMatrix3_get11($this) * $m2.$get11() + oom_DMatrix3_get12($this) * $m2.$get21();
            if ($col2 != 2)
                break a;
            return oom_DMatrix3_get10($this) * $m2.$get02() + oom_DMatrix3_get11($this) * $m2.$get12() + oom_DMatrix3_get12($this) * $m2.$get22();
        }
        if ($row == 2) {
            if (!$col2)
                return oom_DMatrix3_get20($this) * $m2.$get00() + oom_DMatrix3_get21($this) * $m2.$get100() + oom_DMatrix3_get22($this) * $m2.$get200();
            if ($col2 == 1)
                return oom_DMatrix3_get20($this) * $m2.$get010() + oom_DMatrix3_get21($this) * $m2.$get11() + oom_DMatrix3_get22($this) * $m2.$get21();
            if ($col2 == 2)
                return oom_DMatrix3_get20($this) * $m2.$get02() + oom_DMatrix3_get21($this) * $m2.$get12() + oom_DMatrix3_get22($this) * $m2.$get22();
        }
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1428)).$append1($row).$append($rt_s(1429)).$append1($col2).$toString()));
};
$java.oom_DMatrix3_dotRowRow = function($this, $row, $m2, $row2) {
    a: {
        if (!$row) {
            if (!$row2)
                return oom_DMatrix3_get00($this) * $m2.$get00() + oom_DMatrix3_get01($this) * $m2.$get010() + oom_DMatrix3_get02($this) * $m2.$get02();
            if ($row2 == 1)
                return oom_DMatrix3_get00($this) * $m2.$get100() + oom_DMatrix3_get01($this) * $m2.$get11() + oom_DMatrix3_get02($this) * $m2.$get12();
            if ($row2 != 2)
                break a;
            return oom_DMatrix3_get00($this) * $m2.$get200() + oom_DMatrix3_get01($this) * $m2.$get21() + oom_DMatrix3_get02($this) * $m2.$get22();
        }
        if ($row == 1) {
            if (!$row2)
                return oom_DMatrix3_get10($this) * $m2.$get00() + oom_DMatrix3_get11($this) * $m2.$get010() + oom_DMatrix3_get12($this) * $m2.$get02();
            if ($row2 == 1)
                return oom_DMatrix3_get10($this) * $m2.$get100() + oom_DMatrix3_get11($this) * $m2.$get11() + oom_DMatrix3_get12($this) * $m2.$get12();
            if ($row2 != 2)
                break a;
            return oom_DMatrix3_get10($this) * $m2.$get200() + oom_DMatrix3_get11($this) * $m2.$get21() + oom_DMatrix3_get12($this) * $m2.$get22();
        }
        if ($row == 2) {
            if (!$row2)
                return oom_DMatrix3_get20($this) * $m2.$get00() + oom_DMatrix3_get21($this) * $m2.$get010() + oom_DMatrix3_get22($this) * $m2.$get02();
            if ($row2 == 1)
                return oom_DMatrix3_get20($this) * $m2.$get100() + oom_DMatrix3_get21($this) * $m2.$get11() + oom_DMatrix3_get22($this) * $m2.$get12();
            if ($row2 == 2)
                return oom_DMatrix3_get20($this) * $m2.$get200() + oom_DMatrix3_get21($this) * $m2.$get21() + oom_DMatrix3_get22($this) * $m2.$get22();
        }
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1428)).$append1($row).$append($rt_s(1430)).$append1($row2).$toString()));
};
function oom_DMatrix3_get($this, $i, $j) {
    return $this.$v5.data[($i * 4 | 0) + $j | 0];
}
function oom_DMatrix3_set1($this, $i, $j, $a) {
    $this.$v5.data[($i * 4 | 0) + $j | 0] = $a;
}
function oom_DMatrix3_add0($this, $i, $j, $d) {
    var var$4, var$5;
    var$4 = $this.$v5.data;
    var$5 = ($i * 4 | 0) + $j | 0;
    var$4[var$5] = var$4[var$5] + $d;
}
$java.oom_DMatrix3_sub = function($this, $i, $j, $d) {
    var var$4, var$5;
    var$4 = $this.$v5.data;
    var$5 = ($i * 4 | 0) + $j | 0;
    var$4[var$5] = var$4[var$5] - $d;
};
function oom_DMatrix3_access$000($x0) {
    $java.oom_DMatrix3_$callClinit();
    return $x0.$v5;
}
$java.oom_DMatrix3__clinit_ = function() {
    $java.oom_DMatrix3_ZERO = oom_DMatrix3__init_1();
};
function oktgg_GLTF$read$16() {
    var a = this; kji_Lambda.call(a);
    a.$this$046 = null;
    a.$$loadedSkinnedNum = null;
    a.$$skinnedNodes0 = null;
}
function oktgg_GLTF$read$16__init_(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTF$read$16();
    $java.oktgg_GLTF$read$16__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
$java.oktgg_GLTF$read$16_invoke = function(var$0, var$1) {
    $java.oktgg_GLTF$read$16_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTF$read$16_invoke0 = function($this, $it) {
    var var$2, $$this$forEach$iv, $element$iv;
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    var$2 = $this.$$loadedSkinnedNum;
    var$2.$element = var$2.$element + 1 | 0;
    if ($this.$$loadedSkinnedNum.$element == $this.$$skinnedNodes0.$size()) {
        if (oktgg_GLTFConf_getSeparateThread($this.$this$046.$getConf())) {
            oktg_GL_$callClinit();
            oktg_GL_call$default(oktg_GL_INSTANCE, null, oktgg_GLTF$read$16$1__init_($this), 1, null);
        } else {
            $$this$forEach$iv = $this.$this$046.$getMaterials();
            var$2 = $$this$forEach$iv.$iterator();
            while (var$2.$hasNext()) {
                $element$iv = var$2.$next();
                $it = $element$iv;
                $it.$buildShaders();
            }
        }
    }
};
$java.oktgg_GLTF$read$16__init_ = function(var$0, var$1, var$2, var$3) {
    var$0.$this$046 = var$1;
    var$0.$$loadedSkinnedNum = var$2;
    var$0.$$skinnedNodes0 = var$3;
    kji_Lambda__init_0(var$0, 1);
};
function oktgg_GLTF$read$15() {
    kji_Lambda.call(this);
    this.$this$0240 = null;
}
function oktgg_GLTF$read$15__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$15();
    $java.oktgg_GLTF$read$15__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_GLTF$read$15_invoke = function(var$0, var$1) {
    $java.oktgg_GLTF$read$15_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTF$read$15_invoke0 = function($this, $it) {
    var var$2, var$3;
    $this.$this$0240.$setMainSceneIndex($it);
    var$2 = $this.$this$0240;
    var$3 = kc_CollectionsKt___CollectionsKt_getOrNull($this.$this$0240.$getScenes(), $it);
    var$2.$setScene(var$3 === null ? null : oktgg_GLTFScene_getScene(var$3));
    $this.$this$0240.$setData($this.$this$0240.$getScene());
};
$java.oktgg_GLTF$read$15__init_ = function(var$0, var$1) {
    var$0.$this$0240 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktgg_GLTF$read$14() {
    kji_Lambda.call(this);
    this.$this$0221 = null;
}
function oktgg_GLTF$read$14__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$14();
    $java.oktgg_GLTF$read$14__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_GLTF$read$14_invoke = function(var$0, var$1) {
    $java.oktgg_GLTF$read$14_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTF$read$14_invoke0 = function($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs($java.oktgg_GLTF$read$14$1__init_($this));
};
$java.oktgg_GLTF$read$14__init_ = function(var$0, var$1) {
    var$0.$this$0221 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktgg_GLTF$read$13() {
    kji_Lambda.call(this);
    this.$this$0160 = null;
}
function oktgg_GLTF$read$13__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$13();
    $java.oktgg_GLTF$read$13__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_GLTF$read$13_invoke = function(var$0, var$1) {
    $java.oktgg_GLTF$read$13_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTF$read$13_invoke0 = function($this, $$this$array) {
    kji_Intrinsics_checkParameterIsNotNull($$this$array, $rt_s(33));
    $$this$array.$objs(oktgg_GLTF$read$13$1__init_($this));
};
$java.oktgg_GLTF$read$13__init_ = function(var$0, var$1) {
    var$0.$this$0160 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktm_IMat4$Companion$Build$1() {
    kji_Lambda.call(this);
}
var oktm_IMat4$Companion$Build$1_INSTANCE = null;
function oktm_IMat4$Companion$Build$1_$callClinit() {
    oktm_IMat4$Companion$Build$1_$callClinit = $rt_eraseClinit(oktm_IMat4$Companion$Build$1);
    $java.oktm_IMat4$Companion$Build$1__clinit_();
}
$java.oktm_IMat4$Companion$Build$1__init_ = function() {
    var var_0 = new oktm_IMat4$Companion$Build$1();
    oktm_IMat4$Companion$Build$1__init_(var_0);
    return var_0;
};
$java.oktm_IMat4$Companion$Build$1_invoke = function(var$0) {
    return $java.oktm_IMat4$Companion$Build$1_invoke0(var$0);
};
$java.oktm_IMat4$Companion$Build$1_invoke0 = function($this) {
    return oktm_Mat4__init_();
};
function oktm_IMat4$Companion$Build$1__init_(var$0) {
    oktm_IMat4$Companion$Build$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktm_IMat4$Companion$Build$1__clinit_ = function() {
    oktm_IMat4$Companion$Build$1_INSTANCE = $java.oktm_IMat4$Companion$Build$1__init_();
};
function okttm_PlaneMeshBuilderTest() {
    jl_Object.call(this);
}
function okttm_PlaneMeshBuilderTest__init_() {
    var var_0 = new okttm_PlaneMeshBuilderTest();
    okttm_PlaneMeshBuilderTest__init_0(var_0);
    return var_0;
}
$java.okttm_PlaneMeshBuilderTest_getName = function($this) {
    return $rt_s(1431);
};
$java.okttm_PlaneMeshBuilderTest_testMain = function($this) {
    var $shader, var$2, var$3, var$4, var$5, $mesh, var$7, var$8, $cubeMatrix4, $temp;
    $shader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($shader, $rt_s(456), $rt_s(457), var$2, 0, var$3, 0, var$4, 124, var$5);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, okts_IShader$DefaultImpls_sourceCode$default($shader, 0, 1, null), null, 2, null);
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    $mesh = oktmb_MeshBuilder_build$default(oktmb_PlaneMeshBuilder__init_(4.0, 4.0, 5, 5, null, null, 48, null), null, 1, null);
    oktgc_ActiveCamera_$callClinit();
    var$7 = oktgc_ActiveCamera_INSTANCE;
    var$2 = oktgc_Camera__init_(null, null, null, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4095, null);
    var$8 = oktm_Vec3__init_0(1.0, 3.0, 1.0);
    oktm_IVec3_$callClinit();
    oktgc_ICamera$DefaultImpls_lookAt$default(var$2, var$8, oktm_IVec3$Companion_getZero(oktm_IVec3_Companion), null, 4, null);
    oktgc_Camera_setNear(var$2, 0.10000000149011612);
    oktgc_Camera_setFar(var$2, 100.0);
    var$2.$update0();
    oktgc_ActiveCamera_setApi(var$7, var$2);
    $cubeMatrix4 = oktm_Mat4__init_();
    $temp = oktm_Mat4__init_();
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, $java.okttm_PlaneMeshBuilderTest$testMain$2__init_($cubeMatrix4, $shader, $temp, $mesh), 1, null);
};
function okttm_PlaneMeshBuilderTest__init_0($this) {
    jl_Object__init_0($this);
}
function ju_GenericEnumSet() {
    var a = this; ju_EnumSet.call(a);
    a.$cls = null;
    a.$bits0 = null;
}
function ju_GenericEnumSet__init_(var_0) {
    var var_1 = new ju_GenericEnumSet();
    $java.ju_GenericEnumSet__init_(var_1, var_0);
    return var_1;
}
$java.ju_GenericEnumSet__init_ = function($this, $cls) {
    var $constantCount, $bitCount;
    ju_EnumSet__init_0($this);
    $this.$cls = $cls;
    $constantCount = $java.ju_GenericEnumSet_getConstants($cls).data.length;
    $bitCount = (($constantCount - 1 | 0) / 32 | 0) + 1 | 0;
    $this.$bits0 = $rt_createIntArray($bitCount);
};
$java.ju_GenericEnumSet_getConstants = function($cls) {
    return otp_Platform_getEnumConstants($cls.$getPlatformClass());
};
$java.ju_GenericEnumSet_contains = function($this, $o) {
    var $n, $bitNumber, $bit;
    if (!$this.$cls.$isInstance0($o))
        return 0;
    $n = jl_Enum_ordinal($o);
    $bitNumber = $n / 32 | 0;
    $bit = 1 << ($n % 32 | 0);
    return !($this.$bits0.data[$bitNumber] & $bit) ? 0 : 1;
};
$java.ju_GenericEnumSet_fastAdd = function($this, $t) {
    var $n, $bitNumber, var$4;
    $n = jl_Enum_ordinal($t);
    $bitNumber = $n / 32 | 0;
    var$4 = $this.$bits0.data;
    var$4[$bitNumber] = var$4[$bitNumber] | 1 << ($n % 32 | 0);
};
function jl_ClassLoader() {
    jl_Object.call(this);
    this.$parent1 = null;
}
$java.jl_ClassLoader_systemClassLoader = null;
$java.jl_ClassLoader_$callClinit = function() {
    $java.jl_ClassLoader_$callClinit = $rt_eraseClinit(jl_ClassLoader);
    $java.jl_ClassLoader__clinit_();
};
$java.jl_ClassLoader__init_ = function() {
    var var_0 = new jl_ClassLoader();
    $java.jl_ClassLoader__init_0(var_0);
    return var_0;
};
$java.jl_ClassLoader__init_1 = function(var_0) {
    var var_1 = new jl_ClassLoader();
    $java.jl_ClassLoader__init_2(var_1, var_0);
    return var_1;
};
$java.jl_ClassLoader__init_0 = function($this) {
    $java.jl_ClassLoader_$callClinit();
    $java.jl_ClassLoader__init_2($this, null);
};
$java.jl_ClassLoader__init_2 = function($this, $parent) {
    $java.jl_ClassLoader_$callClinit();
    jl_Object__init_0($this);
    $this.$parent1 = $parent;
};
function jl_ClassLoader_getSystemClassLoader() {
    $java.jl_ClassLoader_$callClinit();
    return $java.jl_ClassLoader_systemClassLoader;
}
$java.jl_ClassLoader__clinit_ = function() {
    $java.jl_ClassLoader_systemClassLoader = $java.jl_SystemClassLoader__init_();
};
function ju_ConcurrentModificationException() {
    jl_RuntimeException.call(this);
}
function ju_ConcurrentModificationException__init_() {
    var var_0 = new ju_ConcurrentModificationException();
    ju_ConcurrentModificationException__init_0(var_0);
    return var_0;
}
function ju_ConcurrentModificationException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function ju_Hashtable$1() {
    jl_Object.call(this);
}
function ju_Hashtable$1__init_() {
    var var_0 = new ju_Hashtable$1();
    ju_Hashtable$1__init_0(var_0);
    return var_0;
}
function ju_Hashtable$1__init_0($this) {
    jl_Object__init_0($this);
}
function ju_Hashtable$2() {
    jl_Object.call(this);
}
function ju_Hashtable$2__init_() {
    var var_0 = new ju_Hashtable$2();
    ju_Hashtable$2__init_0(var_0);
    return var_0;
}
function ju_Hashtable$2__init_0($this) {
    jl_Object__init_0($this);
}
function oktgg_GLTFMaterial() {
    var a = this; jl_Object.call(a);
    a.$name47 = null;
    a.$alphaMode1 = null;
    a.$alphaCutoff1 = 0.0;
    a.$doubleSided = 0;
    a.$baseColorTexture = 0;
    a.$baseColorTextureUV = 0;
    a.$baseColor0 = null;
    a.$metallic0 = 0.0;
    a.$roughness0 = 0.0;
    a.$metallicRoughnessTexture = 0;
    a.$metallicRoughnessTextureUV = 0;
    a.$occlusionStrength = 0.0;
    a.$occlusionTexture = 0;
    a.$occlusionTextureUV = 0;
    a.$normalScale = 0.0;
    a.$normalTexture = 0;
    a.$normalTextureUV = 0;
    a.$emissiveFactor = null;
    a.$emissiveTexture = 0;
    a.$emissiveTextureUV = 0;
    a.$gltf12 = null;
    a.$elementIndex11 = 0;
    a.$material2 = null;
}
$java.oktgg_GLTFMaterial__init_ = function(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFMaterial();
    $java.oktgg_GLTFMaterial__init_0(var_3, var_0, var_1, var_2);
    return var_3;
};
function oktgg_GLTFMaterial__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgg_GLTFMaterial();
    $java.oktgg_GLTFMaterial__init_1(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
$java.oktgg_GLTFMaterial_getName = function($this) {
    return $this.$name47;
};
$java.oktgg_GLTFMaterial_setName = function($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name47 = $_set___;
};
$java.oktgg_GLTFMaterial_getAlphaMode = function($this) {
    return $this.$alphaMode1;
};
$java.oktgg_GLTFMaterial_setAlphaMode = function($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$alphaMode1 = $_set___;
};
$java.oktgg_GLTFMaterial_getAlphaCutoff = function($this) {
    return $this.$alphaCutoff1;
};
$java.oktgg_GLTFMaterial_setAlphaCutoff = function($this, $_set___) {
    $this.$alphaCutoff1 = $_set___;
};
$java.oktgg_GLTFMaterial_getDoubleSided = function($this) {
    return $this.$doubleSided;
};
$java.oktgg_GLTFMaterial_setDoubleSided = function($this, $_set___) {
    $this.$doubleSided = $_set___;
};
$java.oktgg_GLTFMaterial_getBaseColorTexture = function($this) {
    return $this.$baseColorTexture;
};
$java.oktgg_GLTFMaterial_setBaseColorTexture = function($this, $_set___) {
    $this.$baseColorTexture = $_set___;
};
$java.oktgg_GLTFMaterial_getBaseColorTextureUV = function($this) {
    return $this.$baseColorTextureUV;
};
$java.oktgg_GLTFMaterial_setBaseColorTextureUV = function($this, $_set___) {
    $this.$baseColorTextureUV = $_set___;
};
$java.oktgg_GLTFMaterial_setBaseColor = function($this, $_set___) {
    $this.$baseColor0 = $_set___;
};
$java.oktgg_GLTFMaterial_setMetallic = function($this, $_set___) {
    $this.$metallic0 = $_set___;
};
$java.oktgg_GLTFMaterial_setRoughness = function($this, $_set___) {
    $this.$roughness0 = $_set___;
};
$java.oktgg_GLTFMaterial_getMetallicRoughnessTexture = function($this) {
    return $this.$metallicRoughnessTexture;
};
$java.oktgg_GLTFMaterial_setMetallicRoughnessTexture = function($this, $_set___) {
    $this.$metallicRoughnessTexture = $_set___;
};
$java.oktgg_GLTFMaterial_getMetallicRoughnessTextureUV = function($this) {
    return $this.$metallicRoughnessTextureUV;
};
$java.oktgg_GLTFMaterial_setMetallicRoughnessTextureUV = function($this, $_set___) {
    $this.$metallicRoughnessTextureUV = $_set___;
};
$java.oktgg_GLTFMaterial_setOcclusionStrength = function($this, $_set___) {
    $this.$occlusionStrength = $_set___;
};
$java.oktgg_GLTFMaterial_getOcclusionTexture = function($this) {
    return $this.$occlusionTexture;
};
$java.oktgg_GLTFMaterial_setOcclusionTexture = function($this, $_set___) {
    $this.$occlusionTexture = $_set___;
};
$java.oktgg_GLTFMaterial_getOcclusionTextureUV = function($this) {
    return $this.$occlusionTextureUV;
};
$java.oktgg_GLTFMaterial_setOcclusionTextureUV = function($this, $_set___) {
    $this.$occlusionTextureUV = $_set___;
};
$java.oktgg_GLTFMaterial_setNormalScale = function($this, $_set___) {
    $this.$normalScale = $_set___;
};
$java.oktgg_GLTFMaterial_getNormalTexture = function($this) {
    return $this.$normalTexture;
};
$java.oktgg_GLTFMaterial_setNormalTexture = function($this, $_set___) {
    $this.$normalTexture = $_set___;
};
$java.oktgg_GLTFMaterial_getNormalTextureUV = function($this) {
    return $this.$normalTextureUV;
};
$java.oktgg_GLTFMaterial_setNormalTextureUV = function($this, $_set___) {
    $this.$normalTextureUV = $_set___;
};
$java.oktgg_GLTFMaterial_setEmissiveFactor = function($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$emissiveFactor = $_set___;
};
$java.oktgg_GLTFMaterial_getEmissiveTexture = function($this) {
    return $this.$emissiveTexture;
};
$java.oktgg_GLTFMaterial_setEmissiveTexture = function($this, $_set___) {
    $this.$emissiveTexture = $_set___;
};
$java.oktgg_GLTFMaterial_getEmissiveTextureUV = function($this) {
    return $this.$emissiveTextureUV;
};
$java.oktgg_GLTFMaterial_setEmissiveTextureUV = function($this, $_set___) {
    $this.$emissiveTextureUV = $_set___;
};
$java.oktgg_GLTFMaterial_getGltf = function($this) {
    return $this.$gltf12;
};
$java.oktgg_GLTFMaterial_getMaterial = function($this) {
    return $this.$material2;
};
$java.oktgg_GLTFMaterial__init_0 = function($this, $gltf, $elementIndex, $material) {
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($material, $rt_s(1073));
    jl_Object__init_0($this);
    $this.$gltf12 = $gltf;
    $this.$elementIndex11 = $elementIndex;
    $this.$material2 = $material;
    $this.$name47 = $rt_s(6);
    $this.$alphaMode1 = $rt_s(881);
    $this.$alphaCutoff1 = 0.5;
    $this.$baseColorTexture = (-1);
    $this.$roughness0 = 1.0;
    $this.$metallicRoughnessTexture = (-1);
    $this.$occlusionStrength = 1.0;
    $this.$occlusionTexture = (-1);
    $this.$normalScale = 1.0;
    $this.$normalTexture = (-1);
    oktm_IVec3_$callClinit();
    $this.$emissiveFactor = oktm_IVec3$Companion_getZero(oktm_IVec3_Companion);
    $this.$emissiveTexture = (-1);
};
$java.oktgg_GLTFMaterial__init_1 = function(var$0, var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 4)
        var$3 = oktg_Material__init_(null, null, 0.0, 0.0, 0.0, 0, 0, 0, 0, null, null, 2047, null);
    $java.oktgg_GLTFMaterial__init_0(var$0, var$1, var$2, var$3);
};
$java.oktgg_GLTFMaterial_buildShaders = function($this) {
    oktgg_IGLTFMaterial$DefaultImpls_buildShaders($this);
};
$java.oktgg_GLTFMaterial_read = function($this, $json) {
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    oktgg_IGLTFMaterial$DefaultImpls_read($this, $json);
};
function oktts_CascadedShadowMappingBaseTest() {
    var a = this; jl_Object.call(a);
    a.$lightDirection0 = null;
    a.$numCascades0 = 4;
    a.$cascadeEnd0 = null;
    a.$lightView0 = null;
    a.$sceneCameraFrustumPoints0 = null;
    a.$lightProj0 = null;
    a.$tmpMat0 = null;
    a.$ligthPos = null;
    a.$centroid0 = null;
    a.$sceneCameraFrustum0 = null;
    a.$lightPositionOffsetMul = 5.0;
}
function oktts_CascadedShadowMappingBaseTest__init_() {
    var var_0 = new oktts_CascadedShadowMappingBaseTest();
    oktts_CascadedShadowMappingBaseTest__init_0(var_0);
    return var_0;
}
$java.oktts_CascadedShadowMappingBaseTest_getName = function($this) {
    return $rt_s(1432);
};
function oktts_CascadedShadowMappingBaseTest_getNumCascades($this) {
    return $this.$numCascades0;
}
function oktts_CascadedShadowMappingBaseTest_getCascadeEnd($this) {
    return $this.$cascadeEnd0;
}
function oktts_CascadedShadowMappingBaseTest_getLightProj($this) {
    return $this.$lightProj0;
}
function oktts_CascadedShadowMappingBaseTest_updateFrustums($this) {
    var $sceneCameraFrustumPoints, var$2, var$3, var$4, $camFarSubNear, $i, var$7, $frustumPoints, $alphaNear, $j, $p, var$12, $i_0, $alphaFar, var$15, $minX, $maxX, $minY, $maxY, $minZ, $maxZ, $vW, $lightMat, var$24;
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    oktm_Frustum_update($this.$sceneCameraFrustum0, oktgc_ActiveCamera_getInverseViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $sceneCameraFrustumPoints = oktm_Frustum_getPoints($this.$sceneCameraFrustum0);
    var$2 = $this.$lightView0;
    var$3 = oktgc_ActiveCamera_getPosition(oktgc_ActiveCamera_INSTANCE);
    var$4 = $this.$lightDirection0;
    oktm_IVec3_$callClinit();
    var$2.$setToLookAt(var$3, var$4, oktm_IVec3$Companion_getY(oktm_IVec3_Companion));
    $camFarSubNear = oktgc_ActiveCamera_getFar(oktgc_ActiveCamera_INSTANCE);
    $i = 0;
    var$7 = $this.$numCascades0;
    while ($i < var$7) {
        $frustumPoints = $this.$sceneCameraFrustumPoints0.data[$i];
        $this.$centroid0.$set44(0.0, 0.0, 0.0);
        $alphaNear = $this.$cascadeEnd0.data[$i].$floatValue() / $camFarSubNear;
        $j = 0;
        while ($j < 4) {
            $p = $frustumPoints.$get1($j);
            $p.$set11($sceneCameraFrustumPoints.$get1($j)).$lerp($sceneCameraFrustumPoints.$get1($j + 4 | 0), $alphaNear);
            $this.$centroid0.$add8($p);
            $j = $j + 1 | 0;
        }
        var$12 = $this.$cascadeEnd0.data;
        $i_0 = $i + 1 | 0;
        $alphaFar = var$12[$i_0].$floatValue() / $camFarSubNear;
        $j = 0;
        while ($j < 4) {
            var$15 = $j + 4 | 0;
            $p = $frustumPoints.$get1(var$15);
            $p.$set11($sceneCameraFrustumPoints.$get1($j)).$lerp($sceneCameraFrustumPoints.$get1(var$15), $alphaFar);
            $this.$centroid0.$add8($p);
            $j = $j + 1 | 0;
        }
        $this.$centroid0.$scl(0.125);
        kji_FloatCompanionObject_$callClinit();
        $minX = kji_FloatCompanionObject_getMAX_VALUE(kji_FloatCompanionObject_INSTANCE);
        $maxX = kji_FloatCompanionObject_getMIN_VALUE(kji_FloatCompanionObject_INSTANCE);
        $minY = kji_FloatCompanionObject_getMAX_VALUE(kji_FloatCompanionObject_INSTANCE);
        $maxY = kji_FloatCompanionObject_getMIN_VALUE(kji_FloatCompanionObject_INSTANCE);
        $minZ = kji_FloatCompanionObject_getMAX_VALUE(kji_FloatCompanionObject_INSTANCE);
        $maxZ = kji_FloatCompanionObject_getMIN_VALUE(kji_FloatCompanionObject_INSTANCE);
        $this.$lightView0.$setToLookAt($this.$centroid0, $this.$lightDirection0, oktm_IVec3$Companion_getY(oktm_IVec3_Companion));
        $j = 0;
        while ($j < 8) {
            $vW = $frustumPoints.$get1($j).$mul0($this.$lightView0);
            $minX = jl_Math_min1($minX, $vW.$getX0());
            $maxX = jl_Math_max1($maxX, $vW.$getX0());
            $minY = jl_Math_min1($minY, $vW.$getY0());
            $maxY = jl_Math_max1($maxY, $vW.$getY0());
            $minZ = jl_Math_min1($minZ, $vW.$getZ());
            $maxZ = jl_Math_max1($maxZ, $vW.$getZ());
            $j = $j + 1 | 0;
        }
        $lightMat = $this.$lightProj0.data[$i];
        var$24 = ($maxZ - $minZ) * $this.$lightPositionOffsetMul;
        $lightMat.$setToOrtho($minX, $maxX, $minY, $maxY, 0.0, var$24);
        $this.$ligthPos.$set11($this.$lightDirection0).$scl( -$maxZ * $this.$lightPositionOffsetMul).$add8($this.$centroid0);
        $this.$tmpMat0.$setToLookAt($this.$ligthPos, $this.$lightDirection0, oktm_IVec3$Companion_getY(oktm_IVec3_Companion));
        $lightMat.$mul($this.$tmpMat0);
        $i = $i_0;
    }
}
$java.oktts_CascadedShadowMappingBaseTest_testMain = function($this) {
    var $sceneObjectShader, var$2, var$3, var$4, var$5, var$6, var$7, $i, var$9, $depthRenderShader, var$11, var$12, var$13, $buffer, $cube, $plane, $cubeColor, $control, $screenQuad, $cubesStartX, $cubesEndX, $cubesStepX, $cubesStartZ, $cubesEndZ, $cubesStepZ, $cubesY;
    $sceneObjectShader = new okts_Shader;
    var$2 = jl_StringBuilder__init_().$append($rt_s(1433));
    var$2 = var$2.$append1($this.$numCascades0).$append($rt_s(1434));
    var$2 = var$2.$append1($this.$numCascades0).$append($rt_s(1435));
    var$3 = var$2.$append1($this.$numCascades0).$append($rt_s(1436)).$toString();
    var$2 = jl_StringBuilder__init_().$append($rt_s(1437));
    var$2 = var$2.$append1($this.$numCascades0).$append($rt_s(1438));
    var$2 = var$2.$append1($this.$numCascades0).$append($rt_s(1434));
    var$2 = var$2.$append1($this.$numCascades0).$append($rt_s(1439));
    var$4 = var$2.$append1($this.$numCascades0).$append($rt_s(1440)).$toString();
    var$5 = null;
    var$2 = null;
    var$6 = null;
    var$7 = null;
    okts_Shader__init_($sceneObjectShader, var$3, var$4, var$5, 0, var$2, 0, var$6, 124, var$7);
    $sceneObjectShader.$bind();
    $i = 0;
    var$9 = $this.$numCascades0;
    while ($i < var$9) {
        $sceneObjectShader.$set35(jl_StringBuilder__init_().$append($rt_s(1441)).$append1($i).$append12(93).$toString(), $i);
        $i = $i + 1 | 0;
    }
    $depthRenderShader = new okts_Shader;
    var$4 = null;
    var$5 = null;
    var$6 = null;
    var$7 = null;
    okts_Shader__init_($depthRenderShader, $rt_s(1347), $rt_s(1348), var$4, 0, var$5, 0, var$6, 124, var$7);
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_setApi(oktgc_ActiveCamera_INSTANCE, oktgc_Camera__init_(null, null, null, 0.10000000149011612, 200.0, 0.0, 0.0, 0.0, 0, 0.0, null, 0, 4071, null));
    oktts_CascadedShadowMappingBaseTest_updateFrustums($this);
    var$9 = $this.$numCascades0;
    var$11 = $rt_createArray(oktt_FrameBuffer, var$9);
    var$12 = 0;
    while (var$12 < var$9) {
        var$13 = var$11.data;
        $buffer = oktt_FrameBuffer__init_0(1024, 1024);
        var$2 = oktt_FrameBuffer_getAttachments($buffer);
        oktt_Attachments_$callClinit();
        var$2.$add1(oktt_Attachments_depth$default(oktt_Attachments_INSTANCE, 0, 0, 0, 0, 0, 31, null));
        oktt_FrameBuffer_buildAttachments($buffer);
        var$2 = oktt_FrameBuffer_getTexture($buffer, 0);
        var$2.$bind();
        var$2.$setMinFilter(9728);
        var$2.$setMagFilter(9728);
        var$13[var$12] = $buffer;
        var$12 = var$12 + 1 | 0;
    }
    $cube = oktmb_MeshBuilder_build$default(oktmb_BoxMeshBuilder__init_0(2.0, 2.0, 2.0), null, 1, null);
    $plane = oktmb_MeshBuilder_build$default(oktmb_PlaneMeshBuilder__init_(500.0, 500.0, 0, 0, null, null, 60, null), null, 1, null);
    $cubeColor = oktm_Vec4__init_0(1.0, 0.5, 0.0, 1.0);
    oktg_GL_$callClinit();
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    $control = new oktgc_OrbitCameraControl;
    var$2 = oktm_Vec3__init_0(10.0, 3.0, 0.0);
    var$3 = null;
    var$4 = null;
    oktgc_OrbitCameraControl__init_($control, 1.0, 0.0, 0.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, var$3, 0, var$2, 4076, var$4);
    oktgc_OrbitCameraControl_listenToMouse($control);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, oktgc_OrbitCameraControl_getHelp($control), null, 2, null);
    $screenQuad = oktm_ScreenQuad$TextureRenderer__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    $cubesStartX = (-100.0);
    $cubesEndX = 100.0;
    $cubesStepX = 20.0;
    $cubesStartZ = (-100.0);
    $cubesEndZ = 100.0;
    $cubesStepZ = 20.0;
    $cubesY = 1.0;
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktts_CascadedShadowMappingBaseTest$testMain$1__init_($this, $control, var$11, $depthRenderShader, $plane, $cubesStartX, $cubesEndX, $cubesStartZ, $cubesEndZ, $cubesY, $cube, $cubesStepZ, $cubesStepX, $sceneObjectShader, $cubeColor, $screenQuad), 1, null);
};
function oktts_CascadedShadowMappingBaseTest__init_0($this) {
    var var$1, var$2, var$3, var$4, var$5, $i;
    jl_Object__init_0($this);
    $this.$lightDirection0 = oktm_Vec3__init_0((-1.0), (-1.0), (-1.0)).$nor();
    $this.$numCascades0 = 4;
    var$1 = $rt_createArray(jl_Float, 5);
    var$2 = var$1.data;
    var$2[0] = jl_Float_valueOf(0.0);
    var$2[1] = jl_Float_valueOf(5.0);
    var$2[2] = jl_Float_valueOf(15.0);
    var$2[3] = jl_Float_valueOf(40.0);
    var$2[4] = jl_Float_valueOf(200.0);
    $this.$cascadeEnd0 = var$1;
    var$3 = oktm_Mat4__init_();
    oktm_IVec3_$callClinit();
    $this.$lightView0 = var$3.$setToLookAt(oktm_IVec3$Companion_getZero(oktm_IVec3_Companion), $this.$lightDirection0, oktm_IVec3$Companion_getY(oktm_IVec3_Companion));
    var$4 = $this.$numCascades0;
    var$1 = $rt_createArray(ju_List, var$4);
    var$5 = 0;
    while (var$5 < var$4) {
        var$3 = ju_ArrayList__init_();
        $i = 0;
        while ($i < 8) {
            var$3.$add1(oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null));
            $i = $i + 1 | 0;
        }
        var$1.data[var$5] = var$3;
        var$5 = var$5 + 1 | 0;
    }
    $this.$sceneCameraFrustumPoints0 = var$1;
    var$4 = $this.$numCascades0;
    var$1 = $rt_createArray(oktm_IMat4, var$4);
    var$5 = 0;
    while (var$5 < var$4) {
        var$1.data[var$5] = oktm_Mat4__init_();
        var$5 = var$5 + 1 | 0;
    }
    $this.$lightProj0 = var$1;
    $this.$tmpMat0 = oktm_Mat4__init_();
    $this.$ligthPos = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    $this.$centroid0 = oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
    var$3 = new oktm_Frustum;
    oktgc_ActiveCamera_$callClinit();
    oktm_Frustum__init_2(var$3, oktgc_ActiveCamera_getInverseViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $this.$sceneCameraFrustum0 = var$3;
    $this.$lightPositionOffsetMul = 5.0;
}
function oktsg_SkyboxVertexNode() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$aPositionName1 = null;
    a.$attributePosition = null;
    a.$worldSpacePosition = null;
    a.$clipSpacePosition0 = null;
    a.$velocity0 = null;
}
$java.oktsg_SkyboxVertexNode_tmp = null;
$java.oktsg_SkyboxVertexNode_InputForm = null;
$java.oktsg_SkyboxVertexNode_Companion = null;
$java.oktsg_SkyboxVertexNode_$callClinit = function() {
    $java.oktsg_SkyboxVertexNode_$callClinit = $rt_eraseClinit(oktsg_SkyboxVertexNode);
    $java.oktsg_SkyboxVertexNode__clinit_();
};
function oktsg_SkyboxVertexNode__init_(var_0) {
    var var_1 = new oktsg_SkyboxVertexNode();
    $java.oktsg_SkyboxVertexNode__init_(var_1, var_0);
    return var_1;
}
function oktsg_SkyboxVertexNode__init_0(var_0, var_1, var_2) {
    var var_3 = new oktsg_SkyboxVertexNode();
    $java.oktsg_SkyboxVertexNode__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
$java.oktsg_SkyboxVertexNode__init_1 = function() {
    var var_0 = new oktsg_SkyboxVertexNode();
    oktsg_SkyboxVertexNode__init_1(var_0);
    return var_0;
};
function oktsg_SkyboxVertexNode_setAPositionName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$aPositionName1 = $_set___;
}
$java.oktsg_SkyboxVertexNode_getViewProjectionMatrix = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1121));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
$java.oktsg_SkyboxVertexNode_getPreviousViewProjectionMatrix = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1142));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_SkyboxVertexNode_getAttributePosition($this) {
    return $this.$attributePosition;
}
function oktsg_SkyboxVertexNode_getClipSpacePosition($this) {
    return $this.$clipSpacePosition0;
}
$java.oktsg_SkyboxVertexNode_getUSkyboxVertexTransformName = function($this) {
    return $rt_s(1442);
};
$java.oktsg_SkyboxVertexNode_prepareToDrawScene = function($this, $scene) {
    var var$2, var$3, var$4;
    kji_Intrinsics_checkParameterIsNotNull($scene, $rt_s(328));
    oktsg_ShaderNode_prepareToDrawScene($this, $scene);
    var$2 = $this.$getShader();
    var$3 = $java.oktsg_SkyboxVertexNode_getUSkyboxVertexTransformName($this);
    var$4 = $java.oktsg_SkyboxVertexNode_tmp;
    oktgc_ActiveCamera_$callClinit();
    var$2.$set40(var$3, oktm_Vec4_set1(var$4, oktgc_ActiveCamera_getPosition(oktgc_ActiveCamera_INSTANCE), oktgc_ActiveCamera_getFar(oktgc_ActiveCamera_INSTANCE)));
};
$java.oktsg_SkyboxVertexNode_declarationFrag = function($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if ($this.$attributePosition.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append12(32).$append($this.$attributePosition.$getTypedRef0()).$append($rt_s(330)).$toString());
    if (!(!$this.$worldSpacePosition.$isUsed0() && !$this.$clipSpacePosition0.$isUsed0() && !$this.$velocity0.$isUsed0())) {
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append12(32).$append($this.$worldSpacePosition.$getTypedRef0()).$append($rt_s(330)).$toString());
        if (!(!$this.$clipSpacePosition0.$isUsed0() && !$this.$velocity0.$isUsed0())) {
            $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append12(32).$append($this.$clipSpacePosition0.$getTypedRef0()).$append($rt_s(330)).$toString());
            if ($this.$velocity0.$isUsed0()) {
                $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append($rt_s(1156)).$toString());
                $out.$append(jl_StringBuilder__init_().$append($rt_s(1157)).$append($this.$velocity0.$getRef0()).$append($rt_s(330)).$toString());
            }
        }
    }
};
$java.oktsg_SkyboxVertexNode_declarationVert = function($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getAttribute($this)).$append($rt_s(1061)).$append($this.$aPositionName1).$append($rt_s(330)).$toString());
    $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append12(32).$append($this.$attributePosition.$getTypedRef0()).$append($rt_s(330)).$toString());
    $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append12(32).$append($this.$worldSpacePosition.$getTypedRef0()).$append($rt_s(330)).$toString());
    $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append12(32).$append($this.$clipSpacePosition0.$getTypedRef0()).$append($rt_s(330)).$toString());
    $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append($rt_s(1156)).$toString());
    $out.$append(jl_StringBuilder__init_().$append($rt_s(1443)).$append($java.oktsg_SkyboxVertexNode_getUSkyboxVertexTransformName($this)).$append($rt_s(330)).$toString());
};
$java.oktsg_SkyboxVertexNode_executionFrag = function($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    oktsg_ShaderNode_executionFrag($this, $out);
    if ($this.$velocity0.$isUsed0()) {
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1152)).$append($this.$clipSpacePosition0.$asVec4()).$append($rt_s(330)).$toString());
        $out.$append($rt_s(1153));
        $out.$append($rt_s(1154));
        $out.$append(jl_StringBuilder__init_().$append($this.$velocity0.$getRef0()).$append($rt_s(1155)).$toString());
    }
};
$java.oktsg_SkyboxVertexNode_executionVert = function($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if (!(!$this.$clipSpacePosition0.$isUsed0() && !$this.$worldSpacePosition.$isUsed0() && !$this.$velocity0.$isUsed0())) {
        $out.$append(jl_StringBuilder__init_().$append($this.$attributePosition.$getRef0()).$append($rt_s(331)).$append($this.$aPositionName1).$append($rt_s(1045)).$toString());
        $out.$append(jl_StringBuilder__init_().$append($this.$worldSpacePosition.$getRef0()).$append($rt_s(331)).$append($java.oktsg_SkyboxVertexNode_getUSkyboxVertexTransformName($this)).$append($rt_s(1444)).$append($this.$aPositionName1).$append($rt_s(1445)).$append($java.oktsg_SkyboxVertexNode_getUSkyboxVertexTransformName($this)).$append($rt_s(1058)).$toString());
        if (!(!$this.$clipSpacePosition0.$isUsed0() && !$this.$velocity0.$isUsed0())) {
            $out.$append(jl_StringBuilder__init_().$append($this.$clipSpacePosition0.$getRef0()).$append($rt_s(331)).$append($java.oktsg_SkyboxVertexNode_getViewProjectionMatrix($this).$getRef0()).$append($rt_s(1032)).$append($this.$worldSpacePosition.$asVec4()).$append($rt_s(330)).$toString());
            if ($this.$velocity0.$isUsed0())
                $out.$append(jl_StringBuilder__init_().$append($rt_s(1147)).$append($java.oktsg_SkyboxVertexNode_getPreviousViewProjectionMatrix($this).$getRef0()).$append($rt_s(1032)).$append($this.$worldSpacePosition.$asVec4()).$append($rt_s(330)).$toString());
        }
    }
};
$java.oktsg_SkyboxVertexNode__init_ = function($this, $viewProjectionMatrix) {
    $java.oktsg_SkyboxVertexNode_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($viewProjectionMatrix, $rt_s(1121));
    oktsg_ShaderNode__init_0($this);
    $this.$aPositionName1 = $rt_s(543);
    $this.$attributePosition = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec3__init_($rt_s(1446)));
    $this.$worldSpacePosition = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec3__init_($rt_s(1141)));
    $this.$clipSpacePosition0 = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec4__init_($rt_s(1128)));
    $this.$velocity0 = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec2__init_($rt_s(1160)));
    $this.$setInput($rt_s(1121), $viewProjectionMatrix);
};
$java.oktsg_SkyboxVertexNode__init_0 = function(var$0, var$1, var$2, var$3) {
    $java.oktsg_SkyboxVertexNode_$callClinit();
    if (var$2 & 1) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    $java.oktsg_SkyboxVertexNode__init_(var$0, var$1);
};
function oktsg_SkyboxVertexNode__init_1(var$0) {
    $java.oktsg_SkyboxVertexNode_$callClinit();
    $java.oktsg_SkyboxVertexNode__init_0(var$0, null, 1, null);
}
$java.oktsg_SkyboxVertexNode__clinit_ = function() {
    var var$1;
    $java.oktsg_SkyboxVertexNode_Companion = oktsg_SkyboxVertexNode$Companion__init_1(null);
    $java.oktsg_SkyboxVertexNode_tmp = oktm_Vec4__init_(0.0, 0.0, 0.0, 0.0, 15, null);
    var$1 = ju_LinkedHashMap__init_();
    var$1.$put3($rt_s(1121), jl_Integer_valueOf(9));
    var$1.$put3($rt_s(1142), jl_Integer_valueOf(9));
    $java.oktsg_SkyboxVertexNode_InputForm = var$1;
};
function oktsp_Threshold$Companion() {
    jl_Object.call(this);
}
$java.oktsp_Threshold$Companion__init_ = function() {
    var var_0 = new oktsp_Threshold$Companion();
    oktsp_Threshold$Companion__init_0(var_0);
    return var_0;
};
function oktsp_Threshold$Companion__init_(var_0) {
    var var_1 = new oktsp_Threshold$Companion();
    $java.oktsp_Threshold$Companion__init_0(var_1, var_0);
    return var_1;
}
function oktsp_Threshold$Companion__init_0($this) {
    jl_Object__init_0($this);
}
$java.oktsp_Threshold$Companion__init_0 = function($this, $$constructor_marker) {
    oktsp_Threshold$Companion__init_0($this);
};
function oooi_CollideBoxBox() {
    jl_Object.call(this);
}
function oooi_CollideBoxBox__init_() {
    var var_0 = new oooi_CollideBoxBox();
    oooi_CollideBoxBox__init_0(var_0);
    return var_0;
}
function oooi_CollideBoxBox__init_0($this) {
    jl_Object__init_0($this);
}
$java.oooi_CollideBoxBox_dCollideBoxBox = function($this, $o1, $o2, $flags, $contacts, $skip) {
    var $normal, $depth, $code, var$9, var$10, var$11, var$12, var$13, var$14, $num, $i, $c;
    oooi_Common_dIASSERT($skip != 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $normal = oom_DVector3__init_();
    $depth = oooicj_RefDouble__init_(0.0);
    $code = oooicj_RefInt__init_();
    var$9 = $o1.$final_posr().$pos();
    var$10 = $o1.$final_posr().$R();
    var$11 = $o1.$side;
    var$12 = $o2.$final_posr().$pos();
    var$13 = $o2.$final_posr().$R();
    var$14 = $o2.$side;
    $num = oooi_DxBox_dBoxBox(var$9, var$10, var$11, var$12, var$13, var$14, $normal, $depth, $code, $flags, $contacts, $skip);
    $i = 0;
    while ($i < $num) {
        $c = ooo_DContactGeomBuffer_get($contacts, $rt_imul($i, $skip));
        oom_DVector3_scale(oom_DVector3_set($c.$normal, $normal), (-1.0));
        $c.$g1 = $o1;
        $c.$g2 = $o2;
        $c.$side1 = (-1);
        $c.$side2 = (-1);
        $i = $i + 1 | 0;
    }
    return $num;
};
$java.oooi_CollideBoxBox_dColliderFn = function($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideBoxBox($o1, $o2, $flags, $contacts, 1);
};
function oktga_AnimPlayer$Companion$vec4Pool$1() {
    kji_Lambda.call(this);
}
$java.oktga_AnimPlayer$Companion$vec4Pool$1_INSTANCE = null;
$java.oktga_AnimPlayer$Companion$vec4Pool$1_$callClinit = function() {
    $java.oktga_AnimPlayer$Companion$vec4Pool$1_$callClinit = $rt_eraseClinit(oktga_AnimPlayer$Companion$vec4Pool$1);
    $java.oktga_AnimPlayer$Companion$vec4Pool$1__clinit_();
};
$java.oktga_AnimPlayer$Companion$vec4Pool$1__init_ = function() {
    var var_0 = new oktga_AnimPlayer$Companion$vec4Pool$1();
    oktga_AnimPlayer$Companion$vec4Pool$1__init_(var_0);
    return var_0;
};
$java.oktga_AnimPlayer$Companion$vec4Pool$1_invoke = function(var$0) {
    return $java.oktga_AnimPlayer$Companion$vec4Pool$1_invoke0(var$0);
};
$java.oktga_AnimPlayer$Companion$vec4Pool$1_invoke0 = function($this) {
    return oktm_Vec4__init_(0.0, 0.0, 0.0, 0.0, 15, null);
};
function oktga_AnimPlayer$Companion$vec4Pool$1__init_(var$0) {
    $java.oktga_AnimPlayer$Companion$vec4Pool$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktga_AnimPlayer$Companion$vec4Pool$1__clinit_ = function() {
    $java.oktga_AnimPlayer$Companion$vec4Pool$1_INSTANCE = $java.oktga_AnimPlayer$Companion$vec4Pool$1__init_();
};
function oktsg_MergeVec4() {
    oktsg_ShaderNode.call(this);
    this.$result1 = null;
}
$java.oktsg_MergeVec4_InputForm = null;
$java.oktsg_MergeVec4_Companion = null;
$java.oktsg_MergeVec4_$callClinit = function() {
    $java.oktsg_MergeVec4_$callClinit = $rt_eraseClinit(oktsg_MergeVec4);
    $java.oktsg_MergeVec4__clinit_();
};
$java.oktsg_MergeVec4__init_ = function(var_0, var_1, var_2, var_3) {
    var var_4 = new oktsg_MergeVec4();
    $java.oktsg_MergeVec4__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
};
function oktsg_MergeVec4__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktsg_MergeVec4();
    $java.oktsg_MergeVec4__init_1(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
$java.oktsg_MergeVec4__init_2 = function() {
    var var_0 = new oktsg_MergeVec4();
    oktsg_MergeVec4__init_0(var_0);
    return var_0;
};
$java.oktsg_MergeVec4__init_0 = function($this, $x, $y, $z, $w) {
    var var$5;
    $java.oktsg_MergeVec4_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($x, $rt_s(349));
    kji_Intrinsics_checkParameterIsNotNull($y, $rt_s(350));
    kji_Intrinsics_checkParameterIsNotNull($z, $rt_s(351));
    kji_Intrinsics_checkParameterIsNotNull($w, $rt_s(101));
    oktsg_ShaderNode__init_0($this);
    var$5 = oktsg_GLSLValue__init_($rt_s(1447), 6);
    var$5.$setInlineCode(jl_StringBuilder__init_().$append($rt_s(270)).$append($x.$asFloat()).$append($rt_s(268)).$append($y.$asFloat()).$append($rt_s(268)).$append($z.$asFloat()).$append($rt_s(268)).$append($w.$asFloat()).$append12(41).$toString());
    var$5.$setScope(0);
    $this.$result1 = oktsg_ShaderNode_defOut($this, var$5);
    $this.$setInput($rt_s(349), $x);
    $this.$setInput($rt_s(350), $y);
    $this.$setInput($rt_s(351), $z);
    $this.$setInput($rt_s(101), $w);
};
$java.oktsg_MergeVec4__init_1 = function(var$0, var$1, var$2, var$3, var$4, var$5, var$6) {
    $java.oktsg_MergeVec4_$callClinit();
    if (var$5 & 1) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    if (var$5 & 2) {
        oktsg_GLSL_$callClinit();
        var$2 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    if (var$5 & 4) {
        oktsg_GLSL_$callClinit();
        var$3 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    if (var$5 & 8) {
        oktsg_GLSL_$callClinit();
        var$4 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    $java.oktsg_MergeVec4__init_0(var$0, var$1, var$2, var$3, var$4);
};
function oktsg_MergeVec4__init_0(var$0) {
    $java.oktsg_MergeVec4_$callClinit();
    $java.oktsg_MergeVec4__init_1(var$0, null, null, null, null, 15, null);
}
$java.oktsg_MergeVec4__clinit_ = function() {
    var var$1;
    $java.oktsg_MergeVec4_Companion = oktsg_MergeVec4$Companion__init_1(null);
    var$1 = ju_LinkedHashMap__init_();
    var$1.$put3($rt_s(349), jl_Integer_valueOf(3));
    var$1.$put3($rt_s(350), jl_Integer_valueOf(3));
    var$1.$put3($rt_s(351), jl_Integer_valueOf(3));
    var$1.$put3($rt_s(101), jl_Integer_valueOf(3));
    $java.oktsg_MergeVec4_InputForm = var$1;
};
function oktam_MockAudio() {
    jl_Object.call(this);
}
function oktam_MockAudio__init_() {
    var var_0 = new oktam_MockAudio();
    oktam_MockAudio__init_0(var_0);
    return var_0;
}
$java.oktam_MockAudio_newSound = function($this, $file) {
    kji_Intrinsics_checkParameterIsNotNull($file, $rt_s(282));
    return $java.oktam_MockSound__init_();
};
function oktam_MockAudio__init_0($this) {
    jl_Object__init_0($this);
}
function oktt_SkyboxTest() {
    jl_Object.call(this);
}
function oktt_SkyboxTest__init_() {
    var var_0 = new oktt_SkyboxTest();
    oktt_SkyboxTest__init_0(var_0);
    return var_0;
}
$java.oktt_SkyboxTest_getName = function($this) {
    return $rt_s(1448);
};
$java.oktt_SkyboxTest_testMain = function($this) {
    var $shader, var$2, var$3, var$4, var$5, $textureCube, var$7, var$8, $mesh, $control;
    $shader = new okts_Shader;
    var$2 = null;
    var$3 = null;
    var$4 = null;
    var$5 = null;
    okts_Shader__init_($shader, $rt_s(1449), $rt_s(1450), var$2, 0, var$3, 0, var$4, 124, var$5);
    $shader.$set35($rt_s(861), 0);
    $textureCube = oktt_TextureCube__init_(0, 1, null);
    var$7 = null;
    oktt_TextureCube_load$default($textureCube, $rt_s(544), $rt_s(545), $rt_s(546), $rt_s(547), $rt_s(548), $rt_s(549), 0, 0, 0, 0, 0, 1984, var$7);
    var$7 = oktmb_BoxMeshBuilder__init_0(0.5, 0.5, 0.5);
    var$8 = null;
    var$2 = null;
    $mesh = oktmb_MeshBuilder_build$default(var$7, var$8, 1, var$2);
    $control = oktgc_OrbitCameraControl__init_0(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, null, 0, null, 8191, null);
    oktgc_OrbitCameraControl_listenToMouse($control);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, oktgc_OrbitCameraControl_getHelp($control), null, 2, null);
    oktg_GL_$callClinit();
    oktg_GL_render$default(oktg_GL_INSTANCE, null, oktt_SkyboxTest$testMain$1__init_($control, $shader, $textureCube, $mesh), 1, null);
};
function oktt_SkyboxTest__init_0($this) {
    jl_Object__init_0($this);
}
function oktts_BloomBaseTest$testMain$2$4() {
    kji_Lambda.call(this);
    this.$this$0241 = null;
}
function oktts_BloomBaseTest$testMain$2$4__init_(var_0) {
    var var_1 = new oktts_BloomBaseTest$testMain$2$4();
    $java.oktts_BloomBaseTest$testMain$2$4__init_(var_1, var_0);
    return var_1;
}
$java.oktts_BloomBaseTest$testMain$2$4_invoke = function(var$0, var$1) {
    $java.oktts_BloomBaseTest$testMain$2$4_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_BloomBaseTest$testMain$2$4_invoke0 = function($this, $$this$render) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    var$2 = $this.$this$0241.$$blurUpShader;
    okt_APP_$callClinit();
    var$2.$set36($rt_s(875), 1.0 / okt_APP_getWidth(okt_APP_INSTANCE), 1.0 / okt_APP_getHeight(okt_APP_INSTANCE));
    oktt_SimpleFrameBuffer_getTexture0($this.$this$0241.$$upScaleBuffers.data[0]).$bind4(0);
    oktt_SimpleFrameBuffer_getTexture0($this.$this$0241.$$sceneColorBuffer).$bind4(1);
};
$java.oktts_BloomBaseTest$testMain$2$4__init_ = function(var$0, var$1) {
    var$0.$this$0241 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktts_BloomBaseTest$testMain$2$3() {
    var a = this; kji_Lambda.call(a);
    a.$this$0242 = null;
    a.$$i5 = null;
}
function oktts_BloomBaseTest$testMain$2$3__init_(var_0, var_1) {
    var var_2 = new oktts_BloomBaseTest$testMain$2$3();
    $java.oktts_BloomBaseTest$testMain$2$3__init_(var_2, var_0, var_1);
    return var_2;
}
$java.oktts_BloomBaseTest$testMain$2$3_invoke = function(var$0, var$1) {
    $java.oktts_BloomBaseTest$testMain$2$3_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_BloomBaseTest$testMain$2$3_invoke0 = function($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    $this.$this$0242.$$blurUpShader.$set45($rt_s(875), $this.$this$0242.$$texelSizes.data[$this.$$i5.$element - 1 | 0]);
    oktt_SimpleFrameBuffer_getTexture0($this.$this$0242.$$downScaleBuffers.data[$this.$$i5.$element]).$bind4(0);
    oktt_SimpleFrameBuffer_getTexture0($this.$this$0242.$$upScaleBuffers.data[$this.$$i5.$element]).$bind4(1);
};
$java.oktts_BloomBaseTest$testMain$2$3__init_ = function(var$0, var$1, var$2) {
    var$0.$this$0242 = var$1;
    var$0.$$i5 = var$2;
    kji_Lambda__init_0(var$0, 1);
};
function oktts_BloomBaseTest$testMain$2$2() {
    var a = this; kji_Lambda.call(a);
    a.$this$0243 = null;
    a.$$i6 = 0;
    a.$$prevMap0 = null;
}
function oktts_BloomBaseTest$testMain$2$2__init_(var_0, var_1, var_2) {
    var var_3 = new oktts_BloomBaseTest$testMain$2$2();
    $java.oktts_BloomBaseTest$testMain$2$2__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
$java.oktts_BloomBaseTest$testMain$2$2_invoke = function(var$0, var$1) {
    $java.oktts_BloomBaseTest$testMain$2$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_BloomBaseTest$testMain$2$2_invoke0 = function($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    $this.$this$0243.$$blurDownShader.$set45($rt_s(875), $this.$this$0243.$$texelSizes.data[$this.$$i6]);
    $this.$$prevMap0.$element0.$bind4(0);
};
$java.oktts_BloomBaseTest$testMain$2$2__init_ = function(var$0, var$1, var$2, var$3) {
    var$0.$this$0243 = var$1;
    var$0.$$i6 = var$2;
    var$0.$$prevMap0 = var$3;
    kji_Lambda__init_0(var$0, 1);
};
function oktts_BloomBaseTest$testMain$2$1() {
    kji_Lambda.call(this);
    this.$this$0244 = null;
}
function oktts_BloomBaseTest$testMain$2$1__init_(var_0) {
    var var_1 = new oktts_BloomBaseTest$testMain$2$1();
    $java.oktts_BloomBaseTest$testMain$2$1__init_(var_1, var_0);
    return var_1;
}
$java.oktts_BloomBaseTest$testMain$2$1_invoke = function(var$0, var$1) {
    $java.oktts_BloomBaseTest$testMain$2$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_BloomBaseTest$testMain$2$1_invoke0 = function($this, $$this$render) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    $this.$this$0244.$$cubeShader.$bind();
    var$2 = $this.$this$0244.$$cubeShader;
    oktgc_ActiveCamera_$callClinit();
    var$2.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    oktm_IMesh$DefaultImpls_render$default($this.$this$0244.$$box, $this.$this$0244.$$cubeShader, 0, 0, 0, 0, 30, null);
};
$java.oktts_BloomBaseTest$testMain$2$1__init_ = function(var$0, var$1) {
    var$0.$this$0244 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function jur_AbstractCharClass$LazyJavaUpperCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$0245 = null;
}
$java.jur_AbstractCharClass$LazyJavaUpperCase$1__init_ = function(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaUpperCase$1();
    $java.jur_AbstractCharClass$LazyJavaUpperCase$1__init_0(var_1, var_0);
    return var_1;
};
$java.jur_AbstractCharClass$LazyJavaUpperCase$1__init_0 = function($this, $this$0) {
    $this.$this$0245 = $this$0;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_AbstractCharClass$LazyJavaUpperCase$1_contains = function($this, $ch) {
    return $java.jl_Character_isUpperCase($ch);
};
function jn_URLDecoder() {
    jl_Object.call(this);
}
$java.jn_URLDecoder__init_ = function() {
    var var_0 = new jn_URLDecoder();
    jn_URLDecoder__init_(var_0);
    return var_0;
};
function jn_URLDecoder__init_($this) {
    jl_Object__init_0($this);
}
function jn_URLDecoder_decode($s, $enc) {
    var var$3, $e, $toThrow, $str, $i, var$8, $$je;
    ju_Objects_requireNonNull($enc);
    if ($enc.$isEmpty())
        $rt_throw($java.ji_UnsupportedEncodingException__init_0($rt_s(1451)));
    if ($s.$indexOf6(37) != (-1)) {
        a: {
            try {
                var$3 = jnc_Charset_forName($enc);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jnc_IllegalCharsetNameException) {
                    $e = $$je;
                    break a;
                } else if ($$je instanceof jnc_UnsupportedCharsetException) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return $java.jn_URLDecoder_decode($s, var$3);
        }
        $toThrow = $java.ji_UnsupportedEncodingException__init_();
        $toThrow.$initCause($e);
        $rt_throw($toThrow);
    }
    if ($s.$indexOf6(43) == (-1))
        return $s;
    $str = $s.$toCharArray();
    $i = 0;
    while (true) {
        var$8 = $str.data;
        if ($i >= var$8.length)
            break;
        if (var$8[$i] == 43)
            var$8[$i] = 32;
        $i = $i + 1 | 0;
    }
    return jl_String__init_($str);
}
$java.jn_URLDecoder_decode = function($s, $charset) {
    var $strBuf, $buf, $bufLen, $i, $c, $len, var$9, $d1, $d2, var$12, $len_0, $cb;
    $strBuf = $rt_createCharArray($s.$length());
    $buf = $rt_createByteArray($s.$length() / 3 | 0);
    $bufLen = 0;
    $i = 0;
    a: {
        while ($i < $s.$length()) {
            $c = $s.$charAt($i);
            if ($c == 43)
                $strBuf.data[$bufLen] = 32;
            else {
                if ($c == 37) {
                    $len = 0;
                    while (true) {
                        var$9 = $i + 2 | 0;
                        if (var$9 >= $s.$length())
                            $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1452)).$append1($i).$toString()));
                        $d1 = jl_Character_digit($s.$charAt($i + 1 | 0), 16);
                        $d2 = jl_Character_digit($s.$charAt(var$9), 16);
                        if ($d1 == (-1))
                            break a;
                        if ($d2 == (-1))
                            break a;
                        var$12 = $buf.data;
                        $len_0 = $len + 1 | 0;
                        var$12[$len] = (($d1 << 4) + $d2 | 0) << 24 >> 24;
                        $i = $i + 3 | 0;
                        if ($i >= $s.$length())
                            break;
                        if ($s.$charAt($i) != 37)
                            break;
                        $len = $len_0;
                    }
                    $cb = jnc_Charset_decode($charset, jn_ByteBuffer_wrap0($buf, 0, $len_0));
                    var$9 = jn_CharBuffer_length($cb);
                    jl_System_arraycopy(jn_CharBuffer_array($cb), 0, $strBuf, $bufLen, var$9);
                    $bufLen = $bufLen + var$9 | 0;
                    continue;
                }
                $strBuf.data[$bufLen] = $c;
            }
            $i = $i + 1 | 0;
            $bufLen = $bufLen + 1 | 0;
        }
        return jl_String__init_0($strBuf, 0, $bufLen);
    }
    $rt_throw(jl_IllegalArgumentException__init_(jl_StringBuilder__init_().$append($rt_s(1453)).$append($s.$substring($i, $i + 3 | 0)).$append($rt_s(1454)).$append1($i).$toString()));
};
function oktmb_PlaneMeshBuilder$1() {
    kji_Lambda.call(this);
}
var oktmb_PlaneMeshBuilder$1_INSTANCE = null;
function oktmb_PlaneMeshBuilder$1_$callClinit() {
    oktmb_PlaneMeshBuilder$1_$callClinit = $rt_eraseClinit(oktmb_PlaneMeshBuilder$1);
    $java.oktmb_PlaneMeshBuilder$1__clinit_();
}
$java.oktmb_PlaneMeshBuilder$1__init_ = function() {
    var var_0 = new oktmb_PlaneMeshBuilder$1();
    oktmb_PlaneMeshBuilder$1__init_(var_0);
    return var_0;
};
$java.oktmb_PlaneMeshBuilder$1_invoke = function(var$0, var$1, var$2) {
    return jl_Float_valueOf($java.oktmb_PlaneMeshBuilder$1_invoke0(var$0, var$1.$intValue(), var$2.$intValue()));
};
$java.oktmb_PlaneMeshBuilder$1_invoke0 = function($this, $$noName_0, $$noName_1) {
    return 0.0;
};
function oktmb_PlaneMeshBuilder$1__init_(var$0) {
    oktmb_PlaneMeshBuilder$1_$callClinit();
    kji_Lambda__init_0(var$0, 2);
}
$java.oktmb_PlaneMeshBuilder$1__clinit_ = function() {
    oktmb_PlaneMeshBuilder$1_INSTANCE = $java.oktmb_PlaneMeshBuilder$1__init_();
};
function otpp_ResourceAccessor() {
    jl_Object.call(this);
}
$java.otpp_ResourceAccessor__init_ = function() {
    var var_0 = new otpp_ResourceAccessor();
    otpp_ResourceAccessor__init_(var_0);
    return var_0;
};
function otpp_ResourceAccessor__init_($this) {
    jl_Object__init_0($this);
}
function oooi_OdeInit() {
    jl_Object.call(this);
}
$java.oooi_OdeInit_g_uiODEInitCounter = 0;
$java.oooi_OdeInit_g_uiODEInitModes = 0;
$java.oooi_OdeInit_$callClinit = function() {
    $java.oooi_OdeInit_$callClinit = $rt_eraseClinit(oooi_OdeInit);
    $java.oooi_OdeInit__clinit_();
};
$java.oooi_OdeInit__init_ = function() {
    var var_0 = new oooi_OdeInit();
    oooi_OdeInit__init_(var_0);
    return var_0;
};
function oooi_OdeInit__init_($this) {
    $java.oooi_OdeInit_$callClinit();
    jl_Object__init_0($this);
}
$java.oooi_OdeInit_IsODEModeInitialized = function($imInitMode) {
    $java.oooi_OdeInit_$callClinit();
    return !($java.oooi_OdeInit_g_uiODEInitModes & 1 << jl_Enum_ordinal($imInitMode)) ? 0 : 1;
};
$java.oooi_OdeInit_SetODEModeInitialized = function($imInitMode) {
    $java.oooi_OdeInit_$callClinit();
    $java.oooi_OdeInit_g_uiODEInitModes = $java.oooi_OdeInit_g_uiODEInitModes | 1 << jl_Enum_ordinal($imInitMode);
};
$java.oooi_OdeInit_ResetODEModeInitialized = function($imInitMode) {
    $java.oooi_OdeInit_$callClinit();
    $java.oooi_OdeInit_g_uiODEInitModes = $java.oooi_OdeInit_g_uiODEInitModes & (1 << jl_Enum_ordinal($imInitMode) ^ (-1));
};
$java.oooi_OdeInit_IsODEAnyModeInitialized = function() {
    $java.oooi_OdeInit_$callClinit();
    return !$java.oooi_OdeInit_g_uiODEInitModes ? 0 : 1;
};
$java.oooi_OdeInit_AllocateThreadBasicDataIfNecessary = function($imInitMode) {
    $java.oooi_OdeInit_$callClinit();
    return 1;
};
$java.oooi_OdeInit_FreeThreadBasicDataOnFailureIfNecessary = function($imInitMode) {
    $java.oooi_OdeInit_$callClinit();
};
$java.oooi_OdeInit_AllocateThreadCollisionDataIfNecessary = function($imInitMode, $bOutDataAllocated) {
    $java.oooi_OdeInit_$callClinit();
    oooicj_RefBoolean_set($bOutDataAllocated, 0);
    return 1;
};
$java.oooi_OdeInit_FreeThreadCollisionData = function($imInitMode) {
    $java.oooi_OdeInit_$callClinit();
};
$java.oooi_OdeInit_InitODEForMode = function($imInitMode) {
    var $bWorldThreadingInitialized, $bAnyModeAlreadyInitialized;
    $java.oooi_OdeInit_$callClinit();
    $bWorldThreadingInitialized = 0;
    $bAnyModeAlreadyInitialized = $java.oooi_OdeInit_IsODEAnyModeInitialized();
    if (!$bAnyModeAlreadyInitialized) {
        $bWorldThreadingInitialized = 1;
        oooig_Gimpact_gimpact_init();
        oooi_DxGeom_dInitColliders();
    }
    return 1;
};
$java.oooi_OdeInit_AllocateODEDataForThreadForMode = function($imInitMode, $uiAllocateFlags) {
    var $bResult, $bCollisionDataAllocated;
    $java.oooi_OdeInit_$callClinit();
    $bResult = 0;
    $bCollisionDataAllocated = oooicj_RefBoolean__init_(0);
    if ($java.oooi_OdeInit_AllocateThreadBasicDataIfNecessary($imInitMode) && !($uiAllocateFlags & 1 && !$java.oooi_OdeInit_AllocateThreadCollisionDataIfNecessary($imInitMode, $bCollisionDataAllocated)))
        $bResult = 1;
    if (!$bResult) {
        if (oooicj_RefBoolean_get($bCollisionDataAllocated))
            $java.oooi_OdeInit_FreeThreadCollisionData($imInitMode);
        $java.oooi_OdeInit_FreeThreadBasicDataOnFailureIfNecessary($imInitMode);
    }
    return $bResult;
};
$java.oooi_OdeInit_CloseODEForMode = function($imInitMode) {
    var $bAnyModeStillInitialized;
    $java.oooi_OdeInit_$callClinit();
    $bAnyModeStillInitialized = $java.oooi_OdeInit_IsODEAnyModeInitialized();
    if (!$bAnyModeStillInitialized) {
        oooi_CollideSpaceGeom_dClearPosrCache();
        oooi_DxGeom_dFinitUserClasses();
        oooi_DxGeom_dFinitColliders();
        oooig_Gimpact_gimpact_terminate();
        oooi_DxWorld_FinalizeDefaultThreading();
    }
};
$java.oooi_OdeInit_InternalInitODE = function($uiInitFlags) {
    var $bResult, $imInitMode;
    $java.oooi_OdeInit_$callClinit();
    $bResult = 0;
    if (!($uiInitFlags & 1)) {
        oooi_OdeInit$EODEINITMODE_$callClinit();
        $imInitMode = oooi_OdeInit$EODEINITMODE_OIM_AUTOTLSCLEANUP;
    } else {
        oooi_OdeInit$EODEINITMODE_$callClinit();
        $imInitMode = oooi_OdeInit$EODEINITMODE_OIM_MANUALTLSCLEANUP;
    }
    a: {
        if (!$java.oooi_OdeInit_IsODEModeInitialized($imInitMode)) {
            if (!$java.oooi_OdeInit_InitODEForMode($imInitMode))
                break a;
            $java.oooi_OdeInit_SetODEModeInitialized($imInitMode);
        }
        $java.oooi_OdeInit_g_uiODEInitCounter = $java.oooi_OdeInit_g_uiODEInitCounter + 1 | 0;
        $bResult = 1;
    }
    return $bResult;
};
$java.oooi_OdeInit_InternalCloseODE = function() {
    var var$1, $max, $uiCurrentMode;
    $java.oooi_OdeInit_$callClinit();
    var$1 = $java.oooi_OdeInit_g_uiODEInitCounter - 1 | 0;
    $java.oooi_OdeInit_g_uiODEInitCounter = var$1;
    $max = !var$1 ? 0 : oooi_OdeInit$EODEINITMODE_values().data.length;
    while ($max != oooi_OdeInit$EODEINITMODE_values().data.length) {
        $uiCurrentMode = oooi_OdeInit$EODEINITMODE_values().data[$max];
        if ($java.oooi_OdeInit_IsODEModeInitialized($uiCurrentMode)) {
            $java.oooi_OdeInit_ResetODEModeInitialized($uiCurrentMode);
            $java.oooi_OdeInit_CloseODEForMode($uiCurrentMode);
        }
        $max = $max + 1 | 0;
    }
};
$java.oooi_OdeInit_InternalAllocateODEDataForThread = function($uiAllocateFlags) {
    var $bAnyFailure, var$3, var$4, var$5, $uiCurrentMode, $bResult;
    $java.oooi_OdeInit_$callClinit();
    $bAnyFailure = 0;
    var$3 = oooi_OdeInit$EODEINITMODE_values().data;
    var$4 = var$3.length;
    var$5 = 0;
    a: {
        while (var$5 < var$4) {
            $uiCurrentMode = var$3[var$5];
            if ($java.oooi_OdeInit_IsODEModeInitialized($uiCurrentMode) && !$java.oooi_OdeInit_AllocateODEDataForThreadForMode($uiCurrentMode, $uiAllocateFlags)) {
                $bAnyFailure = 1;
                break a;
            }
            var$5 = var$5 + 1 | 0;
        }
    }
    $bResult = $bAnyFailure ? 0 : 1;
    return $bResult;
};
function oooi_OdeInit_dInitODE2($uiInitFlags) {
    var $bResult, $bODEInitialized;
    $java.oooi_OdeInit_$callClinit();
    $bResult = 0;
    $bODEInitialized = 0;
    if ($java.oooi_OdeInit_InternalInitODE($uiInitFlags)) {
        $bODEInitialized = 1;
        if ($java.oooi_OdeInit_InternalAllocateODEDataForThread(0))
            $bResult = 1;
    }
    if (!$bResult && $bODEInitialized)
        $java.oooi_OdeInit_InternalCloseODE();
    return $bResult;
}
$java.oooi_OdeInit__clinit_ = function() {
    $java.oooi_OdeInit_g_uiODEInitCounter = 0;
    $java.oooi_OdeInit_g_uiODEInitModes = 0;
};
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1() {
    jur_AbstractCharClass.call(this);
    this.$this$0246 = null;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1();
    $java.jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_(var_1, var_0);
    return var_1;
}
$java.jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_ = function($this, $this$0) {
    $this.$this$0246 = $this$0;
    jur_AbstractCharClass__init_0($this);
};
$java.jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains = function($this, $ch) {
    return $java.jl_Character_isIdentifierIgnorable($ch);
};
function oktsp_FXAA$Companion() {
    jl_Object.call(this);
}
$java.oktsp_FXAA$Companion__init_ = function() {
    var var_0 = new oktsp_FXAA$Companion();
    oktsp_FXAA$Companion__init_0(var_0);
    return var_0;
};
function oktsp_FXAA$Companion__init_(var_0) {
    var var_1 = new oktsp_FXAA$Companion();
    $java.oktsp_FXAA$Companion__init_0(var_1, var_0);
    return var_1;
}
function oktsp_FXAA$Companion__init_0($this) {
    jl_Object__init_0($this);
}
$java.oktsp_FXAA$Companion__init_0 = function($this, $$constructor_marker) {
    oktsp_FXAA$Companion__init_0($this);
};
function oktam_MockSound() {
    jl_Object.call(this);
}
$java.oktam_MockSound__init_ = function() {
    var var_0 = new oktam_MockSound();
    oktam_MockSound__init_(var_0);
    return var_0;
};
$java.oktam_MockSound_play = function($this, $volume, $pitch, $pan, $loop) {
    return 0;
};
function oktam_MockSound__init_($this) {
    jl_Object__init_0($this);
}
function oktt_TvmGL$GLObjectArray() {
    ju_ArrayList.call(this);
    this.$buildWrap = null;
}
$java.oktt_TvmGL$GLObjectArray__init_ = function(var_0) {
    var var_1 = new oktt_TvmGL$GLObjectArray();
    oktt_TvmGL$GLObjectArray__init_(var_1, var_0);
    return var_1;
};
function oktt_TvmGL$GLObjectArray_gl($this, $id) {
    var var$2;
    var$2 = kc_CollectionsKt___CollectionsKt_getOrNull($this, $id - 1 | 0);
    return var$2 === null ? null : var$2.$getGl7();
}
function oktt_TvmGL$GLObjectArray_wrap($this, $id) {
    return kc_CollectionsKt___CollectionsKt_getOrNull($this, $id - 1 | 0);
}
function oktt_TvmGL$GLObjectArray_new($this, $gl) {
    var var$2;
    if ($gl === null)
        var$2 = (-1);
    else {
        $this.$add1($this.$buildWrap.$invoke1($gl));
        var$2 = $java.oktt_TvmGL$GLObjectArray_size($this);
    }
    return var$2;
}
function oktt_TvmGL$GLObjectArray_delete($this, $id) {
    var $index, $program;
    $index = $id - 1 | 0;
    $program = oktt_TvmGL$GLObjectArray_gl($this, $index);
    $this.$set38($index, null);
    return $program;
}
function oktt_TvmGL$GLObjectArray__init_($this, $buildWrap) {
    kji_Intrinsics_checkParameterIsNotNull($buildWrap, $rt_s(1455));
    ju_ArrayList__init_2($this);
    $this.$buildWrap = $buildWrap;
}
$java.oktt_TvmGL$GLObjectArray_getSize = function(var$0) {
    return ju_ArrayList_size(var$0);
};
$java.oktt_TvmGL$GLObjectArray_size = function(var$0) {
    return $java.oktt_TvmGL$GLObjectArray_getSize(var$0);
};
function oooi_DxQuickStep$dxQuickStepperStage3CallContext() {
    var a = this; jl_Object.call(a);
    a.$m_stepperCallContext6 = null;
    a.$m_localContext3 = null;
    a.$m_stage1MemArenaState = null;
}
$java.oooi_DxQuickStep$dxQuickStepperStage3CallContext__init_ = function() {
    var var_0 = new oooi_DxQuickStep$dxQuickStepperStage3CallContext();
    oooi_DxQuickStep$dxQuickStepperStage3CallContext__init_(var_0);
    return var_0;
};
$java.oooi_DxQuickStep$dxQuickStepperStage3CallContext__init_0 = function(var_0) {
    var var_1 = new oooi_DxQuickStep$dxQuickStepperStage3CallContext();
    $java.oooi_DxQuickStep$dxQuickStepperStage3CallContext__init_1(var_1, var_0);
    return var_1;
};
function oooi_DxQuickStep$dxQuickStepperStage3CallContext__init_($this) {
    jl_Object__init_0($this);
}
$java.oooi_DxQuickStep$dxQuickStepperStage3CallContext_Initialize = function($this, $callContext, $localContext, $stage1MemArenaState) {
    $this.$m_stepperCallContext6 = $callContext;
    $this.$m_localContext3 = $localContext;
    $this.$m_stage1MemArenaState = $stage1MemArenaState;
};
$java.oooi_DxQuickStep$dxQuickStepperStage3CallContext__init_1 = function($this, $x0) {
    oooi_DxQuickStep$dxQuickStepperStage3CallContext__init_($this);
};
function okttsg_MotionBlurTest$testMain$3() {
    var a = this; kji_Lambda.call(a);
    a.$$moveEnabled = null;
    a.$$model7 = null;
    a.$$velocityBuffer = null;
    a.$$sceneColorBuffer1 = null;
    a.$$motionBlur0 = null;
    a.$$screenQuad11 = null;
}
function okttsg_MotionBlurTest$testMain$3__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new okttsg_MotionBlurTest$testMain$3();
    $java.okttsg_MotionBlurTest$testMain$3__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
$java.okttsg_MotionBlurTest$testMain$3_invoke = function(var$0) {
    $java.okttsg_MotionBlurTest$testMain$3_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.okttsg_MotionBlurTest$testMain$3_invoke0 = function($this) {
    var var$1;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    if ($this.$$moveEnabled.$element1) {
        var$1 = oktt_GLTFModel_getScene($this.$$model7);
        if (var$1 !== null)
            var$1.$updatePreviousTransform0();
        oktgc_ActiveCamera_$callClinit();
        oktgc_ActiveCamera_updatePreviousTransform(oktgc_ActiveCamera_INSTANCE);
        var$1 = $this.$$model7;
        okt_APP_$callClinit();
        oktt_GLTFModel_update(var$1, okt_APP_getDeltaTime(okt_APP_INSTANCE) * 3.0);
        oktt_SimpleFrameBuffer_render($this.$$velocityBuffer, $java.okttsg_MotionBlurTest$testMain$3$1__init_($this));
    }
    oktt_SimpleFrameBuffer_render($this.$$sceneColorBuffer1, $java.okttsg_MotionBlurTest$testMain$3$2__init_($this));
    oktsp_MotionBlur_render($this.$$motionBlur0, $this.$$screenQuad11, null);
};
$java.okttsg_MotionBlurTest$testMain$3__init_ = function(var$0, var$1, var$2, var$3, var$4, var$5, var$6) {
    var$0.$$moveEnabled = var$1;
    var$0.$$model7 = var$2;
    var$0.$$velocityBuffer = var$3;
    var$0.$$sceneColorBuffer1 = var$4;
    var$0.$$motionBlur0 = var$5;
    var$0.$$screenQuad11 = var$6;
    kji_Lambda__init_0(var$0, 0);
};
function okttsg_MotionBlurTest$testMain$2() {
    jl_Object.call(this);
    this.$$moveEnabled0 = null;
}
function okttsg_MotionBlurTest$testMain$2__init_(var_0) {
    var var_1 = new okttsg_MotionBlurTest$testMain$2();
    $java.okttsg_MotionBlurTest$testMain$2__init_(var_1, var_0);
    return var_1;
}
$java.okttsg_MotionBlurTest$testMain$2_buttonUp = function($this, $button, $screenX, $screenY, $pointer) {
    $this.$$moveEnabled0.$element1 = $this.$$moveEnabled0.$element1 ? 0 : 1;
};
$java.okttsg_MotionBlurTest$testMain$2__init_ = function($this, $$captured_local_variable$0) {
    $this.$$moveEnabled0 = $$captured_local_variable$0;
    jl_Object__init_0($this);
};
$java.okttsg_MotionBlurTest$testMain$2_buttonDown = function($this, $button, $screenX, $screenY, $pointer) {
    okti_IMouseListener$DefaultImpls_buttonDown($this, $button, $screenX, $screenY, $pointer);
};
$java.okttsg_MotionBlurTest$testMain$2_dragged = function($this, $screenX, $screenY, $pointer) {
    okti_IMouseListener$DefaultImpls_dragged($this, $screenX, $screenY, $pointer);
};
$java.okttsg_MotionBlurTest$testMain$2_moved = function($this, $screenX, $screenY) {
    okti_IMouseListener$DefaultImpls_moved($this, $screenX, $screenY);
};
$java.okttsg_MotionBlurTest$testMain$2_scrolled = function($this, $amount) {
    okti_IMouseListener$DefaultImpls_scrolled($this, $amount);
};
function oktgg_GLTF$read$9$1() {
    kji_Lambda.call(this);
    this.$this$0247 = null;
}
function oktgg_GLTF$read$9$1__init_(var_0) {
    var var_1 = new oktgg_GLTF$read$9$1();
    $java.oktgg_GLTF$read$9$1__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_GLTF$read$9$1_invoke = function(var$0, var$1) {
    $java.oktgg_GLTF$read$9$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTF$read$9$1_invoke0 = function($this, $$this$objs) {
    var $mesh;
    kji_Intrinsics_checkParameterIsNotNull($$this$objs, $rt_s(33));
    $mesh = oktgg_GLTFMesh__init_($this.$this$0247.$this$0186, oktgg_GLTFArray_size($this.$this$0247.$this$0186.$getMeshes()));
    $this.$this$0247.$this$0186.$getMeshes().$add1($mesh);
    oktgg_GLTFMesh_read($mesh, $$this$objs);
};
$java.oktgg_GLTF$read$9$1__init_ = function(var$0, var$1) {
    var$0.$this$0247 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function otjb_Performance() {
    jl_Object.call(this);
}
$java.otjb_Performance__init_ = function() {
    var var_0 = new otjb_Performance();
    otjb_Performance__init_(var_0);
    return var_0;
};
function otjb_Performance__init_($this) {
    jl_Object__init_0($this);
}
function okttsg_SSAOTest$testMain$1$3$1() {
    kji_Lambda.call(this);
    this.$this$0248 = null;
}
function okttsg_SSAOTest$testMain$1$3$1__init_(var_0) {
    var var_1 = new okttsg_SSAOTest$testMain$1$3$1();
    $java.okttsg_SSAOTest$testMain$1$3$1__init_(var_1, var_0);
    return var_1;
}
$java.okttsg_SSAOTest$testMain$1$3$1_invoke = function(var$0, var$1) {
    $java.okttsg_SSAOTest$testMain$1$3$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.okttsg_SSAOTest$testMain$1$3$1_invoke0 = function($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_GLTFModel_update$default($this.$this$0248.$$model5, 0.0, 1, null);
    oktt_GLTFModel_render($this.$this$0248.$$model5);
};
$java.okttsg_SSAOTest$testMain$1$3$1__init_ = function(var$0, var$1) {
    var$0.$this$0248 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function jn_ByteBufferImpl() {
    var a = this; jn_ByteBuffer.call(a);
    a.$direct = 0;
    a.$readOnly1 = 0;
}
function jn_ByteBufferImpl__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new jn_ByteBufferImpl();
    $java.jn_ByteBufferImpl__init_(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
$java.jn_ByteBufferImpl__init_ = function($this, $start, $capacity, $array, $position, $limit, $direct, $readOnly) {
    jn_ByteBuffer__init_0($this, $start, $capacity, $array, $position, $limit);
    $this.$direct = $direct;
    $this.$readOnly1 = $readOnly;
};
$java.jn_ByteBufferImpl_isReadOnly = function($this) {
    return $this.$readOnly1;
};
function oooij_DxJoint$Info1() {
    var a = this; jl_Object.call(a);
    a.$m0 = 0;
    a.$nub = 0;
}
function oooij_DxJoint$Info1__init_() {
    var var_0 = new oooij_DxJoint$Info1();
    oooij_DxJoint$Info1__init_0(var_0);
    return var_0;
}
function oooij_DxJoint$Info1__init_0($this) {
    jl_Object__init_0($this);
}
function oooij_DxJoint$Info1_setM($this, $m) {
    $this.$m0 = $m;
}
function oooij_DxJoint$Info1_setNub($this, $nub) {
    $this.$nub = $nub;
}
function oktpo_OdeRigidBody() {
    var a = this; jl_Object.call(a);
    a.$userObject3 = null;
    a.$influenceOtherBodies0 = 0;
    a.$body1 = null;
    a.$isStatic = 0;
    a.$shape = null;
    a.$world2 = null;
    a.$mass0 = 0.0;
    a.$friction3 = 0.0;
}
$java.oktpo_OdeRigidBody_tmpQ = null;
$java.oktpo_OdeRigidBody_tmpM = null;
$java.oktpo_OdeRigidBody_Companion = null;
$java.oktpo_OdeRigidBody_$callClinit = function() {
    $java.oktpo_OdeRigidBody_$callClinit = $rt_eraseClinit(oktpo_OdeRigidBody);
    $java.oktpo_OdeRigidBody__clinit_();
};
$java.oktpo_OdeRigidBody__init_ = function(var_0, var_1, var_2) {
    var var_3 = new oktpo_OdeRigidBody();
    $java.oktpo_OdeRigidBody__init_0(var_3, var_0, var_1, var_2);
    return var_3;
};
function oktpo_OdeRigidBody__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktpo_OdeRigidBody();
    $java.oktpo_OdeRigidBody__init_1(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function oktpo_OdeRigidBody_getInfluenceOtherBodies($this) {
    return $this.$influenceOtherBodies0;
}
$java.oktpo_OdeRigidBody_setGravityEnabled = function($this, $value) {
    var var$2;
    var$2 = $this.$body1;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(1456));
    var$2.$setGravityMode($value);
};
$java.oktpo_OdeRigidBody_isStatic = function($this) {
    return $this.$isStatic;
};
$java.oktpo_OdeRigidBody_setStatic = function($this, $value) {
    var var$2, $shape;
    $this.$isStatic = $value;
    var$2 = $java.oktpo_OdeRigidBody_getShape($this);
    $shape = var$2 === null ? null : var$2.$getGeom();
    if (!$value) {
        if ($shape !== null)
            $shape.$setBody($this.$body1);
    } else if ($shape !== null)
        $shape.$setBody(null);
};
$java.oktpo_OdeRigidBody_getShape = function($this) {
    return $this.$shape;
};
function oktpo_OdeRigidBody_setShape($this, $value) {
    var var$2, $geom, $dMass, var$5, $mat;
    a: {
        $this.$shape = $value;
        if ($value !== null) {
            var$2 = $value.$getSourceObject0();
            if (var$2 === null)
                $rt_throw(k_TypeCastException__init_($rt_s(1457)));
            $geom = var$2;
            $dMass = ooo_OdeHelper_createMass();
            if (!$java.oktpo_OdeRigidBody_isStatic($this)) {
                b: {
                    switch ($geom.$getClassID()) {
                        case 0:
                            var$2 = $value;
                            $dMass.$setSphere($java.oktpo_OdeRigidBody_getMass($this), oktpo_OdeSphereShape_getRadius(var$2));
                            break b;
                        case 1:
                            var$2 = $value;
                            var$5 = $java.oktpo_OdeRigidBody_getMass($this);
                            var$2 = oktpo_OdeBoxShape_getGeom(var$2);
                            kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(1458));
                            $dMass.$setBox(var$5, var$2.$getLengths0());
                            break b;
                        case 2:
                            var$2 = $value;
                            $dMass.$setCapsule($java.oktpo_OdeRigidBody_getMass($this), 2, $java.oktpo_OdeCapsuleShape_getRadius(var$2), $java.oktpo_OdeCapsuleShape_getLength(var$2));
                            break b;
                        case 3:
                            var$2 = $value;
                            $dMass.$setCylinder($java.oktpo_OdeRigidBody_getMass($this), 2, $java.oktpo_OdeCylinderShape_getRadius(var$2), $java.oktpo_OdeCylinderShape_getLength(var$2));
                            break b;
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                            break b;
                        case 8:
                            break;
                        default:
                            break b;
                    }
                    var$2 = $value;
                    $dMass.$setTrimesh($java.oktpo_OdeRigidBody_getMass($this), oktpo_OdeTrimeshShape_getTrimesh(var$2));
                }
                $geom.$setBody($this.$body1);
                var$2 = $this.$body1;
                kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(1456));
                var$2.$setMass($dMass);
            }
            switch ($geom.$getClassID()) {
                case 2:
                    if ($java.oktpo_OdeRigidBody_getShape($this) === null)
                        $rt_throw(k_TypeCastException__init_($rt_s(1459)));
                    $mat = oom_DMatrix3__init_1();
                    ooo_DRotation_dRFromAxisAndAngle($mat, 1.0, 0.0, 0.0, 1.5707963705062866);
                    $geom.$setOffsetWorldRotation($mat);
                    break a;
                case 3:
                    break;
                default:
                    break a;
            }
            if ($java.oktpo_OdeRigidBody_getShape($this) === null)
                $rt_throw(k_TypeCastException__init_($rt_s(1460)));
        }
    }
}
$java.oktpo_OdeRigidBody_getWorldTransform = function($this, $out) {
    var var$2, $t, var$4, $r;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    var$2 = $this.$body1;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(1456));
    $t = var$2.$getPosition2();
    var$4 = $this.$body1;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$4, $rt_s(1456));
    $r = var$4.$getRotation2();
    $out.$setM00($r.$get00());
    $out.$setM010($r.$get010());
    $out.$setM020($r.$get02());
    $out.$setM030($t.$get01());
    $out.$setM100($r.$get100());
    $out.$setM11($r.$get11());
    $out.$setM120($r.$get12());
    $out.$setM130($t.$get10());
    $out.$setM200($r.$get200());
    $out.$setM210($r.$get21());
    $out.$setM22($r.$get22());
    $out.$setM230($t.$get20());
    $out.$setM300(0.0);
    $out.$setM310(0.0);
    $out.$setM320(0.0);
    $out.$setM33(1.0);
    return $out;
};
$java.oktpo_OdeRigidBody_setPosition = function($this, $x, $y, $z) {
    var var$4;
    $this.$body1.$setPosition3($x, $y, $z);
    if ($java.oktpo_OdeRigidBody_isStatic($this)) {
        var$4 = $java.oktpo_OdeRigidBody_getShape($this);
        if (var$4 !== null)
            var$4.$setPosition4($x, $y, $z);
    }
};
$java.oktpo_OdeRigidBody_getMass = function($this) {
    return $this.$mass0;
};
function oktpo_OdeRigidBody_getFriction($this) {
    return $this.$friction3;
}
$java.oktpo_OdeRigidBody__init_0 = function($this, $world, $mass, $friction) {
    var var$4;
    $java.oktpo_OdeRigidBody_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($world, $rt_s(563));
    jl_Object__init_0($this);
    $this.$world2 = $world;
    $this.$mass0 = $mass;
    $this.$friction3 = $friction;
    $this.$userObject3 = $this;
    $this.$influenceOtherBodies0 = 1;
    var$4 = oktpo_OdePhysicsWorld_getSourceObject($this.$world2);
    if (var$4 === null)
        $rt_throw(k_TypeCastException__init_($rt_s(1461)));
    $this.$body1 = ooo_OdeHelper_createBody(var$4);
    $this.$isStatic = $java.oktpo_OdeRigidBody_getMass($this) !== 0.0 ? 0 : 1;
    var$4 = $this.$body1;
    kji_Intrinsics_checkExpressionValueIsNotNull(var$4, $rt_s(1456));
    var$4.$setData($this);
    if ($java.oktpo_OdeRigidBody_getMass($this) === 0.0) {
        var$4 = $this.$body1;
        kji_Intrinsics_checkExpressionValueIsNotNull(var$4, $rt_s(1456));
        var$4.$setGravityMode(0);
    }
};
$java.oktpo_OdeRigidBody__init_1 = function(var$0, var$1, var$2, var$3, var$4, var$5) {
    $java.oktpo_OdeRigidBody_$callClinit();
    if (var$4 & 2)
        var$2 = 1.0;
    if (var$4 & 4)
        var$3 = 1.0;
    $java.oktpo_OdeRigidBody__init_0(var$0, var$1, var$2, var$3);
};
$java.oktpo_OdeRigidBody__clinit_ = function() {
    $java.oktpo_OdeRigidBody_Companion = oktpo_OdeRigidBody$Companion__init_1(null);
    $java.oktpo_OdeRigidBody_tmpQ = oom_DQuaternion__init_();
    $java.oktpo_OdeRigidBody_tmpM = oom_DMatrix3__init_1();
};
$java.oktpo_OdeRigidBody_setPosition0 = function($this, $x, $y, $z) {
    oktp_IRigidBody$DefaultImpls_setPosition($this, $x, $y, $z);
};
function oooi_DxQuickStep() {
    var a = this; oooi_AbstractStepper.call(a);
    a.$buf_invI = null;
    a.$buf_jointinfos = null;
}
$java.oooi_DxQuickStep_REUSE_OBJECTS = 0;
$java.oooi_DxQuickStep_ENABLE_LCP_ITERATIONS_MULTITHREADING = 0;
$java.oooi_DxQuickStep_RANDOM_CONSTRAINTS_REORDERING_FREQUENCY = 0;
$java.oooi_DxQuickStep_RRS_REORDERING = 0;
$java.oooi_DxQuickStep_RRS_REVERSAL = 0;
$java.oooi_DxQuickStep_RRS_MIN = 0;
$java.oooi_DxQuickStep_RRS_MAX = 0;
var oooi_DxQuickStep_INSTANCE = null;
$java.oooi_DxQuickStep_CONSTRAINTS_REORDERING_METHOD = null;
$java.oooi_DxQuickStep_INVALID_LINK = 0;
$java.oooi_DxQuickStep_mtIterations = null;
function oooi_DxQuickStep_$callClinit() {
    oooi_DxQuickStep_$callClinit = $rt_eraseClinit(oooi_DxQuickStep);
    $java.oooi_DxQuickStep__clinit_();
}
$java.oooi_DxQuickStep__init_ = function() {
    var var_0 = new oooi_DxQuickStep();
    oooi_DxQuickStep__init_(var_0);
    return var_0;
};
function oooi_DxQuickStep__init_($this) {
    oooi_DxQuickStep_$callClinit();
    oooi_AbstractStepper__init_0($this);
    $this.$buf_invI = $rt_createDoubleArray(100);
    $this.$buf_jointinfos = $rt_createArray(oooi_DxQuickStep$DJointWithInfo1, 0);
}
$java.oooi_DxQuickStep_Multiply1_12q1 = function($A1, $A2, $B, $k, $C, $ofsC, $q) {
    var $a, $b, $c, $d, $e, $f, var$14, var$15, $s;
    oooi_DxQuickStep_$callClinit();
    if ($q < 0)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $a = 0.0;
    $b = 0.0;
    $c = 0.0;
    $d = 0.0;
    $e = 0.0;
    $f = 0.0;
    var$14 = $ofsC;
    while (var$14 < ($q + $ofsC | 0)) {
        var$15 = $B.data;
        $s = $C.data[var$14];
        $a = $a + var$15[$k] * $s;
        $b = $b + var$15[1 + $k | 0] * $s;
        $c = $c + var$15[2 + $k | 0] * $s;
        $d = $d + var$15[3 + $k | 0] * $s;
        $e = $e + var$15[4 + $k | 0] * $s;
        $f = $f + var$15[5 + $k | 0] * $s;
        var$14 = var$14 + 1 | 0;
        $k = $k + 12 | 0;
    }
    oom_DVector3_set0($A1, $a, $b, $c);
    oom_DVector3_set0($A2, $d, $e, $f);
};
$java.oooi_DxQuickStep_compute_invM_JT = function($mi_storage, $m, $J, $iMJ, $jb, $bodyP, $bodyOfs, $invI, $step_size) {
    var $m_steps, var$11, $mi, $miend, $iMJ_ptr, $J_ptr, var$16, var$17, var$18, $b1, $b2, $k1, $j, var$23, $invIrow1, $k2, $invIrow2;
    oooi_DxQuickStep_$callClinit();
    $m_steps = ($m + ($step_size - 1 | 0) | 0) / $step_size | 0;
    while (true) {
        var$11 = ooot_Atomics_ThrsafeIncrementIntUpToLimit($mi_storage, $m_steps);
        if (var$11 == $m_steps)
            break;
        $mi = $rt_imul(var$11, $step_size);
        $miend = $mi + jl_Math_min($step_size, $m - $mi | 0) | 0;
        $iMJ_ptr = $mi * 12 | 0;
        $J_ptr = $mi * 16 | 0;
        while (true) {
            var$16 = $jb.data;
            var$17 = $bodyP.data;
            var$18 = $mi * 2 | 0;
            $b1 = var$16[var$18];
            $b2 = var$16[var$18 + 1 | 0];
            $k1 = var$17[$b1 + $bodyOfs | 0].$invMass;
            $j = 0;
            while ($j != 3) {
                var$23 = $J.data;
                $iMJ.data[($iMJ_ptr + 0 | 0) + $j | 0] = $k1 * var$23[($J_ptr + 0 | 0) + $j | 0];
                $j = $j + 1 | 0;
            }
            $invIrow1 = ($b1 * 12 | 0) + 0 | 0;
            ooo_OdeMath_dMultiply0_3312($iMJ, $iMJ_ptr + 3 | 0, $invI, $invIrow1, $J, $J_ptr + 3 | 0);
            if ($b2 != (-1)) {
                $k2 = var$17[$b2 + $bodyOfs | 0].$invMass;
                $j = 0;
                while ($j != 3) {
                    var$16 = $J.data;
                    $iMJ.data[($iMJ_ptr + 6 | 0) + $j | 0] = $k2 * var$16[($J_ptr + 8 | 0) + $j | 0];
                    $j = $j + 1 | 0;
                }
                $invIrow2 = ($b2 * 12 | 0) + 0 | 0;
                ooo_OdeMath_dMultiply0_3312($iMJ, $iMJ_ptr + 9 | 0, $invI, $invIrow2, $J, $J_ptr + 11 | 0);
            }
            $mi = $mi + 1 | 0;
            if ($mi == $miend)
                break;
            $iMJ_ptr = $iMJ_ptr + 12 | 0;
            $J_ptr = $J_ptr + 16 | 0;
        }
    }
};
$java.oooi_DxQuickStep_multiplyAdd_J = function($mi_storage, $m, $in_offset, $in_stride, $J, $jb, $in, $step_size) {
    var $m_steps, var$10, $mi, $miend, $J_ptr, var$14, $b1, $b2, $sum, $in_ofs, $j, var$20;
    oooi_DxQuickStep_$callClinit();
    $m_steps = ($m + ($step_size - 1 | 0) | 0) / $step_size | 0;
    while (true) {
        var$10 = ooot_Atomics_ThrsafeIncrementIntUpToLimit($mi_storage, $m_steps);
        if (var$10 == $m_steps)
            break;
        $mi = $rt_imul(var$10, $step_size);
        $miend = $mi + jl_Math_min($step_size, $m - $mi | 0) | 0;
        $J_ptr = $mi * 16 | 0;
        while (true) {
            var$14 = $jb.data;
            var$10 = $mi * 2 | 0;
            $b1 = var$14[var$10];
            $b2 = var$14[var$10 + 1 | 0];
            $sum = 0.0;
            $in_ofs = $rt_imul($b1, $in_stride) + $in_offset | 0;
            $j = 0;
            while ($j != 6) {
                var$20 = $J.data;
                var$14 = $in.data;
                $sum = $sum + var$20[($J_ptr + $j | 0) + 0 | 0] * var$14[$in_ofs + $j | 0];
                $j = $j + 1 | 0;
            }
            if ($b2 != (-1)) {
                var$10 = $rt_imul($b2, $in_stride) + $in_offset | 0;
                $j = 0;
                while ($j != 6) {
                    var$14 = $J.data;
                    var$20 = $in.data;
                    $sum = $sum + var$14[($J_ptr + $j | 0) + 8 | 0] * var$20[var$10 + $j | 0];
                    $j = $j + 1 | 0;
                }
            }
            var$14 = $J.data;
            var$10 = $J_ptr + 6 | 0;
            var$14[var$10] = var$14[var$10] + $sum;
            $mi = $mi + 1 | 0;
            if ($mi == $miend)
                break;
            $J_ptr = $J_ptr + 16 | 0;
        }
    }
};
$java.oooi_DxQuickStep_ensureSize_invI = function($this, $size) {
    var $a, var$3;
    $a = $this.$buf_invI;
    var$3 = $a.data;
    if (var$3.length >= $size && $java.oooi_DxQuickStep_REUSE_OBJECTS)
        ju_Arrays_fill5($a, 0.0);
    else
        $a = $rt_createDoubleArray($size);
    return $a;
};
$java.oooi_DxQuickStep_ensureSize_jointinfos = function($this, $size) {
    var $a, var$3, $i, $j;
    $a = $this.$buf_jointinfos;
    var$3 = $a.data;
    if (var$3.length >= $size && $java.oooi_DxQuickStep_REUSE_OBJECTS) {
        $i = 0;
        while ($i < $size) {
            $j = var$3[$i];
            if ($j !== null) {
                $j.$joint0 = null;
                $j.$info1.$m0 = 0;
                $j.$info1.$nub = 0;
            }
            $i = $i + 1 | 0;
        }
    } else {
        $a = $rt_createArray(oooi_DxQuickStep$DJointWithInfo1, $size);
        $i = 0;
        while ($i < $size) {
            $a.data[$i] = oooi_DxQuickStep$DJointWithInfo1__init_1(null);
            $i = $i + 1 | 0;
        }
    }
    return $a;
};
$java.oooi_DxQuickStep_dxQuickStepIsland = function($this, $callContext) {
    var $memarena, $nb, $_nj, $invI, $jointinfos, $allowedThreads, $stagesMemArenaState, $stage1CallContext, $stage0BodiesCallContext, $stage0JointsCallContext, $stage1, $joints, $i, $bodies;
    $memarena = oooip_DxStepperProcessingCallContext_m_stepperArena($callContext);
    $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
    $_nj = oooip_DxStepperProcessingCallContext_m_islandJointsCount($callContext);
    $invI = $java.oooi_DxQuickStep_ensureSize_invI($this, ($nb * 3 | 0) * 4 | 0);
    oooip_DxWorldProcessMemArena_dummy($memarena);
    $jointinfos = $java.oooi_DxQuickStep_ensureSize_jointinfos($this, $_nj);
    $allowedThreads = oooip_DxStepperProcessingCallContext_m_stepperAllowedThreads($callContext);
    oooi_Common_dIASSERT(!$allowedThreads ? 0 : 1);
    $stagesMemArenaState = oooip_DxWorldProcessMemArena_SaveState($memarena);
    oooip_DxWorldProcessMemArena_dummy($memarena);
    $stage1CallContext = oooi_DxQuickStep$dxQuickStepperStage1CallContext__init_1(null);
    $stage1CallContext.$Initialize($callContext, $stagesMemArenaState, $invI, $jointinfos);
    oooip_DxWorldProcessMemArena_dummy($memarena);
    $stage0BodiesCallContext = $java.oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext__init_0(null);
    $stage0BodiesCallContext.$Initialize0($callContext, $invI);
    oooip_DxWorldProcessMemArena_dummy($memarena);
    $stage0JointsCallContext = $java.oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext__init_(null);
    $stage0JointsCallContext.$Initialize1($callContext, $jointinfos, $stage1CallContext.$m_stage0Outputs);
    if ($allowedThreads == 1) {
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage0_Bodies($stage0BodiesCallContext);
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage0_Joints($stage0JointsCallContext);
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage1($stage1CallContext);
    } else {
        $stage1 = oooip_DxStepperProcessingCallContext_m_taskGroup($callContext).$subgroup($rt_s(1462), $java.oooi_DxQuickStep$1__init_($this, $stage1CallContext));
        $joints = $stage1.$subtask($rt_s(1463), $java.oooi_DxQuickStep$2__init_($this, $stage0JointsCallContext));
        $joints.$submit0();
        $i = 1;
        while ($i < $allowedThreads) {
            $bodies = $stage1.$subtask($rt_s(1464), $java.oooi_DxQuickStep$3__init_($this, $stage0BodiesCallContext));
            $bodies.$submit0();
            $i = $i + 1 | 0;
        }
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage0_Bodies($stage0BodiesCallContext);
        $stage1.$submit0();
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage0_Bodies = function($callContext) {
    var $bodyP, $bodyOfs, $nb, $i, $world, $gravity_x, $b, $gravity_y, $gravity_z, $invIrowA, var$12, var$13, $invIrowP, $tmp_0, $I, $h, $L, $Itild, $itInv, $tau0;
    oooi_DxQuickStep_$callClinit();
    a: {
        $bodyP = oooip_DxStepperProcessingCallContext_m_islandBodiesStartA($callContext.$m_stepperCallContext5);
        $bodyOfs = oooip_DxStepperProcessingCallContext_m_islandBodiesStartOfs($callContext.$m_stepperCallContext5);
        $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext.$m_stepperCallContext5);
        if (!ooot_Atomics_ThrsafeExchange($callContext.$m_tagsTaken, 1)) {
            $i = 0;
            while (true) {
                if ($i >= $nb)
                    break a;
                $bodyP.data[$bodyOfs + $i | 0].$tag = $i;
                $i = $i + 1 | 0;
            }
        }
    }
    b: {
        if (!ooot_Atomics_ThrsafeExchange($callContext.$m_gravityTaken, 1)) {
            c: {
                $world = oooip_DxStepperProcessingCallContext_m_world($callContext.$m_stepperCallContext5);
                $gravity_x = oom_DVector3_get0($world.$gravity);
                if ($gravity_x !== 0.0) {
                    $i = 0;
                    while (true) {
                        if ($i >= $nb)
                            break c;
                        $b = $bodyP.data[$i + $bodyOfs | 0];
                        if (!($b.$flags2 & 8))
                            oom_DVector3_add0($b.$facc, 0, $b.$mass.$_mass * $gravity_x);
                        $i = $i + 1 | 0;
                    }
                }
            }
            d: {
                $gravity_y = oom_DVector3_get1($world.$gravity);
                if ($gravity_y !== 0.0) {
                    $i = 0;
                    while (true) {
                        if ($i >= $nb)
                            break d;
                        $b = $bodyP.data[$i + $bodyOfs | 0];
                        if (!($b.$flags2 & 8))
                            oom_DVector3_add0($b.$facc, 1, $b.$mass.$_mass * $gravity_y);
                        $i = $i + 1 | 0;
                    }
                }
            }
            $gravity_z = oom_DVector3_get2($world.$gravity);
            if ($gravity_z !== 0.0) {
                $i = 0;
                while (true) {
                    if ($i >= $nb)
                        break b;
                    $b = $bodyP.data[$i + $bodyOfs | 0];
                    if (!($b.$flags2 & 8))
                        oom_DVector3_add0($b.$facc, 2, $b.$mass.$_mass * $gravity_z);
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    $invIrowA = $callContext.$m_invI1;
    while (true) {
        var$12 = ooot_Atomics_ThrsafeIncrementIntUpToLimit($callContext.$m_inertiaBodyIndex, $nb);
        if (var$12 == $nb)
            break;
        var$13 = $bodyP.data;
        $invIrowP = var$12 * 12 | 0;
        $tmp_0 = oom_DMatrix3__init_1();
        $b = var$13[var$12 + $bodyOfs | 0];
        ooo_OdeMath_dMultiply2_333($tmp_0, $b.$invI, $b.$posr().$R());
        ooo_OdeMath_dMultiply0_3330($invIrowA, $invIrowP, $b.$posr().$R(), $tmp_0);
        if ($b.$isFlagsGyroscopic() && $b.$invMass > 0.0) {
            $I = oom_DMatrix3__init_1();
            ooo_OdeMath_dMultiply2_333($tmp_0, $b.$mass.$_I, $b.$posr().$R());
            ooo_OdeMath_dMultiply0_333($I, $b.$posr().$R(), $tmp_0);
            $h = oooip_DxStepperProcessingCallContext_m_stepSize($callContext.$m_stepperCallContext5);
            $L = oom_DVector3__init_();
            ooo_OdeMath_dMultiply0_331($L, $I, $b.$avel);
            $Itild = oom_DMatrix3__init_1();
            ooo_OdeMath_dSetCrossMatrixMinus($Itild, $L);
            oom_DMatrix3_scale($Itild, $h);
            oom_DMatrix3_add($Itild, $I);
            oom_DVector3_scale($L, oooi_Common_dRecip($h));
            $itInv = oom_DMatrix3__init_1();
            if (ooo_OdeMath_dInvertMatrix3($itInv, $Itild) !== 0.0) {
                ooo_OdeMath_dMultiply0_333($Itild, $I, $itInv);
                $java.oom_DMatrix3_sub($Itild, 0, 0, 1.0);
                $java.oom_DMatrix3_sub($Itild, 1, 1, 1.0);
                $java.oom_DMatrix3_sub($Itild, 2, 2, 1.0);
                $tau0 = oom_DVector3__init_();
                ooo_OdeMath_dMultiply0_331($tau0, $Itild, $L);
                oom_DVector3_add($b.$tacc, $tau0);
            }
        }
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage0_Joints = function($callContext) {
    var $_jointP, $_jointOfs, $_nj, $mcurr, $mfbcurr, $jicurrA, $jicurrP, $i, var$10, $jicurrO, $j, $jm;
    oooi_DxQuickStep_$callClinit();
    $_jointP = oooip_DxStepperProcessingCallContext_m_islandJointsStartA($callContext.$m_stepperCallContext7);
    $_jointOfs = oooip_DxStepperProcessingCallContext_m_islandJointsStartOfs($callContext.$m_stepperCallContext7);
    $_nj = oooip_DxStepperProcessingCallContext_m_islandJointsCount($callContext.$m_stepperCallContext7);
    $mcurr = 0;
    $mfbcurr = 0;
    $jicurrA = $callContext.$m_jointinfos1;
    $jicurrP = 0;
    $i = 0;
    while ($i < $_nj) {
        var$10 = $_jointP.data;
        $jicurrO = $jicurrA.data[$jicurrP];
        $j = var$10[$i + $_jointOfs | 0];
        $j.$getInfo1($jicurrO.$info1);
        oooi_Common_dIASSERT($jicurrO.$info1.$m0 <= 6 && $jicurrO.$info1.$nub <= $jicurrO.$info1.$m0 ? 1 : 0);
        $jm = $jicurrO.$info1.$m0;
        if ($jm) {
            $mcurr = $mcurr + $jm | 0;
            if ($j.$feedback !== null)
                $mfbcurr = $mfbcurr + $jm | 0;
            $jicurrO.$joint0 = $j;
            $jicurrP = $jicurrP + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    $callContext.$m_stage0Outputs0.$nj0 = $jicurrP;
    $callContext.$m_stage0Outputs0.$m = $mcurr;
    $callContext.$m_stage0Outputs0.$mfb = $mfbcurr;
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage1 = function($stage1CallContext) {
    var $callContext, $invI, $jointinfos, $nj, $m, $mfb, $memarena, var$9, $_nj, $nb, $mindex, $J, $Jcopy, $jb, $findex, var$17, $moffs, $mfboffs, var$20, $i, $jicurr, $joint, var$24, $localContext, $stage1MemarenaState, $stage3CallContext, $rhs_tmp, $stage2CallContext, $allowedThreads, $stage3, $stage2bSync, $stage2aSync, $stage2a_allowedThreads, $bodies;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage1CallContext.$m_stepperCallContext0;
    $invI = $stage1CallContext.$m_invI;
    $jointinfos = $stage1CallContext.$m_jointinfos;
    $nj = $stage1CallContext.$m_stage0Outputs.$nj0;
    $m = $stage1CallContext.$m_stage0Outputs.$m;
    $mfb = $stage1CallContext.$m_stage0Outputs.$mfb;
    $memarena = oooip_DxStepperProcessingCallContext_m_stepperArena($callContext);
    oooip_DxWorldProcessMemArena_RestoreState($memarena, $stage1CallContext.$m_stageMemArenaState);
    var$9 = null;
    oooi_Common_dIVERIFY(var$9 !== null ? 0 : 1);
    $_nj = oooip_DxStepperProcessingCallContext_m_islandJointsCount($callContext);
    oooip_DxWorldProcessMemArena_ShrinkArrayDJointWithInfo1($memarena, $jointinfos, $_nj, $nj);
    $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
    $mindex = null;
    $J = null;
    $Jcopy = null;
    $jb = null;
    $findex = null;
    if ($m > 0) {
        oooip_DxWorldProcessMemArena_dummy($memarena);
        $mindex = $rt_createIntArray(2 * ($nj + 1 | 0) | 0);
        var$17 = $mindex.data;
        $moffs = 0;
        $mfboffs = 0;
        var$17[0] = $moffs;
        var$17[1] = $mfboffs;
        var$20 = 2;
        $i = 0;
        while ($i < $nj) {
            $jicurr = $jointinfos.data[$i];
            $joint = $jicurr.$joint0;
            $moffs = $moffs + $jicurr.$info1.$m0 | 0;
            if ($joint.$feedback !== null)
                $mfboffs = $mfboffs + $jicurr.$info1.$m0 | 0;
            var$17[var$20 + 0 | 0] = $moffs;
            var$17[var$20 + 1 | 0] = $mfboffs;
            var$20 = var$20 + 2 | 0;
            $i = $i + 1 | 0;
        }
        $jb = oooip_DxWorldProcessMemArena_AllocateArrayInt($memarena, $m * 2 | 0);
        $findex = oooip_DxWorldProcessMemArena_AllocateArrayInt($memarena, $m);
        var$24 = $m * 16 | 0;
        $J = oooip_DxWorldProcessMemArena_AllocateArrayDReal($memarena, var$24);
        $Jcopy = oooip_DxWorldProcessMemArena_AllocateArrayDReal($memarena, var$24);
    }
    oooip_DxWorldProcessMemArena_dummy($memarena);
    $localContext = oooi_DxQuickStep$dxQuickStepperLocalContext__init_1(null);
    $localContext.$Initialize2($invI, $jointinfos, $nj, $m, $mfb, $mindex, $findex, $J, $jb, $Jcopy);
    $stage1MemarenaState = oooip_DxWorldProcessMemArena_SaveState($memarena);
    oooip_DxWorldProcessMemArena_dummy($memarena);
    $stage3CallContext = $java.oooi_DxQuickStep$dxQuickStepperStage3CallContext__init_0(null);
    $stage3CallContext.$Initialize3($callContext, $localContext, $stage1MemarenaState);
    if ($m <= 0)
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage3($stage3CallContext);
    else {
        oooip_DxWorldProcessMemArena_dummy($memarena);
        $rhs_tmp = $rt_createDoubleArray($nb * 6 | 0);
        oooip_DxWorldProcessMemArena_dummy($memarena);
        $stage2CallContext = oooi_DxQuickStep$dxQuickStepperStage2CallContext__init_1(null);
        $stage2CallContext.$Initialize4($callContext, $localContext, $rhs_tmp);
        $allowedThreads = oooip_DxStepperProcessingCallContext_m_stepperAllowedThreads($callContext);
        oooi_Common_dIASSERT(!$allowedThreads ? 0 : 1);
        if ($allowedThreads == 1) {
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage2a($stage2CallContext);
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage2b($stage2CallContext);
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage2c($stage2CallContext);
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage3($stage3CallContext);
        } else {
            $stage3 = oooip_DxStepperProcessingCallContext_m_taskGroup($callContext).$subgroup($rt_s(1465), $java.oooi_DxQuickStep$4__init_($stage3CallContext));
            $stage2bSync = $stage3.$subgroup($rt_s(1466), $java.oooi_DxQuickStep$5__init_($stage2CallContext, $stage3));
            $stage2aSync = $stage2bSync.$subgroup($rt_s(1467), $java.oooi_DxQuickStep$6__init_($stage2CallContext, $stage2bSync));
            $stage2a_allowedThreads = $java.oooi_DxQuickStep_CalculateOptimalThreadsCount($nj, $allowedThreads, 1);
            $i = 1;
            while ($i < $stage2a_allowedThreads) {
                $bodies = $stage2aSync.$subtask($rt_s(1468), $java.oooi_DxQuickStep$7__init_($stage2CallContext));
                $bodies.$submit0();
                $i = $i + 1 | 0;
            }
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage2a($stage2CallContext);
            $stage2aSync.$submit0();
            $stage2bSync.$submit0();
            $stage3.$submit0();
        }
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage2aSync = function($stage2CallContext, $group) {
    var $callContext, $nb, $allowedThreads, $stage2b_allowedThreads, $i, $task;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage2CallContext.$m_stepperCallContext;
    $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
    $allowedThreads = oooip_DxStepperProcessingCallContext_m_stepperAllowedThreads($callContext);
    $stage2b_allowedThreads = $java.oooi_DxQuickStep_CalculateOptimalThreadsCount($nb, $allowedThreads, 16);
    $i = 1;
    while ($i < $stage2b_allowedThreads) {
        $task = $group.$subtask($rt_s(1469), $java.oooi_DxQuickStep$8__init_($stage2CallContext));
        $task.$submit0();
        $i = $i + 1 | 0;
    }
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage2b($stage2CallContext);
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage2bSync = function($stage2CallContext, $group) {
    var $callContext, $allowedThreads, $localContext, $m, $stage2c_allowedThreads, $i, $task;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage2CallContext.$m_stepperCallContext;
    $allowedThreads = oooip_DxStepperProcessingCallContext_m_stepperAllowedThreads($callContext);
    $localContext = $stage2CallContext.$m_localContext;
    $m = $localContext.$m_m;
    $stage2c_allowedThreads = $java.oooi_DxQuickStep_CalculateOptimalThreadsCount($m, $allowedThreads, 32);
    $i = 1;
    while ($i < $stage2c_allowedThreads) {
        $task = $group.$subtask($rt_s(1470), $java.oooi_DxQuickStep$9__init_($stage2CallContext));
        $task.$submit0();
        $i = $i + 1 | 0;
    }
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage2c($stage2CallContext);
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage2a = function($stage2CallContext) {
    var $callContext, $localContext, $jointinfos, $nj, $mindex, $world, $stepsizeRecip, $findex, $J, $Jcopy, $jCopy_ofs, $worldERP, $worldCFM, $validFIndices, $Jinfo, var$17, var$18, var$19, $ofsi, $j, $jCurr, $jEnd, $jCurr_0, var$25, $joint, var$27, $fival, $mfbcurr, $mfbnext, $mfbCount, $jEndMfb, $jb, $b1, $b2, $jb_end, $jb_ptr;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage2CallContext.$m_stepperCallContext;
    $localContext = $stage2CallContext.$m_localContext;
    $jointinfos = $localContext.$m_jointinfos0;
    $nj = $localContext.$m_nj;
    $mindex = $localContext.$m_mindex;
    $world = oooip_DxStepperProcessingCallContext_m_world($callContext);
    $stepsizeRecip = oooi_Common_dRecip(oooip_DxStepperProcessingCallContext_m_stepSize($callContext));
    $findex = $localContext.$m_findex;
    $J = $localContext.$m_J;
    $Jcopy = $localContext.$m_Jcopy;
    $jCopy_ofs = 0;
    $worldERP = $world.$getERP();
    $worldCFM = $world.$getCFM();
    $validFIndices = 0;
    $Jinfo = $java.oooij_Info2DescrQuickStep__init_();
    $Jinfo.$setRowskip(16, 16);
    $Jinfo.$setArrays($J, $findex);
    while (true) {
        var$17 = ooot_Atomics_ThrsafeIncrementIntUpToLimit($stage2CallContext.$m_ji_J, $nj);
        if (var$17 == $nj)
            break;
        var$18 = $mindex.data;
        var$19 = var$17 * 2 | 0;
        $ofsi = var$18[var$19 + 0 | 0];
        $j = var$18[var$19 + 2 | 0] - $ofsi | 0;
        $jCurr = $ofsi * 16 | 0;
        $jEnd = $jCurr + ($j * 16 | 0) | 0;
        $jCurr_0 = $jCurr;
        while ($jCurr_0 != $jEnd) {
            var$25 = $J.data;
            ooo_DMatrix_dSetZero($J, $jCurr_0 + 0 | 0, 6);
            var$25[$jCurr_0 + 6 | 0] = 0.0;
            var$25[$jCurr_0 + 7 | 0] = $worldCFM;
            ooo_DMatrix_dSetZero($J, $jCurr_0 + 8 | 0, 6);
            var$25[$jCurr_0 + 14 | 0] = (-Infinity);
            var$25[$jCurr_0 + 15 | 0] = Infinity;
            $jCurr_0 = $jCurr_0 + 16 | 0;
        }
        var$25 = $jointinfos.data;
        $Jinfo.$setAllP($jCurr + 0 | 0, $jCurr + 8 | 0, $jCurr + 6 | 0, $jCurr + 14 | 0, $ofsi);
        ooo_DMatrix_dSetValue($findex, $ofsi, $j, (-1));
        $joint = var$25[var$17].$joint0;
        $joint.$getInfo2($stepsizeRecip, $worldERP, $Jinfo);
        while ($j) {
            var$25 = $findex.data;
            $j = $j + (-1) | 0;
            var$27 = $j + $ofsi | 0;
            $fival = var$25[var$27];
            if ($fival != (-1)) {
                var$25[var$27] = $fival + $ofsi | 0;
                $validFIndices = $validFIndices + 1 | 0;
            }
        }
        $jCurr_0 = $jCurr;
        while ($jCurr_0 != $jEnd) {
            var$25 = $J.data;
            var$27 = $jCurr_0 + 6 | 0;
            var$25[var$27] = var$25[var$27] * $stepsizeRecip;
            var$27 = $jCurr_0 + 7 | 0;
            var$25[var$27] = var$25[var$27] * $stepsizeRecip;
            $jCurr_0 = $jCurr_0 + 16 | 0;
        }
        $mfbcurr = var$18[var$19 + 1 | 0];
        $mfbnext = var$18[var$19 + 3 | 0];
        $mfbCount = $mfbnext - $mfbcurr | 0;
        if ($mfbCount) {
            $jEndMfb = $jCurr + ($mfbCount * 16 | 0) | 0;
            while ($jCurr < $jEndMfb) {
                jl_System_arraycopy($J, $jCurr + 0 | 0, $Jcopy, $jCopy_ofs + 0 | 0, 6);
                jl_System_arraycopy($J, $jCurr + 8 | 0, $Jcopy, $jCopy_ofs + 6 | 0, 6);
                $jCopy_ofs = $jCopy_ofs + 12 | 0;
                $jCurr = $jCurr + 16 | 0;
            }
        }
    }
    ooot_Atomics_ThrsafeAdd($localContext.$m_valid_findices, $validFIndices);
    $jb = $localContext.$m_jb;
    while (true) {
        var$19 = ooot_Atomics_ThrsafeIncrementIntUpToLimit($stage2CallContext.$m_ji_jb, $nj);
        if (var$19 == $nj)
            break;
        $joint = $jointinfos.data[var$19].$joint0;
        $b1 = $joint.$node0.data[0].$body0 === null ? (-1) : $joint.$node0.data[0].$body0.$tag;
        $b2 = $joint.$node0.data[1].$body0 === null ? (-1) : $joint.$node0.data[1].$body0.$tag;
        var$25 = $mindex.data;
        var$27 = var$19 * 2 | 0;
        $jb_end = 2 * var$25[var$27 + 2 | 0] | 0;
        $jb_ptr = 2 * var$25[var$27 + 0 | 0] | 0;
        while ($jb_ptr != $jb_end) {
            var$25 = $jb.data;
            var$25[$jb_ptr] = $b1;
            var$25[$jb_ptr + 1 | 0] = $b2;
            $jb_ptr = $jb_ptr + 2 | 0;
        }
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage2b = function($stage2CallContext) {
    var $callContext, $localContext, $stepsizeRecip, $bodyA, $bodyOfs, $nb, $invI, $rhs_tmp, $step_size, $nb_steps, var$12, $bi, $biend, $rhscurr, $invIrow, $b, $body_invMass, $j, var$20, var$21, var$22, var$23, $k;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage2CallContext.$m_stepperCallContext;
    $localContext = $stage2CallContext.$m_localContext;
    $stepsizeRecip = oooi_Common_dRecip(oooip_DxStepperProcessingCallContext_m_stepSize($callContext));
    $bodyA = oooip_DxStepperProcessingCallContext_m_islandBodiesStartA($callContext);
    $bodyOfs = oooip_DxStepperProcessingCallContext_m_islandBodiesStartOfs($callContext);
    $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
    $invI = $localContext.$m_invI0;
    $rhs_tmp = $stage2CallContext.$m_rhs_tmp;
    $step_size = 16;
    $nb_steps = ($nb + 15 | 0) / $step_size | 0;
    while (true) {
        var$12 = ooot_Atomics_ThrsafeIncrementIntUpToLimit($stage2CallContext.$m_bi, $nb_steps);
        if (var$12 == $nb_steps)
            break;
        $bi = $rt_imul(var$12, $step_size);
        $biend = $bi + jl_Math_min($step_size, $nb - $bi | 0) | 0;
        $rhscurr = $bi * 6 | 0;
        $invIrow = $bi * 12 | 0;
        while (true) {
            $b = $bodyA.data[$bodyOfs + $bi | 0];
            $body_invMass = $b.$invMass;
            $j = 0;
            while ($j < 3) {
                var$20 = $rhs_tmp.data;
                var$21 = ($rhscurr + 0 | 0) + $j | 0;
                var$22 = $b.$facc;
                var$12 = 0 + $j | 0;
                var$20[var$21] =  -(oom_DVector3_get(var$22, var$12) * $body_invMass + oom_DVector3_get($b.$lvel, var$12) * $stepsizeRecip);
                $j = $j + 1 | 0;
            }
            var$23 = $rhscurr + 3 | 0;
            ooo_OdeMath_dMultiply0_3311($rhs_tmp, var$23, $invI, $invIrow + 0 | 0, $b.$tacc);
            $k = 0;
            while ($k < 3) {
                var$20 = $rhs_tmp.data;
                var$12 = var$23 + $k | 0;
                var$20[var$12] =  -(oom_DVector3_get($b.$avel, 0 + $k | 0) * $stepsizeRecip) - var$20[var$12];
                $k = $k + 1 | 0;
            }
            $bi = $bi + 1 | 0;
            if ($bi == $biend)
                break;
            $rhscurr = $rhscurr + 6 | 0;
            $invIrow = $invIrow + 12 | 0;
        }
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage2c = function($stage2CallContext) {
    var $localContext, $J, $jb, $rhs_tmp, $m;
    oooi_DxQuickStep_$callClinit();
    $localContext = $stage2CallContext.$m_localContext;
    $J = $localContext.$m_J;
    $jb = $localContext.$m_jb;
    $rhs_tmp = $stage2CallContext.$m_rhs_tmp;
    $m = $localContext.$m_m;
    $java.oooi_DxQuickStep_multiplyAdd_J($stage2CallContext.$m_Jrhsi, $m, 0, 6, $J, $jb, $rhs_tmp, 32);
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage3 = function($stage3CallContext) {
    var $callContext, $localContext, $memarena, var$5, $stage3MemarenaState, $stage5CallContext, $m, $lambda, $nb, $cforce, $iMJ, $order, $i, $last_lambda, $allowedThreads, $singleThreadedExecution, $bi_links_or_mi_levels, $mi_links, $stage4CallContext, $world, $num_iterations, $iteration, $stage5, $stage4LCP_IterationSync, $stage4LCP_Iteration_allowedThreads, $stage4LCP_IterationStart, $stage4LCP_fcStart, $stage4LCP_iMJSync, $stage4LCP_ReorderPrep, $nj, $stage4a_allowedThreads, $stage4a, $stage4LCP_iMJ_allowedThreads,
    $stage4LCP_iMJComputation;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage3CallContext.$m_stepperCallContext6;
    $localContext = $stage3CallContext.$m_localContext3;
    $memarena = oooip_DxStepperProcessingCallContext_m_stepperArena($callContext);
    oooip_DxWorldProcessMemArena_RestoreState($memarena, $stage3CallContext.$m_stage1MemArenaState);
    var$5 = null;
    oooi_Common_dIVERIFY(var$5 !== null ? 0 : 1);
    $stage3MemarenaState = oooip_DxWorldProcessMemArena_SaveState($memarena);
    $stage5CallContext = oooi_DxQuickStep$dxQuickStepperStage5CallContext__init_1(null);
    $stage5CallContext.$Initialize3($callContext, $localContext, $stage3MemarenaState);
    $m = $localContext.$m_m;
    if ($m <= 0)
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage5($stage5CallContext);
    else {
        $lambda = oooip_DxWorldProcessMemArena_AllocateArrayDReal($memarena, $m);
        $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
        $cforce = oooip_DxWorldProcessMemArena_AllocateArrayDReal($memarena, $nb * 6 | 0);
        $iMJ = oooip_DxWorldProcessMemArena_AllocateArrayDReal($memarena, $m * 12 | 0);
        $order = $rt_createArray(oooi_DxQuickStep$IndexError, $m);
        $i = 0;
        while ($i < $m) {
            $order.data[$i] = oooi_DxQuickStep$IndexError__init_1(null);
            $i = $i + 1 | 0;
        }
        $last_lambda = null;
        var$5 = $java.oooi_DxQuickStep_CONSTRAINTS_REORDERING_METHOD;
        oooi_DxQuickStep$ReorderingMethod_$callClinit();
        if (var$5 === oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__BY_ERROR)
            $last_lambda = oooip_DxWorldProcessMemArena_AllocateArrayDReal($memarena, $m);
        $allowedThreads = oooip_DxStepperProcessingCallContext_m_stepperAllowedThreads($callContext);
        $singleThreadedExecution = $allowedThreads != 1 ? 0 : 1;
        $bi_links_or_mi_levels = null;
        $mi_links = null;
        if (!$singleThreadedExecution && $java.oooi_DxQuickStep_ENABLE_LCP_ITERATIONS_MULTITHREADING) {
            $bi_links_or_mi_levels = $rt_createArray(juca_AtomicInteger, jl_Math_max($nb, $m));
            $mi_links = $rt_createArray(juca_AtomicInteger, 2 * ($m + 1 | 0) | 0);
        }
        $stage4CallContext = oooi_DxQuickStep$dxQuickStepperStage4CallContext__init_1(null);
        $stage4CallContext.$Initialize5($callContext, $localContext, $lambda, $cforce, $iMJ, $order, $last_lambda, $bi_links_or_mi_levels, $mi_links);
        if ($singleThreadedExecution) {
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4a($stage4CallContext);
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_iMJComputation($stage4CallContext);
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_STfcComputation($stage4CallContext);
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_AdComputation($stage4CallContext);
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ReorderPrep($stage4CallContext);
            $world = oooip_DxStepperProcessingCallContext_m_world($callContext);
            $num_iterations = $world.$qs.$num_iterations;
            $iteration = 0;
            while ($iteration < $num_iterations) {
                if ($java.oooi_DxQuickStep_IsSORConstraintsReorderRequiredForIteration($iteration)) {
                    $stage4CallContext.$ResetSOR_ConstraintsReorderVariables(0);
                    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ConstraintsShuffling($stage4CallContext, $iteration);
                }
                $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_STIteration($stage4CallContext);
                $iteration = $iteration + 1 | 0;
            }
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4b($stage4CallContext);
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage5($stage5CallContext);
        } else {
            $stage5 = oooip_DxStepperProcessingCallContext_m_taskGroup($callContext).$subgroup($rt_s(1471), $java.oooi_DxQuickStep$10__init_($stage5CallContext));
            $stage4LCP_IterationSync = $stage5.$subgroup($rt_s(1472), $java.oooi_DxQuickStep$11__init_($stage4CallContext, $stage5));
            $stage4LCP_Iteration_allowedThreads = $java.oooi_DxQuickStep_CalculateOptimalThreadsCount($m, $allowedThreads, 1);
            $stage4CallContext.$AssignLCP_IterationData($stage4LCP_IterationSync, $stage4LCP_Iteration_allowedThreads);
            $stage4LCP_IterationStart = $stage4LCP_IterationSync.$subgroup($rt_s(1473), $java.oooi_DxQuickStep$12__init_($stage4CallContext));
            $stage4LCP_fcStart = $stage4LCP_IterationStart.$subgroup($rt_s(1474), $java.oooi_DxQuickStep$13__init_($stage4CallContext, $stage4LCP_IterationStart));
            $stage4LCP_iMJSync = $stage4LCP_IterationStart.$subgroup($rt_s(1475), $java.oooi_DxQuickStep$14__init_($stage4CallContext, $stage4LCP_IterationStart));
            $stage4LCP_ReorderPrep = $stage4LCP_IterationStart.$subtask($rt_s(1476), $java.oooi_DxQuickStep$15__init_($stage4CallContext));
            $stage4LCP_ReorderPrep.$submit0();
            $nj = $localContext.$m_nj;
            $stage4a_allowedThreads = $java.oooi_DxQuickStep_CalculateOptimalThreadsCount($nj, $allowedThreads, 512);
            $i = 0;
            while ($i < $stage4a_allowedThreads) {
                $stage4a = $stage4LCP_fcStart.$subtask($rt_s(1477), $java.oooi_DxQuickStep$16__init_($stage4CallContext));
                $stage4a.$submit0();
                $i = $i + 1 | 0;
            }
            $stage4LCP_fcStart.$submit0();
            $stage4LCP_iMJ_allowedThreads = $java.oooi_DxQuickStep_CalculateOptimalThreadsCount($m, $allowedThreads, 8);
            $i = 1;
            while ($i < $stage4LCP_iMJ_allowedThreads) {
                $stage4LCP_iMJComputation = $stage4LCP_iMJSync.$subtask($rt_s(1478), $java.oooi_DxQuickStep$17__init_($stage4CallContext));
                $stage4LCP_iMJComputation.$submit0();
                $i = $i + 1 | 0;
            }
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_iMJComputation($stage4CallContext);
            $stage4LCP_iMJSync.$submit0();
            $stage4LCP_IterationStart.$submit0();
            $stage4LCP_IterationSync.$submit0();
            $stage5.$submit0();
        }
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4a = function($stage4CallContext) {
    var $localContext, $lambda, $mindex, $nj, $step_size, $nj_steps, var$8, var$9, $ji, $lambdacurr, $lambdsnext;
    oooi_DxQuickStep_$callClinit();
    $localContext = $stage4CallContext.$m_localContext2;
    $lambda = $stage4CallContext.$m_lambda;
    $mindex = $localContext.$m_mindex;
    $nj = $localContext.$m_nj;
    $step_size = 512;
    $nj_steps = ($nj + 511 | 0) / $step_size | 0;
    while (true) {
        var$8 = ooot_Atomics_ThrsafeIncrementIntUpToLimit($stage4CallContext.$m_ji_4a, $nj_steps);
        if (var$8 == $nj_steps)
            break;
        var$9 = $mindex.data;
        $ji = $rt_imul(var$8, $step_size);
        $lambdacurr = var$9[$ji * 2 | 0];
        $lambdsnext = var$9[2 * ($ji + jl_Math_min($step_size, $nj - $ji | 0) | 0) | 0];
        ooo_DMatrix_dSetZero($lambda, $lambdacurr, $lambdsnext - $lambdacurr | 0);
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_IterationSync = function($stage4CallContext, $group) {
    var $callContext, $localContext, $stage4b_allowedThreads, $allowedThreads, $i, $task;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage4CallContext.$m_stepperCallContext4;
    $localContext = $stage4CallContext.$m_localContext2;
    $stage4b_allowedThreads = 1;
    if ($java.oooi_DxQuickStep_IsStage4bJointInfosIterationRequired($localContext)) {
        $allowedThreads = oooip_DxStepperProcessingCallContext_m_stepperAllowedThreads($callContext);
        $stage4b_allowedThreads = $stage4b_allowedThreads + $java.oooi_DxQuickStep_CalculateOptimalThreadsCount($localContext.$m_nj, $allowedThreads - $stage4b_allowedThreads | 0, 256) | 0;
    }
    $i = 1;
    while ($i < $stage4b_allowedThreads) {
        $task = $group.$subtask($rt_s(1479), $java.oooi_DxQuickStep$18__init_($stage4CallContext));
        $task.$submit0();
        $i = $i + 1 | 0;
    }
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4b($stage4CallContext);
    return 1;
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_iMJComputation = function($stage4CallContext) {
    var $callContext, $localContext, $iMJ, $m, $J, $jb, $body, $bodyOfs, $invI;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage4CallContext.$m_stepperCallContext4;
    $localContext = $stage4CallContext.$m_localContext2;
    $iMJ = $stage4CallContext.$m_iMJ;
    $m = $localContext.$m_m;
    $J = $localContext.$m_J;
    $jb = $localContext.$m_jb;
    $body = oooip_DxStepperProcessingCallContext_m_islandBodiesStartA($callContext);
    $bodyOfs = oooip_DxStepperProcessingCallContext_m_islandBodiesStartOfs($callContext);
    $invI = $localContext.$m_invI0;
    $java.oooi_DxQuickStep_compute_invM_JT($stage4CallContext.$m_mi_iMJ, $m, $J, $iMJ, $jb, $body, $bodyOfs, $invI, 8);
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_iMJSync = function($stage4CallContext, $group) {
    var $callContext, $localContext, $m, $allowedThreads, $stage4LCP_Ad_allowedThreads, $i, $task;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage4CallContext.$m_stepperCallContext4;
    $localContext = $stage4CallContext.$m_localContext2;
    $m = $localContext.$m_m;
    $allowedThreads = oooip_DxStepperProcessingCallContext_m_stepperAllowedThreads($callContext);
    $stage4LCP_Ad_allowedThreads = $java.oooi_DxQuickStep_CalculateOptimalThreadsCount($m, $allowedThreads, 8);
    $i = 1;
    while ($i < $stage4LCP_Ad_allowedThreads) {
        $task = $group.$subtask($rt_s(1480), $java.oooi_DxQuickStep$19__init_($stage4CallContext));
        $task.$submit0();
        $i = $i + 1 | 0;
    }
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_AdComputation($stage4CallContext);
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_fcStart = function($stage4CallContext, $group) {
    var $callContext, $localContext, $fcPrepareComplexity, $fcCompleteComplexity, $allowedThreads, $stage4LCP_fcPrepare_allowedThreads, $stage4LCP_fcComplete_allowedThreads, $i, $task;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage4CallContext.$m_stepperCallContext4;
    $localContext = $stage4CallContext.$m_localContext2;
    $fcPrepareComplexity = $localContext.$m_m;
    $fcCompleteComplexity = 0;
    $allowedThreads = oooip_DxStepperProcessingCallContext_m_stepperAllowedThreads($callContext);
    $stage4LCP_fcPrepare_allowedThreads = $java.oooi_DxQuickStep_CalculateOptimalThreadsCount($fcPrepareComplexity, $allowedThreads, 256);
    $stage4LCP_fcComplete_allowedThreads = $java.oooi_DxQuickStep_CalculateOptimalThreadsCount($fcCompleteComplexity, $allowedThreads, 256);
    $stage4CallContext.$AssignLCP_fcAllowedThreads($stage4LCP_fcPrepare_allowedThreads, $stage4LCP_fcComplete_allowedThreads);
    $i = 1;
    while ($i < $stage4LCP_fcPrepare_allowedThreads) {
        $task = $group.$subtask($rt_s(1481), $java.oooi_DxQuickStep$20__init_($stage4CallContext));
        $task.$submit0();
        $i = $i + 1 | 0;
    }
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_MTfcComputation($stage4CallContext);
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_MTfcComputation = function($stage4CallContext) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_MTfcComputation_cold($stage4CallContext);
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_MTfcComputation_cold = function($stage4CallContext) {
    var $callContext, $fc, $nb, $step_size, $nb_steps, var$7, $bi, $bicnt;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage4CallContext.$m_stepperCallContext4;
    $fc = $stage4CallContext.$m_cforce;
    $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
    $step_size = 256;
    $nb_steps = ($nb + 255 | 0) / $step_size | 0;
    while (true) {
        var$7 = ooot_Atomics_ThrsafeIncrementIntUpToLimit($stage4CallContext.$m_mi_fc, $nb_steps);
        if (var$7 == $nb_steps)
            break;
        $bi = $rt_imul(var$7, $step_size);
        $bicnt = jl_Math_min($step_size, $nb - $bi | 0);
        ooo_DMatrix_dSetZero($fc, $bi * 6 | 0, $bicnt * 6 | 0);
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_STfcComputation = function($stage4CallContext) {
    var $fc, $callContext, $nb;
    oooi_DxQuickStep_$callClinit();
    $fc = $stage4CallContext.$m_cforce;
    $callContext = $stage4CallContext.$m_stepperCallContext4;
    $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
    oooi_Matrix_dSetZero($fc, $nb * 6 | 0);
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_AdComputation = function($stage4CallContext) {
    var $callContext, $localContext, $jb, $J, $m, $world, $qs, $sor_w, $iMJ, $step_size, $m_steps, var$13, $mi, $miend, $iMJ_ptr, $j_ptr, $sum, $j, var$20, var$21, $b2, var$23, $cfm_i, $Ad_i, $k;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage4CallContext.$m_stepperCallContext4;
    $localContext = $stage4CallContext.$m_localContext2;
    $jb = $localContext.$m_jb;
    $J = $localContext.$m_J;
    $m = $localContext.$m_m;
    $world = oooip_DxStepperProcessingCallContext_m_world($callContext);
    $qs = $world.$qs;
    $sor_w = $qs.$w2;
    $iMJ = $stage4CallContext.$m_iMJ;
    $step_size = 8;
    $m_steps = ($m + 7 | 0) / $step_size | 0;
    while (true) {
        var$13 = ooot_Atomics_ThrsafeIncrementIntUpToLimit($stage4CallContext.$m_mi_Ad, $m_steps);
        if (var$13 == $m_steps)
            break;
        $mi = $rt_imul(var$13, $step_size);
        $miend = $mi + jl_Math_min($step_size, $m - $mi | 0) | 0;
        $iMJ_ptr = $mi * 12 | 0;
        $j_ptr = $mi * 16 | 0;
        while (true) {
            $sum = 0.0;
            $j = 0;
            while ($j != 6) {
                var$20 = $iMJ.data;
                var$21 = $J.data;
                $sum = $sum + var$20[($iMJ_ptr + $j | 0) + 0 | 0] * var$21[($j_ptr + $j | 0) + 0 | 0];
                $j = $j + 1 | 0;
            }
            $b2 = $jb.data[($mi * 2 | 0) + 1 | 0];
            var$13 = $rt_compare($b2, (-1));
            if (var$13) {
                $j = 0;
                while ($j != 6) {
                    var$20 = $iMJ.data;
                    var$21 = $J.data;
                    $sum = $sum + var$20[($iMJ_ptr + $j | 0) + 6 | 0] * var$21[($j_ptr + $j | 0) + 8 | 0];
                    $j = $j + 1 | 0;
                }
            }
            var$20 = $J.data;
            var$23 = $j_ptr + 7 | 0;
            $cfm_i = var$20[var$23];
            $Ad_i = $sor_w / ($sum + $cfm_i);
            var$20[var$23] = $cfm_i * $Ad_i;
            var$23 = $j_ptr + 6 | 0;
            var$20[var$23] = var$20[var$23] * $Ad_i;
            $j = 0;
            while ($j != 6) {
                var$23 = ($j_ptr + 0 | 0) + $j | 0;
                var$20[var$23] = var$20[var$23] * $Ad_i;
                $j = $j + 1 | 0;
            }
            a: {
                if (var$13) {
                    $k = 0;
                    while (true) {
                        if ($k == 6)
                            break a;
                        var$13 = ($j_ptr + 8 | 0) + $k | 0;
                        var$20[var$13] = var$20[var$13] * $Ad_i;
                        $k = $k + 1 | 0;
                    }
                }
            }
            $mi = $mi + 1 | 0;
            if ($mi == $miend)
                break;
            $iMJ_ptr = $iMJ_ptr + 12 | 0;
            $j_ptr = $j_ptr + 16 | 0;
        }
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ReorderPrep = function($stage4CallContext) {
    var $localContext, $m, $order, $orderhead, $findex, $i, var$8, var$9;
    oooi_DxQuickStep_$callClinit();
    $localContext = $stage4CallContext.$m_localContext2;
    $m = $localContext.$m_m;
    $order = $stage4CallContext.$m_order;
    $orderhead = 0;
    $findex = $localContext.$m_findex;
    $i = 0;
    var$8 = $m;
    while ($i != $m) {
        if ($findex.data[$i] != (-1)) {
            var$9 = $order.data;
            var$8 = var$8 + (-1) | 0;
            var$9[var$8].$index6 = $i;
        } else {
            $order.data[$orderhead].$index6 = $i;
            $orderhead = $orderhead + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_IterationStartSingleThread = function($stage4CallContext) {
    var $callContext, $world, $num_iterations, $iteration;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage4CallContext.$m_stepperCallContext4;
    $world = oooip_DxStepperProcessingCallContext_m_world($callContext);
    $num_iterations = $world.$qs.$num_iterations;
    $iteration = 0;
    while ($iteration < $num_iterations) {
        if ($java.oooi_DxQuickStep_IsSORConstraintsReorderRequiredForIteration($iteration)) {
            $stage4CallContext.$ResetSOR_ConstraintsReorderVariables(0);
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ConstraintsShuffling($stage4CallContext, $iteration);
        }
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_STIteration($stage4CallContext);
        $iteration = $iteration + 1 | 0;
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_IterationStart = function($stage4CallContext) {
    var $callContext, $world, $qs, $num_iterations, $iteration, $stage4LCP_Iteration_allowedThreads, $reorderRequired, var$9, $finalGroup, $stage4LCP_IterationStart, $i, $task, $reorderThreads, $stage4LCP_ConstraintsReorderingSync, $stage4LCP_ConstraintsReordering;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage4CallContext.$m_stepperCallContext4;
    $world = oooip_DxStepperProcessingCallContext_m_world($callContext);
    $qs = $world.$qs;
    $num_iterations = $qs.$num_iterations;
    $iteration = $stage4CallContext.$m_LCP_iteration;
    if ($iteration < $num_iterations) {
        $stage4LCP_Iteration_allowedThreads = $stage4CallContext.$m_LCP_IterationAllowedThreads;
        $reorderRequired = 0;
        if ($java.oooi_DxQuickStep_IsSORConstraintsReorderRequiredForIteration($iteration))
            $reorderRequired = 1;
        var$9 = $iteration + 1 | 0;
        $stage4CallContext.$m_LCP_iteration = var$9;
        $finalGroup = $stage4CallContext.$m_LCP_IterationSyncReleasee;
        $stage4LCP_IterationStart = null;
        if (var$9 != $num_iterations)
            $stage4LCP_IterationStart = $finalGroup.$subgroup($rt_s(1473), $java.oooi_DxQuickStep$21__init_($stage4CallContext));
        if ($stage4LCP_IterationStart !== null)
            $finalGroup = $stage4LCP_IterationStart;
        if (!$reorderRequired) {
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_DependencyMapFromSavedLevelsReconstruction($stage4CallContext);
            $stage4CallContext.$RecordLCP_IterationStart($stage4LCP_Iteration_allowedThreads, $finalGroup);
            $i = 1;
            while ($i < $stage4LCP_Iteration_allowedThreads) {
                $task = $finalGroup.$subtask($rt_s(1482), $java.oooi_DxQuickStep$24__init_($stage4CallContext));
                $task.$submit0();
                $i = $i + 1 | 0;
            }
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_MTIteration($stage4CallContext, 0);
        } else {
            $reorderThreads = 2;
            $stage4CallContext.$ResetSOR_ConstraintsReorderVariables($reorderThreads);
            $stage4LCP_ConstraintsReorderingSync = $finalGroup.$subgroup($rt_s(1483), $java.oooi_DxQuickStep$22__init_($stage4CallContext, $finalGroup));
            $i = 1;
            while ($i < $reorderThreads) {
                $stage4LCP_ConstraintsReordering = $stage4LCP_ConstraintsReorderingSync.$subtask($rt_s(1484), $java.oooi_DxQuickStep$23__init_($stage4CallContext));
                $stage4LCP_ConstraintsReordering.$submit0();
                $i = $i + 1 | 0;
            }
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ConstraintsReordering($stage4CallContext);
            $stage4LCP_ConstraintsReorderingSync.$submit0();
        }
        if ($stage4LCP_IterationStart !== null)
            $stage4LCP_IterationStart.$submit0();
    } else if (ooot_Atomics_ThrsafeExchangeAdd($stage4CallContext.$m_SOR_reorderThreadsRemaining, (-1)) == 1)
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_DependencyMapFromSavedLevelsReconstruction($stage4CallContext);
    return 1;
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ConstraintsReordering = function($stage4CallContext) {
    var $iteration;
    oooi_DxQuickStep_$callClinit();
    $iteration = $stage4CallContext.$m_LCP_iteration - 1 | 0;
    if ($java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ConstraintsShuffling($stage4CallContext, $iteration)) {
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_LinksArraysZeroing($stage4CallContext);
        if (ooot_Atomics_ThrsafeExchangeAdd($stage4CallContext.$m_SOR_reorderThreadsRemaining, (-1)) == 1)
            $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_DependencyMapForNewOrderRebuilding($stage4CallContext);
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ConstraintsShuffling = function($stage4CallContext, $iteration) {
    var $result, var$4, $localContext, var$6, var$7, var$8;
    oooi_DxQuickStep_$callClinit();
    $result = 0;
    var$4 = $java.oooi_DxQuickStep_CONSTRAINTS_REORDERING_METHOD;
    oooi_DxQuickStep$ReorderingMethod_$callClinit();
    if (var$4 !== oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__BY_ERROR) {
        if ($java.oooi_DxQuickStep_CONSTRAINTS_REORDERING_METHOD !== oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__RANDOMLY)
            $result = 1;
        else {
            if ($iteration) {
                if (($iteration % $java.oooi_DxQuickStep_RANDOM_CONSTRAINTS_REORDERING_FREQUENCY | 0) != $java.oooi_DxQuickStep_RRS_REORDERING)
                    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ReorderPrep($stage4CallContext);
                else {
                    if (!ooot_Atomics_ThrsafeExchange($stage4CallContext.$m_SOR_reorderHeadTaken, 1)) {
                        $localContext = $stage4CallContext.$m_localContext2;
                        var$6 = $localContext.$m_m;
                        var$7 = $localContext.$m_valid_findices;
                        var$6 = var$6 - juca_AtomicInteger_get(var$7) | 0;
                        $java.oooi_DxQuickStep_ConstraintsReorderingHelper($stage4CallContext, 0, var$6);
                    }
                    if (!ooot_Atomics_ThrsafeExchange($stage4CallContext.$m_SOR_reorderTailTaken, 1)) {
                        $localContext = $stage4CallContext.$m_localContext2;
                        var$8 = $localContext.$m_m - juca_AtomicInteger_get($localContext.$m_valid_findices) | 0;
                        var$7 = $localContext.$m_valid_findices;
                        var$6 = juca_AtomicInteger_get(var$7);
                        $java.oooi_DxQuickStep_ConstraintsReorderingHelper($stage4CallContext, var$8, var$6);
                    }
                }
            }
            $result = 1;
        }
    }
    return $result;
};
$java.oooi_DxQuickStep_ConstraintsReorderingHelper = function($stage4CallContext, $startIndex, $indicesCount) {
    var $order, $index, var$6, $index_0, $swapIndex, var$9, $tmp_0, var$11;
    oooi_DxQuickStep_$callClinit();
    $order = $stage4CallContext.$m_order;
    $index = 1;
    while ($index < $indicesCount) {
        var$6 = $order.data;
        $index_0 = $index + 1 | 0;
        $swapIndex = oooi_Misc_dRandInt(Long_fromInt($index_0));
        var$9 = $startIndex + $index | 0;
        $tmp_0 = var$6[var$9];
        var$11 = $startIndex + $swapIndex | 0;
        var$6[var$9] = var$6[var$11];
        var$6[var$11] = $tmp_0;
        $index = $index_0;
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_LinksArraysZeroing = function($stage4CallContext) {
    var $callContext, $localContext, $bi_links, $nb, $m, $l, $i, $max, $mi_links;
    oooi_DxQuickStep_$callClinit();
    a: {
        $callContext = $stage4CallContext.$m_stepperCallContext4;
        $localContext = $stage4CallContext.$m_localContext2;
        if (!ooot_Atomics_ThrsafeExchange($stage4CallContext.$m_SOR_bi_zeroHeadTaken, 1)) {
            $bi_links = $stage4CallContext.$m_bi_links_or_mi_levels;
            $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
            $m = $localContext.$m_m;
            $l = jl_Math_max($m, $nb) / 2 | 0;
            $i = 0;
            while (true) {
                if ($i >= $l)
                    break a;
                $bi_links.data[$i] = juca_AtomicInteger__init_0();
                $i = $i + 1 | 0;
            }
        }
    }
    b: {
        if (!ooot_Atomics_ThrsafeExchange($stage4CallContext.$m_SOR_bi_zeroTailTaken, 1)) {
            $bi_links = $stage4CallContext.$m_bi_links_or_mi_levels;
            $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
            $m = $localContext.$m_m;
            $max = jl_Math_max($m, $nb);
            $i = $max / 2 | 0;
            while (true) {
                if ($i >= $max)
                    break b;
                $bi_links.data[$i] = juca_AtomicInteger__init_0();
                $i = $i + 1 | 0;
            }
        }
    }
    c: {
        if (!ooot_Atomics_ThrsafeExchange($stage4CallContext.$m_SOR_mi_zeroHeadTaken, 1)) {
            $mi_links = $stage4CallContext.$m_mi_links;
            $m = $localContext.$m_m;
            $i = 0;
            while (true) {
                if ($i >= ($m + 1 | 0))
                    break c;
                $mi_links.data[$i] = juca_AtomicInteger__init_0();
                $i = $i + 1 | 0;
            }
        }
    }
    d: {
        if (!ooot_Atomics_ThrsafeExchange($stage4CallContext.$m_SOR_mi_zeroTailTaken, 1)) {
            $mi_links = $stage4CallContext.$m_mi_links;
            $m = $localContext.$m_m;
            $i = 0;
            while (true) {
                if ($i >= ($m + 1 | 0))
                    break d;
                $mi_links.data[($i + $m | 0) + 1 | 0] = juca_AtomicInteger__init_0();
                $i = $i + 1 | 0;
            }
        }
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_DependencyMapForNewOrderRebuilding = function($stage4CallContext) {
    var $localContext, $bi_links, $mi_links, $order, $jb, $m, $i, var$9, var$10, $index, var$12, $b1, $b2, $encioded_i, $encoded_depi, $encoded_downi;
    oooi_DxQuickStep_$callClinit();
    $localContext = $stage4CallContext.$m_localContext2;
    $bi_links = $stage4CallContext.$m_bi_links_or_mi_levels;
    $mi_links = $stage4CallContext.$m_mi_links;
    $order = $stage4CallContext.$m_order;
    $jb = $localContext.$m_jb;
    $m = $localContext.$m_m;
    $i = 0;
    while ($i != $m) {
        var$9 = $bi_links.data;
        var$10 = $jb.data;
        $index = $order.data[$i].$index6;
        var$12 = $index * 2 | 0;
        $b1 = var$10[var$12];
        $b2 = var$10[var$12 + 1 | 0];
        $encioded_i = $java.oooi_DxQuickStep_dxENCODE_INDEX($i);
        $encoded_depi = juca_AtomicInteger_get(var$9[$b1]);
        juca_AtomicInteger_set(var$9[$b1], $encioded_i);
        if ($b2 != (-1) && $b2 != $b1) {
            if ($encoded_depi < juca_AtomicInteger_get(var$9[$b2]))
                $encoded_depi = juca_AtomicInteger_get(var$9[$b2]);
            juca_AtomicInteger_set(var$9[$b2], $encioded_i);
        }
        var$12 = $encoded_depi >= $encioded_i ? 0 : 1;
        var$10 = $mi_links.data;
        oooi_Common_dIASSERT(var$12);
        var$12 = ($encoded_depi * 2 | 0) + 1 | 0;
        $encoded_downi = juca_AtomicInteger_get(var$10[var$12]);
        juca_AtomicInteger_set(var$10[var$12], $encioded_i);
        juca_AtomicInteger_set(var$10[$encioded_i * 2 | 0], $encoded_downi);
        $i = $i + 1 | 0;
    }
};
$java.oooi_DxQuickStep_dxENCODE_INDEX = function($index) {
    oooi_DxQuickStep_$callClinit();
    return $index + 1 | 0;
};
$java.oooi_DxQuickStep_dxDECODE_INDEX = function($index) {
    oooi_DxQuickStep_$callClinit();
    return $index - 1 | 0;
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_DependencyMapFromSavedLevelsReconstruction = function($stage4CallContext) {
    var $localContext, $mi_levels, $mi_links, $m, $i, var$7, $currentLevelRoot, var$9, $currentLevelFirstLink, $encoded_i;
    oooi_DxQuickStep_$callClinit();
    $localContext = $stage4CallContext.$m_localContext2;
    $mi_levels = $stage4CallContext.$m_bi_links_or_mi_levels;
    $mi_links = $stage4CallContext.$m_mi_links;
    $m = $localContext.$m_m;
    $i = 0;
    while ($i != $m) {
        var$7 = $mi_links.data;
        $currentLevelRoot = juca_AtomicInteger_get($mi_levels.data[$i]);
        var$9 = (2 * $currentLevelRoot | 0) + 1 | 0;
        $currentLevelFirstLink = juca_AtomicInteger_get(var$7[var$9]);
        $encoded_i = $java.oooi_DxQuickStep_dxENCODE_INDEX($i);
        juca_AtomicInteger_set(var$7[var$9], $encoded_i);
        juca_AtomicInteger_set(var$7[(2 * $encoded_i | 0) + 0 | 0], $currentLevelFirstLink);
        $i = $i + 1 | 0;
    }
    juca_AtomicInteger_set($mi_links.data[0], 0);
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ConstraintsReorderingSync = function($stage4CallContext, $group) {
    var $stage4LCP_Iteration_allowedThreads, $i, $task;
    oooi_DxQuickStep_$callClinit();
    $stage4LCP_Iteration_allowedThreads = $stage4CallContext.$m_LCP_IterationAllowedThreads;
    $stage4CallContext.$RecordLCP_IterationStart($stage4LCP_Iteration_allowedThreads, $group);
    $i = 1;
    while ($i < $stage4LCP_Iteration_allowedThreads) {
        $task = $group.$subtask($rt_s(1482), $java.oooi_DxQuickStep$25__init_($stage4CallContext));
        $task.$submit0();
        $i = $i + 1 | 0;
    }
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_MTIteration($stage4CallContext, 0);
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_MTIteration = function($stage4CallContext, $knownToBeCompletedLevel) {
    var $mi_levels, $mi_links, var$5, $knownToBeCompletedLevel_0, $currentLevelRoot, var$8, var$9, $currentLevelFirstLink, var$11, $currentLevelNextLink, $level0DownLink, $levelRootsFirst, $threadsTotal, $threadsRemaining;
    oooi_DxQuickStep_$callClinit();
    juca_AtomicInteger_incrementAndGet($java.oooi_DxQuickStep_mtIterations);
    $mi_levels = $stage4CallContext.$m_bi_links_or_mi_levels;
    $mi_links = $stage4CallContext.$m_mi_links;
    while (true) {
        var$5 = $mi_links.data;
        $knownToBeCompletedLevel_0 = juca_AtomicInteger_get(var$5[0]);
        if ($knownToBeCompletedLevel_0 && $knownToBeCompletedLevel_0 == $knownToBeCompletedLevel)
            break;
        $currentLevelRoot = $knownToBeCompletedLevel_0;
        while (true) {
            var$8 = 2 * $currentLevelRoot | 0;
            var$9 = var$8 + 1 | 0;
            $currentLevelFirstLink = juca_AtomicInteger_get(var$5[var$9]);
            if ($currentLevelFirstLink == $java.oooi_DxQuickStep_INVALID_LINK) {
                if ($currentLevelRoot == $knownToBeCompletedLevel)
                    break;
                oooi_Common_dIASSERT(!$currentLevelRoot ? 0 : 1);
                $currentLevelRoot = juca_AtomicInteger_get(var$5[var$8 + 0 | 0]);
                continue;
            }
            var$11 = 2 * $currentLevelFirstLink | 0;
            var$8 = var$11 + 0 | 0;
            $currentLevelNextLink = juca_AtomicInteger_get(var$5[var$8]);
            if (ooot_Atomics_ThrsafeCompareExchange(var$5[var$9], $currentLevelFirstLink, $currentLevelNextLink)) {
                $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_IterationStep($stage4CallContext, $java.oooi_DxQuickStep_dxDECODE_INDEX($currentLevelFirstLink));
                $level0DownLink = juca_AtomicInteger_get(var$5[var$11 + 1 | 0]);
                if ($level0DownLink != $java.oooi_DxQuickStep_INVALID_LINK) {
                    while (true) {
                        $levelRootsFirst = juca_AtomicInteger_get(var$5[0]);
                        juca_AtomicInteger_set(var$5[var$8], $levelRootsFirst);
                        if (!ooot_Atomics_ThrsafeCompareExchange(var$5[0], $levelRootsFirst, $currentLevelFirstLink))
                            continue;
                        else
                            break;
                    }
                    $threadsTotal = $stage4CallContext.$m_LCP_iterationThreadsTotal;
                    $threadsRemaining = ooot_Atomics_ThrsafeIncrementIntUpToLimit($stage4CallContext.$m_LCP_iterationThreadsRemaining, $threadsTotal);
                }
                juca_AtomicInteger_set($mi_levels.data[$java.oooi_DxQuickStep_dxDECODE_INDEX($currentLevelFirstLink)], $currentLevelRoot);
            }
        }
        $knownToBeCompletedLevel = $knownToBeCompletedLevel_0;
    }
    ooot_Atomics_ThrsafeAdd($stage4CallContext.$m_LCP_iterationThreadsRemaining, (-1));
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_STIteration = function($stage4CallContext) {
    var $localContext, $m, $i;
    oooi_DxQuickStep_$callClinit();
    $localContext = $stage4CallContext.$m_localContext2;
    $m = $localContext.$m_m;
    $i = 0;
    while ($i != $m) {
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_IterationStep($stage4CallContext, $i);
        $i = $i + 1 | 0;
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_IterationStep = function($stage4CallContext, $i) {
    var $localContext, $order, var$5, $index, $lambda, $old_lambda, $J, var$10, $J_ptr, var$12, $fc, var$14, $jb, var$16, var$17, $b1, $b2, $fc_ptr1, var$21, var$22, var$23, var$24, var$25, var$26, var$27, $fc_ptr2, $findex, $hi_act, $lo_act, $new_lambda, $iMJ, $iMJ_ptr;
    oooi_DxQuickStep_$callClinit();
    $localContext = $stage4CallContext.$m_localContext2;
    $order = $stage4CallContext.$m_order;
    var$5 = $order.data;
    $index = var$5[$i].$index6;
    $lambda = $stage4CallContext.$m_lambda;
    var$5 = $lambda.data;
    $old_lambda = var$5[$index];
    $J = $localContext.$m_J;
    var$10 = $J.data;
    $J_ptr = $index * 16 | 0;
    var$12 = var$10[$J_ptr + 6 | 0] - $old_lambda * var$10[$J_ptr + 7 | 0];
    $fc = $stage4CallContext.$m_cforce;
    var$14 = $fc.data;
    $jb = $localContext.$m_jb;
    var$16 = $jb.data;
    var$17 = $index * 2 | 0;
    $b1 = var$16[var$17];
    $b2 = var$16[var$17 + 1 | 0];
    $fc_ptr1 = $b1 * 6 | 0;
    var$21 = $fc_ptr1 + 0 | 0;
    var$22 = var$14[var$21] * var$10[$J_ptr + 0 | 0];
    var$23 = $fc_ptr1 + 1 | 0;
    var$22 = var$22 + var$14[var$23] * var$10[$J_ptr + 1 | 0];
    var$24 = $fc_ptr1 + 2 | 0;
    var$22 = var$22 + var$14[var$24] * var$10[$J_ptr + 2 | 0];
    var$17 = $fc_ptr1 + 3 | 0;
    var$22 = var$22 + var$14[var$17] * var$10[$J_ptr + 3 | 0];
    var$25 = $fc_ptr1 + 4 | 0;
    var$22 = var$22 + var$14[var$25] * var$10[$J_ptr + 4 | 0];
    var$26 = $fc_ptr1 + 5 | 0;
    var$12 = var$12 - (var$22 + var$14[var$26] * var$10[$J_ptr + 5 | 0]);
    var$27 = $rt_compare($b2, (-1));
    if (var$27) {
        $fc_ptr2 = $b2 * 6 | 0;
        var$12 = var$12 - (var$14[$fc_ptr2 + 0 | 0] * var$10[$J_ptr + 8 | 0] + var$14[$fc_ptr2 + 1 | 0] * var$10[$J_ptr + 9 | 0] + var$14[$fc_ptr2 + 2 | 0] * var$10[$J_ptr + 10 | 0] + var$14[$fc_ptr2 + 3 | 0] * var$10[$J_ptr + 11 | 0] + var$14[$fc_ptr2 + 4 | 0] * var$10[$J_ptr + 12 | 0] + var$14[$fc_ptr2 + 5 | 0] * var$10[$J_ptr + 13 | 0]);
    }
    $findex = $localContext.$m_findex;
    var$16 = $findex.data;
    if (var$16[$index] == (-1)) {
        $hi_act = var$10[$J_ptr + 15 | 0];
        $lo_act = var$10[$J_ptr + 14 | 0];
    } else {
        $hi_act = oooi_Common_dFabs(var$10[$J_ptr + 15 | 0] * var$5[var$16[$index]]);
        $lo_act =  -$hi_act;
    }
    $new_lambda = $old_lambda + var$12;
    if ($new_lambda < $lo_act) {
        var$12 = $lo_act - $old_lambda;
        var$5[$index] = $lo_act;
    } else if ($new_lambda <= $hi_act)
        var$5[$index] = $new_lambda;
    else {
        var$12 = $hi_act - $old_lambda;
        var$5[$index] = $hi_act;
    }
    $iMJ = $stage4CallContext.$m_iMJ;
    var$5 = $iMJ.data;
    $iMJ_ptr = $index * 12 | 0;
    var$14[var$21] = var$14[var$21] + var$12 * var$5[$iMJ_ptr + 0 | 0];
    var$14[var$23] = var$14[var$23] + var$12 * var$5[$iMJ_ptr + 1 | 0];
    var$14[var$24] = var$14[var$24] + var$12 * var$5[$iMJ_ptr + 2 | 0];
    var$14[var$17] = var$14[var$17] + var$12 * var$5[$iMJ_ptr + 3 | 0];
    var$14[var$25] = var$14[var$25] + var$12 * var$5[$iMJ_ptr + 4 | 0];
    var$14[var$26] = var$14[var$26] + var$12 * var$5[$iMJ_ptr + 5 | 0];
    if (var$27) {
        $fc_ptr2 = $b2 * 6 | 0;
        var$17 = $fc_ptr2 + 0 | 0;
        var$14[var$17] = var$14[var$17] + var$12 * var$5[$iMJ_ptr + 6 | 0];
        var$17 = $fc_ptr2 + 1 | 0;
        var$14[var$17] = var$14[var$17] + var$12 * var$5[$iMJ_ptr + 7 | 0];
        var$17 = $fc_ptr2 + 2 | 0;
        var$14[var$17] = var$14[var$17] + var$12 * var$5[$iMJ_ptr + 8 | 0];
        var$17 = $fc_ptr2 + 3 | 0;
        var$14[var$17] = var$14[var$17] + var$12 * var$5[$iMJ_ptr + 9 | 0];
        var$17 = $fc_ptr2 + 4 | 0;
        var$14[var$17] = var$14[var$17] + var$12 * var$5[$iMJ_ptr + 10 | 0];
        var$17 = $fc_ptr2 + 5 | 0;
        var$14[var$17] = var$14[var$17] + var$12 * var$5[$iMJ_ptr + 11 | 0];
    }
};
$java.oooi_DxQuickStep_IsStage4bJointInfosIterationRequired = function($localContext) {
    oooi_DxQuickStep_$callClinit();
    return $localContext.$m_mfb <= 0 ? 0 : 1;
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage4b = function($stage4CallContext) {
    var $callContext, $localContext, $bodyA, $bodyOfs, $nb, $cforce, $stepsize, $cforcecurr, $bodycurr, $b, $j, var$13, var$14, var$15, $Jcopy, $lambda, $mindex, $jointinfos, $nj, $step_size, $nj_steps, var$23, $ji, $lambdacurr, $Jcopycurr, $jiend, $joint, $infom, $fb;
    oooi_DxQuickStep_$callClinit();
    a: {
        $callContext = $stage4CallContext.$m_stepperCallContext4;
        $localContext = $stage4CallContext.$m_localContext2;
        if (!ooot_Atomics_ThrsafeExchange($stage4CallContext.$m_cf_4b, 1)) {
            $bodyA = oooip_DxStepperProcessingCallContext_m_islandBodiesStartA($callContext);
            $bodyOfs = oooip_DxStepperProcessingCallContext_m_islandBodiesStartOfs($callContext);
            $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
            $cforce = $stage4CallContext.$m_cforce;
            $stepsize = oooip_DxStepperProcessingCallContext_m_stepSize($callContext);
            $cforcecurr = 0;
            $bodycurr = 0;
            while (true) {
                if ($bodycurr == $nb)
                    break a;
                $b = $bodyA.data[$bodyOfs + $bodycurr | 0];
                $j = 0;
                while ($j != 3) {
                    var$13 = $cforce.data;
                    var$14 = $b.$lvel;
                    var$15 = 0 + $j | 0;
                    oom_DVector3_add0(var$14, var$15, $stepsize * var$13[($cforcecurr + 0 | 0) + $j | 0]);
                    oom_DVector3_add0($b.$avel, var$15, $stepsize * var$13[($cforcecurr + 3 | 0) + $j | 0]);
                    $j = $j + 1 | 0;
                }
                $cforcecurr = $cforcecurr + 6 | 0;
                $bodycurr = $bodycurr + 1 | 0;
            }
        }
    }
    b: {
        if ($java.oooi_DxQuickStep_IsStage4bJointInfosIterationRequired($localContext)) {
            $Jcopy = $localContext.$m_Jcopy;
            $lambda = $stage4CallContext.$m_lambda;
            $mindex = $localContext.$m_mindex;
            $jointinfos = $localContext.$m_jointinfos0;
            $nj = $localContext.$m_nj;
            $step_size = 256;
            $nj_steps = ($nj + 255 | 0) / $step_size | 0;
            while (true) {
                var$23 = ooot_Atomics_ThrsafeIncrementIntUpToLimit($stage4CallContext.$m_ji_4b, $nj_steps);
                if (var$23 == $nj_steps)
                    break b;
                var$13 = $mindex.data;
                $ji = $rt_imul(var$23, $step_size);
                var$23 = $ji * 2 | 0;
                $lambdacurr = var$13[var$23];
                $Jcopycurr = var$13[var$23 + 1 | 0] * 12 | 0;
                $jiend = $ji + jl_Math_min($step_size, $nj - $ji | 0) | 0;
                while (true) {
                    var$13 = $jointinfos.data;
                    $joint = var$13[$ji].$joint0;
                    $infom = var$13[$ji].$info1.$m0;
                    $fb = $joint.$feedback;
                    if ($fb !== null) {
                        $java.oooi_DxQuickStep_Multiply1_12q1($fb.$f10, $fb.$t1, $Jcopy, $Jcopycurr + 0 | 0, $lambda, $lambdacurr, $infom);
                        if ($joint.$node0.data[1].$body0 !== null)
                            $java.oooi_DxQuickStep_Multiply1_12q1($fb.$f2, $fb.$t2, $Jcopy, $Jcopycurr + 6 | 0, $lambda, $lambdacurr, $infom);
                        $Jcopycurr = $Jcopycurr + ($infom * 12 | 0) | 0;
                    }
                    $ji = $ji + 1 | 0;
                    if ($ji == $jiend)
                        break;
                    $lambdacurr = $lambdacurr + $infom | 0;
                }
            }
        }
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage5 = function($stage5CallContext) {
    var $callContext, $localContext, $memarena, $stage6CallContext, $allowedThreads, $nb, $stage6a_allowedThreads, $stage6aSync, $i, $stage6a;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage5CallContext.$m_stepperCallContext2;
    $localContext = $stage5CallContext.$m_localContext0;
    $memarena = oooip_DxStepperProcessingCallContext_m_stepperArena($callContext);
    oooip_DxWorldProcessMemArena_RestoreState($memarena, $stage5CallContext.$m_stage3MemArenaState);
    $stage6CallContext = oooi_DxQuickStep$dxQuickStepperStage6CallContext__init_1(null);
    $stage6CallContext.$Initialize6($callContext, $localContext);
    $allowedThreads = oooip_DxStepperProcessingCallContext_m_stepperAllowedThreads($callContext);
    if ($allowedThreads == 1) {
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage6a($stage6CallContext);
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage6_VelocityCheck($stage6CallContext);
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage6b($stage6CallContext);
    } else {
        $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
        $stage6a_allowedThreads = $java.oooi_DxQuickStep_CalculateOptimalThreadsCount($nb, $allowedThreads, 16);
        $stage6aSync = oooip_DxStepperProcessingCallContext_m_taskGroup($callContext).$subgroup($rt_s(1485), $java.oooi_DxQuickStep$26__init_($stage6CallContext, $callContext));
        $i = 1;
        while ($i < $stage6a_allowedThreads) {
            $stage6a = $stage6aSync.$subtask($rt_s(1486), $java.oooi_DxQuickStep$27__init_($stage6CallContext));
            $stage6a.$submit0();
            $i = $i + 1 | 0;
        }
        $java.oooi_DxQuickStep_dxQuickStepIsland_Stage6a($stage6CallContext);
        $stage6aSync.$submit0();
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage6a = function($stage6CallContext) {
    var $callContext, $localContext, $stepsize, $invI, $bodyA, $bodyOfs, $nb, $step_size, $nb_steps, var$11, $bi, $bicnt, $invIrow, $bodyend, $b, $body_invMass_mul_stepsize;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage6CallContext.$m_stepperCallContext3;
    $localContext = $stage6CallContext.$m_localContext1;
    $stepsize = oooip_DxStepperProcessingCallContext_m_stepSize($callContext);
    $invI = $localContext.$m_invI0;
    $bodyA = oooip_DxStepperProcessingCallContext_m_islandBodiesStartA($callContext);
    $bodyOfs = oooip_DxStepperProcessingCallContext_m_islandBodiesStartOfs($callContext);
    $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
    $step_size = 16;
    $nb_steps = ($nb + 15 | 0) / $step_size | 0;
    while (true) {
        var$11 = ooot_Atomics_ThrsafeIncrementIntUpToLimit($stage6CallContext.$m_bi_6a, $nb_steps);
        if (var$11 == $nb_steps)
            break;
        $bi = $rt_imul(var$11, $step_size);
        $bicnt = jl_Math_min($step_size, $nb - $bi | 0);
        $invIrow = $bi * 12 | 0;
        $bodyend = $bi + $bicnt | 0;
        while (true) {
            $b = $bodyA.data[$bodyOfs + $bi | 0];
            $body_invMass_mul_stepsize = $stepsize * $b.$invMass;
            oom_DVector3_addScaled($b.$lvel, $b.$facc, $body_invMass_mul_stepsize);
            oom_DVector3_scale($b.$tacc, $stepsize);
            ooo_OdeMath_dMultiplyAdd0_331($b.$avel, $invI, $invIrow + 0 | 0, $b.$tacc);
            $bi = $bi + 1 | 0;
            if ($bi == $bodyend)
                break;
            $invIrow = $invIrow + 12 | 0;
        }
    }
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage6aSync = function($stage6CallContext, $group) {
    var $callContext, $allowedThreads, $nb, $stage6b_allowedThreads, $i, $stage6b;
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage6_VelocityCheck($stage6CallContext);
    $callContext = $stage6CallContext.$m_stepperCallContext3;
    $allowedThreads = oooip_DxStepperProcessingCallContext_m_stepperAllowedThreads($callContext);
    $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
    $stage6b_allowedThreads = $java.oooi_DxQuickStep_CalculateOptimalThreadsCount($nb, $allowedThreads, 1);
    $i = 1;
    while ($i < $stage6b_allowedThreads) {
        $stage6b = $group.$subtask($rt_s(1487), $java.oooi_DxQuickStep$28__init_($stage6CallContext));
        $stage6b.$submit0();
        $i = $i + 1 | 0;
    }
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage6b($stage6CallContext);
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage6_VelocityCheck = function($stage6CallContext) {
    oooi_DxQuickStep_$callClinit();
};
$java.oooi_DxQuickStep_dxQuickStepIsland_Stage6b = function($stage6CallContext) {
    var $callContext, $stepsize, $bodyA, $bodyOfs, $nb, $step_size, $nb_steps, var$9, $bi, $bicnt, $bodyend, $b;
    oooi_DxQuickStep_$callClinit();
    $callContext = $stage6CallContext.$m_stepperCallContext3;
    $stepsize = oooip_DxStepperProcessingCallContext_m_stepSize($callContext);
    $bodyA = oooip_DxStepperProcessingCallContext_m_islandBodiesStartA($callContext);
    $bodyOfs = oooip_DxStepperProcessingCallContext_m_islandBodiesStartOfs($callContext);
    $nb = oooip_DxStepperProcessingCallContext_m_islandBodiesCount($callContext);
    $step_size = 1;
    $nb_steps = ($nb + 0 | 0) / $step_size | 0;
    while (true) {
        var$9 = ooot_Atomics_ThrsafeIncrementIntUpToLimit($stage6CallContext.$m_bi_6b, $nb_steps);
        if (var$9 == $nb_steps)
            break;
        $bi = $rt_imul(var$9, $step_size);
        $bicnt = jl_Math_min($step_size, $nb - $bi | 0);
        $bodyend = $bi + $bicnt | 0;
        while (true) {
            $b = $bodyA.data[$bodyOfs + $bi | 0];
            $b.$dxStepBody($stepsize);
            oom_DVector3_setZero($b.$facc);
            oom_DVector3_setZero($b.$tacc);
            $bi = $bi + 1 | 0;
            if ($bi == $bodyend)
                break;
        }
    }
};
$java.oooi_DxQuickStep_dxEstimateMemoryRequirements = function($this, $body, $bodyOfs, $nb, $_joint, $jointOfs, $_nj) {
    return (-1);
};
$java.oooi_DxQuickStep_run = function($this, $callContext) {
    $java.oooi_DxQuickStep_dxQuickStepIsland($this, $callContext);
};
$java.oooi_DxQuickStep_CalculateOptimalThreadsCount = function($complexity, $max_threads, $step_size) {
    var $raw_threads, $optimum;
    oooi_DxQuickStep_$callClinit();
    $raw_threads = jl_Math_max($complexity, $step_size) / $step_size | 0;
    $optimum = jl_Math_min($raw_threads, $max_threads);
    return $optimum;
};
$java.oooi_DxQuickStep_IsSORConstraintsReorderRequiredForIteration = function($iteration) {
    var $result, var$3;
    oooi_DxQuickStep_$callClinit();
    a: {
        $result = 0;
        var$3 = $java.oooi_DxQuickStep_CONSTRAINTS_REORDERING_METHOD;
        oooi_DxQuickStep$ReorderingMethod_$callClinit();
        if (var$3 === oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__BY_ERROR)
            $result = 1;
        else if ($java.oooi_DxQuickStep_CONSTRAINTS_REORDERING_METHOD !== oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__RANDOMLY)
            $result = $iteration ? 0 : 1;
        else {
            if ($iteration < $java.oooi_DxQuickStep_RANDOM_CONSTRAINTS_REORDERING_FREQUENCY) {
                if ($iteration)
                    break a;
            } else if (($iteration % $java.oooi_DxQuickStep_RANDOM_CONSTRAINTS_REORDERING_FREQUENCY | 0) >= $java.oooi_DxQuickStep_RRS_MAX)
                break a;
            $result = 1;
        }
    }
    return $result;
};
$java.oooi_DxQuickStep_access$500 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage1($x0);
};
$java.oooi_DxQuickStep_access$600 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage0_Joints($x0);
};
$java.oooi_DxQuickStep_access$700 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage0_Bodies($x0);
};
$java.oooi_DxQuickStep_access$1100 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage3($x0);
};
$java.oooi_DxQuickStep_access$1200 = function($x0, $x1) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage2bSync($x0, $x1);
};
$java.oooi_DxQuickStep_access$1300 = function($x0, $x1) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage2aSync($x0, $x1);
};
$java.oooi_DxQuickStep_access$1400 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage2a($x0);
};
$java.oooi_DxQuickStep_access$1500 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage2b($x0);
};
$java.oooi_DxQuickStep_access$1600 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage2c($x0);
};
$java.oooi_DxQuickStep_access$2000 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage5($x0);
};
$java.oooi_DxQuickStep_access$2100 = function($x0, $x1) {
    oooi_DxQuickStep_$callClinit();
    return $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_IterationSync($x0, $x1);
};
$java.oooi_DxQuickStep_access$2200 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    return $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_IterationStart($x0);
};
$java.oooi_DxQuickStep_access$2300 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_IterationStartSingleThread($x0);
};
$java.oooi_DxQuickStep_access$2400 = function($x0, $x1) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_fcStart($x0, $x1);
};
$java.oooi_DxQuickStep_access$2500 = function($x0, $x1) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_iMJSync($x0, $x1);
};
$java.oooi_DxQuickStep_access$2600 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ReorderPrep($x0);
};
$java.oooi_DxQuickStep_access$2700 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4a($x0);
};
$java.oooi_DxQuickStep_access$2800 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_iMJComputation($x0);
};
$java.oooi_DxQuickStep_access$2900 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4b($x0);
};
$java.oooi_DxQuickStep_access$3000 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_AdComputation($x0);
};
$java.oooi_DxQuickStep_access$3100 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_MTfcComputation($x0);
};
$java.oooi_DxQuickStep_access$3200 = function($x0, $x1) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ConstraintsReorderingSync($x0, $x1);
};
$java.oooi_DxQuickStep_access$3300 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_ConstraintsReordering($x0);
};
$java.oooi_DxQuickStep_access$3400 = function($x0, $x1) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage4LCP_MTIteration($x0, $x1);
};
$java.oooi_DxQuickStep_access$3600 = function($x0, $x1) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage6aSync($x0, $x1);
};
$java.oooi_DxQuickStep_access$3700 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage6a($x0);
};
$java.oooi_DxQuickStep_access$3800 = function($x0) {
    oooi_DxQuickStep_$callClinit();
    $java.oooi_DxQuickStep_dxQuickStepIsland_Stage6b($x0);
};
$java.oooi_DxQuickStep__clinit_ = function() {
    $java.oooi_DxQuickStep_REUSE_OBJECTS = 0;
    $java.oooi_DxQuickStep_ENABLE_LCP_ITERATIONS_MULTITHREADING = 0;
    $java.oooi_DxQuickStep_RANDOM_CONSTRAINTS_REORDERING_FREQUENCY = 8;
    $java.oooi_DxQuickStep_RRS_REORDERING = 0;
    $java.oooi_DxQuickStep_RRS_REVERSAL = 1;
    $java.oooi_DxQuickStep_RRS_MIN = 0;
    $java.oooi_DxQuickStep_RRS_MAX = 2;
    oooi_DxQuickStep_INSTANCE = $java.oooi_DxQuickStep__init_();
    oooi_DxQuickStep$ReorderingMethod_$callClinit();
    $java.oooi_DxQuickStep_CONSTRAINTS_REORDERING_METHOD = oooi_DxQuickStep$ReorderingMethod_REORDERING_METHOD__RANDOMLY;
    $java.oooi_DxQuickStep_INVALID_LINK = $java.oooi_DxQuickStep_dxENCODE_INDEX((-1));
    $java.oooi_DxQuickStep_mtIterations = juca_AtomicInteger__init_0();
};
function oktg_IObject3D$DefaultImpls() {
    jl_Object.call(this);
}
$java.oktg_IObject3D$DefaultImpls_updatePreviousTransform = function($$this) {
    var var$2;
    var$2 = $$this.$getPreviousTransform();
    oktgn_ITransformNode_$callClinit();
    if (var$2 !== oktgn_ITransformNode$Companion_getCap(oktgn_ITransformNode_Companion))
        $$this.$getPreviousTransform().$set74($$this.$getNode());
};
$java.oktg_IObject3D$DefaultImpls_update = function($$this, $delta) {
    return;
};
$java.oktg_IObject3D$DefaultImpls_render = function($$this, $shaderTypeId) {
    var $meshes, $i, var$5, var$6, $mesh, $shader, $$this$forEach$iv, var$10, $element$iv, $it, var$13, var$14, var$15;
    a: {
        $java.oktg_IObject3D_$callClinit();
        oktg_IObject3D$Companion_access$getPreparedShaders$p($java.oktg_IObject3D_Companion).$clear();
        $meshes = $$this.$getMeshes0();
        if ($shaderTypeId == (-1)) {
            $i = 0;
            var$5 = $meshes;
            var$6 = var$5.$size();
            while ($i < var$6) {
                $mesh = $meshes.$get1($i);
                $shader = $mesh.$getMaterial().$getShader();
                if ($shader !== null)
                    oktg_IObject3D$Companion_access$getPreparedShaders$p($java.oktg_IObject3D_Companion).$add1($shader);
                $i = $i + 1 | 0;
            }
            $$this$forEach$iv = oktg_IObject3D$Companion_access$getPreparedShaders$p($java.oktg_IObject3D_Companion);
            var$10 = $$this$forEach$iv.$iterator();
            while (var$10.$hasNext()) {
                $element$iv = var$10.$next();
                $it = $element$iv;
                $it.$prepareObjectData0($$this);
            }
            $i = 0;
            var$6 = var$5.$size();
            while (true) {
                if ($i >= var$6)
                    break a;
                $mesh = $meshes.$get1($i);
                $shader = $mesh.$getMaterial().$getShader();
                if ($shader !== null)
                    oktm_IMesh$DefaultImpls_render$default($mesh, $shader, 0, 0, 0, 0, 30, null);
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        var$13 = $meshes;
        var$14 = var$13.$size();
        while ($i < var$14) {
            $mesh = $meshes.$get1($i);
            $shader = $mesh.$getMaterial().$getShaderChannels().$get0(jl_Integer_valueOf($shaderTypeId));
            if ($shader !== null)
                oktg_IObject3D$Companion_access$getPreparedShaders$p($java.oktg_IObject3D_Companion).$add1($shader);
            $i = $i + 1 | 0;
        }
        $$this$forEach$iv = oktg_IObject3D$Companion_access$getPreparedShaders$p($java.oktg_IObject3D_Companion);
        var$10 = $$this$forEach$iv.$iterator();
        while (var$10.$hasNext()) {
            $element$iv = var$10.$next();
            $it = $element$iv;
            $it.$prepareObjectData0($$this);
        }
        $i = 0;
        var$15 = var$13.$size();
        while (true) {
            if ($i >= var$15)
                break a;
            $mesh = $meshes.$get1($i);
            $shader = $mesh.$getMaterial().$getShaderChannels().$get0(jl_Integer_valueOf($shaderTypeId));
            if ($shader !== null)
                oktm_IMesh$DefaultImpls_render$default($mesh, $shader, 0, 0, 0, 0, 30, null);
            $i = $i + 1 | 0;
        }
    }
};
$java.oktg_IObject3D$DefaultImpls_clear = function($$this) {
    oktgn_IDelegateTransformNode$DefaultImpls_clear($$this);
    $$this.$getMeshes0().$clear();
    oktgn_ITransformNode_$callClinit();
    $$this.$setNode(oktgn_ITransformNode$Companion_getCap(oktgn_ITransformNode_Companion));
    $$this.$setPreviousTransform(oktgn_ITransformNode$Companion_getCap(oktgn_ITransformNode_Companion));
    $$this.$setArmature(null);
};
$java.oktg_IObject3D$DefaultImpls_getPosition = function($$this) {
    return oktgn_IDelegateTransformNode$DefaultImpls_getPosition($$this);
};
$java.oktg_IObject3D$DefaultImpls_getRotation = function($$this) {
    return oktgn_IDelegateTransformNode$DefaultImpls_getRotation($$this);
};
$java.oktg_IObject3D$DefaultImpls_getScale = function($$this) {
    return oktgn_IDelegateTransformNode$DefaultImpls_getScale($$this);
};
$java.oktg_IObject3D$DefaultImpls_getWorldMatrix = function($$this) {
    return oktgn_IDelegateTransformNode$DefaultImpls_getWorldMatrix($$this);
};
$java.oktg_IObject3D$DefaultImpls_setParentNode = function($$this, $value) {
    oktgn_IDelegateTransformNode$DefaultImpls_setParentNode($$this, $value);
};
$java.oktg_IObject3D$DefaultImpls_updateTransform = function($$this, $recursive) {
    oktgn_IDelegateTransformNode$DefaultImpls_updateTransform($$this, $recursive);
};
$java.oktg_IObject3D$DefaultImpls_getWorldMatrix0 = function($$this, $out, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return oktgn_IDelegateTransformNode$DefaultImpls_getWorldMatrix0($$this, $out, $isLocal);
};
function kt_Charsets() {
    jl_Object.call(this);
}
var kt_Charsets_UTF_8 = null;
$java.kt_Charsets_UTF_16 = null;
$java.kt_Charsets_UTF_16BE = null;
$java.kt_Charsets_UTF_16LE = null;
$java.kt_Charsets_US_ASCII = null;
$java.kt_Charsets_ISO_8859_1 = null;
$java.kt_Charsets_INSTANCE = null;
function kt_Charsets_$callClinit() {
    kt_Charsets_$callClinit = $rt_eraseClinit(kt_Charsets);
    $java.kt_Charsets__clinit_();
}
$java.kt_Charsets__init_ = function() {
    var var_0 = new kt_Charsets();
    kt_Charsets__init_(var_0);
    return var_0;
};
function kt_Charsets__init_($this) {
    kt_Charsets_$callClinit();
    jl_Object__init_0($this);
}
$java.kt_Charsets__clinit_ = function() {
    var var$1, var$2;
    $java.kt_Charsets_INSTANCE = $java.kt_Charsets__init_();
    var$1 = jnc_Charset_forName($rt_s(355));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$1, $rt_s(1488));
    kt_Charsets_UTF_8 = var$1;
    var$2 = jnc_Charset_forName($rt_s(1489));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(1490));
    $java.kt_Charsets_UTF_16 = var$2;
    var$2 = jnc_Charset_forName($rt_s(1491));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(1492));
    $java.kt_Charsets_UTF_16BE = var$2;
    var$2 = jnc_Charset_forName($rt_s(1493));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(1494));
    $java.kt_Charsets_UTF_16LE = var$2;
    var$2 = jnc_Charset_forName($rt_s(1495));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(1496));
    $java.kt_Charsets_US_ASCII = var$2;
    var$2 = jnc_Charset_forName($rt_s(1497));
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(1498));
    $java.kt_Charsets_ISO_8859_1 = var$2;
};
function oktsg_GBufferOutputNode() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$output0 = null;
    a.$alphaMode2 = 0;
    a.$alphaCutoff2 = 0.0;
    a.$cullFaceMode1 = 0;
}
$java.oktsg_GBufferOutputNode_InputForm = null;
$java.oktsg_GBufferOutputNode_Companion = null;
$java.oktsg_GBufferOutputNode_$callClinit = function() {
    $java.oktsg_GBufferOutputNode_$callClinit = $rt_eraseClinit(oktsg_GBufferOutputNode);
    $java.oktsg_GBufferOutputNode__clinit_();
};
function oktsg_GBufferOutputNode__init_() {
    var var_0 = new oktsg_GBufferOutputNode();
    oktsg_GBufferOutputNode__init_0(var_0);
    return var_0;
}
$java.oktsg_GBufferOutputNode_getVertPosition = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(862));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_GBufferOutputNode_setVertPosition($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(862), $value);
}
$java.oktsg_GBufferOutputNode_getFragColor = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(863));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_GBufferOutputNode_setFragColor($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(863), $value);
}
$java.oktsg_GBufferOutputNode_getFragNormal = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1499));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getDefaultNormal(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_GBufferOutputNode_setFragNormal($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(1499), $value);
}
$java.oktsg_GBufferOutputNode_getFragPosition = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1500));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_GBufferOutputNode_setFragPosition($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(1500), $value);
}
$java.oktsg_GBufferOutputNode_getOutput = function($this) {
    return $this.$output0;
};
function oktsg_GBufferOutputNode_setAlphaMode($this, $_set___) {
    $this.$alphaMode2 = $_set___;
}
function oktsg_GBufferOutputNode_setAlphaCutoff($this, $_set___) {
    $this.$alphaCutoff2 = $_set___;
}
function oktsg_GBufferOutputNode_setCullFaceMode($this, $_set___) {
    $this.$cullFaceMode1 = $_set___;
}
$java.oktsg_GBufferOutputNode_declarationFrag = function($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $out.$append($rt_s(1501));
    $out.$append($rt_s(1502));
    $out.$append($rt_s(1503));
};
$java.oktsg_GBufferOutputNode_prepareToDrawMesh = function($this, $mesh) {
    kji_Intrinsics_checkParameterIsNotNull($mesh, $rt_s(43));
    oktsg_ShaderNode_prepareToDrawMesh($this, $mesh);
    oktg_GL_$callClinit();
    oktg_GL_setBlendEnabled(oktg_GL_INSTANCE, $this.$alphaMode2 != 2 ? 0 : 1);
    if (oktg_GL_isBlendEnabled0(oktg_GL_INSTANCE))
        oktg_GL_setSimpleAlphaBlending(oktg_GL_INSTANCE);
    oktg_GL_setCullFaceEnabled(oktg_GL_INSTANCE, oktg_GL_getCullFaceMode(oktg_GL_INSTANCE) ? 0 : 1);
    if (oktg_GL_isCullFaceEnabled0(oktg_GL_INSTANCE))
        oktg_GL_setCullFaceMode(oktg_GL_INSTANCE, $this.$cullFaceMode1);
};
$java.oktsg_GBufferOutputNode_executionVert = function($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $out.$append(jl_StringBuilder__init_().$append($rt_s(864)).$append($java.oktsg_GBufferOutputNode_getVertPosition($this).$asVec4()).$append($rt_s(330)).$toString());
};
$java.oktsg_GBufferOutputNode_executionFrag = function($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    $out.$append(jl_StringBuilder__init_().$append($rt_s(1504)).$append($java.oktsg_GBufferOutputNode_getFragColor($this).$asVec4()).$append($rt_s(330)).$toString());
    $out.$append(jl_StringBuilder__init_().$append($rt_s(1505)).$append($java.oktsg_GBufferOutputNode_getFragNormal($this).$asVec4()).$append($rt_s(330)).$toString());
    $out.$append(jl_StringBuilder__init_().$append($rt_s(1506)).$append($java.oktsg_GBufferOutputNode_getFragPosition($this).$asVec4()).$append($rt_s(330)).$toString());
    if ($this.$alphaMode2 == 1) {
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1507)).$append11($this.$alphaCutoff2).$append($rt_s(867)).$toString());
        $out.$append($rt_s(1508));
    }
};
function oktsg_GBufferOutputNode__init_0($this) {
    $java.oktsg_GBufferOutputNode_$callClinit();
    oktsg_ShaderNode__init_0($this);
    $this.$output0 = ju_HashMap__init_();
    $this.$alphaCutoff2 = 0.5;
    $this.$cullFaceMode1 = 1029;
}
$java.oktsg_GBufferOutputNode__clinit_ = function() {
    var var$1;
    $java.oktsg_GBufferOutputNode_Companion = oktsg_GBufferOutputNode$Companion__init_1(null);
    var$1 = ju_LinkedHashMap__init_();
    var$1.$put3($rt_s(862), jl_Integer_valueOf(6));
    var$1.$put3($rt_s(863), jl_Integer_valueOf(6));
    var$1.$put3($rt_s(1499), jl_Integer_valueOf(6));
    var$1.$put3($rt_s(1500), jl_Integer_valueOf(6));
    $java.oktsg_GBufferOutputNode_InputForm = var$1;
};
function oktg_Object3D() {
    var a = this; jl_Object.call(a);
    a.$node4 = null;
    a.$previousTransform = null;
    a.$name48 = null;
    a.$isVisible = 0;
    a.$meshes1 = null;
    a.$armature = null;
    a.$boundingBox = null;
}
$java.oktg_Object3D__init_ = function(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new oktg_Object3D();
    $java.oktg_Object3D__init_0(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
};
function oktg_Object3D__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new oktg_Object3D();
    $java.oktg_Object3D__init_1(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
$java.oktg_Object3D__init_2 = function() {
    var var_0 = new oktg_Object3D();
    oktg_Object3D__init_0(var_0);
    return var_0;
};
$java.oktg_Object3D_getNode = function($this) {
    return $this.$node4;
};
$java.oktg_Object3D_setNode = function($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$node4 = $_set___;
};
$java.oktg_Object3D_getPreviousTransform = function($this) {
    return $this.$previousTransform;
};
$java.oktg_Object3D_setPreviousTransform = function($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$previousTransform = $_set___;
};
$java.oktg_Object3D_setName = function($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name48 = $_set___;
};
$java.oktg_Object3D_getMeshes = function($this) {
    return $this.$meshes1;
};
$java.oktg_Object3D_getArmature = function($this) {
    return $this.$armature;
};
$java.oktg_Object3D_setArmature = function($this, $_set___) {
    $this.$armature = $_set___;
};
$java.oktg_Object3D__init_0 = function($this, $node, $previousTransform, $name, $isVisible, $meshes, $armature, $boundingBox) {
    kji_Intrinsics_checkParameterIsNotNull($node, $rt_s(45));
    kji_Intrinsics_checkParameterIsNotNull($previousTransform, $rt_s(1509));
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($meshes, $rt_s(1010));
    jl_Object__init_0($this);
    $this.$node4 = $node;
    $this.$previousTransform = $previousTransform;
    $this.$name48 = $name;
    $this.$isVisible = $isVisible;
    $this.$meshes1 = $meshes;
    $this.$armature = $armature;
    $this.$boundingBox = $boundingBox;
};
$java.oktg_Object3D__init_1 = function(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9) {
    if (var$8 & 1)
        var$1 = oktgn_Node__init_();
    if (var$8 & 2) {
        oktgn_ITransformNode_$callClinit();
        var$2 = oktgn_ITransformNode$Companion_getCap(oktgn_ITransformNode_Companion);
    }
    if (var$8 & 4)
        var$3 = $rt_s(6);
    if (var$8 & 8)
        var$4 = 1;
    if (var$8 & 16)
        var$5 = ju_ArrayList__init_();
    if (var$8 & 32)
        var$6 = null;
    if (var$8 & 64)
        var$7 = null;
    $java.oktg_Object3D__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7);
};
function oktg_Object3D__init_0(var$0) {
    $java.oktg_Object3D__init_1(var$0, null, null, null, 0, null, null, null, 127, null);
}
$java.oktg_Object3D_updatePreviousTransform = function($this) {
    $java.oktg_IObject3D$DefaultImpls_updatePreviousTransform($this);
};
$java.oktg_Object3D_update = function($this, $delta) {
    $java.oktg_IObject3D$DefaultImpls_update($this, $delta);
};
$java.oktg_Object3D_render = function($this, $shaderTypeId) {
    $java.oktg_IObject3D$DefaultImpls_render($this, $shaderTypeId);
};
$java.oktg_Object3D_clear = function($this) {
    $java.oktg_IObject3D$DefaultImpls_clear($this);
};
$java.oktg_Object3D_getPosition = function($this) {
    return $java.oktg_IObject3D$DefaultImpls_getPosition($this);
};
$java.oktg_Object3D_getRotation = function($this) {
    return $java.oktg_IObject3D$DefaultImpls_getRotation($this);
};
$java.oktg_Object3D_getScale = function($this) {
    return $java.oktg_IObject3D$DefaultImpls_getScale($this);
};
$java.oktg_Object3D_getWorldMatrix = function($this) {
    return $java.oktg_IObject3D$DefaultImpls_getWorldMatrix($this);
};
$java.oktg_Object3D_setParentNode = function($this, $value) {
    $java.oktg_IObject3D$DefaultImpls_setParentNode($this, $value);
};
$java.oktg_Object3D_updateTransform = function($this, $recursive) {
    $java.oktg_IObject3D$DefaultImpls_updateTransform($this, $recursive);
};
$java.oktg_Object3D_getWorldMatrix0 = function($this, $out, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    return $java.oktg_IObject3D$DefaultImpls_getWorldMatrix0($this, $out, $isLocal);
};
function ju_LinkedList() {
    var a = this; ju_AbstractSequentialList.call(a);
    a.$firstEntry = null;
    a.$lastEntry = null;
    a.$size7 = 0;
}
function ju_LinkedList__init_() {
    var var_0 = new ju_LinkedList();
    ju_LinkedList__init_0(var_0);
    return var_0;
}
function ju_LinkedList__init_0($this) {
    ju_AbstractSequentialList__init_0($this);
}
$java.ju_LinkedList_size = function($this) {
    return $this.$size7;
};
$java.ju_LinkedList_listIterator = function($this) {
    return ju_LinkedList$SequentialListIterator__init_($this, $this.$firstEntry, null, 0);
};
$java.ju_LinkedList_listIterator0 = function($this, $index) {
    var $next, $i, $prev;
    if ($index < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if ($index <= ($this.$size7 / 2 | 0)) {
        $next = $this.$firstEntry;
        $i = 0;
        while ($i < $index) {
            $next = $next.$next4;
            $i = $i + 1 | 0;
        }
        return ju_LinkedList$SequentialListIterator__init_($this, $next, $next === null ? null : $next.$previous, $index);
    }
    if ($index > $this.$size7)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $prev = $this.$lastEntry;
    $i = $index;
    while ($i < $this.$size7) {
        $prev = $prev.$previous;
        $i = $i + 1 | 0;
    }
    return ju_LinkedList$SequentialListIterator__init_($this, $prev === null ? null : $prev.$next4, $prev, $index);
};
$java.ju_LinkedList_poll = function($this) {
    var $entry;
    if ($this.$firstEntry === null)
        return null;
    $entry = $this.$firstEntry;
    $this.$firstEntry = $this.$firstEntry.$next4;
    if ($this.$firstEntry === null)
        $this.$lastEntry = null;
    else
        $this.$firstEntry.$previous = null;
    $this.$size7 = $this.$size7 - 1 | 0;
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
    return $entry.$item;
};
$java.ju_LinkedList_addLast = function($this, $e) {
    var $entry;
    $entry = ju_LinkedList$Entry__init_();
    $entry.$item = $e;
    $entry.$previous = $this.$lastEntry;
    if ($this.$lastEntry === null)
        $this.$firstEntry = $entry;
    else
        $this.$lastEntry.$next4 = $entry;
    $this.$lastEntry = $entry;
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
    $this.$size7 = $this.$size7 + 1 | 0;
};
$java.ju_LinkedList_removeLast = function($this) {
    if (!$this.$isEmpty())
        return $this.$pollLast();
    $rt_throw(ju_NoSuchElementException__init_());
};
$java.ju_LinkedList_pollLast = function($this) {
    var $entry;
    if ($this.$lastEntry === null)
        return null;
    $entry = $this.$lastEntry;
    $this.$lastEntry = $this.$lastEntry.$previous;
    if ($this.$lastEntry === null)
        $this.$firstEntry = null;
    else
        $this.$lastEntry.$next4 = null;
    $this.$size7 = $this.$size7 - 1 | 0;
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
    return $entry.$item;
};
$java.ju_LinkedList_getLast = function($this) {
    if ($this.$lastEntry !== null)
        return $this.$lastEntry.$item;
    $rt_throw(ju_NoSuchElementException__init_());
};
function ju_LinkedList_access$202($x0, $x1) {
    $x0.$firstEntry = $x1;
    return $x1;
}
function ju_LinkedList_access$302($x0, $x1) {
    $x0.$lastEntry = $x1;
    return $x1;
}
function ju_LinkedList_access$404($x0) {
    var var$2;
    var$2 = $x0.$size7 + 1 | 0;
    $x0.$size7 = var$2;
    return var$2;
}
function oktts_ShadowMappingBaseTest$testMain$2() {
    var a = this; kji_Lambda.call(a);
    a.$$control11 = null;
    a.$$depthBuffer = null;
    a.$$depthRenderShader0 = null;
    a.$$lightMatrix = null;
    a.$$plane1 = null;
    a.$$cubesStartX0 = 0.0;
    a.$$cubesEndX0 = 0.0;
    a.$$cubesStartZ0 = 0.0;
    a.$$cubesEndZ0 = 0.0;
    a.$$cubesY0 = 0.0;
    a.$$cube1 = null;
    a.$$cubesStepZ0 = 0.0;
    a.$$cubesStepX0 = 0.0;
    a.$$sceneObjectShader0 = null;
    a.$$cubeColor1 = null;
    a.$$lightFrustumMesh = null;
    a.$$screenQuad12 = null;
}
function oktts_ShadowMappingBaseTest$testMain$2__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16) {
    var var_17 = new oktts_ShadowMappingBaseTest$testMain$2();
    $java.oktts_ShadowMappingBaseTest$testMain$2__init_(var_17, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16);
    return var_17;
}
$java.oktts_ShadowMappingBaseTest$testMain$2_invoke = function(var$0) {
    $java.oktts_ShadowMappingBaseTest$testMain$2_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_ShadowMappingBaseTest$testMain$2_invoke0 = function($this) {
    var var$1, $shader, var$3, var$4, $xi, $zi;
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    var$1 = $this.$$control11;
    okt_APP_$callClinit();
    var$1.$update(okt_APP_getDeltaTime(okt_APP_INSTANCE));
    oktgc_ActiveCamera_$callClinit();
    oktgc_ActiveCamera_update(oktgc_ActiveCamera_INSTANCE);
    oktt_FrameBuffer_render($this.$$depthBuffer, oktts_ShadowMappingBaseTest$testMain$2$1__init_($this));
    $shader = $this.$$sceneObjectShader0;
    $shader.$bind();
    $shader.$set12($rt_s(607), oktgc_ActiveCamera_getViewProjectionMatrix(oktgc_ActiveCamera_INSTANCE));
    $shader.$set12($rt_s(1510), $this.$$lightMatrix);
    oktt_FrameBuffer_getTexture($this.$$depthBuffer, 0).$bind4(0);
    $shader.$set39($rt_s(608), 0.0, 0.0, 0.0);
    $shader.$set64($rt_s(623), 1.0, 1.0, 1.0, 1.0);
    var$3 = $this.$$plane1;
    var$4 = $shader;
    oktm_IMesh$DefaultImpls_render$default(var$3, var$4, 0, 0, 0, 0, 30, null);
    $shader.$set40($rt_s(623), $this.$$cubeColor1);
    $xi = $this.$$cubesStartX0;
    while ($xi < $this.$$cubesEndX0) {
        $zi = $this.$$cubesStartZ0;
        while ($zi < $this.$$cubesEndZ0) {
            $shader.$set39($rt_s(608), $xi, $this.$$cubesY0, $zi);
            oktm_IMesh$DefaultImpls_render$default($this.$$cube1, var$4, 0, 0, 0, 0, 30, null);
            $zi = $zi + $this.$$cubesStepZ0;
        }
        $xi = $xi + $this.$$cubesStepX0;
    }
    oktu_Color_$callClinit();
    $shader.$set40($rt_s(623), oktu_Color_getGREEN(oktu_Color_INSTANCE));
    $shader.$set39($rt_s(608), 0.0, 0.0, 0.0);
    oktm_IMesh$DefaultImpls_render$default($this.$$lightFrustumMesh, var$4, 0, 0, 0, 0, 30, null);
    oktm_ScreenQuad$TextureRenderer_setPosition($this.$$screenQuad12, (-0.699999988079071), (-0.699999988079071));
    oktm_ScreenQuad$TextureRenderer_setScale($this.$$screenQuad12, 0.20000000298023224, 0.20000000298023224);
    oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad12, oktt_FrameBuffer_getTexture($this.$$depthBuffer, 0), null, null, null, 10, null);
};
$java.oktts_ShadowMappingBaseTest$testMain$2__init_ = function(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17) {
    var$0.$$control11 = var$1;
    var$0.$$depthBuffer = var$2;
    var$0.$$depthRenderShader0 = var$3;
    var$0.$$lightMatrix = var$4;
    var$0.$$plane1 = var$5;
    var$0.$$cubesStartX0 = var$6;
    var$0.$$cubesEndX0 = var$7;
    var$0.$$cubesStartZ0 = var$8;
    var$0.$$cubesEndZ0 = var$9;
    var$0.$$cubesY0 = var$10;
    var$0.$$cube1 = var$11;
    var$0.$$cubesStepZ0 = var$12;
    var$0.$$cubesStepX0 = var$13;
    var$0.$$sceneObjectShader0 = var$14;
    var$0.$$cubeColor1 = var$15;
    var$0.$$lightFrustumMesh = var$16;
    var$0.$$screenQuad12 = var$17;
    kji_Lambda__init_0(var$0, 0);
};
function otjc_JSString() {
    jl_Object.call(this);
}
function otjc_JSString_stringValue$static($this) {
    return $rt_str($this);
}
function okts_IShader$DefaultImpls() {
    jl_Object.call(this);
}
function okts_IShader$DefaultImpls_prepareSceneData($$this, $scene) {
    var $i, var$4, $node;
    kji_Intrinsics_checkParameterIsNotNull($scene, $rt_s(328));
    $$this.$bind();
    $i = 0;
    var$4 = $$this.$getNodes0().$size();
    while ($i < var$4) {
        $node = $$this.$getNodes0().$get1($i);
        $node.$setShaderOrNull($$this);
        $node.$prepareToDrawScene($scene);
        $i = $i + 1 | 0;
    }
}
function okts_IShader$DefaultImpls_prepareObjectData($$this, $object3D) {
    var $i, var$4, $node;
    kji_Intrinsics_checkParameterIsNotNull($object3D, $rt_s(514));
    $$this.$bind();
    $i = 0;
    var$4 = $$this.$getNodes0().$size();
    while ($i < var$4) {
        $node = $$this.$getNodes0().$get1($i);
        $node.$setShaderOrNull($$this);
        $node.$prepareObjectData0($object3D);
        $i = $i + 1 | 0;
    }
}
function okts_IShader$DefaultImpls_prepareToDrawMesh($$this, $mesh) {
    var $i, var$4, $node;
    kji_Intrinsics_checkParameterIsNotNull($mesh, $rt_s(43));
    $$this.$bind();
    $i = 0;
    var$4 = $$this.$getNodes0().$size();
    while ($i < var$4) {
        $node = $$this.$getNodes0().$get1($i);
        $node.$setShaderOrNull($$this);
        $node.$prepareToDrawMesh0($mesh);
        $i = $i + 1 | 0;
    }
}
function okts_IShader$DefaultImpls_numerateLines($$this, $title, $text, $pad) {
    var var$5, var$6, $lines, $str, $i, var$10, $i_0, var$12;
    kji_Intrinsics_checkParameterIsNotNull($title, $rt_s(465));
    kji_Intrinsics_checkParameterIsNotNull($text, $rt_s(295));
    var$5 = $text;
    var$6 = $rt_createCharArray(1);
    var$6.data[0] = 10;
    $lines = kt_StringsKt__StringsKt_split$default(var$5, var$6, 0, 0, 6, null);
    $str = jl_StringBuilder__init_0(($title.$length() + $text.$length() | 0) + ($lines.$size() * 5 | 0) | 0);
    $str.$append($title);
    $i = 0;
    var$10 = $lines.$size();
    while ($i < var$10) {
        $i_0 = $i + 1 | 0;
        $str.$append(kt_StringsKt__StringsKt_padEnd0(jl_String_valueOf1($i_0), $pad, 32));
        var$12 = $str.$append($lines.$get1($i));
        kji_Intrinsics_checkExpressionValueIsNotNull(var$12, $rt_s(504));
        kt_StringsKt__StringBuilderJVMKt_appendln(var$12);
        $i = $i_0;
    }
    var$12 = $str.$toString();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$12, $rt_s(1511));
    return var$12;
}
$java.okts_IShader$DefaultImpls_vertSourceCode$default = function(var$1, var$2, var$3, var$4, var$5) {
    if (var$5 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1512)));
    if (var$4 & 1)
        var$2 = $rt_s(1513);
    if (var$4 & 2)
        var$3 = 5;
    return var$1.$vertSourceCode(var$2, var$3);
};
$java.okts_IShader$DefaultImpls_fragSourceCode$default = function(var$1, var$2, var$3, var$4, var$5) {
    if (var$5 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1514)));
    if (var$4 & 1)
        var$2 = $rt_s(1515);
    if (var$4 & 2)
        var$3 = 5;
    return var$1.$fragSourceCode(var$2, var$3);
};
function okts_IShader$DefaultImpls_sourceCode($$this, $pad) {
    return jl_StringBuilder__init_().$append($java.okts_IShader$DefaultImpls_vertSourceCode$default($$this, null, $pad, 1, null)).$append($java.okts_IShader$DefaultImpls_fragSourceCode$default($$this, null, $pad, 1, null)).$toString();
}
function okts_IShader$DefaultImpls_sourceCode$default(var$1, var$2, var$3, var$4) {
    if (var$4 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1516)));
    if (var$3 & 1)
        var$2 = 5;
    return var$1.$sourceCode0(var$2);
}
function okts_IShader$DefaultImpls_bind($$this) {
    oktg_GL_$callClinit();
    oktg_GL_glUseProgram(oktg_GL_INSTANCE, $$this.$getHandle());
}
function okts_IShader$DefaultImpls_get($$this, $uniformName) {
    kji_Intrinsics_checkParameterIsNotNull($uniformName, $rt_s(515));
    oktg_GL_$callClinit();
    return oktg_GL_glGetUniformLocation(oktg_GL_INSTANCE, $$this.$getHandle(), $uniformName);
}
function okts_IShader$DefaultImpls_set($$this, $location, $mat, $transpose) {
    kji_Intrinsics_checkParameterIsNotNull($mat, $rt_s(516));
    oktg_GL_$callClinit();
    oktg_GL_glUniformMatrix4fv(oktg_GL_INSTANCE, $location, 1, $transpose, $mat.$getValues(), 0);
}
function okts_IShader$DefaultImpls_setMatrix4($$this, $location, $values, $offset, $length) {
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    oktg_GL_$callClinit();
    oktg_GL_glUniformMatrix4fv(oktg_GL_INSTANCE, $location, $length / 16 | 0, 0, $values, $offset);
}
function okts_IShader$DefaultImpls_set0($$this, $location, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $$this.$set75($location, $value, 0);
}
function okts_IShader$DefaultImpls_getUniformLocation($$this, $name, $pedantic) {
    var $location, var$5;
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    $location = $$this.$getUniforms0().$get0($name);
    if ($location === null) {
        oktg_GL_$callClinit();
        $location = jl_Integer_valueOf(oktg_GL_glGetUniformLocation(oktg_GL_INSTANCE, $$this.$getHandle(), $name));
        if (!($location.$intValue() == (-1) && $pedantic ? 0 : 1)) {
            var$5 = jl_StringBuilder__init_().$append($rt_s(1517)).$append($name).$append($rt_s(1518)).$toString();
            $rt_throw(jl_IllegalArgumentException__init_(var$5.$toString()));
        }
        $$this.$getUniforms0().$put3($name, $location);
    }
    return $location.$intValue();
}
$java.okts_IShader$DefaultImpls_getUniformLocation$default = function(var$1, var$2, var$3, var$4, var$5) {
    if (var$5 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1519)));
    if (var$4 & 2)
        var$3 = 0;
    return var$1.$getUniformLocation0(var$2, var$3);
};
function okts_IShader$DefaultImpls_setUniformi($$this, $name, $value) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktg_GL_$callClinit();
    oktg_GL_glUniform1i(oktg_GL_INSTANCE, $java.okts_IShader$DefaultImpls_getUniformLocation$default($$this, $name, 0, 2, null), $value);
}
function okts_IShader$DefaultImpls_set1($$this, $name, $value1, $value2) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktg_GL_$callClinit();
    oktg_GL_glUniform2f(oktg_GL_INSTANCE, $java.okts_IShader$DefaultImpls_getUniformLocation$default($$this, $name, 0, 2, null), $value1, $value2);
}
function okts_IShader$DefaultImpls_set2($$this, $name, $value1, $value2, $value3) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktg_GL_$callClinit();
    oktg_GL_glUniform3f(oktg_GL_INSTANCE, $java.okts_IShader$DefaultImpls_getUniformLocation$default($$this, $name, 0, 2, null), $value1, $value2, $value3);
}
function okts_IShader$DefaultImpls_set3($$this, $name, $value1, $value2, $value3, $value4) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktg_GL_$callClinit();
    oktg_GL_glUniform4f(oktg_GL_INSTANCE, $java.okts_IShader$DefaultImpls_getUniformLocation$default($$this, $name, 0, 2, null), $value1, $value2, $value3, $value4);
}
function okts_IShader$DefaultImpls_set30($$this, $name, $values, $offset, $length) {
    var $location;
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    $location = $java.okts_IShader$DefaultImpls_getUniformLocation$default($$this, $name, 0, 2, null);
    oktg_GL_$callClinit();
    oktg_GL_glUniform3fv(oktg_GL_INSTANCE, $location, $length / 3 | 0, $values, $offset);
}
function okts_IShader$DefaultImpls_set3$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$7 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1520)));
    if (var$6 & 4)
        var$4 = 0;
    if (var$6 & 8)
        var$5 = var$3.data.length;
    var$1.$set310(var$2, var$3, var$4, var$5);
}
function okts_IShader$DefaultImpls_set4($$this, $name, $mat, $transpose) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($mat, $rt_s(516));
    oktg_GL_$callClinit();
    oktg_GL_glUniformMatrix4fv(oktg_GL_INSTANCE, $java.okts_IShader$DefaultImpls_getUniformLocation$default($$this, $name, 0, 2, null), 1, $transpose, $mat.$getValues(), 0);
}
function okts_IShader$DefaultImpls_setMatrix40($$this, $name, $values, $offset, $length) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    $$this.$setMatrix41($java.okts_IShader$DefaultImpls_getUniformLocation$default($$this, $name, 0, 2, null), $values, $offset, $length);
}
function okts_IShader$DefaultImpls_setMatrix4$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$7 !== null)
        $rt_throw(jl_UnsupportedOperationException__init_($rt_s(1521)));
    if (var$6 & 4)
        var$4 = 0;
    if (var$6 & 8)
        var$5 = var$3.data.length;
    var$1.$setMatrix42(var$2, var$3, var$4, var$5);
}
function okts_IShader$DefaultImpls_set5($$this, $name, $value) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    $$this.$setUniformi0($name, $value);
}
function okts_IShader$DefaultImpls_set6($$this, $name, $value) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    oktg_GL_$callClinit();
    oktg_GL_glUniform1f(oktg_GL_INSTANCE, $java.okts_IShader$DefaultImpls_getUniformLocation$default($$this, $name, 0, 2, null), $value);
}
function okts_IShader$DefaultImpls_set7($$this, $name, $values) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    $$this.$set36($name, $values.$getX0(), $values.$getY0());
}
function okts_IShader$DefaultImpls_set8($$this, $name, $values) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    $$this.$set39($name, $values.$getX0(), $values.$getY0(), $values.$getZ());
}
function okts_IShader$DefaultImpls_set9($$this, $name, $values) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    $$this.$set64($name, $values.$getX0(), $values.$getY0(), $values.$getZ(), $values.$getW());
}
function okts_IShader$DefaultImpls_set10($$this, $name, $value) {
    kji_Intrinsics_checkParameterIsNotNull($name, $rt_s(17));
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $$this.$set76($name, $value, 0);
}
function okts_IShader$DefaultImpls_addNode($$this, $node) {
    kji_Intrinsics_checkParameterIsNotNull($node, $rt_s(45));
    $node.$setShaderOrNull($$this);
    $$this.$getNodes0().$add1($node);
    return $node;
}
function okts_IShader$DefaultImpls_destroy($$this) {
    oktg_GL_$callClinit();
    oktg_GL_glUseProgram(oktg_GL_INSTANCE, 0);
    oktg_GL_glDeleteShader(oktg_GL_INSTANCE, $$this.$getVertexShaderHandle());
    oktg_GL_glDeleteShader(oktg_GL_INSTANCE, $$this.$getFragmentShaderHandle());
    oktg_GL_glDeleteProgram(oktg_GL_INSTANCE, $$this.$getHandle());
    $$this.$getAttributes().$clear();
    $$this.$getUniforms0().$clear();
}
function oooi_DxConvex$Edge() {
    var a = this; jl_Object.call(a);
    a.$first4 = 0;
    a.$second0 = 0;
}
$java.oooi_DxConvex$Edge__init_ = function() {
    var var_0 = new oooi_DxConvex$Edge();
    oooi_DxConvex$Edge__init_(var_0);
    return var_0;
};
function oooi_DxConvex$Edge__init_($this) {
    jl_Object__init_0($this);
}
function otja_XMLHttpRequest() {
    jl_Object.call(this);
}
function otja_XMLHttpRequest_onComplete$static($this, $runnable) {
    var var$3;
    var$3 = otji_JS_function(otja_XMLHttpRequest$onComplete$static$lambda$_27_0__init_($this, $runnable), "stateChanged");
    $this.onreadystatechange = var$3;
}
function otja_XMLHttpRequest_lambda$onComplete$0$static($this, $runnable) {
    if ($this.readyState == 4)
        $runnable.$run();
}
function oktn_NET() {
    jl_Object.call(this);
}
var oktn_NET_INSTANCE = null;
function oktn_NET_$callClinit() {
    oktn_NET_$callClinit = $rt_eraseClinit(oktn_NET);
    $java.oktn_NET__clinit_();
}
$java.oktn_NET__init_ = function() {
    var var_0 = new oktn_NET();
    oktn_NET__init_(var_0);
    return var_0;
};
function oktn_NET_isSuccess($this, $response) {
    return 200 <= $response && 299 >= $response ? 1 : 0;
}
function oktn_NET__init_($this) {
    oktn_NET_$callClinit();
    jl_Object__init_0($this);
}
$java.oktn_NET__clinit_ = function() {
    oktn_NET_INSTANCE = $java.oktn_NET__init_();
};
function oktm_ScreenQuad$TextureRenderer() {
    var a = this; oktm_ScreenQuad.call(a);
    a.$shader3 = null;
    a.$textureUnit = 0;
}
$java.oktm_ScreenQuad$TextureRenderer__init_ = function(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new oktm_ScreenQuad$TextureRenderer();
    $java.oktm_ScreenQuad$TextureRenderer__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
};
function oktm_ScreenQuad$TextureRenderer__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new oktm_ScreenQuad$TextureRenderer();
    $java.oktm_ScreenQuad$TextureRenderer__init_1(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
$java.oktm_ScreenQuad$TextureRenderer__init_2 = function() {
    var var_0 = new oktm_ScreenQuad$TextureRenderer();
    oktm_ScreenQuad$TextureRenderer__init_0(var_0);
    return var_0;
};
function oktm_ScreenQuad$TextureRenderer_setPosition($this, $x, $y) {
    $this.$shader3.$bind();
    $this.$shader3.$set36($rt_s(38), $x, $y);
}
function oktm_ScreenQuad$TextureRenderer_setScale($this, $x, $y) {
    $this.$shader3.$bind();
    $this.$shader3.$set36($rt_s(40), $x, $y);
}
$java.oktm_ScreenQuad$TextureRenderer_render = function($this, $texture, $out, $clearMask, $set) {
    kji_Intrinsics_checkParameterIsNotNull($texture, $rt_s(861));
    kji_Intrinsics_checkParameterIsNotNull($set, $rt_s(1281));
    $texture.$bind4($this.$textureUnit);
    $this.$render10($this.$shader3, $out, $clearMask, kji_TypeIntrinsics_beforeCheckcastToFunctionOfArity($set, 1));
};
function oktm_ScreenQuad$TextureRenderer_render$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    if (var$6 & 2)
        var$3 = null;
    if (var$6 & 4)
        var$4 = jl_Integer_valueOf(16640);
    if (var$6 & 8) {
        oktm_ScreenQuad$TextureRenderer$render$1_$callClinit();
        var$5 = oktm_ScreenQuad$TextureRenderer$render$1_INSTANCE;
    }
    $java.oktm_ScreenQuad$TextureRenderer_render(var$1, var$2, var$3, var$4, var$5);
}
$java.oktm_ScreenQuad$TextureRenderer__init_0 = function($this, $x, $y, $width, $height, $aPositionName, $aUVName) {
    var var$7, var$8, var$9, var$10, var$11, var$12;
    kji_Intrinsics_checkParameterIsNotNull($aPositionName, $rt_s(1279));
    kji_Intrinsics_checkParameterIsNotNull($aUVName, $rt_s(1280));
    oktm_ScreenQuad__init_1($this, $x, $y, $width, $height, $aPositionName, $aUVName);
    var$7 = new okts_Shader;
    var$8 = jl_StringBuilder__init_().$append($rt_s(1522));
    var$8 = var$8.$append($aPositionName).$append($rt_s(1523));
    var$8 = var$8.$append($aUVName).$append($rt_s(1524));
    var$8 = var$8.$append($aUVName).$append($rt_s(1525));
    var$9 = var$8.$append($aPositionName).$append($rt_s(1526)).$append($aPositionName).$append($rt_s(1527)).$toString();
    var$10 = null;
    var$8 = null;
    var$11 = null;
    var$12 = null;
    okts_Shader__init_(var$7, var$9, $rt_s(1528), var$10, 0, var$8, 0, var$11, 124, var$12);
    $this.$shader3 = var$7;
    oktg_GL_$callClinit();
    $this.$textureUnit = oktg_GL_grabTextureUnit(oktg_GL_INSTANCE);
    $this.$shader3.$bind();
    oktm_ScreenQuad$TextureRenderer_setPosition($this, 0.0, 0.0);
    oktm_ScreenQuad$TextureRenderer_setScale($this, 1.0, 1.0);
    $this.$shader3.$set35($rt_s(1091), $this.$textureUnit);
};
$java.oktm_ScreenQuad$TextureRenderer__init_1 = function(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) {
    if (var$7 & 1)
        var$1 = 0.0;
    if (var$7 & 2)
        var$2 = 0.0;
    if (var$7 & 4)
        var$3 = 1.0;
    if (var$7 & 8)
        var$4 = 1.0;
    if (var$7 & 16)
        var$5 = $rt_s(303);
    if (var$7 & 32)
        var$6 = $rt_s(304);
    $java.oktm_ScreenQuad$TextureRenderer__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6);
};
function oktm_ScreenQuad$TextureRenderer__init_0(var$0) {
    $java.oktm_ScreenQuad$TextureRenderer__init_1(var$0, 0.0, 0.0, 0.0, 0.0, null, null, 63, null);
}
function kr_IntRange$Companion() {
    jl_Object.call(this);
}
$java.kr_IntRange$Companion__init_ = function() {
    var var_0 = new kr_IntRange$Companion();
    kr_IntRange$Companion__init_0(var_0);
    return var_0;
};
function kr_IntRange$Companion__init_(var_0) {
    var var_1 = new kr_IntRange$Companion();
    $java.kr_IntRange$Companion__init_0(var_1, var_0);
    return var_1;
}
function kr_IntRange$Companion_getEMPTY($this) {
    return kr_IntRange_access$getEMPTY$cp();
}
function kr_IntRange$Companion__init_0($this) {
    jl_Object__init_0($this);
}
$java.kr_IntRange$Companion__init_0 = function($this, $$constructor_marker) {
    kr_IntRange$Companion__init_0($this);
};
function oooi_DxQuickStep$10() {
    jl_Object.call(this);
    this.$val$stage5CallContext = null;
}
$java.oooi_DxQuickStep$10__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$10();
    $java.oooi_DxQuickStep$10__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$10__init_0 = function($this, var$1) {
    $this.$val$stage5CallContext = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$10_run = function($this) {
    $java.oooi_DxQuickStep_access$2000($this.$val$stage5CallContext);
};
function jl_System() {
    jl_Object.call(this);
}
$java.jl_System_outCache = null;
$java.jl_System_errCache = null;
$java.jl_System_properties = null;
$java.jl_System__init_ = function() {
    var var_0 = new jl_System();
    jl_System__init_(var_0);
    return var_0;
};
function jl_System__init_($this) {
    jl_Object__init_0($this);
}
function jl_System_out() {
    if ($java.jl_System_outCache === null)
        $java.jl_System_outCache = ji_PrintStream__init_($java.jl_ConsoleOutputStreamStdout__init_(), 0);
    return $java.jl_System_outCache;
}
function jl_System_err() {
    if ($java.jl_System_errCache === null)
        $java.jl_System_errCache = ji_PrintStream__init_(jl_ConsoleOutputStreamStderr__init_(), 0);
    return $java.jl_System_errCache;
}
function jl_System_arraycopy($src, $srcPos, $dest, $destPos, $length) {
    var var$6, $srcType, $targetType, $srcArray, $i, var$11, var$12, $elem;
    if ($src !== null && $dest !== null) {
        if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src)) {
            var$6 = $destPos + $length | 0;
            if (var$6 <= jlr_Array_getLength($dest)) {
                a: {
                    b: {
                        if ($src !== $dest) {
                            $srcType = jl_Object_getClass($src).$getComponentType();
                            $targetType = jl_Object_getClass($dest).$getComponentType();
                            if ($srcType !== null && $targetType !== null) {
                                if ($srcType === $targetType)
                                    break b;
                                if (!$srcType.$isPrimitive0() && !$targetType.$isPrimitive0()) {
                                    $srcArray = $src;
                                    $i = 0;
                                    var$6 = $srcPos;
                                    while ($i < $length) {
                                        var$11 = $srcArray.data;
                                        var$12 = var$6 + 1 | 0;
                                        $elem = var$11[var$6];
                                        if (!$targetType.$isInstance0($elem)) {
                                            $java.jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $i);
                                            $rt_throw(jl_ArrayStoreException__init_());
                                        }
                                        $i = $i + 1 | 0;
                                        var$6 = var$12;
                                    }
                                    $java.jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                                    return;
                                }
                                if (!$srcType.$isPrimitive0())
                                    break a;
                                if ($targetType.$isPrimitive0())
                                    break b;
                                else
                                    break a;
                            }
                            $rt_throw(jl_ArrayStoreException__init_());
                        }
                    }
                    $java.jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                    return;
                }
                $rt_throw(jl_ArrayStoreException__init_());
            }
        }
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    }
    $rt_throw(jl_NullPointerException__init_0($rt_s(1529)));
}
$java.jl_System_doArrayCopy = function(var$1, var$2, var$3, var$4, var$5) {
    if (var$1 !== var$3 || var$4 < var$2) {
        for (var i = 0; i < var$5; i = (i + 1) | 0) {
            var$3.data[var$4++] = var$1.data[var$2++];
        }
    } else {
        var$2 = (var$2 + var$5) | 0;
        var$4 = (var$4 + var$5) | 0;
        for (var i = 0; i < var$5; i = (i + 1) | 0) {
            var$3.data[--var$4] = var$1.data[--var$2];
        }
    }
};
function jl_System_currentTimeMillis() {
    return Long_fromNumber(new Date().getTime());
}
$java.jl_System_initPropertiesIfNeeded = function() {
    var $defaults;
    if ($java.jl_System_properties === null) {
        $defaults = ju_Properties__init_();
        $defaults.$put3($rt_s(1530), $rt_s(1531));
        $defaults.$put3($rt_s(1532), $rt_s(1533));
        $defaults.$put3($rt_s(1534), $rt_s(735));
        $defaults.$put3($rt_s(1535), $rt_s(395));
        $defaults.$put3($rt_s(34), $java.jl_System_lineSeparator());
        $defaults.$put3($rt_s(1536), $java.jl_System_getTempDir());
        $defaults.$put3($rt_s(1537), $rt_s(1531));
        $defaults.$put3($rt_s(1538), $java.jl_System_getHomeDir());
        $java.jl_System_properties = ju_Properties__init_1($defaults);
    }
};
$java.jl_System_getTempDir = function() {
    return $rt_s(1539);
};
$java.jl_System_getHomeDir = function() {
    return $rt_s(735);
};
function jl_System_getProperty($key) {
    $java.jl_System_initPropertiesIfNeeded();
    return $java.jl_System_properties.$getProperty($key);
}
function jl_System_nanoTime() {
    return Long_fromNumber(performance.now() * 1000000.0);
}
$java.jl_System_lineSeparator = function() {
    return $rt_s(471);
};
function jm_Conversion() {
    jl_Object.call(this);
}
var jm_Conversion_digitFitInInt = null;
var jm_Conversion_bigRadices = null;
function jm_Conversion_$callClinit() {
    jm_Conversion_$callClinit = $rt_eraseClinit(jm_Conversion);
    $java.jm_Conversion__clinit_();
}
$java.jm_Conversion__init_ = function() {
    var var_0 = new jm_Conversion();
    jm_Conversion__init_(var_0);
    return var_0;
};
function jm_Conversion__init_($this) {
    jm_Conversion_$callClinit();
    jl_Object__init_0($this);
}
$java.jm_Conversion__clinit_ = function() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(37);
    var$2 = var$1.data;
    var$2[0] = (-1);
    var$2[1] = (-1);
    var$2[2] = 31;
    var$2[3] = 19;
    var$2[4] = 15;
    var$2[5] = 13;
    var$2[6] = 11;
    var$2[7] = 11;
    var$2[8] = 10;
    var$2[9] = 9;
    var$2[10] = 9;
    var$2[11] = 8;
    var$2[12] = 8;
    var$2[13] = 8;
    var$2[14] = 8;
    var$2[15] = 7;
    var$2[16] = 7;
    var$2[17] = 7;
    var$2[18] = 7;
    var$2[19] = 7;
    var$2[20] = 7;
    var$2[21] = 7;
    var$2[22] = 6;
    var$2[23] = 6;
    var$2[24] = 6;
    var$2[25] = 6;
    var$2[26] = 6;
    var$2[27] = 6;
    var$2[28] = 6;
    var$2[29] = 6;
    var$2[30] = 6;
    var$2[31] = 6;
    var$2[32] = 6;
    var$2[33] = 6;
    var$2[34] = 6;
    var$2[35] = 6;
    var$2[36] = 5;
    jm_Conversion_digitFitInInt = var$1;
    var$1 = $rt_createIntArray(35);
    var$2 = var$1.data;
    var$2[0] = (-2147483648);
    var$2[1] = 1162261467;
    var$2[2] = 1073741824;
    var$2[3] = 1220703125;
    var$2[4] = 362797056;
    var$2[5] = 1977326743;
    var$2[6] = 1073741824;
    var$2[7] = 387420489;
    var$2[8] = 1000000000;
    var$2[9] = 214358881;
    var$2[10] = 429981696;
    var$2[11] = 815730721;
    var$2[12] = 1475789056;
    var$2[13] = 170859375;
    var$2[14] = 268435456;
    var$2[15] = 410338673;
    var$2[16] = 612220032;
    var$2[17] = 893871739;
    var$2[18] = 1280000000;
    var$2[19] = 1801088541;
    var$2[20] = 113379904;
    var$2[21] = 148035889;
    var$2[22] = 191102976;
    var$2[23] = 244140625;
    var$2[24] = 308915776;
    var$2[25] = 387420489;
    var$2[26] = 481890304;
    var$2[27] = 594823321;
    var$2[28] = 729000000;
    var$2[29] = 887503681;
    var$2[30] = 1073741824;
    var$2[31] = 1291467969;
    var$2[32] = 1544804416;
    var$2[33] = 1838265625;
    var$2[34] = 60466176;
    jm_Conversion_bigRadices = var$1;
};
function oktm_IVec4$DefaultImpls() {
    jl_Object.call(this);
}
function oktm_IVec4$DefaultImpls_getR($$this) {
    return $$this.$getX0();
}
function oktm_IVec4$DefaultImpls_setR($$this, $value) {
    $$this.$setX0($value);
}
function oktm_IVec4$DefaultImpls_getG($$this) {
    return $$this.$getY0();
}
function oktm_IVec4$DefaultImpls_setG($$this, $value) {
    $$this.$setY0($value);
}
function oktm_IVec4$DefaultImpls_getB($$this) {
    return $$this.$getZ();
}
function oktm_IVec4$DefaultImpls_setB($$this, $value) {
    $$this.$setZ($value);
}
function oktm_IVec4$DefaultImpls_getA($$this) {
    return $$this.$getW();
}
function oktm_IVec4$DefaultImpls_setA($$this, $value) {
    $$this.$setW($value);
}
function oktm_IVec4$DefaultImpls_set($$this, $x, $y, $z, $w) {
    $$this.$setX0($x);
    $$this.$setY0($y);
    $$this.$setZ($z);
    $$this.$setW($w);
    return $$this;
}
function oktm_IVec4$DefaultImpls_set0($$this, $other) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    return $$this.$set52($other.$getX0(), $other.$getY0(), $other.$getZ(), $other.$getW());
}
function oktm_IVec4$DefaultImpls_set1($$this, $other, $w) {
    kji_Intrinsics_checkParameterIsNotNull($other, $rt_s(413));
    $$this.$setX0($other.$getX0());
    $$this.$setY0($other.$getY0());
    $$this.$setZ($other.$getZ());
    $$this.$setW($w);
    return $$this;
}
function oktm_IVec4$DefaultImpls_len2($$this) {
    return $$this.$getX0() * $$this.$getX0() + $$this.$getY0() * $$this.$getY0() + $$this.$getZ() * $$this.$getZ() + $$this.$getW() * $$this.$getW();
}
function oktm_IVec4$DefaultImpls_nor($$this) {
    var $len, var$3;
    $len = $$this.$len22();
    if ($len !== 0.0) {
        oktm_MATH_$callClinit();
        if (!oktm_MATH_isEqual(oktm_MATH_INSTANCE, $len, 1.0)) {
            var$3 = jl_Math_sqrt($len);
            $$this.$setW($$this.$getW() / var$3);
            $$this.$setX0($$this.$getX0() / var$3);
            $$this.$setY0($$this.$getY0() / var$3);
            $$this.$setZ($$this.$getZ() / var$3);
        }
    }
    return $$this;
}
function oktm_IVec4$DefaultImpls_lerp($$this, $target, $alpha) {
    kji_Intrinsics_checkParameterIsNotNull($target, $rt_s(1101));
    $$this.$setX0($$this.$getX0() + $alpha * ($target.$getX0() - $$this.$getX0()));
    $$this.$setY0($$this.$getY0() + $alpha * ($target.$getY0() - $$this.$getY0()));
    $$this.$setZ($$this.$getZ() + $alpha * ($target.$getZ() - $$this.$getZ()));
    $$this.$setW($$this.$getW() + $alpha * ($target.$getW() - $$this.$getW()));
    return $$this;
}
function oktm_IVec4$DefaultImpls_idtQuaternion($$this) {
    return $$this.$set52(0.0, 0.0, 0.0, 1.0);
}
function oktm_IVec4$DefaultImpls_setQuaternion($$this, $x, $y, $z, $radians) {
    var $d, var$7, $pi2, $ang, var$10, $sin, $cos;
    oktm_IVec4_$callClinit();
    $d = oktm_IVec4$Companion_len(oktm_IVec4_Companion, $x, $y, $z);
    if ($d === 0.0)
        return $$this.$idtQuaternion0();
    var$7 = 1.0 / $d;
    $pi2 = 6.2831854820251465;
    $ang = $radians >= 0.0 ? $radians % $pi2 : $pi2 -  -$radians % $pi2;
    var$10 = $ang / 2.0;
    $sin = jl_Math_sin(var$10);
    $cos = jl_Math_cos(var$10);
    return $$this.$set52(var$7 * $x * $sin, var$7 * $y * $sin, var$7 * $z * $sin, $cos).$nor2();
}
function oktm_IVec4$DefaultImpls_setQuaternion0($$this, $normalizeAxes, $mat) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    kji_Intrinsics_checkParameterIsNotNull($mat, $rt_s(516));
    var$4 = $mat.$getValues().data[0];
    var$5 = $mat.$getValues().data[4];
    var$6 = $mat.$getValues().data[8];
    var$7 = $mat.$getValues().data[1];
    var$8 = $mat.$getValues().data[5];
    var$9 = $mat.$getValues().data[9];
    var$10 = $mat.$getValues().data[2];
    var$11 = $mat.$getValues().data[6];
    var$12 = $mat.$getValues().data[10];
    return $$this.$setQuaternionFromAxes0($normalizeAxes, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12);
}
function oktm_IVec4$DefaultImpls_setQuaternion1($$this, $mat) {
    kji_Intrinsics_checkParameterIsNotNull($mat, $rt_s(516));
    return $$this.$setQuaternion4(0, $mat);
}
function oktm_IVec4$DefaultImpls_setQuaternionFromAxes($$this, $normalizeAxes, $xx, $xy, $xz, $yx, $yy, $yz, $zx, $zy, $zz) {
    var $lx, $ly, $lz, $t, $s, var$17;
    if ($normalizeAxes) {
        oktm_IVec4_$callClinit();
        $lx = 1.0 / oktm_IVec4$Companion_len(oktm_IVec4_Companion, $xx, $xy, $xz);
        $ly = 1.0 / oktm_IVec4$Companion_len(oktm_IVec4_Companion, $yx, $yy, $yz);
        $lz = 1.0 / oktm_IVec4$Companion_len(oktm_IVec4_Companion, $zx, $zy, $zz);
        $xx = $xx * $lx;
        $xy = $xy * $lx;
        $xz = $xz * $lx;
        $yx = $yx * $ly;
        $yy = $yy * $ly;
        $yz = $yz * $ly;
        $zx = $zx * $lz;
        $zy = $zy * $lz;
        $zz = $zz * $lz;
    }
    $t = $xx + $yy + $zz;
    if ($t >= 0.0) {
        $s = jl_Math_sqrt($t + 1.0);
        $$this.$setW(0.5 * $s);
        var$17 = 0.5 / $s;
        $$this.$setX0(($zy - $yz) * var$17);
        $$this.$setY0(($xz - $zx) * var$17);
        $$this.$setZ(($yx - $xy) * var$17);
    } else if ($xx > $yy && $xx > $zz) {
        $s = jl_Math_sqrt(1.0 + $xx - $yy - $zz);
        $$this.$setX0($s * 0.5);
        var$17 = 0.5 / $s;
        $$this.$setY0(($yx + $xy) * var$17);
        $$this.$setZ(($xz + $zx) * var$17);
        $$this.$setW(($zy - $yz) * var$17);
    } else if ($yy <= $zz) {
        $s = jl_Math_sqrt(1.0 + $zz - $xx - $yy);
        $$this.$setZ($s * 0.5);
        var$17 = 0.5 / $s;
        $$this.$setX0(($xz + $zx) * var$17);
        $$this.$setY0(($zy + $yz) * var$17);
        $$this.$setW(($yx - $xy) * var$17);
    } else {
        $s = jl_Math_sqrt(1.0 + $yy - $xx - $zz);
        $$this.$setY0($s * 0.5);
        var$17 = 0.5 / $s;
        $$this.$setX0(($yx + $xy) * var$17);
        $$this.$setZ(($zy + $yz) * var$17);
        $$this.$setW(($xz - $zx) * var$17);
    }
    return $$this;
}
function oktm_IVec4$DefaultImpls_slerp($$this, $end, $alpha) {
    var $absDot, var$5, $scale0, $angle, $invSinTheta;
    kji_Intrinsics_checkParameterIsNotNull($end, $rt_s(1211));
    $absDot = $$this.$getX0() * $end.$getX0() + $$this.$getY0() * $end.$getY0() + $$this.$getZ() * $end.$getZ() + $$this.$getW() * $end.$getW();
    var$5 = $rt_compare($absDot, 0.0);
    if (var$5 < 0)
        $absDot =  -$absDot;
    $scale0 = 1.0 - $alpha;
    if (1.0 - $absDot > 0.1) {
        $angle = jl_Math_acos($absDot);
        $invSinTheta = 1.0 / jl_Math_sin($angle);
        $scale0 = jl_Math_sin($scale0 * $angle) * $invSinTheta;
        $alpha = jl_Math_sin($alpha * $angle) * $invSinTheta;
    }
    if (var$5 < 0)
        $alpha =  -$alpha;
    $$this.$setX0($scale0 * $$this.$getX0() + $alpha * $end.$getX0());
    $$this.$setY0($scale0 * $$this.$getY0() + $alpha * $end.$getY0());
    $$this.$setZ($scale0 * $$this.$getZ() + $alpha * $end.$getZ());
    $$this.$setW($scale0 * $$this.$getW() + $alpha * $end.$getW());
    return $$this;
}
function jur_AbstractCharClass$LazyXDigit() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyXDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyXDigit();
    jur_AbstractCharClass$LazyXDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyXDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
$java.jur_AbstractCharClass$LazyXDigit_computeValue = function($this) {
    return jur_CharClass__init_().$add0(48, 57).$add0(97, 102).$add0(65, 70);
};
function oktt_TvmUInt16Array() {
    var a = this; oktt_TvmArrayBufferView.call(a);
    a.$size8 = 0;
    a.$shortArray = null;
}
$java.oktt_TvmUInt16Array__init_ = function(var_0) {
    var var_1 = new oktt_TvmUInt16Array();
    oktt_TvmUInt16Array__init_(var_1, var_0);
    return var_1;
};
$java.oktt_TvmUInt16Array_getSize = function($this) {
    return $this.$size8;
};
$java.oktt_TvmUInt16Array_get = function($this, $index) {
    return jl_Short_valueOf($this.$shortArray[$index] << 16 >> 16);
};
$java.oktt_TvmUInt16Array_get0 = function(var$0, var$1) {
    return $java.oktt_TvmUInt16Array_get(var$0, var$1);
};
$java.oktt_TvmUInt16Array_get1 = function($this) {
    var $value;
    $value = $this.$shortArray[$this.$getPosition()];
    $this.$setPosition($this.$getPosition() + 1 | 0);
    return jl_Short_valueOf($value << 16 >> 16);
};
$java.oktt_TvmUInt16Array_get2 = function(var$0) {
    return $java.oktt_TvmUInt16Array_get1(var$0);
};
$java.oktt_TvmUInt16Array_put = function($this, $value) {
    var var$2, var$3, var$4;
    var$2 = $this.$shortArray;
    var$3 = $this.$getPosition();
    var$4 = $value & 255;
    var$2[var$3] = var$4;
    $this.$setPosition($this.$getPosition() + 1 | 0);
};
$java.oktt_TvmUInt16Array_put0 = function(var$0, var$1) {
    $java.oktt_TvmUInt16Array_put(var$0, var$1.$shortValue());
};
function oktt_TvmUInt16Array__init_($this, $shortArray) {
    kji_Intrinsics_checkParameterIsNotNull($shortArray, $rt_s(1540));
    oktt_TvmArrayBufferView__init_0($this);
    $this.$shortArray = $shortArray;
    $this.$size8 = $this.$shortArray.length;
}
$java.oktt_TvmUInt16Array_put1 = function($this, $values) {
    kji_Intrinsics_checkParameterIsNotNull($values, $rt_s(285));
    oktd_IShortData$DefaultImpls_put($this, $values);
};
$java.oktt_TvmUInt16Array_put2 = function(var$0, var$1) {
    $java.oktt_TvmUInt16Array_put1(var$0, var$1);
};
$java.oktt_TvmUInt16Array_toInt = function($this, $index) {
    return oktd_IShortData$DefaultImpls_toInt($this, $index);
};
function oooicj_RefFloat() {
    jl_Object.call(this);
    this.$d0 = 0.0;
}
function oooicj_RefFloat__init_0() {
    var var_0 = new oooicj_RefFloat();
    oooicj_RefFloat__init_1(var_0);
    return var_0;
}
function oooicj_RefFloat__init_(var_0) {
    var var_1 = new oooicj_RefFloat();
    $java.oooicj_RefFloat__init_(var_1, var_0);
    return var_1;
}
function oooicj_RefFloat__init_1($this) {
    jl_Object__init_0($this);
    $this.$d0 = 0.0;
}
$java.oooicj_RefFloat__init_ = function($this, $d) {
    jl_Object__init_0($this);
    $this.$d0 = $d;
};
function jur_Matcher() {
    var a = this; jl_Object.call(a);
    a.$pat = null;
    a.$start6 = null;
    a.$string7 = null;
    a.$matchResult = null;
    a.$leftBound0 = 0;
    a.$rightBound0 = 0;
}
$java.jur_Matcher__init_ = function(var_0, var_1) {
    var var_2 = new jur_Matcher();
    $java.jur_Matcher__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.jur_Matcher_find = function($this, $start) {
    var $stringLength, var$3;
    $stringLength = $this.$string7.$length();
    if ($start >= 0 && $start <= $stringLength) {
        var$3 = $java.jur_Matcher_findAt($this, $start);
        if (var$3 >= 0 && $this.$matchResult.$isValid()) {
            $this.$matchResult.$finalizeMatch();
            return 1;
        }
        $this.$matchResult.$startIndex = (-1);
        return 0;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_String_valueOf1($start)));
};
$java.jur_Matcher_findAt = function($this, $startIndex) {
    var $foundIndex;
    $this.$matchResult.$reset1();
    $this.$matchResult.$setMode(1);
    $this.$matchResult.$setStartIndex($startIndex);
    $foundIndex = $this.$start6.$find($startIndex, $this.$string7, $this.$matchResult);
    if ($foundIndex == (-1))
        $this.$matchResult.$hitEnd = 1;
    return $foundIndex;
};
function jur_Matcher_find($this) {
    var $length, var$2;
    $length = $this.$string7.$length();
    if (!$java.jur_Matcher_hasTransparentBounds($this))
        $length = $this.$rightBound0;
    if ($this.$matchResult.$startIndex >= 0 && $this.$matchResult.$mode0() == 1) {
        $this.$matchResult.$startIndex = $this.$matchResult.$end0();
        if ($this.$matchResult.$end0() == $this.$matchResult.$start0()) {
            var$2 = $this.$matchResult;
            var$2.$startIndex = var$2.$startIndex + 1 | 0;
        }
        return $this.$matchResult.$startIndex <= $length && $java.jur_Matcher_find($this, $this.$matchResult.$startIndex) ? 1 : 0;
    }
    return $java.jur_Matcher_find($this, $this.$leftBound0);
}
$java.jur_Matcher_start = function($this, $group) {
    return $this.$matchResult.$start($group);
};
$java.jur_Matcher_end = function($this, $group) {
    return $this.$matchResult.$end($group);
};
function jur_Matcher_start($this) {
    return $java.jur_Matcher_start($this, 0);
}
function jur_Matcher_end($this) {
    return $java.jur_Matcher_end($this, 0);
}
$java.jur_Matcher_hasTransparentBounds = function($this) {
    return $this.$matchResult.$hasTransparentBounds();
};
$java.jur_Matcher__init_0 = function($this, $pat, $cs) {
    var var$3, var$4, var$5, var$6, var$7;
    jl_Object__init_0($this);
    $this.$leftBound0 = (-1);
    $this.$rightBound0 = (-1);
    $this.$pat = $pat;
    $this.$start6 = $pat.$start5;
    $this.$string7 = $cs;
    $this.$leftBound0 = 0;
    $this.$rightBound0 = $this.$string7.$length();
    var$3 = new jur_MatchResultImpl;
    var$4 = $this.$leftBound0;
    var$5 = $this.$rightBound0;
    var$6 = $java.jur_Pattern_groupCount($pat);
    var$7 = $java.jur_Pattern_compCount($pat);
    jur_MatchResultImpl__init_0(var$3, $cs, var$4, var$5, var$6, var$7, $java.jur_Pattern_consCount($pat));
    $this.$matchResult = var$3;
};
function jur_DotAllSet() {
    jur_JointSet.call(this);
}
$java.jur_DotAllSet__init_ = function() {
    var var_0 = new jur_DotAllSet();
    jur_DotAllSet__init_(var_0);
    return var_0;
};
function jur_DotAllSet__init_($this) {
    jur_JointSet__init_0($this);
}
$java.jur_DotAllSet_matches = function($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength) {
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$next0.$matches(var$7, $testString, $matchResult);
        }
    }
    return $this.$next0.$matches(var$5, $testString, $matchResult);
};
$java.jur_DotAllSet_setNext = function($this, $next) {
    $this.$next0 = $next;
};
$java.jur_DotAllSet_getType = function($this) {
    return (-2147483602);
};
$java.jur_DotAllSet_hasConsumed = function($this, $matchResult) {
    return 1;
};
function oooig_GimTrimeshSphereCollision() {
    jl_Object.call(this);
}
$java.oooig_GimTrimeshSphereCollision__init_ = function() {
    var var_0 = new oooig_GimTrimeshSphereCollision();
    oooig_GimTrimeshSphereCollision__init_(var_0);
    return var_0;
};
function oooig_GimTrimeshSphereCollision__init_($this) {
    jl_Object__init_0($this);
}
$java.oooig_GimTrimeshSphereCollision_gim_triangle_sphere_collision = function($tri, $center, $radius, $contact_data) {
    var $dis, var$6, $most_edge, $max_dis, var$9, var$10, $e1, $e2, var$13, var$14;
    $contact_data.$m_point_count = 0;
    $dis = oooig_GimGeometry_DISTANCE_PLANE_POINT($tri.$m_planes.$m_planes0.data[0], $center);
    if ($dis > $radius)
        return 0;
    var$6 =  -$radius;
    if ($dis < var$6)
        return 0;
    $contact_data.$m_penetration_depth = $dis;
    $most_edge = 4;
    $max_dis = 0.0;
    var$9 = oooig_GimGeometry_DISTANCE_PLANE_POINT($tri.$m_planes.$m_planes0.data[1], $center);
    if (var$9 > $radius)
        return 0;
    if (var$9 > 0.0)
        $most_edge = 0;
    else
        var$9 = $max_dis;
    var$10 = oooig_GimGeometry_DISTANCE_PLANE_POINT($tri.$m_planes.$m_planes0.data[2], $center);
    if (var$10 > $radius)
        return 0;
    if (var$10 > var$9)
        $most_edge = 1;
    else
        var$10 = var$9;
    var$9 = oooig_GimGeometry_DISTANCE_PLANE_POINT($tri.$m_planes.$m_planes0.data[3], $center);
    if (var$9 > $radius)
        return 0;
    if (var$9 > var$10)
        $most_edge = 2;
    if ($most_edge == 4) {
        oooig_GimGeometry_VEC_COPY0($contact_data.$m_separating_normal, $tri.$m_planes.$m_planes0.data[0]);
        if ($contact_data.$m_penetration_depth < 0.0)
            oooig_GimGeometry_VEC_SCALE($contact_data.$m_points.data[0], $radius, $contact_data.$m_separating_normal);
        else
            oooig_GimGeometry_VEC_SCALE($contact_data.$m_points.data[0], var$6, $contact_data.$m_separating_normal);
        $contact_data.$m_penetration_depth = $radius - $contact_data.$m_penetration_depth;
        oooig_GimGeometry_VEC_SUM($contact_data.$m_points.data[0], $contact_data.$m_points.data[0], $center);
        oooig_GimGeometry_VEC_SCALE($contact_data.$m_separating_normal, (-1.0), $contact_data.$m_separating_normal);
        $contact_data.$m_point_count = 1;
        return 1;
    }
    $e1 = oooig_GimGeometry$vec3f__init_();
    $e2 = oooig_GimGeometry$vec3f__init_();
    oooig_GimGeometry_VEC_COPY($e1, $tri.$m_vertices.data[$most_edge]);
    var$13 = $tri.$m_vertices.data;
    var$14 = $most_edge + 1 | 0;
    oooig_GimGeometry_VEC_COPY($e2, var$13[var$14 % 3 | 0]);
    oooig_GimGeometry_CLOSEST_POINT_ON_SEGMENT($contact_data.$m_points.data[0], $center, $e1, $e2);
    oooig_GimGeometry_VEC_DIFF($e1, $center, $contact_data.$m_points.data[0]);
    var$9 = oooig_GimGeometry_VEC_LENGTH($e1);
    if (var$9 > $radius)
        return 0;
    $contact_data.$m_penetration_depth = $radius - var$9;
    if (!oooig_GimMath_IS_ZERO(var$9)) {
        oooig_GimGeometry_VEC_SCALE($contact_data.$m_separating_normal, 1.0 / var$9, $e1);
        oooig_GimGeometry_VEC_SCALE($contact_data.$m_points.data[0], var$6, $contact_data.$m_separating_normal);
        oooig_GimGeometry_VEC_SUM($contact_data.$m_points.data[0], $contact_data.$m_points.data[0], $center);
    } else {
        oooig_GimGeometry_VEC_COPY0($contact_data.$m_separating_normal, $tri.$m_planes.$m_planes0.data[var$14]);
        oooig_GimGeometry_VEC_SCALE($contact_data.$m_points.data[0], var$6, $contact_data.$m_separating_normal);
        oooig_GimGeometry_VEC_SUM($contact_data.$m_points.data[0], $contact_data.$m_points.data[0], $center);
    }
    oooig_GimGeometry_VEC_SCALE($contact_data.$m_separating_normal, (-1.0), $contact_data.$m_separating_normal);
    $contact_data.$m_point_count = 1;
    return 1;
};
function oooig_GimTrimeshSphereCollision_gim_trimesh_sphere_collision($trimesh, $center, $radius, $contacts) {
    var $test_aabb, $collision_result, $dummycontacts, $boxesresult, $tri_contact_data, $tri_data, $i, var$12, $cresult;
    $contacts.$m_size = 0;
    $test_aabb = oooig_GimGeometry$aabb3f__init_();
    $test_aabb.$minX = $center.$f.data[0] - $radius;
    $test_aabb.$maxX = $center.$f.data[0] + $radius;
    $test_aabb.$minY = $center.$f.data[1] - $radius;
    $test_aabb.$maxY = $center.$f.data[1] + $radius;
    $test_aabb.$minZ = $center.$f.data[2] - $radius;
    $test_aabb.$maxZ = $center.$f.data[2] + $radius;
    $collision_result = oooig_GimDynArrayInt_GIM_CREATE_BOXQUERY_LIST();
    $trimesh.$m_aabbset.$gim_aabbset_box_collision($test_aabb, $collision_result);
    if (!$collision_result.$size())
        $collision_result.$GIM_DYNARRAY_DESTROY();
    $trimesh.$gim_trimesh_locks_work_data();
    $dummycontacts = oooig_GimContact_GIM_CREATE_CONTACT_LIST();
    $boxesresult = $collision_result.$GIM_DYNARRAY_POINTER0();
    $tri_contact_data = oooig_GimTriCollision$GIM_TRIANGLE_CONTACT_DATA__init_();
    $tri_data = oooig_GimTriCollision$GIM_TRIANGLE_DATA__init_();
    $i = 0;
    while ($i < $collision_result.$size()) {
        var$12 = $boxesresult.data;
        $trimesh.$gim_trimesh_get_triangle_data(var$12[$i], $tri_data);
        $cresult = $java.oooig_GimTrimeshSphereCollision_gim_triangle_sphere_collision($tri_data, $center, $radius, $tri_contact_data);
        if ($cresult)
            oooig_GimContact_GIM_PUSH_CONTACT0($dummycontacts, $tri_contact_data.$m_points.data[0], $tri_contact_data.$m_separating_normal, $tri_contact_data.$m_penetration_depth, $trimesh, null, var$12[$i], 0);
        $i = $i + 1 | 0;
    }
    $trimesh.$gim_trimesh_unlocks_work_data();
    $collision_result.$GIM_DYNARRAY_DESTROY();
    oooig_GimContact_gim_merge_contacts($dummycontacts, $contacts);
    $dummycontacts.$GIM_DYNARRAY_DESTROY();
}
function okttm_MeshTest() {
    jl_Object.call(this);
}
function okttm_MeshTest__init_() {
    var var_0 = new okttm_MeshTest();
    okttm_MeshTest__init_0(var_0);
    return var_0;
}
$java.okttm_MeshTest_getName = function($this) {
    return $rt_s(309);
};
$java.okttm_MeshTest_testMain = function($this) {
    var $mesh, $vertexInputs, var$3, var$4, var$5, var$6, var$7, $shader, var$9, var$10, var$11;
    $mesh = oktm_Mesh__init_1(null, null, null, null, 0, 31, null);
    $vertexInputs = new oktm_VertexInputs;
    var$3 = $rt_createArray(oktm_IVertexInput, 2);
    var$4 = var$3.data;
    var$4[0] = oktm_VertexInput__init_(3, $rt_s(303), 5126, 1);
    var$4[1] = oktm_VertexInput__init_(2, $rt_s(304), 5126, 1);
    oktm_VertexInputs__init_($vertexInputs, var$3);
    oktd_DATA_$callClinit();
    var$5 = oktd_DATA_bytes(oktd_DATA_INSTANCE, 80);
    var$6 = var$5.$floatView();
    var$3 = $rt_createArray(jl_Float, 5);
    var$4 = var$3.data;
    var$4[0] = jl_Float_valueOf((-1.0));
    var$4[1] = jl_Float_valueOf((-1.0));
    var$4[2] = jl_Float_valueOf(0.0);
    var$4[3] = jl_Float_valueOf(0.0);
    var$4[4] = jl_Float_valueOf(0.0);
    var$6.$put4(var$3);
    var$3 = $rt_createArray(jl_Float, 5);
    var$4 = var$3.data;
    var$4[0] = jl_Float_valueOf(1.0);
    var$4[1] = jl_Float_valueOf((-1.0));
    var$4[2] = jl_Float_valueOf(0.0);
    var$4[3] = jl_Float_valueOf(1.0);
    var$4[4] = jl_Float_valueOf(0.0);
    var$6.$put4(var$3);
    var$3 = $rt_createArray(jl_Float, 5);
    var$4 = var$3.data;
    var$4[0] = jl_Float_valueOf(1.0);
    var$4[1] = jl_Float_valueOf(1.0);
    var$4[2] = jl_Float_valueOf(0.0);
    var$4[3] = jl_Float_valueOf(1.0);
    var$4[4] = jl_Float_valueOf(1.0);
    var$6.$put4(var$3);
    var$3 = $rt_createArray(jl_Float, 5);
    var$4 = var$3.data;
    var$4[0] = jl_Float_valueOf((-1.0));
    var$4[1] = jl_Float_valueOf(1.0);
    var$4[2] = jl_Float_valueOf(0.0);
    var$4[3] = jl_Float_valueOf(0.0);
    var$4[4] = jl_Float_valueOf(1.0);
    var$6.$put4(var$3);
    oktm_Mesh_setVertices($mesh, oktm_VertexBufferObject__init_1($vertexInputs, var$5, 0, 0, 0, 28, null));
    var$5 = oktd_DATA_bytes(oktd_DATA_INSTANCE, 12);
    var$7 = var$5.$shortView();
    var$3 = $rt_createArray(jl_Short, 3);
    var$4 = var$3.data;
    var$4[0] = jl_Short_valueOf(0);
    var$4[1] = jl_Short_valueOf(1);
    var$4[2] = jl_Short_valueOf(2);
    var$7.$put4(var$3);
    var$3 = $rt_createArray(jl_Short, 3);
    var$4 = var$3.data;
    var$4[0] = jl_Short_valueOf(0);
    var$4[1] = jl_Short_valueOf(2);
    var$4[2] = jl_Short_valueOf(3);
    var$7.$put4(var$3);
    var$7 = null;
    oktm_Mesh_setIndices($mesh, oktm_IndexBufferObject__init_(var$5, 5123, 0, 0, 12, var$7));
    $shader = new okts_Shader;
    var$6 = null;
    var$9 = null;
    var$10 = null;
    var$11 = null;
    okts_Shader__init_($shader, $rt_s(1541), $rt_s(1542), var$6, 0, var$9, 0, var$10, 124, var$11);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, okts_IShader$DefaultImpls_sourceCode$default($shader, 0, 1, null), null, 2, null);
    oktg_GL_$callClinit();
    oktg_GL_render$default(oktg_GL_INSTANCE, null, okttm_MeshTest$testMain$2__init_($shader, $mesh), 1, null);
};
function okttm_MeshTest__init_0($this) {
    jl_Object__init_0($this);
}
function jur_AbstractCharClass$LazyJavaUpperCase() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaUpperCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUpperCase();
    jur_AbstractCharClass$LazyJavaUpperCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUpperCase__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
$java.jur_AbstractCharClass$LazyJavaUpperCase_computeValue = function($this) {
    var $chCl;
    $chCl = $java.jur_AbstractCharClass$LazyJavaUpperCase$1__init_($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function oktts_ThresholdTest() {
    jl_Object.call(this);
}
function oktts_ThresholdTest__init_() {
    var var_0 = new oktts_ThresholdTest();
    oktts_ThresholdTest__init_0(var_0);
    return var_0;
}
$java.oktts_ThresholdTest_getName = function($this) {
    return $rt_s(1543);
};
$java.oktts_ThresholdTest_testMain = function($this) {
    var $model, $frameBuffer, var$3, var$4, var$5, $threshold, $screenQuad;
    $model = oktt_CubeModel__init_(null, 1, null);
    $frameBuffer = new oktt_SimpleFrameBuffer;
    oktg_GL_$callClinit();
    var$3 = oktg_GL_getMainFrameBufferWidth(oktg_GL_INSTANCE);
    var$4 = oktg_GL_getMainFrameBufferHeight(oktg_GL_INSTANCE);
    var$5 = null;
    oktt_SimpleFrameBuffer__init_($frameBuffer, var$3, var$4, 6407, 0, 0, 0, 0, 120, var$5);
    $threshold = oktsp_Threshold__init_(0.5);
    oktu_LOG_$callClinit();
    oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, okts_IShader$DefaultImpls_sourceCode$default(oktsp_Threshold_getShader($threshold), 0, 1, null), null, 2, null);
    $screenQuad = oktm_ScreenQuad__init_(0.0, 0.0, 0.0, 0.0, null, null, 63, null);
    oktg_GL_setDepthTestEnabled(oktg_GL_INSTANCE, 1);
    oktg_GL_render$default(oktg_GL_INSTANCE, null, $java.oktts_ThresholdTest$testMain$1__init_($model, $frameBuffer, $threshold, $screenQuad), 1, null);
};
function oktts_ThresholdTest__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxQuickStep$21() {
    jl_Object.call(this);
    this.$val$stage4CallContext = null;
}
$java.oooi_DxQuickStep$21__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$21();
    $java.oooi_DxQuickStep$21__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$21__init_0 = function($this, var$1) {
    $this.$val$stage4CallContext = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$21_run = function($this) {
    $java.oooi_DxQuickStep_access$2200($this.$val$stage4CallContext);
};
function oooi_DxQuickStep$20() {
    jl_Object.call(this);
    this.$val$stage4CallContext0 = null;
}
$java.oooi_DxQuickStep$20__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$20();
    $java.oooi_DxQuickStep$20__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$20__init_0 = function($this, var$1) {
    $this.$val$stage4CallContext0 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$20_run = function($this) {
    $java.oooi_DxQuickStep_access$3100($this.$val$stage4CallContext0);
};
function oooig_GimRadixSort$3() {
    jl_Object.call(this);
}
$java.oooig_GimRadixSort$3__init_ = function() {
    var var_0 = new oooig_GimRadixSort$3();
    oooig_GimRadixSort$3__init_(var_0);
    return var_0;
};
function oooig_GimRadixSort$3__init_($this) {
    jl_Object__init_0($this);
}
function kji_Ref$IntRef() {
    jl_Object.call(this);
    this.$element = 0;
}
function kji_Ref$IntRef__init_() {
    var var_0 = new kji_Ref$IntRef();
    kji_Ref$IntRef__init_0(var_0);
    return var_0;
}
function kji_Ref$IntRef__init_0($this) {
    jl_Object__init_0($this);
}
function oooig_GimRadixSort$1() {
    jl_Object.call(this);
}
$java.oooig_GimRadixSort$1__init_ = function() {
    var var_0 = new oooig_GimRadixSort$1();
    oooig_GimRadixSort$1__init_(var_0);
    return var_0;
};
function oooig_GimRadixSort$1__init_($this) {
    jl_Object__init_0($this);
}
$java.oooig_GimRadixSort$1_run = function($this, $x, $y) {
    return $java.oooig_GimRadixSort_access$000($x, $y);
};
function oooig_GimRadixSort$2() {
    jl_Object.call(this);
}
$java.oooig_GimRadixSort$2__init_ = function() {
    var var_0 = new oooig_GimRadixSort$2();
    oooig_GimRadixSort$2__init_(var_0);
    return var_0;
};
function oooig_GimRadixSort$2__init_($this) {
    jl_Object__init_0($this);
}
$java.oooig_GimRadixSort$2_run = function($this, $array, $i, $j) {
    $java.oooig_GimRadixSort_access$100($array, $i, $j);
};
function oktm_IVertexBuffer$Companion() {
    jl_Object.call(this);
}
$java.oktm_IVertexBuffer$Companion_Build = null;
var oktm_IVertexBuffer$Companion_$$INSTANCE = null;
function oktm_IVertexBuffer$Companion_$callClinit() {
    oktm_IVertexBuffer$Companion_$callClinit = $rt_eraseClinit(oktm_IVertexBuffer$Companion);
    $java.oktm_IVertexBuffer$Companion__clinit_();
}
$java.oktm_IVertexBuffer$Companion__init_ = function() {
    var var_0 = new oktm_IVertexBuffer$Companion();
    oktm_IVertexBuffer$Companion__init_(var_0);
    return var_0;
};
$java.oktm_IVertexBuffer$Companion_build = function($this, $byteBuffer, $attributes, $usage, $initGpuObjects) {
    kji_Intrinsics_checkParameterIsNotNull($byteBuffer, $rt_s(1544));
    kji_Intrinsics_checkParameterIsNotNull($attributes, $rt_s(1360));
    return $java.oktm_IVertexBuffer$Companion_Build.$invoke38($byteBuffer, $attributes, jl_Integer_valueOf($usage), jl_Boolean_valueOf($initGpuObjects));
};
function oktm_IVertexBuffer$Companion_build$default(var$1, var$2, var$3, var$4, var$5, var$6, var$7) {
    oktm_IVertexBuffer$Companion_$callClinit();
    if (var$6 & 4)
        var$4 = 35044;
    if (var$6 & 8)
        var$5 = 1;
    return $java.oktm_IVertexBuffer$Companion_build(var$1, var$2, var$3, var$4, var$5);
}
function oktm_IVertexBuffer$Companion_getBuild($this) {
    return $java.oktm_IVertexBuffer$Companion_Build;
}
function oktm_IVertexBuffer$Companion__init_($this) {
    oktm_IVertexBuffer$Companion_$callClinit();
    jl_Object__init_0($this);
}
$java.oktm_IVertexBuffer$Companion__clinit_ = function() {
    oktm_IVertexBuffer$Companion_$$INSTANCE = $java.oktm_IVertexBuffer$Companion__init_();
    oktm_IVertexBuffer$Companion$Build$1_$callClinit();
    $java.oktm_IVertexBuffer$Companion_Build = oktm_IVertexBuffer$Companion$Build$1_INSTANCE;
};
function oktgc_ActiveCamera() {
    jl_Object.call(this);
}
$java.oktgc_ActiveCamera_api = null;
var oktgc_ActiveCamera_INSTANCE = null;
function oktgc_ActiveCamera_$callClinit() {
    oktgc_ActiveCamera_$callClinit = $rt_eraseClinit(oktgc_ActiveCamera);
    $java.oktgc_ActiveCamera__clinit_();
}
$java.oktgc_ActiveCamera__init_ = function() {
    var var_0 = new oktgc_ActiveCamera();
    oktgc_ActiveCamera__init_(var_0);
    return var_0;
};
function oktgc_ActiveCamera_getApi($this) {
    return $java.oktgc_ActiveCamera_api;
}
function oktgc_ActiveCamera_setApi($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $java.oktgc_ActiveCamera_api = $_set___;
}
function oktgc_ActiveCamera_getPosition($this) {
    return $java.oktgc_ActiveCamera_api.$getPosition0();
}
function oktgc_ActiveCamera_getProjectionMatrix($this) {
    return $java.oktgc_ActiveCamera_api.$getProjectionMatrix();
}
function oktgc_ActiveCamera_getViewMatrix($this) {
    return $java.oktgc_ActiveCamera_api.$getViewMatrix();
}
function oktgc_ActiveCamera_getViewProjectionMatrix($this) {
    return $java.oktgc_ActiveCamera_api.$getViewProjectionMatrix();
}
function oktgc_ActiveCamera_getPreviousViewProjectionMatrix($this) {
    return $java.oktgc_ActiveCamera_api.$getPreviousViewProjectionMatrix0();
}
function oktgc_ActiveCamera_getInverseViewProjectionMatrix($this) {
    return $java.oktgc_ActiveCamera_api.$getInverseViewProjectionMatrix();
}
function oktgc_ActiveCamera_getFrustum($this) {
    return $java.oktgc_ActiveCamera_api.$getFrustum();
}
function oktgc_ActiveCamera_getFar($this) {
    return $java.oktgc_ActiveCamera_api.$getFar();
}
function oktgc_ActiveCamera_setFar($this, $value) {
    $java.oktgc_ActiveCamera_api.$setFar($value);
}
function oktgc_ActiveCamera_updatePreviousTransform($this) {
    $java.oktgc_ActiveCamera_api.$updatePreviousTransform0();
}
function oktgc_ActiveCamera_update($this) {
    $java.oktgc_ActiveCamera_api.$update0();
}
$java.oktgc_ActiveCamera_lookAt = function($this, $from, $to, $up) {
    kji_Intrinsics_checkParameterIsNotNull($from, $rt_s(55));
    kji_Intrinsics_checkParameterIsNotNull($to, $rt_s(56));
    kji_Intrinsics_checkParameterIsNotNull($up, $rt_s(57));
    $java.oktgc_ActiveCamera_api.$lookAt0($from, $to, $up);
};
$java.oktgc_ActiveCamera_dst2 = function($this, $position, $isLocal) {
    kji_Intrinsics_checkParameterIsNotNull($position, $rt_s(53));
    return $java.oktgc_ActiveCamera_api.$dst23($position, $isLocal);
};
function oktgc_ActiveCamera__init_($this) {
    oktgc_ActiveCamera_$callClinit();
    jl_Object__init_0($this);
}
$java.oktgc_ActiveCamera__clinit_ = function() {
    oktgc_ActiveCamera_INSTANCE = $java.oktgc_ActiveCamera__init_();
    oktgc_ICamera_$callClinit();
    $java.oktgc_ActiveCamera_api = oktgc_ICamera$Companion_getDefault(oktgc_ICamera_Companion);
};
function oktsg_PrincipledBSDF() {
    var a = this; oktsg_ShaderNode.call(a);
    a.$result2 = null;
    a.$maxNumDirectionLights = 0;
    a.$maxNumPointLights = 0;
    a.$maxNumSpotLights = 0;
    a.$receiveShadows0 = 0;
    a.$dirLightTexUnits = null;
}
$java.oktsg_PrincipledBSDF_shadowCascadesNum = 0;
$java.oktsg_PrincipledBSDF_visualizeCascadeFields = 0;
$java.oktsg_PrincipledBSDF_InputForm = null;
$java.oktsg_PrincipledBSDF_Companion = null;
$java.oktsg_PrincipledBSDF_$callClinit = function() {
    $java.oktsg_PrincipledBSDF_$callClinit = $rt_eraseClinit(oktsg_PrincipledBSDF);
    $java.oktsg_PrincipledBSDF__clinit_();
};
function oktsg_PrincipledBSDF__init_() {
    var var_0 = new oktsg_PrincipledBSDF();
    oktsg_PrincipledBSDF__init_0(var_0);
    return var_0;
}
$java.oktsg_PrincipledBSDF_getWorldPosition = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1545));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_PrincipledBSDF_setWorldPosition($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(1545), $value);
}
$java.oktsg_PrincipledBSDF_getNormalizedViewVector = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1126));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_PrincipledBSDF_setNormalizedViewVector($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(1126), $value);
}
$java.oktsg_PrincipledBSDF_getBaseColor = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1361));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_PrincipledBSDF_setBaseColor($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(1361), $value);
}
$java.oktsg_PrincipledBSDF_getNormal = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(291));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getDefaultNormal(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_PrincipledBSDF_setNormal($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(291), $value);
}
$java.oktsg_PrincipledBSDF_getOcclusion = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1546));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_PrincipledBSDF_setOcclusion($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(1546), $value);
}
$java.oktsg_PrincipledBSDF_getRoughness = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1547));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getOneFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_PrincipledBSDF_setRoughness($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(1547), $value);
}
$java.oktsg_PrincipledBSDF_getMetallic = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1548));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_PrincipledBSDF_setMetallic($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(1548), $value);
}
$java.oktsg_PrincipledBSDF_getClipSpacePosition = function($this) {
    var var$1;
    var$1 = $this.$getInput().$get0($rt_s(1128));
    if (var$1 === null) {
        oktsg_GLSL_$callClinit();
        var$1 = oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE);
    }
    return var$1;
};
function oktsg_PrincipledBSDF_setClipSpacePosition($this, $value) {
    kji_Intrinsics_checkParameterIsNotNull($value, $rt_s(373));
    $this.$setInput($rt_s(1128), $value);
}
function oktsg_PrincipledBSDF_getResult($this) {
    return $this.$result2;
}
function oktsg_PrincipledBSDF_setReceiveShadows($this, $_set___) {
    $this.$receiveShadows0 = $_set___;
}
$java.oktsg_PrincipledBSDF_prepareToBuild = function($this) {
    var var$1, $textureUnitsNum, $i, var$4;
    oktsg_ShaderNode_prepareToBuild($this);
    var$1 = $java.oktsg_PrincipledBSDF_getClipSpacePosition($this);
    oktsg_GLSL_$callClinit();
    if (var$1 === oktsg_GLSL_getZeroFloat(oktsg_GLSL_INSTANCE) && $this.$receiveShadows0)
        $rt_throw(jl_IllegalStateException__init_($rt_s(1549)));
    $textureUnitsNum = $rt_imul($this.$maxNumDirectionLights, $java.oktsg_PrincipledBSDF_shadowCascadesNum);
    $this.$dirLightTexUnits.$clear();
    $i = 0;
    while ($i < $textureUnitsNum) {
        var$4 = $this.$dirLightTexUnits;
        oktg_GL_$callClinit();
        var$4.$add1(jl_Integer_valueOf(oktg_GL_grabTextureUnit(oktg_GL_INSTANCE)));
        $i = $i + 1 | 0;
    }
};
$java.oktsg_PrincipledBSDF_prepareToDrawScene = function($this, $scene) {
    var $dirLightIndex, $pointLightIndex, $spotLightIndex, $lights, $i, var$7, $light, var$9, var$10, $lightCascadesStartIndex, $shadowMaps, $j, var$14, $cascadeIndex, var$16, $unit;
    a: {
        kji_Intrinsics_checkParameterIsNotNull($scene, $rt_s(328));
        oktsg_ShaderNode_prepareToDrawScene($this, $scene);
        if ($this.$result2.$isUsed0()) {
            $dirLightIndex = 0;
            $pointLightIndex = 0;
            $spotLightIndex = 0;
            $lights = $scene.$getLights();
            $i = 0;
            var$7 = $lights.$size();
            b: while (true) {
                if ($i >= var$7) {
                    $this.$getShader().$set35($rt_s(1550), $dirLightIndex);
                    $this.$getShader().$set35($rt_s(1551), $pointLightIndex);
                    $this.$getShader().$set35($rt_s(1552), $spotLightIndex);
                    $this.$getShader().$set54($rt_s(1553), $scene.$getWorld().$getAmbientColor());
                    break a;
                }
                c: {
                    $light = $lights.$get1($i);
                    if ($light.$isLightEnabled1()) {
                        d: {
                            switch ($light.$getLightType()) {
                                case 1:
                                    break d;
                                case 2:
                                    if ($light === null)
                                        $rt_throw(k_TypeCastException__init_($rt_s(1554)));
                                    var$9 = $light;
                                    $this.$getShader().$set54(jl_StringBuilder__init_().$append($rt_s(1555)).$append1($pointLightIndex).$append12(93).$toString(), $java.oktgl_PointLight_getPosition(var$9));
                                    $this.$getShader().$set54(jl_StringBuilder__init_().$append($rt_s(1556)).$append1($pointLightIndex).$append12(93).$toString(), $light.$getColor0());
                                    $this.$getShader().$set1(jl_StringBuilder__init_().$append($rt_s(1557)).$append1($pointLightIndex).$append12(93).$toString(), $light.$getLightIntensity());
                                    $this.$getShader().$set1(jl_StringBuilder__init_().$append($rt_s(1558)).$append1($pointLightIndex).$append12(93).$toString(), $java.oktgl_PointLight_getRange(var$9));
                                    $pointLightIndex = $pointLightIndex + 1 | 0;
                                    break c;
                                default:
                            }
                            break c;
                        }
                        if ($light === null)
                            break b;
                        e: {
                            var$10 = $light;
                            $this.$getShader().$set54(jl_StringBuilder__init_().$append($rt_s(1559)).$append1($dirLightIndex).$append12(93).$toString(), oktgl_DirectionalLight_getDirection(var$10));
                            $this.$getShader().$set54(jl_StringBuilder__init_().$append($rt_s(1560)).$append1($dirLightIndex).$append12(93).$toString(), $light.$getColor0());
                            $this.$getShader().$set1(jl_StringBuilder__init_().$append($rt_s(1561)).$append1($dirLightIndex).$append12(93).$toString(), $light.$getLightIntensity());
                            if ($light.$isShadowEnabled0()) {
                                $lightCascadesStartIndex = $rt_imul($dirLightIndex, oktgl_DirectionalLight_getShadowCascadesNum(var$10));
                                $shadowMaps = oktgl_DirectionalLight_getShadowMaps(var$10);
                                $j = 0;
                                var$14 = oktgl_DirectionalLight_getShadowCascadesNum(var$10);
                                while (true) {
                                    if ($j >= var$14)
                                        break e;
                                    $cascadeIndex = $lightCascadesStartIndex + $j | 0;
                                    $this.$getShader().$set1(jl_StringBuilder__init_().$append($rt_s(1562)).$append1($cascadeIndex).$append12(93).$toString(), oktgl_DirectionalLight_getShadowCascadeEnd(var$10).data[$j].$floatValue());
                                    $this.$getShader().$set12(jl_StringBuilder__init_().$append($rt_s(1563)).$append1($cascadeIndex).$append12(93).$toString(), oktgl_DirectionalLight_getViewProjectionMatrices(var$10).data[$j]);
                                    if ($this.$dirLightTexUnits.$size() > 0) {
                                        var$16 = $shadowMaps.data;
                                        var$9 = $this.$dirLightTexUnits.$get1($cascadeIndex);
                                        kji_Intrinsics_checkExpressionValueIsNotNull(var$9, $rt_s(1564));
                                        $unit = var$9.$intValue();
                                        $this.$getShader().$set35(jl_StringBuilder__init_().$append($rt_s(1565)).$append1($cascadeIndex).$append12(93).$toString(), $unit);
                                        var$16[$j].$bind4($unit);
                                    }
                                    $j = $j + 1 | 0;
                                }
                            }
                        }
                        $dirLightIndex = $dirLightIndex + 1 | 0;
                    }
                }
                $i = $i + 1 | 0;
            }
            $rt_throw(k_TypeCastException__init_($rt_s(1566)));
        }
    }
};
$java.oktsg_PrincipledBSDF_executionFrag = function($this, $out) {
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if ($this.$result2.$isUsed0())
        $out.$append(jl_StringBuilder__init_().$append($this.$result2.$getRef0()).$append($rt_s(1567)).$append($java.oktsg_PrincipledBSDF_getWorldPosition($this).$asVec3()).$append($rt_s(268)).$append($java.oktsg_PrincipledBSDF_getNormalizedViewVector($this).$asVec3()).$append($rt_s(268)).$append($java.oktsg_PrincipledBSDF_getBaseColor($this).$asVec4()).$append($rt_s(268)).$append($java.oktsg_PrincipledBSDF_getNormal($this).$asVec3()).$append($rt_s(268)).$append($java.oktsg_PrincipledBSDF_getOcclusion($this).$asFloat()).$append($rt_s(268)).$append($java.oktsg_PrincipledBSDF_getRoughness($this).$asFloat()).$append($rt_s(268)).$append($java.oktsg_PrincipledBSDF_getMetallic($this).$asFloat()).$append($rt_s(1053)).$toString());
};
$java.oktsg_PrincipledBSDF_declarationFrag = function($this, $out) {
    var $num;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if ($this.$result2.$isUsed0()) {
        if ($this.$receiveShadows0) {
            $num = $rt_imul($this.$maxNumDirectionLights, $java.oktsg_PrincipledBSDF_shadowCascadesNum);
            $out.$append(jl_StringBuilder__init_().$append($rt_s(1568)).$append1($num).$append($rt_s(1068)).$toString());
            $out.$append(jl_StringBuilder__init_().$append($rt_s(1569)).$append1($num).$append($rt_s(1068)).$toString());
            $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarIn($this)).$append($rt_s(1570)).$append1($num).$append($rt_s(1068)).$toString());
        }
        $out.$append(jl_StringBuilder__init_().$append($this.$result2.$getTypedRef0()).$append($rt_s(331)).$append($this.$result2.$getTypeStr0()).$append($rt_s(1571)).$toString());
        $out.$append(oktsg_PrincipledBSDF$Companion_pbrCode($java.oktsg_PrincipledBSDF_Companion, $this.$maxNumDirectionLights, $this.$maxNumPointLights, $this.$maxNumSpotLights, $java.oktsg_PrincipledBSDF_getClipSpacePosition($this).$getRef0(), $this.$receiveShadows0));
    }
};
$java.oktsg_PrincipledBSDF_declarationVert = function($this, $out) {
    var $num;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if ($this.$result2.$isUsed0() && $this.$receiveShadows0) {
        $num = $rt_imul($this.$maxNumDirectionLights, $java.oktsg_PrincipledBSDF_shadowCascadesNum);
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1572)).$append1($num).$append($rt_s(1068)).$toString());
        $out.$append(jl_StringBuilder__init_().$append(oktsg_ShaderNode_getVarOut($this)).$append($rt_s(1570)).$append1($num).$append($rt_s(1068)).$toString());
    }
};
$java.oktsg_PrincipledBSDF_executionVert = function($this, $out) {
    var $num;
    kji_Intrinsics_checkParameterIsNotNull($out, $rt_s(54));
    if ($this.$result2.$isUsed0() && $this.$receiveShadows0) {
        $num = $rt_imul($this.$maxNumDirectionLights, $java.oktsg_PrincipledBSDF_shadowCascadesNum);
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1573)).$append1($num).$append($rt_s(1574)).$toString());
        $out.$append(jl_StringBuilder__init_().$append($rt_s(1575)).$append($java.oktsg_PrincipledBSDF_getWorldPosition($this).$asVec4()).$append($rt_s(330)).$toString());
        $out.$append($rt_s(599));
    }
};
function oktsg_PrincipledBSDF__init_0($this) {
    $java.oktsg_PrincipledBSDF_$callClinit();
    oktsg_ShaderNode__init_0($this);
    $this.$result2 = oktsg_ShaderNode_defOut($this, oktsg_GLSLVec4__init_($rt_s(1447)));
    $this.$maxNumDirectionLights = 2;
    $this.$maxNumPointLights = 20;
    $this.$maxNumSpotLights = 2;
    $this.$dirLightTexUnits = ju_ArrayList__init_();
}
$java.oktsg_PrincipledBSDF__clinit_ = function() {
    var var$1;
    $java.oktsg_PrincipledBSDF_Companion = oktsg_PrincipledBSDF$Companion__init_1(null);
    $java.oktsg_PrincipledBSDF_shadowCascadesNum = 4;
    var$1 = ju_LinkedHashMap__init_();
    var$1.$put3($rt_s(1545), jl_Integer_valueOf(5));
    var$1.$put3($rt_s(1126), jl_Integer_valueOf(5));
    var$1.$put3($rt_s(1361), jl_Integer_valueOf(6));
    var$1.$put3($rt_s(291), jl_Integer_valueOf(5));
    var$1.$put3($rt_s(1546), jl_Integer_valueOf(3));
    var$1.$put3($rt_s(1547), jl_Integer_valueOf(3));
    var$1.$put3($rt_s(1548), jl_Integer_valueOf(3));
    var$1.$put3($rt_s(1128), jl_Integer_valueOf(6));
    $java.oktsg_PrincipledBSDF_InputForm = var$1;
};
function oktsg_PrincipledBSDF_access$getShadowCascadesNum$cp() {
    $java.oktsg_PrincipledBSDF_$callClinit();
    return $java.oktsg_PrincipledBSDF_shadowCascadesNum;
}
function oktsg_PrincipledBSDF_access$getVisualizeCascadeFields$cp() {
    $java.oktsg_PrincipledBSDF_$callClinit();
    return $java.oktsg_PrincipledBSDF_visualizeCascadeFields;
}
function oooi_DxQuickStep$19() {
    jl_Object.call(this);
    this.$val$stage4CallContext1 = null;
}
$java.oooi_DxQuickStep$19__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$19();
    $java.oooi_DxQuickStep$19__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$19__init_0 = function($this, var$1) {
    $this.$val$stage4CallContext1 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$19_run = function($this) {
    $java.oooi_DxQuickStep_access$3000($this.$val$stage4CallContext1);
};
function okttsg_EmissionBloomTest() {
    jl_Object.call(this);
}
function okttsg_EmissionBloomTest__init_() {
    var var_0 = new okttsg_EmissionBloomTest();
    okttsg_EmissionBloomTest__init_0(var_0);
    return var_0;
}
$java.okttsg_EmissionBloomTest_getName = function($this) {
    return $rt_s(1576);
};
$java.okttsg_EmissionBloomTest_testMain = function($this) {
    var var$1, var$2;
    oktg_GL_$callClinit();
    if (oktg_GL_isGLES(oktg_GL_INSTANCE) && oktg_GL_getGlesMajVer(oktg_GL_INSTANCE) == 3 && !oktg_GL_enableExtension(oktg_GL_INSTANCE, $rt_s(337))) {
        okt_APP_$callClinit();
        okt_APP_messageBox(okt_APP_INSTANCE, $rt_s(335), $rt_s(338));
        return;
    }
    var$1 = new oktt_GLTFModel;
    var$2 = null;
    okttsg_EmissionBloomTest$testMain$1_$callClinit();
    oktt_GLTFModel__init_(var$1, 0, var$2, okttsg_EmissionBloomTest$testMain$1_INSTANCE, 3, null);
};
function okttsg_EmissionBloomTest__init_0($this) {
    jl_Object__init_0($this);
}
function oooi_DxQuickStep$18() {
    jl_Object.call(this);
    this.$val$stage4CallContext2 = null;
}
$java.oooi_DxQuickStep$18__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$18();
    $java.oooi_DxQuickStep$18__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$18__init_0 = function($this, var$1) {
    $this.$val$stage4CallContext2 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$18_run = function($this) {
    $java.oooi_DxQuickStep_access$2900($this.$val$stage4CallContext2);
};
function oooi_DxQuickStep$17() {
    jl_Object.call(this);
    this.$val$stage4CallContext3 = null;
}
$java.oooi_DxQuickStep$17__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$17();
    $java.oooi_DxQuickStep$17__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$17__init_0 = function($this, var$1) {
    $this.$val$stage4CallContext3 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$17_run = function($this) {
    $java.oooi_DxQuickStep_access$2800($this.$val$stage4CallContext3);
};
function oooi_DxQuickStep$16() {
    jl_Object.call(this);
    this.$val$stage4CallContext4 = null;
}
$java.oooi_DxQuickStep$16__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$16();
    $java.oooi_DxQuickStep$16__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$16__init_0 = function($this, var$1) {
    $this.$val$stage4CallContext4 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$16_run = function($this) {
    $java.oooi_DxQuickStep_access$2700($this.$val$stage4CallContext4);
};
function oooi_DxQuickStep$15() {
    jl_Object.call(this);
    this.$val$stage4CallContext5 = null;
}
$java.oooi_DxQuickStep$15__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$15();
    $java.oooi_DxQuickStep$15__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$15__init_0 = function($this, var$1) {
    $this.$val$stage4CallContext5 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$15_run = function($this) {
    $java.oooi_DxQuickStep_access$2600($this.$val$stage4CallContext5);
};
function oooi_DxRay$CollideRayCylinder() {
    jl_Object.call(this);
}
function oooi_DxRay$CollideRayCylinder__init_() {
    var var_0 = new oooi_DxRay$CollideRayCylinder();
    oooi_DxRay$CollideRayCylinder__init_0(var_0);
    return var_0;
}
function oooi_DxRay$CollideRayCylinder__init_0($this) {
    jl_Object__init_0($this);
}
$java.oooi_DxRay$CollideRayCylinder_dCollideRayCylinder = function($this, $ray, $cyl, $flags, $contacts, $skip) {
    var $contact, $half_length, $tmp_0, $pos, $dir, $r2, $C, $parallel, $perpendicular, $inRadius, $inCaps, $checkCaps, $checkCyl, $flipNormals, $tt, $tmpNorm, $flipDir, $A, $B, var$25, $k, var$27;
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $contact = ooo_DContactGeomBuffer_get($contacts, 0);
    $contact.$g1 = $ray;
    $contact.$g2 = $cyl;
    $contact.$side1 = (-1);
    $contact.$side2 = (-1);
    $half_length = $cyl.$getLength() * 0.5;
    $tmp_0 = oom_DVector3__init_();
    $pos = oom_DVector3__init_();
    $dir = oom_DVector3__init_();
    oom_DVector3_eqDiff($tmp_0, $ray.$final_posr().$pos(), $cyl.$final_posr().$pos());
    ooo_OdeMath_dMultiply1_331($pos, $cyl.$final_posr().$R(), $tmp_0);
    $ray.$final_posr().$R().$getColumn2($tmp_0);
    ooo_OdeMath_dMultiply1_331($dir, $cyl.$final_posr().$R(), $tmp_0);
    $r2 = $cyl.$getRadius() * $cyl.$getRadius();
    $C = oom_DVector3_get0($pos) * oom_DVector3_get0($pos) + oom_DVector3_get1($pos) * oom_DVector3_get1($pos) - $r2;
    $parallel = oom_DVector3_get0($dir) === 0.0 && oom_DVector3_get1($dir) === 0.0 ? 1 : 0;
    $perpendicular = oom_DVector3_get2($dir) !== 0.0 ? 0 : 1;
    $inRadius = $C > 0.0 ? 0 : 1;
    $inCaps = oooi_Common_dFabs(oom_DVector3_get2($pos)) > $half_length ? 0 : 1;
    a: {
        b: {
            if (!$perpendicular) {
                if (!$inCaps)
                    break b;
                if ($inRadius)
                    break b;
            }
            $checkCaps = 0;
            break a;
        }
        $checkCaps = 1;
    }
    c: {
        d: {
            if (!$parallel) {
                if (!$inRadius)
                    break d;
                if ($inCaps)
                    break d;
            }
            $checkCyl = 0;
            break c;
        }
        $checkCyl = 1;
    }
    $flipNormals = $inCaps && $inRadius ? 1 : 0;
    $tt = (-Infinity);
    $tmpNorm = oom_DVector3__init_1(NaN, NaN, NaN);
    if ($checkCaps) {
        e: {
            $flipDir = 0;
            if (!(oom_DVector3_get2($dir) < 0.0 && $flipNormals)) {
                if (oom_DVector3_get2($dir) <= 0.0)
                    break e;
                if ($flipNormals)
                    break e;
            }
            $flipDir = 1;
            oom_DVector3_set20($dir,  -oom_DVector3_get2($dir));
            oom_DVector3_set20($pos,  -oom_DVector3_get2($pos));
        }
        $tt = ($half_length - oom_DVector3_get2($pos)) / oom_DVector3_get2($dir);
        if ($tt >= 0.0 && $tt <= $ray.$getLength()) {
            oom_DVector3_set00($tmp_0, oom_DVector3_get0($pos) + $tt * oom_DVector3_get0($dir));
            oom_DVector3_set10($tmp_0, oom_DVector3_get1($pos) + $tt * oom_DVector3_get1($dir));
            if (oom_DVector3_get0($tmp_0) * oom_DVector3_get0($tmp_0) + oom_DVector3_get1($tmp_0) * oom_DVector3_get1($tmp_0) > $r2)
                $tt = (-Infinity);
            else {
                oom_DVector3_set20($tmp_0, !$flipDir ? $half_length :  -$half_length);
                oom_DVector3_set00($tmpNorm, 0.0);
                oom_DVector3_set10($tmpNorm, 0.0);
                oom_DVector3_set20($tmpNorm, $flipDir == $flipNormals ? 1.0 : (-1.0));
                $checkCyl = 0;
            }
        } else
            $tt = (-Infinity);
        if ($flipDir) {
            oom_DVector3_set20($dir,  -oom_DVector3_get2($dir));
            oom_DVector3_set20($pos,  -oom_DVector3_get2($pos));
        }
    }
    if ($checkCyl) {
        $A = oom_DVector3_get0($dir) * oom_DVector3_get0($dir) + oom_DVector3_get1($dir) * oom_DVector3_get1($dir);
        $B = 2.0 * (oom_DVector3_get0($pos) * oom_DVector3_get0($dir) + oom_DVector3_get1($pos) * oom_DVector3_get1($dir));
        var$25 = $B * $B;
        $k = var$25 - 4.0 * $A * $C;
        if ($k >= 0.0 && !($B >= 0.0 && var$25 > $k)) {
            var$25 = oooi_Common_dSqrt($k);
            var$27 = oooi_Common_dRecip(2.0 * $A);
            $tt = oooi_Common_dFabs($B) > var$25 ? ( -$B - var$25) * var$27 : ( -$B + var$25) * var$27;
            if ($tt > $ray.$getLength())
                $tt = (-Infinity);
            else {
                oom_DVector3_set20($tmp_0, oom_DVector3_get2($pos) + $tt * oom_DVector3_get2($dir));
                if (oooi_Common_dFabs(oom_DVector3_get2($tmp_0)) > $half_length)
                    $tt = (-Infinity);
                else {
                    oom_DVector3_set00($tmp_0, oom_DVector3_get0($pos) + $tt * oom_DVector3_get0($dir));
                    oom_DVector3_set10($tmp_0, oom_DVector3_get1($pos) + $tt * oom_DVector3_get1($dir));
                    oom_DVector3_set00($tmpNorm, oom_DVector3_get0($tmp_0) / $cyl.$getRadius());
                    oom_DVector3_set10($tmpNorm, oom_DVector3_get1($tmp_0) / $cyl.$getRadius());
                    oom_DVector3_set20($tmpNorm, 0.0);
                    if ($flipNormals) {
                        oom_DVector3_set00($tmpNorm,  -oom_DVector3_get0($tmpNorm));
                        oom_DVector3_set10($tmpNorm,  -oom_DVector3_get1($tmpNorm));
                    }
                }
            }
        }
    }
    if ($tt <= 0.0)
        return 0;
    $contact.$depth = $tt;
    ooo_OdeMath_dMultiply0_331($contact.$normal, $cyl.$final_posr().$R(), $tmpNorm);
    ooo_OdeMath_dMultiply0_331($contact.$pos0, $cyl.$final_posr().$R(), $tmp_0);
    oom_DVector3_add($contact.$pos0, $cyl.$final_posr().$pos());
    return 1;
};
$java.oooi_DxRay$CollideRayCylinder_dColliderFn = function($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideRayCylinder($o1, $o2, $flags, $contacts, 1);
};
function oooi_DxQuickStep$14() {
    var a = this; jl_Object.call(a);
    a.$val$stage4CallContext6 = null;
    a.$val$stage4LCP_IterationStart = null;
}
$java.oooi_DxQuickStep$14__init_ = function(var_0, var_1) {
    var var_2 = new oooi_DxQuickStep$14();
    $java.oooi_DxQuickStep$14__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.oooi_DxQuickStep$14__init_0 = function($this, var$1, var$2) {
    $this.$val$stage4CallContext6 = var$1;
    $this.$val$stage4LCP_IterationStart = var$2;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$14_run = function($this) {
    $java.oooi_DxQuickStep_access$2500($this.$val$stage4CallContext6, $this.$val$stage4LCP_IterationStart);
};
function oooi_DxQuickStep$13() {
    var a = this; jl_Object.call(a);
    a.$val$stage4CallContext7 = null;
    a.$val$stage4LCP_IterationStart0 = null;
}
$java.oooi_DxQuickStep$13__init_ = function(var_0, var_1) {
    var var_2 = new oooi_DxQuickStep$13();
    $java.oooi_DxQuickStep$13__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.oooi_DxQuickStep$13__init_0 = function($this, var$1, var$2) {
    $this.$val$stage4CallContext7 = var$1;
    $this.$val$stage4LCP_IterationStart0 = var$2;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$13_run = function($this) {
    $java.oooi_DxQuickStep_access$2400($this.$val$stage4CallContext7, $this.$val$stage4LCP_IterationStart0);
};
function jur_WordBoundary() {
    jur_AbstractSet.call(this);
    this.$positive = 0;
}
$java.jur_WordBoundary__init_ = function(var_0) {
    var var_1 = new jur_WordBoundary();
    $java.jur_WordBoundary__init_0(var_1, var_0);
    return var_1;
};
$java.jur_WordBoundary__init_0 = function($this, $positive) {
    jur_AbstractSet__init_0($this);
    $this.$positive = $positive;
};
$java.jur_WordBoundary_matches = function($this, $stringIndex, $testString, $matchResult) {
    var $ch1, $ch2, $leftBound, $left, $right;
    $ch1 = $stringIndex < $matchResult.$getRightBound() ? $testString.$charAt($stringIndex) : 32;
    $ch2 = !$stringIndex ? 32 : $testString.$charAt($stringIndex - 1 | 0);
    $leftBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getLeftBound() : 0;
    $left = $ch1 != 32 && !$java.jur_WordBoundary_isSpace($this, $ch1, $stringIndex, $leftBound, $testString) ? 0 : 1;
    $right = $ch2 != 32 && !$java.jur_WordBoundary_isSpace($this, $ch2, $stringIndex - 1 | 0, $leftBound, $testString) ? 0 : 1;
    return $left ^ $right ^ $this.$positive ? (-1) : $this.$next0.$matches($stringIndex, $testString, $matchResult);
};
$java.jur_WordBoundary_hasConsumed = function($this, $matchResult) {
    return 0;
};
$java.jur_WordBoundary_isSpace = function($this, $ch, $index, $leftBound, $testString) {
    var var$5;
    if (!$java.jl_Character_isLetterOrDigit($ch) && $ch != 95) {
        a: {
            if ($java.jl_Character_getType0($ch) == 6)
                while (true) {
                    $index = $index + (-1) | 0;
                    if ($index < $leftBound)
                        break a;
                    var$5 = $testString.$charAt($index);
                    if ($java.jl_Character_isLetterOrDigit(var$5))
                        return 0;
                    if ($java.jl_Character_getType0(var$5) != 6)
                        return 1;
                }
        }
        return 1;
    }
    return 0;
};
function oooi_DxQuickStep$12() {
    jl_Object.call(this);
    this.$val$stage4CallContext8 = null;
}
$java.oooi_DxQuickStep$12__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$12();
    $java.oooi_DxQuickStep$12__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$12__init_0 = function($this, var$1) {
    $this.$val$stage4CallContext8 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$12_run = function($this) {
    oooi_DxQuickStep_$callClinit();
    if (!$java.oooi_DxQuickStep_ENABLE_LCP_ITERATIONS_MULTITHREADING)
        $java.oooi_DxQuickStep_access$2300($this.$val$stage4CallContext8);
    else
        $java.oooi_DxQuickStep_access$2200($this.$val$stage4CallContext8);
};
function jl_SystemClassLoader() {
    jl_ClassLoader.call(this);
}
$java.jl_SystemClassLoader__init_ = function() {
    var var_0 = new jl_SystemClassLoader();
    jl_SystemClassLoader__init_(var_0);
    return var_0;
};
function jl_SystemClassLoader__init_($this) {
    $java.jl_ClassLoader__init_0($this);
}
function oooi_DxQuickStep$11() {
    var a = this; jl_Object.call(a);
    a.$val$stage4CallContext9 = null;
    a.$val$stage5 = null;
}
$java.oooi_DxQuickStep$11__init_ = function(var_0, var_1) {
    var var_2 = new oooi_DxQuickStep$11();
    $java.oooi_DxQuickStep$11__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.oooi_DxQuickStep$11__init_0 = function($this, var$1, var$2) {
    $this.$val$stage4CallContext9 = var$1;
    $this.$val$stage5 = var$2;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$11_run = function($this) {
    $java.oooi_DxQuickStep_access$2100($this.$val$stage4CallContext9, $this.$val$stage5);
};
function oktgn_AdapterTransformNode$Companion() {
    jl_Object.call(this);
}
$java.oktgn_AdapterTransformNode$Companion__init_ = function() {
    var var_0 = new oktgn_AdapterTransformNode$Companion();
    oktgn_AdapterTransformNode$Companion__init_0(var_0);
    return var_0;
};
function oktgn_AdapterTransformNode$Companion__init_(var_0) {
    var var_1 = new oktgn_AdapterTransformNode$Companion();
    $java.oktgn_AdapterTransformNode$Companion__init_0(var_1, var_0);
    return var_1;
}
function oktgn_AdapterTransformNode$Companion__init_0($this) {
    jl_Object__init_0($this);
}
$java.oktgn_AdapterTransformNode$Companion__init_0 = function($this, $$constructor_marker) {
    oktgn_AdapterTransformNode$Companion__init_0($this);
};
function oktts_BloomTest$testMain$1$1() {
    kji_Lambda.call(this);
    this.$this$0249 = null;
}
function oktts_BloomTest$testMain$1$1__init_(var_0) {
    var var_1 = new oktts_BloomTest$testMain$1$1();
    $java.oktts_BloomTest$testMain$1$1__init_(var_1, var_0);
    return var_1;
}
$java.oktts_BloomTest$testMain$1$1_invoke = function(var$0, var$1) {
    $java.oktts_BloomTest$testMain$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_BloomTest$testMain$1$1_invoke0 = function($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClearColor(oktg_GL_INSTANCE, 0.0, 0.0, 0.0, 1.0);
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_CubeModel_render($this.$this$0249.$$model2);
};
$java.oktts_BloomTest$testMain$1$1__init_ = function(var$0, var$1) {
    var$0.$this$0249 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktt_FrameBufferAttachment() {
    var a = this; jl_Object.call(a);
    a.$glHandle = 0;
    a.$target2 = 0;
    a.$attachment = 0;
    a.$texTarget = 0;
    a.$internalFormat = 0;
    a.$pixelFormat = 0;
    a.$type7 = 0;
    a.$mipmapLevel = 0;
    a.$texture1 = null;
}
$java.oktt_FrameBufferAttachment__init_ = function(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new oktt_FrameBufferAttachment();
    $java.oktt_FrameBufferAttachment__init_0(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
};
$java.oktt_FrameBufferAttachment__init_1 = function(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) {
    var var_11 = new oktt_FrameBufferAttachment();
    oktt_FrameBufferAttachment__init_(var_11, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10);
    return var_11;
};
$java.oktt_FrameBufferAttachment__init_2 = function() {
    var var_0 = new oktt_FrameBufferAttachment();
    oktt_FrameBufferAttachment__init_0(var_0);
    return var_0;
};
$java.oktt_FrameBufferAttachment_getGlHandle = function($this) {
    return $this.$glHandle;
};
$java.oktt_FrameBufferAttachment_setGlHandle = function($this, $_set___) {
    $this.$glHandle = $_set___;
};
$java.oktt_FrameBufferAttachment_getTarget = function($this) {
    return $this.$target2;
};
$java.oktt_FrameBufferAttachment_getAttachment = function($this) {
    return $this.$attachment;
};
$java.oktt_FrameBufferAttachment_getTexTarget = function($this) {
    return $this.$texTarget;
};
$java.oktt_FrameBufferAttachment_getInternalFormat = function($this) {
    return $this.$internalFormat;
};
$java.oktt_FrameBufferAttachment_getPixelFormat = function($this) {
    return $this.$pixelFormat;
};
$java.oktt_FrameBufferAttachment_getType = function($this) {
    return $this.$type7;
};
$java.oktt_FrameBufferAttachment_getMipmapLevel = function($this) {
    return $this.$mipmapLevel;
};
$java.oktt_FrameBufferAttachment_getTexture = function($this) {
    return $this.$texture1;
};
$java.oktt_FrameBufferAttachment_setTexture = function($this, $_set___) {
    $this.$texture1 = $_set___;
};
$java.oktt_FrameBufferAttachment__init_0 = function($this, $glHandle, $target, $attachment, $texTarget, $internalFormat, $pixelFormat, $type, $mipmapLevel, $texture) {
    jl_Object__init_0($this);
    $this.$glHandle = $glHandle;
    $this.$target2 = $target;
    $this.$attachment = $attachment;
    $this.$texTarget = $texTarget;
    $this.$internalFormat = $internalFormat;
    $this.$pixelFormat = $pixelFormat;
    $this.$type7 = $type;
    $this.$mipmapLevel = $mipmapLevel;
    $this.$texture1 = $texture;
};
function oktt_FrameBufferAttachment__init_(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11) {
    if (var$10 & 1)
        var$1 = 0;
    if (var$10 & 2)
        var$2 = 36160;
    if (var$10 & 4)
        var$3 = 36064;
    if (var$10 & 8)
        var$4 = 3553;
    if (var$10 & 16)
        var$5 = 6408;
    if (var$10 & 32)
        var$6 = 6408;
    if (var$10 & 64)
        var$7 = 5121;
    if (var$10 & 128)
        var$8 = 0;
    if (var$10 & 256)
        var$9 = null;
    $java.oktt_FrameBufferAttachment__init_0(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9);
}
function oktt_FrameBufferAttachment__init_0(var$0) {
    oktt_FrameBufferAttachment__init_(var$0, 0, 0, 0, 0, 0, 0, 0, 0, null, 511, null);
}
$java.oktt_FrameBufferAttachment_isRenderBuffer = function($this) {
    return oktt_IFrameBufferAttachment$DefaultImpls_isRenderBuffer($this);
};
function oktgg_GLTFBuffer$read$3() {
    kji_Lambda.call(this);
    this.$this$0250 = null;
}
function oktgg_GLTFBuffer$read$3__init_(var_0) {
    var var_1 = new oktgg_GLTFBuffer$read$3();
    $java.oktgg_GLTFBuffer$read$3__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_GLTFBuffer$read$3_invoke = function(var$0, var$1, var$2) {
    $java.oktgg_GLTFBuffer$read$3_invoke0(var$0, var$1.$intValue(), var$2);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTFBuffer$read$3_invoke0 = function($this, $status, $bytes) {
    kji_Intrinsics_checkParameterIsNotNull($bytes, $rt_s(8));
    oktn_NET_$callClinit();
    if (oktn_NET_isSuccess(oktn_NET_INSTANCE, $status))
        oktgg_GLTFBuffer_getBytes($this.$this$0250).$put21($bytes);
    else {
        oktu_LOG_$callClinit();
        oktu_ILog$DefaultImpls_info$default(oktu_LOG_INSTANCE, jl_StringBuilder__init_().$append($rt_s(364)).$append(oktgg_GLTFBuffer_getUri($this.$this$0250)).$append($rt_s(1577)).$append1($status).$toString(), null, 2, null);
    }
    oktgg_GLTFBuffer_getGltf($this.$this$0250).$getBuffers0().$ready(oktgg_GLTFBuffer_getElementIndex($this.$this$0250));
};
$java.oktgg_GLTFBuffer$read$3__init_ = function(var$0, var$1) {
    var$0.$this$0250 = var$1;
    kji_Lambda__init_0(var$0, 2);
};
function oktgg_GLTFBuffer$read$2() {
    kji_Lambda.call(this);
    this.$this$0251 = null;
}
function oktgg_GLTFBuffer$read$2__init_(var_0) {
    var var_1 = new oktgg_GLTFBuffer$read$2();
    $java.oktgg_GLTFBuffer$read$2__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_GLTFBuffer$read$2_invoke = function(var$0, var$1) {
    $java.oktgg_GLTFBuffer$read$2_invoke0(var$0, var$1.$intValue());
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTFBuffer$read$2_invoke0 = function($this, $it) {
    oktgg_GLTFBuffer_setByteLength($this.$this$0251, $it);
};
$java.oktgg_GLTFBuffer$read$2__init_ = function(var$0, var$1) {
    var$0.$this$0251 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktgg_GLTFBuffer$read$1() {
    kji_Lambda.call(this);
    this.$this$0252 = null;
}
function oktgg_GLTFBuffer$read$1__init_(var_0) {
    var var_1 = new oktgg_GLTFBuffer$read$1();
    $java.oktgg_GLTFBuffer$read$1__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_GLTFBuffer$read$1_invoke = function(var$0, var$1) {
    $java.oktgg_GLTFBuffer$read$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTFBuffer$read$1_invoke0 = function($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
    oktgg_GLTFBuffer_setUri($this.$this$0252, $it);
};
$java.oktgg_GLTFBuffer$read$1__init_ = function(var$0, var$1) {
    var$0.$this$0252 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function jl_Double() {
    jl_Number.call(this);
    this.$value12 = 0.0;
}
$java.jl_Double_NaN = 0.0;
$java.jl_Double_TYPE = null;
$java.jl_Double_$callClinit = function() {
    $java.jl_Double_$callClinit = $rt_eraseClinit(jl_Double);
    $java.jl_Double__clinit_();
};
$java.jl_Double__init_ = function(var_0) {
    var var_1 = new jl_Double();
    $java.jl_Double__init_0(var_1, var_0);
    return var_1;
};
$java.jl_Double__init_0 = function($this, $value) {
    $java.jl_Double_$callClinit();
    jl_Number__init_0($this);
    $this.$value12 = $value;
};
$java.jl_Double_doubleValue = function($this) {
    return $this.$value12;
};
function jl_Double_valueOf($d) {
    $java.jl_Double_$callClinit();
    return $java.jl_Double__init_($d);
}
function jl_Double_compare(var$1, var$2) {
    $java.jl_Double_$callClinit();
    return $rt_compare(var$1, var$2);
}
$java.jl_Double__clinit_ = function() {
    $java.jl_Double_NaN = NaN;
    $java.jl_Double_TYPE = $rt_cls($rt_doublecls());
};
function oktgg_GLTFAnimation$read$2$1$1$1$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$0253 = null;
    a.$$outputBuffer = null;
}
function oktgg_GLTFAnimation$read$2$1$1$1$1__init_(var_0, var_1) {
    var var_2 = new oktgg_GLTFAnimation$read$2$1$1$1$1();
    $java.oktgg_GLTFAnimation$read$2$1$1$1$1__init_(var_2, var_0, var_1);
    return var_2;
}
$java.oktgg_GLTFAnimation$read$2$1$1$1$1_invoke = function(var$0, var$1) {
    $java.oktgg_GLTFAnimation$read$2$1$1$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTFAnimation$read$2$1$1$1$1_invoke0 = function($this, $$this$get) {
    var $nodeIndex, $path, var$4, $interpolation, $track, $values, $times, $elementSize, $k, var$11, $inTangents, $outTangents, var$14, $k_0;
    a: {
        b: {
            c: {
                d: {
                    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
                    $nodeIndex = $$this$get.$int0($rt_s(45));
                    $path = $$this$get.$string1($rt_s(404));
                    var$4 = oktgg_GLTFAnimationSampler_getInterpolation($this.$this$0253.$this$0153.$$animationSampler);
                    switch (var$4.$hashCode()) {
                        case -2049342683:
                            break;
                        case 2555596:
                            break d;
                        case 1468432251:
                            break c;
                        default:
                            break b;
                    }
                    if (!var$4.$equals0($rt_s(984)))
                        break b;
                    $interpolation = 1;
                    break a;
                }
                if (!var$4.$equals0($rt_s(1578)))
                    break b;
                $interpolation = 2;
                break a;
            }
            if (var$4.$equals0($rt_s(1579))) {
                $interpolation = 3;
                break a;
            }
        }
        $interpolation = 0;
    }
    e: {
        f: {
            g: {
                switch ($path.$hashCode()) {
                    case -1840647503:
                        break;
                    case -40300674:
                        break g;
                    case 109250890:
                        break f;
                    default:
                        break e;
                }
                if (!$path.$equals0($rt_s(38)))
                    break e;
                h: {
                    $track = oktga_Vec3Track__init_($interpolation, $nodeIndex);
                    $values = oktga_Vec3Track_getValues($track);
                    $times = oktga_Vec3Track_getTimes($track);
                    $elementSize = 3;
                    if ($interpolation != 3) {
                        $k = 0;
                        var$11 = $this.$this$0253.$$inputData.$getSize();
                        while (true) {
                            if ($k >= var$11)
                                break h;
                            $times.$add1(jl_Float_valueOf(!$k && $this.$this$0253.$$inputData.$get1($k).$floatValue() > 0.0 ? 0.0 : $this.$this$0253.$$inputData.$get1($k).$floatValue()));
                            $java.oktgg_GLTFAnimation_$callClinit();
                            $values.$add1(oktgg_GLTFAnimation$Companion_vec3($java.oktgg_GLTFAnimation_Companion, $this.$$outputBuffer, $rt_imul($k, $elementSize)));
                            $k = $k + 1 | 0;
                        }
                    }
                    $inTangents = oktga_Vec3Track_getInTangents($track);
                    $outTangents = oktga_Vec3Track_getOutTangents($track);
                    $k = 0;
                    var$11 = $this.$this$0253.$$inputData.$getSize();
                    while (true) {
                        if ($k >= var$11)
                            break h;
                        $times.$add1(jl_Float_valueOf(!$k && $this.$this$0253.$$inputData.$get1($k).$floatValue() > 0.0 ? 0.0 : $this.$this$0253.$$inputData.$get1($k).$floatValue()));
                        $java.oktgg_GLTFAnimation_$callClinit();
                        $inTangents.$add1(oktgg_GLTFAnimation$Companion_vec3($java.oktgg_GLTFAnimation_Companion, $this.$$outputBuffer, $rt_imul($k, $elementSize)));
                        var$4 = $java.oktgg_GLTFAnimation_Companion;
                        var$14 = $this.$$outputBuffer;
                        $k_0 = $k + 1 | 0;
                        $values.$add1(oktgg_GLTFAnimation$Companion_vec3(var$4, var$14, $rt_imul($k_0, $elementSize)));
                        $outTangents.$add1(oktgg_GLTFAnimation$Companion_vec3($java.oktgg_GLTFAnimation_Companion, $this.$$outputBuffer, $rt_imul($k + 2 | 0, $elementSize)));
                        $k = $k_0;
                    }
                }
                oktga_Vec3Track_calculateDuration($track);
                oktgg_GLTFAnimation_getAnim($this.$this$0253.$this$0153.$this$047.$this$043.$this$044).$getTranslationTracks().$add1($track);
                break e;
            }
            if (!$path.$equals0($rt_s(39)))
                break e;
            i: {
                $track = oktga_Vec4Track__init_1($interpolation, $nodeIndex, null, null, null, null, 0.0, 124, null);
                $values = oktga_Vec4Track_getValues($track);
                $times = oktga_Vec4Track_getTimes($track);
                $elementSize = 4;
                if ($interpolation != 3) {
                    $k = 0;
                    var$11 = $this.$this$0253.$$inputData.$getSize();
                    while (true) {
                        if ($k >= var$11)
                            break i;
                        $times.$add1(jl_Float_valueOf(!$k && $this.$this$0253.$$inputData.$get1($k).$floatValue() > 0.0 ? 0.0 : $this.$this$0253.$$inputData.$get1($k).$floatValue()));
                        $java.oktgg_GLTFAnimation_$callClinit();
                        $values.$add1(oktgg_GLTFAnimation$Companion_vec4($java.oktgg_GLTFAnimation_Companion, $this.$$outputBuffer, $rt_imul($k, $elementSize)));
                        $k = $k + 1 | 0;
                    }
                }
                $inTangents = oktga_Vec4Track_getInTangents($track);
                $outTangents = oktga_Vec4Track_getOutTangents($track);
                $k = 0;
                var$11 = $this.$this$0253.$$inputData.$getSize();
                while (true) {
                    if ($k >= var$11)
                        break i;
                    $times.$add1(jl_Float_valueOf(!$k && $this.$this$0253.$$inputData.$get1($k).$floatValue() > 0.0 ? 0.0 : $this.$this$0253.$$inputData.$get1($k).$floatValue()));
                    $java.oktgg_GLTFAnimation_$callClinit();
                    $inTangents.$add1(oktgg_GLTFAnimation$Companion_vec4($java.oktgg_GLTFAnimation_Companion, $this.$$outputBuffer, $rt_imul($k, $elementSize)));
                    var$4 = $java.oktgg_GLTFAnimation_Companion;
                    var$14 = $this.$$outputBuffer;
                    $k_0 = $k + 1 | 0;
                    $values.$add1(oktgg_GLTFAnimation$Companion_vec4(var$4, var$14, $rt_imul($k_0, $elementSize)));
                    $outTangents.$add1(oktgg_GLTFAnimation$Companion_vec4($java.oktgg_GLTFAnimation_Companion, $this.$$outputBuffer, $rt_imul($k + 2 | 0, $elementSize)));
                    $k = $k_0;
                }
            }
            oktga_Vec4Track_calculateDuration($track);
            oktgg_GLTFAnimation_getAnim($this.$this$0253.$this$0153.$this$047.$this$043.$this$044).$getRotationTracks().$add1($track);
            break e;
        }
        if ($path.$equals0($rt_s(40))) {
            j: {
                $track = oktga_Vec3Track__init_($interpolation, $nodeIndex);
                $values = oktga_Vec3Track_getValues($track);
                $times = oktga_Vec3Track_getTimes($track);
                $elementSize = 3;
                if ($interpolation != 3) {
                    $k = 0;
                    var$11 = $this.$this$0253.$$inputData.$getSize();
                    while (true) {
                        if ($k >= var$11)
                            break j;
                        $times.$add1(jl_Float_valueOf(!$k && $this.$this$0253.$$inputData.$get1($k).$floatValue() > 0.0 ? 0.0 : $this.$this$0253.$$inputData.$get1($k).$floatValue()));
                        $java.oktgg_GLTFAnimation_$callClinit();
                        $values.$add1(oktgg_GLTFAnimation$Companion_vec3($java.oktgg_GLTFAnimation_Companion, $this.$$outputBuffer, $k * 3 | 0));
                        $k = $k + 1 | 0;
                    }
                }
                $inTangents = oktga_Vec3Track_getInTangents($track);
                $outTangents = oktga_Vec3Track_getOutTangents($track);
                $k = 0;
                var$11 = $this.$this$0253.$$inputData.$getSize();
                while (true) {
                    if ($k >= var$11)
                        break j;
                    $times.$add1(jl_Float_valueOf(!$k && $this.$this$0253.$$inputData.$get1($k).$floatValue() > 0.0 ? 0.0 : $this.$this$0253.$$inputData.$get1($k).$floatValue()));
                    $java.oktgg_GLTFAnimation_$callClinit();
                    $inTangents.$add1(oktgg_GLTFAnimation$Companion_vec3($java.oktgg_GLTFAnimation_Companion, $this.$$outputBuffer, $rt_imul($k, $elementSize)));
                    var$4 = $java.oktgg_GLTFAnimation_Companion;
                    var$14 = $this.$$outputBuffer;
                    $k_0 = $k + 1 | 0;
                    $values.$add1(oktgg_GLTFAnimation$Companion_vec3(var$4, var$14, $rt_imul($k_0, $elementSize)));
                    $outTangents.$add1(oktgg_GLTFAnimation$Companion_vec3($java.oktgg_GLTFAnimation_Companion, $this.$$outputBuffer, $rt_imul($k + 2 | 0, $elementSize)));
                    $k = $k_0;
                }
            }
            oktga_Vec3Track_calculateDuration($track);
            oktgg_GLTFAnimation_getAnim($this.$this$0253.$this$0153.$this$047.$this$043.$this$044).$getScaleTracks().$add1($track);
            oktgg_GLTFAnimation_getAnim($this.$this$0253.$this$0153.$this$047.$this$043.$this$044).$calculateDuration2();
        }
    }
};
$java.oktgg_GLTFAnimation$read$2$1$1$1$1__init_ = function(var$0, var$1, var$2) {
    var$0.$this$0253 = var$1;
    var$0.$$outputBuffer = var$2;
    kji_Lambda__init_0(var$0, 1);
};
function oktt_FrameBufferTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$model1 = null;
    a.$$frameBuffer0 = null;
    a.$$screenQuad13 = null;
}
function oktt_FrameBufferTest$testMain$1__init_(var_0, var_1, var_2) {
    var var_3 = new oktt_FrameBufferTest$testMain$1();
    $java.oktt_FrameBufferTest$testMain$1__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
$java.oktt_FrameBufferTest$testMain$1_invoke = function(var$0) {
    $java.oktt_FrameBufferTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktt_FrameBufferTest$testMain$1_invoke0 = function($this) {
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_CubeModel_update($this.$$model1);
    oktt_FrameBuffer_render($this.$$frameBuffer0, oktt_FrameBufferTest$testMain$1$1__init_($this));
    oktm_ScreenQuad$TextureRenderer_render$default($this.$$screenQuad13, oktt_FrameBuffer_getTexture($this.$$frameBuffer0, 0), null, null, null, 14, null);
};
$java.oktt_FrameBufferTest$testMain$1__init_ = function(var$0, var$1, var$2, var$3) {
    var$0.$$model1 = var$1;
    var$0.$$frameBuffer0 = var$2;
    var$0.$$screenQuad13 = var$3;
    kji_Lambda__init_0(var$0, 0);
};
function oooi_DxHashSpace$Node() {
    var a = this; jl_Object.call(a);
    a.$next5 = null;
    a.$x2 = 0;
    a.$y2 = 0;
    a.$z1 = 0;
    a.$aabb = null;
}
$java.oooi_DxHashSpace$Node__init_ = function() {
    var var_0 = new oooi_DxHashSpace$Node();
    oooi_DxHashSpace$Node__init_0(var_0);
    return var_0;
};
function oooi_DxHashSpace$Node__init_(var_0) {
    var var_1 = new oooi_DxHashSpace$Node();
    $java.oooi_DxHashSpace$Node__init_0(var_1, var_0);
    return var_1;
}
function oooi_DxHashSpace$Node__init_0($this) {
    jl_Object__init_0($this);
}
$java.oooi_DxHashSpace$Node__init_0 = function($this, $x0) {
    oooi_DxHashSpace$Node__init_0($this);
};
function oktm_IVec2$Companion$Pool$2() {
    kji_Lambda.call(this);
}
var oktm_IVec2$Companion$Pool$2_INSTANCE = null;
function oktm_IVec2$Companion$Pool$2_$callClinit() {
    oktm_IVec2$Companion$Pool$2_$callClinit = $rt_eraseClinit(oktm_IVec2$Companion$Pool$2);
    $java.oktm_IVec2$Companion$Pool$2__clinit_();
}
$java.oktm_IVec2$Companion$Pool$2__init_ = function() {
    var var_0 = new oktm_IVec2$Companion$Pool$2();
    oktm_IVec2$Companion$Pool$2__init_(var_0);
    return var_0;
};
$java.oktm_IVec2$Companion$Pool$2_invoke = function(var$0, var$1) {
    $java.oktm_IVec2$Companion$Pool$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktm_IVec2$Companion$Pool$2_invoke0 = function($this, $it) {
    kji_Intrinsics_checkParameterIsNotNull($it, $rt_s(25));
};
function oktm_IVec2$Companion$Pool$2__init_(var$0) {
    oktm_IVec2$Companion$Pool$2_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
$java.oktm_IVec2$Companion$Pool$2__clinit_ = function() {
    oktm_IVec2$Companion$Pool$2_INSTANCE = $java.oktm_IVec2$Companion$Pool$2__init_();
};
function okt_APP$api$1() {
    jl_Object.call(this);
}
function okt_APP$api$1__init_() {
    var var_0 = new okt_APP$api$1();
    okt_APP$api$1__init_0(var_0);
    return var_0;
}
$java.okt_APP$api$1_getPlatformType = function($this) {
    return 0;
};
$java.okt_APP$api$1_getWidth = function($this) {
    return 640;
};
$java.okt_APP$api$1_getHeight = function($this) {
    return 480;
};
$java.okt_APP$api$1_getDeltaTime = function($this) {
    return 0.0;
};
$java.okt_APP$api$1_messageBox = function($this, $title, $message) {
    kji_Intrinsics_checkParameterIsNotNull($title, $rt_s(465));
    kji_Intrinsics_checkParameterIsNotNull($message, $rt_s(466));
};
function okt_APP$api$1__init_0($this) {
    jl_Object__init_0($this);
}
function oktm_IVec2$Companion$Pool$1() {
    kji_Lambda.call(this);
}
var oktm_IVec2$Companion$Pool$1_INSTANCE = null;
function oktm_IVec2$Companion$Pool$1_$callClinit() {
    oktm_IVec2$Companion$Pool$1_$callClinit = $rt_eraseClinit(oktm_IVec2$Companion$Pool$1);
    $java.oktm_IVec2$Companion$Pool$1__clinit_();
}
$java.oktm_IVec2$Companion$Pool$1__init_ = function() {
    var var_0 = new oktm_IVec2$Companion$Pool$1();
    oktm_IVec2$Companion$Pool$1__init_(var_0);
    return var_0;
};
$java.oktm_IVec2$Companion$Pool$1_invoke = function(var$0) {
    return $java.oktm_IVec2$Companion$Pool$1_invoke0(var$0);
};
$java.oktm_IVec2$Companion$Pool$1_invoke0 = function($this) {
    return oktm_Vec2__init_1(0.0, 0.0, 3, null);
};
function oktm_IVec2$Companion$Pool$1__init_(var$0) {
    oktm_IVec2$Companion$Pool$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktm_IVec2$Companion$Pool$1__clinit_ = function() {
    oktm_IVec2$Companion$Pool$1_INSTANCE = $java.oktm_IVec2$Companion$Pool$1__init_();
};
function oooig_GimTriCollision$GIM_TRIPLANES_CACHE() {
    jl_Object.call(this);
    this.$m_planes0 = null;
}
function oooig_GimTriCollision$GIM_TRIPLANES_CACHE__init_() {
    var var_0 = new oooig_GimTriCollision$GIM_TRIPLANES_CACHE();
    oooig_GimTriCollision$GIM_TRIPLANES_CACHE__init_0(var_0);
    return var_0;
}
function oooig_GimTriCollision$GIM_TRIPLANES_CACHE__init_0($this) {
    var var$1, var$2;
    jl_Object__init_0($this);
    var$1 = $rt_createArray(oooig_GimGeometry$vec4f, 4);
    var$2 = var$1.data;
    var$2[0] = oooig_GimGeometry$vec4f__init_();
    var$2[1] = oooig_GimGeometry$vec4f__init_();
    var$2[2] = oooig_GimGeometry$vec4f__init_();
    var$2[3] = oooig_GimGeometry$vec4f__init_();
    $this.$m_planes0 = var$1;
}
function oooi_CollisionLibccd$ccd_sphere_t() {
    oooi_CollisionLibccd$ccd_obj_t.call(this);
    this.$radius1 = 0.0;
}
function oooi_CollisionLibccd$ccd_sphere_t__init_() {
    var var_0 = new oooi_CollisionLibccd$ccd_sphere_t();
    oooi_CollisionLibccd$ccd_sphere_t__init_0(var_0);
    return var_0;
}
function oooi_CollisionLibccd$ccd_sphere_t__init_0($this) {
    oooi_CollisionLibccd$ccd_obj_t__init_2($this, null);
}
function otjc_JSArrayReader() {
}
function otjb_Window() {
    jl_Object.call(this);
}
$java.otjb_Window_addEventListener$exported$0 = function(var$0, var$1, var$2) {
    var$0.$addEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
};
$java.otjb_Window_removeEventListener$exported$1 = function(var$0, var$1, var$2) {
    var$0.$removeEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
};
$java.otjb_Window_get$exported$2 = function(var$0, var$1) {
    return var$0.$get41(var$1);
};
$java.otjb_Window_removeEventListener$exported$3 = function(var$0, var$1, var$2, var$3) {
    var$0.$removeEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
};
$java.otjb_Window_dispatchEvent$exported$4 = function(var$0, var$1) {
    return !!var$0.$dispatchEvent(var$1);
};
$java.otjb_Window_getLength$exported$5 = function(var$0) {
    return var$0.$getLength2();
};
$java.otjb_Window_addEventListener$exported$6 = function(var$0, var$1, var$2, var$3) {
    var$0.$addEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
};
function okttsg_EmissionBloomTest$testMain$1$1$1() {
    kji_Lambda.call(this);
    this.$this$0254 = null;
}
$java.okttsg_EmissionBloomTest$testMain$1$1$1__init_ = function(var_0) {
    var var_1 = new okttsg_EmissionBloomTest$testMain$1$1$1();
    $java.okttsg_EmissionBloomTest$testMain$1$1$1__init_0(var_1, var_0);
    return var_1;
};
$java.okttsg_EmissionBloomTest$testMain$1$1$1_invoke = function(var$0, var$1) {
    $java.okttsg_EmissionBloomTest$testMain$1$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.okttsg_EmissionBloomTest$testMain$1$1$1_invoke0 = function($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_GLTFModel_render($this.$this$0254.$$model8);
};
$java.okttsg_EmissionBloomTest$testMain$1$1$1__init_0 = function(var$0, var$1) {
    var$0.$this$0254 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function cgcj_Yytoken$1() {
    jl_Object.call(this);
}
var cgcj_Yytoken$1_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types = null;
function cgcj_Yytoken$1_$callClinit() {
    cgcj_Yytoken$1_$callClinit = $rt_eraseClinit(cgcj_Yytoken$1);
    $java.cgcj_Yytoken$1__clinit_();
}
$java.cgcj_Yytoken$1__clinit_ = function() {
    var $$je;
    cgcj_Yytoken$1_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types = $rt_createIntArray(cgcj_Yytoken$Types_values().data.length);
    a: {
        try {
            cgcj_Yytoken$1_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_COLON)] = 1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    b: {
        try {
            cgcj_Yytoken$1_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_COMMA)] = 2;
            break b;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    c: {
        try {
            cgcj_Yytoken$1_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_END)] = 3;
            break c;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    d: {
        try {
            cgcj_Yytoken$1_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_LEFT_BRACE)] = 4;
            break d;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    e: {
        try {
            cgcj_Yytoken$1_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_LEFT_SQUARE)] = 5;
            break e;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    f: {
        try {
            cgcj_Yytoken$1_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_RIGHT_BRACE)] = 6;
            break f;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
    g: {
        try {
            cgcj_Yytoken$1_$SwitchMap$com$github$cliftonlabs$json_simple$Yytoken$Types.data[jl_Enum_ordinal(cgcj_Yytoken$Types_RIGHT_SQUARE)] = 7;
            break g;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NoSuchFieldError) {
            } else {
                throw $$e;
            }
        }
    }
};
function okttsg_EmissionBloomTest$testMain$1$1$2() {
    kji_Lambda.call(this);
    this.$this$0255 = null;
}
$java.okttsg_EmissionBloomTest$testMain$1$1$2__init_ = function(var_0) {
    var var_1 = new okttsg_EmissionBloomTest$testMain$1$1$2();
    $java.okttsg_EmissionBloomTest$testMain$1$1$2__init_0(var_1, var_0);
    return var_1;
};
$java.okttsg_EmissionBloomTest$testMain$1$1$2_invoke = function(var$0, var$1) {
    $java.okttsg_EmissionBloomTest$testMain$1$1$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.okttsg_EmissionBloomTest$testMain$1$1$2_invoke0 = function($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    oktsp_Threshold_render($this.$this$0255.$$threshold, $this.$this$0255.$$screenQuad10, oktt_SimpleFrameBuffer_getTexture($this.$this$0255.$$sceneBuffer0, 0), null);
};
$java.okttsg_EmissionBloomTest$testMain$1$1$2__init_0 = function(var$0, var$1) {
    var$0.$this$0255 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oooi_DxQuickStep$28() {
    jl_Object.call(this);
    this.$val$stage6CallContext = null;
}
$java.oooi_DxQuickStep$28__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$28();
    $java.oooi_DxQuickStep$28__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$28__init_0 = function($this, var$1) {
    $this.$val$stage6CallContext = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$28_run = function($this) {
    $java.oooi_DxQuickStep_access$3800($this.$val$stage6CallContext);
};
function oooi_DxQuickStep$27() {
    jl_Object.call(this);
    this.$val$stage6CallContext0 = null;
}
$java.oooi_DxQuickStep$27__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$27();
    $java.oooi_DxQuickStep$27__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$27__init_0 = function($this, var$1) {
    $this.$val$stage6CallContext0 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$27_run = function($this) {
    $java.oooi_DxQuickStep_access$3700($this.$val$stage6CallContext0);
};
function oooi_DxQuickStep$26() {
    var a = this; jl_Object.call(a);
    a.$val$stage6CallContext1 = null;
    a.$val$callContext0 = null;
}
$java.oooi_DxQuickStep$26__init_ = function(var_0, var_1) {
    var var_2 = new oooi_DxQuickStep$26();
    $java.oooi_DxQuickStep$26__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.oooi_DxQuickStep$26__init_0 = function($this, var$1, var$2) {
    $this.$val$stage6CallContext1 = var$1;
    $this.$val$callContext0 = var$2;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$26_run = function($this) {
    $java.oooi_DxQuickStep_access$3600($this.$val$stage6CallContext1, oooip_DxStepperProcessingCallContext_m_taskGroup($this.$val$callContext0));
};
function oooi_DxQuickStep$25() {
    jl_Object.call(this);
    this.$val$stage4CallContext10 = null;
}
$java.oooi_DxQuickStep$25__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$25();
    $java.oooi_DxQuickStep$25__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$25__init_0 = function($this, var$1) {
    $this.$val$stage4CallContext10 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$25_run = function($this) {
    $java.oooi_DxQuickStep_access$3400($this.$val$stage4CallContext10, 0);
};
function oooi_DxQuickStep$24() {
    jl_Object.call(this);
    this.$val$stage4CallContext11 = null;
}
$java.oooi_DxQuickStep$24__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$24();
    $java.oooi_DxQuickStep$24__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$24__init_0 = function($this, var$1) {
    $this.$val$stage4CallContext11 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$24_run = function($this) {
    $java.oooi_DxQuickStep_access$3400($this.$val$stage4CallContext11, 0);
};
function oooi_DxQuickStep$23() {
    jl_Object.call(this);
    this.$val$stage4CallContext12 = null;
}
$java.oooi_DxQuickStep$23__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$23();
    $java.oooi_DxQuickStep$23__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$23__init_0 = function($this, var$1) {
    $this.$val$stage4CallContext12 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$23_run = function($this) {
    $java.oooi_DxQuickStep_access$3300($this.$val$stage4CallContext12);
};
function oooi_DxQuickStep$22() {
    var a = this; jl_Object.call(a);
    a.$val$stage4CallContext13 = null;
    a.$val$finalGroup = null;
}
$java.oooi_DxQuickStep$22__init_ = function(var_0, var_1) {
    var var_2 = new oooi_DxQuickStep$22();
    $java.oooi_DxQuickStep$22__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.oooi_DxQuickStep$22__init_0 = function($this, var$1, var$2) {
    $this.$val$stage4CallContext13 = var$1;
    $this.$val$finalGroup = var$2;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$22_run = function($this) {
    $java.oooi_DxQuickStep_access$3200($this.$val$stage4CallContext13, $this.$val$finalGroup);
};
function jur_AbstractCharClass$LazyJavaWhitespace() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaWhitespace__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaWhitespace();
    jur_AbstractCharClass$LazyJavaWhitespace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaWhitespace__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
$java.jur_AbstractCharClass$LazyJavaWhitespace_computeValue = function($this) {
    return $java.jur_AbstractCharClass$LazyJavaWhitespace$1__init_($this);
};
function ju_Collections$_clinit_$lambda$_61_1() {
    jl_Object.call(this);
}
function ju_Collections$_clinit_$lambda$_61_1__init_() {
    var var_0 = new ju_Collections$_clinit_$lambda$_61_1();
    ju_Collections$_clinit_$lambda$_61_1__init_0(var_0);
    return var_0;
}
function ju_Collections$_clinit_$lambda$_61_1__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function oktm_IScreenQuad$render$2() {
    var a = this; kji_Lambda.call(a);
    a.$this$0256 = null;
    a.$$shader15 = null;
    a.$$clearMask = null;
    a.$$set = null;
}
$java.oktm_IScreenQuad$render$2__init_ = function(var_0, var_1, var_2, var_3) {
    var var_4 = new oktm_IScreenQuad$render$2();
    $java.oktm_IScreenQuad$render$2__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
};
$java.oktm_IScreenQuad$render$2_invoke = function(var$0, var$1) {
    $java.oktm_IScreenQuad$render$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktm_IScreenQuad$render$2_invoke0 = function($this, $$this$render) {
    kji_Intrinsics_checkParameterIsNotNull($$this$render, $rt_s(33));
    $java.oktm_IScreenQuad$DefaultImpls_access$renderBase($this.$this$0256, $this.$$shader15, $this.$$clearMask, $this.$$set);
};
$java.oktm_IScreenQuad$render$2__init_0 = function(var$0, var$1, var$2, var$3, var$4) {
    var$0.$this$0256 = var$1;
    var$0.$$shader15 = var$2;
    var$0.$$clearMask = var$3;
    var$0.$$set = var$4;
    kji_Lambda__init_0(var$0, 1);
};
function ju_Collections$_clinit_$lambda$_61_0() {
    jl_Object.call(this);
}
function ju_Collections$_clinit_$lambda$_61_0__init_() {
    var var_0 = new ju_Collections$_clinit_$lambda$_61_0();
    ju_Collections$_clinit_$lambda$_61_0__init_0(var_0);
    return var_0;
}
function ju_Collections$_clinit_$lambda$_61_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
$java.ju_Collections$_clinit_$lambda$_61_0_compare = function(var$0, var$1, var$2) {
    return ju_Collections_lambda$static$0(var$1, var$2);
};
function oktm_IScreenQuad$render$1() {
    kji_Lambda.call(this);
}
$java.oktm_IScreenQuad$render$1_INSTANCE = null;
$java.oktm_IScreenQuad$render$1_$callClinit = function() {
    $java.oktm_IScreenQuad$render$1_$callClinit = $rt_eraseClinit(oktm_IScreenQuad$render$1);
    $java.oktm_IScreenQuad$render$1__clinit_();
};
$java.oktm_IScreenQuad$render$1__init_ = function() {
    var var_0 = new oktm_IScreenQuad$render$1();
    oktm_IScreenQuad$render$1__init_(var_0);
    return var_0;
};
$java.oktm_IScreenQuad$render$1_invoke = function(var$0, var$1) {
    $java.oktm_IScreenQuad$render$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktm_IScreenQuad$render$1_invoke0 = function($this, $$receiver) {
    kji_Intrinsics_checkParameterIsNotNull($$receiver, $rt_s(33));
};
function oktm_IScreenQuad$render$1__init_(var$0) {
    $java.oktm_IScreenQuad$render$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
$java.oktm_IScreenQuad$render$1__clinit_ = function() {
    $java.oktm_IScreenQuad$render$1_INSTANCE = $java.oktm_IScreenQuad$render$1__init_();
};
function oktgg_GLTFTexture$read$2$2$1$2() {
    kji_Lambda.call(this);
}
var oktgg_GLTFTexture$read$2$2$1$2_INSTANCE = null;
function oktgg_GLTFTexture$read$2$2$1$2_$callClinit() {
    oktgg_GLTFTexture$read$2$2$1$2_$callClinit = $rt_eraseClinit(oktgg_GLTFTexture$read$2$2$1$2);
    $java.oktgg_GLTFTexture$read$2$2$1$2__clinit_();
}
$java.oktgg_GLTFTexture$read$2$2$1$2__init_ = function() {
    var var_0 = new oktgg_GLTFTexture$read$2$2$1$2();
    oktgg_GLTFTexture$read$2$2$1$2__init_(var_0);
    return var_0;
};
$java.oktgg_GLTFTexture$read$2$2$1$2_invoke = function(var$0, var$1) {
    $java.oktgg_GLTFTexture$read$2$2$1$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTFTexture$read$2$2$1$2_invoke0 = function($this, $$this$get) {
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
};
function oktgg_GLTFTexture$read$2$2$1$2__init_(var$0) {
    oktgg_GLTFTexture$read$2$2$1$2_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
$java.oktgg_GLTFTexture$read$2$2$1$2__clinit_ = function() {
    oktgg_GLTFTexture$read$2$2$1$2_INSTANCE = $java.oktgg_GLTFTexture$read$2$2$1$2__init_();
};
function k_NotImplementedError() {
    jl_Error.call(this);
}
function k_NotImplementedError__init_0(var_0) {
    var var_1 = new k_NotImplementedError();
    $java.k_NotImplementedError__init_(var_1, var_0);
    return var_1;
}
function k_NotImplementedError__init_(var_0, var_1, var_2) {
    var var_3 = new k_NotImplementedError();
    $java.k_NotImplementedError__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
$java.k_NotImplementedError__init_1 = function() {
    var var_0 = new k_NotImplementedError();
    k_NotImplementedError__init_1(var_0);
    return var_0;
};
$java.k_NotImplementedError__init_ = function($this, $message) {
    kji_Intrinsics_checkParameterIsNotNull($message, $rt_s(466));
    jl_Error__init_4($this, $message);
};
$java.k_NotImplementedError__init_0 = function(var$0, var$1, var$2, var$3) {
    if (var$2 & 1)
        var$1 = $rt_s(1580);
    $java.k_NotImplementedError__init_(var$0, var$1);
};
function k_NotImplementedError__init_1(var$0) {
    $java.k_NotImplementedError__init_0(var$0, null, 1, null);
}
function oktgg_GLTFTexture$read$2$2$1$1() {
    kji_Lambda.call(this);
}
var oktgg_GLTFTexture$read$2$2$1$1_INSTANCE = null;
function oktgg_GLTFTexture$read$2$2$1$1_$callClinit() {
    oktgg_GLTFTexture$read$2$2$1$1_$callClinit = $rt_eraseClinit(oktgg_GLTFTexture$read$2$2$1$1);
    $java.oktgg_GLTFTexture$read$2$2$1$1__clinit_();
}
$java.oktgg_GLTFTexture$read$2$2$1$1__init_ = function() {
    var var_0 = new oktgg_GLTFTexture$read$2$2$1$1();
    oktgg_GLTFTexture$read$2$2$1$1__init_(var_0);
    return var_0;
};
$java.oktgg_GLTFTexture$read$2$2$1$1_invoke = function(var$0, var$1) {
    $java.oktgg_GLTFTexture$read$2$2$1$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTFTexture$read$2$2$1$1_invoke0 = function($this, $$this$get) {
    kji_Intrinsics_checkParameterIsNotNull($$this$get, $rt_s(33));
};
function oktgg_GLTFTexture$read$2$2$1$1__init_(var$0) {
    oktgg_GLTFTexture$read$2$2$1$1_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
$java.oktgg_GLTFTexture$read$2$2$1$1__clinit_ = function() {
    oktgg_GLTFTexture$read$2$2$1$1_INSTANCE = $java.oktgg_GLTFTexture$read$2$2$1$1__init_();
};
function jur_AbstractCharClass$LazyJavaMirrored() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaMirrored__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaMirrored();
    jur_AbstractCharClass$LazyJavaMirrored__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaMirrored__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
$java.jur_AbstractCharClass$LazyJavaMirrored_computeValue = function($this) {
    return jur_AbstractCharClass$LazyJavaMirrored$1__init_($this);
};
function jur_AbstractCharClass$LazyJavaISOControl() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaISOControl__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaISOControl();
    jur_AbstractCharClass$LazyJavaISOControl__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaISOControl__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
$java.jur_AbstractCharClass$LazyJavaISOControl_computeValue = function($this) {
    return jur_AbstractCharClass$LazyJavaISOControl$1__init_($this);
};
function oktmb_BoxMeshBuilder$build$1() {
    kji_Lambda.call(this);
    this.$this$0257 = null;
}
function oktmb_BoxMeshBuilder$build$1__init_(var_0) {
    var var_1 = new oktmb_BoxMeshBuilder$build$1();
    $java.oktmb_BoxMeshBuilder$build$1__init_(var_1, var_0);
    return var_1;
}
$java.oktmb_BoxMeshBuilder$build$1_invoke = function(var$0, var$1) {
    $java.oktmb_BoxMeshBuilder$build$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktmb_BoxMeshBuilder$build$1_invoke0 = function($this, $$this$createVerticesFloat) {
    var $xs, $ys, $zs, var$5, var$6, var$7, var$8;
    kji_Intrinsics_checkParameterIsNotNull($$this$createVerticesFloat, $rt_s(33));
    $xs = oktmb_BoxMeshBuilder_getXSize($this.$this$0257) * 0.5;
    $ys = oktmb_BoxMeshBuilder_getYSize($this.$this$0257) * 0.5;
    $zs = oktmb_BoxMeshBuilder_getZSize($this.$this$0257) * 0.5;
    var$5 = $this.$this$0257;
    var$6 =  -$xs;
    var$7 =  -$ys;
    oktmb_BoxMeshBuilder_access$putSide(var$5, $$this$createVerticesFloat, 0.0, 0.0, 1.0, var$6, var$7, $zs, $xs, var$7, $zs, $xs, $ys, $zs, var$6, $ys, $zs);
    var$5 = $this.$this$0257;
    var$8 =  -$zs;
    oktmb_BoxMeshBuilder_access$putSide(var$5, $$this$createVerticesFloat, 0.0, 1.0, 0.0, var$6, $ys, $zs, $xs, $ys, $zs, $xs, $ys, var$8, var$6, $ys, var$8);
    oktmb_BoxMeshBuilder_access$putSide($this.$this$0257, $$this$createVerticesFloat, 0.0, 0.0, (-1.0), $xs, var$7, var$8, var$6, var$7, var$8, var$6, $ys, var$8, $xs, $ys, var$8);
    oktmb_BoxMeshBuilder_access$putSide($this.$this$0257, $$this$createVerticesFloat, 0.0, (-1.0), 0.0, var$6, var$7, var$8, $xs, var$7, var$8, $xs, var$7, $zs, var$6, var$7, $zs);
    oktmb_BoxMeshBuilder_access$putSide($this.$this$0257, $$this$createVerticesFloat, (-1.0), 0.0, 0.0, var$6, var$7, $zs, var$6, var$7, var$8, var$6, $ys, var$8, var$6, $ys, $zs);
    oktmb_BoxMeshBuilder_access$putSide($this.$this$0257, $$this$createVerticesFloat, 1.0, 0.0, 0.0, $xs, var$7, $zs, $xs, var$7, var$8, $xs, $ys, var$8, $xs, $ys, $zs);
};
$java.oktmb_BoxMeshBuilder$build$1__init_ = function(var$0, var$1) {
    var$0.$this$0257 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function jur_HighSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$high0 = 0;
}
$java.jur_HighSurrogateCharSet__init_ = function(var_0) {
    var var_1 = new jur_HighSurrogateCharSet();
    $java.jur_HighSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
};
$java.jur_HighSurrogateCharSet__init_0 = function($this, $high) {
    jur_JointSet__init_0($this);
    $this.$high0 = $high;
};
$java.jur_HighSurrogateCharSet_setNext = function($this, $next) {
    $this.$next0 = $next;
};
$java.jur_HighSurrogateCharSet_matches = function($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, var$6, $high, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    var$6 = $rt_compare(var$5, $strLength);
    if (var$6 > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (var$6 < 0) {
        $low = $testString.$charAt(var$5);
        if (jl_Character_isLowSurrogate($low))
            return (-1);
    }
    if ($this.$high0 != $high)
        return (-1);
    return $this.$next0.$matches(var$5, $testString, $matchResult);
};
$java.jur_HighSurrogateCharSet_find = function($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = $testStr.$indexOf($this.$high0, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex < $strLength && jl_Character_isLowSurrogate($testStr.$charAt($strIndex))) {
            $strIndex = var$6 + 2 | 0;
            continue;
        }
        if ($this.$next0.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
};
$java.jur_HighSurrogateCharSet_findBack = function($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf($this.$high0, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            var$8 = var$7 + 1 | 0;
            if (var$8 < $strLength && jl_Character_isLowSurrogate($testStr.$charAt(var$8))) {
                $lastIndex = var$7 + (-1) | 0;
                continue;
            }
            if ($this.$next0.$matches(var$8, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
};
$java.jur_HighSurrogateCharSet_first = function($this, $set) {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_LowSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_HighSurrogateCharSet))
        return 1;
    return $set.$high0 != $this.$high0 ? 0 : 1;
};
$java.jur_HighSurrogateCharSet_hasConsumed = function($this, $matchResult) {
    return 1;
};
function oktgg_GLTFNode$read$2$1() {
    kji_Lambda.call(this);
    this.$this$0258 = null;
}
function oktgg_GLTFNode$read$2$1__init_(var_0) {
    var var_1 = new oktgg_GLTFNode$read$2$1();
    $java.oktgg_GLTFNode$read$2$1__init_(var_1, var_0);
    return var_1;
}
$java.oktgg_GLTFNode$read$2$1_invoke = function(var$0, var$1) {
    $java.oktgg_GLTFNode$read$2$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTFNode$read$2$1_invoke0 = function($this, $childNode) {
    kji_Intrinsics_checkParameterIsNotNull($childNode, $rt_s(1581));
    oktgg_GLTFNode_getNode($this.$this$0258.$this$0128).$addChildNode(oktgg_GLTFNode_getNode($childNode));
};
$java.oktgg_GLTFNode$read$2$1__init_ = function(var$0, var$1) {
    var$0.$this$0258 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function kc_CollectionsKt___CollectionsKt$elementAt$1() {
    kji_Lambda.call(this);
    this.$$index0 = 0;
}
function kc_CollectionsKt___CollectionsKt$elementAt$1__init_(var_0) {
    var var_1 = new kc_CollectionsKt___CollectionsKt$elementAt$1();
    $java.kc_CollectionsKt___CollectionsKt$elementAt$1__init_(var_1, var_0);
    return var_1;
}
$java.kc_CollectionsKt___CollectionsKt$elementAt$1_invoke = function(var$0, var$1) {
    return $java.kc_CollectionsKt___CollectionsKt$elementAt$1_invoke0(var$0, var$1.$intValue());
};
$java.kc_CollectionsKt___CollectionsKt$elementAt$1_invoke0 = function($this, $it) {
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder__init_().$append($rt_s(1582)).$append1($this.$$index0).$append12(46).$toString()));
};
$java.kc_CollectionsKt___CollectionsKt$elementAt$1__init_ = function(var$0, var$1) {
    var$0.$$index0 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oktmb_PlaneMeshBuilder$build$2() {
    kji_Lambda.call(this);
    this.$this$0259 = null;
}
function oktmb_PlaneMeshBuilder$build$2__init_(var_0) {
    var var_1 = new oktmb_PlaneMeshBuilder$build$2();
    $java.oktmb_PlaneMeshBuilder$build$2__init_(var_1, var_0);
    return var_1;
}
$java.oktmb_PlaneMeshBuilder$build$2_invoke = function(var$0, var$1) {
    $java.oktmb_PlaneMeshBuilder$build$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktmb_PlaneMeshBuilder$build$2_invoke0 = function($this, $$this$createIndicesShort) {
    var $xQuads, $yQuads, $v0, $v1, $v2, $v3, $ri, $ci, var$10, var$11, var$12, var$13;
    kji_Intrinsics_checkParameterIsNotNull($$this$createIndicesShort, $rt_s(33));
    $xQuads = oktmb_PlaneMeshBuilder_getXDivisions($this.$this$0259);
    $yQuads = oktmb_PlaneMeshBuilder_getYDivisions($this.$this$0259);
    $v0 = 0;
    $v1 = $xQuads + 1 | 0;
    $v2 = 1;
    $v3 = $v1 + 1 | 0;
    $ri = 0;
    while ($ri < $yQuads) {
        $ci = 0;
        while ($ci < $xQuads) {
            var$10 = $rt_createArray(jl_Short, 6);
            var$11 = var$10.data;
            var$11[0] = jl_Short_valueOf($v0 << 16 >> 16);
            var$12 = $v1 << 16 >> 16;
            var$11[1] = jl_Short_valueOf(var$12);
            var$13 = $v2 << 16 >> 16;
            var$11[2] = jl_Short_valueOf(var$13);
            var$11[3] = jl_Short_valueOf(var$12);
            var$11[4] = jl_Short_valueOf($v3 << 16 >> 16);
            var$11[5] = jl_Short_valueOf(var$13);
            $$this$createIndicesShort.$put4(var$10);
            $v0 = $v0 + 1 | 0;
            $v1 = $v1 + 1 | 0;
            $v2 = $v2 + 1 | 0;
            $v3 = $v3 + 1 | 0;
            $ci = $ci + 1 | 0;
        }
        $v0 = $v0 + 1 | 0;
        $v1 = $v1 + 1 | 0;
        $v2 = $v2 + 1 | 0;
        $v3 = $v3 + 1 | 0;
        $ri = $ri + 1 | 0;
    }
};
$java.oktmb_PlaneMeshBuilder$build$2__init_ = function(var$0, var$1) {
    var$0.$this$0259 = var$1;
    kji_Lambda__init_0(var$0, 1);
};
function oooip_DxUtil() {
    jl_Object.call(this);
}
$java.oooip_DxUtil_NULL_BP = null;
var oooip_DxUtil_g_WorldProcessMallocMemoryManager = null;
var oooip_DxUtil_g_WorldProcessDefaultReserveInfo = null;
function oooip_DxUtil_$callClinit() {
    oooip_DxUtil_$callClinit = $rt_eraseClinit(oooip_DxUtil);
    $java.oooip_DxUtil__clinit_();
}
$java.oooip_DxUtil__init_ = function() {
    var var_0 = new oooip_DxUtil();
    oooip_DxUtil__init_(var_0);
    return var_0;
};
function oooip_DxUtil__init_($this) {
    oooip_DxUtil_$callClinit();
    jl_Object__init_0($this);
}
function oooip_DxUtil_sizeof($cls) {
    oooip_DxUtil_$callClinit();
    if ($cls !== $rt_cls(oooip_DxWorldProcessMemArena))
        return (-1);
    return (-1);
}
function oooip_DxUtil_dEFFICIENT_SIZE($x) {
    oooip_DxUtil_$callClinit();
    return $x;
}
function oooip_DxUtil_dEFFICIENT_PTR($p) {
    oooip_DxUtil_$callClinit();
    return $p;
}
function oooip_DxUtil_dEFFICIENT_PTR0($obj, $i) {
    oooip_DxUtil_$callClinit();
    return oooip_DxUtil$BlockPointer__init_($obj, $i);
}
function oooip_DxUtil_dOFFSET_EFFICIENTLY($p, $b) {
    oooip_DxUtil_$callClinit();
    return $p;
}
$java.oooip_DxUtil__clinit_ = function() {
    var var$1;
    $java.oooip_DxUtil_NULL_BP = oooip_DxUtil$BlockPointer__init_(oooip_DxWorldProcessMemArena__init_(), (-1));
    var$1 = new oooip_DxWorldProcessMemoryManager;
    oooi_DxWorld$DWorldStepMemoryFunctionsInfo_$callClinit();
    oooip_DxWorldProcessMemoryManager__init_0(var$1, oooi_DxWorld$DWorldStepMemoryFunctionsInfo_alloc_block, oooi_DxWorld$DWorldStepMemoryFunctionsInfo_shrink_block, oooi_DxWorld$DWorldStepMemoryFunctionsInfo_free_block);
    oooip_DxUtil_g_WorldProcessMallocMemoryManager = var$1;
    oooip_DxUtil_g_WorldProcessDefaultReserveInfo = oooip_DxWorldProcessMemoryReserveInfo__init_(1.2000000476837158, 65536);
};
function oktmb_PlaneMeshBuilder$build$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$0260 = null;
    a.$$yNum = 0;
    a.$$xNum = 0;
}
function oktmb_PlaneMeshBuilder$build$1__init_(var_0, var_1, var_2) {
    var var_3 = new oktmb_PlaneMeshBuilder$build$1();
    $java.oktmb_PlaneMeshBuilder$build$1__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
$java.oktmb_PlaneMeshBuilder$build$1_invoke = function(var$0, var$1) {
    $java.oktmb_PlaneMeshBuilder$build$1_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktmb_PlaneMeshBuilder$build$1_invoke0 = function($this, $$this$createVerticesFloat) {
    var $uv, $normals, $halfWidth, $halfHeight, $normalX, $normalY, $normalZ, $xStart, $xStep, $uStep, $yStart, $yStep, $vStep, $v, $iy, $u, $ix, var$19, var$20, var$21;
    kji_Intrinsics_checkParameterIsNotNull($$this$createVerticesFloat, $rt_s(33));
    $uv = $this.$this$0260.$getUv();
    $normals = $this.$this$0260.$getNormals();
    $halfWidth = oktmb_PlaneMeshBuilder_getWidth($this.$this$0260) * 0.5;
    $halfHeight = oktmb_PlaneMeshBuilder_getHeight($this.$this$0260) * 0.5;
    $normalX = oktmb_PlaneMeshBuilder_getNormal($this.$this$0260).$getX0();
    $normalY = oktmb_PlaneMeshBuilder_getNormal($this.$this$0260).$getY0();
    $normalZ = oktmb_PlaneMeshBuilder_getNormal($this.$this$0260).$getZ();
    $xStart =  -$halfWidth;
    $xStep = oktmb_PlaneMeshBuilder_getWidth($this.$this$0260) / oktmb_PlaneMeshBuilder_getXDivisions($this.$this$0260);
    $uStep = $xStep / oktmb_PlaneMeshBuilder_getHeight($this.$this$0260);
    $yStart =  -$halfHeight;
    $yStep = oktmb_PlaneMeshBuilder_getHeight($this.$this$0260) / oktmb_PlaneMeshBuilder_getYDivisions($this.$this$0260);
    $vStep = $yStep / oktmb_PlaneMeshBuilder_getHeight($this.$this$0260);
    $v = 0.0;
    $iy = 0;
    while ($iy < $this.$$yNum) {
        $u = 0.0;
        $ix = 0;
        var$19 = $xStart;
        while ($ix < $this.$$xNum) {
            var$20 = $rt_createArray(jl_Float, 3);
            var$21 = var$20.data;
            var$21[0] = jl_Float_valueOf(var$19);
            var$21[1] = oktmb_PlaneMeshBuilder_getHeightProvider($this.$this$0260).$invoke11(jl_Integer_valueOf($ix), jl_Integer_valueOf($iy));
            var$21[2] = jl_Float_valueOf($yStart);
            $$this$createVerticesFloat.$put4(var$20);
            if ($uv) {
                var$20 = $rt_createArray(jl_Float, 2);
                var$21 = var$20.data;
                var$21[0] = jl_Float_valueOf($u);
                var$21[1] = jl_Float_valueOf($v);
                $$this$createVerticesFloat.$put4(var$20);
            }
            if ($normals) {
                var$21 = $rt_createArray(jl_Float, 3);
                var$20 = var$21.data;
                var$20[0] = jl_Float_valueOf($normalX);
                var$20[1] = jl_Float_valueOf($normalY);
                var$20[2] = jl_Float_valueOf($normalZ);
                $$this$createVerticesFloat.$put4(var$21);
            }
            $u = $u + $uStep;
            var$19 = var$19 + $xStep;
            $ix = $ix + 1 | 0;
        }
        $v = $v + $vStep;
        $yStart = $yStart + $yStep;
        $iy = $iy + 1 | 0;
    }
};
$java.oktmb_PlaneMeshBuilder$build$1__init_ = function(var$0, var$1, var$2, var$3) {
    var$0.$this$0260 = var$1;
    var$0.$$yNum = var$2;
    var$0.$$xNum = var$3;
    kji_Lambda__init_0(var$0, 1);
};
function oktts_ThresholdTest$testMain$1() {
    var a = this; kji_Lambda.call(a);
    a.$$model0 = null;
    a.$$frameBuffer1 = null;
    a.$$threshold0 = null;
    a.$$screenQuad14 = null;
}
$java.oktts_ThresholdTest$testMain$1__init_ = function(var_0, var_1, var_2, var_3) {
    var var_4 = new oktts_ThresholdTest$testMain$1();
    $java.oktts_ThresholdTest$testMain$1__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
};
$java.oktts_ThresholdTest$testMain$1_invoke = function(var$0) {
    $java.oktts_ThresholdTest$testMain$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktts_ThresholdTest$testMain$1_invoke0 = function($this) {
    oktg_GL_$callClinit();
    oktg_GL_glClear(oktg_GL_INSTANCE, 16640);
    oktt_CubeModel_update($this.$$model0);
    oktt_SimpleFrameBuffer_render($this.$$frameBuffer1, oktts_ThresholdTest$testMain$1$1__init_($this));
    oktsp_Threshold_render($this.$$threshold0, $this.$$screenQuad14, oktt_SimpleFrameBuffer_getTexture($this.$$frameBuffer1, 0), null);
};
$java.oktts_ThresholdTest$testMain$1__init_0 = function(var$0, var$1, var$2, var$3, var$4) {
    var$0.$$model0 = var$1;
    var$0.$$frameBuffer1 = var$2;
    var$0.$$threshold0 = var$3;
    var$0.$$screenQuad14 = var$4;
    kji_Lambda__init_0(var$0, 0);
};
function oooi_DxRay$CollideRayPlane() {
    jl_Object.call(this);
}
function oooi_DxRay$CollideRayPlane__init_() {
    var var_0 = new oooi_DxRay$CollideRayPlane();
    oooi_DxRay$CollideRayPlane__init_0(var_0);
    return var_0;
}
function oooi_DxRay$CollideRayPlane__init_0($this) {
    jl_Object__init_0($this);
}
$java.oooi_DxRay$CollideRayPlane_dCollideRayPlane = function($this, $ray, $plane, $flags, $contacts, $skip) {
    var $alpha, $nsign, $k, var$9, $contact;
    oooi_Common_dIASSERT($skip < 1 ? 0 : 1);
    oooi_Common_dIASSERT(($flags & 65535) < 1 ? 0 : 1);
    $alpha = $plane.$getDepth() - $plane.$getNormal().$dot($ray.$final_posr().$pos());
    $nsign = $alpha <= 0.0 ? 1.0 : (-1.0);
    $k = $plane.$getNormal().$dot2($ray.$final_posr().$R().$viewCol(2));
    if ($k === 0.0)
        return 0;
    var$9 = $alpha / $k;
    if (var$9 >= 0.0 && var$9 <= oooi_DxRay_access$100($ray)) {
        $contact = ooo_DContactGeomBuffer_get($contacts, 0);
        oom_DVector3_eqSum2($contact.$pos0, $ray.$final_posr().$R().$viewCol(2), var$9, $ray.$final_posr().$pos(), 1.0);
        oom_DVector3_set($contact.$normal, $plane.$getNormal());
        oom_DVector3_scale($contact.$normal, $nsign);
        $contact.$depth = var$9;
        $contact.$g1 = $ray;
        $contact.$g2 = $plane;
        $contact.$side1 = (-1);
        $contact.$side2 = (-1);
        return 1;
    }
    return 0;
};
$java.oooi_DxRay$CollideRayPlane_dColliderFn = function($this, $o1, $o2, $flags, $contacts) {
    return $this.$dCollideRayPlane($o1, $o2, $flags, $contacts, 1);
};
function oktga_AnimPlayer$Companion$vec3Pool$1() {
    kji_Lambda.call(this);
}
$java.oktga_AnimPlayer$Companion$vec3Pool$1_INSTANCE = null;
$java.oktga_AnimPlayer$Companion$vec3Pool$1_$callClinit = function() {
    $java.oktga_AnimPlayer$Companion$vec3Pool$1_$callClinit = $rt_eraseClinit(oktga_AnimPlayer$Companion$vec3Pool$1);
    $java.oktga_AnimPlayer$Companion$vec3Pool$1__clinit_();
};
$java.oktga_AnimPlayer$Companion$vec3Pool$1__init_ = function() {
    var var_0 = new oktga_AnimPlayer$Companion$vec3Pool$1();
    oktga_AnimPlayer$Companion$vec3Pool$1__init_(var_0);
    return var_0;
};
$java.oktga_AnimPlayer$Companion$vec3Pool$1_invoke = function(var$0) {
    return $java.oktga_AnimPlayer$Companion$vec3Pool$1_invoke0(var$0);
};
$java.oktga_AnimPlayer$Companion$vec3Pool$1_invoke0 = function($this) {
    return oktm_Vec3__init_(0.0, 0.0, 0.0, 7, null);
};
function oktga_AnimPlayer$Companion$vec3Pool$1__init_(var$0) {
    $java.oktga_AnimPlayer$Companion$vec3Pool$1_$callClinit();
    kji_Lambda__init_0(var$0, 0);
}
$java.oktga_AnimPlayer$Companion$vec3Pool$1__clinit_ = function() {
    $java.oktga_AnimPlayer$Companion$vec3Pool$1_INSTANCE = $java.oktga_AnimPlayer$Companion$vec3Pool$1__init_();
};
function oktp_PHYS() {
    jl_Object.call(this);
}
$java.oktp_PHYS_api = null;
var oktp_PHYS_INSTANCE = null;
function oktp_PHYS_$callClinit() {
    oktp_PHYS_$callClinit = $rt_eraseClinit(oktp_PHYS);
    $java.oktp_PHYS__clinit_();
}
$java.oktp_PHYS__init_ = function() {
    var var_0 = new oktp_PHYS();
    oktp_PHYS__init_(var_0);
    return var_0;
};
function oktp_PHYS_setApi($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $java.oktp_PHYS_api = $_set___;
}
function oktp_PHYS_createWorld($this) {
    var var$1;
    var$1 = $java.oktp_PHYS_api;
    if (var$1 === null)
        kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(279));
    return var$1.$createWorld0();
}
function oktp_PHYS__init_($this) {
    oktp_PHYS_$callClinit();
    jl_Object__init_0($this);
}
$java.oktp_PHYS__clinit_ = function() {
    oktp_PHYS_INSTANCE = $java.oktp_PHYS__init_();
};
function oktmb_BoxMeshBuilder$Companion() {
    jl_Object.call(this);
}
$java.oktmb_BoxMeshBuilder$Companion__init_ = function() {
    var var_0 = new oktmb_BoxMeshBuilder$Companion();
    oktmb_BoxMeshBuilder$Companion__init_0(var_0);
    return var_0;
};
function oktmb_BoxMeshBuilder$Companion__init_(var_0) {
    var var_1 = new oktmb_BoxMeshBuilder$Companion();
    $java.oktmb_BoxMeshBuilder$Companion__init_0(var_1, var_0);
    return var_1;
}
function oktmb_BoxMeshBuilder$Companion_skyboxBuilder($this) {
    var $builder;
    $builder = oktmb_BoxMeshBuilder__init_0(1.0, 1.0, 1.0);
    $builder.$setNormals(0);
    $builder.$setUv0(0);
    return $builder;
}
function oktmb_BoxMeshBuilder$Companion__init_0($this) {
    jl_Object__init_0($this);
}
$java.oktmb_BoxMeshBuilder$Companion__init_0 = function($this, $$constructor_marker) {
    oktmb_BoxMeshBuilder$Companion__init_0($this);
};
function oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1() {
    var a = this; kji_Lambda.call(a);
    a.$this$0193 = null;
    a.$$hasNormals$inlined = null;
    a.$$vertexInputs$inlined = null;
    a.$$indices$inlined = null;
    a.$$floatsPerVertex$inlined = 0;
    a.$$vertices$inlined = null;
    a.$$maxVertices$inlined = 0;
    a.$$hasTangents$inlined = null;
    a.$$vertexBuffer$inlined = null;
    a.$$loadedAttributes$inlined = null;
}
function oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) {
    var var_10 = new oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1();
    $java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1__init_(var_10, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9);
    return var_10;
}
$java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1__init_ = function(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10) {
    var$0.$this$0193 = var$1;
    var$0.$$hasNormals$inlined = var$2;
    var$0.$$vertexInputs$inlined = var$3;
    var$0.$$indices$inlined = var$4;
    var$0.$$floatsPerVertex$inlined = var$5;
    var$0.$$vertices$inlined = var$6;
    var$0.$$maxVertices$inlined = var$7;
    var$0.$$hasTangents$inlined = var$8;
    var$0.$$vertexBuffer$inlined = var$9;
    var$0.$$loadedAttributes$inlined = var$10;
    kji_Lambda__init_0(var$0, 0);
};
$java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1_invoke = function(var$0) {
    $java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1_invoke0(var$0);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1_invoke0 = function($this) {
    var $posOffset, $normalOffset, $index, var$4, var$5, var$6, var$7, var$8, $indicesView, $maxIndices, $uvOffset, $tangentOffset, var$13, var$14;
    a: {
        if (!$this.$$hasNormals$inlined.$element1) {
            $posOffset = $this.$$vertexInputs$inlined.$floatOffsetOf0($rt_s(543));
            $normalOffset = $this.$$vertexInputs$inlined.$floatOffsetOf0($rt_s(854));
            $index = 0;
            if ($this.$$indices$inlined === null)
                while (true) {
                    if ($index >= $this.$$maxVertices$inlined)
                        break a;
                    var$4 = $this.$this$0193;
                    var$5 = $index + 1 | 0;
                    var$6 = var$5 + 1 | 0;
                    var$7 = var$6 + 1 | 0;
                    var$8 = $this.$$floatsPerVertex$inlined;
                    oktgg_GLTFPrimitive_$callClinit();
                    oktgg_GLTFPrimitive_access$getV1230(var$4, $index, var$5, var$6, var$8, oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion));
                    oktgg_GLTFPrimitive_access$calculateFlatNormal($this.$this$0193, oktgg_GLTFPrimitive$Vec3I_getX(oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion)), oktgg_GLTFPrimitive$Vec3I_getY(oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion)), oktgg_GLTFPrimitive$Vec3I_getZ(oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion)), $posOffset, $normalOffset, $this.$$vertices$inlined);
                    $index = var$7;
                }
            b: {
                switch (oktm_IndexBufferObject_getType($this.$$indices$inlined)) {
                    case 5121:
                        $indicesView = oktm_IndexBufferObject_getBytes($this.$$indices$inlined);
                        break b;
                    case 5122:
                    case 5124:
                        break;
                    case 5123:
                        $indicesView = oktm_IndexBufferObject_getBytes($this.$$indices$inlined).$shortView();
                        break b;
                    case 5125:
                        $indicesView = oktm_IndexBufferObject_getBytes($this.$$indices$inlined).$intView();
                        break b;
                    default:
                }
                $rt_throw(jl_IllegalStateException__init_($rt_s(1583)));
            }
            $maxIndices = $indicesView.$getSize();
            while (true) {
                if ($index >= $maxIndices)
                    break a;
                var$4 = $this.$this$0193;
                var$5 = $index + 1 | 0;
                var$6 = var$5 + 1 | 0;
                var$7 = var$6 + 1 | 0;
                var$8 = $this.$$floatsPerVertex$inlined;
                oktgg_GLTFPrimitive_$callClinit();
                oktgg_GLTFPrimitive_access$getV123(var$4, $index, var$5, var$6, $indicesView, var$8, oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion));
                oktgg_GLTFPrimitive_access$calculateFlatNormal($this.$this$0193, oktgg_GLTFPrimitive$Vec3I_getX(oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion)), oktgg_GLTFPrimitive$Vec3I_getY(oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion)), oktgg_GLTFPrimitive$Vec3I_getZ(oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion)), $posOffset, $normalOffset, $this.$$vertices$inlined);
                $index = var$7;
            }
        }
    }
    c: {
        if (!$this.$$hasTangents$inlined.$element1 && $this.$$vertexInputs$inlined.$contains($rt_s(332))) {
            $posOffset = $this.$$vertexInputs$inlined.$floatOffsetOf0($rt_s(543));
            $uvOffset = $this.$$vertexInputs$inlined.$floatOffsetOf0($rt_s(332));
            $tangentOffset = $this.$$vertexInputs$inlined.$floatOffsetOf0($rt_s(855));
            $index = 0;
            if ($this.$$indices$inlined === null)
                while (true) {
                    if ($index >= $this.$$maxVertices$inlined)
                        break c;
                    var$13 = $this.$this$0193;
                    var$5 = $index + 1 | 0;
                    var$6 = var$5 + 1 | 0;
                    var$7 = var$6 + 1 | 0;
                    var$8 = $this.$$floatsPerVertex$inlined;
                    oktgg_GLTFPrimitive_$callClinit();
                    oktgg_GLTFPrimitive_access$getV1230(var$13, $index, var$5, var$6, var$8, oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion));
                    oktgg_GLTFPrimitive_access$calculateTangent($this.$this$0193, oktgg_GLTFPrimitive$Vec3I_getX(oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion)), oktgg_GLTFPrimitive$Vec3I_getY(oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion)), oktgg_GLTFPrimitive$Vec3I_getZ(oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion)), $this.$$vertices$inlined, $posOffset, $uvOffset, $tangentOffset);
                    $index = var$7;
                }
            d: {
                switch (oktm_IndexBufferObject_getType($this.$$indices$inlined)) {
                    case 5121:
                        $indicesView = oktm_IndexBufferObject_getBytes($this.$$indices$inlined);
                        break d;
                    case 5122:
                    case 5124:
                        break;
                    case 5123:
                        $indicesView = oktm_IndexBufferObject_getBytes($this.$$indices$inlined).$shortView();
                        break d;
                    case 5125:
                        $indicesView = oktm_IndexBufferObject_getBytes($this.$$indices$inlined).$intView();
                        break d;
                    default:
                }
                $rt_throw(jl_IllegalStateException__init_($rt_s(1583)));
            }
            $maxIndices = $indicesView.$getSize();
            while (true) {
                if ($index >= $maxIndices)
                    break c;
                var$4 = $this.$this$0193;
                var$5 = $index + 1 | 0;
                var$6 = var$5 + 1 | 0;
                var$7 = var$6 + 1 | 0;
                var$8 = $this.$$floatsPerVertex$inlined;
                oktgg_GLTFPrimitive_$callClinit();
                oktgg_GLTFPrimitive_access$getV123(var$4, $index, var$5, var$6, $indicesView, var$8, oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion));
                oktgg_GLTFPrimitive_access$calculateTangent($this.$this$0193, oktgg_GLTFPrimitive$Vec3I_getX(oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion)), oktgg_GLTFPrimitive$Vec3I_getY(oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion)), oktgg_GLTFPrimitive$Vec3I_getZ(oktgg_GLTFPrimitive$Companion_getInd(oktgg_GLTFPrimitive_Companion)), $this.$$vertices$inlined, $posOffset, $uvOffset, $tangentOffset);
                $index = var$7;
            }
        }
    }
    var$14 = oktgg_GLTFPrimitive_getMesh($this.$this$0193);
    oktm_IVertexBuffer_$callClinit();
    var$14.$setVertices(oktm_IVertexBuffer$Companion_build$default(oktm_IVertexBuffer_Companion, $this.$$vertexBuffer$inlined, $this.$$vertexInputs$inlined, 0, 0, 4, null));
    oktgg_GLTFArray_ready(oktgg_GLTFMesh_getPrimitives(oktgg_GLTFPrimitive_getGltf($this.$this$0193).$getMeshes1().$get1(oktgg_GLTFPrimitive_getMeshIndex($this.$this$0193))), oktgg_GLTFPrimitive_getElementIndex($this.$this$0193));
    if (!oktgg_GLTFConf_getSeparateThread(oktgg_GLTFPrimitive_getGltf($this.$this$0193).$getConf())) {
        var$4 = oktgg_GLTFPrimitive_getMesh($this.$this$0193).$getVertices();
        if (var$4 !== null)
            var$4.$initGpuObjects();
    } else {
        oktg_GL_$callClinit();
        oktg_GL_call$default(oktg_GL_INSTANCE, null, oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1__init_($this), 1, null);
    }
};
function oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2() {
    var a = this; kji_Lambda.call(a);
    a.$$bufferView1 = null;
    a.$$attributeAccessor = null;
    a.$$attribute = null;
    a.$$completeCall = null;
    a.$this$0261 = null;
    a.$$hasNormals$inlined0 = null;
    a.$$vertexInputs$inlined0 = null;
    a.$$indices$inlined0 = null;
    a.$$floatsPerVertex$inlined0 = 0;
    a.$$vertices$inlined0 = null;
    a.$$maxVertices$inlined0 = 0;
    a.$$hasTangents$inlined0 = null;
    a.$$vertexBuffer$inlined0 = null;
    a.$$loadedAttributes$inlined0 = null;
}
function oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13) {
    var var_14 = new oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2();
    $java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2__init_(var_14, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13);
    return var_14;
}
$java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2__init_ = function(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14) {
    var$0.$$bufferView1 = var$1;
    var$0.$$attributeAccessor = var$2;
    var$0.$$attribute = var$3;
    var$0.$$completeCall = var$4;
    var$0.$this$0261 = var$5;
    var$0.$$hasNormals$inlined0 = var$6;
    var$0.$$vertexInputs$inlined0 = var$7;
    var$0.$$indices$inlined0 = var$8;
    var$0.$$floatsPerVertex$inlined0 = var$9;
    var$0.$$vertices$inlined0 = var$10;
    var$0.$$maxVertices$inlined0 = var$11;
    var$0.$$hasTangents$inlined0 = var$12;
    var$0.$$vertexBuffer$inlined0 = var$13;
    var$0.$$loadedAttributes$inlined0 = var$14;
    kji_Lambda__init_0(var$0, 1);
};
$java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2_invoke = function(var$0, var$1) {
    $java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2_invoke0 = function($this, $buffer) {
    var $byteStride, $verticesOffset, $stride, $attributeBuffer, $j, var$7, $k, var$9, var$10;
    kji_Intrinsics_checkParameterIsNotNull($buffer, $rt_s(467));
    oktgg_GLTFBuffer_getBytes($buffer).$setPosition(oktgg_GLTFBufferView_getByteOffset($this.$$bufferView1) + oktgg_GLTFAccessor_getByteOffset($this.$$attributeAccessor) | 0);
    $byteStride = oktgg_GLTFBufferView_getByteStride($this.$$bufferView1) != (-1) ? oktgg_GLTFBufferView_getByteStride($this.$$bufferView1) : oktgg_GLTFAccessor_strideSize($this.$$attributeAccessor);
    a: {
        b: {
            c: {
                $verticesOffset = $this.$$attribute.$getByteOffset() / 4 | 0;
                switch (oktgg_GLTFAccessor_getComponentType($this.$$attributeAccessor)) {
                    case 5121:
                        break c;
                    case 5122:
                    case 5124:
                    case 5125:
                        break a;
                    case 5123:
                        break b;
                    case 5126:
                        break;
                    default:
                        break a;
                }
                $stride = $byteStride / 4 | 0;
                $attributeBuffer = oktgg_GLTFBuffer_getBytes($buffer).$floatView();
                $j = 0;
                var$7 = oktgg_GLTFAccessor_getCount($this.$$attributeAccessor);
                while (true) {
                    if ($j >= var$7)
                        break a;
                    $k = 0;
                    while ($k < $stride) {
                        $this.$$vertices$inlined0.$set53($verticesOffset + $k | 0, $attributeBuffer.$get15());
                        $k = $k + 1 | 0;
                    }
                    $verticesOffset = $verticesOffset + $this.$$floatsPerVertex$inlined0 | 0;
                    $j = $j + 1 | 0;
                }
            }
            $attributeBuffer = oktgg_GLTFBuffer_getBytes($buffer);
            $j = 0;
            var$9 = oktgg_GLTFAccessor_getCount($this.$$attributeAccessor);
            while (true) {
                if ($j >= var$9)
                    break a;
                $k = 0;
                while ($k < $byteStride) {
                    $this.$$vertices$inlined0.$set53($verticesOffset + $k | 0, jl_Float_valueOf($attributeBuffer.$get15().$byteValue() & 255));
                    $k = $k + 1 | 0;
                }
                $verticesOffset = $verticesOffset + $this.$$floatsPerVertex$inlined0 | 0;
                $j = $j + 1 | 0;
            }
        }
        $stride = $byteStride / 2 | 0;
        $attributeBuffer = oktgg_GLTFBuffer_getBytes($buffer).$shortView();
        $j = 0;
        var$7 = oktgg_GLTFAccessor_getCount($this.$$attributeAccessor);
        while (true) {
            if ($j >= var$7)
                break a;
            $k = 0;
            while ($k < $stride) {
                $this.$$vertices$inlined0.$set53($verticesOffset + $k | 0, jl_Float_valueOf($attributeBuffer.$get15().$shortValue() & 65535));
                $k = $k + 1 | 0;
            }
            $verticesOffset = $verticesOffset + $this.$$floatsPerVertex$inlined0 | 0;
            $j = $j + 1 | 0;
        }
    }
    var$10 = $this.$$loadedAttributes$inlined0;
    var$10.$element = var$10.$element + 1 | 0;
    if ($this.$$loadedAttributes$inlined0.$element == oktm_VertexInputs_size($this.$$vertexInputs$inlined0))
        $this.$$completeCall.$invoke6();
};
function oktmb_BoxMeshBuilder$build$2() {
    kji_Lambda.call(this);
}
var oktmb_BoxMeshBuilder$build$2_INSTANCE = null;
function oktmb_BoxMeshBuilder$build$2_$callClinit() {
    oktmb_BoxMeshBuilder$build$2_$callClinit = $rt_eraseClinit(oktmb_BoxMeshBuilder$build$2);
    $java.oktmb_BoxMeshBuilder$build$2__clinit_();
}
$java.oktmb_BoxMeshBuilder$build$2__init_ = function() {
    var var_0 = new oktmb_BoxMeshBuilder$build$2();
    oktmb_BoxMeshBuilder$build$2__init_(var_0);
    return var_0;
};
$java.oktmb_BoxMeshBuilder$build$2_invoke = function(var$0, var$1) {
    $java.oktmb_BoxMeshBuilder$build$2_invoke0(var$0, var$1);
    k_Unit_$callClinit();
    return k_Unit_INSTANCE;
};
$java.oktmb_BoxMeshBuilder$build$2_invoke0 = function($this, $$this$createIndicesShort) {
    var var$2, var$3;
    kji_Intrinsics_checkParameterIsNotNull($$this$createIndicesShort, $rt_s(33));
    var$2 = $rt_createArray(jl_Short, 36);
    var$3 = var$2.data;
    var$3[0] = jl_Short_valueOf(0);
    var$3[1] = jl_Short_valueOf(1);
    var$3[2] = jl_Short_valueOf(2);
    var$3[3] = jl_Short_valueOf(2);
    var$3[4] = jl_Short_valueOf(3);
    var$3[5] = jl_Short_valueOf(0);
    var$3[6] = jl_Short_valueOf(4);
    var$3[7] = jl_Short_valueOf(5);
    var$3[8] = jl_Short_valueOf(6);
    var$3[9] = jl_Short_valueOf(6);
    var$3[10] = jl_Short_valueOf(7);
    var$3[11] = jl_Short_valueOf(4);
    var$3[12] = jl_Short_valueOf(8);
    var$3[13] = jl_Short_valueOf(9);
    var$3[14] = jl_Short_valueOf(10);
    var$3[15] = jl_Short_valueOf(10);
    var$3[16] = jl_Short_valueOf(11);
    var$3[17] = jl_Short_valueOf(8);
    var$3[18] = jl_Short_valueOf(12);
    var$3[19] = jl_Short_valueOf(13);
    var$3[20] = jl_Short_valueOf(14);
    var$3[21] = jl_Short_valueOf(14);
    var$3[22] = jl_Short_valueOf(15);
    var$3[23] = jl_Short_valueOf(12);
    var$3[24] = jl_Short_valueOf(17);
    var$3[25] = jl_Short_valueOf(16);
    var$3[26] = jl_Short_valueOf(18);
    var$3[27] = jl_Short_valueOf(19);
    var$3[28] = jl_Short_valueOf(18);
    var$3[29] = jl_Short_valueOf(16);
    var$3[30] = jl_Short_valueOf(20);
    var$3[31] = jl_Short_valueOf(21);
    var$3[32] = jl_Short_valueOf(22);
    var$3[33] = jl_Short_valueOf(22);
    var$3[34] = jl_Short_valueOf(23);
    var$3[35] = jl_Short_valueOf(20);
    $$this$createIndicesShort.$put4(var$2);
};
function oktmb_BoxMeshBuilder$build$2__init_(var$0) {
    oktmb_BoxMeshBuilder$build$2_$callClinit();
    kji_Lambda__init_0(var$0, 1);
}
$java.oktmb_BoxMeshBuilder$build$2__clinit_ = function() {
    oktmb_BoxMeshBuilder$build$2_INSTANCE = $java.oktmb_BoxMeshBuilder$build$2__init_();
};
function oktd_DataByteOrder() {
    jl_Enum.call(this);
}
$java.oktd_DataByteOrder_Native = null;
var oktd_DataByteOrder_LittleEndian = null;
$java.oktd_DataByteOrder_BigEndian = null;
$java.oktd_DataByteOrder_$VALUES = null;
function oktd_DataByteOrder_$callClinit() {
    oktd_DataByteOrder_$callClinit = $rt_eraseClinit(oktd_DataByteOrder);
    $java.oktd_DataByteOrder__clinit_();
}
$java.oktd_DataByteOrder__init_ = function(var_0, var_1) {
    var var_2 = new oktd_DataByteOrder();
    $java.oktd_DataByteOrder__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.oktd_DataByteOrder__clinit_ = function() {
    var var$1, var$2, var$3;
    var$1 = $rt_createArray(oktd_DataByteOrder, 3);
    var$2 = var$1.data;
    var$3 = $java.oktd_DataByteOrder__init_($rt_s(1584), 0);
    $java.oktd_DataByteOrder_Native = var$3;
    var$2[0] = var$3;
    var$3 = $java.oktd_DataByteOrder__init_($rt_s(1585), 1);
    oktd_DataByteOrder_LittleEndian = var$3;
    var$2[1] = var$3;
    var$3 = $java.oktd_DataByteOrder__init_($rt_s(1586), 2);
    $java.oktd_DataByteOrder_BigEndian = var$3;
    var$2[2] = var$3;
    $java.oktd_DataByteOrder_$VALUES = var$1;
};
$java.oktd_DataByteOrder__init_0 = function($this, $$enum_name_or_ordinal$0, $$enum_name_or_ordinal$1) {
    oktd_DataByteOrder_$callClinit();
    jl_Enum__init_0($this, $$enum_name_or_ordinal$0, $$enum_name_or_ordinal$1);
};
function oktd_DataByteOrder_values() {
    oktd_DataByteOrder_$callClinit();
    return $java.oktd_DataByteOrder_$VALUES.$clone();
}
function ki_PlatformImplementations() {
    jl_Object.call(this);
}
function ki_PlatformImplementations__init_() {
    var var_0 = new ki_PlatformImplementations();
    ki_PlatformImplementations__init_0(var_0);
    return var_0;
}
$java.ki_PlatformImplementations_defaultPlatformRandom = function($this) {
    return kr_FallbackThreadLocalRandom__init_();
};
function ki_PlatformImplementations__init_0($this) {
    jl_Object__init_0($this);
}
function oktgg_GLTFSparse$Indices() {
    var a = this; jl_Object.call(a);
    a.$bufferView2 = 0;
    a.$byteOffset3 = 0;
    a.$componentType0 = 0;
}
$java.oktgg_GLTFSparse$Indices__init_ = function(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFSparse$Indices();
    $java.oktgg_GLTFSparse$Indices__init_0(var_3, var_0, var_1, var_2);
    return var_3;
};
function oktgg_GLTFSparse$Indices__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgg_GLTFSparse$Indices();
    $java.oktgg_GLTFSparse$Indices__init_1(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
$java.oktgg_GLTFSparse$Indices__init_2 = function() {
    var var_0 = new oktgg_GLTFSparse$Indices();
    oktgg_GLTFSparse$Indices__init_0(var_0);
    return var_0;
};
function oktgg_GLTFSparse$Indices_read($this, $json) {
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $this.$bufferView2 = $json.$int0($rt_s(20));
    $json.$int($rt_s(266), $java.oktgg_GLTFSparse$Indices$read$1__init_($this));
    $this.$componentType0 = $json.$int0($rt_s(480));
}
$java.oktgg_GLTFSparse$Indices_setByteOffset = function($this, $_set___) {
    $this.$byteOffset3 = $_set___;
};
$java.oktgg_GLTFSparse$Indices__init_0 = function($this, $bufferView, $byteOffset, $componentType) {
    jl_Object__init_0($this);
    $this.$bufferView2 = $bufferView;
    $this.$byteOffset3 = $byteOffset;
    $this.$componentType0 = $componentType;
};
$java.oktgg_GLTFSparse$Indices__init_1 = function(var$0, var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 1)
        var$1 = (-1);
    if (var$4 & 2)
        var$2 = 0;
    if (var$4 & 4)
        var$3 = (-1);
    $java.oktgg_GLTFSparse$Indices__init_0(var$0, var$1, var$2, var$3);
};
function oktgg_GLTFSparse$Indices__init_0(var$0) {
    $java.oktgg_GLTFSparse$Indices__init_1(var$0, 0, 0, 0, 7, null);
}
function oooi_CollisionLibccd$ccd_convex_t() {
    oooi_CollisionLibccd$ccd_obj_t.call(this);
    this.$convex = null;
}
$java.oooi_CollisionLibccd$ccd_convex_t__init_ = function() {
    var var_0 = new oooi_CollisionLibccd$ccd_convex_t();
    oooi_CollisionLibccd$ccd_convex_t__init_0(var_0);
    return var_0;
};
function oooi_CollisionLibccd$ccd_convex_t__init_(var_0) {
    var var_1 = new oooi_CollisionLibccd$ccd_convex_t();
    $java.oooi_CollisionLibccd$ccd_convex_t__init_0(var_1, var_0);
    return var_1;
}
function oooi_CollisionLibccd$ccd_convex_t__init_0($this) {
    oooi_CollisionLibccd$ccd_obj_t__init_2($this, null);
}
$java.oooi_CollisionLibccd$ccd_convex_t__init_0 = function($this, $x0) {
    oooi_CollisionLibccd$ccd_convex_t__init_0($this);
};
function oktgg_GLTFScene() {
    var a = this; jl_Object.call(a);
    a.$name49 = null;
    a.$nodes3 = null;
    a.$gltf13 = null;
    a.$elementIndex12 = 0;
    a.$scene2 = null;
}
$java.oktgg_GLTFScene__init_0 = function(var_0, var_1, var_2) {
    var var_3 = new oktgg_GLTFScene();
    $java.oktgg_GLTFScene__init_1(var_3, var_0, var_1, var_2);
    return var_3;
};
$java.oktgg_GLTFScene__init_ = function(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new oktgg_GLTFScene();
    $java.oktgg_GLTFScene__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
};
function oktgg_GLTFScene_setName($this, $_set___) {
    kji_Intrinsics_checkParameterIsNotNull($_set___, $rt_s(15));
    $this.$name49 = $_set___;
}
function oktgg_GLTFScene_getNodes($this) {
    return $this.$nodes3;
}
$java.oktgg_GLTFScene_read = function($this, $json) {
    var $$this$forEach$iv, var$3, $element$iv, $it;
    kji_Intrinsics_checkParameterIsNotNull($json, $rt_s(16));
    $json.$string($rt_s(17), oktgg_GLTFScene$read$1__init_($this));
    $this.$scene2.$getObjects().$addAll(oktgg_GLTFScene_getGltf($this).$getObjects1());
    $$this$forEach$iv = oktgg_GLTFScene_getGltf($this).$getSkins();
    var$3 = $$this$forEach$iv.$iterator();
    while (var$3.$hasNext()) {
        $element$iv = var$3.$next();
        $it = $element$iv;
        $this.$scene2.$getArmatures().$add1(oktgg_GLTFSkin_getSkin($it));
    }
    $this.$nodes3.$clear();
    $json.$array($rt_s(1012), oktgg_GLTFScene$read$3__init_($this));
};
function oktgg_GLTFScene_getGltf($this) {
    return $this.$gltf13;
}
function oktgg_GLTFScene_getScene($this) {
    return $this.$scene2;
}
$java.oktgg_GLTFScene__init_1 = function($this, $gltf, $elementIndex, $scene) {
    kji_Intrinsics_checkParameterIsNotNull($gltf, $rt_s(23));
    kji_Intrinsics_checkParameterIsNotNull($scene, $rt_s(328));
    jl_Object__init_0($this);
    $this.$gltf13 = $gltf;
    $this.$elementIndex12 = $elementIndex;
    $this.$scene2 = $scene;
    $this.$name49 = $rt_s(6);
    $this.$nodes3 = ju_ArrayList__init_();
};
$java.oktgg_GLTFScene__init_2 = function(var$0, var$1, var$2, var$3, var$4, var$5) {
    if (var$4 & 4)
        var$3 = oktg_Scene__init_(null, null, 3, null);
    $java.oktgg_GLTFScene__init_1(var$0, var$1, var$2, var$3);
};
function oooi_CollisionLibccd$ccd_box_t() {
    oooi_CollisionLibccd$ccd_obj_t.call(this);
    this.$dim = null;
}
$java.oooi_CollisionLibccd$ccd_box_t__init_ = function() {
    var var_0 = new oooi_CollisionLibccd$ccd_box_t();
    oooi_CollisionLibccd$ccd_box_t__init_0(var_0);
    return var_0;
};
function oooi_CollisionLibccd$ccd_box_t__init_(var_0) {
    var var_1 = new oooi_CollisionLibccd$ccd_box_t();
    $java.oooi_CollisionLibccd$ccd_box_t__init_0(var_1, var_0);
    return var_1;
}
function oooi_CollisionLibccd$ccd_box_t__init_0($this) {
    oooi_CollisionLibccd$ccd_obj_t__init_2($this, null);
    $this.$dim = $rt_createDoubleArray(3);
}
$java.oooi_CollisionLibccd$ccd_box_t__init_0 = function($this, $x0) {
    oooi_CollisionLibccd$ccd_box_t__init_0($this);
};
function oktsp_MotionBlur$Companion() {
    jl_Object.call(this);
}
$java.oktsp_MotionBlur$Companion__init_ = function() {
    var var_0 = new oktsp_MotionBlur$Companion();
    oktsp_MotionBlur$Companion__init_0(var_0);
    return var_0;
};
function oktsp_MotionBlur$Companion__init_(var_0) {
    var var_1 = new oktsp_MotionBlur$Companion();
    $java.oktsp_MotionBlur$Companion__init_0(var_1, var_0);
    return var_1;
}
$java.oktsp_MotionBlur$Companion_velocity = function($this, $visualizeVelocity) {
    var $str, var$3;
    $str = $rt_s(6);
    if ($visualizeVelocity > 0.0) {
        var$3 = jl_StringBuilder__init_().$append($str).$append($rt_s(1587)).$toString();
        $str = jl_StringBuilder__init_().$append(var$3).$append($rt_s(1588)).$toString();
    }
    return $str;
};
function oktsp_MotionBlur$Companion_motionBlurCode($this, $numSamples, $visualizeVelocity) {
    var var$3;
    var$3 = jl_StringBuilder__init_().$append($rt_s(1589));
    var$3 = var$3.$append1($numSamples).$append($rt_s(1590));
    var$3 = var$3.$append1($numSamples).$append($rt_s(1591));
    var$3 = var$3.$append1($numSamples).$append($rt_s(1592));
    return var$3.$append($java.oktsp_MotionBlur$Companion_velocity($this, $visualizeVelocity)).$append($rt_s(1593)).$toString();
}
function oktsp_MotionBlur$Companion__init_0($this) {
    jl_Object__init_0($this);
}
$java.oktsp_MotionBlur$Companion__init_0 = function($this, $$constructor_marker) {
    oktsp_MotionBlur$Companion__init_0($this);
};
function oktu_DefaultLog() {
    var a = this; jl_Object.call(a);
    a.$infoEnabled = 0;
    a.$debugEnabled = 0;
    a.$errorEnabled = 0;
    a.$collectLogs = 0;
    a.$logs = null;
}
function oktu_DefaultLog__init_0() {
    var var_0 = new oktu_DefaultLog();
    oktu_DefaultLog__init_(var_0);
    return var_0;
}
$java.oktu_DefaultLog_getCollectLogs = function($this) {
    return $this.$collectLogs;
};
$java.oktu_DefaultLog_setCollectLogs = function($this, $_set___) {
    $this.$collectLogs = $_set___;
};
$java.oktu_DefaultLog_getLogs = function($this) {
    return $this.$logs;
};
$java.oktu_DefaultLog_info = function($this, $message, $exception, $tag) {
    kji_Intrinsics_checkParameterIsNotNull($message, $rt_s(466));
    kji_Intrinsics_checkParameterIsNotNull($tag, $rt_s(1136));
    if (!($tag.$length() <= 0 ? 0 : 1))
        jl_System_out().$println1($message);
    else
        jl_System_out().$println1(jl_StringBuilder__init_().$append($tag).$append($rt_s(11)).$append($message).$toString());
    if ($java.oktu_DefaultLog_getCollectLogs($this))
        $java.oktu_DefaultLog_getLogs($this).$add1($message);
    if ($exception !== null)
        $exception.$printStackTrace1();
};
function oktu_DefaultLog__init_($this) {
    jl_Object__init_0($this);
    $this.$infoEnabled = 1;
    $this.$debugEnabled = 1;
    $this.$errorEnabled = 1;
    $this.$logs = ju_ArrayList__init_();
}
$java.oktu_DefaultLog_info0 = function($this, $message, $tag) {
    kji_Intrinsics_checkParameterIsNotNull($message, $rt_s(466));
    kji_Intrinsics_checkParameterIsNotNull($tag, $rt_s(1136));
    oktu_ILog$DefaultImpls_info($this, $message, $tag);
};
function oktjj_JsonSimple3Object() {
    jl_Object.call(this);
    this.$source3 = null;
}
var oktjj_JsonSimple3Object_Companion = null;
function oktjj_JsonSimple3Object_$callClinit() {
    oktjj_JsonSimple3Object_$callClinit = $rt_eraseClinit(oktjj_JsonSimple3Object);
    $java.oktjj_JsonSimple3Object__clinit_();
}
$java.oktjj_JsonSimple3Object__init_ = function(var_0) {
    var var_1 = new oktjj_JsonSimple3Object();
    oktjj_JsonSimple3Object__init_(var_1, var_0);
    return var_1;
};
$java.oktjj_JsonSimple3Object_obj = function($this, $key) {
    var var$2, var$3;
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    var$2 = new oktjj_JsonSimple3Object;
    var$3 = $this.$source3.$get0($key);
    if (var$3 !== null) {
        oktjj_JsonSimple3Object__init_(var$2, var$3);
        return var$2;
    }
    $rt_throw(k_TypeCastException__init_($rt_s(1166)));
};
$java.oktjj_JsonSimple3Object_obj0 = function(var$0, var$1) {
    return $java.oktjj_JsonSimple3Object_obj(var$0, var$1);
};
$java.oktjj_JsonSimple3Object_array = function($this, $key) {
    var var$2, var$3;
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    var$2 = new oktjj_JsonSimple3Array;
    var$3 = $this.$source3.$get0($key);
    if (var$3 !== null) {
        oktjj_JsonSimple3Array__init_0(var$2, var$3);
        return var$2;
    }
    $rt_throw(k_TypeCastException__init_($rt_s(1594)));
};
$java.oktjj_JsonSimple3Object_array0 = function(var$0, var$1) {
    return $java.oktjj_JsonSimple3Object_array(var$0, var$1);
};
$java.oktjj_JsonSimple3Object_get = function($this, $key) {
    var var$2;
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    var$2 = $this.$source3.$get0($key);
    if (var$2 !== null)
        return var$2;
    $rt_throw(k_TypeCastException__init_($rt_s(1165)));
};
$java.oktjj_JsonSimple3Object_values = function($this, $call) {
    var var$2, $$this$forEach$iv, $element$iv, $it, var$6, var$7;
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    var$2 = $this.$source3.$entrySet();
    kji_Intrinsics_checkExpressionValueIsNotNull(var$2, $rt_s(1595));
    $$this$forEach$iv = var$2;
    var$2 = $$this$forEach$iv.$iterator();
    while (var$2.$hasNext()) {
        $element$iv = var$2.$next();
        $it = $element$iv;
        var$6 = $it.$getKey();
        kji_Intrinsics_checkExpressionValueIsNotNull(var$6, $rt_s(1596));
        var$7 = $it.$getValue();
        if (var$7 === null)
            $rt_throw(k_TypeCastException__init_($rt_s(1165)));
        $call.$invoke11(var$6, var$7);
    }
};
$java.oktjj_JsonSimple3Object_contains = function($this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return $this.$source3.$get0($key) === null ? 0 : 1;
};
function oktjj_JsonSimple3Object__init_($this, $source) {
    oktjj_JsonSimple3Object_$callClinit();
    kji_Intrinsics_checkParameterIsNotNull($source, $rt_s(808));
    jl_Object__init_0($this);
    $this.$source3 = $source;
}
$java.oktjj_JsonSimple3Object__clinit_ = function() {
    oktjj_JsonSimple3Object_Companion = oktjj_JsonSimple3Object$Companion__init_1(null);
};
$java.oktjj_JsonSimple3Object_obj1 = function($this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    return oktj_IJsonObject$DefaultImpls_obj($this, $key, $call);
};
$java.oktjj_JsonSimple3Object_array1 = function($this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    return oktj_IJsonObject$DefaultImpls_array($this, $key, $call);
};
$java.oktjj_JsonSimple3Object_get0 = function($this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    return oktj_IJsonObject$DefaultImpls_get($this, $key, $call);
};
$java.oktjj_JsonSimple3Object_objOrNull = function($this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return oktj_IJsonObject$DefaultImpls_objOrNull($this, $key);
};
$java.oktjj_JsonSimple3Object_arrayOrNull = function($this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return oktj_IJsonObject$DefaultImpls_arrayOrNull($this, $key);
};
$java.oktjj_JsonSimple3Object_string = function($this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return oktj_IJsonObject$DefaultImpls_string($this, $key);
};
$java.oktjj_JsonSimple3Object_string0 = function($this, $key, $default) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($default, $rt_s(1309));
    return oktj_IJsonObject$DefaultImpls_string0($this, $key, $default);
};
$java.oktjj_JsonSimple3Object_string1 = function($this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktj_IJsonObject$DefaultImpls_string1($this, $key, $call);
};
$java.oktjj_JsonSimple3Object_float = function($this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return oktj_IJsonObject$DefaultImpls_float($this, $key);
};
$java.oktjj_JsonSimple3Object_float0 = function($this, $key, $default) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return oktj_IJsonObject$DefaultImpls_float0($this, $key, $default);
};
$java.oktjj_JsonSimple3Object_float1 = function($this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktj_IJsonObject$DefaultImpls_float1($this, $key, $call);
};
$java.oktjj_JsonSimple3Object_int = function($this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return oktj_IJsonObject$DefaultImpls_int($this, $key);
};
$java.oktjj_JsonSimple3Object_int0 = function($this, $key, $default) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return oktj_IJsonObject$DefaultImpls_int0($this, $key, $default);
};
$java.oktjj_JsonSimple3Object_int1 = function($this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktj_IJsonObject$DefaultImpls_int1($this, $key, $call);
};
$java.oktjj_JsonSimple3Object_bool = function($this, $key) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    return oktj_IJsonObject$DefaultImpls_bool($this, $key);
};
$java.oktjj_JsonSimple3Object_bool0 = function($this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktj_IJsonObject$DefaultImpls_bool0($this, $key, $call);
};
$java.oktjj_JsonSimple3Object_ints = function($this, $call) {
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktj_IJsonObject$DefaultImpls_ints($this, $call);
};
$java.oktjj_JsonSimple3Object_ints0 = function($this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktj_IJsonObject$DefaultImpls_ints0($this, $key, $call);
};
$java.oktjj_JsonSimple3Object_floats = function($this, $key, $call) {
    kji_Intrinsics_checkParameterIsNotNull($key, $rt_s(1308));
    kji_Intrinsics_checkParameterIsNotNull($call, $rt_s(69));
    oktj_IJsonObject$DefaultImpls_floats($this, $key, $call);
};
function oooi_Objects_H$dxQuickStepParameters() {
    var a = this; oooi_Objects_H$CloneableParameter.call(a);
    a.$num_iterations = 0;
    a.$w2 = 0.0;
}
function oooi_Objects_H$dxQuickStepParameters__init_() {
    var var_0 = new oooi_Objects_H$dxQuickStepParameters();
    oooi_Objects_H$dxQuickStepParameters__init_0(var_0);
    return var_0;
}
function oooi_Objects_H$dxQuickStepParameters__init_0($this) {
    oooi_Objects_H$CloneableParameter__init_2($this, null);
    $this.$num_iterations = 20;
    $this.$w2 = 1.3;
}
function oooi_CollideConvexTrimesh() {
    jl_Object.call(this);
}
function oooi_CollideConvexTrimesh__init_() {
    var var_0 = new oooi_CollideConvexTrimesh();
    oooi_CollideConvexTrimesh__init_0(var_0);
    return var_0;
}
function oooi_CollideConvexTrimesh__init_0($this) {
    jl_Object__init_0($this);
}
$java.oooi_CollideConvexTrimesh_dColliderFn = function($this, $o1, $o2, $flags, $contacts) {
    var $trimesh, $ptrimesh, $test_aabb, $aabb, $collision_result, $contactcount, $boxesresult, $collideFn;
    $trimesh = $o2;
    $ptrimesh = $trimesh.$m_collision_trimesh;
    $test_aabb = oooig_GimGeometry$aabb3f__init_();
    $aabb = $o1.$getAABB();
    $test_aabb.$minX = $aabb.$getMin0();
    $test_aabb.$maxX = $aabb.$getMax0();
    $test_aabb.$minY = $aabb.$getMin1();
    $test_aabb.$maxY = $aabb.$getMax1();
    $test_aabb.$minZ = $aabb.$getMin2();
    $test_aabb.$maxZ = $aabb.$getMax2();
    $collision_result = oooig_GimDynArrayInt_GIM_CREATE_BOXQUERY_LIST();
    $ptrimesh.$getAabbSet().$gim_aabbset_box_collision($test_aabb, $collision_result);
    $contactcount = 0;
    if ($collision_result.$size()) {
        $boxesresult = ju_Arrays_copyOf0($collision_result.$GIM_DYNARRAY_POINTER0(), $collision_result.$size());
        $ptrimesh.$gim_trimesh_locks_work_data();
        $collideFn = oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD__init_();
        $contactcount = $collideFn.$collide1($o1, $o2, $boxesresult, $flags, $contacts);
        $ptrimesh.$gim_trimesh_unlocks_work_data();
    }
    $collision_result.$GIM_DYNARRAY_DESTROY();
    return $contactcount;
};
function oooi_ErrorHdl() {
    jl_Object.call(this);
}
$java.oooi_ErrorHdl_error_function = null;
$java.oooi_ErrorHdl_debug_function = null;
$java.oooi_ErrorHdl_message_function = null;
$java.oooi_ErrorHdl_$callClinit = function() {
    $java.oooi_ErrorHdl_$callClinit = $rt_eraseClinit(oooi_ErrorHdl);
    $java.oooi_ErrorHdl__clinit_();
};
$java.oooi_ErrorHdl__init_ = function() {
    var var_0 = new oooi_ErrorHdl();
    oooi_ErrorHdl__init_(var_0);
    return var_0;
};
function oooi_ErrorHdl__init_($this) {
    $java.oooi_ErrorHdl_$callClinit();
    jl_Object__init_0($this);
}
function oooi_ErrorHdl_dDebug($num, $msg, $ap) {
    $java.oooi_ErrorHdl_$callClinit();
    if ($java.oooi_ErrorHdl_debug_function !== null)
        $java.oooi_ErrorHdl_debug_function.$call3($num, $msg, $ap);
    jl_System_out().$println1(jl_StringBuilder__init_().$append($rt_s(1597)).$append1($num).$append($rt_s(11)).$append($msg).$toString());
}
function oooi_ErrorHdl_dMessage($num, $msg, $ap) {
    $java.oooi_ErrorHdl_$callClinit();
    if ($java.oooi_ErrorHdl_message_function !== null)
        $java.oooi_ErrorHdl_message_function.$call3($num, $msg, $ap);
    else
        jl_System_out().$println1(jl_StringBuilder__init_().$append($rt_s(1598)).$append1($num).$append($rt_s(11)).$append($msg).$toString());
}
$java.oooi_ErrorHdl__clinit_ = function() {
    $java.oooi_ErrorHdl_error_function = null;
    $java.oooi_ErrorHdl_debug_function = null;
    $java.oooi_ErrorHdl_message_function = null;
};
function ki_ProgressionUtilKt() {
    jl_Object.call(this);
}
$java.ki_ProgressionUtilKt_mod = function($a, $b) {
    var $mod;
    $mod = $a % $b | 0;
    if ($mod < 0)
        $mod = $mod + $b | 0;
    return $mod;
};
$java.ki_ProgressionUtilKt_differenceModulo = function($a, $b, $c) {
    return $java.ki_ProgressionUtilKt_mod($java.ki_ProgressionUtilKt_mod($a, $c) - $java.ki_ProgressionUtilKt_mod($b, $c) | 0, $c);
};
function ki_ProgressionUtilKt_getProgressionLastElement($start, $end, $step) {
    if ($step <= 0) {
        if ($step >= 0)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(1599)));
        if ($start > $end)
            $end = $end + $java.ki_ProgressionUtilKt_differenceModulo($start, $end,  -$step) | 0;
    } else if ($start < $end)
        $end = $end - $java.ki_ProgressionUtilKt_differenceModulo($end, $start, $step) | 0;
    return $end;
}
function jur_AbstractCharClass$LazySpecialsBlock() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazySpecialsBlock__init_() {
    var var_0 = new jur_AbstractCharClass$LazySpecialsBlock();
    jur_AbstractCharClass$LazySpecialsBlock__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazySpecialsBlock__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_0($this);
}
$java.jur_AbstractCharClass$LazySpecialsBlock_computeValue = function($this) {
    return jur_CharClass__init_().$add0(65279, 65279).$add0(65520, 65533);
};
function oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext() {
    var a = this; jl_Object.call(a);
    a.$m_stepperCallContext7 = null;
    a.$m_jointinfos1 = null;
    a.$m_stage0Outputs0 = null;
}
$java.oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext__init_0 = function() {
    var var_0 = new oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext();
    oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext__init_(var_0);
    return var_0;
};
$java.oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext();
    $java.oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext__init_1(var_1, var_0);
    return var_1;
};
function oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext__init_($this) {
    jl_Object__init_0($this);
}
$java.oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext_Initialize = function($this, $stepperCallContext, $jointinfos, $stage0Outputs) {
    $this.$m_stepperCallContext7 = $stepperCallContext;
    $this.$m_jointinfos1 = $jointinfos;
    $this.$m_stage0Outputs0 = $stage0Outputs;
};
$java.oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext__init_1 = function($this, $x0) {
    oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext__init_($this);
};
function oooi_DxQuickStep$7() {
    jl_Object.call(this);
    this.$val$stage2CallContext = null;
}
$java.oooi_DxQuickStep$7__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$7();
    $java.oooi_DxQuickStep$7__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$7__init_0 = function($this, var$1) {
    $this.$val$stage2CallContext = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$7_run = function($this) {
    $java.oooi_DxQuickStep_access$1400($this.$val$stage2CallContext);
};
function oooi_DxQuickStep$6() {
    var a = this; jl_Object.call(a);
    a.$val$stage2CallContext0 = null;
    a.$val$stage2bSync = null;
}
$java.oooi_DxQuickStep$6__init_ = function(var_0, var_1) {
    var var_2 = new oooi_DxQuickStep$6();
    $java.oooi_DxQuickStep$6__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.oooi_DxQuickStep$6__init_0 = function($this, var$1, var$2) {
    $this.$val$stage2CallContext0 = var$1;
    $this.$val$stage2bSync = var$2;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$6_run = function($this) {
    $java.oooi_DxQuickStep_access$1300($this.$val$stage2CallContext0, $this.$val$stage2bSync);
};
function oooi_DxQuickStep$5() {
    var a = this; jl_Object.call(a);
    a.$val$stage2CallContext1 = null;
    a.$val$stage3 = null;
}
$java.oooi_DxQuickStep$5__init_ = function(var_0, var_1) {
    var var_2 = new oooi_DxQuickStep$5();
    $java.oooi_DxQuickStep$5__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.oooi_DxQuickStep$5__init_0 = function($this, var$1, var$2) {
    $this.$val$stage2CallContext1 = var$1;
    $this.$val$stage3 = var$2;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$5_run = function($this) {
    $java.oooi_DxQuickStep_access$1200($this.$val$stage2CallContext1, $this.$val$stage3);
};
function oooi_DxQuickStep$4() {
    jl_Object.call(this);
    this.$val$stage3CallContext = null;
}
$java.oooi_DxQuickStep$4__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$4();
    $java.oooi_DxQuickStep$4__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$4__init_0 = function($this, var$1) {
    $this.$val$stage3CallContext = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$4_run = function($this) {
    $java.oooi_DxQuickStep_access$1100($this.$val$stage3CallContext);
};
function oooi_DxQuickStep$3() {
    var a = this; jl_Object.call(a);
    a.$val$stage0BodiesCallContext = null;
    a.$this$0262 = null;
}
$java.oooi_DxQuickStep$3__init_ = function(var_0, var_1) {
    var var_2 = new oooi_DxQuickStep$3();
    $java.oooi_DxQuickStep$3__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.oooi_DxQuickStep$3__init_0 = function($this, $this$0, var$2) {
    $this.$this$0262 = $this$0;
    $this.$val$stage0BodiesCallContext = var$2;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$3_run = function($this) {
    $java.oooi_DxQuickStep_access$700($this.$val$stage0BodiesCallContext);
};
function oooi_DxQuickStep$2() {
    var a = this; jl_Object.call(a);
    a.$val$stage0JointsCallContext = null;
    a.$this$0263 = null;
}
$java.oooi_DxQuickStep$2__init_ = function(var_0, var_1) {
    var var_2 = new oooi_DxQuickStep$2();
    $java.oooi_DxQuickStep$2__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.oooi_DxQuickStep$2__init_0 = function($this, $this$0, var$2) {
    $this.$this$0263 = $this$0;
    $this.$val$stage0JointsCallContext = var$2;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$2_run = function($this) {
    $java.oooi_DxQuickStep_access$600($this.$val$stage0JointsCallContext);
};
function oooi_DxQuickStep$1() {
    var a = this; jl_Object.call(a);
    a.$val$stage1CallContext = null;
    a.$this$0264 = null;
}
$java.oooi_DxQuickStep$1__init_ = function(var_0, var_1) {
    var var_2 = new oooi_DxQuickStep$1();
    $java.oooi_DxQuickStep$1__init_0(var_2, var_0, var_1);
    return var_2;
};
$java.oooi_DxQuickStep$1__init_0 = function($this, $this$0, var$2) {
    $this.$this$0264 = $this$0;
    $this.$val$stage1CallContext = var$2;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$1_run = function($this) {
    $java.oooi_DxQuickStep_access$500($this.$val$stage1CallContext);
};
function oktp_IShape$Companion() {
    jl_Object.call(this);
}
var oktp_IShape$Companion_$$INSTANCE = null;
function oktp_IShape$Companion_$callClinit() {
    oktp_IShape$Companion_$callClinit = $rt_eraseClinit(oktp_IShape$Companion);
    $java.oktp_IShape$Companion__clinit_();
}
$java.oktp_IShape$Companion__init_ = function() {
    var var_0 = new oktp_IShape$Companion();
    oktp_IShape$Companion__init_(var_0);
    return var_0;
};
function oktp_IShape$Companion__init_($this) {
    oktp_IShape$Companion_$callClinit();
    jl_Object__init_0($this);
}
$java.oktp_IShape$Companion__clinit_ = function() {
    oktp_IShape$Companion_$$INSTANCE = $java.oktp_IShape$Companion__init_();
};
function ju_Arrays$ArrayAsList() {
    ju_AbstractList.call(this);
    this.$array8 = null;
}
function ju_Arrays$ArrayAsList__init_(var_0) {
    var var_1 = new ju_Arrays$ArrayAsList();
    $java.ju_Arrays$ArrayAsList__init_(var_1, var_0);
    return var_1;
}
$java.ju_Arrays$ArrayAsList__init_ = function($this, $array) {
    ju_AbstractList__init_0($this);
    $this.$array8 = $array;
};
$java.ju_Arrays$ArrayAsList_get = function($this, $index) {
    return $this.$array8.data[$index];
};
$java.ju_Arrays$ArrayAsList_size = function($this) {
    return $this.$array8.data.length;
};
function oooi_DxQuickStep$9() {
    jl_Object.call(this);
    this.$val$stage2CallContext2 = null;
}
$java.oooi_DxQuickStep$9__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$9();
    $java.oooi_DxQuickStep$9__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$9__init_0 = function($this, var$1) {
    $this.$val$stage2CallContext2 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$9_run = function($this) {
    $java.oooi_DxQuickStep_access$1600($this.$val$stage2CallContext2);
};
function oooi_DxQuickStep$8() {
    jl_Object.call(this);
    this.$val$stage2CallContext3 = null;
}
$java.oooi_DxQuickStep$8__init_ = function(var_0) {
    var var_1 = new oooi_DxQuickStep$8();
    $java.oooi_DxQuickStep$8__init_0(var_1, var_0);
    return var_1;
};
$java.oooi_DxQuickStep$8__init_0 = function($this, var$1) {
    $this.$val$stage2CallContext3 = var$1;
    jl_Object__init_0($this);
};
$java.oooi_DxQuickStep$8_run = function($this) {
    $java.oooi_DxQuickStep_access$1500($this.$val$stage2CallContext3);
};
$rt_packages([-1, "com", 0, "github", 1, "cliftonlabs", 2, "json_simple", -1, "java", 4, "util", 5, "regex", 4, "nio", 7, "charset", 4, "io", 4, "lang", -1, "org", 11, "ksdfv", 12, "thelema", 13, "test", 14, "shaders", 15, "glsl", 13, "mesh", 11, "ode4j", 18, "math", -1, "kotlin", 20, "jvm", 21, "internal"
]);
$rt_metadata([jl_Object, "Object", 10, 0, [], 0, 3, 0, ["$isEmptyMonitor", function() { return jl_Object_isEmptyMonitor(this); }, "$deleteMonitor", function() { jl_Object_deleteMonitor(this); }, "$getClass0", function() { return jl_Object_getClass(this); }, "$hashCode", function() { return jl_Object_hashCode(this); }, "$equals0", function(var_1) { return jl_Object_equals(this, var_1); }, "$toString", function() { return jl_Object_toString(this); }, "$identity", function() { return jl_Object_identity(this); },
"$clone", function() { return jl_Object_clone(this); }],
oktt_Test, 0, jl_Object, [], 3, 3, 0, 0,
okttm_FrustumMeshBuilderTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return okttm_FrustumMeshBuilderTest_getName(this); }, "$testMain", function() { okttm_FrustumMeshBuilderTest_testMain(this); }],
jur_AbstractCharClass$LazyCharClass, 0, jl_Object, [], 1, 0, 0, ["$getValue0", function(var_1) { return jur_AbstractCharClass$LazyCharClass_getValue(this, var_1); }],
jur_AbstractCharClass$LazyBlank, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyBlank_computeValue(this); }],
k_Function, 0, jl_Object, [], 3, 3, 0, 0,
kji_FunctionBase, 0, jl_Object, [k_Function], 3, 3, 0, 0,
ji_Serializable, 0, jl_Object, [], 3, 3, 0, 0,
kji_Lambda, 0, jl_Object, [kji_FunctionBase, ji_Serializable], 1, 3, 0, ["$getArity", function() { return kji_Lambda_getArity(this); }],
kjf_Function1, 0, jl_Object, [k_Function], 3, 3, 0, 0,
oktt_GLTFLoaderAnimTest$testMain$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktt_GLTFLoaderAnimTest$testMain$1_$callClinit, ["$invoke1", function(var_1) { return oktt_GLTFLoaderAnimTest$testMain$1_invoke(this, var_1); }, "$invoke", function(var_1) { oktt_GLTFLoaderAnimTest$testMain$1_invoke0(this, var_1); }],
oktm_IVertexBuffer, 0, jl_Object, [], 3, 3, oktm_IVertexBuffer_$callClinit, 0,
oktm_VertexBufferObject, 0, jl_Object, [oktm_IVertexBuffer], 4, 3, 0, ["$getFloatBuffer", function() { return oktm_VertexBufferObject_getFloatBuffer(this); }, "$getBytes", function() { return oktm_VertexBufferObject_getBytes(this); }, "$getHandle", function() { return oktm_VertexBufferObject_getHandle(this); }, "$setHandle", function(var_1) { oktm_VertexBufferObject_setHandle(this, var_1); }, "$isBufferNeedReload0", function() { return oktm_VertexBufferObject_isBufferNeedReload(this); }, "$setBufferNeedReload",
function(var_1) { oktm_VertexBufferObject_setBufferNeedReload(this, var_1); }, "$initGpuObjects", function() { oktm_VertexBufferObject_initGpuObjects(this); }, "$loadBufferToGpu", function() { oktm_VertexBufferObject_loadBufferToGpu(this); }, "$bind5", function(var_1) { oktm_VertexBufferObject_bind(this, var_1); }, "$getVertexInputs", function() { return oktm_VertexBufferObject_getVertexInputs(this); }, "$getInstancesToRender", function() { return oktm_VertexBufferObject_getInstancesToRender(this); }, "$getUsage",
function() { return oktm_VertexBufferObject_getUsage(this); }, "$getSize", function() { return oktm_VertexBufferObject_getSize(this); }],
jl_Number, 0, jl_Object, [ji_Serializable], 1, 3, 0, ["$shortValue", function() { return jl_Number_shortValue(this); }],
jl_Comparable, 0, jl_Object, [], 3, 3, 0, 0,
jl_Integer, 0, jl_Number, [jl_Comparable], 0, 3, jl_Integer_$callClinit, ["$intValue", function() { return jl_Integer_intValue(this); }, "$floatValue", function() { return jl_Integer_floatValue(this); }, "$toString", function() { return jl_Integer_toString1(this); }, "$hashCode", function() { return jl_Integer_hashCode(this); }, "$equals0", function(var_1) { return jl_Integer_equals(this, var_1); }, "$compareTo", function(var_1) { return jl_Integer_compareTo(this, var_1); }, "$compareTo6", function(var_1) {
return jl_Integer_compareTo0(this, var_1); }],
oktj_IJsonObject, 0, jl_Object, [], 3, 3, 0, 0,
oktj_IJsonObjectIO, 0, jl_Object, [], 3, 3, 0, 0,
oktgg_IGLTFArrayElement, 0, jl_Object, [oktj_IJsonObjectIO], 3, 3, 0, 0,
oktgg_GLTFImage, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, 0, ["$getName", function() { return oktgg_GLTFImage_getName(this); }, "$setName", function(var_1) { oktgg_GLTFImage_setName(this, var_1); }, "$setUri", function(var_1) { oktgg_GLTFImage_setUri(this, var_1); }, "$setMimeType", function(var_1) { oktgg_GLTFImage_setMimeType(this, var_1); }, "$setBufferView", function(var_1) { oktgg_GLTFImage_setBufferView(this, var_1); }, "$read", function(var_1) { oktgg_GLTFImage_read(this, var_1);
}, "$getGltf", function() { return oktgg_GLTFImage_getGltf(this); }, "$getElementIndex", function() { return oktgg_GLTFImage_getElementIndex(this); }, "$getImage", function() { return oktgg_GLTFImage_getImage(this); }],
jur_AbstractCharClass$LazyAlpha, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyAlpha_computeValue(this); }],
oktt_GLTFModel$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktt_GLTFModel$3_invoke(this, var_1); }, "$invoke0", function(var_1) { oktt_GLTFModel$3_invoke0(this, var_1); }],
oktt_ITexture, 0, jl_Object, [], 3, 3, 0, 0,
oktt_ITexture2D, 0, jl_Object, [oktt_ITexture], 3, 3, 0, 0,
jl_CharSequence, 0, jl_Object, [], 3, 3, 0, 0,
oktt_GLTFModel$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktt_GLTFModel$1_$callClinit, ["$invoke1", function(var_1) { return oktt_GLTFModel$1_invoke(this, var_1); }, "$invoke", function(var_1) { oktt_GLTFModel$1_invoke0(this, var_1); }],
oktd_IDataArray, 0, jl_Object, [], 3, 3, 0, 0,
oktt_TvmArrayBufferView, 0, jl_Object, [oktd_IDataArray], 1, 3, 0, ["$getSourceObject0", function() { return oktt_TvmArrayBufferView_getSourceObject(this); }, "$getPosition", function() { return oktt_TvmArrayBufferView_getPosition(this); }, "$setPosition", function(var_1) { oktt_TvmArrayBufferView_setPosition(this, var_1); }, "$getCapacity", function() { return oktt_TvmArrayBufferView_getCapacity(this); }],
oktd_IByteData, 0, jl_Object, [oktd_IDataArray], 3, 3, 0, 0,
oktt_TvmUInt8Array, 0, oktt_TvmArrayBufferView, [oktd_IByteData], 4, 3, oktt_TvmUInt8Array_$callClinit, ["$setOrder", function(var_1) { oktt_TvmUInt8Array_setOrder(this, var_1); }, "$getArray", function() { return oktt_TvmUInt8Array_getArray(this); }, "$getSize", function() { return oktt_TvmUInt8Array_getSize(this); }, "$setSize", function(var_1) { oktt_TvmUInt8Array_setSize(this, var_1); }, "$set", function(var_1, var_2) { oktt_TvmUInt8Array_set(this, var_1, var_2); }, "$set53", function(var_1, var_2) { oktt_TvmUInt8Array_set0(this,
var_1, var_2); }, "$get2", function(var_1) { return oktt_TvmUInt8Array_get(this, var_1); }, "$get1", function(var_1) { return oktt_TvmUInt8Array_get0(this, var_1); }, "$get3", function() { return oktt_TvmUInt8Array_get1(this); }, "$get15", function() { return oktt_TvmUInt8Array_get2(this); }, "$put", function(var_1) { oktt_TvmUInt8Array_put(this, var_1); }, "$put8", function(var_1) { oktt_TvmUInt8Array_put0(this, var_1); }, "$byteView", function() { return oktt_TvmUInt8Array_byteView(this); }, "$shortView",
function() { return oktt_TvmUInt8Array_shortView0(this); }, "$intView", function() { return oktt_TvmUInt8Array_intView0(this); }, "$floatView", function() { return oktt_TvmUInt8Array_floatView0(this); }, "$readFloat", function(var_1) { return oktt_TvmUInt8Array_readFloat(this, var_1); }, "$put21", function(var_1) { oktt_TvmUInt8Array_put1(this, var_1); }, "$put2", function(var_1, var_2) { oktt_TvmUInt8Array_put2(this, var_1, var_2); }, "$put10", function(var_1, var_2) { oktt_TvmUInt8Array_put3(this, var_1, var_2);
}, "$toInt0", function(var_1) { return oktt_TvmUInt8Array_toInt(this, var_1); }],
kjf_Function0, 0, jl_Object, [k_Function], 3, 3, 0, 0,
okttsg_GBufferTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return okttsg_GBufferTest$testMain$1_invoke(this); }, "$invoke2", function() { okttsg_GBufferTest$testMain$1_invoke0(this); }],
oooig_GimTriCollision$GIM_TRIANGLE_DATA, 0, jl_Object, [], 0, 0, 0, 0,
jur_AbstractCharClass$LazyCategory, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyCategory_computeValue(this); }],
oktm_ScreenQuad$TextureRenderer$render$1, "ScreenQuad$TextureRenderer$render$1", 17, kji_Lambda, [kjf_Function1], 4, 0, oktm_ScreenQuad$TextureRenderer$render$1_$callClinit, ["$invoke1", function(var_1) { return oktm_ScreenQuad$TextureRenderer$render$1_invoke(this, var_1); }, "$invoke3", function(var_1) { oktm_ScreenQuad$TextureRenderer$render$1_invoke0(this, var_1); }],
oktsg_UVNode$Companion, 0, jl_Object, [], 4, 3, 0, 0,
jur_AbstractSet, 0, jl_Object, [], 1, 0, jur_AbstractSet_$callClinit, ["$find", function(var_1, var_2, var_3) { return jur_AbstractSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_AbstractSet_findBack(this, var_1, var_2, var_3, var_4); }, "$setType", function(var_1) { jur_AbstractSet_setType(this, var_1); }, "$getType", function() { return jur_AbstractSet_getType(this); }, "$getNext", function() { return jur_AbstractSet_getNext(this); }, "$setNext", function(var_1)
{ jur_AbstractSet_setNext(this, var_1); }, "$first", function(var_1) { return jur_AbstractSet_first(this, var_1); }, "$processBackRefReplacement", function() { return jur_AbstractSet_processBackRefReplacement(this); }, "$processSecondPass", function() { jur_AbstractSet_processSecondPass(this); }],
jur_FSet, 0, jur_AbstractSet, [], 0, 0, jur_FSet_$callClinit, ["$matches", function(var_1, var_2, var_3) { return jur_FSet_matches(this, var_1, var_2, var_3); }, "$getGroupIndex", function() { return jur_FSet_getGroupIndex(this); }, "$hasConsumed", function(var_1) { return jur_FSet_hasConsumed(this, var_1); }],
jur_BehindFSet, 0, jur_FSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_BehindFSet_matches(this, var_1, var_2, var_3); }],
kt_SystemProperties, 0, jl_Object, [], 4, 0, kt_SystemProperties_$callClinit, 0,
okti_IMouseListener, 0, jl_Object, [], 3, 3, 0, 0,
oktts_BloomBaseTest$testMain$1, 0, jl_Object, [okti_IMouseListener], 4, 3, 0, ["$buttonUp", function(var_1, var_2, var_3, var_4) { oktts_BloomBaseTest$testMain$1_buttonUp(this, var_1, var_2, var_3, var_4); }, "$buttonDown0", function(var_1, var_2, var_3, var_4) { oktts_BloomBaseTest$testMain$1_buttonDown(this, var_1, var_2, var_3, var_4); }, "$dragged0", function(var_1, var_2, var_3) { oktts_BloomBaseTest$testMain$1_dragged(this, var_1, var_2, var_3); }, "$moved0", function(var_1, var_2) { oktts_BloomBaseTest$testMain$1_moved(this,
var_1, var_2); }, "$scrolled0", function(var_1) { oktts_BloomBaseTest$testMain$1_scrolled(this, var_1); }],
oktts_BloomBaseTest$testMain$2, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktts_BloomBaseTest$testMain$2_invoke(this); }, "$invoke2", function() { oktts_BloomBaseTest$testMain$2_invoke0(this); }],
oktgg_GLTFNode, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, 0, ["$setCamera", function(var_1) { oktgg_GLTFNode_setCamera(this, var_1); }, "$getChildren", function() { return oktgg_GLTFNode_getChildren(this); }, "$getSkin", function() { return oktgg_GLTFNode_getSkin(this); }, "$setSkin", function(var_1) { oktgg_GLTFNode_setSkin(this, var_1); }, "$getMesh0", function() { return oktgg_GLTFNode_getMesh(this); }, "$setMesh", function(var_1) { oktgg_GLTFNode_setMesh(this, var_1); }, "$getWeights",
function() { return oktgg_GLTFNode_getWeights(this); }, "$getName", function() { return oktgg_GLTFNode_getName(this); }, "$setName", function(var_1) { oktgg_GLTFNode_setName(this, var_1); }, "$read", function(var_1) { oktgg_GLTFNode_read(this, var_1); }, "$getGltf0", function() { return oktgg_GLTFNode_getGltf(this); }, "$getElementIndex", function() { return oktgg_GLTFNode_getElementIndex(this); }, "$getNode", function() { return oktgg_GLTFNode_getNode(this); }],
jur_JointSet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_JointSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_JointSet_setNext(this, var_1); }, "$first", function(var_1) { return jur_JointSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_JointSet_hasConsumed(this, var_1); }, "$processSecondPass", function() { jur_JointSet_processSecondPass(this); }],
jur_LowHighSurrogateRangeSet, 0, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_LowHighSurrogateRangeSet_setNext(this, var_1); }, "$matches", function(var_1, var_2, var_3) { return jur_LowHighSurrogateRangeSet_matches(this, var_1, var_2, var_3); }],
oktg_ShaderChannel, 0, jl_Object, [], 4, 3, oktg_ShaderChannel_$callClinit, ["$newId", function() { return oktg_ShaderChannel_newId(this); }, "$getDefault", function() { return oktg_ShaderChannel_getDefault(this); }, "$getVelocity", function() { return oktg_ShaderChannel_getVelocity(this); }, "$getDepth1", function() { return oktg_ShaderChannel_getDepth(this); }],
oktt_Texture2DTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktt_Texture2DTest_getName(this); }, "$testMain", function() { oktt_Texture2DTest_testMain(this); }],
jl_Throwable, 0, jl_Object, [], 0, 3, 0, ["$fillInStackTrace", function() { return jl_Throwable_fillInStackTrace(this); }, "$getMessage", function() { return jl_Throwable_getMessage(this); }, "$getLocalizedMessage", function() { return jl_Throwable_getLocalizedMessage(this); }, "$initCause", function(var_1) { return jl_Throwable_initCause(this, var_1); }, "$printStackTrace1", function() { jl_Throwable_printStackTrace(this); }, "$printStackTrace", function(var_1) { jl_Throwable_printStackTrace0(this, var_1);
}, "$printStackTrace0", function(var_1) { jl_Throwable_printStackTrace1(this, var_1); }, "$getStackTrace", function() { return jl_Throwable_getStackTrace(this); }, "$setStackTrace", function(var_1) { jl_Throwable_setStackTrace(this, var_1); }],
jl_Exception, 0, jl_Throwable, [], 0, 3, 0, 0]);
$rt_metadata([jl_RuntimeException, "RuntimeException", 10, jl_Exception, [], 0, 3, 0, 0,
jl_ClassCastException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
ooo_DColliderFn, 0, jl_Object, [], 3, 3, 0, 0,
oooi_DxConvex$CollideRayConvex, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideRayConvex", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxConvex$CollideRayConvex_dCollideRayConvex(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxConvex$CollideRayConvex_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktu_IPath, 0, jl_Object, [], 3, 3, oktu_IPath_$callClinit, 0,
oktgn_ITransformNode, 0, jl_Object, [oktu_IPath], 3, 3, oktgn_ITransformNode_$callClinit, 0,
oktgc_ICamera, 0, jl_Object, [oktgn_ITransformNode], 3, 3, oktgc_ICamera_$callClinit, 0,
oktgc_CameraAdapter, 0, jl_Object, [oktgc_ICamera], 1, 3, oktgc_CameraAdapter_$callClinit, ["$getPreviousViewProjectionMatrix0", function() { return oktgc_CameraAdapter_getPreviousViewProjectionMatrix(this); }, "$getInverseViewProjectionMatrix", function() { return oktgc_CameraAdapter_getInverseViewProjectionMatrix(this); }, "$getFrustum", function() { return oktgc_CameraAdapter_getFrustum(this); }, "$update0", function() { oktgc_CameraAdapter_update(this); }, "$getAspectRatio0", function() { return oktgc_CameraAdapter_getAspectRatio(this);
}, "$dst23", function(var_1, var_2) { return oktgc_CameraAdapter_dst2(this, var_1, var_2); }, "$getPosition4", function(var_1, var_2) { return oktgc_CameraAdapter_getPosition(this, var_1, var_2); }, "$lookAt0", function(var_1, var_2, var_3) { oktgc_CameraAdapter_lookAt(this, var_1, var_2, var_3); }, "$updatePreviousTransform0", function() { oktgc_CameraAdapter_updatePreviousTransform(this); }, "$updateTransform0", function(var_1) { oktgc_CameraAdapter_updateTransform(this, var_1); }],
oktgc_Camera, 0, oktgc_CameraAdapter, [], 4, 3, 0, ["$getViewMatrix", function() { return oktgc_Camera_getViewMatrix(this); }, "$getProjectionMatrix", function() { return oktgc_Camera_getProjectionMatrix(this); }, "$getViewProjectionMatrix", function() { return oktgc_Camera_getViewProjectionMatrix(this); }, "$getPosition0", function() { return oktgc_Camera_getPosition(this); }, "$getDirection", function() { return oktgc_Camera_getDirection(this); }, "$getUp", function() { return oktgc_Camera_getUp(this); },
"$getNear", function() { return oktgc_Camera_getNear(this); }, "$setNear", function(var_1) { oktgc_Camera_setNear(this, var_1); }, "$getFar", function() { return oktgc_Camera_getFar(this); }, "$setFar", function(var_1) { oktgc_Camera_setFar(this, var_1); }, "$getFov", function() { return oktgc_Camera_getFov(this); }, "$getViewportWidth", function() { return oktgc_Camera_getViewportWidth(this); }, "$getViewportHeight", function() { return oktgc_Camera_getViewportHeight(this); }, "$isOrthographic0", function()
{ return oktgc_Camera_isOrthographic(this); }, "$setOrthographic", function(var_1) { oktgc_Camera_setOrthographic(this, var_1); }, "$getZoom", function() { return oktgc_Camera_getZoom(this); }, "$setName", function(var_1) { oktgc_Camera_setName(this, var_1); }, "$isCentered1", function() { return oktgc_Camera_isCentered(this); }],
ju_Map, 0, jl_Object, [], 3, 3, 0, 0,
ju_AbstractMap, 0, jl_Object, [ju_Map], 1, 3, 0, ["$equals0", function(var_1) { return ju_AbstractMap_equals(this, var_1); }, "$hashCode", function() { return ju_AbstractMap_hashCode(this); }],
jl_Cloneable, 0, jl_Object, [], 3, 3, 0, 0,
ju_HashMap, 0, ju_AbstractMap, [jl_Cloneable, ji_Serializable], 0, 3, 0, ["$newElementArray", function(var_1) { return ju_HashMap_newElementArray(this, var_1); }, "$clear", function() { ju_HashMap_clear(this); }, "$computeThreshold", function() { ju_HashMap_computeThreshold(this); }, "$containsKey", function(var_1) { return ju_HashMap_containsKey(this, var_1); }, "$containsValue", function(var_1) { return ju_HashMap_containsValue(this, var_1); }, "$entrySet", function() { return ju_HashMap_entrySet(this); },
"$get0", function(var_1) { return ju_HashMap_get(this, var_1); }, "$getEntry", function(var_1) { return ju_HashMap_getEntry(this, var_1); }, "$findNonNullKeyEntry", function(var_1, var_2, var_3) { return ju_HashMap_findNonNullKeyEntry(this, var_1, var_2, var_3); }, "$findNullKeyEntry", function() { return ju_HashMap_findNullKeyEntry(this); }, "$isEmpty", function() { return ju_HashMap_isEmpty(this); }, "$keySet", function() { return ju_HashMap_keySet(this); }, "$put3", function(var_1, var_2) { return ju_HashMap_put(this,
var_1, var_2); }, "$putImpl", function(var_1, var_2) { return ju_HashMap_putImpl(this, var_1, var_2); }, "$createHashedEntry", function(var_1, var_2, var_3) { return ju_HashMap_createHashedEntry(this, var_1, var_2, var_3); }, "$rehash0", function(var_1) { ju_HashMap_rehash(this, var_1); }, "$rehash", function() { ju_HashMap_rehash0(this); }, "$remove0", function(var_1) { return ju_HashMap_remove(this, var_1); }, "$removeEntry", function(var_1) { return ju_HashMap_removeEntry(this, var_1); }, "$size", function()
{ return ju_HashMap_size(this); }, "$values", function() { return ju_HashMap_values(this); }],
ju_LinkedHashMap, 0, ju_HashMap, [ju_Map], 0, 3, 0, ["$containsValue", function(var_1) { return ju_LinkedHashMap_containsValue(this, var_1); }, "$newElementArray", function(var_1) { return ju_LinkedHashMap_newElementArray(this, var_1); }, "$get0", function(var_1) { return ju_LinkedHashMap_get(this, var_1); }, "$createHashedEntry", function(var_1, var_2, var_3) { return ju_LinkedHashMap_createHashedEntry(this, var_1, var_2, var_3); }, "$put3", function(var_1, var_2) { return ju_LinkedHashMap_put(this, var_1,
var_2); }, "$putImpl", function(var_1, var_2) { return ju_LinkedHashMap_putImpl(this, var_1, var_2); }, "$linkEntry", function(var_1) { ju_LinkedHashMap_linkEntry(this, var_1); }, "$entrySet", function() { return ju_LinkedHashMap_entrySet(this); }, "$values", function() { return ju_LinkedHashMap_values(this); }, "$remove0", function(var_1) { return ju_LinkedHashMap_remove(this, var_1); }, "$removeEldestEntry", function(var_1) { return ju_LinkedHashMap_removeEldestEntry(this, var_1); }, "$clear", function() {
ju_LinkedHashMap_clear(this); }],
jur_QuantifierSet, 0, jur_AbstractSet, [], 1, 0, 0, ["$getInnerSet", function() { return jur_QuantifierSet_getInnerSet(this); }, "$first", function(var_1) { return jur_QuantifierSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_QuantifierSet_hasConsumed(this, var_1); }, "$processSecondPass", function() { jur_QuantifierSet_processSecondPass(this); }],
jur_GroupQuantifierSet, 0, jur_QuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_GroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_PosPlusGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PosPlusGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
kc_CollectionsKt__CollectionsJVMKt, 0, jl_Object, [], 0, 0, 0, 0,
kc_CollectionsKt__CollectionsKt, 0, kc_CollectionsKt__CollectionsJVMKt, [], 0, 0, 0, 0,
kc_CollectionsKt__IterablesKt, 0, kc_CollectionsKt__CollectionsKt, [], 0, 0, 0, 0,
kc_CollectionsKt__IteratorsJVMKt, 0, kc_CollectionsKt__IterablesKt, [], 0, 0, 0, 0,
kc_CollectionsKt__IteratorsKt, 0, kc_CollectionsKt__IteratorsJVMKt, [], 0, 0, 0, 0,
kc_CollectionsKt__MutableCollectionsJVMKt, 0, kc_CollectionsKt__IteratorsKt, [], 0, 0, 0, 0,
kt_StringsKt__AppendableKt, 0, jl_Object, [], 0, 0, 0, 0,
kt_StringsKt__IndentKt, 0, kt_StringsKt__AppendableKt, [], 0, 0, 0, 0,
kt_StringsKt__RegexExtensionsJVMKt, 0, kt_StringsKt__IndentKt, [], 0, 0, 0, 0,
kt_StringsKt__RegexExtensionsKt, 0, kt_StringsKt__RegexExtensionsJVMKt, [], 0, 0, 0, 0,
kt_StringsKt__StringBuilderJVMKt, 0, kt_StringsKt__RegexExtensionsKt, [], 0, 0, 0, 0,
kt_StringsKt__StringBuilderKt, 0, kt_StringsKt__StringBuilderJVMKt, [], 0, 0, 0, 0,
kt_StringsKt__StringNumberConversionsJVMKt, 0, kt_StringsKt__StringBuilderKt, [], 0, 0, 0, 0,
oktgg_IGLTFArray$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
jl_AbstractStringBuilder, 0, jl_Object, [ji_Serializable, jl_CharSequence], 0, 0, 0, ["$append6", function(var_1) { return jl_AbstractStringBuilder_append(this, var_1); }, "$insert", function(var_1, var_2) { return jl_AbstractStringBuilder_insert(this, var_1, var_2); }, "$append16", function(var_1) { return jl_AbstractStringBuilder_append0(this, var_1); }, "$append0", function(var_1, var_2) { return jl_AbstractStringBuilder_append1(this, var_1, var_2); }, "$insert0", function(var_1, var_2, var_3) { return jl_AbstractStringBuilder_insert0(this,
var_1, var_2, var_3); }, "$append17", function(var_1) { return jl_AbstractStringBuilder_append2(this, var_1); }, "$insert1", function(var_1, var_2) { return jl_AbstractStringBuilder_insert1(this, var_1, var_2); }, "$append7", function(var_1) { return jl_AbstractStringBuilder_append3(this, var_1); }, "$insert2", function(var_1, var_2) { return jl_AbstractStringBuilder_insert2(this, var_1, var_2); }, "$append8", function(var_1) { return jl_AbstractStringBuilder_append4(this, var_1); }, "$insert3", function(var_1,
var_2) { return jl_AbstractStringBuilder_insert3(this, var_1, var_2); }, "$append19", function(var_1) { return jl_AbstractStringBuilder_append5(this, var_1); }, "$insert4", function(var_1, var_2) { return jl_AbstractStringBuilder_insert4(this, var_1, var_2); }, "$ensureCapacity", function(var_1) { jl_AbstractStringBuilder_ensureCapacity(this, var_1); }, "$toString", function() { return jl_AbstractStringBuilder_toString(this); }, "$length", function() { return jl_AbstractStringBuilder_length(this); }, "$charAt",
function(var_1) { return jl_AbstractStringBuilder_charAt(this, var_1); }, "$append4", function(var_1, var_2, var_3) { return jl_AbstractStringBuilder_append6(this, var_1, var_2, var_3); }, "$insert5", function(var_1, var_2, var_3, var_4) { return jl_AbstractStringBuilder_insert5(this, var_1, var_2, var_3, var_4); }, "$append18", function(var_1) { return jl_AbstractStringBuilder_append7(this, var_1); }, "$append5", function(var_1, var_2, var_3) { return jl_AbstractStringBuilder_append8(this, var_1, var_2, var_3);
}, "$insert6", function(var_1, var_2, var_3, var_4) { return jl_AbstractStringBuilder_insert6(this, var_1, var_2, var_3, var_4); }, "$append9", function(var_1) { return jl_AbstractStringBuilder_append9(this, var_1); }, "$getChars", function(var_1, var_2, var_3, var_4) { jl_AbstractStringBuilder_getChars(this, var_1, var_2, var_3, var_4); }, "$setLength", function(var_1) { jl_AbstractStringBuilder_setLength(this, var_1); }, "$deleteCharAt0", function(var_1) { return jl_AbstractStringBuilder_deleteCharAt(this,
var_1); }, "$delete0", function(var_1, var_2) { return jl_AbstractStringBuilder_delete(this, var_1, var_2); }, "$insertSpace", function(var_1, var_2) { jl_AbstractStringBuilder_insertSpace(this, var_1, var_2); }],
jl_Appendable, 0, jl_Object, [], 3, 3, 0, 0,
jl_StringBuffer, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, ["$append23", function(var_1) { return jl_StringBuffer_append(this, var_1); }, "$append24", function(var_1) { return jl_StringBuffer_append0(this, var_1); }, "$append25", function(var_1) { return jl_StringBuffer_append1(this, var_1); }, "$append10", function(var_1, var_2, var_3) { return jl_StringBuffer_append2(this, var_1, var_2, var_3); }, "$append26", function(var_1) { return jl_StringBuffer_append3(this, var_1); }, "$insert9", function(var_1,
var_2) { return jl_StringBuffer_insert(this, var_1, var_2); }, "$insert7", function(var_1, var_2, var_3, var_4) { return jl_StringBuffer_insert0(this, var_1, var_2, var_3, var_4); }, "$insert8", function(var_1, var_2) { return jl_StringBuffer_insert1(this, var_1, var_2); }, "$insert10", function(var_1, var_2) { return jl_StringBuffer_insert2(this, var_1, var_2); }, "$insert6", function(var_1, var_2, var_3, var_4) { return jl_StringBuffer_insert3(this, var_1, var_2, var_3, var_4); }, "$append5", function(var_1,
var_2, var_3) { return jl_StringBuffer_append4(this, var_1, var_2, var_3); }, "$charAt", function(var_1) { return jl_StringBuffer_charAt(this, var_1); }, "$length", function() { return jl_StringBuffer_length(this); }, "$toString", function() { return jl_StringBuffer_toString(this); }, "$ensureCapacity", function(var_1) { jl_StringBuffer_ensureCapacity(this, var_1); }, "$insert3", function(var_1, var_2) { return jl_StringBuffer_insert4(this, var_1, var_2); }, "$insert2", function(var_1, var_2) { return jl_StringBuffer_insert5(this,
var_1, var_2); }, "$insert", function(var_1, var_2) { return jl_StringBuffer_insert6(this, var_1, var_2); }],
jur_AbstractCharClass$PredefinedCharacterClasses, 0, jl_Object, [], 4, 0, jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit, ["$getObject", function(var_1) { return jur_AbstractCharClass$PredefinedCharacterClasses_getObject(this, var_1); }],
oktgg_GLTFNode$read$10, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$10_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFNode$read$10_invoke0(this, var_1); }],
oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1, 0, kji_Lambda, [kjf_Function0], 4, 0, oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_$callClinit, ["$invoke6", function() { return oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_invoke(this); }, "$invoke4", function() { return oktpo_OdePhysicsWorld$Companion$bodyPairsPool$1_invoke0(this); }],
oktm_Mat4$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oooi_CollisionLibccd$ccd_obj_t, 0, jl_Object, [], 0, 0, 0, 0,
oooi_CollisionLibccd$ccd_triangle_t, 0, oooi_CollisionLibccd$ccd_obj_t, [], 0, 0, 0, 0,
oktm_IVertexBuffer$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
jur_NonCapJointSet, 0, jur_JointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_NonCapJointSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_NonCapJointSet_hasConsumed(this, var_1); }],
jur_AtomicJointSet, 0, jur_NonCapJointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_AtomicJointSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_AtomicJointSet_setNext(this, var_1); }],
jur_NegativeLookAhead, 0, jur_AtomicJointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_NegativeLookAhead_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_NegativeLookAhead_hasConsumed(this, var_1); }],
oktg_IMaterial$Companion, 0, jl_Object, [], 4, 3, oktg_IMaterial$Companion_$callClinit, ["$getDefault0", function() { return oktg_IMaterial$Companion_getDefault(this); }],
ju_Comparator, 0, jl_Object, [], 3, 3, 0, 0,
oooi_CollideTrimeshBox$1, 0, jl_Object, [ju_Comparator], 0, 0, 0, ["$compare1", function(var_1, var_2) { return oooi_CollideTrimeshBox$1_compare(this, var_1, var_2); }, "$compare5", function(var_1, var_2) { return oooi_CollideTrimeshBox$1_compare0(this, var_1, var_2); }],
jlr_Array, 0, jl_Object, [], 4, 3, 0, 0,
oktgg_GLTF$read$1$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$1$3_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_GLTF$read$1$3_invoke0(this, var_1); }],
oktgg_GLTF$read$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$1$1_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_GLTF$read$1$1_invoke0(this, var_1); }]]);
$rt_metadata([oktgg_GLTF$read$1$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$1$2_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_GLTF$read$1$2_invoke0(this, var_1); }],
oktgl_DirectionalLight$Companion, 0, jl_Object, [], 4, 3, 0, ["$getShadowMapsCap", function() { return oktgl_DirectionalLight$Companion_getShadowMapsCap(this); }, "$getViewProjectionMatricesCap", function() { return oktgl_DirectionalLight$Companion_getViewProjectionMatricesCap(this); }, "$getLightViewTmp", function() { return oktgl_DirectionalLight$Companion_getLightViewTmp(this); }, "$getLightPos", function() { return oktgl_DirectionalLight$Companion_getLightPos(this); }, "$getCentroid", function() { return oktgl_DirectionalLight$Companion_getCentroid(this);
}, "$getTmpCam", function() { return oktgl_DirectionalLight$Companion_getTmpCam(this); }, "$getSubFrustumPoints", function() { return oktgl_DirectionalLight$Companion_getSubFrustumPoints(this); }],
jur_AbstractCharClass$LazyJavaDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaDigit_computeValue(this); }],
oktgg_GLTFSparse$Values, 0, jl_Object, [oktj_IJsonObjectIO], 4, 3, 0, ["$read", function(var_1) { oktgg_GLTFSparse$Values_read(this, var_1); }, "$setByteOffset", function(var_1) { oktgg_GLTFSparse$Values_setByteOffset(this, var_1); }],
oktsg_IShaderData, 0, jl_Object, [], 3, 3, 0, 0,
oktsg_ShaderData, 0, jl_Object, [oktsg_IShaderData], 1, 3, 0, ["$getUid", function() { return oktsg_ShaderData_getUid(this); }, "$setUid", function(var_1) { oktsg_ShaderData_setUid(this, var_1); }, "$getScope", function() { return oktsg_ShaderData_getScope(this); }, "$setScope", function(var_1) { oktsg_ShaderData_setScope(this, var_1); }, "$getInlineCode", function() { return oktsg_ShaderData_getInlineCode(this); }, "$setInlineCode", function(var_1) { oktsg_ShaderData_setInlineCode(this, var_1); }, "$getContainer",
function() { return oktsg_ShaderData_getContainer(this); }, "$setContainer", function(var_1) { oktsg_ShaderData_setContainer(this, var_1); }, "$getConnectedTo", function() { return oktsg_ShaderData_getConnectedTo(this); }, "$getConnectedTo0", function() { return oktsg_ShaderData_getConnectedTo0(this); }, "$getRef0", function() { return oktsg_ShaderData_getRef(this); }, "$isUsed0", function() { return oktsg_ShaderData_isUsed(this); }, "$getTypeStr0", function() { return oktsg_ShaderData_getTypeStr(this); }, "$getTypedRef0",
function() { return oktsg_ShaderData_getTypedRef(this); }],
oktsg_GLSLVec3Inline, 0, oktsg_ShaderData, [], 4, 3, 0, ["$getInlineCode", function() { return oktsg_GLSLVec3Inline_getInlineCode(this); }, "$getType", function() { return oktsg_GLSLVec3Inline_getType(this); }, "$getScope", function() { return oktsg_GLSLVec3Inline_getScope(this); }, "$asFloat", function() { return oktsg_GLSLVec3Inline_asFloat(this); }, "$asVec2", function() { return oktsg_GLSLVec3Inline_asVec2(this); }, "$asVec3", function() { return oktsg_GLSLVec3Inline_asVec3(this); }, "$asVec4", function()
{ return oktsg_GLSLVec3Inline_asVec4(this); }, "$getName", function() { return oktsg_GLSLVec3Inline_getName(this); }],
oooi_DDestructible, 0, jl_Object, [], 1, 3, oooi_DDestructible_$callClinit, ["$DESTRUCTOR", function() { oooi_DDestructible_DESTRUCTOR(this); }],
oooi_DBase, 0, oooi_DDestructible, [], 1, 3, 0, 0,
ooo_DGeom, 0, jl_Object, [], 3, 3, 0, 0,
oooi_DxGeom, 0, oooi_DBase, [ooo_DGeom], 1, 3, oooi_DxGeom_$callClinit, ["$updateZeroSizedFlag", function(var_1) { oooi_DxGeom_updateZeroSizedFlag(this, var_1); }, "$recomputePosr", function() { oooi_DxGeom_recomputePosr(this); }, "$recomputeAABB", function() { oooi_DxGeom_recomputeAABB(this); }, "$setFlagDirtyAndBad", function() { oooi_DxGeom_setFlagDirtyAndBad(this); }, "$unsetFlagDirtyAndBad", function() { oooi_DxGeom_unsetFlagDirtyAndBad(this); }, "$hasFlagDirty", function() { return oooi_DxGeom_hasFlagDirty(this);
}, "$getFlags", function() { return oooi_DxGeom_getFlags(this); }, "$setFlags", function(var_1) { oooi_DxGeom_setFlags(this, var_1); }, "$spaceAdd", function(var_1, var_2) { oooi_DxGeom_spaceAdd(this, var_1, var_2); }, "$spaceRemove", function(var_1) { oooi_DxGeom_spaceRemove(this, var_1); }, "$getNext0", function() { return oooi_DxGeom_getNext(this); }, "$bodyAdd", function(var_1) { oooi_DxGeom_bodyAdd(this, var_1); }, "$AABBTest", function(var_1, var_2) { return oooi_DxGeom_AABBTest(this, var_1, var_2); },
"$bodyRemove", function() { oooi_DxGeom_bodyRemove(this); }, "$computePosr", function() { oooi_DxGeom_computePosr(this); }, "$dGeomGetBodyNext", function() { return oooi_DxGeom_dGeomGetBodyNext(this); }, "$dGeomSetData", function(var_1) { oooi_DxGeom_dGeomSetData(this, var_1); }, "$dGeomGetData", function() { return oooi_DxGeom_dGeomGetData(this); }, "$dGeomSetBody", function(var_1) { oooi_DxGeom_dGeomSetBody(this, var_1); }, "$dGeomGetBody", function() { return oooi_DxGeom_dGeomGetBody(this); }, "$dGeomSetPosition",
function(var_1) { oooi_DxGeom_dGeomSetPosition(this, var_1); }, "$dGeomGetPosition", function() { return oooi_DxGeom_dGeomGetPosition(this); }, "$dGeomGetRotation", function() { return oooi_DxGeom_dGeomGetRotation(this); }, "$getQuaternion", function() { return oooi_DxGeom_getQuaternion(this); }, "$getAABB", function() { return oooi_DxGeom_getAABB(this); }, "$dGeomGetClass", function() { return oooi_DxGeom_dGeomGetClass(this); }, "$dGeomCreateOffset", function() { oooi_DxGeom_dGeomCreateOffset(this); }, "$dGeomSetOffsetRotation",
function(var_1) { oooi_DxGeom_dGeomSetOffsetRotation(this, var_1); }, "$dAllocPosr", function() { return oooi_DxGeom_dAllocPosr(this); }, "$dFreePosr", function(var_1) { oooi_DxGeom_dFreePosr(this, var_1); }, "$dGeomMoved", function() { oooi_DxGeom_dGeomMoved(this); }, "$GEOM_ENABLED", function(var_1) { return oooi_DxGeom_GEOM_ENABLED(this, var_1); }, "$final_posr", function() { return oooi_DxGeom_final_posr(this); }, "$getClassID", function() { return oooi_DxGeom_getClassID(this); }, "$setData", function(var_1)
{ oooi_DxGeom_setData(this, var_1); }, "$getData", function() { return oooi_DxGeom_getData(this); }, "$setBody", function(var_1) { oooi_DxGeom_setBody(this, var_1); }, "$getBody", function() { return oooi_DxGeom_getBody(this); }, "$setPosition3", function(var_1, var_2, var_3) { oooi_DxGeom_setPosition(this, var_1, var_2, var_3); }, "$getPosition2", function() { return oooi_DxGeom_getPosition(this); }, "$getRotation2", function() { return oooi_DxGeom_getRotation(this); }, "$setOffsetWorldRotation", function(var_1)
{ oooi_DxGeom_setOffsetWorldRotation(this, var_1); }],
ooo_DBox, 0, jl_Object, [ooo_DGeom], 3, 3, 0, 0,
oooi_DxBox, 0, oooi_DxGeom, [ooo_DBox], 0, 3, 0, ["$computeAABB", function() { oooi_DxBox_computeAABB(this); }, "$dGeomBoxGetLengths", function(var_1) { oooi_DxBox_dGeomBoxGetLengths(this, var_1); }, "$getLengths", function(var_1) { oooi_DxBox_getLengths(this, var_1); }, "$getLengths0", function() { return oooi_DxBox_getLengths0(this); }],
kt_CharsKt__CharJVMKt, 0, jl_Object, [], 0, 0, 0, 0,
kt_CharsKt__CharKt, 0, kt_CharsKt__CharJVMKt, [], 0, 0, 0, 0,
ooo_DTriMesh, 0, jl_Object, [ooo_DGeom], 3, 3, 0, 0,
oooi_DxTriMesh, 0, oooi_DxGeom, [ooo_DTriMesh], 1, 3, 0, 0,
oooi_DxTriMeshDisabled, 0, oooi_DxTriMesh, [], 0, 0, 0, ["$computeAABB", function() { oooi_DxTriMeshDisabled_computeAABB(this); }, "$FetchTransformedTriangle0", function(var_1, var_2) { oooi_DxTriMeshDisabled_FetchTransformedTriangle(this, var_1, var_2); }, "$FetchTriangleCount0", function() { return oooi_DxTriMeshDisabled_FetchTriangleCount(this); }, "$getEdgeAngle", function(var_1, var_2) { return oooi_DxTriMeshDisabled_getEdgeAngle(this, var_1, var_2); }],
otp_PlatformRunnable, 0, jl_Object, [], 3, 3, 0, 0,
jl_Object$monitorEnterWait$lambda$_6_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, ["$run", function() { jl_Object$monitorEnterWait$lambda$_6_0_run(this); }],
okti_IImg, 0, jl_Object, [], 3, 3, 0, 0,
okti_IMG, 0, jl_Object, [okti_IImg], 4, 3, okti_IMG_$callClinit, ["$setApi3", function(var_1) { okti_IMG_setApi(this, var_1); }, "$createImage", function() { return okti_IMG_createImage(this); }, "$load", function(var_1, var_2, var_3, var_4) { return okti_IMG_load(this, var_1, var_2, var_3, var_4); }, "$load0", function(var_1, var_2, var_3) { return okti_IMG_load0(this, var_1, var_2, var_3); }],
jur_AbstractCharClass$LazyAlnum, 0, jur_AbstractCharClass$LazyAlpha, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyAlnum_computeValue(this); }],
jur_AbstractCharClass$LazyGraph, 0, jur_AbstractCharClass$LazyAlnum, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyGraph_computeValue(this); }],
jur_AbstractCharClass$LazyPrint, 0, jur_AbstractCharClass$LazyGraph, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyPrint_computeValue(this); }],
ooo_OdeConstants, 0, jl_Object, [], 0, 3, 0, 0,
oooi_ErrorHandler, 0, ooo_OdeConstants, [], 1, 3, 0, 0,
oooij_DxJointNode, 0, jl_Object, [], 0, 3, 0, 0,
oktm_IMat4$Companion, 0, jl_Object, [], 4, 3, oktm_IMat4$Companion_$callClinit, ["$getCap0", function() { return oktm_IMat4$Companion_getCap(this); }, "$getBuild", function() { return oktm_IMat4$Companion_getBuild(this); }, "$getQuat", function() { return oktm_IMat4$Companion_getQuat(this); }, "$getTmpV1", function() { return oktm_IMat4$Companion_getTmpV1(this); }, "$getTmpV2Right", function() { return oktm_IMat4$Companion_getTmpV2Right(this); }, "$getTmpV3Forward", function() { return oktm_IMat4$Companion_getTmpV3Forward(this);
}, "$mul3", function(var_1, var_2) { oktm_IMat4$Companion_mul(this, var_1, var_2); }, "$inv1", function(var_1) { return oktm_IMat4$Companion_inv(this, var_1); }],
jl_Iterable, 0, jl_Object, [], 3, 3, 0, 0,
kjim_KMappedMarker, 0, jl_Object, [], 3, 3, 0, 0,
ks_SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1, 0, jl_Object, [jl_Iterable, kjim_KMappedMarker], 4, 3, 0, ["$iterator", function() { return ks_SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1_iterator(this); }],
otj_JSObject, 0, jl_Object, [], 3, 3, 0, 0,
otjde_EventListener, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
oktt_TvmMouse$2, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmMouse$2_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmMouse$2_handleEvent$exported$0(this, var_1); }],
oktt_TvmMouse$1, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmMouse$1_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmMouse$1_handleEvent$exported$0(this, var_1); }],
oktt_TvmMouse$4, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmMouse$4_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmMouse$4_handleEvent$exported$0(this, var_1); }],
jl_ArrayStoreException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
oktg_IArmature$Companion, 0, jl_Object, [], 4, 3, oktg_IArmature$Companion_$callClinit, ["$getPreviousBoneMatricesCap", function() { return oktg_IArmature$Companion_getPreviousBoneMatricesCap(this); }],
oktt_TvmMouse$3, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmMouse$3_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmMouse$3_handleEvent$exported$0(this, var_1); }],
oktt_TvmMouse$5, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmMouse$5_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmMouse$5_handleEvent$exported$0(this, var_1); }],
oktgg_GLTFBufferView$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFBufferView$read$1_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFBufferView$read$1_invoke0(this, var_1); }],
oktgg_GLTFBufferView$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFBufferView$read$2_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFBufferView$read$2_invoke0(this, var_1); }],
jur_MatchResult, 0, jl_Object, [], 3, 3, 0, 0,
jur_MatchResultImpl, 0, jl_Object, [jur_MatchResult], 0, 0, 0, ["$setConsumed", function(var_1, var_2) { jur_MatchResultImpl_setConsumed(this, var_1, var_2); }, "$getConsumed", function(var_1) { return jur_MatchResultImpl_getConsumed(this, var_1); }, "$end0", function() { return jur_MatchResultImpl_end(this); }, "$end", function(var_1) { return jur_MatchResultImpl_end0(this, var_1); }, "$setStart", function(var_1, var_2) { jur_MatchResultImpl_setStart(this, var_1, var_2); }, "$setEnd", function(var_1, var_2)
{ jur_MatchResultImpl_setEnd(this, var_1, var_2); }, "$getStart", function(var_1) { return jur_MatchResultImpl_getStart(this, var_1); }, "$getEnd", function(var_1) { return jur_MatchResultImpl_getEnd(this, var_1); }, "$getGroupNoCheck", function(var_1) { return jur_MatchResultImpl_getGroupNoCheck(this, var_1); }, "$start0", function() { return jur_MatchResultImpl_start(this); }, "$start", function(var_1) { return jur_MatchResultImpl_start0(this, var_1); }, "$finalizeMatch", function() { jur_MatchResultImpl_finalizeMatch(this);
}, "$getEnterCounter", function(var_1) { return jur_MatchResultImpl_getEnterCounter(this, var_1); }, "$setEnterCounter", function(var_1, var_2) { jur_MatchResultImpl_setEnterCounter(this, var_1, var_2); }, "$checkGroup", function(var_1) { jur_MatchResultImpl_checkGroup(this, var_1); }, "$setValid", function() { jur_MatchResultImpl_setValid(this); }, "$isValid", function() { return jur_MatchResultImpl_isValid(this); }, "$reset", function(var_1, var_2, var_3) { jur_MatchResultImpl_reset(this, var_1, var_2, var_3);
}, "$reset1", function() { jur_MatchResultImpl_reset0(this); }, "$setBounds", function(var_1, var_2) { jur_MatchResultImpl_setBounds(this, var_1, var_2); }, "$setStartIndex", function(var_1) { jur_MatchResultImpl_setStartIndex(this, var_1); }, "$getLeftBound", function() { return jur_MatchResultImpl_getLeftBound(this); }, "$getRightBound", function() { return jur_MatchResultImpl_getRightBound(this); }, "$setMode", function(var_1) { jur_MatchResultImpl_setMode(this, var_1); }, "$mode0", function() { return jur_MatchResultImpl_mode(this);
}, "$hasAnchoringBounds", function() { return jur_MatchResultImpl_hasAnchoringBounds(this); }, "$hasTransparentBounds", function() { return jur_MatchResultImpl_hasTransparentBounds(this); }, "$getPreviousMatchEnd", function() { return jur_MatchResultImpl_getPreviousMatchEnd(this); }],
oktm_Plane, 0, jl_Object, [], 4, 3, oktm_Plane_$callClinit, ["$set69", function(var_1, var_2, var_3) { oktm_Plane_set(this, var_1, var_2, var_3); }],
cgcj_Jsoner, 0, jl_Object, [], 0, 3, 0, 0,
oktmb_MeshBuilder$createIndicesShort$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktmb_MeshBuilder$createIndicesShort$1_invoke(this, var_1); }, "$invoke7", function(var_1) { oktmb_MeshBuilder$createIndicesShort$1_invoke0(this, var_1); }],
oktgg_GLTFBufferView$read$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFBufferView$read$3_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFBufferView$read$3_invoke0(this, var_1); }],
oktsg_VertexNode$Companion, 0, jl_Object, [], 4, 3, 0, 0]);
$rt_metadata([jnc_Charset, 0, jl_Object, [jl_Comparable], 1, 3, 0, ["$decode", function(var_1) { return jnc_Charset_decode(this, var_1); }, "$compareTo0", function(var_1) { return jnc_Charset_compareTo(this, var_1); }, "$compareTo6", function(var_1) { return jnc_Charset_compareTo0(this, var_1); }],
jur_DecomposedCharSet, 0, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_DecomposedCharSet_setNext(this, var_1); }, "$matches", function(var_1, var_2, var_3) { return jur_DecomposedCharSet_matches(this, var_1, var_2, var_3); }, "$getDecomposedChar", function() { return jur_DecomposedCharSet_getDecomposedChar(this); }, "$codePointAt", function(var_1, var_2, var_3) { return jur_DecomposedCharSet_codePointAt(this, var_1, var_2, var_3); }, "$first", function(var_1) { return jur_DecomposedCharSet_first(this,
var_1); }, "$hasConsumed", function(var_1) { return jur_DecomposedCharSet_hasConsumed(this, var_1); }],
jl_IllegalArgumentException, "IllegalArgumentException", 10, jl_RuntimeException, [], 0, 3, 0, 0,
jnc_IllegalCharsetNameException, "IllegalCharsetNameException", 8, jl_IllegalArgumentException, [], 0, 3, 0, 0,
jl_AutoCloseable, 0, jl_Object, [], 3, 3, 0, 0,
ji_Closeable, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0,
ji_Flushable, 0, jl_Object, [], 3, 3, 0, 0,
ji_OutputStream, 0, jl_Object, [ji_Closeable, ji_Flushable], 1, 3, 0, ["$write0", function(var_1, var_2, var_3) { ji_OutputStream_write(this, var_1, var_2, var_3); }],
ji_FilterOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0,
ji_PrintStream, 0, ji_FilterOutputStream, [], 0, 3, 0, ["$write0", function(var_1, var_2, var_3) { ji_PrintStream_write(this, var_1, var_2, var_3); }, "$check", function() { return ji_PrintStream_check(this); }, "$print0", function(var_1, var_2, var_3) { ji_PrintStream_print(this, var_1, var_2, var_3); }, "$print1", function(var_1) { ji_PrintStream_print0(this, var_1); }, "$print", function(var_1) { ji_PrintStream_print1(this, var_1); }, "$println1", function(var_1) { ji_PrintStream_println(this, var_1); },
"$println0", function(var_1) { ji_PrintStream_println0(this, var_1); }, "$println", function() { ji_PrintStream_println1(this); }, "$printSB", function() { ji_PrintStream_printSB(this); }],
jur_NegativeLookBehind, 0, jur_AtomicJointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_NegativeLookBehind_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_NegativeLookBehind_hasConsumed(this, var_1); }],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue(this); }],
kjim_KMutableIterable, 0, jl_Object, [kjim_KMappedMarker], 3, 3, 0, 0,
ooo_DSpace, 0, jl_Object, [ooo_DGeom], 3, 3, 0, 0,
ooo_DHashSpace, 0, jl_Object, [ooo_DSpace], 3, 3, 0, 0,
oooi_DxConvex$CollideConvexPlane, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideConvexPlane", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxConvex$CollideConvexPlane_dCollideConvexPlane(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxConvex$CollideConvexPlane_dColliderFn(this, var_1, var_2, var_3, var_4); }],
okti_IImage, 0, jl_Object, [], 3, 3, 0, 0,
oktt_HtmlImage, 0, jl_Object, [okti_IImage], 4, 3, 0, ["$getSourceObject0", function() { return oktt_HtmlImage_getSourceObject(this); }, "$getWidth", function() { return oktt_HtmlImage_getWidth(this); }, "$getHeight", function() { return oktt_HtmlImage_getHeight(this); }, "$getBytes", function() { return oktt_HtmlImage_getBytes(this); }, "$setBytes", function(var_1) { oktt_HtmlImage_setBytes(this, var_1); }, "$getGlInternalFormat", function() { return oktt_HtmlImage_getGlInternalFormat(this); }, "$getGlPixelFormat",
function() { return oktt_HtmlImage_getGlPixelFormat(this); }, "$getGlType", function() { return oktt_HtmlImage_getGlType(this); }, "$getName", function() { return oktt_HtmlImage_getName(this); }],
oooi_DxConvex$CollideConvexBox, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideConvexBox", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxConvex$CollideConvexBox_dCollideConvexBox(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxConvex$CollideConvexBox_dColliderFn(this, var_1, var_2, var_3, var_4); }],
jur_LeafQuantifierSet, 0, jur_QuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_LeafQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_UnifiedQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_UnifiedQuantifierSet_matches(this, var_1, var_2, var_3); }, "$find", function(var_1, var_2, var_3) { return jur_UnifiedQuantifierSet_find(this, var_1, var_2, var_3); }],
oktj_IJSON, 0, jl_Object, [], 3, 3, 0, 0,
oktj_JSON, 0, jl_Object, [oktj_IJSON], 4, 3, oktj_JSON_$callClinit, ["$setApi6", function(var_1) { oktj_JSON_setApi(this, var_1); }, "$parseObject", function(var_1) { return oktj_JSON_parseObject(this, var_1); }],
ju_BitSet, 0, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, ["$set10", function(var_1) { ju_BitSet_set(this, var_1); }, "$set0", function(var_1, var_2) { ju_BitSet_set0(this, var_1, var_2); }, "$trailingZeroBits", function(var_1) { return ju_BitSet_trailingZeroBits(this, var_1); }, "$trailingOneBits", function(var_1) { return ju_BitSet_trailingOneBits(this, var_1); }, "$clear1", function(var_1) { ju_BitSet_clear(this, var_1); }, "$clear2", function(var_1, var_2) { ju_BitSet_clear0(this, var_1, var_2);
}, "$clear", function() { ju_BitSet_clear1(this); }, "$get17", function(var_1) { return ju_BitSet_get(this, var_1); }, "$nextSetBit", function(var_1) { return ju_BitSet_nextSetBit(this, var_1); }, "$nextClearBit", function(var_1) { return ju_BitSet_nextClearBit(this, var_1); }, "$ensureCapacity", function(var_1) { ju_BitSet_ensureCapacity(this, var_1); }, "$recalculateLength", function() { ju_BitSet_recalculateLength(this); }, "$intersects", function(var_1) { return ju_BitSet_intersects(this, var_1); }, "$and",
function(var_1) { ju_BitSet_and(this, var_1); }, "$andNot", function(var_1) { ju_BitSet_andNot(this, var_1); }, "$or", function(var_1) { ju_BitSet_or(this, var_1); }, "$xor", function(var_1) { ju_BitSet_xor(this, var_1); }, "$isEmpty", function() { return ju_BitSet_isEmpty(this); }],
oooi_DxGimpact, 0, oooi_DxTriMesh, [], 0, 3, 0, ["$FetchTriangleCount0", function() { return oooi_DxGimpact_FetchTriangleCount(this); }, "$FetchTransformedTriangle0", function(var_1, var_2) { oooi_DxGimpact_FetchTransformedTriangle(this, var_1, var_2); }, "$computeAABB", function() { oooi_DxGimpact_computeAABB(this); }, "$dGeomTriMeshSetData", function(var_1) { oooi_DxGimpact_dGeomTriMeshSetData(this, var_1); }, "$getEdgeAngle", function(var_1, var_2) { return oooi_DxGimpact_getEdgeAngle(this, var_1, var_2);
}],
jl_Float, 0, jl_Number, [jl_Comparable], 0, 3, jl_Float_$callClinit, ["$intValue", function() { return jl_Float_intValue(this); }, "$floatValue", function() { return jl_Float_floatValue(this); }, "$equals0", function(var_1) { return jl_Float_equals(this, var_1); }, "$hashCode", function() { return jl_Float_hashCode(this); }, "$compareTo1", function(var_1) { return jl_Float_compareTo(this, var_1); }, "$compareTo6", function(var_1) { return jl_Float_compareTo0(this, var_1); }],
oktm_Vec3$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oooi_CollisionLibccd$CollideConvexSphereCCD, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollisionLibccd$CollideConvexSphereCCD_dColliderFn(this, var_1, var_2, var_3, var_4); }],
okti_IKeyListener, 0, jl_Object, [], 3, 3, 0, 0,
oktt_KeyboardTest$testMain$1, 0, jl_Object, [okti_IKeyListener], 4, 3, 0, ["$keyDown", function(var_1) { oktt_KeyboardTest$testMain$1_keyDown(this, var_1); }, "$keyUp", function(var_1) { oktt_KeyboardTest$testMain$1_keyUp(this, var_1); }, "$keyTyped", function(var_1) { oktt_KeyboardTest$testMain$1_keyTyped(this, var_1); }],
oktgg_GLTFConf, 0, jl_Object, [], 4, 3, 0, ["$getSeparateThread", function() { return oktgg_GLTFConf_getSeparateThread(this); }, "$getSetupVelocityShader", function() { return oktgg_GLTFConf_getSetupVelocityShader(this); }, "$getReceiveShadows", function() { return oktgg_GLTFConf_getReceiveShadows(this); }, "$setReceiveShadows", function(var_1) { oktgg_GLTFConf_setReceiveShadows(this, var_1); }, "$getSetupDepthRendering", function() { return oktgg_GLTFConf_getSetupDepthRendering(this); }, "$setSetupDepthRendering",
function(var_1) { oktgg_GLTFConf_setSetupDepthRendering(this, var_1); }, "$getSetupGBufferShader", function() { return oktgg_GLTFConf_getSetupGBufferShader(this); }, "$getShaderVersion", function() { return oktgg_GLTFConf_getShaderVersion(this); }],
oktmb_MeshBuilder, 0, jl_Object, [], 0, 3, 0, ["$getUv", function() { return oktmb_MeshBuilder_getUv(this); }, "$setUv0", function(var_1) { oktmb_MeshBuilder_setUv(this, var_1); }, "$getNormals", function() { return oktmb_MeshBuilder_getNormals(this); }, "$setNormals", function(var_1) { oktmb_MeshBuilder_setNormals(this, var_1); }, "$getMaterial", function() { return oktmb_MeshBuilder_getMaterial(this); }, "$setPositionName", function(var_1) { oktmb_MeshBuilder_setPositionName(this, var_1); }, "$setUvName",
function(var_1) { oktmb_MeshBuilder_setUvName(this, var_1); }, "$getCurrentFloatBuffer", function() { return oktmb_MeshBuilder_getCurrentFloatBuffer(this); }, "$setCurrentFloatBuffer", function(var_1) { oktmb_MeshBuilder_setCurrentFloatBuffer(this, var_1); }, "$createAttributes", function() { return oktmb_MeshBuilder_createAttributes(this); }, "$createVertices", function(var_1, var_2) { return oktmb_MeshBuilder_createVertices(this, var_1, var_2); }, "$createVerticesFloat", function(var_1, var_2) { return oktmb_MeshBuilder_createVerticesFloat(this,
var_1, var_2); }, "$createIndices", function(var_1, var_2, var_3) { return oktmb_MeshBuilder_createIndices(this, var_1, var_2, var_3); }, "$createIndicesShort", function(var_1, var_2) { return oktmb_MeshBuilder_createIndicesShort(this, var_1, var_2); }, "$build", function(var_1) { return oktmb_MeshBuilder_build(this, var_1); }],
jur_AbstractCharClass$LazyCategoryScope, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyCategoryScope_computeValue(this); }],
jl_Runnable, 0, jl_Object, [], 3, 3, 0, 0,
ooott_Task, 0, jl_Object, [jl_Runnable], 0, 3, 0, ["$awaitCompletion", function() { ooott_Task_awaitCompletion(this); }, "$submit0", function() { ooott_Task_submit(this); }],
oktts_ThresholdTest$testMain$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktts_ThresholdTest$testMain$1$1_invoke(this, var_1); }, "$invoke8", function(var_1) { oktts_ThresholdTest$testMain$1$1_invoke0(this, var_1); }],
oooi_CollisionLibccd, 0, jl_Object, [], 0, 3, oooi_CollisionLibccd_$callClinit, 0,
okttm_BoxMeshBuilderTest$testMain$2, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return okttm_BoxMeshBuilderTest$testMain$2_invoke(this); }, "$invoke2", function() { okttm_BoxMeshBuilderTest$testMain$2_invoke0(this); }],
oooi_Common, 0, ooo_OdeConstants, [], 0, 3, oooi_Common_$callClinit, 0,
oooi_Misc, 0, oooi_Common, [], 0, 3, oooi_Misc_$callClinit, 0,
oooi_FastDot, 0, oooi_Misc, [], 0, 3, 0, 0,
oktt_Tests, 0, jl_Object, [], 0, 3, 0, ["$getGroups", function() { return oktt_Tests_getGroups(this); }],
cgcj_Jsonable, 0, jl_Object, [], 3, 3, 0, 0,
kjf_Function3, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kjf_Function4, 0, jl_Object, [k_Function], 3, 3, 0, 0,
oooi_DxSphere$CollideSpherePlane, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideSpherePlane", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxSphere$CollideSpherePlane_dCollideSpherePlane(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxSphere$CollideSpherePlane_dColliderFn(this, var_1, var_2, var_3, var_4); }],
jur_SpecialToken, 0, jl_Object, [], 1, 0, 0, 0,
jur_AbstractCharClass, 0, jur_SpecialToken, [], 1, 0, jur_AbstractCharClass_$callClinit, ["$getBits", function() { return jur_AbstractCharClass_getBits(this); }, "$getLowHighSurrogates", function() { return jur_AbstractCharClass_getLowHighSurrogates(this); }, "$hasLowHighSurrogates", function() { return jur_AbstractCharClass_hasLowHighSurrogates(this); }, "$mayContainSupplCodepoints2", function() { return jur_AbstractCharClass_mayContainSupplCodepoints(this); }, "$getInstance", function() { return jur_AbstractCharClass_getInstance(this);
}, "$getSurrogates", function() { return jur_AbstractCharClass_getSurrogates(this); }, "$getWithoutSurrogates", function() { return jur_AbstractCharClass_getWithoutSurrogates(this); }, "$hasUCI0", function() { return jur_AbstractCharClass_hasUCI(this); }, "$setNegative", function(var_1) { return jur_AbstractCharClass_setNegative(this, var_1); }, "$isNegative", function() { return jur_AbstractCharClass_isNegative(this); }],
jur_AbstractCharClass$LazyJavaTitleCase$1, "AbstractCharClass$LazyJavaTitleCase$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaTitleCase$1_contains(this, var_1); }],
kjf_Function2, 0, jl_Object, [k_Function], 3, 3, 0, 0]);
$rt_metadata([okttm_InstancingTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return okttm_InstancingTest_getName(this); }, "$testMain", function() { okttm_InstancingTest_testMain(this); }],
okttsg_CascadedShadowMappingTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return okttsg_CascadedShadowMappingTest_getName(this); }, "$testMain", function() { okttsg_CascadedShadowMappingTest_testMain(this); }],
oktsg_GLSLVec3, 0, oktsg_ShaderData, [], 4, 3, 0, ["$getType", function() { return oktsg_GLSLVec3_getType(this); }, "$asFloat", function() { return oktsg_GLSLVec3_asFloat(this); }, "$asVec2", function() { return oktsg_GLSLVec3_asVec2(this); }, "$asVec3", function() { return oktsg_GLSLVec3_asVec3(this); }, "$asVec4", function() { return oktsg_GLSLVec3_asVec4(this); }, "$getName", function() { return oktsg_GLSLVec3_getName(this); }],
oktsg_GLSLVec4, 0, oktsg_ShaderData, [], 4, 3, 0, ["$getType", function() { return oktsg_GLSLVec4_getType(this); }, "$asFloat", function() { return oktsg_GLSLVec4_asFloat(this); }, "$asVec2", function() { return oktsg_GLSLVec4_asVec2(this); }, "$asVec3", function() { return oktsg_GLSLVec4_asVec3(this); }, "$asVec4", function() { return oktsg_GLSLVec4_asVec4(this); }, "$getName", function() { return oktsg_GLSLVec4_getName(this); }],
ooo_DTriMeshData, 0, jl_Object, [], 3, 3, 0, 0,
oooi_DxTriMeshData, 0, jl_Object, [ooo_DTriMeshData], 1, 3, 0, 0,
kjf_Function9, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kjf_Function7, 0, jl_Object, [k_Function], 3, 3, 0, 0,
oktsg_IShaderNode, 0, jl_Object, [oktj_IJsonObjectIO], 3, 3, 0, 0,
oktsg_ShaderNode, 0, jl_Object, [oktsg_IShaderNode], 1, 3, oktsg_ShaderNode_$callClinit, ["$getInputInternal", function() { return oktsg_ShaderNode_getInputInternal(this); }, "$getShaderOrNull", function() { return oktsg_ShaderNode_getShaderOrNull(this); }, "$setShaderOrNull", function(var_1) { oktsg_ShaderNode_setShaderOrNull(this, var_1); }, "$getInput", function() { return oktsg_ShaderNode_getInput(this); }, "$getOutput", function() { return oktsg_ShaderNode_getOutput(this); }, "$getAttribute", function()
{ return oktsg_ShaderNode_getAttribute(this); }, "$getVarOut", function() { return oktsg_ShaderNode_getVarOut(this); }, "$getVarIn", function() { return oktsg_ShaderNode_getVarIn(this); }, "$defOut", function(var_1) { return oktsg_ShaderNode_defOut(this, var_1); }, "$setInput", function(var_1, var_2) { oktsg_ShaderNode_setInput(this, var_1, var_2); }, "$prepareToBuild", function() { oktsg_ShaderNode_prepareToBuild(this); }, "$shaderCompiled", function() { oktsg_ShaderNode_shaderCompiled(this); }, "$prepareToDrawScene",
function(var_1) { oktsg_ShaderNode_prepareToDrawScene(this, var_1); }, "$prepareObjectData0", function(var_1) { oktsg_ShaderNode_prepareObjectData(this, var_1); }, "$prepareToDrawMesh0", function(var_1) { oktsg_ShaderNode_prepareToDrawMesh(this, var_1); }, "$executionFrag", function(var_1) { oktsg_ShaderNode_executionFrag(this, var_1); }, "$executionVert", function(var_1) { oktsg_ShaderNode_executionVert(this, var_1); }, "$declarationVert", function(var_1) { oktsg_ShaderNode_declarationVert(this, var_1); },
"$declarationFrag", function(var_1) { oktsg_ShaderNode_declarationFrag(this, var_1); }, "$getShader", function() { return oktsg_ShaderNode_getShader(this); }],
oktsg_UVNode, 0, oktsg_ShaderNode, [], 4, 3, oktsg_UVNode_$callClinit, ["$setAUVName", function(var_1) { oktsg_UVNode_setAUVName(this, var_1); }, "$getUv0", function() { return oktsg_UVNode_getUv(this); }, "$declarationFrag", function(var_1) { oktsg_UVNode_declarationFrag(this, var_1); }, "$executionVert", function(var_1) { oktsg_UVNode_executionVert(this, var_1); }, "$declarationVert", function(var_1) { oktsg_UVNode_declarationVert(this, var_1); }],
kjf_Function8, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kjf_Function5, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kjf_Function6, 0, jl_Object, [k_Function], 3, 3, 0, 0,
oktgl_ILight, 0, jl_Object, [], 3, 3, 0, 0,
jnc_UnsupportedCharsetException, "UnsupportedCharsetException", 8, jl_IllegalArgumentException, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaISOControl$1, "AbstractCharClass$LazyJavaISOControl$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaISOControl$1_contains(this, var_1); }],
oktts_GBufferBaseTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktts_GBufferBaseTest_getName(this); }, "$testMain", function() { oktts_GBufferBaseTest_testMain(this); }],
oooil_CCDSupport$ccd_support_t, 0, jl_Object, [], 4, 3, 0, 0,
jur_LowSurrogateCharSet, 0, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_LowSurrogateCharSet_setNext(this, var_1); }, "$matches", function(var_1, var_2, var_3) { return jur_LowSurrogateCharSet_matches(this, var_1, var_2, var_3); }, "$find", function(var_1, var_2, var_3) { return jur_LowSurrogateCharSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_LowSurrogateCharSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first", function(var_1)
{ return jur_LowSurrogateCharSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_LowSurrogateCharSet_hasConsumed(this, var_1); }],
ju_Collection, 0, jl_Object, [jl_Iterable], 3, 3, 0, 0,
kc_ArrayAsCollection, 0, jl_Object, [ju_Collection, kjim_KMappedMarker], 4, 0, 0, ["$getSize", function() { return kc_ArrayAsCollection_getSize(this); }, "$size", function() { return kc_ArrayAsCollection_size(this); }, "$iterator", function() { return kc_ArrayAsCollection_iterator(this); }],
jl_Error, 0, jl_Throwable, [], 0, 3, 0, 0,
ooo_DCapsule, 0, jl_Object, [ooo_DGeom], 3, 3, 0, 0,
oooi_DxCapsule, 0, oooi_DxGeom, [ooo_DCapsule], 0, 3, 0, 0,
ooo_DHeightfield, 0, jl_Object, [ooo_DGeom], 3, 3, 0, 0,
jl_AssertionError, 0, jl_Error, [], 0, 3, 0, 0,
cgcj_JsonObject, 0, ju_HashMap, [cgcj_Jsonable], 0, 3, 0, 0,
oktsg_GLSLVec2, 0, oktsg_ShaderData, [], 4, 3, 0, ["$getType", function() { return oktsg_GLSLVec2_getType(this); }, "$asFloat", function() { return oktsg_GLSLVec2_asFloat(this); }, "$asVec2", function() { return oktsg_GLSLVec2_asVec2(this); }, "$asVec3", function() { return oktsg_GLSLVec2_asVec3(this); }, "$asVec4", function() { return oktsg_GLSLVec2_asVec4(this); }, "$getName", function() { return oktsg_GLSLVec2_getName(this); }],
jm_Division, 0, jl_Object, [], 0, 0, 0, 0,
jur_CompositeQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_CompositeQuantifierSet_matches(this, var_1, var_2, var_3); }],
jm_BitLevel, 0, jl_Object, [], 0, 0, 0, 0,
jur_SupplRangeSet, 0, jur_JointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_SupplRangeSet_matches(this, var_1, var_2, var_3); }, "$contains0", function(var_1) { return jur_SupplRangeSet_contains(this, var_1); }, "$first", function(var_1) { return jur_SupplRangeSet_first(this, var_1); }, "$getChars0", function() { return jur_SupplRangeSet_getChars(this); }, "$setNext", function(var_1) { jur_SupplRangeSet_setNext(this, var_1); }, "$hasConsumed", function(var_1) { return jur_SupplRangeSet_hasConsumed(this,
var_1); }],
jl_String, "String", 10, jl_Object, [ji_Serializable, jl_Comparable, jl_CharSequence], 0, 3, jl_String_$callClinit, ["$initWithBytes", function(var_1, var_2, var_3, var_4) { jl_String_initWithBytes(this, var_1, var_2, var_3, var_4); }, "$charAt", function(var_1) { return jl_String_charAt(this, var_1); }, "$length", function() { return jl_String_length(this); }, "$isEmpty", function() { return jl_String_isEmpty(this); }, "$compareTo2", function(var_1) { return jl_String_compareTo(this, var_1); }, "$compareToIgnoreCase",
function(var_1) { return jl_String_compareToIgnoreCase(this, var_1); }, "$startsWith", function(var_1, var_2) { return jl_String_startsWith(this, var_1, var_2); }, "$startsWith0", function(var_1) { return jl_String_startsWith0(this, var_1); }, "$regionMatches0", function(var_1, var_2, var_3, var_4, var_5) { return jl_String_regionMatches(this, var_1, var_2, var_3, var_4, var_5); }, "$regionMatches1", function(var_1, var_2, var_3, var_4) { return jl_String_regionMatches0(this, var_1, var_2, var_3, var_4); },
"$endsWith", function(var_1) { return jl_String_endsWith(this, var_1); }, "$indexOf", function(var_1, var_2) { return jl_String_indexOf(this, var_1, var_2); }, "$indexOf6", function(var_1) { return jl_String_indexOf0(this, var_1); }, "$lastIndexOf", function(var_1, var_2) { return jl_String_lastIndexOf(this, var_1, var_2); }, "$indexOf1", function(var_1, var_2) { return jl_String_indexOf1(this, var_1, var_2); }, "$lastIndexOf1", function(var_1, var_2) { return jl_String_lastIndexOf0(this, var_1, var_2); }, "$substring",
function(var_1, var_2) { return jl_String_substring(this, var_1, var_2); }, "$substring1", function(var_1) { return jl_String_substring0(this, var_1); }, "$subSequence", function(var_1, var_2) { return jl_String_subSequence(this, var_1, var_2); }, "$toString", function() { return jl_String_toString(this); }, "$toCharArray", function() { return jl_String_toCharArray(this); }, "$equals0", function(var_1) { return jl_String_equals(this, var_1); }, "$hashCode", function() { return jl_String_hashCode(this); }, "$toLowerCase1",
function() { return jl_String_toLowerCase(this); }, "$toUpperCase0", function() { return jl_String_toUpperCase(this); }, "$compareTo6", function(var_1) { return jl_String_compareTo0(this, var_1); }],
oktsg_SplitVec4Node, 0, oktsg_ShaderNode, [], 4, 3, oktsg_SplitVec4Node_$callClinit, ["$getVector", function() { return oktsg_SplitVec4Node_getVector(this); }, "$getX1", function() { return oktsg_SplitVec4Node_getX(this); }, "$getY2", function() { return oktsg_SplitVec4Node_getY(this); }, "$getZ0", function() { return oktsg_SplitVec4Node_getZ(this); }, "$prepareToBuild", function() { oktsg_SplitVec4Node_prepareToBuild(this); }, "$setChannelNames", function() { oktsg_SplitVec4Node_setChannelNames(this); }],
jnc_CharsetEncoder, 0, jl_Object, [], 1, 3, 0, ["$checkReplacement", function(var_1) { jnc_CharsetEncoder_checkReplacement(this, var_1); }, "$onMalformedInput0", function(var_1) { return jnc_CharsetEncoder_onMalformedInput(this, var_1); }, "$implOnMalformedInput", function(var_1) { jnc_CharsetEncoder_implOnMalformedInput(this, var_1); }, "$onUnmappableCharacter0", function(var_1) { return jnc_CharsetEncoder_onUnmappableCharacter(this, var_1); }, "$implOnUnmappableCharacter", function(var_1) { jnc_CharsetEncoder_implOnUnmappableCharacter(this,
var_1); }, "$encode", function(var_1, var_2, var_3) { return jnc_CharsetEncoder_encode(this, var_1, var_2, var_3); }, "$flush", function(var_1) { return jnc_CharsetEncoder_flush(this, var_1); }, "$implFlush", function(var_1) { return jnc_CharsetEncoder_implFlush(this, var_1); }],
jnci_BufferedEncoder, 0, jnc_CharsetEncoder, [], 1, 3, 0, ["$encodeLoop", function(var_1, var_2) { return jnci_BufferedEncoder_encodeLoop(this, var_1, var_2); }],
jnci_UTF8Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, ["$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
oktt_Texture, 0, jl_Object, [oktt_ITexture], 1, 3, 0, ["$setName", function(var_1) { oktt_Texture_setName(this, var_1); }, "$getMinFilter", function() { return oktt_Texture_getMinFilter(this); }, "$setMinFilter", function(var_1) { oktt_Texture_setMinFilter(this, var_1); }, "$getMagFilter", function() { return oktt_Texture_getMagFilter(this); }, "$setMagFilter", function(var_1) { oktt_Texture_setMagFilter(this, var_1); }, "$getSWrap", function() { return oktt_Texture_getSWrap(this); }, "$setSWrap", function(var_1)
{ oktt_Texture_setSWrap(this, var_1); }, "$getTWrap", function() { return oktt_Texture_getTWrap(this); }, "$setTWrap", function(var_1) { oktt_Texture_setTWrap(this, var_1); }, "$getAnisotropicFilter", function() { return oktt_Texture_getAnisotropicFilter(this); }, "$setAnisotropicFilter", function(var_1) { oktt_Texture_setAnisotropicFilter(this, var_1); }, "$getGlTarget", function() { return oktt_Texture_getGlTarget(this); }, "$setGlTarget", function(var_1) { oktt_Texture_setGlTarget(this, var_1); }, "$getTextureHandle",
function() { return oktt_Texture_getTextureHandle(this); }, "$setTextureHandle", function(var_1) { oktt_Texture_setTextureHandle(this, var_1); }, "$bind", function() { oktt_Texture_bind(this); }, "$bind4", function(var_1) { oktt_Texture_bind0(this, var_1); }],
oktt_Texture2D, 0, oktt_Texture, [oktt_ITexture2D], 0, 3, oktt_Texture2D_$callClinit, ["$getWidth", function() { return oktt_Texture2D_getWidth(this); }, "$setWidth", function(var_1) { oktt_Texture2D_setWidth(this, var_1); }, "$getHeight", function() { return oktt_Texture2D_getHeight(this); }, "$setHeight", function(var_1) { oktt_Texture2D_setHeight(this, var_1); }, "$getImage", function() { return oktt_Texture2D_getImage(this); }, "$setImage", function(var_1) { oktt_Texture2D_setImage(this, var_1); }, "$load5",
function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return oktt_Texture2D_load(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$load6", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return oktt_Texture2D_load0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$load7", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13) { return oktt_Texture2D_load1(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9,
var_10, var_11, var_12, var_13); }, "$beforeGlTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { oktt_Texture2D_beforeGlTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$bind", function() { oktt_Texture2D_bind(this); }, "$bind4", function(var_1) { oktt_Texture2D_bind0(this, var_1); }, "$generateMipmapsGPU", function() { oktt_Texture2D_generateMipmapsGPU(this); }, "$destroy0", function() { oktt_Texture2D_destroy(this); }],
oooicj_Ref, 0, jl_Object, [], 4, 3, 0, ["$get15", function() { return oooicj_Ref_get(this); }, "$set43", function(var_1) { oooicj_Ref_set(this, var_1); }],
ju_Dictionary, 0, jl_Object, [], 1, 3, 0, 0,
ju_Hashtable, 0, ju_Dictionary, [ju_Map, jl_Cloneable, ji_Serializable], 0, 3, ju_Hashtable_$callClinit, ["$newElementArray0", function(var_1) { return ju_Hashtable_newElementArray(this, var_1); }, "$computeMaxSize", function() { ju_Hashtable_computeMaxSize(this); }, "$get0", function(var_1) { return ju_Hashtable_get(this, var_1); }, "$put3", function(var_1, var_2) { return ju_Hashtable_put(this, var_1, var_2); }, "$rehash", function() { ju_Hashtable_rehash(this); }],
ju_Properties, 0, ju_Hashtable, [], 0, 3, 0, ["$getProperty", function(var_1) { return ju_Properties_getProperty(this, var_1); }],
ji_Writer, 0, jl_Object, [jl_Appendable, ji_Closeable, ji_Flushable], 1, 3, 0, 0,
ji_StringWriter, 0, ji_Writer, [], 0, 3, 0, ["$flush0", function() { ji_StringWriter_flush(this); }, "$toString", function() { return ji_StringWriter_toString(this); }, "$write2", function(var_1, var_2, var_3) { ji_StringWriter_write(this, var_1, var_2, var_3); }],
ooott_TaskExecutor, 0, jl_Object, [], 3, 3, 0, 0,
kr_Random, 0, jl_Object, [], 1, 3, kr_Random_$callClinit, 0,
kr_AbstractPlatformRandom, 0, kr_Random, [], 1, 3, 0, ["$nextBits", function(var_1) { return kr_AbstractPlatformRandom_nextBits(this, var_1); }, "$nextFloat", function() { return kr_AbstractPlatformRandom_nextFloat(this); }],
kr_FallbackThreadLocalRandom, 0, kr_AbstractPlatformRandom, [], 4, 3, 0, ["$getImpl", function() { return kr_FallbackThreadLocalRandom_getImpl(this); }]]);
$rt_metadata([oooi_DxTriMeshData$1, 0, jl_Object, [], 32, 0, oooi_DxTriMeshData$1_$callClinit, 0,
oooi_CollisionLibccd$CollideCapsuleCylinder, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollisionLibccd$CollideCapsuleCylinder_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktm_IVec3$Companion, 0, jl_Object, [], 4, 3, oktm_IVec3$Companion_$callClinit, ["$getBuild", function() { return oktm_IVec3$Companion_getBuild(this); }, "$getY1", function() { return oktm_IVec3$Companion_getY(this); }, "$getZero", function() { return oktm_IVec3$Companion_getZero(this); }, "$getOne", function() { return oktm_IVec3$Companion_getOne(this); }],
jnci_UTF8Charset, 0, jnc_Charset, [], 0, 3, 0, ["$newDecoder", function() { return jnci_UTF8Charset_newDecoder(this); }, "$newEncoder", function() { return jnci_UTF8Charset_newEncoder(this); }],
otjde_EventTarget, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
otjde_KeyboardEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0,
oktt_Texture2D$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktgg_GLTF$WhenMappings, 0, jl_Object, [], 36, 3, oktgg_GLTF$WhenMappings_$callClinit, 0,
jl_Enum, "Enum", 10, jl_Object, [jl_Comparable, ji_Serializable], 1, 3, 0, ["$name4", function() { return jl_Enum_name(this); }, "$ordinal", function() { return jl_Enum_ordinal(this); }, "$equals0", function(var_1) { return jl_Enum_equals(this, var_1); }, "$hashCode", function() { return jl_Enum_hashCode(this); }, "$getDeclaringClass", function() { return jl_Enum_getDeclaringClass(this); }, "$compareTo3", function(var_1) { return jl_Enum_compareTo(this, var_1); }, "$compareTo6", function(var_1) { return jl_Enum_compareTo0(this,
var_1); }],
cgcj_Jsoner$DeserializationOptions, "Jsoner$DeserializationOptions", 3, jl_Enum, [], 12, 0, cgcj_Jsoner$DeserializationOptions_$callClinit, 0,
kc_ArraysKt__ArraysJVMKt, 0, jl_Object, [], 0, 0, 0, 0,
kc_ArraysKt__ArraysKt, 0, kc_ArraysKt__ArraysJVMKt, [], 0, 0, 0, 0,
kc_ArraysKt___ArraysJvmKt, 0, kc_ArraysKt__ArraysKt, [], 0, 0, 0, 0,
oktu_IPath$Companion, 0, jl_Object, [], 4, 3, oktu_IPath$Companion_$callClinit, 0,
oktt_TextureCube$loadSide$1, 0, kji_Lambda, [kjf_Function2], 4, 0, 0, ["$invoke11", function(var_1, var_2) { return oktt_TextureCube$loadSide$1_invoke(this, var_1, var_2); }, "$invoke9", function(var_1, var_2) { oktt_TextureCube$loadSide$1_invoke0(this, var_1, var_2); }],
oktp_IOverObject, 0, jl_Object, [], 3, 3, 0, 0,
oktp_IShape, 0, jl_Object, [oktp_IOverObject], 3, 3, oktp_IShape_$callClinit, 0,
oktpo_IOdeGeom, 0, jl_Object, [oktp_IShape], 3, 3, oktpo_IOdeGeom_$callClinit, 0,
oktpo_OdeGeom, 0, jl_Object, [oktpo_IOdeGeom], 1, 3, 0, ["$getInfluenceOtherBodies", function() { return oktpo_OdeGeom_getInfluenceOtherBodies(this); }, "$getSourceObject0", function() { return oktpo_OdeGeom_getSourceObject(this); }, "$setPosition4", function(var_1, var_2, var_3) { return oktpo_OdeGeom_setPosition(this, var_1, var_2, var_3); }],
oktp_ICapsuleShape, 0, jl_Object, [oktp_IShape], 3, 3, 0, 0,
oktpo_OdeCapsuleShape, 0, oktpo_OdeGeom, [oktp_ICapsuleShape], 4, 3, 0, 0,
oktm_Vec2$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oooi_CollideTrimeshSphere$1, 0, jl_Object, [ju_Comparator], 0, 0, 0, ["$compare5", function(var_1, var_2) { return oooi_CollideTrimeshSphere$1_compare(this, var_1, var_2); }],
oktg_IGL$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktts_GBufferBaseTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktts_GBufferBaseTest$testMain$1_invoke(this); }, "$invoke2", function() { oktts_GBufferBaseTest$testMain$1_invoke0(this); }],
kt_Regex, 0, jl_Object, [ji_Serializable], 4, 3, kt_Regex_$callClinit, ["$split0", function(var_1, var_2) { return kt_Regex_split(this, var_1, var_2); }],
oktgg_GLTF$read$5$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$5$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTF$read$5$1_invoke0(this, var_1); }],
otja_ReadyStateChangeHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
otja_XMLHttpRequest$onComplete$static$lambda$_27_0, 0, jl_Object, [otja_ReadyStateChangeHandler], 0, 3, 0, ["$stateChanged", function() { otja_XMLHttpRequest$onComplete$static$lambda$_27_0_stateChanged(this); }, "$stateChanged$exported$0", function() { return otja_XMLHttpRequest$onComplete$static$lambda$_27_0_stateChanged$exported$0(this); }],
oooip_DxUtil$BlockPointer, 0, jl_Object, [], 0, 3, 0, ["$toInt1", function() { return oooip_DxUtil$BlockPointer_toInt(this); }, "$asDxWorldProcessMemArena", function() { return oooip_DxUtil$BlockPointer_asDxWorldProcessMemArena(this); }, "$setTo", function(var_1) { oooip_DxUtil$BlockPointer_setTo(this, var_1); }],
oktsg_OperationNode$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oooi_Objects_H$DxPosRC, 0, jl_Object, [], 3, 3, 0, 0,
oktd_IFloatData$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktgg_IGLTFMaterial$read$5$3$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$5$3$1_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_IGLTFMaterial$read$5$3$1_invoke0(this, var_1); }],
jl_Object$Monitor, 0, jl_Object, [], 0, 0, 0, 0,
oktg_IGL, 0, jl_Object, [], 3, 3, 0, 0,
oktg_GL$api$1, 0, jl_Object, [oktg_IGL], 4, 3, 0, ["$getMainFrameBufferHandle0", function() { return oktg_GL$api$1_getMainFrameBufferHandle(this); }, "$getMainFrameBufferWidth0", function() { return oktg_GL$api$1_getMainFrameBufferWidth(this); }, "$getMainFrameBufferHeight0", function() { return oktg_GL$api$1_getMainFrameBufferHeight(this); }, "$getMajVer", function() { return oktg_GL$api$1_getMajVer(this); }, "$getGlesMajVer", function() { return oktg_GL$api$1_getGlesMajVer(this); }, "$isGLES", function() {
return oktg_GL$api$1_isGLES(this); }, "$initGL0", function() { oktg_GL$api$1_initGL(this); }, "$isExtensionSupported0", function(var_1) { return oktg_GL$api$1_isExtensionSupported(this, var_1); }, "$enableExtension", function(var_1) { return oktg_GL$api$1_enableExtension(this, var_1); }, "$glDrawBuffers0", function(var_1, var_2) { oktg_GL$api$1_glDrawBuffers(this, var_1, var_2); }, "$glDrawArraysInstanced0", function(var_1, var_2, var_3, var_4) { oktg_GL$api$1_glDrawArraysInstanced(this, var_1, var_2, var_3,
var_4); }, "$glDrawElementsInstanced0", function(var_1, var_2, var_3, var_4, var_5) { oktg_GL$api$1_glDrawElementsInstanced(this, var_1, var_2, var_3, var_4, var_5); }, "$glVertexAttribDivisor", function(var_1, var_2) { oktg_GL$api$1_glVertexAttribDivisor(this, var_1, var_2); }, "$glActiveTexture0", function(var_1) { oktg_GL$api$1_glActiveTexture(this, var_1); }, "$glBindTexture", function(var_1, var_2) { oktg_GL$api$1_glBindTexture(this, var_1, var_2); }, "$glBlendFunc0", function(var_1, var_2) { oktg_GL$api$1_glBlendFunc(this,
var_1, var_2); }, "$glClear", function(var_1) { oktg_GL$api$1_glClear(this, var_1); }, "$glClearColor", function(var_1, var_2, var_3, var_4) { oktg_GL$api$1_glClearColor(this, var_1, var_2, var_3, var_4); }, "$glCullFace0", function(var_1) { oktg_GL$api$1_glCullFace(this, var_1); }, "$glDeleteTexture0", function(var_1) { oktg_GL$api$1_glDeleteTexture(this, var_1); }, "$glDisable0", function(var_1) { oktg_GL$api$1_glDisable(this, var_1); }, "$glDrawArrays0", function(var_1, var_2, var_3) { oktg_GL$api$1_glDrawArrays(this,
var_1, var_2, var_3); }, "$glDrawElements0", function(var_1, var_2, var_3, var_4) { oktg_GL$api$1_glDrawElements(this, var_1, var_2, var_3, var_4); }, "$glEnable0", function(var_1) { oktg_GL$api$1_glEnable(this, var_1); }, "$glGenTexture", function() { return oktg_GL$api$1_glGenTexture(this); }, "$glGetIntegerv0", function(var_1, var_2) { oktg_GL$api$1_glGetIntegerv(this, var_1, var_2); }, "$glTexImage2D0", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { oktg_GL$api$1_glTexImage2D(this,
var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { oktg_GL$api$1_glTexImage2D0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", function(var_1, var_2, var_3) { oktg_GL$api$1_glTexParameterf(this, var_1, var_2, var_3); }, "$glViewport0", function(var_1, var_2, var_3, var_4) { oktg_GL$api$1_glViewport(this, var_1, var_2, var_3, var_4); }, "$glAttachShader0", function(var_1,
var_2) { oktg_GL$api$1_glAttachShader(this, var_1, var_2); }, "$glBindBuffer", function(var_1, var_2) { oktg_GL$api$1_glBindBuffer(this, var_1, var_2); }, "$glBindFramebuffer0", function(var_1, var_2) { oktg_GL$api$1_glBindFramebuffer(this, var_1, var_2); }, "$glBindRenderbuffer0", function(var_1, var_2) { oktg_GL$api$1_glBindRenderbuffer(this, var_1, var_2); }, "$glBufferData", function(var_1, var_2, var_3, var_4) { oktg_GL$api$1_glBufferData(this, var_1, var_2, var_3, var_4); }, "$glCheckFramebufferStatus0",
function(var_1) { return oktg_GL$api$1_glCheckFramebufferStatus(this, var_1); }, "$glCompileShader0", function(var_1) { oktg_GL$api$1_glCompileShader(this, var_1); }, "$glCreateProgram0", function() { return oktg_GL$api$1_glCreateProgram(this); }, "$glCreateShader0", function(var_1) { return oktg_GL$api$1_glCreateShader(this, var_1); }, "$glDeleteFramebuffer0", function(var_1) { oktg_GL$api$1_glDeleteFramebuffer(this, var_1); }, "$glDeleteProgram0", function(var_1) { oktg_GL$api$1_glDeleteProgram(this, var_1);
}, "$glDeleteRenderbuffer0", function(var_1) { oktg_GL$api$1_glDeleteRenderbuffer(this, var_1); }, "$glDeleteShader0", function(var_1) { oktg_GL$api$1_glDeleteShader(this, var_1); }, "$glDetachShader0", function(var_1, var_2) { oktg_GL$api$1_glDetachShader(this, var_1, var_2); }, "$glEnableVertexAttribArray", function(var_1) { oktg_GL$api$1_glEnableVertexAttribArray(this, var_1); }, "$glFramebufferRenderbuffer0", function(var_1, var_2, var_3, var_4) { oktg_GL$api$1_glFramebufferRenderbuffer(this, var_1, var_2,
var_3, var_4); }, "$glFramebufferTexture2D0", function(var_1, var_2, var_3, var_4, var_5) { oktg_GL$api$1_glFramebufferTexture2D(this, var_1, var_2, var_3, var_4, var_5); }, "$glGenBuffer", function() { return oktg_GL$api$1_glGenBuffer(this); }, "$glGenerateMipmap0", function(var_1) { oktg_GL$api$1_glGenerateMipmap(this, var_1); }, "$glGenFramebuffer0", function() { return oktg_GL$api$1_glGenFramebuffer(this); }, "$glGenRenderbuffer0", function() { return oktg_GL$api$1_glGenRenderbuffer(this); }, "$glGetActiveAttrib0",
function(var_1, var_2, var_3, var_4) { return oktg_GL$api$1_glGetActiveAttrib(this, var_1, var_2, var_3, var_4); }, "$glGetActiveUniform0", function(var_1, var_2, var_3, var_4) { return oktg_GL$api$1_glGetActiveUniform(this, var_1, var_2, var_3, var_4); }, "$glGetAttribLocation0", function(var_1, var_2) { return oktg_GL$api$1_glGetAttribLocation(this, var_1, var_2); }, "$glGetFloatv0", function(var_1, var_2) { oktg_GL$api$1_glGetFloatv(this, var_1, var_2); }, "$glGetProgramiv0", function(var_1, var_2, var_3)
{ oktg_GL$api$1_glGetProgramiv(this, var_1, var_2, var_3); }, "$glGetProgramInfoLog0", function(var_1) { return oktg_GL$api$1_glGetProgramInfoLog(this, var_1); }, "$glGetShaderiv0", function(var_1, var_2, var_3) { oktg_GL$api$1_glGetShaderiv(this, var_1, var_2, var_3); }, "$glGetShaderInfoLog0", function(var_1) { return oktg_GL$api$1_glGetShaderInfoLog(this, var_1); }, "$glGetUniformLocation0", function(var_1, var_2) { return oktg_GL$api$1_glGetUniformLocation(this, var_1, var_2); }, "$glLinkProgram0", function(var_1)
{ oktg_GL$api$1_glLinkProgram(this, var_1); }, "$glRenderbufferStorage0", function(var_1, var_2, var_3, var_4) { oktg_GL$api$1_glRenderbufferStorage(this, var_1, var_2, var_3, var_4); }, "$glShaderSource0", function(var_1, var_2) { oktg_GL$api$1_glShaderSource(this, var_1, var_2); }, "$glTexParameteri", function(var_1, var_2, var_3) { oktg_GL$api$1_glTexParameteri(this, var_1, var_2, var_3); }, "$glUniform1f0", function(var_1, var_2) { oktg_GL$api$1_glUniform1f(this, var_1, var_2); }, "$glUniform1i0", function(var_1,
var_2) { oktg_GL$api$1_glUniform1i(this, var_1, var_2); }, "$glUniform2f0", function(var_1, var_2, var_3) { oktg_GL$api$1_glUniform2f(this, var_1, var_2, var_3); }, "$glUniform3f0", function(var_1, var_2, var_3, var_4) { oktg_GL$api$1_glUniform3f(this, var_1, var_2, var_3, var_4); }, "$glUniform3fv0", function(var_1, var_2, var_3, var_4) { oktg_GL$api$1_glUniform3fv(this, var_1, var_2, var_3, var_4); }, "$glUniform4f0", function(var_1, var_2, var_3, var_4, var_5) { oktg_GL$api$1_glUniform4f(this, var_1, var_2,
var_3, var_4, var_5); }, "$glUniformMatrix4fv0", function(var_1, var_2, var_3, var_4, var_5) { oktg_GL$api$1_glUniformMatrix4fv(this, var_1, var_2, var_3, var_4, var_5); }, "$glUseProgram0", function(var_1) { oktg_GL$api$1_glUseProgram(this, var_1); }, "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { oktg_GL$api$1_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
oktgg_GLTF$read$11$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$11$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTF$read$11$1_invoke0(this, var_1); }],
oktt_FrameBufferTest$testMain$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktt_FrameBufferTest$testMain$1$1_invoke(this, var_1); }, "$invoke8", function(var_1) { oktt_FrameBufferTest$testMain$1$1_invoke0(this, var_1); }],
oktd_IByteData$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktm_IVertexInput, 0, jl_Object, [], 3, 3, 0, 0,
oktm_VertexInput, 0, jl_Object, [oktm_IVertexInput], 4, 3, 0, ["$getByteOffset", function() { return oktm_VertexInput_getByteOffset(this); }, "$setByteOffset", function(var_1) { oktm_VertexInput_setByteOffset(this, var_1); }, "$setComponentOffset", function(var_1) { oktm_VertexInput_setComponentOffset(this, var_1); }, "$getSize", function() { return oktm_VertexInput_getSize(this); }, "$getName", function() { return oktm_VertexInput_getName(this); }, "$getType", function() { return oktm_VertexInput_getType(this);
}, "$getNormalized", function() { return oktm_VertexInput_getNormalized(this); }, "$getSizeInBytes0", function() { return oktm_VertexInput_getSizeInBytes(this); }],
kjim_KMutableCollection, 0, jl_Object, [kjim_KMutableIterable], 3, 3, 0, 0,
oktm_IVertexInputs, 0, jl_Object, [ju_Collection, kjim_KMutableCollection], 3, 3, 0, 0,
oktm_Frustum$Companion, 0, jl_Object, [], 4, 3, 0, 0,
ooo_DMisc, 0, oooi_Common, [], 0, 3, 0, 0,
okts_Shader$buildSourceCode$$inlined$sortBy$1, 0, jl_Object, [ju_Comparator], 4, 3, 0, ["$compare5", function(var_1, var_2) { return okts_Shader$buildSourceCode$$inlined$sortBy$1_compare(this, var_1, var_2); }],
oooil_CCDSimplex, 0, jl_Object, [], 0, 3, 0, 0,
jl_String$_clinit_$lambda$_81_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0,
oktg_IWorld, 0, jl_Object, [], 3, 3, oktg_IWorld_$callClinit, 0]);
$rt_metadata([jn_BufferOverflowException, "BufferOverflowException", 7, jl_RuntimeException, [], 0, 3, 0, 0,
oktt_TvmIMG, 0, jl_Object, [okti_IImg], 4, 3, oktt_TvmIMG_$callClinit, ["$createImage", function() { return oktt_TvmIMG_createImage(this); }, "$load", function(var_1, var_2, var_3, var_4) { return oktt_TvmIMG_load(this, var_1, var_2, var_3, var_4); }, "$load0", function(var_1, var_2, var_3) { return oktt_TvmIMG_load0(this, var_1, var_2, var_3); }],
oktm_IIndexBufferObject$Companion, 0, jl_Object, [], 4, 3, oktm_IIndexBufferObject$Companion_$callClinit, 0,
ooo_DCylinder, 0, jl_Object, [ooo_DGeom], 3, 3, 0, 0,
oooi_DxCylinder, 0, oooi_DxGeom, [ooo_DCylinder], 0, 3, 0, 0,
oooil_CCDSimplex$ccd_simplex_t, 0, jl_Object, [], 0, 0, 0, 0,
jur_AbstractCharClass$LazyJavaLetterOrDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue(this); }],
otciu_UnicodeHelper$Range, 0, jl_Object, [], 0, 3, 0, 0,
oooi_DxQuickStep$dxQuickStepperStage2CallContext, 0, jl_Object, [], 0, 0, 0, ["$Initialize4", function(var_1, var_2, var_3) { oooi_DxQuickStep$dxQuickStepperStage2CallContext_Initialize(this, var_1, var_2, var_3); }],
jur_AbstractLineTerminator, 0, jl_Object, [], 1, 0, 0, 0,
jur_AbstractLineTerminator$2, 0, jur_AbstractLineTerminator, [], 4, 0, 0, ["$isLineTerminator", function(var_1) { return jur_AbstractLineTerminator$2_isLineTerminator(this, var_1); }, "$isAfterLineTerminator", function(var_1, var_2) { return jur_AbstractLineTerminator$2_isAfterLineTerminator(this, var_1, var_2); }],
jur_AbstractLineTerminator$1, 0, jur_AbstractLineTerminator, [], 4, 0, 0, ["$isLineTerminator", function(var_1) { return jur_AbstractLineTerminator$1_isLineTerminator(this, var_1); }, "$isAfterLineTerminator", function(var_1, var_2) { return jur_AbstractLineTerminator$1_isAfterLineTerminator(this, var_1, var_2); }],
oooip_DxStepperProcessingCallContext$dstepper_fn_t, 0, jl_Object, [], 3, 3, 0, 0,
kr_RandomKt, 0, jl_Object, [], 4, 3, 0, 0,
oktsp_SSAO$render$4, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktsp_SSAO$render$4_invoke(this, var_1); }, "$invoke12", function(var_1) { oktsp_SSAO$render$4_invoke0(this, var_1); }],
oktsp_SSAO$render$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktsp_SSAO$render$3_invoke(this, var_1); }, "$invoke12", function(var_1) { oktsp_SSAO$render$3_invoke0(this, var_1); }],
oktsp_SSAO$render$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktsp_SSAO$render$2_invoke(this, var_1); }, "$invoke12", function(var_1) { oktsp_SSAO$render$2_invoke0(this, var_1); }],
oktgg_GLTFTexture$read$2$2$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktgg_GLTFTexture$read$2$2$1_$callClinit, ["$invoke1", function(var_1) { return oktgg_GLTFTexture$read$2$2$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTFTexture$read$2$2$1_invoke0(this, var_1); }],
oktsp_SSAO$render$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktsp_SSAO$render$1_invoke(this, var_1); }, "$invoke12", function(var_1) { oktsp_SSAO$render$1_invoke0(this, var_1); }],
jur_CharClass, "CharClass", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$add", function(var_1) { return jur_CharClass_add(this, var_1); }, "$add19", function(var_1) { return jur_CharClass_add0(this, var_1); }, "$add0", function(var_1, var_2) { return jur_CharClass_add1(this, var_1, var_2); }, "$union", function(var_1) { jur_CharClass_union(this, var_1); }, "$intersection", function(var_1) { jur_CharClass_intersection(this, var_1); }, "$contains0", function(var_1) { return jur_CharClass_contains(this, var_1); },
"$getBits", function() { return jur_CharClass_getBits(this); }, "$getLowHighSurrogates", function() { return jur_CharClass_getLowHighSurrogates(this); }, "$getInstance", function() { return jur_CharClass_getInstance(this); }, "$toString", function() { return jur_CharClass_toString(this); }, "$hasUCI0", function() { return jur_CharClass_hasUCI(this); }],
jn_BufferUnderflowException, "BufferUnderflowException", 7, jl_RuntimeException, [], 0, 3, 0, 0,
oooip_DxWorldProcessMemoryReserveInfo, 0, jl_Object, [], 0, 3, 0, 0,
oktm_IVec3$Companion$Pool$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktm_IVec3$Companion$Pool$1_invoke(this); }, "$invoke13", function() { return oktm_IVec3$Companion$Pool$1_invoke0(this); }],
ki_PlatformImplementationsKt, 0, jl_Object, [], 4, 3, ki_PlatformImplementationsKt_$callClinit, 0,
oktgg_GLTFSparse$Values$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFSparse$Values$read$1_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFSparse$Values$read$1_invoke0(this, var_1); }],
oooi_DxQuickStep$dxQuickStepperStage1CallContext, 0, jl_Object, [], 0, 0, 0, ["$Initialize", function(var_1, var_2, var_3, var_4) { oooi_DxQuickStep$dxQuickStepperStage1CallContext_Initialize(this, var_1, var_2, var_3, var_4); }],
kr_ClosedRange, 0, jl_Object, [], 3, 3, 0, 0,
jl_CloneNotSupportedException, "CloneNotSupportedException", 10, jl_Exception, [], 0, 3, 0, 0,
cgcj_Yytoken, 0, jl_Object, [], 0, 0, 0, ["$getType0", function() { return cgcj_Yytoken_getType(this); }, "$getValue", function() { return cgcj_Yytoken_getValue(this); }],
oktt_TvmFile$readBytes$1, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { oktt_TvmFile$readBytes$1_run(this); }],
oktd_IData, 0, jl_Object, [], 3, 3, 0, 0,
oktd_DATA, 0, jl_Object, [oktd_IData], 4, 3, oktd_DATA_$callClinit, ["$setApi4", function(var_1) { oktd_DATA_setApi(this, var_1); }, "$getNullBuffer", function() { return oktd_DATA_getNullBuffer(this); }, "$decodeURI", function(var_1) { return oktd_DATA_decodeURI(this, var_1); }, "$decodeBase64", function(var_1, var_2) { return oktd_DATA_decodeBase64(this, var_1, var_2); }, "$bytes0", function(var_1) { return oktd_DATA_bytes(this, var_1); }],
ju_List, 0, jl_Object, [ju_Collection], 3, 3, 0, 0,
kjim_KMutableList, 0, jl_Object, [kjim_KMutableCollection], 3, 3, 0, 0,
oktu_IAsyncList, 0, jl_Object, [ju_List, kjim_KMutableList], 3, 3, 0, 0,
oktgg_IGLTFArray, 0, jl_Object, [oktu_IAsyncList], 3, 3, 0, 0,
oooil_CCDQuat, 0, jl_Object, [], 0, 3, 0, 0,
ooott_AbstractTaskExecutor, 0, jl_Object, [ooott_TaskExecutor], 1, 3, 0, ["$group", function(var_1, var_2) { return ooott_AbstractTaskExecutor_group(this, var_1, var_2); }],
ju_AbstractCollection, 0, jl_Object, [ju_Collection], 1, 3, 0, ["$isEmpty", function() { return ju_AbstractCollection_isEmpty(this); }, "$toArray", function() { return ju_AbstractCollection_toArray(this); }, "$toArray0", function(var_1) { return ju_AbstractCollection_toArray0(this, var_1); }, "$addAll", function(var_1) { return ju_AbstractCollection_addAll(this, var_1); }],
ju_Set, 0, jl_Object, [ju_Collection], 3, 3, 0, 0,
ju_AbstractSet, 0, ju_AbstractCollection, [ju_Set], 1, 3, 0, ["$removeAll", function(var_1) { return ju_AbstractSet_removeAll(this, var_1); }, "$equals0", function(var_1) { return ju_AbstractSet_equals(this, var_1); }, "$hashCode", function() { return ju_AbstractSet_hashCode(this); }],
ju_EnumSet, 0, ju_AbstractSet, [jl_Cloneable, ji_Serializable], 1, 3, 0, 0,
oktga_IAnim, 0, jl_Object, [], 3, 3, 0, 0,
oktga_Anim, 0, jl_Object, [oktga_IAnim], 4, 3, 0, ["$getTranslationTracks", function() { return oktga_Anim_getTranslationTracks(this); }, "$getRotationTracks", function() { return oktga_Anim_getRotationTracks(this); }, "$getScaleTracks", function() { return oktga_Anim_getScaleTracks(this); }, "$getActionTrack", function() { return oktga_Anim_getActionTrack(this); }, "$getExtra", function() { return oktga_Anim_getExtra(this); }, "$getDuration", function() { return oktga_Anim_getDuration(this); }, "$setDuration",
function(var_1) { oktga_Anim_setDuration(this, var_1); }, "$setName", function(var_1) { oktga_Anim_setName(this, var_1); }, "$calculateDuration2", function() { oktga_Anim_calculateDuration(this); }],
oktgg_GLTFScene$read$3$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFScene$read$3$1$1_invoke(this, var_1); }, "$invoke14", function(var_1) { oktgg_GLTFScene$read$3$1$1_invoke0(this, var_1); }],
oktf_IFS$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
otjde_LoadEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0,
oooi_DxGeom$dColliderEntry, 0, jl_Object, [], 0, 0, 0, 0,
kt_StringsKt__StringNumberConversionsKt, 0, kt_StringsKt__StringNumberConversionsJVMKt, [], 0, 0, 0, 0,
kt_StringsKt__StringsJVMKt, 0, kt_StringsKt__StringNumberConversionsKt, [], 0, 0, 0, 0]);
$rt_metadata([kt_StringsKt__StringsKt, 0, kt_StringsKt__StringsJVMKt, [], 0, 0, 0, 0,
kt_StringsKt___StringsJvmKt, 0, kt_StringsKt__StringsKt, [], 0, 0, 0, 0,
ooo_DWorld, 0, jl_Object, [], 3, 3, 0, 0,
otci_Base46, 0, jl_Object, [], 4, 3, 0, 0,
oooi_DxAbstractHeightfield, 0, oooi_DxGeom, [ooo_DHeightfield], 1, 3, 0, 0,
oooi_DxHeightfield, 0, oooi_DxAbstractHeightfield, [], 0, 3, 0, 0,
jur_CompositeRangeSet, 0, jur_JointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_CompositeRangeSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_CompositeRangeSet_setNext(this, var_1); }, "$hasConsumed", function(var_1) { return jur_CompositeRangeSet_hasConsumed(this, var_1); }, "$first", function(var_1) { return jur_CompositeRangeSet_first(this, var_1); }],
oooi_CollisionLibccd$CollideConvexConvexCCD, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollisionLibccd$CollideConvexConvexCCD_dColliderFn(this, var_1, var_2, var_3, var_4); }],
ju_Map$Entry, 0, jl_Object, [], 3, 3, 0, 0,
ju_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, ["$equals0", function(var_1) { return ju_MapEntry_equals(this, var_1); }, "$getKey", function() { return ju_MapEntry_getKey(this); }, "$getValue", function() { return ju_MapEntry_getValue(this); }, "$hashCode", function() { return ju_MapEntry_hashCode(this); }],
ju_Hashtable$Entry, 0, ju_MapEntry, [], 0, 0, 0, ["$getKeyHash", function() { return ju_Hashtable$Entry_getKeyHash(this); }, "$equalsKey", function(var_1, var_2) { return ju_Hashtable$Entry_equalsKey(this, var_1, var_2); }],
kr_RangesKt__RangesKt, 0, jl_Object, [], 0, 0, 0, 0,
kr_RangesKt___RangesKt, 0, kr_RangesKt__RangesKt, [], 0, 0, 0, 0,
kr_RangesKt, 0, kr_RangesKt___RangesKt, [], 4, 3, 0, 0,
jl_ThreadLocal, 0, jl_Object, [], 0, 3, 0, ["$get15", function() { return jl_ThreadLocal_get(this); }],
kr_FallbackThreadLocalRandom$implStorage$1, 0, jl_ThreadLocal, [], 4, 3, 0, ["$initialValue0", function() { return kr_FallbackThreadLocalRandom$implStorage$1_initialValue(this); }, "$initialValue", function() { return kr_FallbackThreadLocalRandom$implStorage$1_initialValue0(this); }],
jur_FinalSet, 0, jur_FSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_FinalSet_matches(this, var_1, var_2, var_3); }],
k_TypeCastException, "TypeCastException", 20, jl_ClassCastException, [], 0, 3, 0, 0,
ooo_DConvex, 0, jl_Object, [ooo_DGeom], 3, 3, 0, 0,
ooot_MutexGroup$dxProcessContextMutex, 0, jl_Enum, [], 12, 3, ooot_MutexGroup$dxProcessContextMutex_$callClinit, 0,
oooig_GimMath, 0, jl_Object, [], 0, 3, oooig_GimMath_$callClinit, 0,
jl_StackTraceElement, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0,
oktt_MouseTest$testMain$1, 0, jl_Object, [okti_IMouseListener], 4, 3, 0, ["$buttonDown0", function(var_1, var_2, var_3, var_4) { oktt_MouseTest$testMain$1_buttonDown(this, var_1, var_2, var_3, var_4); }, "$buttonUp", function(var_1, var_2, var_3, var_4) { oktt_MouseTest$testMain$1_buttonUp(this, var_1, var_2, var_3, var_4); }, "$dragged0", function(var_1, var_2, var_3) { oktt_MouseTest$testMain$1_dragged(this, var_1, var_2, var_3); }, "$moved0", function(var_1, var_2) { oktt_MouseTest$testMain$1_moved(this,
var_1, var_2); }, "$scrolled0", function(var_1) { oktt_MouseTest$testMain$1_scrolled(this, var_1); }],
ju_HashMap$HashEntry, 0, ju_MapEntry, [], 0, 0, 0, 0,
ju_LinkedHashMap$LinkedHashMapEntry, 0, ju_HashMap$HashEntry, [], 4, 0, 0, 0,
oktgn_IDelegateTransformNode, 0, jl_Object, [oktgn_ITransformNode], 3, 3, 0, 0,
oooi_DxGimpactData, 0, oooi_DxTriMeshData, [], 0, 3, 0, ["$getDataRef", function() { return oooi_DxGimpactData_getDataRef(this); }, "$getIndexRef", function() { return oooi_DxGimpactData_getIndexRef(this); }, "$build1", function(var_1, var_2) { oooi_DxGimpactData_build(this, var_1, var_2); }, "$preprocess", function() { oooi_DxGimpactData_preprocess(this); }, "$getEdgeAngle", function(var_1, var_2) { return oooi_DxGimpactData_getEdgeAngle(this, var_1, var_2); }],
oooig_GimGeometry, 0, oooig_GimMath, [], 0, 3, 0, 0,
oktu_IAsyncList$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
ju_Iterator, 0, jl_Object, [], 3, 3, 0, 0,
ju_AbstractList$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, ["$hasNext", function() { return ju_AbstractList$1_hasNext(this); }, "$next", function() { return ju_AbstractList$1_next(this); }, "$checkConcurrentModification", function() { ju_AbstractList$1_checkConcurrentModification(this); }],
oktgg_GLTFCamera$read$3$4, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFCamera$read$3$4_invoke(this, var_1); }, "$invoke15", function(var_1) { oktgg_GLTFCamera$read$3$4_invoke0(this, var_1); }],
oktgg_GLTFCamera$read$3$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFCamera$read$3$3_invoke(this, var_1); }, "$invoke15", function(var_1) { oktgg_GLTFCamera$read$3$3_invoke0(this, var_1); }],
oktgg_GLTFCamera$read$3$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFCamera$read$3$2_invoke(this, var_1); }, "$invoke15", function(var_1) { oktgg_GLTFCamera$read$3$2_invoke0(this, var_1); }],
oktgg_GLTFCamera$read$3$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFCamera$read$3$1_invoke(this, var_1); }, "$invoke15", function(var_1) { oktgg_GLTFCamera$read$3$1_invoke0(this, var_1); }],
oktgg_GLTFCamera, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, 0, ["$setName", function(var_1) { oktgg_GLTFCamera_setName(this, var_1); }, "$setAspectRatio", function(var_1) { oktgg_GLTFCamera_setAspectRatio(this, var_1); }, "$setYfov", function(var_1) { oktgg_GLTFCamera_setYfov(this, var_1); }, "$setZfar", function(var_1) { oktgg_GLTFCamera_setZfar(this, var_1); }, "$setZnear", function(var_1) { oktgg_GLTFCamera_setZnear(this, var_1); }, "$setXmag", function(var_1) { oktgg_GLTFCamera_setXmag(this,
var_1); }, "$setYmag", function(var_1) { oktgg_GLTFCamera_setYmag(this, var_1); }, "$read", function(var_1) { oktgg_GLTFCamera_read(this, var_1); }, "$getGltf0", function() { return oktgg_GLTFCamera_getGltf(this); }, "$getElementIndex", function() { return oktgg_GLTFCamera_getElementIndex(this); }, "$getCamera", function() { return oktgg_GLTFCamera_getCamera(this); }],
oooi_CollideTrimeshPlane, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dCollideTrimeshPlane", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollideTrimeshPlane_dCollideTrimeshPlane(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollideTrimeshPlane_dColliderFn(this, var_1, var_2, var_3, var_4); }],
ooo_DContactGeom, 0, jl_Object, [], 0, 3, 0, 0,
ooo_DGeom$DNearCallback, 0, jl_Object, [], 3, 3, 0, 0,
oooi_DxSpace$2, 0, jl_Object, [ooo_DGeom$DNearCallback], 4, 0, 0, ["$call", function(var_1, var_2, var_3) { oooi_DxSpace$2_call(this, var_1, var_2, var_3); }],
oooi_DxSpace$1, 0, jl_Object, [ooo_DGeom$DNearCallback], 4, 0, 0, ["$call", function(var_1, var_2, var_3) { oooi_DxSpace$1_call(this, var_1, var_2, var_3); }],
oooi_DxHashSpace$dxAABB, 0, jl_Object, [], 0, 0, 0, 0,
jnci_BufferedDecoder$Controller, 0, jl_Object, [], 0, 3, 0, ["$hasMoreInput", function() { return jnci_BufferedDecoder$Controller_hasMoreInput(this); }, "$hasMoreOutput", function(var_1) { return jnci_BufferedDecoder$Controller_hasMoreOutput(this, var_1); }, "$setInPosition", function(var_1) { jnci_BufferedDecoder$Controller_setInPosition(this, var_1); }, "$setOutPosition", function(var_1) { jnci_BufferedDecoder$Controller_setOutPosition(this, var_1); }],
jur_PossessiveQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PossessiveQuantifierSet_matches(this, var_1, var_2, var_3); }],
jl_Short, 0, jl_Number, [jl_Comparable], 0, 3, jl_Short_$callClinit, ["$intValue", function() { return jl_Short_intValue(this); }, "$floatValue", function() { return jl_Short_floatValue(this); }, "$shortValue", function() { return jl_Short_shortValue(this); }, "$equals0", function(var_1) { return jl_Short_equals(this, var_1); }, "$hashCode", function() { return jl_Short_hashCode(this); }, "$compareTo4", function(var_1) { return jl_Short_compareTo(this, var_1); }, "$compareTo6", function(var_1) { return jl_Short_compareTo0(this,
var_1); }],
jl_ReflectiveOperationException, 0, jl_Exception, [], 0, 3, 0, 0,
jl_InstantiationException, 0, jl_ReflectiveOperationException, [], 0, 3, 0, 0,
ooo_OdeHelper, 0, jl_Object, [], 1, 3, ooo_OdeHelper_$callClinit, 0,
oooij_OdeJointsFactoryImpl, 0, ooo_OdeHelper, [], 0, 3, 0, ["$createJoint", function(var_1, var_2) { return oooij_OdeJointsFactoryImpl_createJoint(this, var_1, var_2); }, "$dJointCreateContact", function(var_1, var_2, var_3) { return oooij_OdeJointsFactoryImpl_dJointCreateContact(this, var_1, var_2, var_3); }, "$_dAreConnectedExcluding", function(var_1, var_2, var_3) { return oooij_OdeJointsFactoryImpl__dAreConnectedExcluding(this, var_1, var_2, var_3); }],
oooi_OdeFactoryImpl, 0, oooij_OdeJointsFactoryImpl, [], 0, 3, oooi_OdeFactoryImpl_$callClinit, 0]);
$rt_metadata([oktu_Pool, 0, jl_Object, [], 4, 3, 0, ["$getFree", function() { return oktu_Pool_getFree(this); }, "$getUsed", function() { return oktu_Pool_getUsed(this); }, "$get15", function() { return oktu_Pool_get(this); }, "$free", function(var_1) { oktu_Pool_free(this, var_1); }],
oooi_DxSpace$3, 0, jl_Object, [jl_Iterable], 0, 0, 0, ["$iterator", function() { return oooi_DxSpace$3_iterator(this); }],
oooig_GimTrimeshCapsuleCollision, 0, jl_Object, [], 0, 3, 0, 0,
okti_IMouse, 0, jl_Object, [], 3, 3, 0, 0,
oooi_DxTriMeshDisabled$dxTriMeshDisabledData, 0, oooi_DxTriMeshData, [], 0, 0, 0, ["$preprocess", function() { oooi_DxTriMeshDisabled$dxTriMeshDisabledData_preprocess(this); }, "$build1", function(var_1, var_2) { oooi_DxTriMeshDisabled$dxTriMeshDisabledData_build(this, var_1, var_2); }],
oooi_DxCollisionUtil, 0, jl_Object, [], 0, 3, 0, ["$dVector3Scale", function(var_1, var_2) { oooi_DxCollisionUtil_dVector3Scale(this, var_1, var_2); }, "$dVector3Add", function(var_1, var_2, var_3) { oooi_DxCollisionUtil_dVector3Add(this, var_1, var_2, var_3); }, "$dVector3Length", function(var_1) { return oooi_DxCollisionUtil_dVector3Length(this, var_1); }, "$dVector3Dot", function(var_1, var_2) { return oooi_DxCollisionUtil_dVector3Dot(this, var_1, var_2); }, "$dVector3LengthSquare", function(var_1) { return oooi_DxCollisionUtil_dVector3LengthSquare(this,
var_1); }, "$dVector3CrossMat3Col", function(var_1, var_2, var_3, var_4) { oooi_DxCollisionUtil_dVector3CrossMat3Col(this, var_1, var_2, var_3, var_4); }, "$dMultiplyMat3Vec3", function(var_1, var_2, var_3) { oooi_DxCollisionUtil_dMultiplyMat3Vec3(this, var_1, var_2, var_3); }, "$dMatrix3Det", function(var_1) { return oooi_DxCollisionUtil_dMatrix3Det(this, var_1); }, "$dMatrix3Inv", function(var_1, var_2) { oooi_DxCollisionUtil_dMatrix3Inv(this, var_1, var_2); }],
oooi_CollideCylinderPlane, 0, oooi_DxCollisionUtil, [ooo_DColliderFn], 0, 0, oooi_CollideCylinderPlane_$callClinit, ["$dCollideCylinderPlane", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollideCylinderPlane_dCollideCylinderPlane(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollideCylinderPlane_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oooig_GimConstants, 0, jl_Object, [], 3, 3, 0, 0,
oooig_GimBufferArrayFloat, 0, jl_Object, [oooig_GimConstants], 0, 3, 0, ["$GIM_BUFFER_ARRAY_POINTER", function(var_1) { return oooig_GimBufferArrayFloat_GIM_BUFFER_ARRAY_POINTER(this, var_1); }, "$GIM_BUFFER_ARRAY_DESTROY", function() { oooig_GimBufferArrayFloat_GIM_BUFFER_ARRAY_DESTROY(this); }, "$cloneRefs", function() { return oooig_GimBufferArrayFloat_cloneRefs(this); }, "$cloneValues", function() { return oooig_GimBufferArrayFloat_cloneValues(this); }, "$size", function() { return oooig_GimBufferArrayFloat_size(this);
}],
oktgg_GLTFAnimation$read$2$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAnimation$read$2$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTFAnimation$read$2$1_invoke0(this, var_1); }],
oktd_IShortData, 0, jl_Object, [oktd_IDataArray], 3, 3, 0, 0,
ooo_DContactGeomBuffer, 0, jl_Object, [], 4, 3, 0, ["$get8", function() { return ooo_DContactGeomBuffer_get0(this); }, "$get4", function(var_1) { return ooo_DContactGeomBuffer_get(this, var_1); }, "$createView", function(var_1) { return ooo_DContactGeomBuffer_createView(this, var_1); }, "$getSafe", function(var_1, var_2) { return ooo_DContactGeomBuffer_getSafe(this, var_1, var_2); }],
oktm_IVec2$Companion, 0, jl_Object, [], 4, 3, oktm_IVec2$Companion_$callClinit, 0,
oooij_Info2Descr, 0, jl_Object, [], 3, 3, 0, 0,
ju_HashSet, 0, ju_AbstractSet, [jl_Cloneable, ji_Serializable], 0, 3, 0, ["$add1", function(var_1) { return ju_HashSet_add(this, var_1); }, "$clear", function() { ju_HashSet_clear(this); }, "$contains1", function(var_1) { return ju_HashSet_contains(this, var_1); }, "$iterator", function() { return ju_HashSet_iterator(this); }, "$remove1", function(var_1) { return ju_HashSet_remove(this, var_1); }, "$size", function() { return ju_HashSet_size(this); }],
oktgg_GLTF$read$16$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktgg_GLTF$read$16$1_invoke(this); }, "$invoke2", function() { oktgg_GLTF$read$16$1_invoke0(this); }],
oktgg_GLTFAnimation$read$2$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAnimation$read$2$1$1_invoke(this, var_1); }, "$invoke16", function(var_1) { oktgg_GLTFAnimation$read$2$1$1_invoke0(this, var_1); }],
oooig_GimTrimeshRayCollision, 0, jl_Object, [], 0, 3, 0, 0,
okttm_BoxMeshBuilderTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return okttm_BoxMeshBuilderTest_getName(this); }, "$testMain", function() { okttm_BoxMeshBuilderTest_testMain(this); }],
oktsg_GLSLValue, 0, oktsg_ShaderData, [], 4, 3, 0, ["$asFloat", function() { return oktsg_GLSLValue_asFloat(this); }, "$asVec2", function() { return oktsg_GLSLValue_asVec2(this); }, "$asVec3", function() { return oktsg_GLSLValue_asVec3(this); }, "$asVec4", function() { return oktsg_GLSLValue_asVec4(this); }, "$getName", function() { return oktsg_GLSLValue_getName(this); }, "$getType", function() { return oktsg_GLSLValue_getType(this); }],
cgcj_JsonException$Problems, 0, jl_Enum, [], 12, 3, cgcj_JsonException$Problems_$callClinit, 0,
oooip_DxWorldProcessContext, 0, jl_Object, [], 0, 3, 0, ["$SetIslandsMemArena", function(var_1) { oooip_DxWorldProcessContext_SetIslandsMemArena(this, var_1); }, "$GetIslandsMemArena", function() { return oooip_DxWorldProcessContext_GetIslandsMemArena(this); }, "$SetStepperArenasList", function(var_1) { oooip_DxWorldProcessContext_SetStepperArenasList(this, var_1); }, "$GetStepperArenasList", function() { return oooip_DxWorldProcessContext_GetStepperArenasList(this); }, "$EnsureStepperSyncObjectsAreAllocated",
function(var_1) { return oooip_DxWorldProcessContext_EnsureStepperSyncObjectsAreAllocated(this, var_1); }, "$ObtainStepperMemArena", function() { return oooip_DxWorldProcessContext_ObtainStepperMemArena(this); }, "$ReturnStepperMemArena", function(var_1) { oooip_DxWorldProcessContext_ReturnStepperMemArena(this, var_1); }, "$ReallocateIslandsMemArena", function(var_1, var_2, var_3, var_4) { return oooip_DxWorldProcessContext_ReallocateIslandsMemArena(this, var_1, var_2, var_3, var_4); }, "$ReallocateStepperMemArenas",
function(var_1, var_2, var_3, var_4, var_5, var_6) { return oooip_DxWorldProcessContext_ReallocateStepperMemArenas(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$FreeArenasList", function(var_1) { oooip_DxWorldProcessContext_FreeArenasList(this, var_1); }, "$GetStepperArenasHead", function() { return oooip_DxWorldProcessContext_GetStepperArenasHead(this); }, "$TryExtractingStepperArenasHead", function(var_1) { return oooip_DxWorldProcessContext_TryExtractingStepperArenasHead(this, var_1); }, "$TryInsertingStepperArenasHead",
function(var_1, var_2) { return oooip_DxWorldProcessContext_TryInsertingStepperArenasHead(this, var_1, var_2); }, "$LockForStepbodySerialization", function() { oooip_DxWorldProcessContext_LockForStepbodySerialization(this); }, "$UnlockForStepbodySerialization", function() { oooip_DxWorldProcessContext_UnlockForStepbodySerialization(this); }],
oktt_Texture2DTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktt_Texture2DTest$testMain$1_invoke(this); }, "$invoke2", function() { oktt_Texture2DTest$testMain$1_invoke0(this); }],
okt_IApp, 0, jl_Object, [], 3, 3, 0, 0,
okt_APP, 0, jl_Object, [okt_IApp], 4, 3, okt_APP_$callClinit, ["$setApi1", function(var_1) { okt_APP_setApi(this, var_1); }, "$getPlatformType", function() { return okt_APP_getPlatformType(this); }, "$getDeltaTime", function() { return okt_APP_getDeltaTime(this); }, "$getWidth", function() { return okt_APP_getWidth(this); }, "$getHeight", function() { return okt_APP_getHeight(this); }, "$messageBox", function(var_1, var_2) { okt_APP_messageBox(this, var_1, var_2); }],
jur_AbstractCharClass$LazyJavaTitleCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaTitleCase_computeValue(this); }],
jur_PreviousMatch, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PreviousMatch_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_PreviousMatch_hasConsumed(this, var_1); }],
ooo_DAABBC, 0, jl_Object, [], 3, 3, 0, 0,
ooo_DAABB, 0, jl_Object, [ooo_DAABBC], 0, 3, 0, ["$len0", function() { return ooo_DAABB_len0(this); }, "$len1", function() { return ooo_DAABB_len1(this); }, "$len2", function() { return ooo_DAABB_len2(this); }, "$isValid", function() { return ooo_DAABB_isValid(this); }, "$isDisjoint", function(var_1) { return ooo_DAABB_isDisjoint(this, var_1); }, "$setMin0", function(var_1) { ooo_DAABB_setMin0(this, var_1); }, "$setMin1", function(var_1) { ooo_DAABB_setMin1(this, var_1); }, "$setMin2", function(var_1) { ooo_DAABB_setMin2(this,
var_1); }, "$setMax0", function(var_1) { ooo_DAABB_setMax0(this, var_1); }, "$setMax1", function(var_1) { ooo_DAABB_setMax1(this, var_1); }, "$setMax2", function(var_1) { ooo_DAABB_setMax2(this, var_1); }, "$getMin0", function() { return ooo_DAABB_getMin0(this); }, "$getMin1", function() { return ooo_DAABB_getMin1(this); }, "$getMin2", function() { return ooo_DAABB_getMin2(this); }, "$getMax0", function() { return ooo_DAABB_getMax0(this); }, "$getMax1", function() { return ooo_DAABB_getMax1(this); }, "$getMax2",
function() { return ooo_DAABB_getMax2(this); }, "$getMax", function(var_1) { return ooo_DAABB_getMax(this, var_1); }, "$getMin", function(var_1) { return ooo_DAABB_getMin(this, var_1); }, "$set41", function(var_1) { ooo_DAABB_set(this, var_1); }, "$set6", function(var_1, var_2, var_3, var_4, var_5, var_6) { ooo_DAABB_set0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setZero", function() { ooo_DAABB_setZero(this); }, "$expand", function(var_1) { ooo_DAABB_expand(this, var_1); }],
jur_NonCapFSet, 0, jur_FSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_NonCapFSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_NonCapFSet_hasConsumed(this, var_1); }],
oktgg_GLTFAnimation$asFloatBuffer$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAnimation$asFloatBuffer$1_invoke(this, var_1); }, "$invoke17", function(var_1) { oktgg_GLTFAnimation$asFloatBuffer$1_invoke0(this, var_1); }],
oktgn_ITransformNode$Companion, 0, jl_Object, [], 4, 3, oktgn_ITransformNode$Companion_$callClinit, ["$getCap", function() { return oktgn_ITransformNode$Companion_getCap(this); }],
oktsg_GLSLFloatInline, 0, oktsg_ShaderData, [], 4, 3, 0, ["$getInlineCode", function() { return oktsg_GLSLFloatInline_getInlineCode(this); }, "$getType", function() { return oktsg_GLSLFloatInline_getType(this); }, "$getScope", function() { return oktsg_GLSLFloatInline_getScope(this); }, "$asFloat", function() { return oktsg_GLSLFloatInline_asFloat(this); }, "$asVec2", function() { return oktsg_GLSLFloatInline_asVec2(this); }, "$asVec3", function() { return oktsg_GLSLFloatInline_asVec3(this); }, "$asVec4", function()
{ return oktsg_GLSLFloatInline_asVec4(this); }, "$getName", function() { return oktsg_GLSLFloatInline_getName(this); }],
oktt_TvmMouse, 0, jl_Object, [okti_IMouse], 4, 3, 0, ["$getX", function() { return oktt_TvmMouse_getX(this); }, "$setX", function(var_1) { oktt_TvmMouse_setX(this, var_1); }, "$getY", function() { return oktt_TvmMouse_getY(this); }, "$setY", function(var_1) { oktt_TvmMouse_setY(this, var_1); }, "$setDeltaX", function(var_1) { oktt_TvmMouse_setDeltaX(this, var_1); }, "$setDeltaY", function(var_1) { oktt_TvmMouse_setDeltaY(this, var_1); }, "$getPressed", function() { return oktt_TvmMouse_getPressed(this); }, "$getListeners",
function() { return oktt_TvmMouse_getListeners(this); }, "$getLastButton", function() { return oktt_TvmMouse_getLastButton(this); }, "$setLastButton", function(var_1) { oktt_TvmMouse_setLastButton(this, var_1); }, "$getButton", function(var_1) { return oktt_TvmMouse_getButton(this, var_1); }, "$updatePos", function(var_1) { oktt_TvmMouse_updatePos(this, var_1); }, "$addListener0", function(var_1) { oktt_TvmMouse_addListener(this, var_1); }, "$reset1", function() { oktt_TvmMouse_reset(this); }],
oooig_GimGeometry$mat4f, 0, jl_Object, [], 0, 3, 0, 0,
oktg_IArmature, 0, jl_Object, [], 3, 3, oktg_IArmature_$callClinit, 0,
jur_AbstractCharClass$LazyJavaLowerCase$1, "AbstractCharClass$LazyJavaLowerCase$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaLowerCase$1_contains(this, var_1); }],
jl_Object$monitorExit$lambda$_8_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, ["$run", function() { jl_Object$monitorExit$lambda$_8_0_run(this); }],
ji_PrintWriter, 0, ji_Writer, [], 0, 3, 0, ["$flush0", function() { ji_PrintWriter_flush(this); }, "$print", function(var_1) { ji_PrintWriter_print(this, var_1); }, "$println", function() { ji_PrintWriter_println(this); }, "$println0", function(var_1) { ji_PrintWriter_println0(this, var_1); }, "$println1", function(var_1) { ji_PrintWriter_println1(this, var_1); }, "$setError", function() { ji_PrintWriter_setError(this); }, "$write3", function(var_1) { ji_PrintWriter_write(this, var_1); }, "$write2", function(var_1,
var_2, var_3) { ji_PrintWriter_write0(this, var_1, var_2, var_3); }, "$doWrite", function(var_1, var_2, var_3) { ji_PrintWriter_doWrite(this, var_1, var_2, var_3); }, "$write1", function(var_1) { ji_PrintWriter_write1(this, var_1); }],
oktgg_GLTFAccessor, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, 0, ["$typeSize", function() { return oktgg_GLTFAccessor_typeSize(this); }, "$componentTypeSize", function() { return oktgg_GLTFAccessor_componentTypeSize(this); }, "$strideSize", function() { return oktgg_GLTFAccessor_strideSize(this); }, "$size", function() { return oktgg_GLTFAccessor_size(this); }, "$read", function(var_1) { oktgg_GLTFAccessor_read(this, var_1); }, "$getBufferView", function() { return oktgg_GLTFAccessor_getBufferView(this);
}, "$setBufferView", function(var_1) { oktgg_GLTFAccessor_setBufferView(this, var_1); }, "$getByteOffset", function() { return oktgg_GLTFAccessor_getByteOffset(this); }, "$setByteOffset", function(var_1) { oktgg_GLTFAccessor_setByteOffset(this, var_1); }, "$getComponentType0", function() { return oktgg_GLTFAccessor_getComponentType(this); }, "$getNormalized", function() { return oktgg_GLTFAccessor_getNormalized(this); }, "$setNormalized", function(var_1) { oktgg_GLTFAccessor_setNormalized(this, var_1); }, "$getCount",
function() { return oktgg_GLTFAccessor_getCount(this); }, "$getType1", function() { return oktgg_GLTFAccessor_getType(this); }, "$getMax3", function() { return oktgg_GLTFAccessor_getMax(this); }, "$setMax", function(var_1) { oktgg_GLTFAccessor_setMax(this, var_1); }, "$setMin", function(var_1) { oktgg_GLTFAccessor_setMin(this, var_1); }, "$getSparse", function() { return oktgg_GLTFAccessor_getSparse(this); }, "$setSparse", function(var_1) { oktgg_GLTFAccessor_setSparse(this, var_1); }],
jur_AbstractCharClass$LazyPunct, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyPunct_computeValue(this); }],
oktp_IPhysicsWorld$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
ks_SequencesKt__SequenceBuilderKt, 0, jl_Object, [], 0, 0, 0, 0,
oooicj_ObjArray, 0, jl_Object, [], 0, 3, 0, ["$at0", function() { return oooicj_ObjArray_at0(this); }, "$at", function(var_1) { return oooicj_ObjArray_at(this, var_1); }, "$setAt0", function(var_1) { oooicj_ObjArray_setAt0(this, var_1); }, "$inc0", function() { oooicj_ObjArray_inc(this); }, "$inc", function(var_1) { oooicj_ObjArray_inc0(this, var_1); }],
oktgg_GLTFPrimitive$Companion, 0, jl_Object, [], 4, 3, 0, ["$getInd", function() { return oktgg_GLTFPrimitive$Companion_getInd(this); }],
ooot_MutexGroup, 0, jl_Object, [], 3, 3, 0, 0,
ooot_MutexGroupImpl, 0, jl_Object, [ooot_MutexGroup], 0, 3, 0, ["$lock0", function(var_1) { ooot_MutexGroupImpl_lock(this, var_1); }, "$unlock", function(var_1) { ooot_MutexGroupImpl_unlock(this, var_1); }],
jur_AbstractCharClass$LazySpace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazySpace_computeValue(this); }],
okts_IShader, 0, jl_Object, [], 3, 3, 0, 0,
okts_Shader, 0, jl_Object, [okts_IShader], 0, 3, okts_Shader_$callClinit, ["$getLog", function() { return okts_Shader_getLog(this); }, "$isCompiled", function() { return okts_Shader_isCompiled(this); }, "$getUniforms", function() { return okts_Shader_getUniforms(this); }, "$getUniforms0", function() { return okts_Shader_getUniforms0(this); }, "$getAttributes0", function() { return okts_Shader_getAttributes(this); }, "$getAttributes", function() { return okts_Shader_getAttributes0(this); }, "$getVertexShaderHandle",
function() { return okts_Shader_getVertexShaderHandle(this); }, "$setVertexShaderHandle", function(var_1) { okts_Shader_setVertexShaderHandle(this, var_1); }, "$getFragmentShaderHandle", function() { return okts_Shader_getFragmentShaderHandle(this); }, "$setFragmentShaderHandle", function(var_1) { okts_Shader_setFragmentShaderHandle(this, var_1); }, "$getHandle", function() { return okts_Shader_getHandle(this); }, "$setHandle", function(var_1) { okts_Shader_setHandle(this, var_1); }, "$getNodes0", function()
{ return okts_Shader_getNodes(this); }, "$vertSourceCode", function(var_1, var_2) { return okts_Shader_vertSourceCode(this, var_1, var_2); }, "$fragSourceCode", function(var_1, var_2) { return okts_Shader_fragSourceCode(this, var_1, var_2); }, "$getVersionStr", function() { return okts_Shader_getVersionStr(this); }, "$load1", function(var_1, var_2) { okts_Shader_load(this, var_1, var_2); }, "$compileShaders", function(var_1, var_2) { okts_Shader_compileShaders(this, var_1, var_2); }, "$loadShader", function(var_1,
var_2) { return okts_Shader_loadShader(this, var_1, var_2); }, "$createProgram", function() { return okts_Shader_createProgram(this); }, "$linkProgram", function(var_1) { return okts_Shader_linkProgram(this, var_1); }, "$buildSourceCode", function() { okts_Shader_buildSourceCode(this); }, "$build0", function() { okts_Shader_build(this); }, "$findMaxChildrenTreeDepth", function(var_1, var_2) { return okts_Shader_findMaxChildrenTreeDepth(this, var_1, var_2); }, "$destroy0", function() { okts_Shader_destroy(this);
}, "$getVertCode", function() { return okts_Shader_getVertCode(this); }, "$setVertCode", function(var_1) { okts_Shader_setVertCode(this, var_1); }, "$getFragCode", function() { return okts_Shader_getFragCode(this); }, "$setFragCode", function(var_1) { okts_Shader_setFragCode(this, var_1); }, "$getName", function() { return okts_Shader_getName(this); }, "$setName", function(var_1) { okts_Shader_setName(this, var_1); }, "$getVersion", function() { return okts_Shader_getVersion(this); }, "$getProfile", function()
{ return okts_Shader_getProfile(this); }, "$prepareSceneData0", function(var_1) { okts_Shader_prepareSceneData(this, var_1); }, "$prepareObjectData0", function(var_1) { okts_Shader_prepareObjectData(this, var_1); }, "$prepareToDrawMesh0", function(var_1) { okts_Shader_prepareToDrawMesh(this, var_1); }, "$numerateLines", function(var_1, var_2, var_3) { return okts_Shader_numerateLines(this, var_1, var_2, var_3); }, "$sourceCode0", function(var_1) { return okts_Shader_sourceCode(this, var_1); }, "$bind", function()
{ okts_Shader_bind(this); }, "$get24", function(var_1) { return okts_Shader_get(this, var_1); }, "$set75", function(var_1, var_2, var_3) { okts_Shader_set(this, var_1, var_2, var_3); }, "$set13", function(var_1, var_2) { okts_Shader_set0(this, var_1, var_2); }, "$set36", function(var_1, var_2, var_3) { okts_Shader_set1(this, var_1, var_2, var_3); }, "$set39", function(var_1, var_2, var_3, var_4) { okts_Shader_set2(this, var_1, var_2, var_3, var_4); }, "$set64", function(var_1, var_2, var_3, var_4, var_5) { okts_Shader_set3(this,
var_1, var_2, var_3, var_4, var_5); }, "$set76", function(var_1, var_2, var_3) { okts_Shader_set4(this, var_1, var_2, var_3); }, "$set35", function(var_1, var_2) { okts_Shader_set5(this, var_1, var_2); }, "$set1", function(var_1, var_2) { okts_Shader_set6(this, var_1, var_2); }, "$set45", function(var_1, var_2) { okts_Shader_set7(this, var_1, var_2); }, "$set54", function(var_1, var_2) { okts_Shader_set8(this, var_1, var_2); }, "$set40", function(var_1, var_2) { okts_Shader_set9(this, var_1, var_2); }, "$set12",
function(var_1, var_2) { okts_Shader_set10(this, var_1, var_2); }, "$set310", function(var_1, var_2, var_3, var_4) { okts_Shader_set30(this, var_1, var_2, var_3, var_4); }, "$setMatrix41", function(var_1, var_2, var_3, var_4) { okts_Shader_setMatrix4(this, var_1, var_2, var_3, var_4); }, "$setMatrix42", function(var_1, var_2, var_3, var_4) { okts_Shader_setMatrix40(this, var_1, var_2, var_3, var_4); }, "$getUniformLocation0", function(var_1, var_2) { return okts_Shader_getUniformLocation(this, var_1, var_2);
}, "$setUniformi0", function(var_1, var_2) { okts_Shader_setUniformi(this, var_1, var_2); }, "$addNode0", function(var_1) { return okts_Shader_addNode(this, var_1); }]]);
$rt_metadata([oktsp_PostShader, 0, okts_Shader, [], 0, 3, 0, 0,
oktsp_SSAO, 0, oktsp_PostShader, [], 4, 3, oktsp_SSAO_$callClinit, ["$getNoiseTexture", function() { return oktsp_SSAO_getNoiseTexture(this); }, "$getNoiseMapUnit", function() { return oktsp_SSAO_getNoiseMapUnit(this); }, "$getNormalMapUnit", function() { return oktsp_SSAO_getNormalMapUnit(this); }, "$getPositionMapUnit", function() { return oktsp_SSAO_getPositionMapUnit(this); }, "$getAuxBufferSsaoUnit", function() { return oktsp_SSAO_getAuxBufferSsaoUnit(this); }, "$getAuxBufferBlurUnit", function() { return oktsp_SSAO_getAuxBufferBlurUnit(this);
}, "$getColorMapUnit", function() { return oktsp_SSAO_getColorMapUnit(this); }, "$getAuxBufferSsao", function() { return oktsp_SSAO_getAuxBufferSsao(this); }, "$getVisualizeSsao", function() { return oktsp_SSAO_getVisualizeSsao(this); }, "$setVisualizeSsao", function(var_1) { oktsp_SSAO_setVisualizeSsao(this, var_1); }, "$render6", function(var_1, var_2) { oktsp_SSAO_render(this, var_1, var_2); }, "$getColorMap", function() { return oktsp_SSAO_getColorMap(this); }, "$getNormalMap", function() { return oktsp_SSAO_getNormalMap(this);
}, "$getViewSpacePositionMap", function() { return oktsp_SSAO_getViewSpacePositionMap(this); }, "$getAuxBufferBlur", function() { return oktsp_SSAO_getAuxBufferBlur(this); }],
okttsg_SkyboxVertexNodeTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return okttsg_SkyboxVertexNodeTest_getName(this); }, "$testMain", function() { okttsg_SkyboxVertexNodeTest_testMain(this); }],
oooi_CollisionLibccd$CollideConvexBoxCCD, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollisionLibccd$CollideConvexBoxCCD_dColliderFn(this, var_1, var_2, var_3, var_4); }],
jm_Elementary, 0, jl_Object, [], 0, 0, 0, 0,
ju_LinkedHashMap$2, 0, ju_AbstractCollection, [], 0, 0, 0, ["$contains1", function(var_1) { return ju_LinkedHashMap$2_contains(this, var_1); }, "$size", function() { return ju_LinkedHashMap$2_size(this); }, "$iterator", function() { return ju_LinkedHashMap$2_iterator(this); }],
ju_ListIterator, 0, jl_Object, [ju_Iterator], 3, 3, 0, 0,
ju_LinkedList$SequentialListIterator, 0, jl_Object, [ju_ListIterator], 0, 0, 0, ["$next", function() { return ju_LinkedList$SequentialListIterator_next(this); }, "$add10", function(var_1) { ju_LinkedList$SequentialListIterator_add(this, var_1); }, "$checkConcurrentModification", function() { ju_LinkedList$SequentialListIterator_checkConcurrentModification(this); }],
oktpo_OdePhysicsWorld$Companion, 0, jl_Object, [], 4, 3, 0, ["$getBodyPairsPool", function() { return oktpo_OdePhysicsWorld$Companion_getBodyPairsPool(this); }, "$getGeomPairsPool", function() { return oktpo_OdePhysicsWorld$Companion_getGeomPairsPool(this); }],
oooi_CollideTrimeshTrimesh$1, 0, jl_Object, [ju_Comparator], 0, 0, 0, ["$compare5", function(var_1, var_2) { return oooi_CollideTrimeshTrimesh$1_compare(this, var_1, var_2); }],
okti_IImg$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
okti_IMouseListener$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oooicj_RefDouble, 0, jl_Object, [], 4, 3, 0, ["$set8", function(var_1) { oooicj_RefDouble_set(this, var_1); }, "$get7", function() { return oooicj_RefDouble_get(this); }],
oktd_IFloatData, 0, jl_Object, [oktd_IDataArray], 3, 3, 0, 0,
oktt_TvmFloat32Array, 0, oktt_TvmArrayBufferView, [oktd_IFloatData], 4, 3, 0, ["$getSize", function() { return oktt_TvmFloat32Array_getSize(this); }, "$setSize", function(var_1) { oktt_TvmFloat32Array_setSize(this, var_1); }, "$set37", function(var_1, var_2) { oktt_TvmFloat32Array_set(this, var_1, var_2); }, "$set53", function(var_1, var_2) { oktt_TvmFloat32Array_set0(this, var_1, var_2); }, "$get25", function(var_1) { return oktt_TvmFloat32Array_get(this, var_1); }, "$get1", function(var_1) { return oktt_TvmFloat32Array_get0(this,
var_1); }, "$get26", function() { return oktt_TvmFloat32Array_get1(this); }, "$get15", function() { return oktt_TvmFloat32Array_get2(this); }, "$put11", function(var_1) { oktt_TvmFloat32Array_put(this, var_1); }, "$put8", function(var_1) { oktt_TvmFloat32Array_put0(this, var_1); }, "$get32", function(var_1) { oktt_TvmFloat32Array_get3(this, var_1); }, "$put13", function(var_1) { oktt_TvmFloat32Array_put1(this, var_1); }, "$put4", function(var_1) { oktt_TvmFloat32Array_put2(this, var_1); }],
oktt_KeyboardTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktt_KeyboardTest_getName(this); }, "$testMain", function() { oktt_KeyboardTest_testMain(this); }],
oktg_IObject3D$Companion, 0, jl_Object, [], 4, 3, oktg_IObject3D$Companion_$callClinit, 0,
ju_AbstractList, 0, ju_AbstractCollection, [ju_List], 1, 3, 0, ["$add1", function(var_1) { return ju_AbstractList_add(this, var_1); }, "$iterator", function() { return ju_AbstractList_iterator(this); }, "$indexOf5", function(var_1) { return ju_AbstractList_indexOf(this, var_1); }, "$hashCode", function() { return ju_AbstractList_hashCode(this); }, "$equals0", function(var_1) { return ju_AbstractList_equals(this, var_1); }],
jur_ReluctantCompositeQuantifierSet, 0, jur_CompositeQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_ReluctantCompositeQuantifierSet_matches(this, var_1, var_2, var_3); }],
okttsg_SSAOTest$testMain$1, 0, kji_Lambda, [kjf_Function1], 4, 0, okttsg_SSAOTest$testMain$1_$callClinit, ["$invoke1", function(var_1) { return okttsg_SSAOTest$testMain$1_invoke(this, var_1); }, "$invoke", function(var_1) { okttsg_SSAOTest$testMain$1_invoke0(this, var_1); }],
jn_Buffer, 0, jl_Object, [], 1, 3, 0, ["$capacity", function() { return jn_Buffer_capacity(this); }, "$position2", function() { return jn_Buffer_position(this); }, "$position5", function(var_1) { return jn_Buffer_position0(this, var_1); }, "$limit", function() { return jn_Buffer_limit(this); }, "$clear3", function() { return jn_Buffer_clear(this); }, "$flip", function() { return jn_Buffer_flip(this); }, "$remaining", function() { return jn_Buffer_remaining(this); }, "$hasRemaining", function() { return jn_Buffer_hasRemaining(this);
}],
jn_ByteBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, ["$get34", function(var_1, var_2, var_3) { return jn_ByteBuffer_get(this, var_1, var_2, var_3); }, "$put6", function(var_1, var_2, var_3) { return jn_ByteBuffer_put0(this, var_1, var_2, var_3); }, "$put5", function(var_1) { return jn_ByteBuffer_put(this, var_1); }, "$clear0", function() { return jn_ByteBuffer_clear(this); }, "$position10", function(var_1) { return jn_ByteBuffer_position(this, var_1); }],
oktp_IPhysicsWorld, 0, jl_Object, [oktp_IOverObject], 3, 3, 0, 0,
oktpo_OdePhysicsWorld, 0, jl_Object, [oktp_IPhysicsWorld], 4, 3, oktpo_OdePhysicsWorld_$callClinit, ["$getWorld1", function() { return oktpo_OdePhysicsWorld_getWorld(this); }, "$getSpace", function() { return oktpo_OdePhysicsWorld_getSpace(this); }, "$getContactGroup", function() { return oktpo_OdePhysicsWorld_getContactGroup(this); }, "$getMaxContacts", function() { return oktpo_OdePhysicsWorld_getMaxContacts(this); }, "$getContactMaxLifeTime", function() { return oktpo_OdePhysicsWorld_getContactMaxLifeTime(this);
}, "$getAliveContacts", function() { return oktpo_OdePhysicsWorld_getAliveContacts(this); }, "$getNewContacts", function() { return oktpo_OdePhysicsWorld_getNewContacts(this); }, "$getGeomAliveContacts", function() { return oktpo_OdePhysicsWorld_getGeomAliveContacts(this); }, "$getGeomNewContacts", function() { return oktpo_OdePhysicsWorld_getGeomNewContacts(this); }, "$getSourceObject0", function() { return oktpo_OdePhysicsWorld_getSourceObject(this); }, "$setGravity0", function(var_1, var_2, var_3) { oktpo_OdePhysicsWorld_setGravity(this,
var_1, var_2, var_3); }, "$step", function(var_1) { oktpo_OdePhysicsWorld_step(this, var_1); }, "$rigidBody", function(var_1, var_2) { return oktpo_OdePhysicsWorld_rigidBody(this, var_1, var_2); }, "$boxShape", function(var_1, var_2, var_3) { return oktpo_OdePhysicsWorld_boxShape(this, var_1, var_2, var_3); }, "$sphereShape", function(var_1) { return oktpo_OdePhysicsWorld_sphereShape(this, var_1); }, "$trimeshShape", function(var_1, var_2) { return oktpo_OdePhysicsWorld_trimeshShape(this, var_1, var_2); }, "$trimeshShape0",
function(var_1, var_2, var_3, var_4, var_5) { return oktpo_OdePhysicsWorld_trimeshShape0(this, var_1, var_2, var_3, var_4, var_5); }, "$trimeshShape5", function(var_1, var_2) { return oktpo_OdePhysicsWorld_trimeshShape1(this, var_1, var_2); }, "$trimeshShape1", function(var_1, var_2, var_3) { return oktpo_OdePhysicsWorld_trimeshShape2(this, var_1, var_2, var_3); }],
jur_SOLSet, 0, jur_AbstractSet, [], 4, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_SOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_SOLSet_hasConsumed(this, var_1); }],
oktgg_IGLTFMaterial$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$1_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_IGLTFMaterial$read$1_invoke0(this, var_1); }],
oktgg_IGLTFMaterial$read$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$3_invoke(this, var_1); }, "$invoke18", function(var_1) { oktgg_IGLTFMaterial$read$3_invoke0(this, var_1); }],
oktgg_IGLTFMaterial$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$2_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_IGLTFMaterial$read$2_invoke0(this, var_1); }],
oktgg_IGLTFMaterial$read$5, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$5_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_IGLTFMaterial$read$5_invoke0(this, var_1); }],
oktgg_IGLTFMaterial$read$4, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$4_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_IGLTFMaterial$read$4_invoke0(this, var_1); }],
oktsg_ToneMapNode, 0, oktsg_ShaderNode, [], 4, 3, oktsg_ToneMapNode_$callClinit, ["$getInputColor", function() { return oktsg_ToneMapNode_getInputColor(this); }, "$setInputColor", function(var_1) { oktsg_ToneMapNode_setInputColor(this, var_1); }, "$getResult", function() { return oktsg_ToneMapNode_getResult(this); }, "$prepareToDrawScene", function(var_1) { oktsg_ToneMapNode_prepareToDrawScene(this, var_1); }, "$declarationFrag", function(var_1) { oktsg_ToneMapNode_declarationFrag(this, var_1); }, "$executionFrag",
function(var_1) { oktsg_ToneMapNode_executionFrag(this, var_1); }],
oktgg_IGLTFMaterial$read$9, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$9_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_IGLTFMaterial$read$9_invoke0(this, var_1); }],
oktgg_IGLTFMaterial$read$8, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$8_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_IGLTFMaterial$read$8_invoke0(this, var_1); }],
oooi_CollideSpaceGeom, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollideSpaceGeom_dColliderFn(this, var_1, var_2, var_3, var_4); }, "$dCollideSpaceGeom", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollideSpaceGeom_dCollideSpaceGeom(this, var_1, var_2, var_3, var_4, var_5); }],
ks_Sequence, 0, jl_Object, [], 3, 3, 0, 0,
oktg_GL, 0, jl_Object, [oktg_IGL], 4, 3, oktg_GL_$callClinit, ["$setApi2", function(var_1) { oktg_GL_setApi(this, var_1); }, "$getMainFrameBufferWidth0", function() { return oktg_GL_getMainFrameBufferWidth(this); }, "$getMainFrameBufferHeight0", function() { return oktg_GL_getMainFrameBufferHeight(this); }, "$getMainFrameBufferHandle0", function() { return oktg_GL_getMainFrameBufferHandle(this); }, "$getGlesMajVer", function() { return oktg_GL_getGlesMajVer(this); }, "$isGLES", function() { return oktg_GL_isGLES(this);
}, "$getSingleCallRequests", function() { return oktg_GL_getSingleCallRequests(this); }, "$getRenderCallRequests", function() { return oktg_GL_getRenderCallRequests(this); }, "$getMaxAnisotropicFilterLevel", function() { return oktg_GL_getMaxAnisotropicFilterLevel(this); }, "$getShader1", function() { return oktg_GL_getShader(this); }, "$setShader0", function(var_1) { oktg_GL_setShader(this, var_1); }, "$setActiveTexture", function(var_1) { oktg_GL_setActiveTexture(this, var_1); }, "$getArrayBuffer", function()
{ return oktg_GL_getArrayBuffer(this); }, "$setArrayBuffer", function(var_1) { oktg_GL_setArrayBuffer(this, var_1); }, "$setElementArrayBuffer", function(var_1) { oktg_GL_setElementArrayBuffer(this, var_1); }, "$getTextureUnits", function() { return oktg_GL_getTextureUnits(this); }, "$isCullFaceEnabled", function() { return oktg_GL_isCullFaceEnabled0(this); }, "$setCullFaceEnabled", function(var_1) { oktg_GL_setCullFaceEnabled(this, var_1); }, "$getCullFaceMode", function() { return oktg_GL_getCullFaceMode(this);
}, "$setCullFaceMode", function(var_1) { oktg_GL_setCullFaceMode(this, var_1); }, "$isBlendEnabled", function() { return oktg_GL_isBlendEnabled0(this); }, "$setBlendEnabled", function(var_1) { oktg_GL_setBlendEnabled(this, var_1); }, "$setBlendFactorS", function(var_1) { oktg_GL_setBlendFactorS(this, var_1); }, "$setBlendFactorD", function(var_1) { oktg_GL_setBlendFactorD(this, var_1); }, "$setDepthTestEnabled", function(var_1) { oktg_GL_setDepthTestEnabled(this, var_1); }, "$grabTextureUnit", function() { return oktg_GL_grabTextureUnit(this);
}, "$initTextureUnits", function() { oktg_GL_initTextureUnits(this); }, "$initGL0", function() { oktg_GL_initGL(this); }, "$setSimpleAlphaBlending", function() { oktg_GL_setSimpleAlphaBlending(this); }, "$call0", function(var_1, var_2) { oktg_GL_call(this, var_1, var_2); }, "$render1", function(var_1, var_2) { oktg_GL_render(this, var_1, var_2); }, "$doSingleCalls", function() { oktg_GL_doSingleCalls(this); }, "$doRenderCalls", function() { oktg_GL_doRenderCalls(this); }, "$isExtensionSupported0", function(var_1)
{ return oktg_GL_isExtensionSupported(this, var_1); }, "$enableExtension", function(var_1) { return oktg_GL_enableExtension(this, var_1); }, "$glDrawBuffers0", function(var_1, var_2) { oktg_GL_glDrawBuffers(this, var_1, var_2); }, "$glDrawArraysInstanced0", function(var_1, var_2, var_3, var_4) { oktg_GL_glDrawArraysInstanced(this, var_1, var_2, var_3, var_4); }, "$glDrawElementsInstanced0", function(var_1, var_2, var_3, var_4, var_5) { oktg_GL_glDrawElementsInstanced(this, var_1, var_2, var_3, var_4, var_5);
}, "$glVertexAttribDivisor", function(var_1, var_2) { oktg_GL_glVertexAttribDivisor(this, var_1, var_2); }, "$glBindTexture", function(var_1, var_2) { oktg_GL_glBindTexture(this, var_1, var_2); }, "$glBlendFunc0", function(var_1, var_2) { oktg_GL_glBlendFunc(this, var_1, var_2); }, "$glClear", function(var_1) { oktg_GL_glClear(this, var_1); }, "$glClearColor", function(var_1, var_2, var_3, var_4) { oktg_GL_glClearColor(this, var_1, var_2, var_3, var_4); }, "$glDeleteTexture0", function(var_1) { oktg_GL_glDeleteTexture(this,
var_1); }, "$glDrawArrays0", function(var_1, var_2, var_3) { oktg_GL_glDrawArrays(this, var_1, var_2, var_3); }, "$glGenTexture", function() { return oktg_GL_glGenTexture(this); }, "$glGetIntegerv0", function(var_1, var_2) { oktg_GL_glGetIntegerv(this, var_1, var_2); }, "$glTexImage2D0", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { oktg_GL_glTexImage2D0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5,
var_6, var_7, var_8, var_9) { oktg_GL_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", function(var_1, var_2, var_3) { oktg_GL_glTexParameterf(this, var_1, var_2, var_3); }, "$glViewport0", function(var_1, var_2, var_3, var_4) { oktg_GL_glViewport(this, var_1, var_2, var_3, var_4); }, "$glAttachShader0", function(var_1, var_2) { oktg_GL_glAttachShader(this, var_1, var_2); }, "$glBindBuffer", function(var_1, var_2) { oktg_GL_glBindBuffer(this, var_1, var_2);
}, "$glBindFramebuffer0", function(var_1, var_2) { oktg_GL_glBindFramebuffer(this, var_1, var_2); }, "$glBindRenderbuffer0", function(var_1, var_2) { oktg_GL_glBindRenderbuffer(this, var_1, var_2); }, "$glBufferData", function(var_1, var_2, var_3, var_4) { oktg_GL_glBufferData(this, var_1, var_2, var_3, var_4); }, "$glCheckFramebufferStatus0", function(var_1) { return oktg_GL_glCheckFramebufferStatus(this, var_1); }, "$glCompileShader0", function(var_1) { oktg_GL_glCompileShader(this, var_1); }, "$glCreateProgram0",
function() { return oktg_GL_glCreateProgram(this); }, "$glCreateShader0", function(var_1) { return oktg_GL_glCreateShader(this, var_1); }, "$glDeleteFramebuffer0", function(var_1) { oktg_GL_glDeleteFramebuffer(this, var_1); }, "$glDeleteProgram0", function(var_1) { oktg_GL_glDeleteProgram(this, var_1); }, "$glDeleteRenderbuffer0", function(var_1) { oktg_GL_glDeleteRenderbuffer(this, var_1); }, "$glDeleteShader0", function(var_1) { oktg_GL_glDeleteShader(this, var_1); }, "$glDetachShader0", function(var_1, var_2)
{ oktg_GL_glDetachShader(this, var_1, var_2); }, "$glDrawElements0", function(var_1, var_2, var_3, var_4) { oktg_GL_glDrawElements(this, var_1, var_2, var_3, var_4); }, "$glEnableVertexAttribArray", function(var_1) { oktg_GL_glEnableVertexAttribArray(this, var_1); }, "$glFramebufferRenderbuffer0", function(var_1, var_2, var_3, var_4) { oktg_GL_glFramebufferRenderbuffer(this, var_1, var_2, var_3, var_4); }, "$glFramebufferTexture2D0", function(var_1, var_2, var_3, var_4, var_5) { oktg_GL_glFramebufferTexture2D(this,
var_1, var_2, var_3, var_4, var_5); }, "$glGenBuffer", function() { return oktg_GL_glGenBuffer(this); }, "$glGenerateMipmap0", function(var_1) { oktg_GL_glGenerateMipmap(this, var_1); }, "$glGenFramebuffer0", function() { return oktg_GL_glGenFramebuffer(this); }, "$glGenRenderbuffer0", function() { return oktg_GL_glGenRenderbuffer(this); }, "$glGetActiveAttrib0", function(var_1, var_2, var_3, var_4) { return oktg_GL_glGetActiveAttrib(this, var_1, var_2, var_3, var_4); }, "$glGetActiveUniform0", function(var_1,
var_2, var_3, var_4) { return oktg_GL_glGetActiveUniform(this, var_1, var_2, var_3, var_4); }, "$glGetAttribLocation0", function(var_1, var_2) { return oktg_GL_glGetAttribLocation(this, var_1, var_2); }, "$glGetFloatv0", function(var_1, var_2) { oktg_GL_glGetFloatv(this, var_1, var_2); }, "$glGetProgramiv0", function(var_1, var_2, var_3) { oktg_GL_glGetProgramiv(this, var_1, var_2, var_3); }, "$glGetProgramInfoLog0", function(var_1) { return oktg_GL_glGetProgramInfoLog(this, var_1); }, "$glGetShaderiv0", function(var_1,
var_2, var_3) { oktg_GL_glGetShaderiv(this, var_1, var_2, var_3); }, "$glGetShaderInfoLog0", function(var_1) { return oktg_GL_glGetShaderInfoLog(this, var_1); }, "$glGetUniformLocation0", function(var_1, var_2) { return oktg_GL_glGetUniformLocation(this, var_1, var_2); }, "$glLinkProgram0", function(var_1) { oktg_GL_glLinkProgram(this, var_1); }, "$glRenderbufferStorage0", function(var_1, var_2, var_3, var_4) { oktg_GL_glRenderbufferStorage(this, var_1, var_2, var_3, var_4); }, "$glShaderSource0", function(var_1,
var_2) { oktg_GL_glShaderSource(this, var_1, var_2); }, "$glTexParameteri", function(var_1, var_2, var_3) { oktg_GL_glTexParameteri(this, var_1, var_2, var_3); }, "$glUniform1f0", function(var_1, var_2) { oktg_GL_glUniform1f(this, var_1, var_2); }, "$glUniform1i0", function(var_1, var_2) { oktg_GL_glUniform1i(this, var_1, var_2); }, "$glUniform2f0", function(var_1, var_2, var_3) { oktg_GL_glUniform2f(this, var_1, var_2, var_3); }, "$glUniform3f0", function(var_1, var_2, var_3, var_4) { oktg_GL_glUniform3f(this,
var_1, var_2, var_3, var_4); }, "$glUniform3fv0", function(var_1, var_2, var_3, var_4) { oktg_GL_glUniform3fv(this, var_1, var_2, var_3, var_4); }, "$glUniform4f0", function(var_1, var_2, var_3, var_4, var_5) { oktg_GL_glUniform4f(this, var_1, var_2, var_3, var_4, var_5); }, "$glUniformMatrix4fv0", function(var_1, var_2, var_3, var_4, var_5) { oktg_GL_glUniformMatrix4fv(this, var_1, var_2, var_3, var_4, var_5); }, "$glUseProgram0", function(var_1) { oktg_GL_glUseProgram(this, var_1); }, "$glVertexAttribPointer",
function(var_1, var_2, var_3, var_4, var_5, var_6) { oktg_GL_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
oktts_CascadedShadowMappingBaseTest$testMain$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktts_CascadedShadowMappingBaseTest$testMain$1$1_invoke(this, var_1); }, "$invoke8", function(var_1) { oktts_CascadedShadowMappingBaseTest$testMain$1$1_invoke0(this, var_1); }],
kjf_Function18, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kjf_Function19, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kc_ArraysUtilJVM, 0, jl_Object, [], 0, 0, 0, 0,
oktgg_GLTFBuffer, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, 0, ["$read", function(var_1) { oktgg_GLTFBuffer_read(this, var_1); }, "$getGltf0", function() { return oktgg_GLTFBuffer_getGltf(this); }, "$getElementIndex", function() { return oktgg_GLTFBuffer_getElementIndex(this); }, "$getUri", function() { return oktgg_GLTFBuffer_getUri(this); }, "$setUri", function(var_1) { oktgg_GLTFBuffer_setUri(this, var_1); }, "$getBytes", function() { return oktgg_GLTFBuffer_getBytes(this); }, "$setByteLength",
function(var_1) { oktgg_GLTFBuffer_setByteLength(this, var_1); }],
okta_IMusic, 0, jl_Object, [], 3, 3, 0, 0,
kjf_Function14, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kjf_Function15, 0, jl_Object, [k_Function], 3, 3, 0, 0,
oktj_IJsonArrayIO, 0, jl_Object, [], 3, 3, 0, 0,
kjf_Function16, 0, jl_Object, [k_Function], 3, 3, 0, 0,
oktgg_GLTFNode$read$3$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$3$1_invoke(this, var_1); }, "$invoke15", function(var_1) { oktgg_GLTFNode$read$3$1_invoke0(this, var_1); }],
kjf_Function17, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kc_ArraysKt___ArraysKt, 0, kc_ArraysKt___ArraysJvmKt, [], 0, 0, 0, 0,
kc_ArraysKt, 0, kc_ArraysKt___ArraysKt, [], 4, 3, 0, 0]);
$rt_metadata([kjf_Function10, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kjf_Function11, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kjf_Function12, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kjf_Function13, 0, jl_Object, [k_Function], 3, 3, 0, 0,
otcit_DoubleAnalyzer, 0, jl_Object, [], 4, 3, otcit_DoubleAnalyzer_$callClinit, 0,
jur_EOLSet, 0, jur_AbstractSet, [], 4, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_EOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_EOLSet_hasConsumed(this, var_1); }],
jur_Lexer, 0, jl_Object, [], 0, 0, 0, ["$peek", function() { return jur_Lexer_peek(this); }, "$setMode", function(var_1) { jur_Lexer_setMode(this, var_1); }, "$restoreFlags", function(var_1) { jur_Lexer_restoreFlags(this, var_1); }, "$peekSpecial", function() { return jur_Lexer_peekSpecial(this); }, "$isSpecial", function() { return jur_Lexer_isSpecial(this); }, "$isNextSpecial", function() { return jur_Lexer_isNextSpecial(this); }, "$next10", function() { return jur_Lexer_next(this); }, "$nextSpecial", function()
{ return jur_Lexer_nextSpecial(this); }, "$lookAhead0", function() { return jur_Lexer_lookAhead(this); }, "$back", function() { return jur_Lexer_back(this); }, "$reread", function() { jur_Lexer_reread(this); }, "$movePointer", function() { jur_Lexer_movePointer(this); }, "$parseCharClassName", function() { return jur_Lexer_parseCharClassName(this); }, "$processQuantifier", function(var_1) { return jur_Lexer_processQuantifier(this, var_1); }, "$toString", function() { return jur_Lexer_toString(this); }, "$isEmpty",
function() { return jur_Lexer_isEmpty(this); }, "$isLetter0", function() { return jur_Lexer_isLetter0(this); }, "$isHighSurrogate1", function() { return jur_Lexer_isHighSurrogate0(this); }, "$isLowSurrogate1", function() { return jur_Lexer_isLowSurrogate0(this); }, "$readHex", function(var_1) { return jur_Lexer_readHex(this, var_1); }, "$readOctals", function() { return jur_Lexer_readOctals(this); }, "$readFlags", function() { return jur_Lexer_readFlags(this); }, "$nextIndex", function() { return jur_Lexer_nextIndex(this);
}, "$skipComments", function() { return jur_Lexer_skipComments(this); }, "$isLineSeparator", function(var_1) { return jur_Lexer_isLineSeparator(this, var_1); }, "$nextCodePoint", function() { return jur_Lexer_nextCodePoint(this); }, "$getIndex", function() { return jur_Lexer_getIndex(this); }],
oooi_DxQuickStep$ReorderingMethod, 0, jl_Enum, [], 12, 0, oooi_DxQuickStep$ReorderingMethod_$callClinit, 0,
jur_AbstractCharClass$LazyNonSpace, 0, jur_AbstractCharClass$LazySpace, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyNonSpace_computeValue(this); }],
ooo_DJointGroup, 0, jl_Object, [], 3, 3, 0, 0,
oooij_DxJointGroup, 0, oooi_DBase, [ooo_DJointGroup], 0, 3, 0, ["$dJointGroupEmpty", function() { oooij_DxJointGroup_dJointGroupEmpty(this); }, "$addJoint", function(var_1) { oooij_DxJointGroup_addJoint(this, var_1); }, "$empty", function() { oooij_DxJointGroup_empty(this); }],
kjf_Function21, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kjf_Function22, 0, jl_Object, [k_Function], 3, 3, 0, 0,
kjf_Function20, 0, jl_Object, [k_Function], 3, 3, 0, 0,
oktgg_GLTFImage$read$5, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFImage$read$5_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_GLTFImage$read$5_invoke0(this, var_1); }],
oktpo_OdeRigidBody$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktgg_GLTFImage$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFImage$read$1_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_GLTFImage$read$1_invoke0(this, var_1); }],
oktgg_GLTFImage$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFImage$read$2_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_GLTFImage$read$2_invoke0(this, var_1); }],
oktgg_GLTFImage$read$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFImage$read$3_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_GLTFImage$read$3_invoke0(this, var_1); }],
oktgg_GLTFImage$read$4, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFImage$read$4_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFImage$read$4_invoke0(this, var_1); }],
oktt_CascadedShadowMatricesTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktt_CascadedShadowMatricesTest$testMain$1_invoke(this); }, "$invoke2", function() { oktt_CascadedShadowMatricesTest$testMain$1_invoke0(this); }],
oktm_IIndexBufferObject$Companion$Build$1, 0, kji_Lambda, [kjf_Function4], 4, 0, oktm_IIndexBufferObject$Companion$Build$1_$callClinit, 0,
oktjj_JsonSimple3Object$Companion, 0, jl_Object, [], 4, 3, 0, ["$parseObject", function(var_1) { return oktjj_JsonSimple3Object$Companion_parseObject(this, var_1); }],
oktm_IVec3$Companion$Build$1, 0, kji_Lambda, [kjf_Function0], 4, 0, oktm_IVec3$Companion$Build$1_$callClinit, ["$invoke6", function() { return oktm_IVec3$Companion$Build$1_invoke(this); }, "$invoke19", function() { return oktm_IVec3$Companion$Build$1_invoke0(this); }],
oktp_ITrimeshShape, 0, jl_Object, [oktp_IShape], 3, 3, 0, 0,
oktpo_OdeTrimeshShape, 0, oktpo_OdeGeom, [oktp_ITrimeshShape], 4, 3, 0, ["$getTrimesh", function() { return oktpo_OdeTrimeshShape_getTrimesh(this); }, "$getGeom", function() { return oktpo_OdeTrimeshShape_getGeom(this); }, "$getFriction", function() { return oktpo_OdeTrimeshShape_getFriction(this); }],
jl_AbstractStringBuilder$Constants, 0, jl_Object, [], 0, 0, jl_AbstractStringBuilder$Constants_$callClinit, 0,
jur_SingleSet, 0, jur_JointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_SingleSet_matches(this, var_1, var_2, var_3); }, "$find", function(var_1, var_2, var_3) { return jur_SingleSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_SingleSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first", function(var_1) { return jur_SingleSet_first(this, var_1); }, "$processBackRefReplacement", function() { return jur_SingleSet_processBackRefReplacement(this);
}, "$processSecondPass", function() { jur_SingleSet_processSecondPass(this); }],
jur_BackReferencedSingleSet, 0, jur_SingleSet, [], 0, 0, 0, ["$find", function(var_1, var_2, var_3) { return jur_BackReferencedSingleSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_BackReferencedSingleSet_findBack(this, var_1, var_2, var_3, var_4); }, "$processBackRefReplacement", function() { return jur_BackReferencedSingleSet_processBackRefReplacement(this); }],
otp_PlatformQueue, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
oktsg_PrincipledBSDF$Companion, 0, jl_Object, [], 4, 3, 0, ["$getShadowCascadesNum", function() { return oktsg_PrincipledBSDF$Companion_getShadowCascadesNum(this); }, "$getVisualizeCascadeFields", function() { return oktsg_PrincipledBSDF$Companion_getVisualizeCascadeFields(this); }, "$cascadedShadowsExe", function(var_1, var_2, var_3, var_4) { return oktsg_PrincipledBSDF$Companion_cascadedShadowsExe(this, var_1, var_2, var_3, var_4); }, "$pbrCode", function(var_1, var_2, var_3, var_4, var_5) { return oktsg_PrincipledBSDF$Companion_pbrCode(this,
var_1, var_2, var_3, var_4, var_5); }],
oktj_IJsonArray$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktgg_GLTFMesh$read$2$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFMesh$read$2$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTFMesh$read$2$1_invoke0(this, var_1); }],
oktga_IAnimTrack, 0, jl_Object, [], 3, 3, 0, 0,
oktga_Vec4Track, 0, jl_Object, [oktga_IAnimTrack], 4, 3, 0, ["$getNodeIndex", function() { return oktga_Vec4Track_getNodeIndex(this); }, "$getTimes", function() { return oktga_Vec4Track_getTimes(this); }, "$getValues1", function() { return oktga_Vec4Track_getValues(this); }, "$getInTangents", function() { return oktga_Vec4Track_getInTangents(this); }, "$getOutTangents", function() { return oktga_Vec4Track_getOutTangents(this); }, "$getDuration", function() { return oktga_Vec4Track_getDuration(this); }, "$setDuration",
function(var_1) { oktga_Vec4Track_setDuration(this, var_1); }, "$calculateDuration1", function() { return oktga_Vec4Track_calculateDuration(this); }],
ju_MissingResourceException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
okta_ISound$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
okttt_MainTeaVMTests$main$1, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { okttt_MainTeaVMTests$main$1_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return okttt_MainTeaVMTests$main$1_handleEvent$exported$0(this, var_1); }],
jn_ByteOrder, 0, jl_Object, [], 4, 3, jn_ByteOrder_$callClinit, 0,
oooic_Ctype, 0, jl_Object, [], 0, 3, 0, 0,
oktm_IScreenQuad, 0, jl_Object, [], 3, 3, 0, 0,
oktts_BloomTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktts_BloomTest_getName(this); }, "$testMain", function() { oktts_BloomTest_testMain(this); }],
oktm_IMat4, 0, jl_Object, [], 3, 3, oktm_IMat4_$callClinit, 0,
oooip_DxUtil$alloc_block_fn_t, 0, jl_Object, [], 3, 3, 0, 0,
okti_IKB, 0, jl_Object, [], 3, 3, 0, 0,
okti_KB, 0, jl_Object, [okti_IKB], 4, 3, okti_KB_$callClinit, ["$setApi8", function(var_1) { okti_KB_setApi(this, var_1); }, "$getShift", function() { return okti_KB_getShift(this); }, "$toString1", function(var_1) { return okti_KB_toString(this, var_1); }, "$isKeyPressed", function(var_1) { return okti_KB_isKeyPressed(this, var_1); }, "$addListener", function(var_1) { okti_KB_addListener(this, var_1); }, "$reset1", function() { okti_KB_reset(this); }],
oktt_GLTFModel, 0, jl_Object, [], 4, 3, 0, ["$getRoot", function() { return oktt_GLTFModel_getRoot(this); }, "$getScene", function() { return oktt_GLTFModel_getScene(this); }, "$setScene", function(var_1) { oktt_GLTFModel_setScene(this, var_1); }, "$getPlayer", function() { return oktt_GLTFModel_getPlayer(this); }, "$setPlayer", function(var_1) { oktt_GLTFModel_setPlayer(this, var_1); }, "$getGltf", function() { return oktt_GLTFModel_getGltf(this); }, "$getLight", function() { return oktt_GLTFModel_getLight(this);
}, "$update", function(var_1) { oktt_GLTFModel_update(this, var_1); }, "$render0", function() { oktt_GLTFModel_render(this); }, "$setRotate", function(var_1) { oktt_GLTFModel_setRotate(this, var_1); }, "$getConf", function() { return oktt_GLTFModel_getConf(this); }, "$getResponse", function() { return oktt_GLTFModel_getResponse(this); }],
oooi_DxSpace, 0, oooi_DxGeom, [ooo_DSpace], 1, 3, oooi_DxSpace_$callClinit, ["$dSpaceAdd", function(var_1) { oooi_DxSpace_dSpaceAdd(this, var_1); }, "$computeAABB", function() { oooi_DxSpace_computeAABB(this); }, "$getSublevel", function() { return oooi_DxSpace_getSublevel(this); }, "$getNumGeoms", function() { return oooi_DxSpace_getNumGeoms(this); }, "$add9", function(var_1) { oooi_DxSpace_add(this, var_1); }, "$dirty", function(var_1) { oooi_DxSpace_dirty(this, var_1); }, "$CHECK_NOT_LOCKED0", function()
{ oooi_DxSpace_CHECK_NOT_LOCKED0(this); }, "$setFirst", function(var_1) { oooi_DxSpace_setFirst(this, var_1); }, "$getGeoms", function() { return oooi_DxSpace_getGeoms(this); }],
oooi_DxHashSpace, 0, oooi_DxSpace, [ooo_DHashSpace], 0, 3, oooi_DxHashSpace_$callClinit, ["$cleanGeoms", function() { oooi_DxHashSpace_cleanGeoms(this); }, "$collide", function(var_1, var_2) { oooi_DxHashSpace_collide(this, var_1, var_2); }, "$collide2", function(var_1, var_2, var_3) { oooi_DxHashSpace_collide2(this, var_1, var_2, var_3); }],
jur_ReluctantGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_ReluctantGroupQuantifierSet_matches(this, var_1, var_2, var_3); }]]);
$rt_metadata([oktgg_GLTF$read$2$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$2$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTF$read$2$1_invoke0(this, var_1); }],
oktt_IFrameBufferAttachment$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktt_TvmGL$buffers$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktt_TvmGL$buffers$1_$callClinit, ["$invoke1", function(var_1) { return oktt_TvmGL$buffers$1_invoke(this, var_1); }, "$invoke20", function(var_1) { return oktt_TvmGL$buffers$1_invoke0(this, var_1); }],
oktgg_GLTFPrimitive$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFPrimitive$read$2_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTFPrimitive$read$2_invoke0(this, var_1); }],
oktgg_GLTFPrimitive$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFPrimitive$read$1_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFPrimitive$read$1_invoke0(this, var_1); }],
ju_LinkedHashMap$AbstractMapIterator, 0, jl_Object, [], 0, 0, 0, ["$hasNext", function() { return ju_LinkedHashMap$AbstractMapIterator_hasNext(this); }, "$checkConcurrentMod", function() { ju_LinkedHashMap$AbstractMapIterator_checkConcurrentMod(this); }, "$makeNext", function() { ju_LinkedHashMap$AbstractMapIterator_makeNext(this); }],
ju_LinkedHashMap$EntryIterator, 0, ju_LinkedHashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, ["$next6", function() { return ju_LinkedHashMap$EntryIterator_next(this); }, "$next", function() { return ju_LinkedHashMap$EntryIterator_next0(this); }],
oktt_TvmSound$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktt_TvmSound$1_invoke(this); }, "$invoke21", function() { return oktt_TvmSound$1_invoke0(this); }],
oktts_SSAOBaseTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktts_SSAOBaseTest_getName(this); }, "$testMain", function() { oktts_SSAOBaseTest_testMain(this); }],
kt_StringsKt___StringsKt, 0, kt_StringsKt___StringsJvmKt, [], 0, 0, 0, 0,
kt_StringsKt, 0, kt_StringsKt___StringsKt, [], 4, 3, 0, 0,
oktt_TvmGL$GLObject, 0, jl_Object, [], 1, 3, 0, 0,
oktt_TvmGL$FrameBufferWrap, 0, oktt_TvmGL$GLObject, [], 4, 3, 0, ["$getGl", function() { return oktt_TvmGL$FrameBufferWrap_getGl(this); }, "$getGl7", function() { return oktt_TvmGL$FrameBufferWrap_getGl0(this); }],
oooi_DxQuickStep$dxQuickStepperLocalContext, 0, jl_Object, [], 0, 0, 0, ["$Initialize2", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) { oooi_DxQuickStep$dxQuickStepperLocalContext_Initialize(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10); }],
oktgc_OrbitCameraControl$listenToMouse$listener$1, 0, jl_Object, [okti_IMouseListener], 4, 3, 0, ["$buttonDown0", function(var_1, var_2, var_3, var_4) { oktgc_OrbitCameraControl$listenToMouse$listener$1_buttonDown(this, var_1, var_2, var_3, var_4); }, "$dragged0", function(var_1, var_2, var_3) { oktgc_OrbitCameraControl$listenToMouse$listener$1_dragged(this, var_1, var_2, var_3); }, "$scrolled0", function(var_1) { oktgc_OrbitCameraControl$listenToMouse$listener$1_scrolled(this, var_1); }, "$buttonUp", function(var_1,
var_2, var_3, var_4) { oktgc_OrbitCameraControl$listenToMouse$listener$1_buttonUp(this, var_1, var_2, var_3, var_4); }, "$moved0", function(var_1, var_2) { oktgc_OrbitCameraControl$listenToMouse$listener$1_moved(this, var_1, var_2); }],
oooi_Matrix, 0, oooi_FastDot, [], 0, 3, oooi_Matrix_$callClinit, 0,
oktt_TvmGL$ShaderWrap, 0, oktt_TvmGL$GLObject, [], 4, 3, 0, ["$getGl0", function() { return oktt_TvmGL$ShaderWrap_getGl(this); }, "$getGl7", function() { return oktt_TvmGL$ShaderWrap_getGl0(this); }],
ji_Reader, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0,
ji_StringReader, 0, ji_Reader, [], 0, 3, 0, ["$read0", function() { return ji_StringReader_read(this); }, "$read3", function(var_1, var_2, var_3) { return ji_StringReader_read0(this, var_1, var_2, var_3); }, "$close", function() { ji_StringReader_close(this); }, "$checkOpened", function() { ji_StringReader_checkOpened(this); }],
okttp_SphereShapeTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return okttp_SphereShapeTest$testMain$1_invoke(this); }, "$invoke2", function() { okttp_SphereShapeTest$testMain$1_invoke0(this); }],
oktgg_GLTFTexture$read$2$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFTexture$read$2$1_invoke(this, var_1); }, "$invoke22", function(var_1) { oktgg_GLTFTexture$read$2$1_invoke0(this, var_1); }],
oktgg_GLTFTexture$read$2$2, 0, kji_Lambda, [kjf_Function1], 4, 0, oktgg_GLTFTexture$read$2$2_$callClinit, ["$invoke1", function(var_1) { return oktgg_GLTFTexture$read$2$2_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTFTexture$read$2$2_invoke0(this, var_1); }],
oktgg_GLTF$Companion, 0, jl_Object, [], 4, 3, 0, ["$getDefaultTextureMinFilter", function() { return oktgg_GLTF$Companion_getDefaultTextureMinFilter(this); }, "$getDefaultTextureMagFilter", function() { return oktgg_GLTF$Companion_getDefaultTextureMagFilter(this); }],
otci_IntegerUtil, 0, jl_Object, [], 4, 3, 0, 0,
juca_AtomicInteger, 0, jl_Number, [ji_Serializable], 0, 3, 0, ["$get31", function() { return juca_AtomicInteger_get(this); }, "$set10", function(var_1) { juca_AtomicInteger_set(this, var_1); }, "$getAndSet", function(var_1) { return juca_AtomicInteger_getAndSet(this, var_1); }, "$compareAndSet0", function(var_1, var_2) { return juca_AtomicInteger_compareAndSet(this, var_1, var_2); }, "$getAndAdd", function(var_1) { return juca_AtomicInteger_getAndAdd(this, var_1); }, "$incrementAndGet", function() { return juca_AtomicInteger_incrementAndGet(this);
}, "$decrementAndGet", function() { return juca_AtomicInteger_decrementAndGet(this); }, "$addAndGet", function(var_1) { return juca_AtomicInteger_addAndGet(this, var_1); }],
jl_Readable, 0, jl_Object, [], 3, 3, 0, 0,
oktsg_GLSLMat3, 0, oktsg_ShaderData, [], 4, 3, 0, ["$getType", function() { return oktsg_GLSLMat3_getType(this); }, "$asFloat", function() { return oktsg_GLSLMat3_asFloat(this); }, "$asVec2", function() { return oktsg_GLSLMat3_asVec2(this); }, "$asVec3", function() { return oktsg_GLSLMat3_asVec3(this); }, "$asVec4", function() { return oktsg_GLSLMat3_asVec4(this); }, "$getName", function() { return oktsg_GLSLMat3_getName(this); }],
oktsg_GLSLMat4, 0, oktsg_ShaderData, [], 4, 3, 0, ["$getType", function() { return oktsg_GLSLMat4_getType(this); }, "$asFloat", function() { return oktsg_GLSLMat4_asFloat(this); }, "$asVec2", function() { return oktsg_GLSLMat4_asVec2(this); }, "$asVec3", function() { return oktsg_GLSLMat4_asVec3(this); }, "$asVec4", function() { return oktsg_GLSLMat4_asVec4(this); }, "$getName", function() { return oktsg_GLSLMat4_getName(this); }],
oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD, 0, jl_Object, [], 0, 3, 0, ["$collide1", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_collide(this, var_1, var_2, var_3, var_4, var_5); }, "$setObjPosToTriangleCenter", function(var_1) { oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_setObjPosToTriangleCenter(this, var_1); }, "$correctContactNormal", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_correctContactNormal(this,
var_1, var_2, var_3, var_4, var_5); }, "$addUniqueContact", function(var_1, var_2, var_3, var_4) { return oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_addUniqueContact(this, var_1, var_2, var_3, var_4); }, "$addPerturbedContacts", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) { return oooi_CollisionLibccd$CollideConvexTrimeshTrianglesCCD_addPerturbedContacts(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10); }],
oktsp_Threshold$render$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktsp_Threshold$render$1_invoke(this, var_1); }, "$invoke12", function(var_1) { oktsp_Threshold$render$1_invoke0(this, var_1); }],
oktu_ILog, 0, jl_Object, [], 3, 3, 0, 0,
oooi_DxConvex$CollideConvexCapsule, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideConvexCapsule", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxConvex$CollideConvexCapsule_dCollideConvexCapsule(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxConvex$CollideConvexCapsule_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktg_IScene$Companion, 0, jl_Object, [], 4, 3, oktg_IScene$Companion_$callClinit, 0,
oktgg_GLTF$destroy$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktgg_GLTF$destroy$1_invoke(this); }, "$invoke2", function() { oktgg_GLTF$destroy$1_invoke0(this); }],
jur_AbstractCharClass$LazyWord, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyWord_computeValue(this); }],
kji_ArrayIterator, 0, jl_Object, [ju_Iterator, kjim_KMappedMarker], 4, 0, 0, ["$next", function() { return kji_ArrayIterator_next(this); }],
jur_LeafSet, 0, jur_AbstractSet, [], 1, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_LeafSet_matches(this, var_1, var_2, var_3); }, "$charCount", function() { return jur_LeafSet_charCount(this); }, "$hasConsumed", function(var_1) { return jur_LeafSet_hasConsumed(this, var_1); }],
jur_SequenceSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_SequenceSet_accepts(this, var_1, var_2); }, "$find", function(var_1, var_2, var_3) { return jur_SequenceSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_SequenceSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first", function(var_1) { return jur_SequenceSet_first(this, var_1); }, "$indexOf4", function(var_1, var_2, var_3) { return jur_SequenceSet_indexOf(this,
var_1, var_2, var_3); }, "$lastIndexOf3", function(var_1, var_2, var_3) { return jur_SequenceSet_lastIndexOf(this, var_1, var_2, var_3); }, "$startsWith2", function(var_1, var_2) { return jur_SequenceSet_startsWith(this, var_1, var_2); }],
kc_CollectionsKt__MutableCollectionsKt, 0, kc_CollectionsKt__MutableCollectionsJVMKt, [], 0, 0, 0, 0,
kc_CollectionsKt__ReversedViewsKt, 0, kc_CollectionsKt__MutableCollectionsKt, [], 0, 0, 0, 0,
kc_CollectionsKt___CollectionsJvmKt, 0, kc_CollectionsKt__ReversedViewsKt, [], 0, 0, 0, 0,
kc_CollectionsKt___CollectionsKt, 0, kc_CollectionsKt___CollectionsJvmKt, [], 0, 0, 0, 0,
kc_CollectionsKt, 0, kc_CollectionsKt___CollectionsKt, [], 4, 3, 0, 0,
ji_DataInput, 0, jl_Object, [], 3, 3, 0, 0,
oooig_GimGeometry$aabb3f, 0, jl_Object, [], 0, 3, 0, 0,
jur_UCIRangeSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_UCIRangeSet_accepts(this, var_1, var_2); }],
oooi_DxCapsule$CollideCapsuleBox, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideCapsuleBox", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxCapsule$CollideCapsuleBox_dCollideCapsuleBox(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxCapsule$CollideCapsuleBox_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktt_TvmFile$readText$1, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { oktt_TvmFile$readText$1_run(this); }],
oktgg_GLTFSourceType, 0, jl_Enum, [], 12, 3, oktgg_GLTFSourceType_$callClinit, 0,
oktf_IFile, 0, jl_Object, [], 3, 3, 0, 0]);
$rt_metadata([oktt_TvmFile, 0, jl_Object, [oktf_IFile], 4, 3, 0, ["$child", function(var_1) { return oktt_TvmFile_child(this, var_1); }, "$parent0", function() { return oktt_TvmFile_parent(this); }, "$read2", function() { return oktt_TvmFile_read(this); }, "$readText", function(var_1, var_2) { oktt_TvmFile_readText(this, var_1, var_2); }, "$readBytes", function(var_1) { oktt_TvmFile_readBytes(this, var_1); }, "$getPath", function() { return oktt_TvmFile_getPath(this); }, "$getExtension0", function() { return oktt_TvmFile_getExtension(this);
}, "$getName", function() { return oktt_TvmFile_getName(this); }],
jl_Boolean, 0, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, jl_Boolean_$callClinit, ["$compareTo5", function(var_1) { return jl_Boolean_compareTo(this, var_1); }, "$booleanValue", function() { return jl_Boolean_booleanValue(this); }, "$hashCode", function() { return jl_Boolean_hashCode(this); }, "$equals0", function(var_1) { return jl_Boolean_equals(this, var_1); }, "$compareTo6", function(var_1) { return jl_Boolean_compareTo0(this, var_1); }],
ju_NoSuchElementException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
oooicj_RefBoolean, 0, jl_Object, [], 4, 3, 0, ["$set73", function(var_1) { oooicj_RefBoolean_set(this, var_1); }, "$get38", function() { return oooicj_RefBoolean_get(this); }],
oktt_TvmGL$VertexArrayWrap, 0, oktt_TvmGL$GLObject, [], 4, 3, 0, ["$getGl1", function() { return oktt_TvmGL$VertexArrayWrap_getGl(this); }, "$getGl7", function() { return oktt_TvmGL$VertexArrayWrap_getGl0(this); }],
jur_CIBackReferenceSet, 0, jur_JointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_CIBackReferenceSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_CIBackReferenceSet_setNext(this, var_1); }, "$getString", function(var_1) { return jur_CIBackReferenceSet_getString(this, var_1); }, "$hasConsumed", function(var_1) { return jur_CIBackReferenceSet_hasConsumed(this, var_1); }],
jur_BackReferenceSet, 0, jur_CIBackReferenceSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_BackReferenceSet_matches(this, var_1, var_2, var_3); }, "$find", function(var_1, var_2, var_3) { return jur_BackReferenceSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_BackReferenceSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first", function(var_1) { return jur_BackReferenceSet_first(this, var_1); }],
oktgg_GLTF$load$1, 0, kji_Lambda, [kjf_Function2], 4, 0, 0, ["$invoke11", function(var_1, var_2) { return oktgg_GLTF$load$1_invoke(this, var_1, var_2); }, "$invoke23", function(var_1, var_2) { oktgg_GLTF$load$1_invoke0(this, var_1, var_2); }],
oooi_CollideTrimeshCCylinder, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dCollideCCTL", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollideTrimeshCCylinder_dCollideCCTL(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollideTrimeshCCylinder_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktsg_GLSLFloat, 0, oktsg_ShaderData, [], 4, 3, 0, ["$getType", function() { return oktsg_GLSLFloat_getType(this); }, "$asFloat", function() { return oktsg_GLSLFloat_asFloat(this); }, "$asVec2", function() { return oktsg_GLSLFloat_asVec2(this); }, "$asVec3", function() { return oktsg_GLSLFloat_asVec3(this); }, "$asVec4", function() { return oktsg_GLSLFloat_asVec4(this); }, "$getName", function() { return oktsg_GLSLFloat_getName(this); }],
oktmb_SphereMeshBuilder, 0, oktmb_MeshBuilder, [], 4, 3, 0, ["$build", function(var_1) { return oktmb_SphereMeshBuilder_build(this, var_1); }, "$getRadius0", function() { return oktmb_SphereMeshBuilder_getRadius(this); }, "$getHDivisions", function() { return oktmb_SphereMeshBuilder_getHDivisions(this); }, "$getVDivisions", function() { return oktmb_SphereMeshBuilder_getVDivisions(this); }],
ju_Arrays, 0, jl_Object, [], 0, 3, 0, 0,
oooi_DObject, 0, oooi_DBase, [], 1, 3, 0, ["$addObjectToList", function(var_1) { oooi_DObject_addObjectToList0(this, var_1); }, "$setTome", function(var_1) { oooi_DObject_setTome(this, var_1); }, "$removeObjectFromList", function() { oooi_DObject_removeObjectFromList(this); }, "$getWorld0", function() { return oooi_DObject_getWorld(this); }, "$getNext1", function() { return oooi_DObject_getNext(this); }],
ooo_DJoint, 0, jl_Object, [], 3, 3, 0, 0,
oooij_DxJoint, 0, oooi_DObject, [ooo_DJoint, jl_Cloneable], 1, 3, 0, ["$DESTRUCTOR", function() { oooij_DxJoint_DESTRUCTOR(this); }, "$isFlagsReverse", function() { return oooij_DxJoint_isFlagsReverse(this); }, "$setFlagsInGroup", function() { oooij_DxJoint_setFlagsInGroup(this); }, "$dJointAttach", function(var_1, var_2) { oooij_DxJoint_dJointAttach(this, var_1, var_2); }, "$setRelativeValues", function() { oooij_DxJoint_setRelativeValues(this); }, "$isEnabled1", function() { return oooij_DxJoint_isEnabled(this);
}, "$removeJointReferencesFromAttachedBodies", function() { oooij_DxJoint_removeJointReferencesFromAttachedBodies(this); }, "$FinalizeAndDestroyJointInstance", function(var_1) { oooij_DxJoint_FinalizeAndDestroyJointInstance(this, var_1); }, "$attach", function(var_1, var_2) { oooij_DxJoint_attach(this, var_1, var_2); }],
okttt_MainTeaVMTests, 0, oktt_Tests, [], 4, 3, okttt_MainTeaVMTests_$callClinit, ["$getCurrentApp", function() { return okttt_MainTeaVMTests_getCurrentApp(this); }, "$setCurrentApp", function(var_1) { okttt_MainTeaVMTests_setCurrentApp(this, var_1); }, "$getCurrentButton", function() { return okttt_MainTeaVMTests_getCurrentButton(this); }, "$setCurrentButton", function(var_1) { okttt_MainTeaVMTests_setCurrentButton(this, var_1); }],
oktgg_GLTFPrimitive$read$2$1, 0, kji_Lambda, [kjf_Function2], 4, 0, 0, ["$invoke11", function(var_1, var_2) { return oktgg_GLTFPrimitive$read$2$1_invoke(this, var_1, var_2); }, "$invoke24", function(var_1, var_2) { oktgg_GLTFPrimitive$read$2$1_invoke0(this, var_1, var_2); }],
jur_DotSet, 0, jur_JointSet, [], 4, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_DotSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_DotSet_setNext(this, var_1); }, "$getType", function() { return jur_DotSet_getType(this); }, "$hasConsumed", function(var_1) { return jur_DotSet_hasConsumed(this, var_1); }],
jur_CICharSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_CICharSet_accepts(this, var_1, var_2); }],
jur_SupplCharSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_SupplCharSet_accepts(this, var_1, var_2); }, "$find", function(var_1, var_2, var_3) { return jur_SupplCharSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_SupplCharSet_findBack(this, var_1, var_2, var_3, var_4); }, "$getCodePoint", function() { return jur_SupplCharSet_getCodePoint(this); }, "$first", function(var_1) { return jur_SupplCharSet_first(this, var_1);
}],
oooig_GimAABBSet$PushPairMacro, 0, jl_Object, [], 3, 0, 0, 0,
oooig_GimAABBSet$1, 0, jl_Object, [oooig_GimAABBSet$PushPairMacro], 4, 0, 0, ["$run6", function(var_1, var_2, var_3) { oooig_GimAABBSet$1_run(this, var_1, var_2, var_3); }],
oooig_GimAABBSet$2, 0, jl_Object, [oooig_GimAABBSet$PushPairMacro], 4, 0, 0, ["$run6", function(var_1, var_2, var_3) { oooig_GimAABBSet$2_run(this, var_1, var_2, var_3); }],
okttp_BoxShapeTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return okttp_BoxShapeTest_getName(this); }, "$testMain", function() { okttp_BoxShapeTest_testMain(this); }],
oktm_IVec4$Companion, 0, jl_Object, [], 4, 3, oktm_IVec4$Companion_$callClinit, ["$getOne0", function() { return oktm_IVec4$Companion_getOne(this); }, "$getZero0", function() { return oktm_IVec4$Companion_getZero(this); }, "$getZero3One1", function() { return oktm_IVec4$Companion_getZero3One1(this); }, "$len", function(var_1, var_2, var_3) { return oktm_IVec4$Companion_len(this, var_1, var_2, var_3); }],
kr_Random$Companion, 0, kr_Random, [], 132, 3, kr_Random$Companion_$callClinit, 0,
okttm_InstancingTest$testMain$2, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return okttm_InstancingTest$testMain$2_invoke(this); }, "$invoke2", function() { okttm_InstancingTest$testMain$2_invoke0(this); }],
oktgg_GLTF$glCalls$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktgg_GLTF$glCalls$1_$callClinit, ["$invoke1", function(var_1) { return oktgg_GLTF$glCalls$1_invoke(this, var_1); }, "$invoke25", function(var_1) { oktgg_GLTF$glCalls$1_invoke0(this, var_1); }],
oooip_DxIslandsProcessingCallContext$1, 0, jl_Object, [jl_Runnable], 0, 0, 0, ["$run", function() { oooip_DxIslandsProcessingCallContext$1_run(this); }],
oooip_DxIslandsProcessingCallContext$2, 0, jl_Object, [jl_Runnable], 0, 0, 0, ["$run", function() { oooip_DxIslandsProcessingCallContext$2_run(this); }],
oktgg_GLTFMesh$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFMesh$read$2_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTFMesh$read$2_invoke0(this, var_1); }],
oooip_DxIslandsProcessingCallContext$3, 0, jl_Object, [jl_Runnable], 0, 0, 0, ["$run", function() { oooip_DxIslandsProcessingCallContext$3_run(this); }],
oktgg_GLTFMesh$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFMesh$read$1_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_GLTFMesh$read$1_invoke0(this, var_1); }],
jur_AbstractCharClass$LazyJavaMirrored$1, "AbstractCharClass$LazyJavaMirrored$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaMirrored$1_contains(this, var_1); }],
oooi_CollideTrimeshBox$sTrimeshBoxColliderData, 0, jl_Object, [], 0, 0, 0, ["$_cldTestNormal", function(var_1, var_2, var_3, var_4) { return oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldTestNormal(this, var_1, var_2, var_3, var_4); }, "$_cldTestFace", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldTestFace(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$_cldTestEdge", function(var_1, var_2, var_3, var_4, var_5, var_6) {
return oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldTestEdge(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$_cldClipPolyToPlane", function(var_1, var_2, var_3, var_4, var_5) { oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldClipPolyToPlane(this, var_1, var_2, var_3, var_4, var_5); }, "$_cldTestSeparatingAxes", function(var_1, var_2, var_3) { return oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldTestSeparatingAxes(this, var_1, var_2, var_3); }, "$_cldClosestPointOnTwoLines", function(var_1,
var_2, var_3, var_4, var_5, var_6) { return oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldClosestPointOnTwoLines(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$_cldClipping", function(var_1, var_2, var_3, var_4) { oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldClipping(this, var_1, var_2, var_3, var_4); }, "$_cldTestOneTriangle", function(var_1, var_2, var_3, var_4) { oooi_CollideTrimeshBox$sTrimeshBoxColliderData__cldTestOneTriangle(this, var_1, var_2, var_3, var_4); }, "$SetupInitialContext",
function(var_1, var_2, var_3, var_4, var_5) { oooi_CollideTrimeshBox$sTrimeshBoxColliderData_SetupInitialContext(this, var_1, var_2, var_3, var_4, var_5); }, "$TestCollisionForSingleTriangle", function(var_1, var_2, var_3, var_4) { return oooi_CollideTrimeshBox$sTrimeshBoxColliderData_TestCollisionForSingleTriangle(this, var_1, var_2, var_3, var_4); }],
oooig_GimDynArray, 0, jl_Object, [], 0, 3, 0, ["$GIM_DYNARRAY_RESERVE_SIZE", function(var_1, var_2) { oooig_GimDynArray_GIM_DYNARRAY_RESERVE_SIZE(this, var_1, var_2); }, "$GIM_DYNARRAY_POINTER", function() { return oooig_GimDynArray_GIM_DYNARRAY_POINTER(this); }, "$GIM_DYNARRAY_POINTER_V", function() { return oooig_GimDynArray_GIM_DYNARRAY_POINTER_V(this); }, "$GIM_DYNARRAY_PUSH_ITEM_TZ", function(var_1) { oooig_GimDynArray_GIM_DYNARRAY_PUSH_ITEM_TZ(this, var_1); }, "$GIM_DYNARRAY_DESTROY", function() { oooig_GimDynArray_GIM_DYNARRAY_DESTROY(this);
}, "$size", function() { return oooig_GimDynArray_size(this); }],
jur_UEOLSet, 0, jur_AbstractSet, [], 4, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_UEOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_UEOLSet_hasConsumed(this, var_1); }],
oktgg_GLTFTexture, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, 0, ["$setSampler", function(var_1) { oktgg_GLTFTexture_setSampler(this, var_1); }, "$getSource", function() { return oktgg_GLTFTexture_getSource(this); }, "$setSource", function(var_1) { oktgg_GLTFTexture_setSource(this, var_1); }, "$read", function(var_1) { oktgg_GLTFTexture_read(this, var_1); }, "$destroy0", function() { oktgg_GLTFTexture_destroy(this); }, "$getGltf0", function() { return oktgg_GLTFTexture_getGltf(this);
}, "$getElementIndex", function() { return oktgg_GLTFTexture_getElementIndex(this); }, "$getTexture0", function() { return oktgg_GLTFTexture_getTexture(this); }],
jur_UCICharSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_UCICharSet_accepts(this, var_1, var_2); }],
oktg_IMaterial, 0, jl_Object, [], 3, 3, oktg_IMaterial_$callClinit, 0,
oktgg_GLTF$read$6$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$6$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTF$read$6$1_invoke0(this, var_1); }],
oktsg_OutputNode, 0, oktsg_ShaderNode, [], 4, 3, oktsg_OutputNode_$callClinit, ["$getVertPosition", function() { return oktsg_OutputNode_getVertPosition(this); }, "$getFragColor", function() { return oktsg_OutputNode_getFragColor(this); }, "$setAlphaMode0", function(var_1) { oktsg_OutputNode_setAlphaMode(this, var_1); }, "$setAlphaCutoff", function(var_1) { oktsg_OutputNode_setAlphaCutoff(this, var_1); }, "$setCullFaceMode", function(var_1) { oktsg_OutputNode_setCullFaceMode(this, var_1); }, "$prepareToDrawMesh0",
function(var_1) { oktsg_OutputNode_prepareToDrawMesh(this, var_1); }, "$executionVert", function(var_1) { oktsg_OutputNode_executionVert(this, var_1); }, "$executionFrag", function(var_1) { oktsg_OutputNode_executionFrag(this, var_1); }],
oktgg_GLTFScene$read$3$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFScene$read$3$1_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFScene$read$3$1_invoke0(this, var_1); }],
otjt_ArrayBufferView, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
otjt_Uint16Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
okta_IAL, 0, jl_Object, [], 3, 3, 0, 0,
otjde_FocusEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0,
jur_FSet$PossessiveFSet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_FSet$PossessiveFSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_FSet$PossessiveFSet_hasConsumed(this, var_1); }],
jur_CompositeGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_CompositeGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_PosCompositeGroupQuantifierSet, 0, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PosCompositeGroupQuantifierSet_matches(this, var_1, var_2, var_3); }]]);
$rt_metadata([oktts_MotionBlurBaseTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktts_MotionBlurBaseTest_getName(this); }, "$testMain", function() { oktts_MotionBlurBaseTest_testMain(this); }],
oktgl_DirectionalLight$renderShadowMaps$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgl_DirectionalLight$renderShadowMaps$1_invoke(this, var_1); }, "$invoke8", function(var_1) { oktgl_DirectionalLight$renderShadowMaps$1_invoke0(this, var_1); }],
oktsp_Bloom$render$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktsp_Bloom$render$3_invoke(this, var_1); }, "$invoke12", function(var_1) { oktsp_Bloom$render$3_invoke0(this, var_1); }],
oooig_GimTriCollision$GIM_TRIANGLE_CONTACT_DATA, 0, jl_Object, [], 0, 0, 0, 0,
oktsp_Bloom$render$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktsp_Bloom$render$2_invoke(this, var_1); }, "$invoke12", function(var_1) { oktsp_Bloom$render$2_invoke0(this, var_1); }],
oktsp_Bloom$render$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktsp_Bloom$render$1_invoke(this, var_1); }, "$invoke12", function(var_1) { oktsp_Bloom$render$1_invoke0(this, var_1); }],
oktsp_FXAA$render$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktsp_FXAA$render$1_invoke(this, var_1); }, "$invoke12", function(var_1) { oktsp_FXAA$render$1_invoke0(this, var_1); }],
ks_TransformingSequence, 0, jl_Object, [ks_Sequence], 4, 3, 0, ["$iterator", function() { return ks_TransformingSequence_iterator(this); }],
jur_AbstractCharClass$LazyJavaDigit$1, "AbstractCharClass$LazyJavaDigit$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaDigit$1_contains(this, var_1); }],
oktts_ShadowMappingBaseTest$testMain$2$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktts_ShadowMappingBaseTest$testMain$2$1_invoke(this, var_1); }, "$invoke8", function(var_1) { oktts_ShadowMappingBaseTest$testMain$2$1_invoke0(this, var_1); }],
oktt_TvmGL$RenderBufferWrap, 0, oktt_TvmGL$GLObject, [], 4, 3, 0, ["$getGl2", function() { return oktt_TvmGL$RenderBufferWrap_getGl(this); }, "$getGl7", function() { return oktt_TvmGL$RenderBufferWrap_getGl0(this); }],
k_Pair, 0, jl_Object, [ji_Serializable], 4, 3, 0, ["$getFirst0", function() { return k_Pair_getFirst(this); }, "$getSecond", function() { return k_Pair_getSecond(this); }, "$component1", function() { return k_Pair_component1(this); }, "$component2", function() { return k_Pair_component2(this); }, "$hashCode", function() { return k_Pair_hashCode(this); }, "$equals0", function(var_1) { return k_Pair_equals(this, var_1); }],
jl_NullPointerException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
oooil_CCDSupport, 0, jl_Object, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaSpaceChar$1, "AbstractCharClass$LazyJavaSpaceChar$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaSpaceChar$1_contains(this, var_1); }],
oktts_SoundWavTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktts_SoundWavTest_getName(this); }, "$testMain", function() { oktts_SoundWavTest_testMain(this); }],
oktgg_IGLTFMaterial$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
okttm_MeshCubeTest$testMain$4, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return okttm_MeshCubeTest$testMain$4_invoke(this); }, "$invoke2", function() { okttm_MeshCubeTest$testMain$4_invoke0(this); }],
jl_Math, 0, jl_Object, [], 4, 3, 0, 0,
oooi_CollideTrimeshCCylinder$1, 0, jl_Object, [ju_Comparator], 0, 0, 0, ["$compare5", function(var_1, var_2) { return oooi_CollideTrimeshCCylinder$1_compare(this, var_1, var_2); }],
oktg_IScene$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
ooo_DPlane, 0, jl_Object, [ooo_DGeom], 3, 3, 0, 0,
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue(this); }],
oktts_BloomTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktts_BloomTest$testMain$1_invoke(this); }, "$invoke2", function() { oktts_BloomTest$testMain$1_invoke0(this); }],
oktmb_FrustumMeshBuilder$Companion, 0, jl_Object, [], 4, 3, 0, ["$updateMesh", function(var_1, var_2) { oktmb_FrustumMeshBuilder$Companion_updateMesh(this, var_1, var_2); }],
okttp_TrimeshShapeTest$testMain$plane$1, 0, kji_Lambda, [kjf_Function2], 4, 0, okttp_TrimeshShapeTest$testMain$plane$1_$callClinit, ["$invoke11", function(var_1, var_2) { return okttp_TrimeshShapeTest$testMain$plane$1_invoke(this, var_1, var_2); }, "$invoke27", function(var_1, var_2) { return okttp_TrimeshShapeTest$testMain$plane$1_invoke0(this, var_1, var_2); }],
ju_AbstractSequentialList, 0, ju_AbstractList, [], 1, 3, 0, ["$get1", function(var_1) { return ju_AbstractSequentialList_get(this, var_1); }, "$add2", function(var_1, var_2) { ju_AbstractSequentialList_add(this, var_1, var_2); }, "$iterator", function() { return ju_AbstractSequentialList_iterator(this); }],
jur_AbstractCharClass$LazyJavaDefined, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaDefined_computeValue(this); }],
oktgg_GLTFTexture$read$2$1$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktgg_GLTFTexture$read$2$1$1_invoke(this); }, "$invoke2", function() { oktgg_GLTFTexture$read$2$1$1_invoke0(this); }],
oooi_CollideCylinderSphere, 0, oooi_DxCollisionUtil, [ooo_DColliderFn], 0, 0, oooi_CollideCylinderSphere_$callClinit, ["$dCollideCylinderSphere", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollideCylinderSphere_dCollideCylinderSphere(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollideCylinderSphere_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oooip_DxWorldProcessIslandsInfo$dmemestimate_fn_t, 0, jl_Object, [], 3, 3, 0, 0,
jur_AltGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_AltGroupQuantifierSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_AltGroupQuantifierSet_setNext(this, var_1); }],
jur_PosAltGroupQuantifierSet, 0, jur_AltGroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PosAltGroupQuantifierSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_PosAltGroupQuantifierSet_setNext(this, var_1); }],
oktg_IScene$Companion$Build$1, 0, kji_Lambda, [kjf_Function0], 4, 0, oktg_IScene$Companion$Build$1_$callClinit, 0,
ju_Queue, 0, jl_Object, [ju_Collection], 3, 3, 0, 0,
ju_Deque, 0, jl_Object, [ju_Queue], 3, 3, 0, 0,
oooi_FastLDLT, 0, jl_Object, [], 0, 0, 0, 0,
oktga_Vec3Track, 0, jl_Object, [oktga_IAnimTrack], 4, 3, 0, ["$getTimes", function() { return oktga_Vec3Track_getTimes(this); }, "$getValues1", function() { return oktga_Vec3Track_getValues(this); }, "$getInTangents", function() { return oktga_Vec3Track_getInTangents(this); }, "$getOutTangents", function() { return oktga_Vec3Track_getOutTangents(this); }, "$getDuration", function() { return oktga_Vec3Track_getDuration(this); }, "$setDuration", function(var_1) { oktga_Vec3Track_setDuration(this, var_1); }, "$getNodeIndex",
function() { return oktga_Vec3Track_getNodeIndex(this); }, "$calculateDuration1", function() { return oktga_Vec3Track_calculateDuration(this); }],
ooo_DJoint$DJointFeedback, 0, jl_Object, [], 0, 3, 0, 0,
oooi_CollisionLibccd$ccd_cyl_t, 0, oooi_CollisionLibccd$ccd_obj_t, [], 0, 0, 0, 0,
oooi_CollideSpaceGeom$SpaceGeomColliderData, 0, jl_Object, [], 0, 0, 0, 0,
oktm_Mat4, 0, jl_Object, [oktm_IMat4], 0, 3, oktm_Mat4_$callClinit, ["$getValues", function() { return oktm_Mat4_getValues(this); }, "$getM000", function() { return oktm_Mat4_getM00(this); }, "$setM00", function(var_1) { oktm_Mat4_setM00(this, var_1); }, "$getM010", function() { return oktm_Mat4_getM01(this); }, "$setM010", function(var_1) { oktm_Mat4_setM01(this, var_1); }, "$getM020", function() { return oktm_Mat4_getM02(this); }, "$setM020", function(var_1) { oktm_Mat4_setM02(this, var_1); }, "$getM030",
function() { return oktm_Mat4_getM03(this); }, "$setM030", function(var_1) { oktm_Mat4_setM03(this, var_1); }, "$getM100", function() { return oktm_Mat4_getM10(this); }, "$setM100", function(var_1) { oktm_Mat4_setM10(this, var_1); }, "$getM110", function() { return oktm_Mat4_getM11(this); }, "$setM11", function(var_1) { oktm_Mat4_setM11(this, var_1); }, "$getM120", function() { return oktm_Mat4_getM12(this); }, "$setM120", function(var_1) { oktm_Mat4_setM12(this, var_1); }, "$getM130", function() { return oktm_Mat4_getM13(this);
}, "$setM130", function(var_1) { oktm_Mat4_setM13(this, var_1); }, "$getM200", function() { return oktm_Mat4_getM20(this); }, "$setM200", function(var_1) { oktm_Mat4_setM20(this, var_1); }, "$getM210", function() { return oktm_Mat4_getM21(this); }, "$setM210", function(var_1) { oktm_Mat4_setM21(this, var_1); }, "$getM220", function() { return oktm_Mat4_getM22(this); }, "$setM22", function(var_1) { oktm_Mat4_setM22(this, var_1); }, "$getM230", function() { return oktm_Mat4_getM23(this); }, "$setM230", function(var_1)
{ oktm_Mat4_setM23(this, var_1); }, "$getM300", function() { return oktm_Mat4_getM30(this); }, "$setM300", function(var_1) { oktm_Mat4_setM30(this, var_1); }, "$getM310", function() { return oktm_Mat4_getM31(this); }, "$setM310", function(var_1) { oktm_Mat4_setM31(this, var_1); }, "$getM320", function() { return oktm_Mat4_getM32(this); }, "$setM320", function(var_1) { oktm_Mat4_setM32(this, var_1); }, "$getM330", function() { return oktm_Mat4_getM33(this); }, "$setM33", function(var_1) { oktm_Mat4_setM33(this,
var_1); }, "$getScaleXSquared0", function() { return oktm_Mat4_getScaleXSquared(this); }, "$getScaleYSquared0", function() { return oktm_Mat4_getScaleYSquared(this); }, "$getScaleZSquared0", function() { return oktm_Mat4_getScaleZSquared(this); }, "$getScaleX0", function() { return oktm_Mat4_getScaleX(this); }, "$getScaleY0", function() { return oktm_Mat4_getScaleY(this); }, "$getScaleZ0", function() { return oktm_Mat4_getScaleZ(this); }, "$getCellValue0", function(var_1) { return oktm_Mat4_getCellValue(this,
var_1); }, "$setCellValue0", function(var_1, var_2) { oktm_Mat4_setCellValue(this, var_1, var_2); }, "$getRow30", function(var_1, var_2) { return oktm_Mat4_getRow3(this, var_1, var_2); }, "$isNotEqualTo", function(var_1) { return oktm_Mat4_isNotEqualTo(this, var_1); }, "$set3", function(var_1) { return oktm_Mat4_set(this, var_1); }, "$set66", function(var_1) { return oktm_Mat4_set0(this, var_1); }, "$set67", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return oktm_Mat4_set1(this, var_1, var_2,
var_3, var_4, var_5, var_6, var_7); }, "$set55", function(var_1, var_2, var_3) { return oktm_Mat4_set2(this, var_1, var_2, var_3); }, "$set68", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) { return oktm_Mat4_set3(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10); }, "$setFromQuaternion2", function(var_1) { return oktm_Mat4_setFromQuaternion(this, var_1); }, "$setFromQuaternion1", function(var_1, var_2, var_3, var_4) { return oktm_Mat4_setFromQuaternion0(this,
var_1, var_2, var_3, var_4); }, "$mul", function(var_1) { return oktm_Mat4_mul(this, var_1); }, "$mulLeft", function(var_1) { return oktm_Mat4_mulLeft(this, var_1); }, "$idt0", function() { return oktm_Mat4_idt(this); }, "$inv", function() { return oktm_Mat4_inv(this); }, "$det", function() { return oktm_Mat4_det(this); }, "$setToProjection", function(var_1, var_2, var_3, var_4) { return oktm_Mat4_setToProjection(this, var_1, var_2, var_3, var_4); }, "$setToOrtho", function(var_1, var_2, var_3, var_4, var_5,
var_6) { return oktm_Mat4_setToOrtho(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setToTranslation0", function(var_1, var_2, var_3) { return oktm_Mat4_setToTranslation(this, var_1, var_2, var_3); }, "$setToRotation0", function(var_1, var_2, var_3, var_4) { return oktm_Mat4_setToRotation(this, var_1, var_2, var_3, var_4); }, "$setToLookAt2", function(var_1, var_2) { return oktm_Mat4_setToLookAt(this, var_1, var_2); }, "$setToLookAt", function(var_1, var_2, var_3) { return oktm_Mat4_setToLookAt0(this,
var_1, var_2, var_3); }, "$getTranslation", function(var_1) { return oktm_Mat4_getTranslation(this, var_1); }, "$getRotation", function(var_1) { return oktm_Mat4_getRotation(this, var_1); }, "$getScale", function(var_1) { return oktm_Mat4_getScale(this, var_1); }, "$rotate", function(var_1, var_2, var_3, var_4) { return oktm_Mat4_rotate(this, var_1, var_2, var_3, var_4); }, "$rotate5", function(var_1) { return oktm_Mat4_rotate0(this, var_1); }, "$project0", function(var_1, var_2) { return oktm_Mat4_project(this,
var_1, var_2); }],
oktgg_GLTF$read$12$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$12$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTF$read$12$1_invoke0(this, var_1); }],
okttsg_CascadedShadowMappingTest$testMain$1$2, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return okttsg_CascadedShadowMappingTest$testMain$1$2_invoke(this); }, "$invoke2", function() { okttsg_CascadedShadowMappingTest$testMain$1$2_invoke0(this); }],
ji_IOException, "IOException", 9, jl_Exception, [], 0, 3, 0, 0,
jnc_CharacterCodingException, 0, ji_IOException, [], 0, 3, 0, 0,
jnc_UnmappableCharacterException, "UnmappableCharacterException", 8, jnc_CharacterCodingException, [], 0, 3, 0, ["$getMessage", function() { return jnc_UnmappableCharacterException_getMessage(this); }],
oooig_GimDynArrayInt, 0, jl_Object, [], 0, 3, 0, ["$GIM_DYNARRAY_PUSH_ITEM", function(var_1) { oooig_GimDynArrayInt_GIM_DYNARRAY_PUSH_ITEM(this, var_1); }, "$GIM_DYNARRAY_RESERVE_SIZE", function(var_1, var_2) { oooig_GimDynArrayInt_GIM_DYNARRAY_RESERVE_SIZE(this, var_1, var_2); }, "$GIM_DYNARRAY_DESTROY", function() { oooig_GimDynArrayInt_GIM_DYNARRAY_DESTROY(this); }, "$GIM_DYNARRAY_POINTER0", function() { return oooig_GimDynArrayInt_GIM_DYNARRAY_POINTER(this); }, "$size", function() { return oooig_GimDynArrayInt_size(this);
}],
oooi_DxWorld$DWorldStepMemoryFunctionsInfo, 0, jl_Object, [], 128, 3, oooi_DxWorld$DWorldStepMemoryFunctionsInfo_$callClinit, 0,
oktgg_GLTFAnimationSampler$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAnimationSampler$read$1_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_GLTFAnimationSampler$read$1_invoke0(this, var_1); }]]);
$rt_metadata([jur_UCIDecomposedCharSet, 0, jur_DecomposedCharSet, [], 0, 0, 0, 0,
oktf_IFile$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktt_IFrameBuffer, 0, jl_Object, [], 3, 3, 0, 0,
oktt_SimpleFrameBuffer, 0, jl_Object, [oktt_IFrameBuffer, oktt_ITexture], 4, 3, 0, ["$getGlTarget", function() { return oktt_SimpleFrameBuffer_getGlTarget(this); }, "$getTextureHandle", function() { return oktt_SimpleFrameBuffer_getTextureHandle(this); }, "$getTexture1", function() { return oktt_SimpleFrameBuffer_getTexture0(this); }, "$getWidth", function() { return oktt_SimpleFrameBuffer_getWidth(this); }, "$getHeight", function() { return oktt_SimpleFrameBuffer_getHeight(this); }, "$isBound2", function()
{ return oktt_SimpleFrameBuffer_isBound(this); }, "$setBound", function(var_1) { oktt_SimpleFrameBuffer_setBound(this, var_1); }, "$getFrameBufferHandle", function() { return oktt_SimpleFrameBuffer_getFrameBufferHandle(this); }, "$getAttachments", function() { return oktt_SimpleFrameBuffer_getAttachments(this); }, "$getAttachments0", function() { return oktt_SimpleFrameBuffer_getAttachments0(this); }, "$bind8", function(var_1) { oktt_SimpleFrameBuffer_bind(this, var_1); }, "$bind4", function(var_1) { oktt_SimpleFrameBuffer_bind0(this,
var_1); }, "$buildAttachments", function() { oktt_SimpleFrameBuffer_buildAttachments(this); }, "$getTexture", function(var_1) { return oktt_SimpleFrameBuffer_getTexture(this, var_1); }, "$initBuffersOrder0", function(var_1) { oktt_SimpleFrameBuffer_initBuffersOrder(this, var_1); }, "$render", function(var_1) { oktt_SimpleFrameBuffer_render(this, var_1); }],
jl_IndexOutOfBoundsException, "IndexOutOfBoundsException", 10, jl_RuntimeException, [], 0, 3, 0, 0,
ooott_TaskGroup, 0, ooott_Task, [], 0, 3, 0, ["$subgroup", function(var_1, var_2) { return ooott_TaskGroup_subgroup(this, var_1, var_2); }, "$subtask", function(var_1, var_2) { return ooott_TaskGroup_subtask(this, var_1, var_2); }, "$submit0", function() { ooott_TaskGroup_submit(this); }, "$subtaskCompleted", function() { ooott_TaskGroup_subtaskCompleted(this); }],
oktts_SSAOBaseTest$testMain$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktts_SSAOBaseTest$testMain$1$1_invoke(this, var_1); }, "$invoke8", function(var_1) { oktts_SSAOBaseTest$testMain$1$1_invoke0(this, var_1); }],
oktt_TvmKB, 0, jl_Object, [okti_IKB], 4, 3, 0, ["$getPressed", function() { return oktt_TvmKB_getPressed(this); }, "$getListeners", function() { return oktt_TvmKB_getListeners(this); }, "$getKeyCode", function(var_1) { return oktt_TvmKB_getKeyCode(this, var_1); }, "$isKeyPressed", function(var_1) { return oktt_TvmKB_isKeyPressed(this, var_1); }, "$addListener", function(var_1) { oktt_TvmKB_addListener(this, var_1); }, "$reset1", function() { oktt_TvmKB_reset(this); }, "$getShift", function() { return oktt_TvmKB_getShift(this);
}],
jl_Long, 0, jl_Number, [jl_Comparable], 0, 3, jl_Long_$callClinit, 0,
jur_SequenceSet$IntHash, 0, jl_Object, [], 0, 0, 0, ["$put14", function(var_1, var_2) { jur_SequenceSet$IntHash_put(this, var_1, var_2); }, "$get29", function(var_1) { return jur_SequenceSet$IntHash_get(this, var_1); }],
oktts_FXAATest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktts_FXAATest$testMain$1_invoke(this); }, "$invoke2", function() { oktts_FXAATest$testMain$1_invoke0(this); }],
jl_ArithmeticException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
oooi_CollideTrimeshPlane$1, 0, jl_Object, [ju_Comparator], 0, 0, 0, ["$compare5", function(var_1, var_2) { return oooi_CollideTrimeshPlane$1_compare(this, var_1, var_2); }],
oooi_DxConvex$CollideSphereConvex, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideSphereConvex", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxConvex$CollideSphereConvex_dCollideSphereConvex(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxConvex$CollideSphereConvex_dColliderFn(this, var_1, var_2, var_3, var_4); }],
jur_AbstractCharClass$LazyJavaLetterOrDigit$1, "AbstractCharClass$LazyJavaLetterOrDigit$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains(this, var_1); }],
jur_CharClass$18, "CharClass$18", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$18_contains(this, var_1); }, "$toString", function() { return jur_CharClass$18_toString(this); }],
jur_PossessiveGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PossessiveGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_CharClass$13, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$13_contains(this, var_1); }],
jur_CharClass$12, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$12_contains(this, var_1); }],
jur_CharClass$11, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$11_contains(this, var_1); }],
jur_CharClass$10, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$10_contains(this, var_1); }],
jur_CharClass$17, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$17_contains(this, var_1); }],
oktgg_GLTFScene$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFScene$read$1_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_GLTFScene$read$1_invoke0(this, var_1); }],
jur_CharClass$16, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$16_contains(this, var_1); }],
oktm_IVec, 0, jl_Object, [oktj_IJsonArrayIO], 3, 3, 0, 0,
jur_CharClass$15, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$15_contains(this, var_1); }],
jur_CharClass$14, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$14_contains(this, var_1); }],
jl_StringBuilder, "StringBuilder", 10, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, ["$append", function(var_1) { return jl_StringBuilder_append(this, var_1); }, "$append1", function(var_1) { return jl_StringBuilder_append0(this, var_1); }, "$append11", function(var_1) { return jl_StringBuilder_append1(this, var_1); }, "$append22", function(var_1) { return jl_StringBuilder_append2(this, var_1); }, "$append12", function(var_1) { return jl_StringBuilder_append3(this, var_1); }, "$append20", function(var_1,
var_2, var_3) { return jl_StringBuilder_append4(this, var_1, var_2, var_3); }, "$append13", function(var_1) { return jl_StringBuilder_append5(this, var_1); }, "$append21", function(var_1, var_2, var_3) { return jl_StringBuilder_append6(this, var_1, var_2, var_3); }, "$append15", function(var_1) { return jl_StringBuilder_append7(this, var_1); }, "$append14", function(var_1) { return jl_StringBuilder_append8(this, var_1); }, "$insert16", function(var_1, var_2) { return jl_StringBuilder_insert(this, var_1, var_2);
}, "$insert15", function(var_1, var_2) { return jl_StringBuilder_insert0(this, var_1, var_2); }, "$insert12", function(var_1, var_2, var_3, var_4) { return jl_StringBuilder_insert1(this, var_1, var_2, var_3, var_4); }, "$insert11", function(var_1, var_2, var_3, var_4) { return jl_StringBuilder_insert2(this, var_1, var_2, var_3, var_4); }, "$insert13", function(var_1, var_2) { return jl_StringBuilder_insert3(this, var_1, var_2); }, "$insert14", function(var_1, var_2) { return jl_StringBuilder_insert4(this, var_1,
var_2); }, "$delete", function(var_1, var_2) { return jl_StringBuilder_delete(this, var_1, var_2); }, "$deleteCharAt", function(var_1) { return jl_StringBuilder_deleteCharAt(this, var_1); }, "$insert17", function(var_1, var_2) { return jl_StringBuilder_insert5(this, var_1, var_2); }, "$setLength", function(var_1) { jl_StringBuilder_setLength(this, var_1); }, "$getChars", function(var_1, var_2, var_3, var_4) { jl_StringBuilder_getChars(this, var_1, var_2, var_3, var_4); }, "$insert6", function(var_1, var_2, var_3,
var_4) { return jl_StringBuilder_insert6(this, var_1, var_2, var_3, var_4); }, "$append5", function(var_1, var_2, var_3) { return jl_StringBuilder_append9(this, var_1, var_2, var_3); }, "$insert5", function(var_1, var_2, var_3, var_4) { return jl_StringBuilder_insert7(this, var_1, var_2, var_3, var_4); }, "$append4", function(var_1, var_2, var_3) { return jl_StringBuilder_append10(this, var_1, var_2, var_3); }, "$charAt", function(var_1) { return jl_StringBuilder_charAt(this, var_1); }, "$length", function()
{ return jl_StringBuilder_length(this); }, "$toString", function() { return jl_StringBuilder_toString(this); }, "$ensureCapacity", function(var_1) { jl_StringBuilder_ensureCapacity(this, var_1); }, "$insert4", function(var_1, var_2) { return jl_StringBuilder_insert8(this, var_1, var_2); }, "$insert3", function(var_1, var_2) { return jl_StringBuilder_insert9(this, var_1, var_2); }, "$insert2", function(var_1, var_2) { return jl_StringBuilder_insert10(this, var_1, var_2); }, "$insert1", function(var_1, var_2)
{ return jl_StringBuilder_insert11(this, var_1, var_2); }, "$insert", function(var_1, var_2) { return jl_StringBuilder_insert12(this, var_1, var_2); }, "$append3", function(var_1) { return jl_StringBuilder_append11(this, var_1); }, "$append2", function(var_1) { return jl_StringBuilder_append12(this, var_1); }],
oooi_Objects_H$DxPosR, 0, jl_Object, [oooi_Objects_H$DxPosRC], 0, 3, 0, ["$R", function() { return oooi_Objects_H$DxPosR_R(this); }, "$Rw", function() { return oooi_Objects_H$DxPosR_Rw(this); }, "$pos", function() { return oooi_Objects_H$DxPosR_pos(this); }],
oktgg_GLTFScene$read$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFScene$read$3_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTFScene$read$3_invoke0(this, var_1); }],
oooi_DxSpace$3$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, ["$hasNext", function() { return oooi_DxSpace$3$1_hasNext(this); }, "$next7", function() { return oooi_DxSpace$3$1_next(this); }, "$next", function() { return oooi_DxSpace$3$1_next0(this); }],
oooig_GimRadixSort$GIM_RSORT_TOKEN, 0, jl_Object, [], 0, 0, 0, 0,
oooi_DxConvex$ConvexConvexSATOutput, 0, jl_Object, [], 0, 0, 0, 0,
oktt_FrameBufferTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktt_FrameBufferTest_getName(this); }, "$testMain", function() { oktt_FrameBufferTest_testMain(this); }],
oktt_TvmGL$vertexArrays$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktt_TvmGL$vertexArrays$1_$callClinit, ["$invoke1", function(var_1) { return oktt_TvmGL$vertexArrays$1_invoke(this, var_1); }, "$invoke28", function(var_1) { return oktt_TvmGL$vertexArrays$1_invoke0(this, var_1); }],
oktg_Armature, 0, jl_Object, [oktg_IArmature], 4, 3, 0, ["$setName", function(var_1) { oktg_Armature_setName(this, var_1); }, "$setNode", function(var_1) { oktg_Armature_setNode(this, var_1); }, "$getInverseBoneMatrices", function() { return oktg_Armature_getInverseBoneMatrices(this); }, "$setInverseBoneMatrices", function(var_1) { oktg_Armature_setInverseBoneMatrices(this, var_1); }, "$getBoneMatrices", function() { return oktg_Armature_getBoneMatrices(this); }, "$setBoneMatrices", function(var_1) { oktg_Armature_setBoneMatrices(this,
var_1); }, "$getPreviousBoneMatrices", function() { return oktg_Armature_getPreviousBoneMatrices(this); }, "$setPreviousBoneMatrices", function(var_1) { oktg_Armature_setPreviousBoneMatrices(this, var_1); }, "$getBoneNames", function() { return oktg_Armature_getBoneNames(this); }, "$setBoneNames", function(var_1) { oktg_Armature_setBoneNames(this, var_1); }, "$getBones", function() { return oktg_Armature_getBones(this); }, "$setBones", function(var_1) { oktg_Armature_setBones(this, var_1); }, "$initBones0",
function(var_1, var_2) { oktg_Armature_initBones(this, var_1, var_2); }, "$updatePreviousTransform0", function() { oktg_Armature_updatePreviousTransform(this); }, "$update", function(var_1) { oktg_Armature_update(this, var_1); }],
jl_LinkageError, 0, jl_Error, [], 0, 3, 0, 0,
jl_IncompatibleClassChangeError, 0, jl_LinkageError, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyASCII, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyASCII_computeValue(this); }],
oktt_TvmSound$1$1, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmSound$1$1_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmSound$1$1_handleEvent$exported$0(this, var_1); }],
ooo_DSphere, 0, jl_Object, [ooo_DGeom], 3, 3, 0, 0,
oooi_DxSphere, 0, oooi_DxGeom, [ooo_DSphere], 0, 3, 0, ["$computeAABB", function() { oooi_DxSphere_computeAABB(this); }, "$dGeomSphereGetRadius", function() { return oooi_DxSphere_dGeomSphereGetRadius(this); }, "$getRadius", function() { return oooi_DxSphere_getRadius(this); }],
jur_Quantifier, "Quantifier", 6, jur_SpecialToken, [jl_Cloneable], 0, 0, 0, ["$min0", function() { return jur_Quantifier_min(this); }, "$max0", function() { return jur_Quantifier_max(this); }, "$toString", function() { return jur_Quantifier_toString(this); }],
kr_IntProgression$Companion, 0, jl_Object, [], 4, 3, 0, ["$fromClosedRange", function(var_1, var_2, var_3) { return kr_IntProgression$Companion_fromClosedRange(this, var_1, var_2, var_3); }],
oktgg_GLTFSampler, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, 0, ["$read", function(var_1) { oktgg_GLTFSampler_read(this, var_1); }, "$getMinFilter", function() { return oktgg_GLTFSampler_getMinFilter(this); }, "$setMinFilter", function(var_1) { oktgg_GLTFSampler_setMinFilter(this, var_1); }, "$getMagFilter", function() { return oktgg_GLTFSampler_getMagFilter(this); }, "$setMagFilter", function(var_1) { oktgg_GLTFSampler_setMagFilter(this, var_1); }, "$getWrapS", function() { return oktgg_GLTFSampler_getWrapS(this);
}, "$setWrapS", function(var_1) { oktgg_GLTFSampler_setWrapS(this, var_1); }, "$getWrapT", function() { return oktgg_GLTFSampler_getWrapT(this); }, "$setWrapT", function(var_1) { oktgg_GLTFSampler_setWrapT(this, var_1); }],
oooic_Ctime, 0, oooic_Ctype, [], 0, 3, 0, 0,
oooic_Cstring, 0, oooic_Ctime, [], 0, 3, 0, 0,
oooic_Cstdlib, 0, oooic_Cstring, [], 0, 3, oooic_Cstdlib_$callClinit, 0,
oooic_Cstdio, 0, oooic_Cstdlib, [], 0, 3, oooic_Cstdio_$callClinit, 0,
oooic_Cstdarg, 0, oooic_Cstdio, [], 0, 3, 0, 0]);
$rt_metadata([oktgg_GLTFAnimationSampler, 0, jl_Object, [oktj_IJsonObjectIO], 4, 3, 0, ["$read", function(var_1) { oktgg_GLTFAnimationSampler_read(this, var_1); }, "$getInput0", function() { return oktgg_GLTFAnimationSampler_getInput(this); }, "$getInterpolation", function() { return oktgg_GLTFAnimationSampler_getInterpolation(this); }, "$setInterpolation", function(var_1) { oktgg_GLTFAnimationSampler_setInterpolation(this, var_1); }, "$getOutput0", function() { return oktgg_GLTFAnimationSampler_getOutput(this);
}],
oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData, 0, jl_Object, [], 0, 0, 0, ["$_OptimizeLocalContacts", function() { oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__OptimizeLocalContacts(this); }, "$_ProcessLocalContacts", function(var_1, var_2, var_3) { return oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__ProcessLocalContacts(this, var_1, var_2, var_3); }, "$_cldTestAxis", function(var_1, var_2, var_3, var_4, var_5, var_6) { return oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__cldTestAxis(this,
var_1, var_2, var_3, var_4, var_5, var_6); }, "$_cldTestCircleToEdgeAxis", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { return oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__cldTestCircleToEdgeAxis(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$_cldTestSeparatingAxes", function(var_1, var_2, var_3) { return oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__cldTestSeparatingAxes(this, var_1, var_2, var_3); }, "$_cldClipCylinderEdgeToTriangle", function(var_1,
var_2, var_3) { return oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__cldClipCylinderEdgeToTriangle(this, var_1, var_2, var_3); }, "$_cldClipCylinderToTriangle", function(var_1, var_2, var_3) { oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__cldClipCylinderToTriangle(this, var_1, var_2, var_3); }, "$TestOneTriangleVsCylinder", function(var_1, var_2, var_3, var_4) { oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData_TestOneTriangleVsCylinder(this, var_1, var_2, var_3, var_4); }, "$_InitCylinderTrimeshData",
function(var_1, var_2) { oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData__InitCylinderTrimeshData(this, var_1, var_2); }, "$TestCollisionForSingleTriangle", function(var_1, var_2, var_3, var_4) { return oooi_CollideCylinderTrimesh$sCylinderTrimeshColliderData_TestCollisionForSingleTriangle(this, var_1, var_2, var_3, var_4); }],
oktg_Scene$objectSorter$1, 0, jl_Object, [ju_Comparator], 4, 0, oktg_Scene$objectSorter$1_$callClinit, ["$compare5", function(var_1, var_2) { return oktg_Scene$objectSorter$1_compare(this, var_1, var_2); }, "$compare6", function(var_1, var_2) { return oktg_Scene$objectSorter$1_compare0(this, var_1, var_2); }],
oktf_IFS, 0, jl_Object, [], 3, 3, 0, 0,
oktt_TvmFS, 0, jl_Object, [oktf_IFS], 4, 3, 0, ["$file", function(var_1, var_2) { return oktt_TvmFS_file(this, var_1, var_2); }, "$internal", function(var_1) { return oktt_TvmFS_internal(this, var_1); }],
kt_DelimitedRangesSequence$iterator$1, 0, jl_Object, [ju_Iterator, kjim_KMappedMarker], 4, 3, 0, ["$calcNext", function() { kt_DelimitedRangesSequence$iterator$1_calcNext(this); }, "$next8", function() { return kt_DelimitedRangesSequence$iterator$1_next(this); }, "$next", function() { return kt_DelimitedRangesSequence$iterator$1_next0(this); }, "$hasNext", function() { return kt_DelimitedRangesSequence$iterator$1_hasNext(this); }],
oooig_GimGeometry$vec3f, 0, jl_Object, [], 0, 3, 0, 0,
jur_ReluctantQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_ReluctantQuantifierSet_matches(this, var_1, var_2, var_3); }],
oktt_TvmGL, 0, jl_Object, [oktg_IGL], 4, 3, 0, ["$getMainFrameBufferWidth0", function() { return oktt_TvmGL_getMainFrameBufferWidth(this); }, "$getMainFrameBufferHeight0", function() { return oktt_TvmGL_getMainFrameBufferHeight(this); }, "$getMainFrameBufferHandle0", function() { return oktt_TvmGL_getMainFrameBufferHandle(this); }, "$getGlesMajVer", function() { return oktt_TvmGL_getGlesMajVer(this); }, "$isGLES", function() { return oktt_TvmGL_isGLES(this); }, "$initGL0", function() { oktt_TvmGL_initGL(this);
}, "$isExtensionSupported0", function(var_1) { return oktt_TvmGL_isExtensionSupported(this, var_1); }, "$enableExtension", function(var_1) { return oktt_TvmGL_enableExtension(this, var_1); }, "$glCreateProgram0", function() { return oktt_TvmGL_glCreateProgram(this); }, "$glClear", function(var_1) { oktt_TvmGL_glClear(this, var_1); }, "$glClearColor", function(var_1, var_2, var_3, var_4) { oktt_TvmGL_glClearColor(this, var_1, var_2, var_3, var_4); }, "$glUseProgram0", function(var_1) { oktt_TvmGL_glUseProgram(this,
var_1); }, "$glCullFace0", function(var_1) { oktt_TvmGL_glCullFace(this, var_1); }, "$glActiveTexture0", function(var_1) { oktt_TvmGL_glActiveTexture(this, var_1); }, "$glDeleteTexture0", function(var_1) { oktt_TvmGL_glDeleteTexture(this, var_1); }, "$glDrawArrays0", function(var_1, var_2, var_3) { oktt_TvmGL_glDrawArrays(this, var_1, var_2, var_3); }, "$glEnable0", function(var_1) { oktt_TvmGL_glEnable(this, var_1); }, "$glDisable0", function(var_1) { oktt_TvmGL_glDisable(this, var_1); }, "$glLinkProgram0",
function(var_1) { oktt_TvmGL_glLinkProgram(this, var_1); }, "$glGenTexture", function() { return oktt_TvmGL_glGenTexture(this); }, "$glGetUniformLocation0", function(var_1, var_2) { return oktt_TvmGL_glGetUniformLocation(this, var_1, var_2); }, "$glBindTexture", function(var_1, var_2) { oktt_TvmGL_glBindTexture(this, var_1, var_2); }, "$glTexImage2D0", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { oktt_TvmGL_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8,
var_9); }, "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { oktt_TvmGL_glTexImage2D0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glFramebufferTexture2D0", function(var_1, var_2, var_3, var_4, var_5) { oktt_TvmGL_glFramebufferTexture2D(this, var_1, var_2, var_3, var_4, var_5); }, "$glGenRenderbuffer0", function() { return oktt_TvmGL_glGenRenderbuffer(this); }, "$glBindRenderbuffer0", function(var_1, var_2) { oktt_TvmGL_glBindRenderbuffer(this,
var_1, var_2); }, "$glDeleteRenderbuffer0", function(var_1) { oktt_TvmGL_glDeleteRenderbuffer(this, var_1); }, "$glFramebufferRenderbuffer0", function(var_1, var_2, var_3, var_4) { oktt_TvmGL_glFramebufferRenderbuffer(this, var_1, var_2, var_3, var_4); }, "$glRenderbufferStorage0", function(var_1, var_2, var_3, var_4) { oktt_TvmGL_glRenderbufferStorage(this, var_1, var_2, var_3, var_4); }, "$glCheckFramebufferStatus0", function(var_1) { return oktt_TvmGL_glCheckFramebufferStatus(this, var_1); }, "$glGenerateMipmap0",
function(var_1) { oktt_TvmGL_glGenerateMipmap(this, var_1); }, "$glTexParameterf", function(var_1, var_2, var_3) { oktt_TvmGL_glTexParameterf(this, var_1, var_2, var_3); }, "$glTexParameteri", function(var_1, var_2, var_3) { oktt_TvmGL_glTexParameteri(this, var_1, var_2, var_3); }, "$glGetProgramInfoLog0", function(var_1) { return oktt_TvmGL_glGetProgramInfoLog(this, var_1); }, "$glBindBuffer", function(var_1, var_2) { oktt_TvmGL_glBindBuffer(this, var_1, var_2); }, "$glGenBuffer", function() { return oktt_TvmGL_glGenBuffer(this);
}, "$glViewport0", function(var_1, var_2, var_3, var_4) { oktt_TvmGL_glViewport(this, var_1, var_2, var_3, var_4); }, "$glBufferData", function(var_1, var_2, var_3, var_4) { oktt_TvmGL_glBufferData(this, var_1, var_2, var_3, var_4); }, "$glBlendFunc0", function(var_1, var_2) { oktt_TvmGL_glBlendFunc(this, var_1, var_2); }, "$glGetIntegerv0", function(var_1, var_2) { oktt_TvmGL_glGetIntegerv(this, var_1, var_2); }, "$glBindFramebuffer0", function(var_1, var_2) { oktt_TvmGL_glBindFramebuffer(this, var_1, var_2);
}, "$glCompileShader0", function(var_1) { oktt_TvmGL_glCompileShader(this, var_1); }, "$glCreateShader0", function(var_1) { return oktt_TvmGL_glCreateShader(this, var_1); }, "$glDeleteFramebuffer0", function(var_1) { oktt_TvmGL_glDeleteFramebuffer(this, var_1); }, "$glDeleteProgram0", function(var_1) { oktt_TvmGL_glDeleteProgram(this, var_1); }, "$glDrawElements0", function(var_1, var_2, var_3, var_4) { oktt_TvmGL_glDrawElements(this, var_1, var_2, var_3, var_4); }, "$glGenFramebuffer0", function() { return oktt_TvmGL_glGenFramebuffer(this);
}, "$glDeleteShader0", function(var_1) { oktt_TvmGL_glDeleteShader(this, var_1); }, "$glDetachShader0", function(var_1, var_2) { oktt_TvmGL_glDetachShader(this, var_1, var_2); }, "$glEnableVertexAttribArray", function(var_1) { oktt_TvmGL_glEnableVertexAttribArray(this, var_1); }, "$glGetFloatv0", function(var_1, var_2) { oktt_TvmGL_glGetFloatv(this, var_1, var_2); }, "$uLoc", function(var_1) { return oktt_TvmGL_uLoc(this, var_1); }, "$glUniform1i0", function(var_1, var_2) { oktt_TvmGL_glUniform1i(this, var_1,
var_2); }, "$glUniform1f0", function(var_1, var_2) { oktt_TvmGL_glUniform1f(this, var_1, var_2); }, "$glUniform2f0", function(var_1, var_2, var_3) { oktt_TvmGL_glUniform2f(this, var_1, var_2, var_3); }, "$glUniform3f0", function(var_1, var_2, var_3, var_4) { oktt_TvmGL_glUniform3f(this, var_1, var_2, var_3, var_4); }, "$glUniform4f0", function(var_1, var_2, var_3, var_4, var_5) { oktt_TvmGL_glUniform4f(this, var_1, var_2, var_3, var_4, var_5); }, "$glUniform3fv0", function(var_1, var_2, var_3, var_4) { oktt_TvmGL_glUniform3fv(this,
var_1, var_2, var_3, var_4); }, "$glUniformMatrix4fv0", function(var_1, var_2, var_3, var_4, var_5) { oktt_TvmGL_glUniformMatrix4fv(this, var_1, var_2, var_3, var_4, var_5); }, "$glShaderSource0", function(var_1, var_2) { oktt_TvmGL_glShaderSource(this, var_1, var_2); }, "$glGetShaderiv0", function(var_1, var_2, var_3) { oktt_TvmGL_glGetShaderiv(this, var_1, var_2, var_3); }, "$glGetProgramiv0", function(var_1, var_2, var_3) { oktt_TvmGL_glGetProgramiv(this, var_1, var_2, var_3); }, "$glGetActiveUniform0", function(var_1,
var_2, var_3, var_4) { return oktt_TvmGL_glGetActiveUniform(this, var_1, var_2, var_3, var_4); }, "$glGetShaderInfoLog0", function(var_1) { return oktt_TvmGL_glGetShaderInfoLog(this, var_1); }, "$glAttachShader0", function(var_1, var_2) { oktt_TvmGL_glAttachShader(this, var_1, var_2); }, "$glGetActiveAttrib0", function(var_1, var_2, var_3, var_4) { return oktt_TvmGL_glGetActiveAttrib(this, var_1, var_2, var_3, var_4); }, "$glGetAttribLocation0", function(var_1, var_2) { return oktt_TvmGL_glGetAttribLocation(this,
var_1, var_2); }, "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { oktt_TvmGL_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$glDrawArraysInstanced0", function(var_1, var_2, var_3, var_4) { oktt_TvmGL_glDrawArraysInstanced(this, var_1, var_2, var_3, var_4); }, "$glDrawBuffers0", function(var_1, var_2) { oktt_TvmGL_glDrawBuffers(this, var_1, var_2); }, "$glDrawElementsInstanced0", function(var_1, var_2, var_3, var_4, var_5) { oktt_TvmGL_glDrawElementsInstanced(this,
var_1, var_2, var_3, var_4, var_5); }, "$glVertexAttribDivisor", function(var_1, var_2) { oktt_TvmGL_glVertexAttribDivisor(this, var_1, var_2); }, "$getMajVer", function() { return oktt_TvmGL_getMajVer(this); }],
ooo_DContactBuffer, 0, jl_Object, [jl_Iterable], 0, 3, 0, ["$get18", function(var_1) { return ooo_DContactBuffer_get(this, var_1); }, "$getGeomBuffer", function() { return ooo_DContactBuffer_getGeomBuffer(this); }],
oktgg_GLTFCamera$read$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFCamera$read$3_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTFCamera$read$3_invoke0(this, var_1); }],
oktgg_GLTFCamera$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFCamera$read$1_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_GLTFCamera$read$1_invoke0(this, var_1); }],
oktgg_GLTFCamera$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFCamera$read$2_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTFCamera$read$2_invoke0(this, var_1); }],
oktsg_OutputNode$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktgg_GLTFCamera$read$2$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFCamera$read$2$3_invoke(this, var_1); }, "$invoke15", function(var_1) { oktgg_GLTFCamera$read$2$3_invoke0(this, var_1); }],
oooig_GimGeometry$vec4f, 0, jl_Object, [], 0, 3, 0, 0,
jur_EOISet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_EOISet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_EOISet_hasConsumed(this, var_1); }],
oktgg_GLTFCamera$read$2$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFCamera$read$2$2_invoke(this, var_1); }, "$invoke15", function(var_1) { oktgg_GLTFCamera$read$2$2_invoke0(this, var_1); }],
oktgg_GLTFCamera$read$2$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFCamera$read$2$1_invoke(this, var_1); }, "$invoke15", function(var_1) { oktgg_GLTFCamera$read$2$1_invoke0(this, var_1); }],
oktt_TvmDATA, 0, jl_Object, [oktd_IData], 4, 3, 0, ["$getNullBuffer", function() { return oktt_TvmDATA_getNullBuffer(this); }, "$bytes0", function(var_1) { return oktt_TvmDATA_bytes(this, var_1); }, "$decodeBase64", function(var_1, var_2) { return oktt_TvmDATA_decodeBase64(this, var_1, var_2); }, "$decodeURI", function(var_1) { return oktt_TvmDATA_decodeURI(this, var_1); }],
kt_Regex$Companion, 0, jl_Object, [], 4, 3, 0, 0,
ji_InputStream, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0,
ji_FilterInputStream, 0, ji_InputStream, [], 0, 3, 0, ["$read0", function() { return ji_FilterInputStream_read(this); }, "$read1", function(var_1, var_2, var_3) { return ji_FilterInputStream_read0(this, var_1, var_2, var_3); }, "$skip0", function(var_1) { return ji_FilterInputStream_skip(this, var_1); }],
jnc_BufferUnderflowException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
oooi_CollideTrimeshTrimesh, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollideTrimeshTrimesh_dColliderFn(this, var_1, var_2, var_3, var_4); }, "$dCollideTTL", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollideTrimeshTrimesh_dCollideTTL(this, var_1, var_2, var_3, var_4, var_5); }],
oktu_IResourceLoader, 0, jl_Object, [], 3, 3, 0, 0,
oktu_ResourceLoader, 0, jl_Object, [oktu_IResourceLoader], 1, 3, 0, ["$setData", function(var_1) { oktu_ResourceLoader_setData(this, var_1); }],
oktgg_IGLTF, 0, jl_Object, [oktj_IJsonObjectIO], 3, 3, 0, 0,
oktgg_GLTF, 0, oktu_ResourceLoader, [oktgg_IGLTF], 0, 3, oktgg_GLTF_$callClinit, ["$getConf", function() { return oktgg_GLTF_getConf(this); }, "$setConf", function(var_1) { oktgg_GLTF_setConf(this, var_1); }, "$setGenerator", function(var_1) { oktgg_GLTF_setGenerator(this, var_1); }, "$setVersion", function(var_1) { oktgg_GLTF_setVersion(this, var_1); }, "$setCopyright", function(var_1) { oktgg_GLTF_setCopyright(this, var_1); }, "$setMinVersion", function(var_1) { oktgg_GLTF_setMinVersion(this, var_1); }, "$getObjects0",
function() { return oktgg_GLTF_getObjects(this); }, "$getObjects1", function() { return oktgg_GLTF_getObjects0(this); }, "$getBuffers", function() { return oktgg_GLTF_getBuffers(this); }, "$getBuffers0", function() { return oktgg_GLTF_getBuffers0(this); }, "$getBufferViews", function() { return oktgg_GLTF_getBufferViews(this); }, "$getBufferViews0", function() { return oktgg_GLTF_getBufferViews0(this); }, "$getAccessors0", function() { return oktgg_GLTF_getAccessors(this); }, "$getAccessors", function() { return oktgg_GLTF_getAccessors0(this);
}, "$getSamplers", function() { return oktgg_GLTF_getSamplers(this); }, "$getSamplers0", function() { return oktgg_GLTF_getSamplers0(this); }, "$getImages", function() { return oktgg_GLTF_getImages(this); }, "$getImages0", function() { return oktgg_GLTF_getImages0(this); }, "$getTextures0", function() { return oktgg_GLTF_getTextures(this); }, "$getTextures", function() { return oktgg_GLTF_getTextures0(this); }, "$getMaterials", function() { return oktgg_GLTF_getMaterials(this); }, "$getMeshes", function() {
return oktgg_GLTF_getMeshes(this); }, "$getMeshes1", function() { return oktgg_GLTF_getMeshes0(this); }, "$getNodes", function() { return oktgg_GLTF_getNodes(this); }, "$getNodes1", function() { return oktgg_GLTF_getNodes0(this); }, "$getSkins0", function() { return oktgg_GLTF_getSkins(this); }, "$getSkins", function() { return oktgg_GLTF_getSkins0(this); }, "$getAnimations", function() { return oktgg_GLTF_getAnimations(this); }, "$getAnimations0", function() { return oktgg_GLTF_getAnimations0(this); }, "$getScenes",
function() { return oktgg_GLTF_getScenes(this); }, "$getCameras0", function() { return oktgg_GLTF_getCameras(this); }, "$getCameras", function() { return oktgg_GLTF_getCameras0(this); }, "$getScene", function() { return oktgg_GLTF_getScene(this); }, "$setScene", function(var_1) { oktgg_GLTF_setScene(this, var_1); }, "$setMainSceneIndex", function(var_1) { oktgg_GLTF_setMainSceneIndex(this, var_1); }, "$isLoading0", function() { return oktgg_GLTF_isLoading(this); }, "$setLoading", function(var_1) { oktgg_GLTF_setLoading(this,
var_1); }, "$setLoaded", function(var_1) { oktgg_GLTF_setLoaded(this, var_1); }, "$setName", function(var_1) { oktgg_GLTF_setName(this, var_1); }, "$createMaterial", function() { return oktgg_GLTF_createMaterial(this); }, "$load2", function(var_1) { oktgg_GLTF_load(this, var_1); }, "$createArrayElement", function(var_1, var_2) { return oktgg_GLTF_createArrayElement(this, var_1, var_2); }, "$read", function(var_1) { oktgg_GLTF_read(this, var_1); }, "$glCalls", function() { oktgg_GLTF_glCalls(this); }, "$load3",
function(var_1) { return oktgg_GLTF_load0(this, var_1); }, "$destroy0", function() { oktgg_GLTF_destroy(this); }, "$getDirectory", function() { return oktgg_GLTF_getDirectory(this); }],
oktsg_VertexNode, 0, oktsg_ShaderNode, [], 4, 3, oktsg_VertexNode_$callClinit, ["$setAPositionName", function(var_1) { oktsg_VertexNode_setAPositionName(this, var_1); }, "$setANormalName", function(var_1) { oktsg_VertexNode_setANormalName(this, var_1); }, "$setATangentName", function(var_1) { oktsg_VertexNode_setATangentName(this, var_1); }, "$setABonesName", function(var_1) { oktsg_VertexNode_setABonesName(this, var_1); }, "$setABoneWeightsName", function(var_1) { oktsg_VertexNode_setABoneWeightsName(this,
var_1); }, "$getPosition3", function() { return oktsg_VertexNode_getPosition(this); }, "$getNormal0", function() { return oktsg_VertexNode_getNormal(this); }, "$getTbn", function() { return oktsg_VertexNode_getTbn(this); }, "$getUBoneMatricesName", function() { return oktsg_VertexNode_getUBoneMatricesName(this); }, "$getUWorldMatrix", function() { return oktsg_VertexNode_getUWorldMatrix(this); }, "$getHasBones", function() { return oktsg_VertexNode_getHasBones(this); }, "$getUid", function() { return oktsg_VertexNode_getUid(this);
}, "$shaderCompiled", function() { oktsg_VertexNode_shaderCompiled(this); }, "$boneInfluenceCode", function(var_1, var_2, var_3, var_4) { return oktsg_VertexNode_boneInfluenceCode(this, var_1, var_2, var_3, var_4); }, "$skinningSetCode", function(var_1, var_2, var_3, var_4) { oktsg_VertexNode_skinningSetCode(this, var_1, var_2, var_3, var_4); }, "$prepareObjectData0", function(var_1) { oktsg_VertexNode_prepareObjectData(this, var_1); }, "$mat4ToMat3", function(var_1) { return oktsg_VertexNode_mat4ToMat3(this,
var_1); }, "$executionVert", function(var_1) { oktsg_VertexNode_executionVert(this, var_1); }, "$declarationFrag", function(var_1) { oktsg_VertexNode_declarationFrag(this, var_1); }, "$declarationVert", function(var_1) { oktsg_VertexNode_declarationVert(this, var_1); }, "$setMaxBones", function(var_1) { oktsg_VertexNode_setMaxBones(this, var_1); }, "$setWorldTransformType", function(var_1) { oktsg_VertexNode_setWorldTransformType(this, var_1); }],
ju_RandomAccess, 0, jl_Object, [], 3, 3, 0, 0,
ju_ArrayList, 0, ju_AbstractList, [jl_Cloneable, ji_Serializable, ju_RandomAccess], 0, 3, 0, ["$ensureCapacity", function(var_1) { ju_ArrayList_ensureCapacity(this, var_1); }, "$get1", function(var_1) { return ju_ArrayList_get(this, var_1); }, "$size", function() { return ju_ArrayList_size(this); }, "$set38", function(var_1, var_2) { return ju_ArrayList_set(this, var_1, var_2); }, "$add1", function(var_1) { return ju_ArrayList_add(this, var_1); }, "$add2", function(var_1, var_2) { ju_ArrayList_add0(this, var_1,
var_2); }, "$remove", function(var_1) { return ju_ArrayList_remove(this, var_1); }, "$remove1", function(var_1) { return ju_ArrayList_remove0(this, var_1); }, "$clear", function() { ju_ArrayList_clear(this); }, "$checkIndex", function(var_1) { ju_ArrayList_checkIndex(this, var_1); }, "$checkIndexForAdd", function(var_1) { ju_ArrayList_checkIndexForAdd(this, var_1); }],
oktgg_GLTFArray, 0, ju_ArrayList, [oktgg_IGLTFArray], 4, 3, 0, ["$getReady", function() { return oktgg_GLTFArray_getReady(this); }, "$getRequests", function() { return oktgg_GLTFArray_getRequests(this); }, "$getName", function() { return oktgg_GLTFArray_getName(this); }, "$getSize", function() { return oktgg_GLTFArray_getSize(this); }, "$size", function() { return oktgg_GLTFArray_size(this); }, "$getOrWait0", function(var_1, var_2) { oktgg_GLTFArray_getOrWait(this, var_1, var_2); }, "$ready", function(var_1)
{ oktgg_GLTFArray_ready(this, var_1); }],
oktgg_GLTFAnimation$read$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAnimation$read$1$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTFAnimation$read$1$1_invoke0(this, var_1); }],
ooo_DMassC, 0, jl_Object, [], 3, 3, 0, 0,
oooi_DxCapsule$CollideCapsuleSphere, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideCapsuleSphere", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxCapsule$CollideCapsuleSphere_dCollideCapsuleSphere(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxCapsule$CollideCapsuleSphere_dColliderFn(this, var_1, var_2, var_3, var_4); }],
okttp_TrimeshShapeTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return okttp_TrimeshShapeTest$testMain$1_invoke(this); }, "$invoke2", function() { okttp_TrimeshShapeTest$testMain$1_invoke0(this); }],
ju_LinkedList$Entry, 0, jl_Object, [], 0, 0, 0, 0,
oktm_IMesh, 0, jl_Object, [], 3, 3, oktm_IMesh_$callClinit, 0,
oktm_Mesh, 0, jl_Object, [oktm_IMesh], 4, 3, 0, ["$setName", function(var_1) { oktm_Mesh_setName(this, var_1); }, "$getVertices", function() { return oktm_Mesh_getVertices(this); }, "$setVertices", function(var_1) { oktm_Mesh_setVertices(this, var_1); }, "$getIndices", function() { return oktm_Mesh_getIndices(this); }, "$setIndices", function(var_1) { oktm_Mesh_setIndices(this, var_1); }, "$getMaterial", function() { return oktm_Mesh_getMaterial(this); }, "$setMaterial", function(var_1) { oktm_Mesh_setMaterial(this,
var_1); }, "$getInstances", function() { return oktm_Mesh_getInstances(this); }, "$setInstances", function(var_1) { oktm_Mesh_setInstances(this, var_1); }, "$getPrimitiveType", function() { return oktm_Mesh_getPrimitiveType(this); }, "$setPrimitiveType", function(var_1) { oktm_Mesh_setPrimitiveType(this, var_1); }, "$bind5", function(var_1) { oktm_Mesh_bind(this, var_1); }, "$render8", function(var_1, var_2, var_3, var_4, var_5) { oktm_Mesh_render(this, var_1, var_2, var_3, var_4, var_5); }],
oktsg_ShaderNode$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktm_IVertexBuffer$Companion$Build$1, 0, kji_Lambda, [kjf_Function4], 4, 0, oktm_IVertexBuffer$Companion$Build$1_$callClinit, ["$invoke38", function(var_1, var_2, var_3, var_4) { return oktm_IVertexBuffer$Companion$Build$1_invoke(this, var_1, var_2, var_3, var_4); }, "$invoke29", function(var_1, var_2, var_3, var_4) { return oktm_IVertexBuffer$Companion$Build$1_invoke0(this, var_1, var_2, var_3, var_4); }],
okta_AL, 0, jl_Object, [okta_IAL], 4, 3, okta_AL_$callClinit, ["$setApi9", function(var_1) { okta_AL_setApi(this, var_1); }, "$newSound", function(var_1) { return okta_AL_newSound(this, var_1); }],
oooig_GimTrimeshCapsuleCollision$GIM_CAPSULE_DATA, 0, jl_Object, [], 0, 3, 0, 0,
oktgg_GLTFNode$read$6, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$6_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTFNode$read$6_invoke0(this, var_1); }],
oktgg_GLTFNode$read$7, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$7_invoke(this, var_1); }, "$invoke15", function(var_1) { oktgg_GLTFNode$read$7_invoke0(this, var_1); }],
jur_HangulDecomposedCharSet, 0, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_HangulDecomposedCharSet_setNext(this, var_1); }, "$getDecomposedChar", function() { return jur_HangulDecomposedCharSet_getDecomposedChar(this); }, "$matches", function(var_1, var_2, var_3) { return jur_HangulDecomposedCharSet_matches(this, var_1, var_2, var_3); }, "$first", function(var_1) { return jur_HangulDecomposedCharSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_HangulDecomposedCharSet_hasConsumed(this,
var_1); }],
oktu_AsyncArrayList$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktgg_GLTFNode$read$4, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$4_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTFNode$read$4_invoke0(this, var_1); }],
oktgg_GLTFNode$read$5, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$5_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTFNode$read$5_invoke0(this, var_1); }]]);
$rt_metadata([oktgg_GLTFNode$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$2_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFNode$read$2_invoke0(this, var_1); }],
oktgg_GLTFNode$read$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$3_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTFNode$read$3_invoke0(this, var_1); }],
oktp_IPhys, 0, jl_Object, [], 3, 3, 0, 0,
oktpo_OdePhys, 0, jl_Object, [oktp_IPhys], 4, 3, 0, ["$createWorld0", function() { return oktpo_OdePhys_createWorld(this); }],
oktgg_GLTFNode$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$1_invoke(this, var_1); }, "$invoke5", function(var_1) { oktgg_GLTFNode$read$1_invoke0(this, var_1); }],
oktgc_ICamera$Companion, 0, jl_Object, [], 4, 3, oktgc_ICamera$Companion_$callClinit, ["$getDefault2", function() { return oktgc_ICamera$Companion_getDefault(this); }],
oom_DVector3I, 0, jl_Object, [], 3, 0, 0, 0,
oom_DVector3View, 0, jl_Object, [oom_DVector3I], 1, 3, 0, 0,
oom_DMatrix3$DVector3ColView, 0, oom_DVector3View, [], 0, 3, 0, ["$get01", function() { return oom_DMatrix3$DVector3ColView_get0(this); }, "$get10", function() { return oom_DMatrix3$DVector3ColView_get1(this); }, "$get20", function() { return oom_DMatrix3$DVector3ColView_get2(this); }],
kji_Intrinsics, "Intrinsics", 22, jl_Object, [], 0, 3, 0, 0,
oktsg_TextureNode, 0, oktsg_ShaderNode, [], 4, 3, oktsg_TextureNode_$callClinit, ["$getUv0", function() { return oktsg_TextureNode_getUv(this); }, "$getColor", function() { return oktsg_TextureNode_getColor(this); }, "$prepareToBuild", function() { oktsg_TextureNode_prepareToBuild(this); }, "$shaderCompiled", function() { oktsg_TextureNode_shaderCompiled(this); }, "$prepareToDrawMesh0", function(var_1) { oktsg_TextureNode_prepareToDrawMesh(this, var_1); }, "$declarationFrag", function(var_1) { oktsg_TextureNode_declarationFrag(this,
var_1); }, "$getSamplerAccessCode", function(var_1) { return oktsg_TextureNode_getSamplerAccessCode(this, var_1); }, "$getCoordinates", function(var_1) { return oktsg_TextureNode_getCoordinates(this, var_1); }, "$executionFrag", function(var_1) { oktsg_TextureNode_executionFrag(this, var_1); }],
oooi_DxQuickStep$dxQuickStepperStage0Outputs, 0, jl_Object, [], 0, 0, 0, 0,
oooip_DxSingleIslandCallContext, 0, jl_Object, [], 0, 3, 0, ["$AssignIslandSearchProgress", function(var_1) { oooip_DxSingleIslandCallContext_AssignIslandSearchProgress(this, var_1); }, "$AssignIslandSelection", function(var_1, var_2, var_3, var_4, var_5, var_6) { oooip_DxSingleIslandCallContext_AssignIslandSelection(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$GetSelectedIslandBodiesA", function() { return oooip_DxSingleIslandCallContext_GetSelectedIslandBodiesA(this); }, "$GetSelectedIslandBodiesEndP",
function() { return oooip_DxSingleIslandCallContext_GetSelectedIslandBodiesEndP(this); }, "$GetSelectedIslandJointsA", function() { return oooip_DxSingleIslandCallContext_GetSelectedIslandJointsA(this); }, "$GetSelectedIslandJointsEndP", function() { return oooip_DxSingleIslandCallContext_GetSelectedIslandJointsEndP(this); }, "$RestoreSavedMemArenaStateForStepper", function() { oooip_DxSingleIslandCallContext_RestoreSavedMemArenaStateForStepper(this); }],
oktp_ISphereShape, 0, jl_Object, [oktp_IShape], 3, 3, 0, 0,
oktpo_OdeSphereShape, 0, oktpo_OdeGeom, [oktp_ISphereShape], 4, 3, 0, ["$getGeom", function() { return oktpo_OdeSphereShape_getGeom(this); }, "$getRadius0", function() { return oktpo_OdeSphereShape_getRadius(this); }, "$getFriction", function() { return oktpo_OdeSphereShape_getFriction(this); }],
jm_Multiplication, 0, jl_Object, [], 0, 0, jm_Multiplication_$callClinit, 0,
oktgg_GLTFNode$read$8, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$8_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFNode$read$8_invoke0(this, var_1); }],
oktgg_GLTFNode$read$9, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$9_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFNode$read$9_invoke0(this, var_1); }],
oooi_DxRay$CollideRayCapsule, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideRayCapsule", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxRay$CollideRayCapsule_dCollideRayCapsule(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxRay$CollideRayCapsule_dColliderFn(this, var_1, var_2, var_3, var_4); }],
ju_LinkedHashMap$ValueIterator, 0, ju_LinkedHashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, ["$next", function() { return ju_LinkedHashMap$ValueIterator_next(this); }],
oktp_ICylinderShape, 0, jl_Object, [oktp_IShape], 3, 3, 0, 0,
oktpo_OdeCylinderShape, 0, oktpo_OdeGeom, [oktp_ICylinderShape], 4, 3, 0, 0,
oktt_GLTFLoaderAnimTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktt_GLTFLoaderAnimTest_getName(this); }, "$testMain", function() { oktt_GLTFLoaderAnimTest_testMain(this); }],
oktgg_GLTFImage$read$5$1, 0, kji_Lambda, [kjf_Function2], 4, 0, 0, ["$invoke11", function(var_1, var_2) { return oktgg_GLTFImage$read$5$1_invoke(this, var_1, var_2); }, "$invoke9", function(var_1, var_2) { oktgg_GLTFImage$read$5$1_invoke0(this, var_1, var_2); }],
okttp_SphereShapeTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return okttp_SphereShapeTest_getName(this); }, "$testMain", function() { okttp_SphereShapeTest_testMain(this); }],
jur_IntHash, 0, jl_Object, [], 0, 0, 0, 0,
oktm_IIndexBufferObject, 0, jl_Object, [], 3, 3, oktm_IIndexBufferObject_$callClinit, 0,
jur_AltQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_AltQuantifierSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_AltQuantifierSet_setNext(this, var_1); }],
jur_ReluctantAltQuantifierSet, 0, jur_AltQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_ReluctantAltQuantifierSet_matches(this, var_1, var_2, var_3); }],
jl_UnsupportedOperationException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
cgcj_JsonException, 0, jl_Exception, [], 0, 3, 0, 0,
jl_NumberFormatException, "NumberFormatException", 10, jl_IllegalArgumentException, [], 0, 3, 0, 0,
oooi_CollideBoxPlane, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dCollideBoxPlane", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollideBoxPlane_dCollideBoxPlane(this, var_1, var_2, var_3, var_4, var_5); }, "$FOO2", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { oooi_CollideBoxPlane_FOO2(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$BAR2", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15,
var_16) { return oooi_CollideBoxPlane_BAR2(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16); }, "$done", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { oooi_CollideBoxPlane_done(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollideBoxPlane_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktt_TvmGL$TextureWrap, 0, oktt_TvmGL$GLObject, [], 4, 3, 0, ["$getGl5", function() { return oktt_TvmGL$TextureWrap_getGl(this); }, "$getGl7", function() { return oktt_TvmGL$TextureWrap_getGl0(this); }],
jur_IntArrHash, 0, jl_Object, [], 0, 0, 0, 0,
oktsg_GLSLVec4Inline, 0, oktsg_ShaderData, [], 4, 3, 0, ["$getInlineCode", function() { return oktsg_GLSLVec4Inline_getInlineCode(this); }, "$getType", function() { return oktsg_GLSLVec4Inline_getType(this); }, "$getScope", function() { return oktsg_GLSLVec4Inline_getScope(this); }, "$asFloat", function() { return oktsg_GLSLVec4Inline_asFloat(this); }, "$asVec2", function() { return oktsg_GLSLVec4Inline_asVec2(this); }, "$asVec3", function() { return oktsg_GLSLVec4Inline_asVec3(this); }, "$asVec4", function()
{ return oktsg_GLSLVec4Inline_asVec4(this); }, "$getName", function() { return oktsg_GLSLVec4Inline_getName(this); }],
oktt_TvmAL, 0, jl_Object, [okta_IAL], 4, 3, 0, ["$getContext", function() { return oktt_TvmAL_getContext(this); }, "$newSound", function(var_1) { return oktt_TvmAL_newSound(this, var_1); }],
oktgg_GLTFBufferView, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, 0, ["$read", function(var_1) { oktgg_GLTFBufferView_read(this, var_1); }, "$getGltf0", function() { return oktgg_GLTFBufferView_getGltf(this); }, "$getElementIndex", function() { return oktgg_GLTFBufferView_getElementIndex(this); }, "$getBuffer", function() { return oktgg_GLTFBufferView_getBuffer(this); }, "$getByteLength", function() { return oktgg_GLTFBufferView_getByteLength(this); }, "$getByteOffset", function() { return oktgg_GLTFBufferView_getByteOffset(this);
}, "$setByteOffset", function(var_1) { oktgg_GLTFBufferView_setByteOffset(this, var_1); }, "$getByteStride", function() { return oktgg_GLTFBufferView_getByteStride(this); }, "$setByteStride", function(var_1) { oktgg_GLTFBufferView_setByteStride(this, var_1); }, "$setTarget", function(var_1) { oktgg_GLTFBufferView_setTarget(this, var_1); }],
oktm_IMesh$Companion, 0, jl_Object, [], 4, 3, oktm_IMesh$Companion_$callClinit, ["$getAutoBind", function() { return oktm_IMesh$Companion_getAutoBind(this); }, "$getBuild", function() { return oktm_IMesh$Companion_getBuild(this); }],
oti_AsyncCallback, 0, jl_Object, [], 3, 3, 0, 0,
otpp_AsyncCallbackWrapper, 0, jl_Object, [oti_AsyncCallback], 0, 0, 0, ["$complete", function(var_1) { otpp_AsyncCallbackWrapper_complete(this, var_1); }, "$error", function(var_1) { otpp_AsyncCallbackWrapper_error(this, var_1); }],
okti_IImg$load$1, 0, kji_Lambda, [kjf_Function2], 4, 0, okti_IImg$load$1_$callClinit, ["$invoke11", function(var_1, var_2) { return okti_IImg$load$1_invoke(this, var_1, var_2); }, "$invoke9", function(var_1, var_2) { okti_IImg$load$1_invoke0(this, var_1, var_2); }],
oktpo_BodyContactPair, 0, jl_Object, [], 4, 3, 0, ["$getA", function() { return oktpo_BodyContactPair_getA(this); }, "$setA1", function(var_1) { oktpo_BodyContactPair_setA(this, var_1); }, "$getB", function() { return oktpo_BodyContactPair_getB(this); }, "$setB1", function(var_1) { oktpo_BodyContactPair_setB(this, var_1); }, "$getDepth", function() { return oktpo_BodyContactPair_getDepth(this); }, "$setDepth", function(var_1) { oktpo_BodyContactPair_setDepth(this, var_1); }, "$getLifeTime", function() { return oktpo_BodyContactPair_getLifeTime(this);
}, "$setLifeTime", function(var_1) { oktpo_BodyContactPair_setLifeTime(this, var_1); }, "$equals0", function(var_1) { return oktpo_BodyContactPair_equals(this, var_1); }, "$hashCode", function() { return oktpo_BodyContactPair_hashCode(this); }],
oktts_SSAOBaseTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktts_SSAOBaseTest$testMain$1_invoke(this); }, "$invoke2", function() { oktts_SSAOBaseTest$testMain$1_invoke0(this); }],
kr_IntProgression, 0, jl_Object, [jl_Iterable, kjim_KMappedMarker], 0, 3, kr_IntProgression_$callClinit, ["$getFirst", function() { return kr_IntProgression_getFirst(this); }, "$getLast0", function() { return kr_IntProgression_getLast(this); }, "$getStep", function() { return kr_IntProgression_getStep(this); }],
kr_IntRange, 0, kr_IntProgression, [kr_ClosedRange], 4, 3, kr_IntRange_$callClinit, ["$getStart0", function() { return kr_IntRange_getStart(this); }, "$getEndInclusive", function() { return kr_IntRange_getEndInclusive(this); }],
oooicj_IntArray, 0, jl_Object, [], 0, 3, 0, ["$at2", function(var_1) { return oooicj_IntArray_at(this, var_1); }, "$inc", function(var_1) { oooicj_IntArray_inc(this, var_1); }],
oooic_Csetjmp, 0, oooic_Cstdarg, [], 0, 3, 0, 0,
oooic_Cmath, 0, oooic_Csetjmp, [], 0, 3, 0, 0,
oooic_C_All, 0, oooic_Cmath, [], 0, 3, 0, 0]);
$rt_metadata([ooo_DHeightfieldData, 0, jl_Object, [], 3, 3, 0, 0,
oktg_World, 0, jl_Object, [oktg_IWorld], 4, 3, 0, ["$getAmbientColor", function() { return oktg_World_getAmbientColor(this); }, "$getExposure", function() { return oktg_World_getExposure(this); }],
okttp_BoxShapeTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return okttp_BoxShapeTest$testMain$1_invoke(this); }, "$invoke2", function() { okttp_BoxShapeTest$testMain$1_invoke0(this); }],
oooi_DxSphere$CollideSphereSphere, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideSphereSphere", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxSphere$CollideSphereSphere_dCollideSphereSphere(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxSphere$CollideSphereSphere_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oooi_CollisionLibccd$CollideConvexCapsuleCCD, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollisionLibccd$CollideConvexCapsuleCCD_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktpo_IOdeGeom$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oooi_DxPlane, 0, oooi_DxGeom, [ooo_DPlane], 0, 3, 0, 0,
jur_UMultiLineEOLSet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_UMultiLineEOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_UMultiLineEOLSet_hasConsumed(this, var_1); }],
kji_Ref$FloatRef, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0,
oktsp_SSAO$Companion, 0, jl_Object, [], 4, 3, 0, ["$ssaoCode", function(var_1) { return oktsp_SSAO$Companion_ssaoCode(this, var_1); }],
ooo_DContact, 0, jl_Object, [], 0, 3, 0, ["$getContactGeom", function() { return ooo_DContact_getContactGeom(this); }],
oooig_GimBufferArrayFloat$GIM_PROCESS_BUFFER_ARRAY_FN, 0, jl_Object, [], 3, 3, 0, 0,
oooig_GimTrimesh$1, 0, jl_Object, [oooig_GimBufferArrayFloat$GIM_PROCESS_BUFFER_ARRAY_FN], 0, 0, 0, ["$run0", function(var_1, var_2, var_3) { oooig_GimTrimesh$1_run(this, var_1, var_2, var_3); }],
okttsg_GBufferTest$testMain$1$2, "GBufferTest$testMain$1$2", 16, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return okttsg_GBufferTest$testMain$1$2_invoke(this, var_1); }, "$invoke3", function(var_1) { okttsg_GBufferTest$testMain$1$2_invoke0(this, var_1); }],
okttsg_GBufferTest$testMain$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return okttsg_GBufferTest$testMain$1$1_invoke(this, var_1); }, "$invoke8", function(var_1) { okttsg_GBufferTest$testMain$1$1_invoke0(this, var_1); }],
okttsg_GBufferTest$testMain$1$4, "GBufferTest$testMain$1$4", 16, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return okttsg_GBufferTest$testMain$1$4_invoke(this, var_1); }, "$invoke3", function(var_1) { okttsg_GBufferTest$testMain$1$4_invoke0(this, var_1); }],
okttsg_GBufferTest$testMain$1$3, "GBufferTest$testMain$1$3", 16, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return okttsg_GBufferTest$testMain$1$3_invoke(this, var_1); }, "$invoke3", function(var_1) { okttsg_GBufferTest$testMain$1$3_invoke0(this, var_1); }],
okttsg_GBufferTest$testMain$1$5, "GBufferTest$testMain$1$5", 16, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return okttsg_GBufferTest$testMain$1$5_invoke(this, var_1); }, "$invoke3", function(var_1) { okttsg_GBufferTest$testMain$1$5_invoke0(this, var_1); }],
jl_ConsoleOutputStreamStderr, 0, ji_OutputStream, [], 0, 0, 0, ["$write", function(var_1) { jl_ConsoleOutputStreamStderr_write(this, var_1); }],
oktmb_BoxMeshBuilder, 0, oktmb_MeshBuilder, [], 4, 3, oktmb_BoxMeshBuilder_$callClinit, ["$build", function(var_1) { return oktmb_BoxMeshBuilder_build(this, var_1); }, "$putSide", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16) { oktmb_BoxMeshBuilder_putSide(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16); }, "$putVertex", function(var_1, var_2, var_3, var_4,
var_5, var_6, var_7, var_8, var_9) { oktmb_BoxMeshBuilder_putVertex(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$getXSize", function() { return oktmb_BoxMeshBuilder_getXSize(this); }, "$setXSize", function(var_1) { oktmb_BoxMeshBuilder_setXSize(this, var_1); }, "$getYSize", function() { return oktmb_BoxMeshBuilder_getYSize(this); }, "$setYSize", function(var_1) { oktmb_BoxMeshBuilder_setYSize(this, var_1); }, "$getZSize", function() { return oktmb_BoxMeshBuilder_getZSize(this);
}, "$setZSize", function(var_1) { oktmb_BoxMeshBuilder_setZSize(this, var_1); }],
oktd_IDataArray$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
otjb_StorageProvider, 0, jl_Object, [], 3, 3, 0, 0,
oktgn_IDelegateTransformNode$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
jur_AbstractCharClass$LazyCntrl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyCntrl_computeValue(this); }],
okttsg_EmissionBloomTest$testMain$1, 0, kji_Lambda, [kjf_Function1], 4, 0, okttsg_EmissionBloomTest$testMain$1_$callClinit, ["$invoke1", function(var_1) { return okttsg_EmissionBloomTest$testMain$1_invoke(this, var_1); }, "$invoke", function(var_1) { okttsg_EmissionBloomTest$testMain$1_invoke0(this, var_1); }],
oktgg_GLTF$read$3$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$3$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTF$read$3$1_invoke0(this, var_1); }],
jnci_BufferedEncoder$Controller, 0, jl_Object, [], 0, 3, 0, ["$hasMoreInput", function() { return jnci_BufferedEncoder$Controller_hasMoreInput(this); }, "$hasMoreOutput", function(var_1) { return jnci_BufferedEncoder$Controller_hasMoreOutput(this, var_1); }, "$setInPosition", function(var_1) { jnci_BufferedEncoder$Controller_setInPosition(this, var_1); }, "$setOutPosition", function(var_1) { jnci_BufferedEncoder$Controller_setOutPosition(this, var_1); }],
oooig_GimRadixSort$GimExchangeMacro, 0, jl_Object, [], 3, 0, 0, 0,
oktg_IArmature$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktp_IRigidBody, 0, jl_Object, [oktp_IOverObject], 3, 3, 0, 0,
okti_IKB$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
okts_Shader$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oooi_DxQuickStep$IndexError, 0, jl_Object, [], 0, 0, 0, 0,
oktsg_AttributeNode, 0, oktsg_ShaderNode, [], 4, 3, oktsg_AttributeNode_$callClinit, 0,
jur_AbstractCharClass$LazyNonWord, 0, jur_AbstractCharClass$LazyWord, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyNonWord_computeValue(this); }],
jur_CISequenceSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_CISequenceSet_accepts(this, var_1, var_2); }],
oooig_GimBufferArrayInt, 0, jl_Object, [oooig_GimConstants], 0, 3, 0, ["$GIM_BUFFER_ARRAY_POINTER0", function(var_1) { return oooig_GimBufferArrayInt_GIM_BUFFER_ARRAY_POINTER(this, var_1); }, "$GIM_BUFFER_ARRAY_DESTROY", function() { oooig_GimBufferArrayInt_GIM_BUFFER_ARRAY_DESTROY(this); }, "$getElementCount", function() { return oooig_GimBufferArrayInt_getElementCount(this); }],
oktgg_IGLTFMaterial$read$5$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$5$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_IGLTFMaterial$read$5$1_invoke0(this, var_1); }],
oktgg_IGLTFMaterial$read$5$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$5$2_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_IGLTFMaterial$read$5$2_invoke0(this, var_1); }],
oktgg_IGLTFMaterial$read$5$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$5$3_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_IGLTFMaterial$read$5$3_invoke0(this, var_1); }],
oktgg_IGLTFMaterial$read$5$4, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$5$4_invoke(this, var_1); }, "$invoke15", function(var_1) { oktgg_IGLTFMaterial$read$5$4_invoke0(this, var_1); }],
oktgg_IGLTFMaterial$read$5$5, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$5$5_invoke(this, var_1); }, "$invoke15", function(var_1) { oktgg_IGLTFMaterial$read$5$5_invoke0(this, var_1); }],
oktm_IMesh$Companion$Build$1, 0, kji_Lambda, [kjf_Function0], 4, 0, oktm_IMesh$Companion$Build$1_$callClinit, ["$invoke6", function() { return oktm_IMesh$Companion$Build$1_invoke(this); }, "$invoke30", function() { return oktm_IMesh$Companion$Build$1_invoke0(this); }],
okttsg_MotionBlurTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return okttsg_MotionBlurTest_getName(this); }, "$testMain", function() { okttsg_MotionBlurTest_testMain(this); }],
oktsg_CameraDataNode, 0, oktsg_ShaderNode, [], 4, 3, oktsg_CameraDataNode_$callClinit, ["$getVertexPosition", function() { return oktsg_CameraDataNode_getVertexPosition(this); }, "$getViewProjectionMatrix0", function() { return oktsg_CameraDataNode_getViewProjectionMatrix(this); }, "$getPreviousViewProjectionMatrix", function() { return oktsg_CameraDataNode_getPreviousViewProjectionMatrix(this); }, "$getNormalizedViewVector", function() { return oktsg_CameraDataNode_getNormalizedViewVector(this); }, "$getClipSpacePosition",
function() { return oktsg_CameraDataNode_getClipSpacePosition(this); }, "$getViewSpacePosition", function() { return oktsg_CameraDataNode_getViewSpacePosition(this); }, "$prepareToDrawScene", function(var_1) { oktsg_CameraDataNode_prepareToDrawScene(this, var_1); }, "$executionFrag", function(var_1) { oktsg_CameraDataNode_executionFrag(this, var_1); }, "$executionVert", function(var_1) { oktsg_CameraDataNode_executionVert(this, var_1); }, "$declarationVert", function(var_1) { oktsg_CameraDataNode_declarationVert(this,
var_1); }, "$declarationFrag", function(var_1) { oktsg_CameraDataNode_declarationFrag(this, var_1); }],
oktt_TvmGL$frameBuffers$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktt_TvmGL$frameBuffers$1_$callClinit, ["$invoke1", function(var_1) { return oktt_TvmGL$frameBuffers$1_invoke(this, var_1); }, "$invoke31", function(var_1) { return oktt_TvmGL$frameBuffers$1_invoke0(this, var_1); }],
oktgc_ICamera$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktd_IShortData$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oooil_CCDVec3, 0, jl_Object, [], 0, 3, oooil_CCDVec3_$callClinit, 0,
oktgg_GLTFMesh, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, 0, ["$setName", function(var_1) { oktgg_GLTFMesh_setName(this, var_1); }, "$getPrimitives", function() { return oktgg_GLTFMesh_getPrimitives(this); }, "$read", function(var_1) { oktgg_GLTFMesh_read(this, var_1); }, "$getGltf0", function() { return oktgg_GLTFMesh_getGltf(this); }, "$getElementIndex", function() { return oktgg_GLTFMesh_getElementIndex(this); }]]);
$rt_metadata([jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierPart$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyDigit_computeValue(this); }],
jur_AbstractCharClass$LazyJavaLetter, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaLetter_computeValue(this); }],
jur_AheadFSet, 0, jur_FSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_AheadFSet_matches(this, var_1, var_2, var_3); }],
oktgg_GLTFNode$read$10$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$10$1_invoke(this, var_1); }, "$invoke32", function(var_1) { oktgg_GLTFNode$read$10$1_invoke0(this, var_1); }],
oktgg_GLTFSkin$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFSkin$read$2_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTFSkin$read$2_invoke0(this, var_1); }],
oktu_ILog$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktgg_GLTFSkin$read$4, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFSkin$read$4_invoke(this, var_1); }, "$invoke17", function(var_1) { oktgg_GLTFSkin$read$4_invoke0(this, var_1); }],
oktgg_GLTFSkin$read$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFSkin$read$3_invoke(this, var_1); }, "$invoke14", function(var_1) { oktgg_GLTFSkin$read$3_invoke0(this, var_1); }],
jur_PositiveLookAhead, 0, jur_AtomicJointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PositiveLookAhead_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_PositiveLookAhead_hasConsumed(this, var_1); }],
oktm_IVec2, 0, jl_Object, [oktm_IVec], 3, 3, oktm_IVec2_$callClinit, 0,
oktm_IVec4, 0, jl_Object, [oktm_IVec], 3, 3, oktm_IVec4_$callClinit, 0,
oktm_IVec3, 0, jl_Object, [oktm_IVec], 3, 3, oktm_IVec3_$callClinit, 0,
ooo_DContact$DSurfaceParameters, 0, jl_Object, [], 0, 3, 0, 0,
jn_ReadOnlyBufferException, "ReadOnlyBufferException", 7, jl_UnsupportedOperationException, [], 0, 3, 0, 0,
oktgn_Node, 0, jl_Object, [oktgn_ITransformNode], 4, 3, 0, ["$getName", function() { return oktgn_Node_getName(this); }, "$setName", function(var_1) { oktgn_Node_setName(this, var_1); }, "$getPosition0", function() { return oktgn_Node_getPosition(this); }, "$getRotation1", function() { return oktgn_Node_getRotation(this); }, "$getRotation0", function() { return oktgn_Node_getRotation0(this); }, "$getScale0", function() { return oktgn_Node_getScale(this); }, "$getWorldMatrix1", function() { return oktgn_Node_getWorldMatrix(this);
}, "$getWorldMatrix", function() { return oktgn_Node_getWorldMatrix0(this); }, "$getParentNode", function() { return oktgn_Node_getParentNode(this); }, "$setParentNode", function(var_1) { oktgn_Node_setParentNode(this, var_1); }, "$getChildNodes", function() { return oktgn_Node_getChildNodes(this); }, "$getChildNodes0", function() { return oktgn_Node_getChildNodes0(this); }, "$addChildNode", function(var_1) { oktgn_Node_addChildNode(this, var_1); }, "$removeChildNode0", function(var_1) { oktgn_Node_removeChildNode(this,
var_1); }, "$updateTransform0", function(var_1) { oktgn_Node_updateTransform(this, var_1); }, "$getWorldMatrix0", function(var_1, var_2) { return oktgn_Node_getWorldMatrix1(this, var_1, var_2); }, "$addChildren", function(var_1) { oktgn_Node_addChildren(this, var_1); }, "$getPosition4", function(var_1, var_2) { return oktgn_Node_getPosition0(this, var_1, var_2); }, "$clear", function() { oktgn_Node_clear(this); }],
oktsp_Threshold, 0, jl_Object, [], 4, 3, oktsp_Threshold_$callClinit, ["$getShader2", function() { return oktsp_Threshold_getShader(this); }, "$render4", function(var_1, var_2, var_3) { oktsp_Threshold_render(this, var_1, var_2, var_3); }],
oktsg_VelocityNode, 0, oktsg_ShaderNode, [], 4, 3, oktsg_VelocityNode_$callClinit, ["$setAPositionName", function(var_1) { oktsg_VelocityNode_setAPositionName(this, var_1); }, "$setABonesName", function(var_1) { oktsg_VelocityNode_setABonesName(this, var_1); }, "$setABoneWeightsName", function(var_1) { oktsg_VelocityNode_setABoneWeightsName(this, var_1); }, "$getVelocity0", function() { return oktsg_VelocityNode_getVelocity(this); }, "$getStretchedClipSpacePosition", function() { return oktsg_VelocityNode_getStretchedClipSpacePosition(this);
}, "$getWorldSpacePosition", function() { return oktsg_VelocityNode_getWorldSpacePosition(this); }, "$getClipSpacePosition", function() { return oktsg_VelocityNode_getClipSpacePosition(this); }, "$getPreviousViewProjectionMatrix", function() { return oktsg_VelocityNode_getPreviousViewProjectionMatrix(this); }, "$getNormal0", function() { return oktsg_VelocityNode_getNormal(this); }, "$getUPrevBoneMatricesName", function() { return oktsg_VelocityNode_getUPrevBoneMatricesName(this); }, "$getUPrevWorldMatrixName",
function() { return oktsg_VelocityNode_getUPrevWorldMatrixName(this); }, "$getUid", function() { return oktsg_VelocityNode_getUid(this); }, "$getHasBones", function() { return oktsg_VelocityNode_getHasBones(this); }, "$shaderCompiled", function() { oktsg_VelocityNode_shaderCompiled(this); }, "$boneInfluenceCode", function(var_1, var_2, var_3, var_4) { return oktsg_VelocityNode_boneInfluenceCode(this, var_1, var_2, var_3, var_4); }, "$skinningSetCode", function(var_1, var_2, var_3, var_4) { oktsg_VelocityNode_skinningSetCode(this,
var_1, var_2, var_3, var_4); }, "$prepareObjectData0", function(var_1) { oktsg_VelocityNode_prepareObjectData(this, var_1); }, "$executionVert", function(var_1) { oktsg_VelocityNode_executionVert(this, var_1); }, "$executionFrag", function(var_1) { oktsg_VelocityNode_executionFrag(this, var_1); }, "$declarationFrag", function(var_1) { oktsg_VelocityNode_declarationFrag(this, var_1); }, "$declarationVert", function(var_1) { oktsg_VelocityNode_declarationVert(this, var_1); }, "$setMaxBones", function(var_1) {
oktsg_VelocityNode_setMaxBones(this, var_1); }, "$setWorldTransformType", function(var_1) { oktsg_VelocityNode_setWorldTransformType(this, var_1); }],
jl_NoSuchFieldError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0,
oktt_Texture2D$load$1, 0, kji_Lambda, [kjf_Function2], 4, 0, 0, ["$invoke11", function(var_1, var_2) { return oktt_Texture2D$load$1_invoke(this, var_1, var_2); }, "$invoke9", function(var_1, var_2) { oktt_Texture2D$load$1_invoke0(this, var_1, var_2); }],
oktt_SkyboxTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktt_SkyboxTest$testMain$1_invoke(this); }, "$invoke2", function() { oktt_SkyboxTest$testMain$1_invoke0(this); }],
oktj_IJsonArray, 0, jl_Object, [], 3, 3, 0, 0,
oktjj_JsonSimple3Array, 0, jl_Object, [oktj_IJsonArray], 4, 3, 0, ["$getSize", function() { return oktjj_JsonSimple3Array_getSize(this); }, "$get1", function(var_1) { return oktjj_JsonSimple3Array_get(this, var_1); }, "$values3", function(var_1) { oktjj_JsonSimple3Array_values(this, var_1); }, "$objs", function(var_1) { oktjj_JsonSimple3Array_objs(this, var_1); }, "$float0", function(var_1) { return oktjj_JsonSimple3Array_float(this, var_1); }, "$float3", function(var_1, var_2) { return oktjj_JsonSimple3Array_float0(this,
var_1, var_2); }, "$ints1", function(var_1) { oktjj_JsonSimple3Array_ints(this, var_1); }, "$floats0", function(var_1) { oktjj_JsonSimple3Array_floats(this, var_1); }],
oktsp_Bloom$Companion, 0, jl_Object, [], 4, 3, 0, 0,
ooo_DMass, 0, jl_Object, [ooo_DMassC], 3, 3, 0, 0,
oooi_DxMass, 0, jl_Object, [ooo_DMass], 0, 3, 0, ["$SQR", function(var_1) { return oooi_DxMass_SQR(this, var_1); }, "$CUBE", function(var_1) { return oooi_DxMass_CUBE(this, var_1); }, "$dMassCheck", function() { return oooi_DxMass_dMassCheck(this); }, "$dMassSetZero", function() { oooi_DxMass_dMassSetZero(this); }, "$dMassSetParameters", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) { oooi_DxMass_dMassSetParameters(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8,
var_9, var_10); }, "$dMassSetSphere", function(var_1, var_2) { oooi_DxMass_dMassSetSphere(this, var_1, var_2); }, "$dMassSetSphereTotal", function(var_1, var_2) { oooi_DxMass_dMassSetSphereTotal(this, var_1, var_2); }, "$dMassSetCapsule", function(var_1, var_2, var_3, var_4) { oooi_DxMass_dMassSetCapsule(this, var_1, var_2, var_3, var_4); }, "$dMassSetCylinder", function(var_1, var_2, var_3, var_4) { oooi_DxMass_dMassSetCylinder(this, var_1, var_2, var_3, var_4); }, "$dMassSetCylinderTotal", function(var_1,
var_2, var_3, var_4) { oooi_DxMass_dMassSetCylinderTotal(this, var_1, var_2, var_3, var_4); }, "$dMassSetBox", function(var_1, var_2, var_3, var_4) { oooi_DxMass_dMassSetBox(this, var_1, var_2, var_3, var_4); }, "$dMassSetBoxTotal", function(var_1, var_2, var_3, var_4) { oooi_DxMass_dMassSetBoxTotal(this, var_1, var_2, var_3, var_4); }, "$dMassSetTrimesh", function(var_1, var_2) { oooi_DxMass_dMassSetTrimesh(this, var_1, var_2); }, "$dMassTranslate", function(var_1) { oooi_DxMass_dMassTranslate(this, var_1);
}, "$set65", function(var_1) { oooi_DxMass_set(this, var_1); }, "$setSphere", function(var_1, var_2) { oooi_DxMass_setSphere(this, var_1, var_2); }, "$setCapsule", function(var_1, var_2, var_3, var_4) { oooi_DxMass_setCapsule(this, var_1, var_2, var_3, var_4); }, "$setCylinder", function(var_1, var_2, var_3, var_4) { oooi_DxMass_setCylinder(this, var_1, var_2, var_3, var_4); }, "$setBox", function(var_1, var_2) { oooi_DxMass_setBox(this, var_1, var_2); }, "$setTrimesh", function(var_1, var_2) { oooi_DxMass_setTrimesh(this,
var_1, var_2); }, "$getC", function() { return oooi_DxMass_getC(this); }, "$getMass", function() { return oooi_DxMass_getMass(this); }, "$getI", function() { return oooi_DxMass_getI(this); }, "$check", function() { return oooi_DxMass_check(this); }],
otji_JS, 0, jl_Object, [], 4, 0, 0, 0,
oktf_FS, 0, jl_Object, [oktf_IFS], 4, 3, oktf_FS_$callClinit, ["$setApi5", function(var_1) { oktf_FS_setApi(this, var_1); }, "$internal", function(var_1) { return oktf_FS_internal(this, var_1); }],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierStart$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains(this, var_1); }],
otciu_UnicodeHelper, 0, jl_Object, [], 4, 3, 0, 0,
oooil_CCD$ccd_t, 0, jl_Object, [], 4, 3, 0, 0,
oktgg_GLTFAnimation$read$2$1$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAnimation$read$2$1$1$1_invoke(this, var_1); }, "$invoke16", function(var_1) { oktgg_GLTFAnimation$read$2$1$1$1_invoke0(this, var_1); }],
okttsg_SSAOTest$testMain$1$2, 0, jl_Object, [okti_IMouseListener], 4, 3, 0, ["$buttonUp", function(var_1, var_2, var_3, var_4) { okttsg_SSAOTest$testMain$1$2_buttonUp(this, var_1, var_2, var_3, var_4); }, "$buttonDown0", function(var_1, var_2, var_3, var_4) { okttsg_SSAOTest$testMain$1$2_buttonDown(this, var_1, var_2, var_3, var_4); }, "$dragged0", function(var_1, var_2, var_3) { okttsg_SSAOTest$testMain$1$2_dragged(this, var_1, var_2, var_3); }, "$moved0", function(var_1, var_2) { okttsg_SSAOTest$testMain$1$2_moved(this,
var_1, var_2); }, "$scrolled0", function(var_1) { okttsg_SSAOTest$testMain$1$2_scrolled(this, var_1); }],
okttsg_SSAOTest$testMain$1$3, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return okttsg_SSAOTest$testMain$1$3_invoke(this); }, "$invoke2", function() { okttsg_SSAOTest$testMain$1$3_invoke0(this); }],
jur_AbstractCharClass$LazyJavaSpaceChar, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaSpaceChar_computeValue(this); }],
jur_PositiveLookBehind, 0, jur_AtomicJointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PositiveLookBehind_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_PositiveLookBehind_hasConsumed(this, var_1); }],
kc_ComparisonsKt__ComparisonsKt, 0, jl_Object, [], 0, 0, 0, 0,
kc_ComparisonsKt___ComparisonsJvmKt, 0, kc_ComparisonsKt__ComparisonsKt, [], 0, 0, 0, 0,
kc_ComparisonsKt___ComparisonsKt, 0, kc_ComparisonsKt___ComparisonsJvmKt, [], 0, 0, 0, 0,
kc_ComparisonsKt, 0, kc_ComparisonsKt___ComparisonsKt, [], 4, 3, 0, 0,
oktt_GLTFLoaderAnimTest$testMain$1$2, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktt_GLTFLoaderAnimTest$testMain$1$2_invoke(this); }, "$invoke2", function() { oktt_GLTFLoaderAnimTest$testMain$1$2_invoke0(this); }],
ji_DataInputStream, 0, ji_FilterInputStream, [ji_DataInput], 0, 3, 0, ["$readByte", function() { return ji_DataInputStream_readByte(this); }],
oktgg_GLTFPrimitive$Vec3I, 0, jl_Object, [], 4, 3, 0, ["$getX", function() { return oktgg_GLTFPrimitive$Vec3I_getX(this); }, "$setX", function(var_1) { oktgg_GLTFPrimitive$Vec3I_setX(this, var_1); }, "$getY", function() { return oktgg_GLTFPrimitive$Vec3I_getY(this); }, "$setY", function(var_1) { oktgg_GLTFPrimitive$Vec3I_setY(this, var_1); }, "$getZ1", function() { return oktgg_GLTFPrimitive$Vec3I_getZ(this); }, "$setZ0", function(var_1) { oktgg_GLTFPrimitive$Vec3I_setZ(this, var_1); }],
oooil_CCDMPR, 0, jl_Object, [], 0, 3, 0, 0,
oktgg_GLTFSkin, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, 0, ["$getName", function() { return oktgg_GLTFSkin_getName(this); }, "$setName", function(var_1) { oktgg_GLTFSkin_setName(this, var_1); }, "$read", function(var_1) { oktgg_GLTFSkin_read(this, var_1); }, "$getGltf0", function() { return oktgg_GLTFSkin_getGltf(this); }, "$getElementIndex", function() { return oktgg_GLTFSkin_getElementIndex(this); }, "$getSkin0", function() { return oktgg_GLTFSkin_getSkin(this); }],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1, "AbstractCharClass$LazyJavaJavaIdentifierPart$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains(this, var_1); }],
oktg_IScene, 0, jl_Object, [oktgn_IDelegateTransformNode], 3, 3, oktg_IScene_$callClinit, 0,
oktg_Scene, 0, jl_Object, [oktg_IScene], 0, 3, oktg_Scene_$callClinit, ["$getLights", function() { return oktg_Scene_getLights(this); }, "$getObjects", function() { return oktg_Scene_getObjects(this); }, "$getArmatures", function() { return oktg_Scene_getArmatures(this); }, "$getNodes0", function() { return oktg_Scene_getNodes(this); }, "$getScenes0", function() { return oktg_Scene_getScenes(this); }, "$getWorld", function() { return oktg_Scene_getWorld(this); }, "$getShaderChannel", function() { return oktg_Scene_getShaderChannel(this);
}, "$setShaderChannel", function(var_1) { oktg_Scene_setShaderChannel(this, var_1); }, "$updatePreviousTransform0", function() { oktg_Scene_updatePreviousTransform(this); }, "$update", function(var_1) { oktg_Scene_update(this, var_1); }, "$prepareShaders", function(var_1) { oktg_Scene_prepareShaders(this, var_1); }, "$render0", function() { oktg_Scene_render(this); }, "$getNode", function() { return oktg_Scene_getNode(this); }, "$getAllObjects", function(var_1, var_2) { oktg_Scene_getAllObjects(this, var_1,
var_2); }],
k_UninitializedPropertyAccessException, 0, jl_RuntimeException, [], 4, 3, 0, 0,
oktg_Scene$Companion, 0, jl_Object, [], 4, 3, 0, ["$getTmpV1", function() { return oktg_Scene$Companion_getTmpV1(this); }, "$getTmpV2", function() { return oktg_Scene$Companion_getTmpV2(this); }]]);
$rt_metadata([kt_StringsKt__StringsKt$splitToSequence$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return kt_StringsKt__StringsKt$splitToSequence$1_invoke(this, var_1); }, "$invoke33", function(var_1) { return kt_StringsKt__StringsKt$splitToSequence$1_invoke0(this, var_1); }],
oktt_FrameBuffer, 0, jl_Object, [oktt_IFrameBuffer], 4, 3, 0, ["$getWidth", function() { return oktt_FrameBuffer_getWidth(this); }, "$getHeight", function() { return oktt_FrameBuffer_getHeight(this); }, "$isBound2", function() { return oktt_FrameBuffer_isBound(this); }, "$setBound", function(var_1) { oktt_FrameBuffer_setBound(this, var_1); }, "$getFrameBufferHandle", function() { return oktt_FrameBuffer_getFrameBufferHandle(this); }, "$getAttachments", function() { return oktt_FrameBuffer_getAttachments(this);
}, "$getAttachments0", function() { return oktt_FrameBuffer_getAttachments0(this); }, "$getTexture", function(var_1) { return oktt_FrameBuffer_getTexture(this, var_1); }, "$buildAttachments", function() { oktt_FrameBuffer_buildAttachments(this); }, "$initBuffersOrder0", function(var_1) { oktt_FrameBuffer_initBuffersOrder(this, var_1); }, "$checkErrors", function() { oktt_FrameBuffer_checkErrors(this); }, "$destroy4", function(var_1) { oktt_FrameBuffer_destroy(this, var_1); }, "$bind8", function(var_1) { oktt_FrameBuffer_bind(this,
var_1); }, "$render", function(var_1) { oktt_FrameBuffer_render(this, var_1); }],
cgcj_JsonArray, 0, ju_ArrayList, [cgcj_Jsonable], 0, 3, 0, ["$getMap", function(var_1) { return cgcj_JsonArray_getMap(this, var_1); }],
oooip_DxWorldProcessMemArena, 0, jl_Object, [], 4, 3, 0, ["$IsStructureValid", function() { return oooip_DxWorldProcessMemArena_IsStructureValid(this); }, "$GetMemorySize", function() { return oooip_DxWorldProcessMemArena_GetMemorySize(this); }, "$SaveState", function() { return oooip_DxWorldProcessMemArena_SaveState(this); }, "$RestoreState", function(var_1) { oooip_DxWorldProcessMemArena_RestoreState(this, var_1); }, "$ResetState", function() { oooip_DxWorldProcessMemArena_ResetState(this); }, "$GetNextMemArena",
function() { return oooip_DxWorldProcessMemArena_GetNextMemArena(this); }, "$SetNextMemArena", function(var_1) { oooip_DxWorldProcessMemArena_SetNextMemArena(this, var_1); }, "$AllocateArrayDReal", function(var_1) { return oooip_DxWorldProcessMemArena_AllocateArrayDReal(this, var_1); }, "$AllocateArrayInt", function(var_1) { return oooip_DxWorldProcessMemArena_AllocateArrayInt(this, var_1); }, "$dummy", function() { oooip_DxWorldProcessMemArena_dummy(this); }, "$ShrinkArrayDJointWithInfo1", function(var_1, var_2,
var_3) { oooip_DxWorldProcessMemArena_ShrinkArrayDJointWithInfo1(this, var_1, var_2, var_3); }, "$BEGIN_STATE_SAVE", function() { return oooip_DxWorldProcessMemArena_BEGIN_STATE_SAVE(this); }, "$END_STATE_SAVE", function(var_1) { oooip_DxWorldProcessMemArena_END_STATE_SAVE(this, var_1); }, "$AllocateArrayDxBody", function(var_1) { return oooip_DxWorldProcessMemArena_AllocateArrayDxBody(this, var_1); }, "$AllocateArrayDxJoint", function(var_1) { return oooip_DxWorldProcessMemArena_AllocateArrayDxJoint(this, var_1);
}],
oktts_BloomBaseTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktts_BloomBaseTest_getName(this); }, "$testMain", function() { oktts_BloomBaseTest_testMain(this); }],
jlr_AnnotatedElement, 0, jl_Object, [], 3, 3, 0, 0,
jl_Class, 0, jl_Object, [jlr_AnnotatedElement], 0, 3, 0, ["$getPlatformClass", function() { return jl_Class_getPlatformClass(this); }, "$isInstance0", function(var_1) { return jl_Class_isInstance(this, var_1); }, "$getName", function() { return jl_Class_getName(this); }, "$isPrimitive0", function() { return jl_Class_isPrimitive(this); }, "$getComponentType", function() { return jl_Class_getComponentType(this); }, "$desiredAssertionStatus", function() { return jl_Class_desiredAssertionStatus(this); }, "$getSuperclass",
function() { return jl_Class_getSuperclass(this); }, "$getClassLoader", function() { return jl_Class_getClassLoader(this); }, "$newInstance", function() { return jl_Class_newInstance(this); }],
okttsg_CascadedShadowMappingTest$testMain$1, 0, kji_Lambda, [kjf_Function1], 4, 0, okttsg_CascadedShadowMappingTest$testMain$1_$callClinit, ["$invoke1", function(var_1) { return okttsg_CascadedShadowMappingTest$testMain$1_invoke(this, var_1); }, "$invoke", function(var_1) { okttsg_CascadedShadowMappingTest$testMain$1_invoke0(this, var_1); }],
oktgg_GLTFPrimitive$loadIndices$1$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktgg_GLTFPrimitive$loadIndices$1$1_invoke(this); }, "$invoke2", function() { oktgg_GLTFPrimitive$loadIndices$1$1_invoke0(this); }],
jur_CharSet, 0, jur_LeafSet, [], 0, 0, 0, ["$charCount", function() { return jur_CharSet_charCount(this); }, "$accepts", function(var_1, var_2) { return jur_CharSet_accepts(this, var_1, var_2); }, "$find", function(var_1, var_2, var_3) { return jur_CharSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_CharSet_findBack(this, var_1, var_2, var_3, var_4); }, "$getChar", function() { return jur_CharSet_getChar(this); }, "$first", function(var_1) { return jur_CharSet_first(this,
var_1); }],
oooi_CollideTrimeshRay, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dCollideRTL", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollideTrimeshRay_dCollideRTL(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollideTrimeshRay_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktt_TeaVMApp, 0, jl_Object, [okt_IApp], 4, 3, 0, ["$getPlatformType", function() { return oktt_TeaVMApp_getPlatformType(this); }, "$getWidth", function() { return oktt_TeaVMApp_getWidth(this); }, "$getHeight", function() { return oktt_TeaVMApp_getHeight(this); }, "$setRawDeltaTime", function(var_1) { oktt_TeaVMApp_setRawDeltaTime(this, var_1); }, "$getDeltaTime", function() { return oktt_TeaVMApp_getDeltaTime(this); }, "$setDeltaTime", function(var_1) { oktt_TeaVMApp_setDeltaTime(this, var_1); }, "$setFps",
function(var_1) { oktt_TeaVMApp_setFps(this, var_1); }, "$getDefaultCursor", function() { return oktt_TeaVMApp_getDefaultCursor(this); }, "$isEnabled1", function() { return oktt_TeaVMApp_isEnabled(this); }, "$getAnim0", function() { return oktt_TeaVMApp_getAnim(this); }, "$getListeners", function() { return oktt_TeaVMApp_getListeners(this); }, "$messageBox", function(var_1, var_2) { oktt_TeaVMApp_messageBox(this, var_1, var_2); }, "$startLoop", function() { oktt_TeaVMApp_startLoop(this); }, "$getCanvas", function()
{ return oktt_TeaVMApp_getCanvas(this); }],
oktsg_NormalMapNode$Companion, 0, jl_Object, [], 4, 3, 0, ["$normalCode", function(var_1, var_2, var_3) { return oktsg_NormalMapNode$Companion_normalCode(this, var_1, var_2, var_3); }],
oktsg_SkyboxVertexNode$Companion, 0, jl_Object, [], 4, 3, 0, 0,
otjb_AnimationFrameCallback, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
oooig_GimAABBSet$GIM_PAIR, 0, jl_Object, [], 0, 0, 0, 0,
oooi_DxWorld, 0, oooi_DBase, [ooo_DWorld], 0, 3, 0, ["$dWorldSetGravity", function(var_1, var_2, var_3) { oooi_DxWorld_dWorldSetGravity(this, var_1, var_2, var_3); }, "$dWorldSetERP", function(var_1) { oooi_DxWorld_dWorldSetERP(this, var_1); }, "$dWorldGetERP", function() { return oooi_DxWorld_dWorldGetERP(this); }, "$dWorldSetCFM", function(var_1) { oooi_DxWorld_dWorldSetCFM(this, var_1); }, "$dWorldGetCFM", function() { return oooi_DxWorld_dWorldGetCFM(this); }, "$dWorldQuickStep", function(var_1) { return oooi_DxWorld_dWorldQuickStep(this,
var_1); }, "$dWorldGetAutoDisableAverageSamplesCount", function() { return oooi_DxWorld_dWorldGetAutoDisableAverageSamplesCount(this); }, "$dWorldGetAutoDisableSteps", function() { return oooi_DxWorld_dWorldGetAutoDisableSteps(this); }, "$dWorldGetAutoDisableTime", function() { return oooi_DxWorld_dWorldGetAutoDisableTime(this); }, "$EstimateIslandProcessingMemoryRequirements", function() { return oooi_DxWorld_EstimateIslandProcessingMemoryRequirements(this); }, "$dxProcessIslands", function(var_1, var_2, var_3,
var_4) { return oooi_DxWorld_dxProcessIslands(this, var_1, var_2, var_3, var_4); }, "$dInternalHandleAutoDisabling", function(var_1) { oooi_DxWorld_dInternalHandleAutoDisabling(this, var_1); }, "$GetThreadingIslandsMaxThreadsCount", function(var_1) { return oooi_DxWorld_GetThreadingIslandsMaxThreadsCount(this, var_1); }, "$UnsafeGetWorldProcessingContext", function() { return oooi_DxWorld_UnsafeGetWorldProcessingContext(this); }, "$setGravity", function(var_1, var_2, var_3) { oooi_DxWorld_setGravity(this, var_1,
var_2, var_3); }, "$setERP", function(var_1) { oooi_DxWorld_setERP(this, var_1); }, "$getERP", function() { return oooi_DxWorld_getERP(this); }, "$setCFM", function(var_1) { oooi_DxWorld_setCFM(this, var_1); }, "$getCFM", function() { return oooi_DxWorld_getCFM(this); }, "$quickStep", function(var_1) { return oooi_DxWorld_quickStep(this, var_1); }, "$getAutoDisableSteps", function() { return oooi_DxWorld_getAutoDisableSteps(this); }, "$getAutoDisableTime", function() { return oooi_DxWorld_getAutoDisableTime(this);
}, "$getAutoDisableAverageSamplesCount", function() { return oooi_DxWorld_getAutoDisableAverageSamplesCount(this); }],
oktgg_GLTF$read$7$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$7$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTF$read$7$1_invoke0(this, var_1); }],
ju_Collections$5, 0, ju_AbstractSet, [], 4, 0, 0, 0,
ju_Collections$6, 0, ju_AbstractMap, [], 4, 0, 0, 0,
ju_Collections$3, 0, ju_AbstractList, [], 4, 0, 0, 0,
oktgg_IGLTFMaterial$read$5$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$5$1$1_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_IGLTFMaterial$read$5$1$1_invoke0(this, var_1); }],
oktgg_GLTF$read$13$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$13$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTF$read$13$1_invoke0(this, var_1); }],
ju_Collections$7, 0, ju_AbstractList, [], 4, 0, 0, ["$get1", function(var_1) { return ju_Collections$7_get(this, var_1); }, "$size", function() { return ju_Collections$7_size(this); }],
oooig_GimTrimesh, 0, jl_Object, [oooig_GimConstants], 0, 3, oooig_GimTrimesh_$callClinit, ["$gim_trimesh_trimesh_collision", function(var_1, var_2) { oooig_GimTrimesh_gim_trimesh_trimesh_collision(this, var_1, var_2); }, "$gim_trimesh_sphere_collision0", function(var_1, var_2, var_3) { oooig_GimTrimesh_gim_trimesh_sphere_collision(this, var_1, var_2, var_3); }, "$gim_trimesh_capsule_collision", function(var_1, var_2) { oooig_GimTrimesh_gim_trimesh_capsule_collision(this, var_1, var_2); }, "$gim_trimesh_plane_collision0",
function(var_1, var_2) { oooig_GimTrimesh_gim_trimesh_plane_collision(this, var_1, var_2); }, "$gim_trimesh_ray_collision0", function(var_1, var_2, var_3, var_4) { return oooig_GimTrimesh_gim_trimesh_ray_collision(this, var_1, var_2, var_3, var_4); }, "$gim_trimesh_ray_closest_collision0", function(var_1, var_2, var_3, var_4) { return oooig_GimTrimesh_gim_trimesh_ray_closest_collision(this, var_1, var_2, var_3, var_4); }, "$gim_trimesh_get_triangle_count", function() { return oooig_GimTrimesh_gim_trimesh_get_triangle_count(this);
}, "$gim_trimesh_locks_work_data", function() { oooig_GimTrimesh_gim_trimesh_locks_work_data(this); }, "$gim_trimesh_unlocks_work_data", function() { oooig_GimTrimesh_gim_trimesh_unlocks_work_data(this); }, "$gim_trimesh_has_tranformed_reply", function() { return oooig_GimTrimesh_gim_trimesh_has_tranformed_reply(this); }, "$gim_trimesh_needs_update", function() { return oooig_GimTrimesh_gim_trimesh_needs_update(this); }, "$gim_trimesh_post_update", function() { oooig_GimTrimesh_gim_trimesh_post_update(this);
}, "$gim_trimesh_update_vertices", function() { oooig_GimTrimesh_gim_trimesh_update_vertices(this); }, "$gim_trimesh_update_aabbset", function() { oooig_GimTrimesh_gim_trimesh_update_aabbset(this); }, "$gim_trimesh_update", function() { oooig_GimTrimesh_gim_trimesh_update(this); }, "$gim_trimesh_set_tranform", function(var_1) { oooig_GimTrimesh_gim_trimesh_set_tranform(this, var_1); }, "$gim_trimesh_get_triangle_data", function(var_1, var_2) { oooig_GimTrimesh_gim_trimesh_get_triangle_data(this, var_1, var_2);
}, "$gim_trimesh_get_triangle_vertices", function(var_1, var_2, var_3, var_4) { oooig_GimTrimesh_gim_trimesh_get_triangle_vertices(this, var_1, var_2, var_3, var_4); }, "$getAabbSet", function() { return oooig_GimTrimesh_getAabbSet(this); }],
kji_Ref$ObjectRef, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0,
okta_ISound, 0, jl_Object, [], 3, 3, 0, 0,
oktt_TvmSound, 0, jl_Object, [okta_ISound, okta_IMusic], 4, 3, 0, ["$getPool", function() { return oktt_TvmSound_getPool(this); }, "$play", function(var_1, var_2, var_3, var_4) { return oktt_TvmSound_play(this, var_1, var_2, var_3, var_4); }, "$getAl", function() { return oktt_TvmSound_getAl(this); }, "$getSrc", function() { return oktt_TvmSound_getSrc(this); }],
jn_CharBuffer, 0, jn_Buffer, [jl_Comparable, jl_Appendable, jl_CharSequence, jl_Readable], 1, 3, 0, ["$get14", function(var_1, var_2, var_3) { return jn_CharBuffer_get(this, var_1, var_2, var_3); }, "$get13", function(var_1) { return jn_CharBuffer_get0(this, var_1); }, "$put17", function(var_1, var_2, var_3) { return jn_CharBuffer_put(this, var_1, var_2, var_3); }, "$put15", function(var_1, var_2, var_3) { return jn_CharBuffer_put0(this, var_1, var_2, var_3); }, "$put16", function(var_1) { return jn_CharBuffer_put1(this,
var_1); }, "$hasArray", function() { return jn_CharBuffer_hasArray(this); }, "$array0", function() { return jn_CharBuffer_array(this); }, "$length", function() { return jn_CharBuffer_length(this); }, "$flip0", function() { return jn_CharBuffer_flip(this); }, "$position3", function(var_1) { return jn_CharBuffer_position(this, var_1); }],
jn_CharBufferImpl, 0, jn_CharBuffer, [], 1, 0, 0, ["$isReadOnly", function() { return jn_CharBufferImpl_isReadOnly(this); }],
jn_CharBufferOverArray, 0, jn_CharBufferImpl, [], 0, 0, 0, ["$getChar0", function(var_1) { return jn_CharBufferOverArray_getChar(this, var_1); }, "$putChar", function(var_1, var_2) { jn_CharBufferOverArray_putChar(this, var_1, var_2); }, "$isArrayPresent", function() { return jn_CharBufferOverArray_isArrayPresent(this); }, "$getArray0", function() { return jn_CharBufferOverArray_getArray(this); }, "$readOnly", function() { return jn_CharBufferOverArray_readOnly(this); }],
ooo_DContactJoint, 0, jl_Object, [ooo_DJoint], 3, 3, 0, 0,
oooij_DxJointContact, 0, oooij_DxJoint, [ooo_DContactJoint], 0, 3, 0, ["$getInfo1", function(var_1) { oooij_DxJointContact_getInfo1(this, var_1); }, "$getInfo2", function(var_1, var_2, var_3) { oooij_DxJointContact_getInfo2(this, var_1, var_2, var_3); }],
oktgg_GLTFSparse$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFSparse$read$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTFSparse$read$1_invoke0(this, var_1); }],
oktgg_IGLTFMaterial$read$9$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$9$1_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_IGLTFMaterial$read$9$1_invoke0(this, var_1); }],
okttm_FrustumMeshBuilderTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return okttm_FrustumMeshBuilderTest$testMain$1_invoke(this); }, "$invoke2", function() { okttm_FrustumMeshBuilderTest$testMain$1_invoke0(this); }],
oktsg_VelocityNode$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktgg_GLTFSparse$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFSparse$read$2_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTFSparse$read$2_invoke0(this, var_1); }],
oktgg_GLTFNode$read$9$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFNode$read$9$1_invoke(this, var_1); }, "$invoke34", function(var_1) { oktgg_GLTFNode$read$9$1_invoke0(this, var_1); }],
jur_AtomicFSet, 0, jur_FSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_AtomicFSet_matches(this, var_1, var_2, var_3); }, "$getIndex", function() { return jur_AtomicFSet_getIndex(this); }, "$hasConsumed", function(var_1) { return jur_AtomicFSet_hasConsumed(this, var_1); }],
oooi_DxQuickStep$dxQuickStepperStage5CallContext, 0, jl_Object, [], 0, 0, 0, ["$Initialize3", function(var_1, var_2, var_3) { oooi_DxQuickStep$dxQuickStepperStage5CallContext_Initialize(this, var_1, var_2, var_3); }],
oktu_IAsyncList$getOrWait$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktu_IAsyncList$getOrWait$1_invoke(this); }, "$invoke2", function() { oktu_IAsyncList$getOrWait$1_invoke0(this); }],
oooig_Gimpact, 0, jl_Object, [], 0, 3, 0, 0,
oktm_Vec3, 0, jl_Object, [oktm_IVec3], 0, 3, oktm_Vec3_$callClinit, ["$getX0", function() { return oktm_Vec3_getX(this); }, "$setX0", function(var_1) { oktm_Vec3_setX(this, var_1); }, "$getY0", function() { return oktm_Vec3_getY(this); }, "$setY0", function(var_1) { oktm_Vec3_setY(this, var_1); }, "$getZ", function() { return oktm_Vec3_getZ(this); }, "$setZ", function(var_1) { oktm_Vec3_setZ(this, var_1); }, "$set44", function(var_1, var_2, var_3) { return oktm_Vec3_set(this, var_1, var_2, var_3); }, "$set11",
function(var_1) { return oktm_Vec3_set0(this, var_1); }, "$add8", function(var_1) { return oktm_Vec3_add(this, var_1); }, "$add17", function(var_1, var_2, var_3) { return oktm_Vec3_add0(this, var_1, var_2, var_3); }, "$sub0", function(var_1) { return oktm_Vec3_sub(this, var_1); }, "$sub3", function(var_1, var_2, var_3) { return oktm_Vec3_sub0(this, var_1, var_2, var_3); }, "$scl", function(var_1) { return oktm_Vec3_scl(this, var_1); }, "$len22", function() { return oktm_Vec3_len2(this); }, "$dst22", function(var_1)
{ return oktm_Vec3_dst2(this, var_1); }, "$nor", function() { return oktm_Vec3_nor(this); }, "$dot0", function(var_1) { return oktm_Vec3_dot(this, var_1); }, "$crs2", function(var_1) { return oktm_Vec3_crs(this, var_1); }, "$crs", function(var_1, var_2, var_3) { return oktm_Vec3_crs0(this, var_1, var_2, var_3); }, "$mul0", function(var_1) { return oktm_Vec3_mul(this, var_1); }, "$rotate0", function(var_1, var_2, var_3, var_4) { return oktm_Vec3_rotate(this, var_1, var_2, var_3, var_4); }, "$lerp", function(var_1,
var_2) { return oktm_Vec3_lerp(this, var_1, var_2); }],
oktm_Vec2, 0, jl_Object, [oktm_IVec2], 0, 3, oktm_Vec2_$callClinit, ["$getX0", function() { return oktm_Vec2_getX(this); }, "$setX0", function(var_1) { oktm_Vec2_setX(this, var_1); }, "$getY0", function() { return oktm_Vec2_getY(this); }, "$setY0", function(var_1) { oktm_Vec2_setY(this, var_1); }],
oktpo_OdePhysicsWorld$Companion$geomPairsPool$1, 0, kji_Lambda, [kjf_Function0], 4, 0, oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_$callClinit, ["$invoke6", function() { return oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_invoke(this); }, "$invoke35", function() { return oktpo_OdePhysicsWorld$Companion$geomPairsPool$1_invoke0(this); }],
oktm_Vec4, 0, jl_Object, [oktm_IVec4], 4, 3, 0, ["$getX0", function() { return oktm_Vec4_getX(this); }, "$setX0", function(var_1) { oktm_Vec4_setX(this, var_1); }, "$getY0", function() { return oktm_Vec4_getY(this); }, "$setY0", function(var_1) { oktm_Vec4_setY(this, var_1); }, "$getZ", function() { return oktm_Vec4_getZ(this); }, "$setZ", function(var_1) { oktm_Vec4_setZ(this, var_1); }, "$getW", function() { return oktm_Vec4_getW(this); }, "$setW", function(var_1) { oktm_Vec4_setW(this, var_1); }, "$getR0",
function() { return oktm_Vec4_getR(this); }, "$setR0", function(var_1) { oktm_Vec4_setR(this, var_1); }, "$getG0", function() { return oktm_Vec4_getG(this); }, "$setG0", function(var_1) { oktm_Vec4_setG(this, var_1); }, "$getB2", function() { return oktm_Vec4_getB(this); }, "$setB2", function(var_1) { oktm_Vec4_setB(this, var_1); }, "$getA2", function() { return oktm_Vec4_getA(this); }, "$setA2", function(var_1) { oktm_Vec4_setA(this, var_1); }, "$set52", function(var_1, var_2, var_3, var_4) { return oktm_Vec4_set(this,
var_1, var_2, var_3, var_4); }, "$set71", function(var_1) { return oktm_Vec4_set0(this, var_1); }, "$set72", function(var_1, var_2) { return oktm_Vec4_set1(this, var_1, var_2); }, "$len22", function() { return oktm_Vec4_len2(this); }, "$nor2", function() { return oktm_Vec4_nor(this); }, "$lerp2", function(var_1, var_2) { return oktm_Vec4_lerp(this, var_1, var_2); }, "$idtQuaternion0", function() { return oktm_Vec4_idtQuaternion(this); }, "$setQuaternion", function(var_1, var_2, var_3, var_4) { return oktm_Vec4_setQuaternion(this,
var_1, var_2, var_3, var_4); }, "$setQuaternion4", function(var_1, var_2) { return oktm_Vec4_setQuaternion0(this, var_1, var_2); }, "$setQuaternion3", function(var_1) { return oktm_Vec4_setQuaternion1(this, var_1); }, "$setQuaternionFromAxes0", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) { return oktm_Vec4_setQuaternionFromAxes(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10); }, "$slerp0", function(var_1, var_2) { return oktm_Vec4_slerp(this, var_1,
var_2); }],
oktgg_GLTFSparse, 0, jl_Object, [oktj_IJsonObjectIO], 4, 3, 0, ["$getIndices0", function() { return oktgg_GLTFSparse_getIndices(this); }, "$getValues0", function() { return oktgg_GLTFSparse_getValues(this); }, "$read", function(var_1) { oktgg_GLTFSparse_read(this, var_1); }],
oktt_TextureCube, 0, oktt_Texture, [], 4, 3, 0, ["$setWidth", function(var_1) { oktt_TextureCube_setWidth(this, var_1); }, "$setHeight", function(var_1) { oktt_TextureCube_setHeight(this, var_1); }, "$load4", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11) { oktt_TextureCube_load(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11); }, "$loadSide", function(var_1, var_2) { oktt_TextureCube_loadSide(this, var_1, var_2); }, "$getTextureHandle",
function() { return oktt_TextureCube_getTextureHandle(this); }],
oktg_IObject3D$Companion$Build$1, 0, kji_Lambda, [kjf_Function0], 4, 0, oktg_IObject3D$Companion$Build$1_$callClinit, 0]);
$rt_metadata([oom_DVector4C, 0, jl_Object, [], 3, 3, 0, 0,
oom_DVector4, 0, jl_Object, [oom_DVector4C], 0, 3, 0, ["$set16", function(var_1, var_2, var_3, var_4) { oom_DVector4_set(this, var_1, var_2, var_3, var_4); }, "$get01", function() { return oom_DVector4_get0(this); }, "$get10", function() { return oom_DVector4_get1(this); }, "$get20", function() { return oom_DVector4_get2(this); }, "$get30", function() { return oom_DVector4_get3(this); }],
oom_DVector3C, 0, jl_Object, [], 3, 3, 0, 0,
oom_DVector3, "DVector3", 19, jl_Object, [oom_DVector3I, oom_DVector3C], 0, 3, oom_DVector3_$callClinit, ["$set14", function(var_1) { oom_DVector3_set3(this, var_1); }, "$set5", function(var_1, var_2, var_3) { return oom_DVector3_set0(this, var_1, var_2, var_3); }, "$set2", function(var_1) { return oom_DVector3_set(this, var_1); }, "$set7", function(var_1) { return oom_DVector3_set1(this, var_1); }, "$toString", function() { return oom_DVector3_toString(this); }, "$set00", function(var_1) { oom_DVector3_set00(this,
var_1); }, "$set15", function(var_1) { oom_DVector3_set10(this, var_1); }, "$set20", function(var_1) { oom_DVector3_set20(this, var_1); }, "$get01", function() { return oom_DVector3_get0(this); }, "$get10", function() { return oom_DVector3_get1(this); }, "$get20", function() { return oom_DVector3_get2(this); }, "$add3", function(var_1) { return oom_DVector3_add(this, var_1); }, "$eqSum1", function(var_1, var_2) { return oom_DVector3_eqSum1(this, var_1, var_2); }, "$eqSum", function(var_1, var_2, var_3, var_4)
{ return oom_DVector3_eqSum(this, var_1, var_2, var_3, var_4); }, "$eqSum2", function(var_1, var_2, var_3, var_4) { return oom_DVector3_eqSum2(this, var_1, var_2, var_3, var_4); }, "$eqSum3", function(var_1, var_2, var_3, var_4) { return oom_DVector3_eqSum3(this, var_1, var_2, var_3, var_4); }, "$eqSum0", function(var_1, var_2, var_3) { return oom_DVector3_eqSum0(this, var_1, var_2, var_3); }, "$eqSum4", function(var_1, var_2, var_3) { return oom_DVector3_eqSum4(this, var_1, var_2, var_3); }, "$sub", function(var_1)
{ return oom_DVector3_sub(this, var_1); }, "$scale5", function(var_1, var_2, var_3) { return oom_DVector3_scale0(this, var_1, var_2, var_3); }, "$scale0", function(var_1) { return oom_DVector3_scale(this, var_1); }, "$dot", function(var_1) { return oom_DVector3_dot(this, var_1); }, "$eqDiff", function(var_1, var_2) { return oom_DVector3_eqDiff(this, var_1, var_2); }, "$reSub", function(var_1) { return oom_DVector3_reSub(this, var_1); }, "$safeNormalize", function() { return oom_DVector3_safeNormalize(this);
}, "$normalize0", function() { oom_DVector3_normalize(this); }, "$distance", function(var_1) { return oom_DVector3_distance(this, var_1); }, "$isEq", function(var_1) { return oom_DVector3_isEq(this, var_1); }, "$eqAbs", function() { oom_DVector3_eqAbs(this); }, "$add00", function(var_1) { oom_DVector3_add00(this, var_1); }, "$add18", function(var_1) { oom_DVector3_add1(this, var_1); }, "$add20", function(var_1) { oom_DVector3_add2(this, var_1); }, "$eqZero", function() { oom_DVector3_eqZero(this); }, "$setZero",
function() { oom_DVector3_setZero(this); }, "$length2", function() { return oom_DVector3_length(this); }, "$lengthSquared", function() { return oom_DVector3_lengthSquared(this); }, "$get5", function(var_1) { return oom_DVector3_get(this, var_1); }, "$set9", function(var_1, var_2) { oom_DVector3_set2(this, var_1, var_2); }, "$scale3", function(var_1, var_2) { oom_DVector3_scale1(this, var_1, var_2); }, "$add4", function(var_1, var_2) { oom_DVector3_add0(this, var_1, var_2); }, "$dotCol", function(var_1, var_2)
{ return oom_DVector3_dotCol(this, var_1, var_2); }, "$addScaled", function(var_1, var_2) { return oom_DVector3_addScaled(this, var_1, var_2); }, "$eqCross", function(var_1, var_2) { oom_DVector3_eqCross(this, var_1, var_2); }, "$eqProd", function(var_1, var_2) { oom_DVector3_eqProd(this, var_1, var_2); }],
oktsp_FXAA, 0, jl_Object, [], 4, 3, oktsp_FXAA_$callClinit, ["$getShader2", function() { return oktsp_FXAA_getShader(this); }, "$updateUniforms", function() { oktsp_FXAA_updateUniforms(this); }, "$updateWidthHeight", function(var_1, var_2) { oktsp_FXAA_updateWidthHeight(this, var_1, var_2); }, "$render4", function(var_1, var_2, var_3) { oktsp_FXAA_render(this, var_1, var_2, var_3); }],
jur_MultiLineEOLSet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_MultiLineEOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_MultiLineEOLSet_hasConsumed(this, var_1); }],
jl_ClassNotFoundException, 0, jl_ReflectiveOperationException, [], 0, 3, 0, 0,
ju_HashMap$AbstractMapIterator, 0, jl_Object, [], 0, 0, 0, ["$hasNext", function() { return ju_HashMap$AbstractMapIterator_hasNext(this); }, "$checkConcurrentMod", function() { ju_HashMap$AbstractMapIterator_checkConcurrentMod(this); }, "$makeNext", function() { ju_HashMap$AbstractMapIterator_makeNext(this); }, "$remove2", function() { ju_HashMap$AbstractMapIterator_remove(this); }],
oooi_Rotation, 0, oooi_Matrix, [], 0, 3, 0, 0,
oooi_DxRay$CollideRayBox, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideRayBox", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxRay$CollideRayBox_dCollideRayBox(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxRay$CollideRayBox_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oooip_DxIslandsProcessingCallContext, 0, jl_Object, [], 0, 3, 0, ["$SetStepperAllowedThreads", function(var_1) { oooip_DxIslandsProcessingCallContext_SetStepperAllowedThreads(this, var_1); }, "$ThreadedProcessJobStart", function(var_1) { oooip_DxIslandsProcessingCallContext_ThreadedProcessJobStart(this, var_1); }, "$ThreadedProcessIslandSearch", function(var_1, var_2) { oooip_DxIslandsProcessingCallContext_ThreadedProcessIslandSearch(this, var_1, var_2); }, "$ThreadedProcessIslandStepper", function(var_1) {
oooip_DxIslandsProcessingCallContext_ThreadedProcessIslandStepper(this, var_1); }, "$ObtainNextIslandToBeProcessed", function(var_1) { return oooip_DxIslandsProcessingCallContext_ObtainNextIslandToBeProcessed(this, var_1); }],
kji_TypeIntrinsics, "TypeIntrinsics", 22, jl_Object, [], 0, 3, 0, 0,
oooi_DxQuickStep$dxQuickStepperStage6CallContext, 0, jl_Object, [], 0, 0, 0, ["$Initialize6", function(var_1, var_2) { oooi_DxQuickStep$dxQuickStepperStage6CallContext_Initialize(this, var_1, var_2); }],
oktjj_JsonSimple3Api, 0, jl_Object, [oktj_IJSON], 4, 3, 0, ["$parseObject", function(var_1) { return oktjj_JsonSimple3Api_parseObject(this, var_1); }],
oooip_DxStepperProcessingCallContext$dmaxcallcountestimate_fn_t, 0, jl_Object, [], 3, 3, 0, 0,
oktt_IFrameBuffer$buildAttachments$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktt_IFrameBuffer$buildAttachments$1_$callClinit, ["$invoke1", function(var_1) { return oktt_IFrameBuffer$buildAttachments$1_invoke(this, var_1); }, "$invoke8", function(var_1) { oktt_IFrameBuffer$buildAttachments$1_invoke0(this, var_1); }],
ks_TransformingSequence$iterator$1, 0, jl_Object, [ju_Iterator, kjim_KMappedMarker], 4, 3, 0, ["$next", function() { return ks_TransformingSequence$iterator$1_next(this); }, "$hasNext", function() { return ks_TransformingSequence$iterator$1_hasNext(this); }],
oktmb_FrustumMeshBuilder$build$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktmb_FrustumMeshBuilder$build$1_$callClinit, ["$invoke1", function(var_1) { return oktmb_FrustumMeshBuilder$build$1_invoke(this, var_1); }, "$invoke16", function(var_1) { oktmb_FrustumMeshBuilder$build$1_invoke0(this, var_1); }],
oktmb_FrustumMeshBuilder$build$2, 0, kji_Lambda, [kjf_Function1], 4, 0, oktmb_FrustumMeshBuilder$build$2_$callClinit, ["$invoke1", function(var_1) { return oktmb_FrustumMeshBuilder$build$2_invoke(this, var_1); }, "$invoke36", function(var_1) { oktmb_FrustumMeshBuilder$build$2_invoke0(this, var_1); }],
oktm_MATH, 0, jl_Object, [], 4, 3, oktm_MATH_$callClinit, ["$isZero", function(var_1) { return oktm_MATH_isZero(this, var_1); }, "$isNotZero", function(var_1) { return oktm_MATH_isNotZero(this, var_1); }, "$isEqual", function(var_1, var_2) { return oktm_MATH_isEqual(this, var_1, var_2); }],
oooip_DxUtil$free_block_fn_t, 0, jl_Object, [], 3, 3, 0, 0,
oooil_CCDQuat$ccd_quat_t, 0, jl_Object, [], 0, 3, 0, 0,
oktgg_GLTFAnimation$Companion, 0, jl_Object, [], 4, 3, 0, ["$vec4", function(var_1, var_2) { return oktgg_GLTFAnimation$Companion_vec4(this, var_1, var_2); }, "$vec3", function(var_1, var_2) { return oktgg_GLTFAnimation$Companion_vec3(this, var_1, var_2); }],
oooip_DxWorldProcessMemoryManager, 0, jl_Object, [], 0, 3, 0, 0,
okttsg_GBufferTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return okttsg_GBufferTest_getName(this); }, "$testMain", function() { okttsg_GBufferTest_testMain(this); }],
oktga_IAnimTrack$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
jl_NoClassDefFoundError, 0, jl_LinkageError, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue(this); }],
otci_CharFlow, 0, jl_Object, [], 0, 3, 0, 0,
jur_RangeSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_RangeSet_accepts(this, var_1, var_2); }, "$first", function(var_1) { return jur_RangeSet_first(this, var_1); }, "$getChars0", function() { return jur_RangeSet_getChars(this); }],
otjt_Float32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
oom_DQuaternionC, 0, jl_Object, [], 3, 3, 0, 0,
oom_DQuaternion, "DQuaternion", 19, jl_Object, [oom_DQuaternionC], 0, 3, 0, ["$toString", function() { return oom_DQuaternion_toString(this); }, "$set17", function(var_1, var_2, var_3, var_4) { return oom_DQuaternion_set0(this, var_1, var_2, var_3, var_4); }, "$set51", function(var_1) { return oom_DQuaternion_set1(this, var_1); }, "$scale4", function(var_1) { return oom_DQuaternion_scale(this, var_1); }, "$get01", function() { return oom_DQuaternion_get0(this); }, "$get10", function() { return oom_DQuaternion_get1(this);
}, "$get20", function() { return oom_DQuaternion_get2(this); }, "$get30", function() { return oom_DQuaternion_get3(this); }, "$set00", function(var_1) { oom_DQuaternion_set00(this, var_1); }, "$set15", function(var_1) { oom_DQuaternion_set10(this, var_1); }, "$set20", function(var_1) { oom_DQuaternion_set2(this, var_1); }, "$set30", function(var_1) { oom_DQuaternion_set3(this, var_1); }, "$sum", function(var_1, var_2, var_3) { oom_DQuaternion_sum(this, var_1, var_2, var_3); }, "$set9", function(var_1, var_2)
{ oom_DQuaternion_set(this, var_1, var_2); }, "$lengthSquared", function() { return oom_DQuaternion_lengthSquared(this); }, "$length2", function() { return oom_DQuaternion_length(this); }, "$safeNormalize4", function() { return oom_DQuaternion_safeNormalize4(this); }, "$normalize0", function() { oom_DQuaternion_normalize(this); }],
oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1, 0, jl_Object, [oooip_DxUtil$alloc_block_fn_t], 4, 0, 0, ["$run4", function(var_1) { return oooi_DxWorld$DWorldStepMemoryFunctionsInfo$1_run(this, var_1); }],
oooip_DxUtil$shrink_block_fn_t, 0, jl_Object, [], 3, 3, 0, 0,
oooi_DxWorld$DWorldStepMemoryFunctionsInfo$2, 0, jl_Object, [oooip_DxUtil$shrink_block_fn_t], 4, 0, 0, 0,
oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3, 0, jl_Object, [oooip_DxUtil$free_block_fn_t], 4, 0, 0, ["$run3", function(var_1, var_2) { oooi_DxWorld$DWorldStepMemoryFunctionsInfo$3_run(this, var_1, var_2); }],
oktt_Attachments, 0, jl_Object, [], 4, 3, oktt_Attachments_$callClinit, ["$color0", function(var_1, var_2, var_3, var_4, var_5, var_6) { return oktt_Attachments_color(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$depth1", function(var_1, var_2, var_3, var_4, var_5) { return oktt_Attachments_depth(this, var_1, var_2, var_3, var_4, var_5); }, "$depthRenderBuffer", function(var_1, var_2) { return oktt_Attachments_depthRenderBuffer(this, var_1, var_2); }, "$stencilRenderBuffer", function(var_1, var_2) {
return oktt_Attachments_stencilRenderBuffer(this, var_1, var_2); }, "$depthStencilRenderBuffer", function(var_1, var_2) { return oktt_Attachments_depthStencilRenderBuffer(this, var_1, var_2); }],
oktsg_MergeVec4$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktm_Plane$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktm_IMesh$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oooi_DxCapsule$CollideCapsulePlane, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideCapsulePlane", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxCapsule$CollideCapsulePlane_dCollideCapsulePlane(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxCapsule$CollideCapsulePlane_dColliderFn(this, var_1, var_2, var_3, var_4); }],
okti_MOUSE, 0, jl_Object, [okti_IMouse], 4, 3, okti_MOUSE_$callClinit, ["$setApi7", function(var_1) { okti_MOUSE_setApi(this, var_1); }, "$getX", function() { return okti_MOUSE_getX(this); }, "$getY", function() { return okti_MOUSE_getY(this); }, "$addListener0", function(var_1) { okti_MOUSE_addListener(this, var_1); }, "$reset1", function() { okti_MOUSE_reset(this); }],
oktgn_AdapterTransformNode, 0, jl_Object, [oktgn_ITransformNode], 0, 3, oktgn_AdapterTransformNode_$callClinit, ["$getName", function() { return oktgn_AdapterTransformNode_getName(this); }, "$setName", function(var_1) { oktgn_AdapterTransformNode_setName(this, var_1); }, "$getPosition0", function() { return oktgn_AdapterTransformNode_getPosition(this); }, "$getRotation0", function() { return oktgn_AdapterTransformNode_getRotation(this); }, "$getScale0", function() { return oktgn_AdapterTransformNode_getScale(this);
}, "$getWorldMatrix", function() { return oktgn_AdapterTransformNode_getWorldMatrix(this); }, "$getParentNode", function() { return oktgn_AdapterTransformNode_getParentNode(this); }, "$setParentNode", function(var_1) { oktgn_AdapterTransformNode_setParentNode(this, var_1); }, "$getChildNodes0", function() { return oktgn_AdapterTransformNode_getChildNodes(this); }, "$clear", function() { oktgn_AdapterTransformNode_clear(this); }, "$getPosition4", function(var_1, var_2) { return oktgn_AdapterTransformNode_getPosition0(this,
var_1, var_2); }, "$getWorldMatrix0", function(var_1, var_2) { return oktgn_AdapterTransformNode_getWorldMatrix0(this, var_1, var_2); }, "$removeChildNode0", function(var_1) { oktgn_AdapterTransformNode_removeChildNode(this, var_1); }, "$set74", function(var_1) { return oktgn_AdapterTransformNode_set(this, var_1); }, "$updateTransform0", function(var_1) { oktgn_AdapterTransformNode_updateTransform(this, var_1); }],
jnc_MalformedInputException, "MalformedInputException", 8, jnc_CharacterCodingException, [], 0, 3, 0, ["$getMessage", function() { return jnc_MalformedInputException_getMessage(this); }],
oktsg_ShaderNodeLink, 0, jl_Object, [], 4, 3, 0, ["$getNode0", function() { return oktsg_ShaderNodeLink_getNode(this); }, "$getInputName", function() { return oktsg_ShaderNodeLink_getInputName(this); }],
oooi_DxHeightfieldData, 0, jl_Object, [ooo_DHeightfieldData], 0, 3, 0, 0,
oktgg_GLTFAnimation$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAnimation$read$1_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTFAnimation$read$1_invoke0(this, var_1); }],
okttsg_SSAOTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return okttsg_SSAOTest_getName(this); }, "$testMain", function() { okttsg_SSAOTest_testMain(this); }],
oktp_IRigidBody$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0]);
$rt_metadata([oktt_SoundInstance, 0, jl_Object, [], 4, 3, 0, ["$getElement", function() { return oktt_SoundInstance_getElement(this); }, "$getGain", function() { return oktt_SoundInstance_getGain(this); }, "$getPanner", function() { return oktt_SoundInstance_getPanner(this); }],
jm_BigInteger, 0, jl_Number, [jl_Comparable, ji_Serializable], 0, 3, jm_BigInteger_$callClinit, ["$abs2", function() { return jm_BigInteger_abs(this); }, "$negate", function() { return jm_BigInteger_negate(this); }, "$add11", function(var_1) { return jm_BigInteger_add(this, var_1); }, "$subtract1", function(var_1) { return jm_BigInteger_subtract(this, var_1); }, "$signum0", function() { return jm_BigInteger_signum(this); }, "$shiftRight0", function(var_1) { return jm_BigInteger_shiftRight(this, var_1); }, "$shiftLeft0",
function(var_1) { return jm_BigInteger_shiftLeft(this, var_1); }, "$shiftLeftOneBit1", function() { return jm_BigInteger_shiftLeftOneBit(this); }, "$bitLength3", function() { return jm_BigInteger_bitLength(this); }, "$testBit", function(var_1) { return jm_BigInteger_testBit(this, var_1); }, "$getLowestSetBit", function() { return jm_BigInteger_getLowestSetBit(this); }, "$intValue", function() { return jm_BigInteger_intValue(this); }, "$longValue", function() { return jm_BigInteger_longValue(this); }, "$compareTo7",
function(var_1) { return jm_BigInteger_compareTo(this, var_1); }, "$hashCode", function() { return jm_BigInteger_hashCode(this); }, "$equals0", function(var_1) { return jm_BigInteger_equals(this, var_1); }, "$equalsArrays", function(var_1) { return jm_BigInteger_equalsArrays(this, var_1); }, "$multiply", function(var_1) { return jm_BigInteger_multiply(this, var_1); }, "$pow0", function(var_1) { return jm_BigInteger_pow(this, var_1); }, "$divideAndRemainder", function(var_1) { return jm_BigInteger_divideAndRemainder(this,
var_1); }, "$divide0", function(var_1) { return jm_BigInteger_divide(this, var_1); }, "$cutOffLeadingZeroes", function() { jm_BigInteger_cutOffLeadingZeroes(this); }, "$isOne", function() { return jm_BigInteger_isOne(this); }, "$getFirstNonzeroDigit", function() { return jm_BigInteger_getFirstNonzeroDigit(this); }],
jur_AbstractCharClass$LazyNonDigit, 0, jur_AbstractCharClass$LazyDigit, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyNonDigit_computeValue(this); }],
oooi_Objects_H$CloneableParameter, 0, jl_Object, [jl_Cloneable], 0, 0, 0, 0,
oooi_Objects_H$dxContactParameters, 0, oooi_Objects_H$CloneableParameter, [], 0, 3, 0, 0,
jur_AbstractCharClass$1, "AbstractCharClass$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$1_contains(this, var_1); }],
jur_AbstractCharClass$2, "AbstractCharClass$2", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$2_contains(this, var_1); }],
jur_PossessiveCompositeQuantifierSet, 0, jur_CompositeQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PossessiveCompositeQuantifierSet_matches(this, var_1, var_2, var_3); }],
oooi_CollideCylinderBox, 0, oooi_DxCollisionUtil, [ooo_DColliderFn], 0, 0, 0, ["$dCollideCylinderBox", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollideCylinderBox_dCollideCylinderBox(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollideCylinderBox_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktga_AnimPlayer$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oooi_DxBox$TstClass, 0, jl_Object, [], 0, 0, 0, 0,
ooo_OdeConfig, 0, jl_Object, [], 0, 3, ooo_OdeConfig_$callClinit, 0,
oktgg_GLTFSampler$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFSampler$read$1_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFSampler$read$1_invoke0(this, var_1); }],
oktgg_GLTFAnimation$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAnimation$read$2_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTFAnimation$read$2_invoke0(this, var_1); }],
otjw_AudioContext, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
oktgg_GLTFSampler$read$4, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFSampler$read$4_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFSampler$read$4_invoke0(this, var_1); }],
jur_UCISequenceSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_UCISequenceSet_accepts(this, var_1, var_2); }],
oktgg_GLTFSampler$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFSampler$read$2_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFSampler$read$2_invoke0(this, var_1); }],
jur_AbstractCharClass$LazyJavaDefined$1, "AbstractCharClass$LazyJavaDefined$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaDefined$1_contains(this, var_1); }],
oktgg_GLTFSampler$read$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFSampler$read$3_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFSampler$read$3_invoke0(this, var_1); }],
oktsg_ToneMapNode$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktgl_DirectionalLight, 0, jl_Object, [oktgl_ILight], 4, 3, oktgl_DirectionalLight_$callClinit, ["$getLightType", function() { return oktgl_DirectionalLight_getLightType(this); }, "$getShadowMaps", function() { return oktgl_DirectionalLight_getShadowMaps(this); }, "$setShadowMaps", function(var_1) { oktgl_DirectionalLight_setShadowMaps(this, var_1); }, "$getViewProjectionMatrices", function() { return oktgl_DirectionalLight_getViewProjectionMatrices(this); }, "$setViewProjectionMatrices", function(var_1) { oktgl_DirectionalLight_setViewProjectionMatrices(this,
var_1); }, "$getShadowCascadesNum", function() { return oktgl_DirectionalLight_getShadowCascadesNum(this); }, "$getShadowCascadeEnd", function() { return oktgl_DirectionalLight_getShadowCascadeEnd(this); }, "$getLightPositionOffset", function() { return oktgl_DirectionalLight_getLightPositionOffset(this); }, "$setLightPositionOffset", function(var_1) { oktgl_DirectionalLight_setLightPositionOffset(this, var_1); }, "$setupShadowMaps", function(var_1, var_2) { oktgl_DirectionalLight_setupShadowMaps(this, var_1,
var_2); }, "$renderShadowMaps", function(var_1) { oktgl_DirectionalLight_renderShadowMaps(this, var_1); }, "$getLightIntensity", function() { return oktgl_DirectionalLight_getLightIntensity(this); }, "$setLightIntensity", function(var_1) { oktgl_DirectionalLight_setLightIntensity(this, var_1); }, "$getColor0", function() { return oktgl_DirectionalLight_getColor(this); }, "$getDirection", function() { return oktgl_DirectionalLight_getDirection(this); }, "$isLightEnabled1", function() { return oktgl_DirectionalLight_isLightEnabled(this);
}, "$isShadowEnabled0", function() { return oktgl_DirectionalLight_isShadowEnabled(this); }, "$setShadowEnabled", function(var_1) { oktgl_DirectionalLight_setShadowEnabled(this, var_1); }],
oooi_Objects_H$dxDampingParameters, 0, jl_Object, [jl_Cloneable], 0, 3, 0, ["$clone3", function() { return oooi_Objects_H$dxDampingParameters_clone(this); }],
kt_DelimitedRangesSequence, 0, jl_Object, [ks_Sequence], 4, 0, 0, ["$iterator", function() { return kt_DelimitedRangesSequence_iterator(this); }],
oktgg_GLTFAccessor$read$6, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAccessor$read$6_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTFAccessor$read$6_invoke0(this, var_1); }],
oktgg_GLTFAccessor$read$5, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAccessor$read$5_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTFAccessor$read$5_invoke0(this, var_1); }],
oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA, 0, jl_Object, [], 0, 3, 0, ["$getPoint", function() { return oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA_getPoint(this); }, "$getNormal1", function() { return oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA_getNormal(this); }, "$getU", function() { return oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA_getU(this); }, "$getV", function() { return oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA_getV(this); }, "$getTParam", function() { return oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA_getTParam(this);
}, "$getFaceID", function() { return oooig_GimTriCollision$GIM_TRIANGLE_RAY_CONTACT_DATA_getFaceID(this); }],
oktmb_FrustumMeshBuilder, 0, oktmb_MeshBuilder, [], 4, 3, oktmb_FrustumMeshBuilder_$callClinit, ["$build", function(var_1) { return oktmb_FrustumMeshBuilder_build(this, var_1); }],
ooo_DRay, 0, jl_Object, [ooo_DGeom], 3, 3, 0, 0,
oooi_DxRay, 0, oooi_DxGeom, [ooo_DRay], 0, 3, 0, 0,
oktg_IWorld$Companion, 0, jl_Object, [], 4, 3, oktg_IWorld$Companion_$callClinit, ["$getDefault1", function() { return oktg_IWorld$Companion_getDefault(this); }],
oktgg_GLTFAccessor$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAccessor$read$2_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFAccessor$read$2_invoke0(this, var_1); }],
oktgg_GLTFAccessor$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAccessor$read$1_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFAccessor$read$1_invoke0(this, var_1); }],
oktgg_GLTFAccessor$read$4, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAccessor$read$4_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTFAccessor$read$4_invoke0(this, var_1); }],
oktgg_GLTFAccessor$read$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFAccessor$read$3_invoke(this, var_1); }, "$invoke18", function(var_1) { oktgg_GLTFAccessor$read$3_invoke0(this, var_1); }],
jur_EmptySet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_EmptySet_accepts(this, var_1, var_2); }, "$find", function(var_1, var_2, var_3) { return jur_EmptySet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_EmptySet_findBack(this, var_1, var_2, var_3, var_4); }, "$hasConsumed", function(var_1) { return jur_EmptySet_hasConsumed(this, var_1); }],
oktu_LittleEndianInputStream, 0, ji_FilterInputStream, [ji_DataInput], 4, 3, 0, ["$readByte", function() { return oktu_LittleEndianInputStream_readByte(this); }, "$readInt", function() { return oktu_LittleEndianInputStream_readInt(this); }],
oooi_OdeInit$EODEINITMODE, 0, jl_Enum, [], 12, 0, oooi_OdeInit$EODEINITMODE_$callClinit, 0,
oktt_TvmKB$2, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmKB$2_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmKB$2_handleEvent$exported$0(this, var_1); }],
oktt_TvmKB$1, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmKB$1_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmKB$1_handleEvent$exported$0(this, var_1); }],
oktt_TvmKB$3, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmKB$3_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmKB$3_handleEvent$exported$0(this, var_1); }],
oooi_CollisionLibccdCylinderStacking, 0, jl_Object, [], 0, 3, 0, 0,
oktgg_GLTF$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$2_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTF$read$2_invoke0(this, var_1); }],
oktgg_GLTF$read$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$3_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTF$read$3_invoke0(this, var_1); }],
oktgg_GLTF$read$4, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$4_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTF$read$4_invoke0(this, var_1); }],
oktgg_GLTF$read$5, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$5_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTF$read$5_invoke0(this, var_1); }],
jl_NoSuchMethodError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0,
oktgg_GLTF$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTF$read$1_invoke0(this, var_1); }],
oktp_IBoxShape, 0, jl_Object, [oktp_IShape], 3, 3, 0, 0,
jl_ArrayIndexOutOfBoundsException, 0, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0]);
$rt_metadata([oktts_CascadedShadowMappingBaseTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktts_CascadedShadowMappingBaseTest$testMain$1_invoke(this); }, "$invoke2", function() { oktts_CascadedShadowMappingBaseTest$testMain$1_invoke0(this); }],
okttm_MeshTest$testMain$2, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return okttm_MeshTest$testMain$2_invoke(this); }, "$invoke2", function() { okttm_MeshTest$testMain$2_invoke0(this); }],
juca_AtomicLong, 0, jl_Number, [ji_Serializable], 0, 3, 0, ["$get9", function() { return juca_AtomicLong_get(this); }, "$compareAndSet", function(var_1, var_2) { return juca_AtomicLong_compareAndSet(this, var_1, var_2); }],
oooig_GimBitSet, 0, jl_Object, [], 0, 3, 0, ["$GIM_BITSET_CLEAR_ALL", function() { oooig_GimBitSet_GIM_BITSET_CLEAR_ALL(this); }, "$GIM_BITSET_SET", function(var_1) { oooig_GimBitSet_GIM_BITSET_SET(this, var_1); }, "$GIM_BITSET_GET", function(var_1) { return oooig_GimBitSet_GIM_BITSET_GET(this, var_1); }],
oktt_TvmIMG$load$2, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmIMG$load$2_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmIMG$load$2_handleEvent$exported$0(this, var_1); }],
ks_SequencesKt__SequencesJVMKt, 0, ks_SequencesKt__SequenceBuilderKt, [], 0, 0, 0, 0,
ks_SequencesKt__SequencesKt, 0, ks_SequencesKt__SequencesJVMKt, [], 0, 0, 0, 0,
ks_SequencesKt___SequencesJvmKt, 0, ks_SequencesKt__SequencesKt, [], 0, 0, 0, 0,
ks_SequencesKt___SequencesKt, 0, ks_SequencesKt___SequencesJvmKt, [], 0, 0, 0, 0,
ks_SequencesKt, 0, ks_SequencesKt___SequencesKt, [], 4, 3, 0, 0,
oktt_TvmIMG$load$1, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmIMG$load$1_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmIMG$load$1_handleEvent$exported$0(this, var_1); }],
oktga_AnimPlayer$Companion$animationPool$1, 0, kji_Lambda, [kjf_Function0], 4, 0, oktga_AnimPlayer$Companion$animationPool$1_$callClinit, ["$invoke6", function() { return oktga_AnimPlayer$Companion$animationPool$1_invoke(this); }, "$invoke37", function() { return oktga_AnimPlayer$Companion$animationPool$1_invoke0(this); }],
oktt_TvmIMG$load$4, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmIMG$load$4_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmIMG$load$4_handleEvent$exported$0(this, var_1); }],
oooi_CollideCylinderBox$sCylinderBoxData, 0, jl_Object, [], 0, 0, 0, ["$_cldInitCylinderBox", function() { oooi_CollideCylinderBox$sCylinderBoxData__cldInitCylinderBox(this); }, "$_cldTestAxis0", function(var_1, var_2) { return oooi_CollideCylinderBox$sCylinderBoxData__cldTestAxis(this, var_1, var_2); }, "$_cldTestEdgeCircleAxis", function(var_1, var_2, var_3, var_4) { return oooi_CollideCylinderBox$sCylinderBoxData__cldTestEdgeCircleAxis(this, var_1, var_2, var_3, var_4); }, "$_cldTestSeparatingAxes0", function()
{ return oooi_CollideCylinderBox$sCylinderBoxData__cldTestSeparatingAxes(this); }, "$_cldClipCylinderToBox", function() { return oooi_CollideCylinderBox$sCylinderBoxData__cldClipCylinderToBox(this); }, "$_cldClipBoxToCylinder", function() { oooi_CollideCylinderBox$sCylinderBoxData__cldClipBoxToCylinder(this); }, "$PerformCollisionChecking", function() { return oooi_CollideCylinderBox$sCylinderBoxData_PerformCollisionChecking(this); }],
oktt_TvmIMG$load$3, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { oktt_TvmIMG$load$3_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return oktt_TvmIMG$load$3_handleEvent$exported$0(this, var_1); }],
oktgg_GLTF$read$6, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$6_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTF$read$6_invoke0(this, var_1); }],
oktgg_GLTF$read$7, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$7_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTF$read$7_invoke0(this, var_1); }],
oktgg_GLTF$read$8, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$8_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTF$read$8_invoke0(this, var_1); }],
oktgg_GLTF$read$9, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$9_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_GLTF$read$9_invoke0(this, var_1); }],
oktt_MouseTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktt_MouseTest_getName(this); }, "$testMain", function() { oktt_MouseTest_testMain(this); }],
ju_Random, 0, jl_Object, [ji_Serializable], 0, 3, 0, ["$next9", function(var_1) { return ju_Random_next(this, var_1); }, "$nextInt", function() { return ju_Random_nextInt(this); }, "$nextFloat", function() { return ju_Random_nextFloat(this); }, "$nextDouble", function() { return ju_Random_nextDouble(this); }],
cgcj_Jsoner$2, 0, jl_Object, [], 32, 0, cgcj_Jsoner$2_$callClinit, 0,
jnc_CharsetDecoder, 0, jl_Object, [], 1, 3, 0, ["$onMalformedInput", function(var_1) { return jnc_CharsetDecoder_onMalformedInput(this, var_1); }, "$implOnMalformedInput", function(var_1) { jnc_CharsetDecoder_implOnMalformedInput(this, var_1); }, "$onUnmappableCharacter", function(var_1) { return jnc_CharsetDecoder_onUnmappableCharacter(this, var_1); }, "$implOnUnmappableCharacter", function(var_1) { jnc_CharsetDecoder_implOnUnmappableCharacter(this, var_1); }, "$decode2", function(var_1, var_2, var_3) { return jnc_CharsetDecoder_decode0(this,
var_1, var_2, var_3); }, "$flush1", function(var_1) { return jnc_CharsetDecoder_flush(this, var_1); }, "$reset2", function() { return jnc_CharsetDecoder_reset(this); }, "$decode", function(var_1) { return jnc_CharsetDecoder_decode(this, var_1); }, "$expand0", function(var_1) { return jnc_CharsetDecoder_expand(this, var_1); }, "$implFlush0", function(var_1) { return jnc_CharsetDecoder_implFlush(this, var_1); }, "$implReset", function() { jnc_CharsetDecoder_implReset(this); }],
jnci_BufferedDecoder, 0, jnc_CharsetDecoder, [], 1, 3, 0, ["$decodeLoop", function(var_1, var_2) { return jnci_BufferedDecoder_decodeLoop(this, var_1, var_2); }],
jnci_UTF8Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, ["$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Decoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$checkMidByte", function(var_1) { return jnci_UTF8Decoder_checkMidByte(this, var_1); }],
oktsp_MotionBlur, 0, oktsp_PostShader, [], 4, 3, oktsp_MotionBlur_$callClinit, ["$getSceneColorMapUnit", function() { return oktsp_MotionBlur_getSceneColorMapUnit(this); }, "$getVelocityMapUnit", function() { return oktsp_MotionBlur_getVelocityMapUnit(this); }, "$render6", function(var_1, var_2) { oktsp_MotionBlur_render(this, var_1, var_2); }, "$getColorMap", function() { return oktsp_MotionBlur_getColorMap(this); }, "$getVelocityMap", function() { return oktsp_MotionBlur_getVelocityMap(this); }],
oktsg_AttributeNode$Companion, 0, jl_Object, [], 4, 3, 0, 0,
jur_AbstractCharClass$LazyJavaLetter$1, "AbstractCharClass$LazyJavaLetter$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaLetter$1_contains(this, var_1); }],
oktm_ScreenQuad, 0, jl_Object, [oktm_IScreenQuad], 0, 3, 0, ["$getMesh", function() { return oktm_ScreenQuad_getMesh(this); }, "$render10", function(var_1, var_2, var_3, var_4) { oktm_ScreenQuad_render(this, var_1, var_2, var_3, var_4); }],
oooi_DxTriMesh$1, 0, jl_Object, [], 32, 0, oooi_DxTriMesh$1_$callClinit, 0,
ooo_DMatrix, 0, ooo_DMisc, [], 0, 3, 0, 0,
ooo_DRotation, 0, ooo_DMatrix, [], 0, 3, 0, 0,
oooic_FILE, 0, jl_Object, [], 0, 3, 0, 0,
oktgc_CameraAdapter$Companion, 0, jl_Object, [], 4, 3, 0, 0,
ooo_OdeConfig$TRIMESH, 0, jl_Enum, [], 12, 3, ooo_OdeConfig$TRIMESH_$callClinit, 0,
oooi_DxWorld$2, 0, jl_Object, [jl_Runnable], 0, 0, 0, ["$run", function() { oooi_DxWorld$2_run(this); }],
jur_AbstractCharClass$LazyUpper, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyUpper_computeValue(this); }],
oooi_DxWorld$1, 0, jl_Object, [jl_Runnable], 0, 0, 0, ["$run", function() { oooi_DxWorld$1_run(this); }],
ju_HashMap$KeyIterator, 0, ju_HashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, ["$next", function() { return ju_HashMap$KeyIterator_next(this); }],
oooil_CCDVec3$ccd_vec3_t, 0, jl_Object, [], 0, 3, 0, ["$set42", function(var_1, var_2, var_3) { oooil_CCDVec3$ccd_vec3_t_set(this, var_1, var_2, var_3); }, "$get01", function() { return oooil_CCDVec3$ccd_vec3_t_get0(this); }, "$get10", function() { return oooil_CCDVec3$ccd_vec3_t_get1(this); }, "$get20", function() { return oooil_CCDVec3$ccd_vec3_t_get2(this); }],
oktgg_GLTF$read$8$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$8$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTF$read$8$1_invoke0(this, var_1); }],
jl_Math$ExponentConstants, 0, jl_Object, [], 0, 0, jl_Math$ExponentConstants_$callClinit, 0,
oktt_CascadedShadowMatricesTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktt_CascadedShadowMatricesTest_getName(this); }, "$getSceneCameraFrustumMeshes", function() { return oktt_CascadedShadowMatricesTest_getSceneCameraFrustumMeshes(this); }, "$getCascadeFrustumMeshes", function() { return oktt_CascadedShadowMatricesTest_getCascadeFrustumMeshes(this); }, "$getTmpVec", function() { return oktt_CascadedShadowMatricesTest_getTmpVec(this); }, "$getSceneCamera", function() { return oktt_CascadedShadowMatricesTest_getSceneCamera(this);
}, "$updateFrustums", function() { oktt_CascadedShadowMatricesTest_updateFrustums(this); }, "$testMain", function() { oktt_CascadedShadowMatricesTest_testMain(this); }],
kt_StringsKt__StringsKt$rangesDelimitedBy$2, 0, kji_Lambda, [kjf_Function2], 4, 0, 0, ["$invoke11", function(var_1, var_2) { return kt_StringsKt__StringsKt$rangesDelimitedBy$2_invoke(this, var_1, var_2); }, "$invoke39", function(var_1, var_2) { return kt_StringsKt__StringsKt$rangesDelimitedBy$2_invoke0(this, var_1, var_2); }],
kt_StringsKt__StringsKt$rangesDelimitedBy$4, 0, kji_Lambda, [kjf_Function2], 4, 0, 0, ["$invoke11", function(var_1, var_2) { return kt_StringsKt__StringsKt$rangesDelimitedBy$4_invoke(this, var_1, var_2); }, "$invoke39", function(var_1, var_2) { return kt_StringsKt__StringsKt$rangesDelimitedBy$4_invoke0(this, var_1, var_2); }],
jur_MultiLineSOLSet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_MultiLineSOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_MultiLineSOLSet_hasConsumed(this, var_1); }],
oooig_GimAABBSet, 0, jl_Object, [], 0, 3, oooig_GimAABBSet_$callClinit, ["$getGlobalBound", function() { return oooig_GimAABBSet_getGlobalBound(this); }, "$GIM_CONVERT_VEC3F_GUINT_XZ", function(var_1, var_2) { return oooig_GimAABBSet_GIM_CONVERT_VEC3F_GUINT_XZ(this, var_1, var_2); }, "$GIM_CONVERT_VEC3F_GUINT_XZ_UPPER", function(var_1, var_2) { return oooig_GimAABBSet_GIM_CONVERT_VEC3F_GUINT_XZ_UPPER(this, var_1, var_2); }, "$gim_aabbset_calc_global_bound", function() { oooig_GimAABBSet_gim_aabbset_calc_global_bound(this);
}, "$gim_aabbset_sort", function(var_1) { oooig_GimAABBSet_gim_aabbset_sort(this, var_1); }, "$gim_aabbset_update", function() { oooig_GimAABBSet_gim_aabbset_update(this); }, "$gim_aabbset_box_collision", function(var_1, var_2) { oooig_GimAABBSet_gim_aabbset_box_collision(this, var_1, var_2); }, "$gim_aabbset_ray_collision", function(var_1, var_2, var_3, var_4) { oooig_GimAABBSet_gim_aabbset_ray_collision(this, var_1, var_2, var_3, var_4); }, "$at1", function(var_1) { return oooig_GimAABBSet_at(this, var_1);
}],
ooot_Atomics, 0, jl_Object, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyLower, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyLower_computeValue(this); }],
oktgg_GLTFPrimitive$loadIndices$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFPrimitive$loadIndices$1_invoke(this, var_1); }, "$invoke17", function(var_1) { oktgg_GLTFPrimitive$loadIndices$1_invoke0(this, var_1); }]]);
$rt_metadata([ju_HashMap$HashMapEntrySet, 0, ju_AbstractSet, [], 0, 0, 0, ["$hashMap", function() { return ju_HashMap$HashMapEntrySet_hashMap(this); }, "$iterator", function() { return ju_HashMap$HashMapEntrySet_iterator(this); }],
ju_LinkedHashMap$LinkedHashMapEntrySet, 0, ju_HashMap$HashMapEntrySet, [], 4, 0, 0, ["$iterator", function() { return ju_LinkedHashMap$LinkedHashMapEntrySet_iterator(this); }],
kc_EmptyList, 0, jl_Object, [ju_List, ji_Serializable, ju_RandomAccess, kjim_KMappedMarker], 4, 3, kc_EmptyList_$callClinit, ["$getSize", function() { return kc_EmptyList_getSize(this); }, "$size", function() { return kc_EmptyList_size(this); }, "$get35", function(var_1) { return kc_EmptyList_get(this, var_1); }, "$get1", function(var_1) { return kc_EmptyList_get0(this, var_1); }],
oooi_Objects_H$dxAutoDisable, 0, jl_Object, [jl_Cloneable], 0, 3, 0, ["$clone2", function() { return oooi_Objects_H$dxAutoDisable_clone(this); }],
jur_UCISupplCharSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_UCISupplCharSet_accepts(this, var_1, var_2); }],
oktgl_PointLight, 0, jl_Object, [oktgl_ILight], 4, 3, 0, 0,
jur_AbstractCharClass$LazyRange, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyRange_computeValue(this); }],
ooo_DBody, 0, jl_Object, [], 3, 3, 0, 0,
oooi_DxBody, 0, oooi_DObject, [ooo_DBody, jl_Cloneable], 0, 3, 0, ["$dBodySetData", function(var_1) { oooi_DxBody_dBodySetData(this, var_1); }, "$dBodyGetData", function() { return oooi_DxBody_dBodyGetData(this); }, "$dBodySetPosition0", function(var_1, var_2, var_3) { oooi_DxBody_dBodySetPosition(this, var_1, var_2, var_3); }, "$dBodySetPosition", function(var_1) { oooi_DxBody_dBodySetPosition0(this, var_1); }, "$dBodyGetPosition", function() { return oooi_DxBody_dBodyGetPosition(this); }, "$dBodyGetRotation",
function() { return oooi_DxBody_dBodyGetRotation(this); }, "$dBodyGetQuaternion", function() { return oooi_DxBody_dBodyGetQuaternion(this); }, "$dBodySetMass", function(var_1) { oooi_DxBody_dBodySetMass(this, var_1); }, "$dBodyEnable_noAdis", function() { oooi_DxBody_dBodyEnable_noAdis(this); }, "$dBodyIsEnabled", function() { return oooi_DxBody_dBodyIsEnabled(this); }, "$dBodySetGravityMode", function(var_1) { oooi_DxBody_dBodySetGravityMode(this, var_1); }, "$dBodySetAutoDisableAverageSamplesCount", function(var_1)
{ oooi_DxBody_dBodySetAutoDisableAverageSamplesCount(this, var_1); }, "$dBodySetAutoDisableFlag", function(var_1) { oooi_DxBody_dBodySetAutoDisableFlag(this, var_1); }, "$dBodySetAutoDisableDefaults", function() { oooi_DxBody_dBodySetAutoDisableDefaults(this); }, "$dBodySetDampingDefaults", function() { oooi_DxBody_dBodySetDampingDefaults(this); }, "$dxStepBody", function(var_1) { oooi_DxBody_dxStepBody(this, var_1); }, "$posr", function() { return oooi_DxBody_posr(this); }, "$setData", function(var_1) { oooi_DxBody_setData(this,
var_1); }, "$getData", function() { return oooi_DxBody_getData(this); }, "$setPosition3", function(var_1, var_2, var_3) { oooi_DxBody_setPosition(this, var_1, var_2, var_3); }, "$getPosition2", function() { return oooi_DxBody_getPosition(this); }, "$getRotation2", function() { return oooi_DxBody_getRotation(this); }, "$setMass", function(var_1) { oooi_DxBody_setMass(this, var_1); }, "$isEnabled1", function() { return oooi_DxBody_isEnabled(this); }, "$isFlagsGyroscopic", function() { return oooi_DxBody_isFlagsGyroscopic(this);
}, "$setGravityMode", function(var_1) { oooi_DxBody_setGravityMode(this, var_1); }],
oktts_MotionBlurBaseTest$testMain$1, 0, jl_Object, [okti_IMouseListener], 4, 3, 0, ["$buttonUp", function(var_1, var_2, var_3, var_4) { oktts_MotionBlurBaseTest$testMain$1_buttonUp(this, var_1, var_2, var_3, var_4); }, "$buttonDown0", function(var_1, var_2, var_3, var_4) { oktts_MotionBlurBaseTest$testMain$1_buttonDown(this, var_1, var_2, var_3, var_4); }, "$dragged0", function(var_1, var_2, var_3) { oktts_MotionBlurBaseTest$testMain$1_dragged(this, var_1, var_2, var_3); }, "$moved0", function(var_1, var_2)
{ oktts_MotionBlurBaseTest$testMain$1_moved(this, var_1, var_2); }, "$scrolled0", function(var_1) { oktts_MotionBlurBaseTest$testMain$1_scrolled(this, var_1); }],
oktts_MotionBlurBaseTest$testMain$2, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktts_MotionBlurBaseTest$testMain$2_invoke(this); }, "$invoke2", function() { oktts_MotionBlurBaseTest$testMain$2_invoke0(this); }],
okttm_MeshCubeTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return okttm_MeshCubeTest_getName(this); }, "$testMain", function() { okttm_MeshCubeTest_testMain(this); }],
jur_UCISupplRangeSet, 0, jur_SupplRangeSet, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_UCISupplRangeSet_contains(this, var_1); }],
kji_FloatCompanionObject, 0, jl_Object, [], 4, 3, kji_FloatCompanionObject_$callClinit, ["$getMIN_VALUE", function() { return kji_FloatCompanionObject_getMIN_VALUE(this); }, "$getMAX_VALUE", function() { return kji_FloatCompanionObject_getMAX_VALUE(this); }],
oom_DMatrix3C, 0, jl_Object, [], 3, 3, 0, 0,
oooil_CCD$ccd_support_fn, 0, jl_Object, [], 3, 3, 0, 0,
oooi_CollisionLibccd$1, 0, jl_Object, [oooil_CCD$ccd_support_fn], 4, 0, 0, ["$run1", function(var_1, var_2, var_3) { oooi_CollisionLibccd$1_run(this, var_1, var_2, var_3); }],
oktt_IFrameBufferAttachment, 0, jl_Object, [], 3, 3, 0, 0,
oooi_CollisionLibccd$3, 0, jl_Object, [oooil_CCD$ccd_support_fn], 4, 0, 0, ["$run1", function(var_1, var_2, var_3) { oooi_CollisionLibccd$3_run(this, var_1, var_2, var_3); }],
oooi_CollisionLibccd$2, 0, jl_Object, [oooil_CCD$ccd_support_fn], 4, 0, 0, ["$run1", function(var_1, var_2, var_3) { oooi_CollisionLibccd$2_run(this, var_1, var_2, var_3); }],
oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1_invoke(this); }, "$invoke2", function() { oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1$1_invoke0(this); }],
oooi_DxQuickStep$dxQuickStepperStage4CallContext, 0, jl_Object, [], 0, 0, 0, ["$Initialize5", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { oooi_DxQuickStep$dxQuickStepperStage4CallContext_Initialize(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$AssignLCP_IterationData", function(var_1, var_2) { oooi_DxQuickStep$dxQuickStepperStage4CallContext_AssignLCP_IterationData(this, var_1, var_2); }, "$AssignLCP_fcAllowedThreads", function(var_1, var_2) { oooi_DxQuickStep$dxQuickStepperStage4CallContext_AssignLCP_fcAllowedThreads(this,
var_1, var_2); }, "$ResetSOR_ConstraintsReorderVariables", function(var_1) { oooi_DxQuickStep$dxQuickStepperStage4CallContext_ResetSOR_ConstraintsReorderVariables(this, var_1); }, "$RecordLCP_IterationStart", function(var_1, var_2) { oooi_DxQuickStep$dxQuickStepperStage4CallContext_RecordLCP_IterationStart(this, var_1, var_2); }],
oooi_DxConvex$CollideConvexConvex, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dCollideConvexConvex", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxConvex$CollideConvexConvex_dCollideConvexConvex(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxConvex$CollideConvexConvex_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktpo_GeomContactPair, 0, jl_Object, [], 4, 3, 0, ["$getA0", function() { return oktpo_GeomContactPair_getA(this); }, "$setA0", function(var_1) { oktpo_GeomContactPair_setA(this, var_1); }, "$getB0", function() { return oktpo_GeomContactPair_getB(this); }, "$setB0", function(var_1) { oktpo_GeomContactPair_setB(this, var_1); }, "$getDepth", function() { return oktpo_GeomContactPair_getDepth(this); }, "$setDepth", function(var_1) { oktpo_GeomContactPair_setDepth(this, var_1); }, "$getLifeTime", function() { return oktpo_GeomContactPair_getLifeTime(this);
}, "$setLifeTime", function(var_1) { oktpo_GeomContactPair_setLifeTime(this, var_1); }, "$equals0", function(var_1) { return oktpo_GeomContactPair_equals(this, var_1); }, "$hashCode", function() { return oktpo_GeomContactPair_hashCode(this); }],
oktd_IIntData, 0, jl_Object, [oktd_IDataArray], 3, 3, 0, 0,
oktt_TvmInt32Array, 0, oktt_TvmArrayBufferView, [oktd_IIntData], 4, 3, 0, ["$getSize", function() { return oktt_TvmInt32Array_getSize(this); }, "$get36", function(var_1) { return oktt_TvmInt32Array_get(this, var_1); }, "$get1", function(var_1) { return oktt_TvmInt32Array_get0(this, var_1); }, "$toInt0", function(var_1) { return oktt_TvmInt32Array_toInt(this, var_1); }],
ju_HashMap$1, 0, ju_AbstractSet, [], 0, 0, 0, ["$iterator", function() { return ju_HashMap$1_iterator(this); }],
kji_ArrayIteratorKt, 0, jl_Object, [], 4, 3, 0, 0,
ju_HashMap$2, 0, ju_AbstractCollection, [], 0, 0, 0, ["$contains1", function(var_1) { return ju_HashMap$2_contains(this, var_1); }, "$size", function() { return ju_HashMap$2_size(this); }, "$iterator", function() { return ju_HashMap$2_iterator(this); }],
oooig_GimRadixSort$GimRSortTokenComparator, 0, jl_Object, [], 3, 0, 0, 0,
oktgc_OrbitCameraControl, 0, jl_Object, [], 0, 3, 0, ["$getHelp", function() { return oktgc_OrbitCameraControl_getHelp(this); }, "$listenToMouse", function() { return oktgc_OrbitCameraControl_listenToMouse(this); }, "$update", function(var_1) { oktgc_OrbitCameraControl_update(this, var_1); }, "$buttonDown1", function(var_1, var_2, var_3) { oktgc_OrbitCameraControl_buttonDown(this, var_1, var_2, var_3); }, "$dragged1", function(var_1, var_2) { oktgc_OrbitCameraControl_dragged(this, var_1, var_2); }, "$scrolled1",
function(var_1, var_2, var_3) { oktgc_OrbitCameraControl_scrolled(this, var_1, var_2, var_3); }],
otjde_MouseEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0,
otjb_WindowEventTarget, 0, jl_Object, [otjde_EventTarget, otjde_FocusEventTarget, otjde_MouseEventTarget, otjde_KeyboardEventTarget, otjde_LoadEventTarget], 3, 3, 0, 0,
oooi_CollisionLibccd$5, 0, jl_Object, [oooil_CCD$ccd_support_fn], 4, 0, 0, ["$run1", function(var_1, var_2, var_3) { oooi_CollisionLibccd$5_run(this, var_1, var_2, var_3); }],
oooi_CollisionLibccd$4, 0, jl_Object, [oooil_CCD$ccd_support_fn], 4, 0, 0, ["$run1", function(var_1, var_2, var_3) { oooi_CollisionLibccd$4_run(this, var_1, var_2, var_3); }],
oooi_CollisionLibccd$7, 0, jl_Object, [oooil_CCD$ccd_support_fn], 4, 0, 0, ["$run1", function(var_1, var_2, var_3) { oooi_CollisionLibccd$7_run(this, var_1, var_2, var_3); }],
oooil_CCD$ccd_center_fn, 0, jl_Object, [], 3, 3, 0, 0,
oooi_CollisionLibccd$6, 0, jl_Object, [oooil_CCD$ccd_center_fn], 4, 0, 0, ["$run2", function(var_1, var_2) { oooi_CollisionLibccd$6_run(this, var_1, var_2); }],
oktd_IIntData$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
jl_NegativeArraySizeException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
oktsp_Bloom, 0, jl_Object, [], 4, 3, oktsp_Bloom_$callClinit, ["$getBlurDown", function() { return oktsp_Bloom_getBlurDown(this); }, "$getBlurUp", function() { return oktsp_Bloom_getBlurUp(this); }, "$render2", function(var_1, var_2, var_3, var_4) { oktsp_Bloom_render(this, var_1, var_2, var_3, var_4); }],
oktgg_IGLTFMaterial, 0, jl_Object, [oktgg_IGLTFArrayElement], 3, 3, 0, 0,
oooip_DxStepWorkingMemory, 0, jl_Object, [], 0, 3, 0, ["$SureGetWorldProcessingContext", function() { return oooip_DxStepWorkingMemory_SureGetWorldProcessingContext(this); }, "$GetWorldProcessingContext", function() { return oooip_DxStepWorkingMemory_GetWorldProcessingContext(this); }, "$SureGetMemoryReserveInfo", function() { return oooip_DxStepWorkingMemory_SureGetMemoryReserveInfo(this); }, "$SureGetMemoryManager", function() { return oooip_DxStepWorkingMemory_SureGetMemoryManager(this); }],
oktpo_OdePhysicsWorld$nearCallback$1, 0, jl_Object, [ooo_DGeom$DNearCallback], 4, 0, 0, ["$call", function(var_1, var_2, var_3) { oktpo_OdePhysicsWorld$nearCallback$1_call(this, var_1, var_2, var_3); }],
oooi_DxHeightfield$CollideHeightfield, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideHeightfield", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxHeightfield$CollideHeightfield_dCollideHeightfield(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxHeightfield$CollideHeightfield_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktt_GBuffer, 0, jl_Object, [oktt_IFrameBuffer], 4, 3, 0, ["$getWidth", function() { return oktt_GBuffer_getWidth(this); }, "$getHeight", function() { return oktt_GBuffer_getHeight(this); }, "$getAttachments0", function() { return oktt_GBuffer_getAttachments(this); }, "$getFrameBufferHandle", function() { return oktt_GBuffer_getFrameBufferHandle(this); }, "$isBound2", function() { return oktt_GBuffer_isBound(this); }, "$setBound", function(var_1) { oktt_GBuffer_setBound(this, var_1); }, "$getColorMap", function()
{ return oktt_GBuffer_getColorMap(this); }, "$getNormalMap", function() { return oktt_GBuffer_getNormalMap(this); }, "$getPositionMap", function() { return oktt_GBuffer_getPositionMap(this); }, "$getDepthMap", function() { return oktt_GBuffer_getDepthMap(this); }, "$buildAttachments", function() { oktt_GBuffer_buildAttachments(this); }, "$initBuffersOrder0", function(var_1) { oktt_GBuffer_initBuffersOrder(this, var_1); }, "$bind8", function(var_1) { oktt_GBuffer_bind(this, var_1); }, "$render", function(var_1)
{ oktt_GBuffer_render(this, var_1); }],
jl_IllegalStateException, 0, jl_Exception, [], 0, 3, 0, 0,
oktsg_GBufferOutputNode$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktsg_OperationNode, 0, oktsg_ShaderNode, [], 4, 3, oktsg_OperationNode_$callClinit, ["$getResult0", function() { return oktsg_OperationNode_getResult(this); }, "$setFragment", function(var_1) { oktsg_OperationNode_setFragment(this, var_1); }, "$setVarying", function(var_1) { oktsg_OperationNode_setVarying(this, var_1); }, "$setArgs", function(var_1) { oktsg_OperationNode_setArgs(this, var_1); }, "$executionVert", function(var_1) { oktsg_OperationNode_executionVert(this, var_1); }, "$executionFrag", function(var_1)
{ oktsg_OperationNode_executionFrag(this, var_1); }],
oktm_IMat4$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0]);
$rt_metadata([oktgg_GLTFSkin$read$2$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTFSkin$read$2$1_invoke(this, var_1); }, "$invoke0", function(var_1) { oktgg_GLTFSkin$read$2$1_invoke0(this, var_1); }],
okttsg_SkyboxVertexNodeTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return okttsg_SkyboxVertexNodeTest$testMain$1_invoke(this); }, "$invoke2", function() { okttsg_SkyboxVertexNodeTest$testMain$1_invoke0(this); }],
oooi_DxGimpactCollision, 0, jl_Object, [], 0, 3, 0, 0,
jl_Byte, 0, jl_Number, [jl_Comparable], 0, 3, jl_Byte_$callClinit, ["$byteValue", function() { return jl_Byte_byteValue(this); }],
oktj_IJsonObject$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
kt_CharsKt, 0, kt_CharsKt__CharKt, [], 4, 3, 0, 0,
oooi_CollisionLibccd$CollideCylinderCylinder, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollisionLibccd$CollideCylinderCylinder_dColliderFn(this, var_1, var_2, var_3, var_4); }],
cgcj_Jsoner$States, "Jsoner$States", 3, jl_Enum, [], 12, 0, cgcj_Jsoner$States_$callClinit, 0,
ji_EOFException, "EOFException", 9, ji_IOException, [], 0, 3, 0, 0,
oktsg_TextureNode$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oooi_CollisionLibccd$ccd_cap_t, 0, oooi_CollisionLibccd$ccd_obj_t, [], 0, 0, 0, 0,
oktm_IVec3$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
kr_Random$Default, 0, kr_Random, [], 4, 3, 0, ["$nextBits", function(var_1) { return kr_Random$Default_nextBits(this, var_1); }, "$nextFloat", function() { return kr_Random$Default_nextFloat(this); }],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue(this); }],
oktsg_IShaderNode$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
jnc_CoderResult, 0, jl_Object, [], 0, 3, jnc_CoderResult_$callClinit, ["$isUnderflow", function() { return jnc_CoderResult_isUnderflow(this); }, "$isOverflow", function() { return jnc_CoderResult_isOverflow(this); }, "$isError", function() { return jnc_CoderResult_isError(this); }, "$isMalformed", function() { return jnc_CoderResult_isMalformed(this); }, "$isUnmappable", function() { return jnc_CoderResult_isUnmappable(this); }, "$length", function() { return jnc_CoderResult_length(this); }, "$throwException",
function() { jnc_CoderResult_throwException(this); }],
oooi_DxQuickStep$DJointWithInfo1, 0, jl_Object, [], 0, 0, 0, 0,
oooi_CollideCylinderTrimesh$sLocalContactData, 0, jl_Object, [], 0, 0, 0, 0,
oktm_Frustum, 0, jl_Object, [], 4, 3, oktm_Frustum_$callClinit, ["$getPoints", function() { return oktm_Frustum_getPoints(this); }, "$update1", function(var_1) { oktm_Frustum_update(this, var_1); }],
oktga_ActionTrack, 0, jl_Object, [oktga_IAnimTrack], 4, 3, 0, ["$getTimes", function() { return oktga_ActionTrack_getTimes(this); }, "$getDuration", function() { return oktga_ActionTrack_getDuration(this); }, "$getActions", function() { return oktga_ActionTrack_getActions(this); }],
otjt_Int32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
oooig_GimContact, 0, jl_Object, [], 0, 3, 0, ["$getPoint", function() { return oooig_GimContact_getPoint(this); }, "$getNormal1", function() { return oooig_GimContact_getNormal(this); }, "$getDepth0", function() { return oooig_GimContact_getDepth(this); }, "$getFeature1", function() { return oooig_GimContact_getFeature1(this); }, "$getFeature2", function() { return oooig_GimContact_getFeature2(this); }],
oktgn_PreviousTRS, 0, oktgn_AdapterTransformNode, [], 4, 3, 0, ["$getWorldMatrix", function() { return oktgn_PreviousTRS_getWorldMatrix(this); }, "$set70", function(var_1) { return oktgn_PreviousTRS_set(this, var_1); }, "$set74", function(var_1) { return oktgn_PreviousTRS_set0(this, var_1); }],
oktm_IVertexInputs$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktm_IndexBufferObject, 0, jl_Object, [oktm_IIndexBufferObject], 4, 3, oktm_IndexBufferObject_$callClinit, ["$getHandle", function() { return oktm_IndexBufferObject_getHandle(this); }, "$setHandle", function(var_1) { oktm_IndexBufferObject_setHandle(this, var_1); }, "$getBytesPerIndex", function() { return oktm_IndexBufferObject_getBytesPerIndex(this); }, "$getType", function() { return oktm_IndexBufferObject_getType(this); }, "$setType", function(var_1) { oktm_IndexBufferObject_setType(this, var_1); }, "$initGpuObjects",
function() { oktm_IndexBufferObject_initGpuObjects(this); }, "$loadBufferToGpu", function() { oktm_IndexBufferObject_loadBufferToGpu(this); }, "$bind", function() { oktm_IndexBufferObject_bind(this); }, "$getBytes", function() { return oktm_IndexBufferObject_getBytes(this); }, "$setBytes", function(var_1) { oktm_IndexBufferObject_setBytes(this, var_1); }, "$getSize", function() { return oktm_IndexBufferObject_getSize(this); }, "$getSizeInBytes0", function() { return oktm_IndexBufferObject_getSizeInBytes(this);
}],
ju_HashMap$EntryIterator, 0, ju_HashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, ["$next6", function() { return ju_HashMap$EntryIterator_next(this); }, "$next", function() { return ju_HashMap$EntryIterator_next0(this); }],
ju_Collections, 0, jl_Object, [], 0, 3, ju_Collections_$callClinit, 0,
oooi_AbstractStepper, 0, jl_Object, [], 1, 0, 0, 0,
oktsg_IShaderData$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
ju_Enumeration, 0, jl_Object, [], 3, 3, 0, 0,
oooig_GimTriCollision, 0, oooig_GimGeometry, [], 0, 3, 0, 0,
oktpo_OdeBoxShape, 0, oktpo_OdeGeom, [oktp_IBoxShape], 4, 3, 0, ["$getGeom0", function() { return oktpo_OdeBoxShape_getGeom(this); }, "$getGeom", function() { return oktpo_OdeBoxShape_getGeom0(this); }, "$getFriction", function() { return oktpo_OdeBoxShape_getFriction(this); }],
jl_Thread, 0, jl_Object, [jl_Runnable], 0, 3, jl_Thread_$callClinit, ["$getStackTrace", function() { return jl_Thread_getStackTrace(this); }],
jnc_BufferOverflowException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0, 0, jl_Object, [otjb_AnimationFrameCallback], 4, 0, 0, ["$onAnimationFrame", function(var_1) { oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0_onAnimationFrame(this, var_1); }, "$onAnimationFrame$exported$0", function(var_1) { return oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0_onAnimationFrame$exported$0(this, var_1); }],
okttp_TrimeshShapeTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return okttp_TrimeshShapeTest_getName(this); }, "$testMain", function() { okttp_TrimeshShapeTest_testMain(this); }],
kji_Ref$BooleanRef, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0,
jl_StringIndexOutOfBoundsException, "StringIndexOutOfBoundsException", 10, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0,
jur_UCIBackReferenceSet, 0, jur_CIBackReferenceSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_UCIBackReferenceSet_matches(this, var_1, var_2, var_3); }],
oktt_TeaVMApp$anim$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktt_TeaVMApp$anim$1_$callClinit, ["$invoke1", function(var_1) { return oktt_TeaVMApp$anim$1_invoke(this, var_1); }, "$invoke40", function(var_1) { oktt_TeaVMApp$anim$1_invoke0(this, var_1); }],
oooi_CollideTrimeshSphere, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dCollideSTL", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollideTrimeshSphere_dCollideSTL(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollideTrimeshSphere_dColliderFn(this, var_1, var_2, var_3, var_4); }],
k_Unit, 0, jl_Object, [], 4, 3, k_Unit_$callClinit, 0,
jur_DotAllQuantifierSet, 0, jur_QuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_DotAllQuantifierSet_matches(this, var_1, var_2, var_3); }, "$find", function(var_1, var_2, var_3) { return jur_DotAllQuantifierSet_find(this, var_1, var_2, var_3); }],
oktt_TvmGL$shaders$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktt_TvmGL$shaders$1_$callClinit, ["$invoke1", function(var_1) { return oktt_TvmGL$shaders$1_invoke(this, var_1); }, "$invoke41", function(var_1) { return oktt_TvmGL$shaders$1_invoke0(this, var_1); }],
oktmb_PlaneMeshBuilder, 0, oktmb_MeshBuilder, [], 4, 3, 0, ["$build", function(var_1) { return oktmb_PlaneMeshBuilder_build(this, var_1); }, "$getWidth0", function() { return oktmb_PlaneMeshBuilder_getWidth(this); }, "$getHeight0", function() { return oktmb_PlaneMeshBuilder_getHeight(this); }, "$getXDivisions", function() { return oktmb_PlaneMeshBuilder_getXDivisions(this); }, "$getYDivisions", function() { return oktmb_PlaneMeshBuilder_getYDivisions(this); }, "$getNormal2", function() { return oktmb_PlaneMeshBuilder_getNormal(this);
}, "$getHeightProvider", function() { return oktmb_PlaneMeshBuilder_getHeightProvider(this); }],
jnc_CoderMalfunctionError, 0, jl_Error, [], 0, 3, 0, 0,
oooip_DxWorldProcessIslandsInfo, 0, jl_Object, [], 0, 3, 0, ["$AssignInfo", function(var_1, var_2, var_3, var_4) { oooip_DxWorldProcessIslandsInfo_AssignInfo(this, var_1, var_2, var_3, var_4); }, "$GetIslandsCount", function() { return oooip_DxWorldProcessIslandsInfo_GetIslandsCount(this); }, "$GetIslandSizes", function() { return oooip_DxWorldProcessIslandsInfo_GetIslandSizes(this); }, "$GetBodiesArray", function() { return oooip_DxWorldProcessIslandsInfo_GetBodiesArray(this); }, "$GetJointsArray", function()
{ return oooip_DxWorldProcessIslandsInfo_GetJointsArray(this); }],
oktgg_GLTF$read$10$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_GLTF$read$10$1_invoke(this, var_1); }, "$invoke10", function(var_1) { oktgg_GLTF$read$10$1_invoke0(this, var_1); }],
jur_CIDecomposedCharSet, 0, jur_DecomposedCharSet, [], 0, 0, 0, 0,
oktm_VertexInputs, 0, jl_Object, [oktm_IVertexInputs], 0, 3, 0, ["$getBytesPerVertex", function() { return oktm_VertexInputs_getBytesPerVertex(this); }, "$setBytesPerVertex", function(var_1) { oktm_VertexInputs_setBytesPerVertex(this, var_1); }, "$getSize", function() { return oktm_VertexInputs_getSize(this); }, "$size", function() { return oktm_VertexInputs_size(this); }, "$contains", function(var_1) { return oktm_VertexInputs_contains(this, var_1); }, "$add5", function(var_1) { return oktm_VertexInputs_add(this,
var_1); }, "$get19", function(var_1) { return oktm_VertexInputs_get(this, var_1); }, "$get", function(var_1) { return oktm_VertexInputs_get0(this, var_1); }, "$iterator", function() { return oktm_VertexInputs_iterator(this); }, "$updateVertexOffsets", function() { oktm_VertexInputs_updateVertexOffsets(this); }, "$getFloatsPerVertex0", function() { return oktm_VertexInputs_getFloatsPerVertex(this); }, "$floatOffsetOf0", function(var_1) { return oktm_VertexInputs_floatOffsetOf(this, var_1); }]]);
$rt_metadata([oooi_CollisionLibccd$CollideConvexCylinderCCD, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollisionLibccd$CollideConvexCylinderCCD_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktts_ShadowMappingBaseTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return oktts_ShadowMappingBaseTest_getName(this); }, "$testMain", function() { oktts_ShadowMappingBaseTest_testMain(this); }],
oktsg_NormalMapNode, 0, oktsg_ShaderNode, [], 4, 3, oktsg_NormalMapNode_$callClinit, ["$getNormalizedViewVector", function() { return oktsg_NormalMapNode_getNormalizedViewVector(this); }, "$setNormalizedViewVector", function(var_1) { oktsg_NormalMapNode_setNormalizedViewVector(this, var_1); }, "$getVertexPosition", function() { return oktsg_NormalMapNode_getVertexPosition(this); }, "$getUv0", function() { return oktsg_NormalMapNode_getUv(this); }, "$setUv", function(var_1) { oktsg_NormalMapNode_setUv(this, var_1);
}, "$getNormalScale", function() { return oktsg_NormalMapNode_getNormalScale(this); }, "$getNormalColor", function() { return oktsg_NormalMapNode_getNormalColor(this); }, "$setNormalColor", function(var_1) { oktsg_NormalMapNode_setNormalColor(this, var_1); }, "$getTbn", function() { return oktsg_NormalMapNode_getTbn(this); }, "$setTbn", function(var_1) { oktsg_NormalMapNode_setTbn(this, var_1); }, "$getNormalResult", function() { return oktsg_NormalMapNode_getNormalResult(this); }, "$executionFrag", function(var_1)
{ oktsg_NormalMapNode_executionFrag(this, var_1); }, "$declarationFrag", function(var_1) { oktsg_NormalMapNode_declarationFrag(this, var_1); }],
oktm_IIndexBufferObject$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oooil_CCD, 0, jl_Object, [], 0, 3, 0, 0,
oktt_ITexture$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oooig_GimRadixSort$GimCompMacro, 0, jl_Object, [], 3, 0, 0, 0,
oktsg_CameraDataNode$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktt_TvmGL$ProgramWrap, 0, oktt_TvmGL$GLObject, [], 4, 3, 0, ["$getGl3", function() { return oktt_TvmGL$ProgramWrap_getGl(this); }, "$getGl7", function() { return oktt_TvmGL$ProgramWrap_getGl0(this); }, "$getUniformLocations", function() { return oktt_TvmGL$ProgramWrap_getUniformLocations(this); }, "$getUniformLocationsMap", function() { return oktt_TvmGL$ProgramWrap_getUniformLocationsMap(this); }],
oktg_GL$Request, 0, jl_Object, [], 4, 3, 0, ["$getName", function() { return oktg_GL$Request_getName(this); }, "$getCall", function() { return oktg_GL$Request_getCall(this); }],
otcit_DoubleAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0,
jur_PossessiveAltQuantifierSet, 0, jur_AltQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return jur_PossessiveAltQuantifierSet_matches(this, var_1, var_2, var_3); }],
oktgg_GLTFPrimitive, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, oktgg_GLTFPrimitive_$callClinit, ["$getAttributesMap", function() { return oktgg_GLTFPrimitive_getAttributesMap(this); }, "$getName", function() { return oktgg_GLTFPrimitive_getName(this); }, "$setName", function(var_1) { oktgg_GLTFPrimitive_setName(this, var_1); }, "$setMaterial0", function(var_1) { oktgg_GLTFPrimitive_setMaterial(this, var_1); }, "$read", function(var_1) { oktgg_GLTFPrimitive_read(this, var_1); }, "$loadIndices",
function(var_1, var_2) { return oktgg_GLTFPrimitive_loadIndices(this, var_1, var_2); }, "$getV1230", function(var_1, var_2, var_3, var_4, var_5) { oktgg_GLTFPrimitive_getV123(this, var_1, var_2, var_3, var_4, var_5); }, "$getV123", function(var_1, var_2, var_3, var_4, var_5, var_6) { oktgg_GLTFPrimitive_getV1230(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$calculateFlatNormal", function(var_1, var_2, var_3, var_4, var_5) { return oktgg_GLTFPrimitive_calculateFlatNormal(this, var_1, var_2, var_3, var_4,
var_5); }, "$calculateFlatNormal0", function(var_1, var_2, var_3, var_4, var_5, var_6) { oktgg_GLTFPrimitive_calculateFlatNormal0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setVec3InputToTriangle", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { oktgg_GLTFPrimitive_setVec3InputToTriangle(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$setVec4InputToTriangle", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { oktgg_GLTFPrimitive_setVec4InputToTriangle(this,
var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$calculateTangent", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { oktgg_GLTFPrimitive_calculateTangent(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$getGltf0", function() { return oktgg_GLTFPrimitive_getGltf(this); }, "$getElementIndex", function() { return oktgg_GLTFPrimitive_getElementIndex(this); }, "$getMeshIndex", function() { return oktgg_GLTFPrimitive_getMeshIndex(this); }, "$getMesh", function() { return oktgg_GLTFPrimitive_getMesh(this);
}],
ooo_OdeMath, 0, ooo_DRotation, [], 0, 3, 0, 0,
oooi_Step, 0, oooi_AbstractStepper, [oooip_DxStepperProcessingCallContext$dstepper_fn_t, oooip_DxWorldProcessIslandsInfo$dmemestimate_fn_t, oooip_DxStepperProcessingCallContext$dmaxcallcountestimate_fn_t], 0, 0, oooi_Step_$callClinit, 0,
oktg_Material, 0, jl_Object, [oktg_IMaterial], 0, 3, 0, ["$getShader", function() { return oktg_Material_getShader(this); }, "$setShader", function(var_1) { oktg_Material_setShader(this, var_1); }, "$getAlphaCutoff", function() { return oktg_Material_getAlphaCutoff(this); }, "$setAlphaCutoff", function(var_1) { oktg_Material_setAlphaCutoff(this, var_1); }, "$getAlphaMode0", function() { return oktg_Material_getAlphaMode(this); }, "$setAlphaMode0", function(var_1) { oktg_Material_setAlphaMode(this, var_1); },
"$getCullFaceMode", function() { return oktg_Material_getCullFaceMode(this); }, "$setCullFaceMode", function(var_1) { oktg_Material_setCullFaceMode(this, var_1); }, "$getTranslucentPriority", function() { return oktg_Material_getTranslucentPriority(this); }, "$setName", function(var_1) { oktg_Material_setName(this, var_1); }, "$getShaderChannels", function() { return oktg_Material_getShaderChannels(this); }],
ju_Objects, 0, jl_Object, [], 4, 3, 0, 0,
oktmb_SphereMeshBuilder$build$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktmb_SphereMeshBuilder$build$1_invoke(this, var_1); }, "$invoke16", function(var_1) { oktmb_SphereMeshBuilder$build$1_invoke0(this, var_1); }],
oooip_DxStepperProcessingCallContext, 0, jl_Object, [], 4, 3, 0, ["$AssignIslandSelection", function(var_1, var_2, var_3, var_4, var_5, var_6) { oooip_DxStepperProcessingCallContext_AssignIslandSelection(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$GetSelectedIslandBodiesEnd", function() { return oooip_DxStepperProcessingCallContext_GetSelectedIslandBodiesEnd(this); }, "$GetSelectedIslandJointsEnd", function() { return oooip_DxStepperProcessingCallContext_GetSelectedIslandJointsEnd(this); }, "$m_stepperArena1",
function() { return oooip_DxStepperProcessingCallContext_m_stepperArena(this); }, "$m_world1", function() { return oooip_DxStepperProcessingCallContext_m_world(this); }, "$m_islandBodiesCount0", function() { return oooip_DxStepperProcessingCallContext_m_islandBodiesCount(this); }, "$m_islandJointsCount0", function() { return oooip_DxStepperProcessingCallContext_m_islandJointsCount(this); }, "$m_stepperAllowedThreads1", function() { return oooip_DxStepperProcessingCallContext_m_stepperAllowedThreads(this); },
"$m_islandBodiesStartA", function() { return oooip_DxStepperProcessingCallContext_m_islandBodiesStartA(this); }, "$m_islandBodiesStartOfs0", function() { return oooip_DxStepperProcessingCallContext_m_islandBodiesStartOfs(this); }, "$m_islandJointsStartA", function() { return oooip_DxStepperProcessingCallContext_m_islandJointsStartA(this); }, "$m_islandJointsStartOfs0", function() { return oooip_DxStepperProcessingCallContext_m_islandJointsStartOfs(this); }, "$m_stepSize1", function() { return oooip_DxStepperProcessingCallContext_m_stepSize(this);
}, "$m_taskGroup0", function() { return oooip_DxStepperProcessingCallContext_m_taskGroup(this); }, "$AssignStepperTaskGroup", function(var_1) { oooip_DxStepperProcessingCallContext_AssignStepperTaskGroup(this, var_1); }],
oktmb_SphereMeshBuilder$build$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktmb_SphereMeshBuilder$build$2_invoke(this, var_1); }, "$invoke36", function(var_1) { oktmb_SphereMeshBuilder$build$2_invoke0(this, var_1); }],
oktsg_GLSL$15, 0, kji_Lambda, [kjf_Function0], 4, 0, oktsg_GLSL$15_$callClinit, ["$invoke6", function() { return oktsg_GLSL$15_invoke(this); }, "$invoke42", function() { return oktsg_GLSL$15_invoke0(this); }],
oktsg_GLSL$14, 0, kji_Lambda, [kjf_Function0], 4, 0, oktsg_GLSL$14_$callClinit, ["$invoke6", function() { return oktsg_GLSL$14_invoke(this); }, "$invoke43", function() { return oktsg_GLSL$14_invoke0(this); }],
oooi_CollideTrimeshBox, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_CollideTrimeshBox_dColliderFn(this, var_1, var_2, var_3, var_4); }, "$SUBTRACT", function(var_1, var_2, var_3) { oooi_CollideTrimeshBox_SUBTRACT(this, var_1, var_2, var_3); }, "$SET", function(var_1, var_2) { oooi_CollideTrimeshBox_SET(this, var_1, var_2); }, "$ADD", function(var_1, var_2, var_3) { oooi_CollideTrimeshBox_ADD(this, var_1, var_2, var_3); }, "$GETCOL", function(var_1,
var_2, var_3) { oooi_CollideTrimeshBox_GETCOL(this, var_1, var_2, var_3); }, "$POINTDISTANCE", function(var_1, var_2) { return oooi_CollideTrimeshBox_POINTDISTANCE(this, var_1, var_2); }, "$CONSTRUCTPLANE", function(var_1, var_2, var_3) { oooi_CollideTrimeshBox_CONSTRUCTPLANE(this, var_1, var_2, var_3); }, "$LENGTHOF", function(var_1) { return oooi_CollideTrimeshBox_LENGTHOF(this, var_1); }, "$dCollideBTL", function(var_1, var_2, var_3, var_4, var_5) { return oooi_CollideTrimeshBox_dCollideBTL(this, var_1, var_2,
var_3, var_4, var_5); }],
oktsg_GLSL$13, 0, kji_Lambda, [kjf_Function0], 4, 0, oktsg_GLSL$13_$callClinit, ["$invoke6", function() { return oktsg_GLSL$13_invoke(this); }, "$invoke44", function() { return oktsg_GLSL$13_invoke0(this); }],
oktsg_GLSL$12, 0, kji_Lambda, [kjf_Function0], 4, 0, oktsg_GLSL$12_$callClinit, ["$invoke6", function() { return oktsg_GLSL$12_invoke(this); }, "$invoke45", function() { return oktsg_GLSL$12_invoke0(this); }],
oktsg_GLSL$11, 0, kji_Lambda, [kjf_Function0], 4, 0, oktsg_GLSL$11_$callClinit, ["$invoke6", function() { return oktsg_GLSL$11_invoke(this); }, "$invoke46", function() { return oktsg_GLSL$11_invoke0(this); }],
oktsg_GLSL$10, 0, kji_Lambda, [kjf_Function0], 4, 0, oktsg_GLSL$10_$callClinit, ["$invoke6", function() { return oktsg_GLSL$10_invoke(this); }, "$invoke47", function() { return oktsg_GLSL$10_invoke0(this); }],
oktgn_ITransformNode$Companion$Build$1, 0, kji_Lambda, [kjf_Function0], 4, 0, oktgn_ITransformNode$Companion$Build$1_$callClinit, 0,
oktt_TvmGL$renderBuffers$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktt_TvmGL$renderBuffers$1_$callClinit, ["$invoke1", function(var_1) { return oktt_TvmGL$renderBuffers$1_invoke(this, var_1); }, "$invoke48", function(var_1) { return oktt_TvmGL$renderBuffers$1_invoke0(this, var_1); }],
otp_Platform, 0, jl_Object, [], 4, 3, 0, 0,
oktga_IAnim$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
k_TuplesKt, 0, jl_Object, [], 4, 3, 0, 0,
jnc_CodingErrorAction, 0, jl_Object, [], 0, 3, jnc_CodingErrorAction_$callClinit, 0,
oktt_ITexture2D$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oooi_DxCapsule$CollideCapsuleCapsule, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideCapsuleCapsule", function(var_1, var_2, var_3, var_4, var_5) { return oooi_DxCapsule$CollideCapsuleCapsule_dCollideCapsuleCapsule(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return oooi_DxCapsule$CollideCapsuleCapsule_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktgg_IGLTFMaterial$read$10, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return oktgg_IGLTFMaterial$read$10_invoke(this, var_1); }, "$invoke26", function(var_1) { oktgg_IGLTFMaterial$read$10_invoke0(this, var_1); }],
oktu_LOG, 0, jl_Object, [oktu_ILog], 4, 3, oktu_LOG_$callClinit, ["$setCollectLogs", function(var_1) { oktu_LOG_setCollectLogs(this, var_1); }, "$info0", function(var_1, var_2) { oktu_LOG_info(this, var_1, var_2); }],
oktga_AnimPlayer, 0, jl_Object, [], 4, 3, oktga_AnimPlayer_$callClinit, ["$setNodes", function(var_1) { oktga_AnimPlayer_setNodes(this, var_1); }, "$obtain", function(var_1, var_2, var_3, var_4, var_5, var_6) { return oktga_AnimPlayer_obtain(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$update", function(var_1) { oktga_AnimPlayer_update(this, var_1); }, "$setAnimation1", function(var_1, var_2, var_3, var_4, var_5, var_6) { return $java.oktga_AnimPlayer_setAnimation(this, var_1, var_2, var_3, var_4, var_5,
var_6); }, "$setAnimation0", function(var_1) { return $java.oktga_AnimPlayer_setAnimation0(this, var_1); }, "$animate", function(var_1, var_2) { return oktga_AnimPlayer_animate(this, var_1, var_2); }, "$queue", function(var_1, var_2) { return $java.oktga_AnimPlayer_queue(this, var_1, var_2); }, "$begin", function() { $java.oktga_AnimPlayer_begin(this); }, "$apply", function(var_1, var_2, var_3) { $java.oktga_AnimPlayer_apply(this, var_1, var_2, var_3); }, "$end3", function() { $java.oktga_AnimPlayer_end(this);
}, "$applyAnimation", function(var_1, var_2) { $java.oktga_AnimPlayer_applyAnimation(this, var_1, var_2); }, "$applyAnimations", function(var_1, var_2, var_3, var_4, var_5) { $java.oktga_AnimPlayer_applyAnimations(this, var_1, var_2, var_3, var_4, var_5); }, "$applyAnimation0", function(var_1, var_2, var_3, var_4) { $java.oktga_AnimPlayer_applyAnimation0(this, var_1, var_2, var_3, var_4); }, "$getFirstKeyframeIndexAtTime", function(var_1, var_2) { return $java.oktga_AnimPlayer_getFirstKeyframeIndexAtTime(this,
var_1, var_2); }, "$getTranslationAtTime", function(var_1, var_2, var_3) { return $java.oktga_AnimPlayer_getTranslationAtTime(this, var_1, var_2, var_3); }, "$getRotationAtTime", function(var_1, var_2, var_3) { return $java.oktga_AnimPlayer_getRotationAtTime(this, var_1, var_2, var_3); }, "$getScalingAtTime", function(var_1, var_2, var_3) { return $java.oktga_AnimPlayer_getScalingAtTime(this, var_1, var_2, var_3); }, "$removeAnimation", function(var_1) { oktga_AnimPlayer_removeAnimation(this, var_1); }],
jur_DotQuantifierSet, 0, jur_QuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return $java.jur_DotQuantifierSet_matches(this, var_1, var_2, var_3); }, "$find", function(var_1, var_2, var_3) { return $java.jur_DotQuantifierSet_find(this, var_1, var_2, var_3); }, "$findLineTerminator", function(var_1, var_2, var_3) { return $java.jur_DotQuantifierSet_findLineTerminator(this, var_1, var_2, var_3); }, "$findBackLineTerminator", function(var_1, var_2, var_3) { return $java.jur_DotQuantifierSet_findBackLineTerminator(this,
var_1, var_2, var_3); }],
otcit_FloatAnalyzer, 0, jl_Object, [], 4, 3, $java.otcit_FloatAnalyzer_$callClinit, 0,
k_KotlinNullPointerException, 0, jl_NullPointerException, [], 0, 3, 0, 0,
ju_HashMap$ValueIterator, 0, ju_HashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, ["$next", function() { return $java.ju_HashMap$ValueIterator_next(this); }],
oktgg_IGLTFMaterial$read$4$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_IGLTFMaterial$read$4$1_invoke(this, var_1); }, "$invoke15", function(var_1) { $java.oktgg_IGLTFMaterial$read$4$1_invoke0(this, var_1); }],
oktgg_IGLTFMaterial$read$4$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_IGLTFMaterial$read$4$2_invoke(this, var_1); }, "$invoke0", function(var_1) { $java.oktgg_IGLTFMaterial$read$4$2_invoke0(this, var_1); }],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1, "AbstractCharClass$LazyJavaJavaIdentifierStart$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains(this, var_1); }],
oktts_FXAATest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return $java.oktts_FXAATest_getName(this); }, "$testMain", function() { $java.oktts_FXAATest_testMain(this); }],
jl_ConsoleOutputStreamStdout, 0, ji_OutputStream, [], 0, 0, 0, ["$write", function(var_1) { $java.jl_ConsoleOutputStreamStdout_write(this, var_1); }],
jur_CharClass$3, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_CharClass$3_contains(this, var_1); }],
jur_CharClass$4, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_CharClass$4_contains(this, var_1); }],
jur_CharClass$1, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_CharClass$1_contains(this, var_1); }]]);
$rt_metadata([jur_CharClass$2, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_CharClass$2_contains(this, var_1); }],
oooi_CollideCylinderTrimesh, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return $java.oooi_CollideCylinderTrimesh_dColliderFn(this, var_1, var_2, var_3, var_4); }, "$dCollideCylinderTrimesh", function(var_1, var_2, var_3, var_4, var_5) { return $java.oooi_CollideCylinderTrimesh_dCollideCylinderTrimesh(this, var_1, var_2, var_3, var_4, var_5); }],
jur_CharClass$7, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_CharClass$7_contains(this, var_1); }],
jur_CharClass$8, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_CharClass$8_contains(this, var_1); }],
jur_CharClass$5, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_CharClass$5_contains(this, var_1); }],
jur_CharClass$6, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_CharClass$6_contains(this, var_1); }],
jm_BigDecimal, 0, jl_Number, [jl_Comparable, ji_Serializable], 0, 3, $java.jm_BigDecimal_$callClinit, ["$signum0", function() { return $java.jm_BigDecimal_signum(this); }, "$isZero0", function() { return $java.jm_BigDecimal_isZero(this); }, "$compareTo8", function(var_1) { return $java.jm_BigDecimal_compareTo(this, var_1); }, "$equals0", function(var_1) { return $java.jm_BigDecimal_equals(this, var_1); }, "$hashCode", function() { return $java.jm_BigDecimal_hashCode(this); }, "$toBigInteger", function() { return $java.jm_BigDecimal_toBigInteger(this);
}, "$intValue", function() { return $java.jm_BigDecimal_intValue(this); }, "$floatValue", function() { return $java.jm_BigDecimal_floatValue(this); }, "$doubleValue", function() { return $java.jm_BigDecimal_doubleValue(this); }, "$aproxPrecision", function() { return $java.jm_BigDecimal_aproxPrecision(this); }, "$getUnscaledValue", function() { return $java.jm_BigDecimal_getUnscaledValue(this); }, "$setUnscaledValue", function(var_1) { $java.jm_BigDecimal_setUnscaledValue(this, var_1); }, "$compareTo6", function(var_1)
{ return $java.jm_BigDecimal_compareTo0(this, var_1); }],
jur_CharClass$9, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_CharClass$9_contains(this, var_1); }],
jl_Character, 0, jl_Object, [jl_Comparable], 0, 3, $java.jl_Character_$callClinit, 0,
oktm_IndexBufferObject$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktm_IVertexInput$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
ooott_SameThreadTaskExecutor, 0, ooott_AbstractTaskExecutor, [], 0, 3, 0, ["$submit", function(var_1) { $java.ooott_SameThreadTaskExecutor_submit(this, var_1); }, "$getThreadCount", function() { return $java.ooott_SameThreadTaskExecutor_getThreadCount(this); }, "$flush0", function() { $java.ooott_SameThreadTaskExecutor_flush(this); }],
oooij_Info2DescrQuickStep, 0, jl_Object, [oooij_Info2Descr], 0, 3, 0, ["$setFindex", function(var_1, var_2) { $java.oooij_Info2DescrQuickStep_setFindex(this, var_1, var_2); }, "$setAllP", function(var_1, var_2, var_3, var_4, var_5) { $java.oooij_Info2DescrQuickStep_setAllP(this, var_1, var_2, var_3, var_4, var_5); }, "$setArrays", function(var_1, var_2) { $java.oooij_Info2DescrQuickStep_setArrays(this, var_1, var_2); }, "$setC", function(var_1, var_2) { $java.oooij_Info2DescrQuickStep_setC(this, var_1, var_2);
}, "$getC0", function(var_1) { return $java.oooij_Info2DescrQuickStep_getC(this, var_1); }, "$setCfm", function(var_1, var_2) { $java.oooij_Info2DescrQuickStep_setCfm(this, var_1, var_2); }, "$setLo", function(var_1, var_2) { $java.oooij_Info2DescrQuickStep_setLo(this, var_1, var_2); }, "$setHi", function(var_1, var_2) { $java.oooij_Info2DescrQuickStep_setHi(this, var_1, var_2); }, "$setRowskip", function(var_1, var_2) { $java.oooij_Info2DescrQuickStep_setRowskip(this, var_1, var_2); }, "$setJ1l", function(var_1,
var_2) { $java.oooij_Info2DescrQuickStep_setJ1l(this, var_1, var_2); }, "$setJ1a", function(var_1, var_2) { $java.oooij_Info2DescrQuickStep_setJ1a(this, var_1, var_2); }, "$setJ2l", function(var_1, var_2) { $java.oooij_Info2DescrQuickStep_setJ2l(this, var_1, var_2); }, "$setJ2a", function(var_1, var_2) { $java.oooij_Info2DescrQuickStep_setJ2a(this, var_1, var_2); }, "$setJ2lNegated", function(var_1, var_2) { $java.oooij_Info2DescrQuickStep_setJ2lNegated(this, var_1, var_2); }, "$setJ2aNegated", function(var_1,
var_2) { $java.oooij_Info2DescrQuickStep_setJ2aNegated(this, var_1, var_2); }, "$setJ1l0", function(var_1, var_2, var_3, var_4) { $java.oooij_Info2DescrQuickStep_setJ1l0(this, var_1, var_2, var_3, var_4); }, "$setJ1a0", function(var_1, var_2, var_3, var_4) { $java.oooij_Info2DescrQuickStep_setJ1a0(this, var_1, var_2, var_3, var_4); }, "$setJ2l0", function(var_1, var_2, var_3, var_4) { $java.oooij_Info2DescrQuickStep_setJ2l0(this, var_1, var_2, var_3, var_4); }, "$setJ2a0", function(var_1, var_2, var_3, var_4)
{ $java.oooij_Info2DescrQuickStep_setJ2a0(this, var_1, var_2, var_3, var_4); }, "$setJ1", function(var_1, var_2, var_3) { $java.oooij_Info2DescrQuickStep_setJ1(this, var_1, var_2, var_3); }, "$setJ2", function(var_1, var_2, var_3) { $java.oooij_Info2DescrQuickStep_setJ2(this, var_1, var_2, var_3); }],
oktpo_IOdeGeom$Companion, 0, jl_Object, [], 4, 3, oktpo_IOdeGeom$Companion_$callClinit, 0,
oktsp_MotionBlur$render$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktsp_MotionBlur$render$1_invoke(this, var_1); }, "$invoke12", function(var_1) { $java.oktsp_MotionBlur$render$1_invoke0(this, var_1); }],
oooi_GimpactDataPreprocessor, 0, jl_Object, [], 0, 3, 0, ["$buildAngles", function() { return $java.oooi_GimpactDataPreprocessor_buildAngles(this); }, "$hasEdge", function(var_1, var_2, var_3) { return $java.oooi_GimpactDataPreprocessor_hasEdge(this, var_1, var_2, var_3); }, "$getVertexIndex", function(var_1) { return $java.oooi_GimpactDataPreprocessor_getVertexIndex(this, var_1); }, "$getAngle", function(var_1, var_2, var_3) { return $java.oooi_GimpactDataPreprocessor_getAngle(this, var_1, var_2, var_3); },
"$getVertex", function(var_1) { return $java.oooi_GimpactDataPreprocessor_getVertex(this, var_1); }],
oktsg_GLSLType, 0, jl_Object, [], 4, 3, oktsg_GLSLType_$callClinit, ["$getTypeName", function(var_1) { return oktsg_GLSLType_getTypeName(this, var_1); }],
oktgg_GLTFAnimation, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, $java.oktgg_GLTFAnimation_$callClinit, ["$getName", function() { return $java.oktgg_GLTFAnimation_getName(this); }, "$setName", function(var_1) { $java.oktgg_GLTFAnimation_setName(this, var_1); }, "$asFloatBuffer", function(var_1, var_2) { $java.oktgg_GLTFAnimation_asFloatBuffer(this, var_1, var_2); }, "$read", function(var_1) { oktgg_GLTFAnimation_read(this, var_1); }, "$getGltf0", function() { return oktgg_GLTFAnimation_getGltf(this);
}, "$getElementIndex", function() { return $java.oktgg_GLTFAnimation_getElementIndex(this); }, "$getAnim", function() { return oktgg_GLTFAnimation_getAnim(this); }],
okttm_PlaneMeshBuilderTest$testMain$2, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return $java.okttm_PlaneMeshBuilderTest$testMain$2_invoke(this); }, "$invoke2", function() { $java.okttm_PlaneMeshBuilderTest$testMain$2_invoke0(this); }],
oktt_IFrameBuffer$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktt_CubeModel$Companion, 0, jl_Object, [], 4, 3, 0, ["$defaultShader", function() { return $java.oktt_CubeModel$Companion_defaultShader(this); }],
oktts_GBufferBaseTest$testMain$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_GBufferBaseTest$testMain$1$1_invoke(this, var_1); }, "$invoke8", function(var_1) { $java.oktts_GBufferBaseTest$testMain$1$1_invoke0(this, var_1); }],
oooig_GimTrimeshTrimeshCol, 0, jl_Object, [], 0, 3, 0, 0,
oktt_CubeModel, 0, jl_Object, [], 4, 3, $java.oktt_CubeModel_$callClinit, ["$update0", function() { oktt_CubeModel_update(this); }, "$render0", function() { oktt_CubeModel_render(this); }],
oktt_TvmGL$textures$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktt_TvmGL$textures$1_$callClinit, ["$invoke1", function(var_1) { return $java.oktt_TvmGL$textures$1_invoke(this, var_1); }, "$invoke49", function(var_1) { return $java.oktt_TvmGL$textures$1_invoke0(this, var_1); }],
oooi_CollisionLibccd$CollideBoxCylinderCCD, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return $java.oooi_CollisionLibccd$CollideBoxCylinderCCD_dColliderFn(this, var_1, var_2, var_3, var_4); }],
cgcj_Yytoken$Types, 0, jl_Enum, [], 12, 0, cgcj_Yytoken$Types_$callClinit, 0,
jur_RelCompositeGroupQuantifierSet, 0, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return $java.jur_RelCompositeGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
jl_IllegalMonitorStateException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
oktts_MotionBlurBaseTest$testMain$2$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_MotionBlurBaseTest$testMain$2$2_invoke(this, var_1); }, "$invoke8", function(var_1) { $java.oktts_MotionBlurBaseTest$testMain$2$2_invoke0(this, var_1); }],
oktts_MotionBlurBaseTest$testMain$2$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_MotionBlurBaseTest$testMain$2$1_invoke(this, var_1); }, "$invoke8", function(var_1) { $java.oktts_MotionBlurBaseTest$testMain$2$1_invoke0(this, var_1); }],
oooi_CollideSpaceGeom$1, 0, jl_Object, [ooo_DGeom$DNearCallback], 0, 0, 0, ["$call", function(var_1, var_2, var_3) { $java.oooi_CollideSpaceGeom$1_call(this, var_1, var_2, var_3); }],
jur_RelAltGroupQuantifierSet, 0, jur_AltGroupQuantifierSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return $java.jur_RelAltGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
oooic_Cstdlib$Random31, 0, ju_Random, [], 0, 0, 0, 0,
jnc_Charset$Charsets, 0, jl_Object, [], 0, 0, $java.jnc_Charset$Charsets_$callClinit, 0,
oktgg_GLTF$read$14$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTF$read$14$1_invoke(this, var_1); }, "$invoke10", function(var_1) { $java.oktgg_GLTF$read$14$1_invoke0(this, var_1); }],
okttsg_MotionBlurTest$testMain$3$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.okttsg_MotionBlurTest$testMain$3$1_invoke(this, var_1); }, "$invoke8", function(var_1) { $java.okttsg_MotionBlurTest$testMain$3$1_invoke0(this, var_1); }],
okttsg_MotionBlurTest$testMain$3$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.okttsg_MotionBlurTest$testMain$3$2_invoke(this, var_1); }, "$invoke8", function(var_1) { $java.okttsg_MotionBlurTest$testMain$3$2_invoke0(this, var_1); }],
oooi_DxRay$CollideRaySphere, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideRaySphere", function(var_1, var_2, var_3, var_4, var_5) { return $java.oooi_DxRay$CollideRaySphere_dCollideRaySphere(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return $java.oooi_DxRay$CollideRaySphere_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktt_TvmUInt8Array$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktt_TestGroup, 0, ju_ArrayList, [], 4, 3, 0, ["$getName", function() { return oktt_TestGroup_getName(this); }, "$getSize", function() { return $java.oktt_TestGroup_getSize(this); }, "$size", function() { return $java.oktt_TestGroup_size(this); }],
oooicj_RefInt, 0, jl_Object, [], 4, 3, 0, ["$set10", function(var_1) { oooicj_RefInt_set(this, var_1); }, "$get31", function() { return oooicj_RefInt_get(this); }, "$inc0", function() { oooicj_RefInt_inc(this); }],
oktts_GBufferBaseTest$testMain$1$3, "GBufferBaseTest$testMain$1$3", 15, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_GBufferBaseTest$testMain$1$3_invoke(this, var_1); }, "$invoke3", function(var_1) { $java.oktts_GBufferBaseTest$testMain$1$3_invoke0(this, var_1); }],
oktts_GBufferBaseTest$testMain$1$2, "GBufferBaseTest$testMain$1$2", 15, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_GBufferBaseTest$testMain$1$2_invoke(this, var_1); }, "$invoke3", function(var_1) { $java.oktts_GBufferBaseTest$testMain$1$2_invoke0(this, var_1); }],
oktts_GBufferBaseTest$testMain$1$5, "GBufferBaseTest$testMain$1$5", 15, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_GBufferBaseTest$testMain$1$5_invoke(this, var_1); }, "$invoke3", function(var_1) { $java.oktts_GBufferBaseTest$testMain$1$5_invoke0(this, var_1); }],
oktts_GBufferBaseTest$testMain$1$4, "GBufferBaseTest$testMain$1$4", 15, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_GBufferBaseTest$testMain$1$4_invoke(this, var_1); }, "$invoke3", function(var_1) { $java.oktts_GBufferBaseTest$testMain$1$4_invoke0(this, var_1); }],
oktgn_ITransformNode$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktg_IObject3D, 0, jl_Object, [oktgn_IDelegateTransformNode], 3, 3, $java.oktg_IObject3D_$callClinit, 0,
oktt_TvmGL$programs$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktt_TvmGL$programs$1_$callClinit, ["$invoke1", function(var_1) { return $java.oktt_TvmGL$programs$1_invoke(this, var_1); }, "$invoke50", function(var_1) { return $java.oktt_TvmGL$programs$1_invoke0(this, var_1); }],
oktu_AsyncArrayList, 0, ju_ArrayList, [oktu_IAsyncList], 0, 3, $java.oktu_AsyncArrayList_$callClinit, ["$getReady0", function() { return $java.oktu_AsyncArrayList_getReady(this); }, "$getRequests0", function() { return $java.oktu_AsyncArrayList_getRequests(this); }, "$clear", function() { $java.oktu_AsyncArrayList_clear(this); }, "$getSize", function() { return $java.oktu_AsyncArrayList_getSize(this); }, "$size", function() { return $java.oktu_AsyncArrayList_size(this); }]]);
$rt_metadata([oktt_TvmSound$pool$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return $java.oktt_TvmSound$pool$1_invoke(this); }, "$invoke21", function() { return $java.oktt_TvmSound$pool$1_invoke0(this); }],
oooil_CCD$ccd_first_dir_fn, 0, jl_Object, [], 3, 0, 0, 0,
oooil_CCD$1, 0, jl_Object, [oooil_CCD$ccd_first_dir_fn], 4, 0, 0, 0,
oktt_TvmGL$BufferWrap, 0, oktt_TvmGL$GLObject, [], 4, 3, 0, ["$getGl6", function() { return $java.oktt_TvmGL$BufferWrap_getGl(this); }, "$getGl7", function() { return $java.oktt_TvmGL$BufferWrap_getGl0(this); }],
jur_PatternSyntaxException, 0, jl_IllegalArgumentException, [], 0, 3, 0, 0,
cgcj_Yylex, 0, jl_Object, [], 0, 0, $java.cgcj_Yylex_$callClinit, ["$getPosition", function() { return $java.cgcj_Yylex_getPosition(this); }, "$zzRefill", function() { return $java.cgcj_Yylex_zzRefill(this); }, "$yybegin", function(var_1) { $java.cgcj_Yylex_yybegin(this, var_1); }, "$yytext", function() { return $java.cgcj_Yylex_yytext(this); }, "$yycharat", function(var_1) { return $java.cgcj_Yylex_yycharat(this, var_1); }, "$zzScanError", function(var_1) { $java.cgcj_Yylex_zzScanError(this, var_1); }, "$yylex",
function() { return $java.cgcj_Yylex_yylex(this); }],
okttsg_EmissionBloomTest$testMain$1$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return $java.okttsg_EmissionBloomTest$testMain$1$1_invoke(this); }, "$invoke2", function() { $java.okttsg_EmissionBloomTest$testMain$1$1_invoke0(this); }],
oktsg_GLSL, 0, jl_Object, [], 4, 3, oktsg_GLSL_$callClinit, ["$getZeroFloat", function() { return oktsg_GLSL_getZeroFloat(this); }, "$getOneFloat", function() { return oktsg_GLSL_getOneFloat(this); }, "$getDefaultNormal", function() { return oktsg_GLSL_getDefaultNormal(this); }],
oktt_TvmGL$UniformLocationWrap, 0, oktt_TvmGL$GLObject, [], 4, 3, 0, ["$getId", function() { return oktt_TvmGL$UniformLocationWrap_getId(this); }, "$getGl4", function() { return oktt_TvmGL$UniformLocationWrap_getGl(this); }, "$getGl7", function() { return $java.oktt_TvmGL$UniformLocationWrap_getGl(this); }],
oktm_IScreenQuad$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oktgg_GLTFSparse$Indices$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTFSparse$Indices$read$1_invoke(this, var_1); }, "$invoke0", function(var_1) { $java.oktgg_GLTFSparse$Indices$read$1_invoke0(this, var_1); }],
jur_Pattern, 0, jl_Object, [ji_Serializable], 4, 3, 0, ["$matcher", function(var_1) { return jur_Pattern_matcher(this, var_1); }, "$pattern1", function() { return $java.jur_Pattern_pattern(this); }, "$compileImpl", function(var_1, var_2) { return $java.jur_Pattern_compileImpl(this, var_1, var_2); }, "$processAlternations", function(var_1) { return $java.jur_Pattern_processAlternations(this, var_1); }, "$processExpression", function(var_1, var_2, var_3) { return $java.jur_Pattern_processExpression(this, var_1,
var_2, var_3); }, "$processSequence", function() { return $java.jur_Pattern_processSequence(this); }, "$processDecomposedChar", function() { return $java.jur_Pattern_processDecomposedChar(this); }, "$processSubExpression", function(var_1) { return $java.jur_Pattern_processSubExpression(this, var_1); }, "$processQuantifier0", function(var_1, var_2) { return $java.jur_Pattern_processQuantifier(this, var_1, var_2); }, "$processTerminal", function(var_1) { return $java.jur_Pattern_processTerminal(this, var_1); },
"$processRange", function(var_1, var_2) { return $java.jur_Pattern_processRange(this, var_1, var_2); }, "$processRangeExpression", function(var_1) { return $java.jur_Pattern_processRangeExpression(this, var_1); }, "$processCharSet", function(var_1) { return $java.jur_Pattern_processCharSet(this, var_1); }, "$processRangeSet", function(var_1) { return $java.jur_Pattern_processRangeSet(this, var_1); }, "$finalizeCompile", function() { $java.jur_Pattern_finalizeCompile(this); }, "$groupCount0", function() { return $java.jur_Pattern_groupCount(this);
}, "$compCount0", function() { return $java.jur_Pattern_compCount(this); }, "$consCount0", function() { return $java.jur_Pattern_consCount(this); }, "$hasFlag", function(var_1) { return $java.jur_Pattern_hasFlag(this, var_1); }],
ji_UnsupportedEncodingException, "UnsupportedEncodingException", 9, ji_IOException, [], 0, 3, 0, 0,
oktgg_GLTFTexture$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTFTexture$read$1_invoke(this, var_1); }, "$invoke0", function(var_1) { $java.oktgg_GLTFTexture$read$1_invoke0(this, var_1); }],
oktgg_GLTFTexture$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTFTexture$read$2_invoke(this, var_1); }, "$invoke0", function(var_1) { $java.oktgg_GLTFTexture$read$2_invoke0(this, var_1); }],
oooi_DxConvex, 0, oooi_DxGeom, [ooo_DConvex], 0, 3, 0, ["$SupportIndex", function(var_1) { return $java.oooi_DxConvex_SupportIndex(this, var_1); }],
oooig_GimRadixSort, 0, jl_Object, [], 0, 3, oooig_GimRadixSort_$callClinit, 0,
oktgg_GLTF$read$4$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTF$read$4$1_invoke(this, var_1); }, "$invoke10", function(var_1) { $java.oktgg_GLTF$read$4$1_invoke0(this, var_1); }],
oooi_DxSphere$CollideSphereBox, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideSphereBox", function(var_1, var_2, var_3, var_4, var_5) { return $java.oooi_DxSphere$CollideSphereBox_dCollideSphereBox(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return $java.oooi_DxSphere$CollideSphereBox_dColliderFn(this, var_1, var_2, var_3, var_4); }],
jur_UnicodeCategory, "UnicodeCategory", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_UnicodeCategory_contains(this, var_1); }],
jur_UnicodeCategoryScope, "UnicodeCategoryScope", 6, jur_UnicodeCategory, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_UnicodeCategoryScope_contains(this, var_1); }],
oktt_TeaVMApp$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktt_TeaVMApp$2_invoke(this, var_1); }, "$invoke40", function(var_1) { $java.oktt_TeaVMApp$2_invoke0(this, var_1); }],
oktga_AnimPlayer$AnimationDesc, 0, jl_Object, [], 4, 3, 0, ["$setListener", function(var_1) { oktga_AnimPlayer$AnimationDesc_setListener(this, var_1); }, "$getAnimation", function() { return oktga_AnimPlayer$AnimationDesc_getAnimation(this); }, "$setAnimation", function(var_1) { oktga_AnimPlayer$AnimationDesc_setAnimation(this, var_1); }, "$setSpeed", function(var_1) { oktga_AnimPlayer$AnimationDesc_setSpeed(this, var_1); }, "$getTime", function() { return $java.oktga_AnimPlayer$AnimationDesc_getTime(this);
}, "$setTime", function(var_1) { oktga_AnimPlayer$AnimationDesc_setTime(this, var_1); }, "$getOffset", function() { return oktga_AnimPlayer$AnimationDesc_getOffset(this); }, "$setOffset", function(var_1) { oktga_AnimPlayer$AnimationDesc_setOffset(this, var_1); }, "$getDuration", function() { return oktga_AnimPlayer$AnimationDesc_getDuration(this); }, "$setDuration", function(var_1) { oktga_AnimPlayer$AnimationDesc_setDuration(this, var_1); }, "$getLoopCount", function() { return oktga_AnimPlayer$AnimationDesc_getLoopCount(this);
}, "$setLoopCount", function(var_1) { oktga_AnimPlayer$AnimationDesc_setLoopCount(this, var_1); }, "$getPreviousTime", function() { return $java.oktga_AnimPlayer$AnimationDesc_getPreviousTime(this); }, "$getExecutedActions", function() { return $java.oktga_AnimPlayer$AnimationDesc_getExecutedActions(this); }, "$update4", function(var_1) { return oktga_AnimPlayer$AnimationDesc_update(this, var_1); }],
oktt_TeaVMApp$1, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent", function(var_1) { $java.oktt_TeaVMApp$1_handleEvent(this, var_1); }, "$handleEvent$exported$0", function(var_1) { return $java.oktt_TeaVMApp$1_handleEvent$exported$0(this, var_1); }],
oooi_DxSpace$DataCallback, 0, jl_Object, [], 0, 0, 0, 0,
otcit_FloatAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0,
oktgg_IGLTFMaterial$read$8$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_IGLTFMaterial$read$8$1_invoke(this, var_1); }, "$invoke15", function(var_1) { $java.oktgg_IGLTFMaterial$read$8$1_invoke0(this, var_1); }],
oktgg_IGLTFMaterial$read$8$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_IGLTFMaterial$read$8$2_invoke(this, var_1); }, "$invoke0", function(var_1) { $java.oktgg_IGLTFMaterial$read$8$2_invoke0(this, var_1); }],
oktsg_SplitVec4Node$Companion, 0, jl_Object, [], 4, 3, 0, 0,
jur_AbstractCharClass$LazyJavaWhitespace$1, "AbstractCharClass$LazyJavaWhitespace$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_AbstractCharClass$LazyJavaWhitespace$1_contains(this, var_1); }],
oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext, 0, jl_Object, [], 0, 0, 0, ["$Initialize0", function(var_1, var_2) { $java.oooi_DxQuickStep$dxQuickStepperStage0BodiesCallContext_Initialize(this, var_1, var_2); }],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return $java.jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue(this); }],
oktsg_GLSL$2, 0, kji_Lambda, [kjf_Function0], 4, 0, $java.oktsg_GLSL$2_$callClinit, ["$invoke6", function() { return $java.oktsg_GLSL$2_invoke(this); }, "$invoke51", function() { return $java.oktsg_GLSL$2_invoke0(this); }],
oktsg_GLSL$1, 0, kji_Lambda, [kjf_Function0], 4, 0, $java.oktsg_GLSL$1_$callClinit, ["$invoke6", function() { return $java.oktsg_GLSL$1_invoke(this); }, "$invoke52", function() { return $java.oktsg_GLSL$1_invoke0(this); }],
otjt_Uint8Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
oktsg_GLSL$6, 0, kji_Lambda, [kjf_Function0], 4, 0, $java.oktsg_GLSL$6_$callClinit, ["$invoke6", function() { return $java.oktsg_GLSL$6_invoke(this); }, "$invoke53", function() { return $java.oktsg_GLSL$6_invoke0(this); }],
oktsg_GLSL$5, 0, kji_Lambda, [kjf_Function0], 4, 0, $java.oktsg_GLSL$5_$callClinit, ["$invoke6", function() { return $java.oktsg_GLSL$5_invoke(this); }, "$invoke54", function() { return $java.oktsg_GLSL$5_invoke0(this); }],
oktsg_GLSL$4, 0, kji_Lambda, [kjf_Function0], 4, 0, $java.oktsg_GLSL$4_$callClinit, ["$invoke6", function() { return $java.oktsg_GLSL$4_invoke(this); }, "$invoke55", function() { return $java.oktsg_GLSL$4_invoke0(this); }],
oktsg_GLSL$3, 0, kji_Lambda, [kjf_Function0], 4, 0, $java.oktsg_GLSL$3_$callClinit, ["$invoke6", function() { return $java.oktsg_GLSL$3_invoke(this); }, "$invoke56", function() { return $java.oktsg_GLSL$3_invoke0(this); }],
oktsg_GLSL$9, 0, kji_Lambda, [kjf_Function0], 4, 0, $java.oktsg_GLSL$9_$callClinit, ["$invoke6", function() { return $java.oktsg_GLSL$9_invoke(this); }, "$invoke57", function() { return $java.oktsg_GLSL$9_invoke0(this); }],
oktsg_GLSL$8, 0, kji_Lambda, [kjf_Function0], 4, 0, $java.oktsg_GLSL$8_$callClinit, ["$invoke6", function() { return $java.oktsg_GLSL$8_invoke(this); }, "$invoke58", function() { return $java.oktsg_GLSL$8_invoke0(this); }],
oktsg_GLSL$7, 0, kji_Lambda, [kjf_Function0], 4, 0, $java.oktsg_GLSL$7_$callClinit, ["$invoke6", function() { return $java.oktsg_GLSL$7_invoke(this); }, "$invoke59", function() { return $java.oktsg_GLSL$7_invoke0(this); }],
oktgg_GLTF$read$12, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTF$read$12_invoke(this, var_1); }, "$invoke26", function(var_1) { $java.oktgg_GLTF$read$12_invoke0(this, var_1); }],
oktgg_GLTF$read$11, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTF$read$11_invoke(this, var_1); }, "$invoke26", function(var_1) { $java.oktgg_GLTF$read$11_invoke0(this, var_1); }],
jur_AbstractCharClass$LazyJavaLowerCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return $java.jur_AbstractCharClass$LazyJavaLowerCase_computeValue(this); }],
oktmb_MeshBuilder$createVerticesFloat$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktmb_MeshBuilder$createVerticesFloat$1_invoke(this, var_1); }, "$invoke7", function(var_1) { $java.oktmb_MeshBuilder$createVerticesFloat$1_invoke0(this, var_1); }],
oktgg_GLTF$read$10, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTF$read$10_invoke(this, var_1); }, "$invoke26", function(var_1) { $java.oktgg_GLTF$read$10_invoke0(this, var_1); }],
oktu_Color, 0, jl_Object, [], 4, 3, oktu_Color_$callClinit, ["$int3", function(var_1) { return $java.oktu_Color_int(this, var_1); }, "$int2", function(var_1, var_2, var_3, var_4) { return $java.oktu_Color_int0(this, var_1, var_2, var_3, var_4); }, "$float6", function(var_1, var_2, var_3, var_4) { return $java.oktu_Color_float(this, var_1, var_2, var_3, var_4); }, "$getCYAN", function() { return oktu_Color_getCYAN(this); }, "$getGREEN", function() { return oktu_Color_getGREEN(this); }, "$getOLIVE", function()
{ return oktu_Color_getOLIVE(this); }, "$getORANGE", function() { return oktu_Color_getORANGE(this); }, "$getPINK", function() { return oktu_Color_getPINK(this); }, "$toFloatBits", function(var_1) { return $java.oktu_Color_toFloatBits(this, var_1); }, "$intToFloatColor", function(var_1) { return $java.oktu_Color_intToFloatColor(this, var_1); }],
oktgg_GLTF$read$17, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return $java.oktgg_GLTF$read$17_invoke(this); }, "$invoke2", function() { $java.oktgg_GLTF$read$17_invoke0(this); }],
oktts_FXAATest$testMain$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_FXAATest$testMain$1$1_invoke(this, var_1); }, "$invoke8", function(var_1) { $java.oktts_FXAATest$testMain$1$1_invoke0(this, var_1); }]]);
$rt_metadata([oom_DMatrix3, 0, jl_Object, [oom_DMatrix3C], 4, 3, $java.oom_DMatrix3_$callClinit, ["$set4", function(var_1) { return oom_DMatrix3_set(this, var_1); }, "$clone1", function() { return $java.oom_DMatrix3_clone(this); }, "$setCol", function(var_1, var_2) { oom_DMatrix3_setCol(this, var_1, var_2); }, "$set56", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { oom_DMatrix3_set0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$columnAsNewVector", function(var_1)
{ return $java.oom_DMatrix3_columnAsNewVector(this, var_1); }, "$add12", function(var_1) { return oom_DMatrix3_add(this, var_1); }, "$scale2", function(var_1) { oom_DMatrix3_scale(this, var_1); }, "$viewCol", function(var_1) { return $java.oom_DMatrix3_viewCol(this, var_1); }, "$get00", function() { return oom_DMatrix3_get00(this); }, "$get010", function() { return oom_DMatrix3_get01(this); }, "$get02", function() { return oom_DMatrix3_get02(this); }, "$get100", function() { return oom_DMatrix3_get10(this);
}, "$get11", function() { return oom_DMatrix3_get11(this); }, "$get12", function() { return oom_DMatrix3_get12(this); }, "$get200", function() { return oom_DMatrix3_get20(this); }, "$get21", function() { return oom_DMatrix3_get21(this); }, "$get22", function() { return oom_DMatrix3_get22(this); }, "$set000", function(var_1) { oom_DMatrix3_set00(this, var_1); }, "$set01", function(var_1) { oom_DMatrix3_set01(this, var_1); }, "$set02", function(var_1) { oom_DMatrix3_set02(this, var_1); }, "$set100", function(var_1)
{ oom_DMatrix3_set10(this, var_1); }, "$set110", function(var_1) { oom_DMatrix3_set11(this, var_1); }, "$set120", function(var_1) { oom_DMatrix3_set12(this, var_1); }, "$set200", function(var_1) { oom_DMatrix3_set20(this, var_1); }, "$set21", function(var_1) { oom_DMatrix3_set21(this, var_1); }, "$set22", function(var_1) { oom_DMatrix3_set22(this, var_1); }, "$eqIdentity", function() { $java.oom_DMatrix3_eqIdentity(this); }, "$setIdentity", function() { return oom_DMatrix3_setIdentity(this); }, "$eqZero", function()
{ $java.oom_DMatrix3_eqZero(this); }, "$setZero", function() { oom_DMatrix3_setZero(this); }, "$reTranspose", function() { return oom_DMatrix3_reTranspose(this); }, "$dotCol0", function(var_1, var_2) { return $java.oom_DMatrix3_dotCol(this, var_1, var_2); }, "$dotRow", function(var_1, var_2) { return $java.oom_DMatrix3_dotRow(this, var_1, var_2); }, "$dotColCol", function(var_1, var_2, var_3) { return $java.oom_DMatrix3_dotColCol(this, var_1, var_2, var_3); }, "$dotRowCol", function(var_1, var_2, var_3) { return $java.oom_DMatrix3_dotRowCol(this,
var_1, var_2, var_3); }, "$dotRowRow", function(var_1, var_2, var_3) { return $java.oom_DMatrix3_dotRowRow(this, var_1, var_2, var_3); }, "$get6", function(var_1, var_2) { return oom_DMatrix3_get(this, var_1, var_2); }, "$set57", function(var_1, var_2, var_3) { oom_DMatrix3_set1(this, var_1, var_2, var_3); }, "$add13", function(var_1, var_2, var_3) { oom_DMatrix3_add0(this, var_1, var_2, var_3); }, "$sub4", function(var_1, var_2, var_3) { $java.oom_DMatrix3_sub(this, var_1, var_2, var_3); }],
oktgg_GLTF$read$16, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTF$read$16_invoke(this, var_1); }, "$invoke14", function(var_1) { $java.oktgg_GLTF$read$16_invoke0(this, var_1); }],
oktgg_GLTF$read$15, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTF$read$15_invoke(this, var_1); }, "$invoke0", function(var_1) { $java.oktgg_GLTF$read$15_invoke0(this, var_1); }],
oktgg_GLTF$read$14, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTF$read$14_invoke(this, var_1); }, "$invoke26", function(var_1) { $java.oktgg_GLTF$read$14_invoke0(this, var_1); }],
oktgg_GLTF$read$13, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTF$read$13_invoke(this, var_1); }, "$invoke26", function(var_1) { $java.oktgg_GLTF$read$13_invoke0(this, var_1); }],
oktm_IMat4$Companion$Build$1, 0, kji_Lambda, [kjf_Function0], 4, 0, oktm_IMat4$Companion$Build$1_$callClinit, ["$invoke6", function() { return $java.oktm_IMat4$Companion$Build$1_invoke(this); }, "$invoke60", function() { return $java.oktm_IMat4$Companion$Build$1_invoke0(this); }],
okttm_PlaneMeshBuilderTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return $java.okttm_PlaneMeshBuilderTest_getName(this); }, "$testMain", function() { $java.okttm_PlaneMeshBuilderTest_testMain(this); }],
ju_GenericEnumSet, 0, ju_EnumSet, [], 0, 0, 0, ["$contains1", function(var_1) { return $java.ju_GenericEnumSet_contains(this, var_1); }, "$fastAdd", function(var_1) { $java.ju_GenericEnumSet_fastAdd(this, var_1); }],
jl_ClassLoader, 0, jl_Object, [], 1, 3, $java.jl_ClassLoader_$callClinit, 0,
ju_ConcurrentModificationException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
ju_Hashtable$1, 0, jl_Object, [ju_Enumeration], 4, 0, 0, 0,
ju_Hashtable$2, 0, jl_Object, [ju_Iterator], 4, 0, 0, 0,
oktgg_GLTFMaterial, 0, jl_Object, [oktgg_IGLTFMaterial], 0, 3, 0, ["$getName", function() { return $java.oktgg_GLTFMaterial_getName(this); }, "$setName", function(var_1) { $java.oktgg_GLTFMaterial_setName(this, var_1); }, "$getAlphaMode", function() { return $java.oktgg_GLTFMaterial_getAlphaMode(this); }, "$setAlphaMode", function(var_1) { $java.oktgg_GLTFMaterial_setAlphaMode(this, var_1); }, "$getAlphaCutoff", function() { return $java.oktgg_GLTFMaterial_getAlphaCutoff(this); }, "$setAlphaCutoff", function(var_1)
{ $java.oktgg_GLTFMaterial_setAlphaCutoff(this, var_1); }, "$getDoubleSided", function() { return $java.oktgg_GLTFMaterial_getDoubleSided(this); }, "$setDoubleSided", function(var_1) { $java.oktgg_GLTFMaterial_setDoubleSided(this, var_1); }, "$getBaseColorTexture", function() { return $java.oktgg_GLTFMaterial_getBaseColorTexture(this); }, "$setBaseColorTexture", function(var_1) { $java.oktgg_GLTFMaterial_setBaseColorTexture(this, var_1); }, "$getBaseColorTextureUV", function() { return $java.oktgg_GLTFMaterial_getBaseColorTextureUV(this);
}, "$setBaseColorTextureUV", function(var_1) { $java.oktgg_GLTFMaterial_setBaseColorTextureUV(this, var_1); }, "$setBaseColor0", function(var_1) { $java.oktgg_GLTFMaterial_setBaseColor(this, var_1); }, "$setMetallic0", function(var_1) { $java.oktgg_GLTFMaterial_setMetallic(this, var_1); }, "$setRoughness0", function(var_1) { $java.oktgg_GLTFMaterial_setRoughness(this, var_1); }, "$getMetallicRoughnessTexture", function() { return $java.oktgg_GLTFMaterial_getMetallicRoughnessTexture(this); }, "$setMetallicRoughnessTexture",
function(var_1) { $java.oktgg_GLTFMaterial_setMetallicRoughnessTexture(this, var_1); }, "$getMetallicRoughnessTextureUV", function() { return $java.oktgg_GLTFMaterial_getMetallicRoughnessTextureUV(this); }, "$setMetallicRoughnessTextureUV", function(var_1) { $java.oktgg_GLTFMaterial_setMetallicRoughnessTextureUV(this, var_1); }, "$setOcclusionStrength", function(var_1) { $java.oktgg_GLTFMaterial_setOcclusionStrength(this, var_1); }, "$getOcclusionTexture", function() { return $java.oktgg_GLTFMaterial_getOcclusionTexture(this);
}, "$setOcclusionTexture", function(var_1) { $java.oktgg_GLTFMaterial_setOcclusionTexture(this, var_1); }, "$getOcclusionTextureUV", function() { return $java.oktgg_GLTFMaterial_getOcclusionTextureUV(this); }, "$setOcclusionTextureUV", function(var_1) { $java.oktgg_GLTFMaterial_setOcclusionTextureUV(this, var_1); }, "$setNormalScale", function(var_1) { $java.oktgg_GLTFMaterial_setNormalScale(this, var_1); }, "$getNormalTexture", function() { return $java.oktgg_GLTFMaterial_getNormalTexture(this); }, "$setNormalTexture",
function(var_1) { $java.oktgg_GLTFMaterial_setNormalTexture(this, var_1); }, "$getNormalTextureUV", function() { return $java.oktgg_GLTFMaterial_getNormalTextureUV(this); }, "$setNormalTextureUV", function(var_1) { $java.oktgg_GLTFMaterial_setNormalTextureUV(this, var_1); }, "$setEmissiveFactor", function(var_1) { $java.oktgg_GLTFMaterial_setEmissiveFactor(this, var_1); }, "$getEmissiveTexture", function() { return $java.oktgg_GLTFMaterial_getEmissiveTexture(this); }, "$setEmissiveTexture", function(var_1) {
$java.oktgg_GLTFMaterial_setEmissiveTexture(this, var_1); }, "$getEmissiveTextureUV", function() { return $java.oktgg_GLTFMaterial_getEmissiveTextureUV(this); }, "$setEmissiveTextureUV", function(var_1) { $java.oktgg_GLTFMaterial_setEmissiveTextureUV(this, var_1); }, "$getGltf0", function() { return $java.oktgg_GLTFMaterial_getGltf(this); }, "$getMaterial", function() { return $java.oktgg_GLTFMaterial_getMaterial(this); }, "$buildShaders", function() { $java.oktgg_GLTFMaterial_buildShaders(this); }, "$read",
function(var_1) { $java.oktgg_GLTFMaterial_read(this, var_1); }],
oktts_CascadedShadowMappingBaseTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return $java.oktts_CascadedShadowMappingBaseTest_getName(this); }, "$getNumCascades", function() { return oktts_CascadedShadowMappingBaseTest_getNumCascades(this); }, "$getCascadeEnd", function() { return oktts_CascadedShadowMappingBaseTest_getCascadeEnd(this); }, "$getLightProj", function() { return oktts_CascadedShadowMappingBaseTest_getLightProj(this); }, "$updateFrustums", function() { oktts_CascadedShadowMappingBaseTest_updateFrustums(this);
}, "$testMain", function() { $java.oktts_CascadedShadowMappingBaseTest_testMain(this); }],
oktsg_SkyboxVertexNode, 0, oktsg_ShaderNode, [], 4, 3, $java.oktsg_SkyboxVertexNode_$callClinit, ["$setAPositionName", function(var_1) { oktsg_SkyboxVertexNode_setAPositionName(this, var_1); }, "$getViewProjectionMatrix0", function() { return $java.oktsg_SkyboxVertexNode_getViewProjectionMatrix(this); }, "$getPreviousViewProjectionMatrix", function() { return $java.oktsg_SkyboxVertexNode_getPreviousViewProjectionMatrix(this); }, "$getAttributePosition", function() { return oktsg_SkyboxVertexNode_getAttributePosition(this);
}, "$getClipSpacePosition", function() { return oktsg_SkyboxVertexNode_getClipSpacePosition(this); }, "$getUSkyboxVertexTransformName", function() { return $java.oktsg_SkyboxVertexNode_getUSkyboxVertexTransformName(this); }, "$prepareToDrawScene", function(var_1) { $java.oktsg_SkyboxVertexNode_prepareToDrawScene(this, var_1); }, "$declarationFrag", function(var_1) { $java.oktsg_SkyboxVertexNode_declarationFrag(this, var_1); }, "$declarationVert", function(var_1) { $java.oktsg_SkyboxVertexNode_declarationVert(this,
var_1); }, "$executionFrag", function(var_1) { $java.oktsg_SkyboxVertexNode_executionFrag(this, var_1); }, "$executionVert", function(var_1) { $java.oktsg_SkyboxVertexNode_executionVert(this, var_1); }],
oktsp_Threshold$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oooi_CollideBoxBox, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dCollideBoxBox", function(var_1, var_2, var_3, var_4, var_5) { return $java.oooi_CollideBoxBox_dCollideBoxBox(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return $java.oooi_CollideBoxBox_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktga_AnimPlayer$Companion$vec4Pool$1, 0, kji_Lambda, [kjf_Function0], 4, 0, $java.oktga_AnimPlayer$Companion$vec4Pool$1_$callClinit, ["$invoke6", function() { return $java.oktga_AnimPlayer$Companion$vec4Pool$1_invoke(this); }, "$invoke61", function() { return $java.oktga_AnimPlayer$Companion$vec4Pool$1_invoke0(this); }],
oktsg_MergeVec4, 0, oktsg_ShaderNode, [], 4, 3, $java.oktsg_MergeVec4_$callClinit, 0,
oktam_MockAudio, 0, jl_Object, [okta_IAL], 4, 3, 0, ["$newSound", function(var_1) { return $java.oktam_MockAudio_newSound(this, var_1); }],
oktt_SkyboxTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return $java.oktt_SkyboxTest_getName(this); }, "$testMain", function() { $java.oktt_SkyboxTest_testMain(this); }],
oktts_BloomBaseTest$testMain$2$4, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_BloomBaseTest$testMain$2$4_invoke(this, var_1); }, "$invoke12", function(var_1) { $java.oktts_BloomBaseTest$testMain$2$4_invoke0(this, var_1); }],
oktts_BloomBaseTest$testMain$2$3, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_BloomBaseTest$testMain$2$3_invoke(this, var_1); }, "$invoke12", function(var_1) { $java.oktts_BloomBaseTest$testMain$2$3_invoke0(this, var_1); }],
oktts_BloomBaseTest$testMain$2$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_BloomBaseTest$testMain$2$2_invoke(this, var_1); }, "$invoke12", function(var_1) { $java.oktts_BloomBaseTest$testMain$2$2_invoke0(this, var_1); }],
oktts_BloomBaseTest$testMain$2$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_BloomBaseTest$testMain$2$1_invoke(this, var_1); }, "$invoke8", function(var_1) { $java.oktts_BloomBaseTest$testMain$2$1_invoke0(this, var_1); }],
jur_AbstractCharClass$LazyJavaUpperCase$1, "AbstractCharClass$LazyJavaUpperCase$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_AbstractCharClass$LazyJavaUpperCase$1_contains(this, var_1); }],
jn_URLDecoder, 0, jl_Object, [], 4, 3, 0, 0,
oktmb_PlaneMeshBuilder$1, 0, kji_Lambda, [kjf_Function2], 4, 0, oktmb_PlaneMeshBuilder$1_$callClinit, ["$invoke11", function(var_1, var_2) { return $java.oktmb_PlaneMeshBuilder$1_invoke(this, var_1, var_2); }, "$invoke27", function(var_1, var_2) { return $java.oktmb_PlaneMeshBuilder$1_invoke0(this, var_1, var_2); }],
otpp_ResourceAccessor, 0, jl_Object, [], 4, 0, 0, 0,
oooi_OdeInit, 0, jl_Object, [], 0, 3, $java.oooi_OdeInit_$callClinit, 0,
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1, "AbstractCharClass$LazyJavaIdentifierIgnorable$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return $java.jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains(this, var_1); }],
oktsp_FXAA$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktam_MockSound, 0, jl_Object, [okta_ISound], 4, 3, 0, ["$play", function(var_1, var_2, var_3, var_4) { return $java.oktam_MockSound_play(this, var_1, var_2, var_3, var_4); }],
oktt_TvmGL$GLObjectArray, 0, ju_ArrayList, [], 4, 3, 0, ["$gl4", function(var_1) { return oktt_TvmGL$GLObjectArray_gl(this, var_1); }, "$wrap3", function(var_1) { return oktt_TvmGL$GLObjectArray_wrap(this, var_1); }, "$new", function(var_1) { return oktt_TvmGL$GLObjectArray_new(this, var_1); }, "$delete1", function(var_1) { return oktt_TvmGL$GLObjectArray_delete(this, var_1); }, "$getSize", function() { return $java.oktt_TvmGL$GLObjectArray_getSize(this); }, "$size", function() { return $java.oktt_TvmGL$GLObjectArray_size(this);
}],
oooi_DxQuickStep$dxQuickStepperStage3CallContext, 0, jl_Object, [], 0, 0, 0, ["$Initialize3", function(var_1, var_2, var_3) { $java.oooi_DxQuickStep$dxQuickStepperStage3CallContext_Initialize(this, var_1, var_2, var_3); }],
okttsg_MotionBlurTest$testMain$3, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return $java.okttsg_MotionBlurTest$testMain$3_invoke(this); }, "$invoke2", function() { $java.okttsg_MotionBlurTest$testMain$3_invoke0(this); }],
okttsg_MotionBlurTest$testMain$2, 0, jl_Object, [okti_IMouseListener], 4, 3, 0, ["$buttonUp", function(var_1, var_2, var_3, var_4) { $java.okttsg_MotionBlurTest$testMain$2_buttonUp(this, var_1, var_2, var_3, var_4); }, "$buttonDown0", function(var_1, var_2, var_3, var_4) { $java.okttsg_MotionBlurTest$testMain$2_buttonDown(this, var_1, var_2, var_3, var_4); }, "$dragged0", function(var_1, var_2, var_3) { $java.okttsg_MotionBlurTest$testMain$2_dragged(this, var_1, var_2, var_3); }, "$moved0", function(var_1, var_2)
{ $java.okttsg_MotionBlurTest$testMain$2_moved(this, var_1, var_2); }, "$scrolled0", function(var_1) { $java.okttsg_MotionBlurTest$testMain$2_scrolled(this, var_1); }],
oktgg_GLTF$read$9$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTF$read$9$1_invoke(this, var_1); }, "$invoke10", function(var_1) { $java.oktgg_GLTF$read$9$1_invoke0(this, var_1); }],
otjb_Performance, 0, jl_Object, [otj_JSObject], 4, 3, 0, 0,
okttsg_SSAOTest$testMain$1$3$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.okttsg_SSAOTest$testMain$1$3$1_invoke(this, var_1); }, "$invoke8", function(var_1) { $java.okttsg_SSAOTest$testMain$1$3$1_invoke0(this, var_1); }],
jn_ByteBufferImpl, 0, jn_ByteBuffer, [], 0, 0, 0, ["$isReadOnly", function() { return $java.jn_ByteBufferImpl_isReadOnly(this); }],
oooij_DxJoint$Info1, 0, jl_Object, [], 4, 3, 0, ["$setM", function(var_1) { oooij_DxJoint$Info1_setM(this, var_1); }, "$setNub", function(var_1) { oooij_DxJoint$Info1_setNub(this, var_1); }],
oktpo_OdeRigidBody, 0, jl_Object, [oktp_IRigidBody], 4, 3, $java.oktpo_OdeRigidBody_$callClinit, ["$getInfluenceOtherBodies", function() { return oktpo_OdeRigidBody_getInfluenceOtherBodies(this); }, "$setGravityEnabled", function(var_1) { $java.oktpo_OdeRigidBody_setGravityEnabled(this, var_1); }, "$isStatic0", function() { return $java.oktpo_OdeRigidBody_isStatic(this); }, "$setStatic", function(var_1) { $java.oktpo_OdeRigidBody_setStatic(this, var_1); }, "$getShape", function() { return $java.oktpo_OdeRigidBody_getShape(this);
}, "$setShape", function(var_1) { oktpo_OdeRigidBody_setShape(this, var_1); }, "$getWorldTransform", function(var_1) { return $java.oktpo_OdeRigidBody_getWorldTransform(this, var_1); }, "$setPosition3", function(var_1, var_2, var_3) { $java.oktpo_OdeRigidBody_setPosition(this, var_1, var_2, var_3); }, "$getMass0", function() { return $java.oktpo_OdeRigidBody_getMass(this); }, "$getFriction", function() { return oktpo_OdeRigidBody_getFriction(this); }, "$setPosition1", function(var_1, var_2, var_3) { $java.oktpo_OdeRigidBody_setPosition0(this,
var_1, var_2, var_3); }],
oooi_DxQuickStep, 0, oooi_AbstractStepper, [oooip_DxStepperProcessingCallContext$dstepper_fn_t, oooip_DxWorldProcessIslandsInfo$dmemestimate_fn_t, oooip_DxStepperProcessingCallContext$dmaxcallcountestimate_fn_t], 0, 3, oooi_DxQuickStep_$callClinit, ["$ensureSize_invI", function(var_1) { return $java.oooi_DxQuickStep_ensureSize_invI(this, var_1); }, "$ensureSize_jointinfos", function(var_1) { return $java.oooi_DxQuickStep_ensureSize_jointinfos(this, var_1); }, "$dxQuickStepIsland", function(var_1) { $java.oooi_DxQuickStep_dxQuickStepIsland(this,
var_1); }, "$dxEstimateMemoryRequirements", function(var_1, var_2, var_3, var_4, var_5, var_6) { return $java.oooi_DxQuickStep_dxEstimateMemoryRequirements(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$run5", function(var_1) { $java.oooi_DxQuickStep_run(this, var_1); }],
oktg_IObject3D$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
kt_Charsets, 0, jl_Object, [], 4, 3, kt_Charsets_$callClinit, 0,
oktsg_GBufferOutputNode, 0, oktsg_ShaderNode, [], 4, 3, $java.oktsg_GBufferOutputNode_$callClinit, ["$getVertPosition", function() { return $java.oktsg_GBufferOutputNode_getVertPosition(this); }, "$setVertPosition", function(var_1) { oktsg_GBufferOutputNode_setVertPosition(this, var_1); }, "$getFragColor", function() { return $java.oktsg_GBufferOutputNode_getFragColor(this); }, "$setFragColor", function(var_1) { oktsg_GBufferOutputNode_setFragColor(this, var_1); }, "$getFragNormal", function() { return $java.oktsg_GBufferOutputNode_getFragNormal(this);
}, "$setFragNormal", function(var_1) { oktsg_GBufferOutputNode_setFragNormal(this, var_1); }, "$getFragPosition", function() { return $java.oktsg_GBufferOutputNode_getFragPosition(this); }, "$setFragPosition", function(var_1) { oktsg_GBufferOutputNode_setFragPosition(this, var_1); }, "$getOutput", function() { return $java.oktsg_GBufferOutputNode_getOutput(this); }, "$setAlphaMode0", function(var_1) { oktsg_GBufferOutputNode_setAlphaMode(this, var_1); }, "$setAlphaCutoff", function(var_1) { oktsg_GBufferOutputNode_setAlphaCutoff(this,
var_1); }, "$setCullFaceMode", function(var_1) { oktsg_GBufferOutputNode_setCullFaceMode(this, var_1); }, "$declarationFrag", function(var_1) { $java.oktsg_GBufferOutputNode_declarationFrag(this, var_1); }, "$prepareToDrawMesh0", function(var_1) { $java.oktsg_GBufferOutputNode_prepareToDrawMesh(this, var_1); }, "$executionVert", function(var_1) { $java.oktsg_GBufferOutputNode_executionVert(this, var_1); }, "$executionFrag", function(var_1) { $java.oktsg_GBufferOutputNode_executionFrag(this, var_1); }],
oktg_Object3D, 0, jl_Object, [oktg_IObject3D], 0, 3, 0, ["$getNode", function() { return $java.oktg_Object3D_getNode(this); }, "$setNode", function(var_1) { $java.oktg_Object3D_setNode(this, var_1); }, "$getPreviousTransform", function() { return $java.oktg_Object3D_getPreviousTransform(this); }, "$setPreviousTransform", function(var_1) { $java.oktg_Object3D_setPreviousTransform(this, var_1); }, "$setName", function(var_1) { $java.oktg_Object3D_setName(this, var_1); }, "$getMeshes0", function() { return $java.oktg_Object3D_getMeshes(this);
}, "$getArmature", function() { return $java.oktg_Object3D_getArmature(this); }, "$setArmature", function(var_1) { $java.oktg_Object3D_setArmature(this, var_1); }, "$updatePreviousTransform0", function() { $java.oktg_Object3D_updatePreviousTransform(this); }, "$update", function(var_1) { $java.oktg_Object3D_update(this, var_1); }, "$render7", function(var_1) { $java.oktg_Object3D_render(this, var_1); }, "$clear", function() { $java.oktg_Object3D_clear(this); }, "$getPosition0", function() { return $java.oktg_Object3D_getPosition(this);
}, "$getRotation0", function() { return $java.oktg_Object3D_getRotation(this); }, "$getScale0", function() { return $java.oktg_Object3D_getScale(this); }, "$getWorldMatrix", function() { return $java.oktg_Object3D_getWorldMatrix(this); }, "$setParentNode", function(var_1) { $java.oktg_Object3D_setParentNode(this, var_1); }, "$updateTransform0", function(var_1) { $java.oktg_Object3D_updateTransform(this, var_1); }, "$getWorldMatrix0", function(var_1, var_2) { return $java.oktg_Object3D_getWorldMatrix0(this, var_1,
var_2); }],
ju_LinkedList, 0, ju_AbstractSequentialList, [ju_Deque], 0, 3, 0, ["$size", function() { return $java.ju_LinkedList_size(this); }, "$listIterator0", function() { return $java.ju_LinkedList_listIterator(this); }, "$listIterator", function(var_1) { return $java.ju_LinkedList_listIterator0(this, var_1); }, "$poll", function() { return $java.ju_LinkedList_poll(this); }, "$addLast", function(var_1) { $java.ju_LinkedList_addLast(this, var_1); }, "$removeLast", function() { return $java.ju_LinkedList_removeLast(this);
}, "$pollLast", function() { return $java.ju_LinkedList_pollLast(this); }, "$getLast", function() { return $java.ju_LinkedList_getLast(this); }],
oktts_ShadowMappingBaseTest$testMain$2, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return $java.oktts_ShadowMappingBaseTest$testMain$2_invoke(this); }, "$invoke2", function() { $java.oktts_ShadowMappingBaseTest$testMain$2_invoke0(this); }]]);
$rt_metadata([otjc_JSString, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
okts_IShader$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
oooi_DxConvex$Edge, 0, jl_Object, [], 0, 0, 0, 0,
otja_XMLHttpRequest, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
oktn_NET, 0, jl_Object, [], 4, 3, oktn_NET_$callClinit, ["$isSuccess", function(var_1) { return oktn_NET_isSuccess(this, var_1); }],
oktm_ScreenQuad$TextureRenderer, 0, oktm_ScreenQuad, [], 4, 3, 0, ["$setPosition2", function(var_1, var_2) { oktm_ScreenQuad$TextureRenderer_setPosition(this, var_1, var_2); }, "$setScale", function(var_1, var_2) { oktm_ScreenQuad$TextureRenderer_setScale(this, var_1, var_2); }, "$render12", function(var_1, var_2, var_3, var_4) { $java.oktm_ScreenQuad$TextureRenderer_render(this, var_1, var_2, var_3, var_4); }],
kr_IntRange$Companion, 0, jl_Object, [], 4, 3, 0, ["$getEMPTY", function() { return kr_IntRange$Companion_getEMPTY(this); }],
oooi_DxQuickStep$10, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$10_run(this); }],
jl_System, 0, jl_Object, [], 4, 3, 0, 0,
jm_Conversion, 0, jl_Object, [], 0, 0, jm_Conversion_$callClinit, 0,
oktm_IVec4$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0,
jur_AbstractCharClass$LazyXDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return $java.jur_AbstractCharClass$LazyXDigit_computeValue(this); }],
oktt_TvmUInt16Array, 0, oktt_TvmArrayBufferView, [oktd_IShortData], 4, 3, 0, ["$getSize", function() { return $java.oktt_TvmUInt16Array_getSize(this); }, "$get39", function(var_1) { return $java.oktt_TvmUInt16Array_get(this, var_1); }, "$get1", function(var_1) { return $java.oktt_TvmUInt16Array_get0(this, var_1); }, "$get40", function() { return $java.oktt_TvmUInt16Array_get1(this); }, "$get15", function() { return $java.oktt_TvmUInt16Array_get2(this); }, "$put18", function(var_1) { $java.oktt_TvmUInt16Array_put(this,
var_1); }, "$put8", function(var_1) { $java.oktt_TvmUInt16Array_put0(this, var_1); }, "$put20", function(var_1) { $java.oktt_TvmUInt16Array_put1(this, var_1); }, "$put4", function(var_1) { $java.oktt_TvmUInt16Array_put2(this, var_1); }, "$toInt0", function(var_1) { return $java.oktt_TvmUInt16Array_toInt(this, var_1); }],
oooicj_RefFloat, 0, jl_Object, [], 4, 3, 0, 0,
jur_Matcher, 0, jl_Object, [jur_MatchResult], 4, 3, 0, ["$find1", function(var_1) { return $java.jur_Matcher_find(this, var_1); }, "$findAt", function(var_1) { return $java.jur_Matcher_findAt(this, var_1); }, "$find0", function() { return jur_Matcher_find(this); }, "$start", function(var_1) { return $java.jur_Matcher_start(this, var_1); }, "$end", function(var_1) { return $java.jur_Matcher_end(this, var_1); }, "$start0", function() { return jur_Matcher_start(this); }, "$end0", function() { return jur_Matcher_end(this);
}, "$hasTransparentBounds", function() { return $java.jur_Matcher_hasTransparentBounds(this); }],
jur_DotAllSet, 0, jur_JointSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return $java.jur_DotAllSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { $java.jur_DotAllSet_setNext(this, var_1); }, "$getType", function() { return $java.jur_DotAllSet_getType(this); }, "$hasConsumed", function(var_1) { return $java.jur_DotAllSet_hasConsumed(this, var_1); }],
oooig_GimTrimeshSphereCollision, 0, jl_Object, [], 0, 3, 0, 0,
okttm_MeshTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return $java.okttm_MeshTest_getName(this); }, "$testMain", function() { $java.okttm_MeshTest_testMain(this); }],
jur_AbstractCharClass$LazyJavaUpperCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return $java.jur_AbstractCharClass$LazyJavaUpperCase_computeValue(this); }],
oktts_ThresholdTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return $java.oktts_ThresholdTest_getName(this); }, "$testMain", function() { $java.oktts_ThresholdTest_testMain(this); }],
oooi_DxQuickStep$21, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$21_run(this); }],
oooi_DxQuickStep$20, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$20_run(this); }],
oooig_GimRadixSort$3, 0, jl_Object, [oooig_GimRadixSort$GimCompMacro], 4, 0, 0, 0,
kji_Ref$IntRef, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0,
oooig_GimRadixSort$1, 0, jl_Object, [oooig_GimRadixSort$GimRSortTokenComparator], 4, 0, 0, ["$run8", function(var_1, var_2) { return $java.oooig_GimRadixSort$1_run(this, var_1, var_2); }],
oooig_GimRadixSort$2, 0, jl_Object, [oooig_GimRadixSort$GimExchangeMacro], 4, 0, 0, ["$run9", function(var_1, var_2, var_3) { $java.oooig_GimRadixSort$2_run(this, var_1, var_2, var_3); }],
oktm_IVertexBuffer$Companion, 0, jl_Object, [], 4, 3, oktm_IVertexBuffer$Companion_$callClinit, ["$build2", function(var_1, var_2, var_3, var_4) { return $java.oktm_IVertexBuffer$Companion_build(this, var_1, var_2, var_3, var_4); }, "$getBuild0", function() { return oktm_IVertexBuffer$Companion_getBuild(this); }],
oktgc_ActiveCamera, 0, jl_Object, [oktgc_ICamera], 4, 3, oktgc_ActiveCamera_$callClinit, ["$getApi", function() { return oktgc_ActiveCamera_getApi(this); }, "$setApi", function(var_1) { oktgc_ActiveCamera_setApi(this, var_1); }, "$getPosition0", function() { return oktgc_ActiveCamera_getPosition(this); }, "$getProjectionMatrix", function() { return oktgc_ActiveCamera_getProjectionMatrix(this); }, "$getViewMatrix", function() { return oktgc_ActiveCamera_getViewMatrix(this); }, "$getViewProjectionMatrix", function()
{ return oktgc_ActiveCamera_getViewProjectionMatrix(this); }, "$getPreviousViewProjectionMatrix0", function() { return oktgc_ActiveCamera_getPreviousViewProjectionMatrix(this); }, "$getInverseViewProjectionMatrix", function() { return oktgc_ActiveCamera_getInverseViewProjectionMatrix(this); }, "$getFrustum", function() { return oktgc_ActiveCamera_getFrustum(this); }, "$getFar", function() { return oktgc_ActiveCamera_getFar(this); }, "$setFar", function(var_1) { oktgc_ActiveCamera_setFar(this, var_1); }, "$updatePreviousTransform0",
function() { oktgc_ActiveCamera_updatePreviousTransform(this); }, "$update0", function() { oktgc_ActiveCamera_update(this); }, "$lookAt0", function(var_1, var_2, var_3) { $java.oktgc_ActiveCamera_lookAt(this, var_1, var_2, var_3); }, "$dst23", function(var_1, var_2) { return $java.oktgc_ActiveCamera_dst2(this, var_1, var_2); }],
oktsg_PrincipledBSDF, 0, oktsg_ShaderNode, [], 4, 3, $java.oktsg_PrincipledBSDF_$callClinit, ["$getWorldPosition", function() { return $java.oktsg_PrincipledBSDF_getWorldPosition(this); }, "$setWorldPosition", function(var_1) { oktsg_PrincipledBSDF_setWorldPosition(this, var_1); }, "$getNormalizedViewVector", function() { return $java.oktsg_PrincipledBSDF_getNormalizedViewVector(this); }, "$setNormalizedViewVector", function(var_1) { oktsg_PrincipledBSDF_setNormalizedViewVector(this, var_1); }, "$getBaseColor",
function() { return $java.oktsg_PrincipledBSDF_getBaseColor(this); }, "$setBaseColor", function(var_1) { oktsg_PrincipledBSDF_setBaseColor(this, var_1); }, "$getNormal0", function() { return $java.oktsg_PrincipledBSDF_getNormal(this); }, "$setNormal", function(var_1) { oktsg_PrincipledBSDF_setNormal(this, var_1); }, "$getOcclusion", function() { return $java.oktsg_PrincipledBSDF_getOcclusion(this); }, "$setOcclusion", function(var_1) { oktsg_PrincipledBSDF_setOcclusion(this, var_1); }, "$getRoughness", function()
{ return $java.oktsg_PrincipledBSDF_getRoughness(this); }, "$setRoughness", function(var_1) { oktsg_PrincipledBSDF_setRoughness(this, var_1); }, "$getMetallic", function() { return $java.oktsg_PrincipledBSDF_getMetallic(this); }, "$setMetallic", function(var_1) { oktsg_PrincipledBSDF_setMetallic(this, var_1); }, "$getClipSpacePosition", function() { return $java.oktsg_PrincipledBSDF_getClipSpacePosition(this); }, "$setClipSpacePosition", function(var_1) { oktsg_PrincipledBSDF_setClipSpacePosition(this, var_1);
}, "$getResult", function() { return oktsg_PrincipledBSDF_getResult(this); }, "$setReceiveShadows", function(var_1) { oktsg_PrincipledBSDF_setReceiveShadows(this, var_1); }, "$prepareToBuild", function() { $java.oktsg_PrincipledBSDF_prepareToBuild(this); }, "$prepareToDrawScene", function(var_1) { $java.oktsg_PrincipledBSDF_prepareToDrawScene(this, var_1); }, "$executionFrag", function(var_1) { $java.oktsg_PrincipledBSDF_executionFrag(this, var_1); }, "$declarationFrag", function(var_1) { $java.oktsg_PrincipledBSDF_declarationFrag(this,
var_1); }, "$declarationVert", function(var_1) { $java.oktsg_PrincipledBSDF_declarationVert(this, var_1); }, "$executionVert", function(var_1) { $java.oktsg_PrincipledBSDF_executionVert(this, var_1); }],
oooi_DxQuickStep$19, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$19_run(this); }],
okttsg_EmissionBloomTest, 0, jl_Object, [oktt_Test], 4, 3, 0, ["$getName", function() { return $java.okttsg_EmissionBloomTest_getName(this); }, "$testMain", function() { $java.okttsg_EmissionBloomTest_testMain(this); }],
oooi_DxQuickStep$18, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$18_run(this); }],
oooi_DxQuickStep$17, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$17_run(this); }],
oooi_DxQuickStep$16, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$16_run(this); }],
oooi_DxQuickStep$15, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$15_run(this); }],
oooi_DxRay$CollideRayCylinder, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideRayCylinder", function(var_1, var_2, var_3, var_4, var_5) { return $java.oooi_DxRay$CollideRayCylinder_dCollideRayCylinder(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return $java.oooi_DxRay$CollideRayCylinder_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oooi_DxQuickStep$14, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$14_run(this); }],
oooi_DxQuickStep$13, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$13_run(this); }],
jur_WordBoundary, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches", function(var_1, var_2, var_3) { return $java.jur_WordBoundary_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return $java.jur_WordBoundary_hasConsumed(this, var_1); }, "$isSpace", function(var_1, var_2, var_3, var_4) { return $java.jur_WordBoundary_isSpace(this, var_1, var_2, var_3, var_4); }],
oooi_DxQuickStep$12, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$12_run(this); }],
jl_SystemClassLoader, "SystemClassLoader", 10, jl_ClassLoader, [], 0, 0, 0, 0,
oooi_DxQuickStep$11, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$11_run(this); }],
oktgn_AdapterTransformNode$Companion, 0, jl_Object, [], 4, 3, 0, 0,
oktts_BloomTest$testMain$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktts_BloomTest$testMain$1$1_invoke(this, var_1); }, "$invoke8", function(var_1) { $java.oktts_BloomTest$testMain$1$1_invoke0(this, var_1); }],
oktt_FrameBufferAttachment, 0, jl_Object, [oktt_IFrameBufferAttachment], 4, 3, 0, ["$getGlHandle", function() { return $java.oktt_FrameBufferAttachment_getGlHandle(this); }, "$setGlHandle", function(var_1) { $java.oktt_FrameBufferAttachment_setGlHandle(this, var_1); }, "$getTarget", function() { return $java.oktt_FrameBufferAttachment_getTarget(this); }, "$getAttachment", function() { return $java.oktt_FrameBufferAttachment_getAttachment(this); }, "$getTexTarget", function() { return $java.oktt_FrameBufferAttachment_getTexTarget(this);
}, "$getInternalFormat", function() { return $java.oktt_FrameBufferAttachment_getInternalFormat(this); }, "$getPixelFormat", function() { return $java.oktt_FrameBufferAttachment_getPixelFormat(this); }, "$getType", function() { return $java.oktt_FrameBufferAttachment_getType(this); }, "$getMipmapLevel", function() { return $java.oktt_FrameBufferAttachment_getMipmapLevel(this); }, "$getTexture1", function() { return $java.oktt_FrameBufferAttachment_getTexture(this); }, "$setTexture", function(var_1) { $java.oktt_FrameBufferAttachment_setTexture(this,
var_1); }, "$isRenderBuffer", function() { return $java.oktt_FrameBufferAttachment_isRenderBuffer(this); }],
oktgg_GLTFBuffer$read$3, 0, kji_Lambda, [kjf_Function2], 4, 0, 0, ["$invoke11", function(var_1, var_2) { return $java.oktgg_GLTFBuffer$read$3_invoke(this, var_1, var_2); }, "$invoke62", function(var_1, var_2) { $java.oktgg_GLTFBuffer$read$3_invoke0(this, var_1, var_2); }],
oktgg_GLTFBuffer$read$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTFBuffer$read$2_invoke(this, var_1); }, "$invoke0", function(var_1) { $java.oktgg_GLTFBuffer$read$2_invoke0(this, var_1); }],
oktgg_GLTFBuffer$read$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTFBuffer$read$1_invoke(this, var_1); }, "$invoke5", function(var_1) { $java.oktgg_GLTFBuffer$read$1_invoke0(this, var_1); }],
jl_Double, 0, jl_Number, [jl_Comparable], 0, 3, $java.jl_Double_$callClinit, ["$doubleValue", function() { return $java.jl_Double_doubleValue(this); }],
oktgg_GLTFAnimation$read$2$1$1$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTFAnimation$read$2$1$1$1$1_invoke(this, var_1); }, "$invoke10", function(var_1) { $java.oktgg_GLTFAnimation$read$2$1$1$1$1_invoke0(this, var_1); }]]);
$rt_metadata([oktt_FrameBufferTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return $java.oktt_FrameBufferTest$testMain$1_invoke(this); }, "$invoke2", function() { $java.oktt_FrameBufferTest$testMain$1_invoke0(this); }],
oooi_DxHashSpace$Node, 0, jl_Object, [], 0, 0, 0, 0,
oktm_IVec2$Companion$Pool$2, 0, kji_Lambda, [kjf_Function1], 4, 0, oktm_IVec2$Companion$Pool$2_$callClinit, ["$invoke1", function(var_1) { return $java.oktm_IVec2$Companion$Pool$2_invoke(this, var_1); }, "$invoke63", function(var_1) { $java.oktm_IVec2$Companion$Pool$2_invoke0(this, var_1); }],
okt_APP$api$1, 0, jl_Object, [okt_IApp], 4, 3, 0, ["$getPlatformType", function() { return $java.okt_APP$api$1_getPlatformType(this); }, "$getWidth", function() { return $java.okt_APP$api$1_getWidth(this); }, "$getHeight", function() { return $java.okt_APP$api$1_getHeight(this); }, "$getDeltaTime", function() { return $java.okt_APP$api$1_getDeltaTime(this); }, "$messageBox", function(var_1, var_2) { $java.okt_APP$api$1_messageBox(this, var_1, var_2); }],
oktm_IVec2$Companion$Pool$1, 0, kji_Lambda, [kjf_Function0], 4, 0, oktm_IVec2$Companion$Pool$1_$callClinit, ["$invoke6", function() { return $java.oktm_IVec2$Companion$Pool$1_invoke(this); }, "$invoke64", function() { return $java.oktm_IVec2$Companion$Pool$1_invoke0(this); }],
oooig_GimTriCollision$GIM_TRIPLANES_CACHE, 0, jl_Object, [], 0, 0, 0, 0,
oooi_CollisionLibccd$ccd_sphere_t, 0, oooi_CollisionLibccd$ccd_obj_t, [], 0, 0, 0, 0,
otjc_JSArrayReader, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
otjb_Window, 0, jl_Object, [otj_JSObject, otjb_WindowEventTarget, otjb_StorageProvider, otjc_JSArrayReader], 1, 3, 0, ["$addEventListener$exported$0", function(var_1, var_2) { return $java.otjb_Window_addEventListener$exported$0(this, var_1, var_2); }, "$removeEventListener$exported$1", function(var_1, var_2) { return $java.otjb_Window_removeEventListener$exported$1(this, var_1, var_2); }, "$get$exported$2", function(var_1) { return $java.otjb_Window_get$exported$2(this, var_1); }, "$removeEventListener$exported$3",
function(var_1, var_2, var_3) { return $java.otjb_Window_removeEventListener$exported$3(this, var_1, var_2, var_3); }, "$dispatchEvent$exported$4", function(var_1) { return $java.otjb_Window_dispatchEvent$exported$4(this, var_1); }, "$getLength$exported$5", function() { return $java.otjb_Window_getLength$exported$5(this); }, "$addEventListener$exported$6", function(var_1, var_2, var_3) { return $java.otjb_Window_addEventListener$exported$6(this, var_1, var_2, var_3); }],
okttsg_EmissionBloomTest$testMain$1$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.okttsg_EmissionBloomTest$testMain$1$1$1_invoke(this, var_1); }, "$invoke8", function(var_1) { $java.okttsg_EmissionBloomTest$testMain$1$1$1_invoke0(this, var_1); }],
cgcj_Yytoken$1, 0, jl_Object, [], 32, 0, cgcj_Yytoken$1_$callClinit, 0,
okttsg_EmissionBloomTest$testMain$1$1$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.okttsg_EmissionBloomTest$testMain$1$1$2_invoke(this, var_1); }, "$invoke8", function(var_1) { $java.okttsg_EmissionBloomTest$testMain$1$1$2_invoke0(this, var_1); }],
oooi_DxQuickStep$28, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$28_run(this); }],
oooi_DxQuickStep$27, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$27_run(this); }],
oooi_DxQuickStep$26, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$26_run(this); }],
oooi_DxQuickStep$25, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$25_run(this); }],
oooi_DxQuickStep$24, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$24_run(this); }],
oooi_DxQuickStep$23, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$23_run(this); }],
oooi_DxQuickStep$22, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$22_run(this); }],
jur_AbstractCharClass$LazyJavaWhitespace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return $java.jur_AbstractCharClass$LazyJavaWhitespace_computeValue(this); }],
ju_Collections$_clinit_$lambda$_61_1, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0,
oktm_IScreenQuad$render$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktm_IScreenQuad$render$2_invoke(this, var_1); }, "$invoke8", function(var_1) { $java.oktm_IScreenQuad$render$2_invoke0(this, var_1); }],
ju_Collections$_clinit_$lambda$_61_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, ["$compare5", function(var_1, var_2) { return $java.ju_Collections$_clinit_$lambda$_61_0_compare(this, var_1, var_2); }],
oktm_IScreenQuad$render$1, 0, kji_Lambda, [kjf_Function1], 4, 0, $java.oktm_IScreenQuad$render$1_$callClinit, ["$invoke1", function(var_1) { return $java.oktm_IScreenQuad$render$1_invoke(this, var_1); }, "$invoke12", function(var_1) { $java.oktm_IScreenQuad$render$1_invoke0(this, var_1); }],
oktgg_GLTFTexture$read$2$2$1$2, 0, kji_Lambda, [kjf_Function1], 4, 0, oktgg_GLTFTexture$read$2$2$1$2_$callClinit, ["$invoke1", function(var_1) { return $java.oktgg_GLTFTexture$read$2$2$1$2_invoke(this, var_1); }, "$invoke10", function(var_1) { $java.oktgg_GLTFTexture$read$2$2$1$2_invoke0(this, var_1); }],
k_NotImplementedError, 0, jl_Error, [], 4, 3, 0, 0,
oktgg_GLTFTexture$read$2$2$1$1, 0, kji_Lambda, [kjf_Function1], 4, 0, oktgg_GLTFTexture$read$2$2$1$1_$callClinit, ["$invoke1", function(var_1) { return $java.oktgg_GLTFTexture$read$2$2$1$1_invoke(this, var_1); }, "$invoke10", function(var_1) { $java.oktgg_GLTFTexture$read$2$2$1$1_invoke0(this, var_1); }],
jur_AbstractCharClass$LazyJavaMirrored, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return $java.jur_AbstractCharClass$LazyJavaMirrored_computeValue(this); }],
jur_AbstractCharClass$LazyJavaISOControl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return $java.jur_AbstractCharClass$LazyJavaISOControl_computeValue(this); }],
oktmb_BoxMeshBuilder$build$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktmb_BoxMeshBuilder$build$1_invoke(this, var_1); }, "$invoke16", function(var_1) { $java.oktmb_BoxMeshBuilder$build$1_invoke0(this, var_1); }],
jur_HighSurrogateCharSet, 0, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { $java.jur_HighSurrogateCharSet_setNext(this, var_1); }, "$matches", function(var_1, var_2, var_3) { return $java.jur_HighSurrogateCharSet_matches(this, var_1, var_2, var_3); }, "$find", function(var_1, var_2, var_3) { return $java.jur_HighSurrogateCharSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return $java.jur_HighSurrogateCharSet_findBack(this, var_1, var_2, var_3, var_4);
}, "$first", function(var_1) { return $java.jur_HighSurrogateCharSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return $java.jur_HighSurrogateCharSet_hasConsumed(this, var_1); }],
oktgg_GLTFNode$read$2$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTFNode$read$2$1_invoke(this, var_1); }, "$invoke14", function(var_1) { $java.oktgg_GLTFNode$read$2$1_invoke0(this, var_1); }],
kc_CollectionsKt___CollectionsKt$elementAt$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.kc_CollectionsKt___CollectionsKt$elementAt$1_invoke(this, var_1); }, "$invoke65", function(var_1) { return $java.kc_CollectionsKt___CollectionsKt$elementAt$1_invoke0(this, var_1); }],
oktmb_PlaneMeshBuilder$build$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktmb_PlaneMeshBuilder$build$2_invoke(this, var_1); }, "$invoke36", function(var_1) { $java.oktmb_PlaneMeshBuilder$build$2_invoke0(this, var_1); }],
oooip_DxUtil, 0, jl_Object, [], 0, 3, oooip_DxUtil_$callClinit, 0,
oktmb_PlaneMeshBuilder$build$1, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktmb_PlaneMeshBuilder$build$1_invoke(this, var_1); }, "$invoke16", function(var_1) { $java.oktmb_PlaneMeshBuilder$build$1_invoke0(this, var_1); }],
oktts_ThresholdTest$testMain$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return $java.oktts_ThresholdTest$testMain$1_invoke(this); }, "$invoke2", function() { $java.oktts_ThresholdTest$testMain$1_invoke0(this); }],
oooi_DxRay$CollideRayPlane, 0, jl_Object, [ooo_DColliderFn], 0, 0, 0, ["$dCollideRayPlane", function(var_1, var_2, var_3, var_4, var_5) { return $java.oooi_DxRay$CollideRayPlane_dCollideRayPlane(this, var_1, var_2, var_3, var_4, var_5); }, "$dColliderFn", function(var_1, var_2, var_3, var_4) { return $java.oooi_DxRay$CollideRayPlane_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oktga_AnimPlayer$Companion$vec3Pool$1, 0, kji_Lambda, [kjf_Function0], 4, 0, $java.oktga_AnimPlayer$Companion$vec3Pool$1_$callClinit, ["$invoke6", function() { return $java.oktga_AnimPlayer$Companion$vec3Pool$1_invoke(this); }, "$invoke19", function() { return $java.oktga_AnimPlayer$Companion$vec3Pool$1_invoke0(this); }],
oktp_PHYS, 0, jl_Object, [oktp_IPhys], 4, 3, oktp_PHYS_$callClinit, ["$setApi0", function(var_1) { oktp_PHYS_setApi(this, var_1); }, "$createWorld0", function() { return oktp_PHYS_createWorld(this); }],
oktmb_BoxMeshBuilder$Companion, 0, jl_Object, [], 4, 3, 0, ["$skyboxBuilder", function() { return oktmb_BoxMeshBuilder$Companion_skyboxBuilder(this); }],
oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1, 0, kji_Lambda, [kjf_Function0], 4, 0, 0, ["$invoke6", function() { return $java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1_invoke(this); }, "$invoke2", function() { $java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$1_invoke0(this); }],
oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2, 0, kji_Lambda, [kjf_Function1], 4, 0, 0, ["$invoke1", function(var_1) { return $java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2_invoke(this, var_1); }, "$invoke17", function(var_1) { $java.oktgg_GLTFPrimitive$read$$inlined$forEach$lambda$2_invoke0(this, var_1); }],
oktmb_BoxMeshBuilder$build$2, 0, kji_Lambda, [kjf_Function1], 4, 0, oktmb_BoxMeshBuilder$build$2_$callClinit, ["$invoke1", function(var_1) { return $java.oktmb_BoxMeshBuilder$build$2_invoke(this, var_1); }, "$invoke36", function(var_1) { $java.oktmb_BoxMeshBuilder$build$2_invoke0(this, var_1); }],
oktd_DataByteOrder, 0, jl_Enum, [], 12, 3, oktd_DataByteOrder_$callClinit, 0,
ki_PlatformImplementations, 0, jl_Object, [], 0, 3, 0, ["$defaultPlatformRandom", function() { return $java.ki_PlatformImplementations_defaultPlatformRandom(this); }],
oktgg_GLTFSparse$Indices, 0, jl_Object, [oktj_IJsonObjectIO], 4, 3, 0, ["$read", function(var_1) { oktgg_GLTFSparse$Indices_read(this, var_1); }, "$setByteOffset", function(var_1) { $java.oktgg_GLTFSparse$Indices_setByteOffset(this, var_1); }],
oooi_CollisionLibccd$ccd_convex_t, 0, oooi_CollisionLibccd$ccd_obj_t, [], 0, 0, 0, 0,
oktgg_GLTFScene, 0, jl_Object, [oktj_IJsonObjectIO, oktgg_IGLTFArrayElement], 4, 3, 0, ["$setName", function(var_1) { oktgg_GLTFScene_setName(this, var_1); }, "$getNodes0", function() { return oktgg_GLTFScene_getNodes(this); }, "$read", function(var_1) { $java.oktgg_GLTFScene_read(this, var_1); }, "$getGltf0", function() { return oktgg_GLTFScene_getGltf(this); }, "$getScene", function() { return oktgg_GLTFScene_getScene(this); }],
oooi_CollisionLibccd$ccd_box_t, 0, oooi_CollisionLibccd$ccd_obj_t, [], 0, 0, 0, 0]);
$rt_metadata([oktsp_MotionBlur$Companion, 0, jl_Object, [], 4, 3, 0, ["$velocity1", function(var_1) { return $java.oktsp_MotionBlur$Companion_velocity(this, var_1); }, "$motionBlurCode", function(var_1, var_2) { return oktsp_MotionBlur$Companion_motionBlurCode(this, var_1, var_2); }],
oktu_DefaultLog, 0, jl_Object, [oktu_ILog], 4, 3, 0, ["$getCollectLogs", function() { return $java.oktu_DefaultLog_getCollectLogs(this); }, "$setCollectLogs", function(var_1) { $java.oktu_DefaultLog_setCollectLogs(this, var_1); }, "$getLogs", function() { return $java.oktu_DefaultLog_getLogs(this); }, "$info", function(var_1, var_2, var_3) { $java.oktu_DefaultLog_info(this, var_1, var_2, var_3); }, "$info0", function(var_1, var_2) { $java.oktu_DefaultLog_info0(this, var_1, var_2); }],
oktjj_JsonSimple3Object, 0, jl_Object, [oktj_IJsonObject], 4, 3, oktjj_JsonSimple3Object_$callClinit, ["$obj2", function(var_1) { return $java.oktjj_JsonSimple3Object_obj(this, var_1); }, "$obj0", function(var_1) { return $java.oktjj_JsonSimple3Object_obj0(this, var_1); }, "$array6", function(var_1) { return $java.oktjj_JsonSimple3Object_array(this, var_1); }, "$array4", function(var_1) { return $java.oktjj_JsonSimple3Object_array0(this, var_1); }, "$get37", function(var_1) { return $java.oktjj_JsonSimple3Object_get(this,
var_1); }, "$values11", function(var_1) { $java.oktjj_JsonSimple3Object_values(this, var_1); }, "$contains", function(var_1) { return $java.oktjj_JsonSimple3Object_contains(this, var_1); }, "$obj", function(var_1, var_2) { return $java.oktjj_JsonSimple3Object_obj1(this, var_1, var_2); }, "$array", function(var_1, var_2) { return $java.oktjj_JsonSimple3Object_array1(this, var_1, var_2); }, "$get16", function(var_1, var_2) { return $java.oktjj_JsonSimple3Object_get0(this, var_1, var_2); }, "$objOrNull", function(var_1)
{ return $java.oktjj_JsonSimple3Object_objOrNull(this, var_1); }, "$arrayOrNull", function(var_1) { return $java.oktjj_JsonSimple3Object_arrayOrNull(this, var_1); }, "$string1", function(var_1) { return $java.oktjj_JsonSimple3Object_string(this, var_1); }, "$string5", function(var_1, var_2) { return $java.oktjj_JsonSimple3Object_string0(this, var_1, var_2); }, "$string", function(var_1, var_2) { $java.oktjj_JsonSimple3Object_string1(this, var_1, var_2); }, "$float2", function(var_1) { return $java.oktjj_JsonSimple3Object_float(this,
var_1); }, "$float1", function(var_1, var_2) { return $java.oktjj_JsonSimple3Object_float0(this, var_1, var_2); }, "$float", function(var_1, var_2) { $java.oktjj_JsonSimple3Object_float1(this, var_1, var_2); }, "$int0", function(var_1) { return $java.oktjj_JsonSimple3Object_int(this, var_1); }, "$int1", function(var_1, var_2) { return $java.oktjj_JsonSimple3Object_int0(this, var_1, var_2); }, "$int", function(var_1, var_2) { $java.oktjj_JsonSimple3Object_int1(this, var_1, var_2); }, "$bool0", function(var_1)
{ return $java.oktjj_JsonSimple3Object_bool(this, var_1); }, "$bool", function(var_1, var_2) { $java.oktjj_JsonSimple3Object_bool0(this, var_1, var_2); }, "$ints0", function(var_1) { $java.oktjj_JsonSimple3Object_ints(this, var_1); }, "$ints", function(var_1, var_2) { $java.oktjj_JsonSimple3Object_ints0(this, var_1, var_2); }, "$floats", function(var_1, var_2) { $java.oktjj_JsonSimple3Object_floats(this, var_1, var_2); }],
oooi_Objects_H$dxQuickStepParameters, 0, oooi_Objects_H$CloneableParameter, [], 0, 3, 0, 0,
oooi_CollideConvexTrimesh, 0, jl_Object, [ooo_DColliderFn], 0, 3, 0, ["$dColliderFn", function(var_1, var_2, var_3, var_4) { return $java.oooi_CollideConvexTrimesh_dColliderFn(this, var_1, var_2, var_3, var_4); }],
oooi_ErrorHdl, 0, jl_Object, [], 0, 3, $java.oooi_ErrorHdl_$callClinit, 0,
ki_ProgressionUtilKt, 0, jl_Object, [], 4, 3, 0, 0,
jur_AbstractCharClass$LazySpecialsBlock, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return $java.jur_AbstractCharClass$LazySpecialsBlock_computeValue(this); }],
oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext, 0, jl_Object, [], 0, 0, 0, ["$Initialize1", function(var_1, var_2, var_3) { $java.oooi_DxQuickStep$dxQuickStepperStage0JointsCallContext_Initialize(this, var_1, var_2, var_3); }],
oooi_DxQuickStep$7, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$7_run(this); }],
oooi_DxQuickStep$6, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$6_run(this); }],
oooi_DxQuickStep$5, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$5_run(this); }],
oooi_DxQuickStep$4, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$4_run(this); }],
oooi_DxQuickStep$3, 0, jl_Object, [jl_Runnable], 0, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$3_run(this); }],
oooi_DxQuickStep$2, 0, jl_Object, [jl_Runnable], 0, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$2_run(this); }],
oooi_DxQuickStep$1, 0, jl_Object, [jl_Runnable], 0, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$1_run(this); }],
oktp_IShape$Companion, 0, jl_Object, [], 4, 3, oktp_IShape$Companion_$callClinit, 0,
ju_Arrays$ArrayAsList, 0, ju_AbstractList, [ju_RandomAccess], 0, 0, 0, ["$get1", function(var_1) { return $java.ju_Arrays$ArrayAsList_get(this, var_1); }, "$size", function() { return $java.ju_Arrays$ArrayAsList_size(this); }],
oooi_DxQuickStep$9, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$9_run(this); }],
oooi_DxQuickStep$8, 0, jl_Object, [jl_Runnable], 4, 0, 0, ["$run", function() { $java.oooi_DxQuickStep$8_run(this); }]]);
function $rt_array(cls, data) {
    this.$monitor = null;
    this.$id$ = 0;
    this.type = cls;
    this.data = data;
    this.constructor = $rt_arraycls(cls);
}
$rt_array.prototype = Object.create(($rt_objcls()).prototype);
$rt_array.prototype.toString = function() {
    var str = "[";
    for (var i = 0;i < this.data.length;++i) {
        if (i > 0) {
            str += ", ";
        }
        str += this.data[i].toString();
    }
    str += "]";
    return str;
};
$rt_setCloneMethod($rt_array.prototype, function() {
    var dataCopy;
    if ('slice' in this.data) {
        dataCopy = this.data.slice();
    } else {
        dataCopy = new this.data.constructor(this.data.length);
        for (var i = 0;i < dataCopy.length;++i) {
            dataCopy[i] = this.data[i];
        }
    }
    return new $rt_array(this.type, dataCopy);
});
$rt_stringPool(["Can\'t enter monitor from another thread synchronously", "@", "Frustum Mesh Builder", "\nattribute vec3 aPosition;\nuniform mat4 viewProj;\n\nvoid main () {\n    gl_Position = viewProj * vec4(aPosition, 1.0);\n}", "\nuniform vec4 color;\nvoid main () {\n    gl_FragColor = color;\n}", "model", "", "vertexInputs", "bytes", "String contains invalid digits: ", "String contains digits out of radix ", ": ", "The value is too big for int type: ", "String is null or empty", "Illegal radix: ", "<set-?>",
"json", "name", "uri", "mimeType", "bufferView", "gltf.bufferViews[json.int(\"bufferView\")]", "gltf.buffers[bufferView.buffer]", "gltf", "image", "it", "<anonymous parameter 0>", "Uint8Array.create(byteAr…osition, size - position)", "Uint16Array.create(byteA…n, (size - position) / 2)", "Int32Array.create(byteAr…n, (size - position) / 4)", "Float32Array.create(byte…n, (size - position) / 4)", "byteArray", "array", "$receiver", "line.separator", "uDelta", "children", "matrix", "translation", "rotation", "scale",
"weights", "camera", "mesh", "skin", "node", "Texture 2D", "thelema-logo.png", "Cause already set", "Circular causation relation", "    at ", "Caused by: ", "  at ", "position", "out", "from", "to", "up", "direction", "java.util.Collections.singletonList(element)", "elements", "$this$lastIndex", "$this$optimizeReadOnlyList", "$this$collectionSizeOrDefault", "$this$sortWith", "comparator", "$this$appendElement", "$this$appendln", "append(SystemProperties.LINE_SEPARATOR)", "call", "null", "Index out of bounds",
"Lower", "Upper", "ASCII", "Alpha", "Digit", "Alnum", "Punct", "Graph", "Print", "Blank", "Cntrl", "XDigit", "javaLowerCase", "javaUpperCase", "javaWhitespace", "javaMirrored", "javaDefined", "javaDigit", "javaIdentifierIgnorable", "javaISOControl", "javaJavaIdentifierPart", "javaJavaIdentifierStart", "javaLetter", "javaLetterOrDigit", "javaSpaceChar", "javaTitleCase", "javaUnicodeIdentifierPart", "javaUnicodeIdentifierStart", "Space", "w", "W", "s", "S", "d", "D", "BasicLatin", "Latin-1Supplement", "LatinExtended-A",
"LatinExtended-B", "IPAExtensions", "SpacingModifierLetters", "CombiningDiacriticalMarks", "Greek", "Cyrillic", "CyrillicSupplement", "Armenian", "Hebrew", "Arabic", "Syriac", "ArabicSupplement", "Thaana", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan", "Myanmar", "Georgian", "HangulJamo", "Ethiopic", "EthiopicSupplement", "Cherokee", "UnifiedCanadianAboriginalSyllabics", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid",
"Tagbanwa", "Khmer", "Mongolian", "Limbu", "TaiLe", "NewTaiLue", "KhmerSymbols", "Buginese", "PhoneticExtensions", "PhoneticExtensionsSupplement", "CombiningDiacriticalMarksSupplement", "LatinExtendedAdditional", "GreekExtended", "GeneralPunctuation", "SuperscriptsandSubscripts", "CurrencySymbols", "CombiningMarksforSymbols", "LetterlikeSymbols", "NumberForms", "Arrows", "MathematicalOperators", "MiscellaneousTechnical", "ControlPictures", "OpticalCharacterRecognition", "EnclosedAlphanumerics", "BoxDrawing",
"BlockElements", "GeometricShapes", "MiscellaneousSymbols", "Dingbats", "MiscellaneousMathematicalSymbols-A", "SupplementalArrows-A", "BraillePatterns", "SupplementalArrows-B", "MiscellaneousMathematicalSymbols-B", "SupplementalMathematicalOperators", "MiscellaneousSymbolsandArrows", "Glagolitic", "Coptic", "GeorgianSupplement", "Tifinagh", "EthiopicExtended", "SupplementalPunctuation", "CJKRadicalsSupplement", "KangxiRadicals", "IdeographicDescriptionCharacters", "CJKSymbolsandPunctuation", "Hiragana", "Katakana",
"Bopomofo", "HangulCompatibilityJamo", "Kanbun", "BopomofoExtended", "CJKStrokes", "KatakanaPhoneticExtensions", "EnclosedCJKLettersandMonths", "CJKCompatibility", "CJKUnifiedIdeographsExtensionA", "YijingHexagramSymbols", "CJKUnifiedIdeographs", "YiSyllables", "YiRadicals", "ModifierToneLetters", "SylotiNagri", "HangulSyllables", "HighSurrogates", "HighPrivateUseSurrogates", "LowSurrogates", "PrivateUseArea", "CJKCompatibilityIdeographs", "AlphabeticPresentationForms", "ArabicPresentationForms-A", "VariationSelectors",
"VerticalForms", "CombiningHalfMarks", "CJKCompatibilityForms", "SmallFormVariants", "ArabicPresentationForms-B", "HalfwidthandFullwidthForms", "all", "Specials", "Cn", "IsL", "Lu", "Ll", "Lt", "Lm", "Lo", "IsM", "Mn", "Me", "Mc", "N", "Nd", "Nl", "No", "IsZ", "Zs", "Zl", "Zp", "IsC", "Cc", "Cf", "Co", "Cs", "IsP", "Pd", "Ps", "Pe", "Pc", "Po", "IsS", "Sm", "Sc", "Sk", "So", "Pi", "Pf", "byteOffset", "vec2(", ", ", "vec3(", "vec4(", ", 1.0)", "WARNING Object was already destructed.", "geom must be placeable",
"geom must be on a body", "Please call ODE initialization (dInitODE() or similar) before using the library", "bad o1 class number", "bad o2 class number", "no contacts requested", "api", "url", "response", "file", "mata", "matb", "values", "null cannot be cast to non-null type org.teavm.jso.dom.events.MouseEvent", "null cannot be cast to non-null type org.teavm.jso.dom.events.WheelEvent", "point1", "point2", "point3", "normal", "charsetName is null", "Should never been thrown", "htmlImage", "text", "keyDown: ",
" (", "keyUp: ", "keyTyped: ", "currentFloatBuffer", "block", "Super calls with default arguments not supported in this target, function: build", "aPosition", "aUV", "aNormal", "projViewModelTrans", "assertion failed ", "Bad argument(s)", "Mesh", "Shader", "GLSL nodes", "Other", "Physics", "Instancing", "\nattribute vec3 aPosition;\nuniform mat4 viewProj;\n\nvoid main() {\n    gl_Position = viewProj * vec4(aPosition, 1.0);\n}", "\nvoid main() {\n    gl_FragColor = vec4(1.0);\n}", "\nattribute vec3 aPosition;\nattribute vec3 aInstancePosition;\nuniform mat4 viewProj;\n\nvoid main() {\n    gl_Position = viewProj * vec4(aPosition + aInstancePosition, 1.0);\n}",
"\nvoid main() {\n    gl_FragColor = vec4(1.0, 0.5, 0.0, 1.0);\n}", "aInstancePosition", "Cascaded shadow mapping", ".x", ".xy", ".xyz", "attribute", "in", "varying", "initial", "scene", "obj", ";\n", " = ", "TEXCOORD_0", "uv", "G-Buffer base", "Not supported", "Requires GLES 3.0 (WebGL 2.0)", "EXT_color_buffer_float", "Render to float texture not supported", "\nin vec3 aPosition;\nin vec2 aUV;\nin vec3 aNormal;\n\nuniform mat4 world;\nuniform mat4 viewProj;\n\nout vec2 vUV;\nout vec3 vNormal;\nout vec3 vPosition;\n\nvoid main() {\nvUV = aUV;\nvNormal = (world * vec4(aNormal, 1.0)).xyz; // our cube is not translating, only rotating, so we can multiply normals with world matrix\nvPosition = (world * vec4(aPosition, 1.0)).xyz;\ngl_Position = viewProj * vec4(vPosition, 1.0);\n}",
"\nin vec2 vUV;\nin vec3 vNormal;\nin vec3 vPosition;\n\nlayout (location = 0) out vec4 gColor;\nlayout (location = 1) out vec4 gNormal;\nlayout (location = 2) out vec4 gPosition;\n\nvoid main() {\ngColor = vec4(vUV, 0.0, 1.0);\ngNormal = vec4(vNormal, 1.0);\ngPosition = vec4(vPosition, 1.0);\n}", ", 0.0)", ", 0.0, 1.0)", "vector", ".y", "0.0", "1.0", ".z", ".w", "x", "y", "z", "Replacement preconditions do not hold", "Action must be non-null", "implStorage.get()", "UTF-8", "Can\'t compare ", " to ", "ALLOW_CONCATENATED_JSON_VALUES",
"ALLOW_JSON_ARRAYS", "ALLOW_JSON_DATA", "ALLOW_JSON_OBJECTS", "$this$asList", "ArraysUtilJVM.asList(this)", "can\'t read ", ", status ", "extension", "bufs", "params", "size", "type", "string", "v", "value", "input", "Limit must be non-negative, but was ", "nativePattern", "pattern", "Pattern.compile(pattern)", "numComponents specified for VertexAttribute is incorrect. It must be >= 1 and <= 4", "Window.current()", "null cannot be cast to non-null type org.ksdfv.thelema.teavm.HTMLImageElement", "offset", "java.specification.version",
"null cannot be cast to non-null type java.lang.String", "(this as java.lang.Strin…ing(startIndex, endIndex)", "kotlin.internal.jdk8.JDK8PlatformImplementations", "Class.forName(\"kotlin.in…entations\").newInstance()", "null cannot be cast to non-null type kotlin.internal.PlatformImplementations", "Instance classloader: ", ", base type classloader: ", "ClassCastException(\"Inst…baseTypeCL\").initCause(e)", "kotlin.internal.JRE8PlatformImplementations", "kotlin.internal.jdk7.JDK7PlatformImplementations", "kotlin.internal.JRE7PlatformImplementations",
":", ",", "{", "[", "}", "]", "xhr", "null cannot be cast to non-null type org.teavm.jso.typedarrays.ArrayBuffer", "gltfNode", "path", "$this$replace", "oldValue", "newValue", "$this$startsWith", "prefix", "$this$endsWith", "suffix", "$this$regionMatches", "other", "$this$padEnd", "Desired length ", " is less than zero.", "$this$substring", "range", "$this$substringAfterLast", "missingDelimiterValue", "$this$removeSuffix", "$this$regionMatchesImpl", "$this$indexOfAny", "chars", "$this$lastIndexOfAny", "$this$indexOf",
"$this$lastIndexOf", "$this$splitToSequence", "delimiters", "$this$split", "Cannot coerce value to an empty range: maximum ", " is less than minimum ", "dxPCM_STEPPER_ARENA_OBTAIN", "dxPCM_STEPPER_ADDLIMOT_SERIALIZE", "dxPCM_STEPPER_STEPBODY_SERIALIZE", "buttonDown: ", "buttonUp: ", "dragged: ", "moved: ", "scrolled: ", "perspective", "orthographic", " ", "ODE ", "ODE_EXT_trimesh", "ODE_EXT_gimpact", "ODE_double_precision", "create", "col=", "sampler", "animationSamplers[int(\"sampler\")]", "Index=", "; flags=",
"inputData", "Box Mesh Builder", "\nattribute vec3 aPosition;\nattribute vec2 aUV;\nvarying vec2 uv;\nuniform mat4 projViewModelTrans;\n\nvoid main() {\n    uv = aUV;\n    gl_Position = projViewModelTrans * vec4(aPosition, 1.0);\n}", "\nvarying vec2 uv;\n\nvoid main() {\n    gl_FragColor = vec4(uv, 0.0, 1.0);\n}", ", 0.0, 0.0)", ", 0.0, 0.0, 1.0)", "DISALLOWED_TOKEN", "IOEXCEPTION", "UNEXPECTED_CHARACTER", "UNEXPECTED_EXCEPTION", "UNEXPECTED_TOKEN", "title", "message", "buffer", "event", "listener", "canvas",
"\n", "SCALAR", "MAT3", "MAT4", "VEC2", "VEC3", "MAT2", "VEC4", "type not known yet : ", "componentType", "normalized", "count", "max", "min", "sparse", "Super calls with default arguments not supported in this target, function: rigidBody", "vertices", "Index type is unknown: ", ", it must be GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT or GL_UNSIGNED_INT", "positionName", "No vertex attribute with name \"", "Mesh must have vertex buffer", "#version 300 es\n", "#version 100\n", "#version ", "vertexShader", "fragmentShader",
"==== Errors in shader ====", "==== Errors in shader \"", "\" ====", "Fragment shader:\n", "Vertex shader:\n", "void main() {", "append(value)", "vertDecl.toString()", "fragDecl.toString()", "Errors in generated shader", "Super calls with default arguments not supported in this target, function: findMaxChildrenTreeDepth", "vertCode", "fragCode", "defaultPrecision", "profile", "precision mediump float;\n", "object3D", "uniformName", "mat", "uvName", "\nattribute vec2 aPosition;\nattribute vec2 aUV;\nvarying vec2 ",
";\n\nvoid main() {\n    ", " = aUV;\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n}", "\nvarying vec2 uv;\n\nuniform sampler2D uSsaoMap;\nuniform float uSsaoOffsetsX[4];\nuniform float uSsaoOffsetsY[4];\n\nvoid main() {\n    vec3 Color = vec3(0.0);\n\n    for (int i = 0 ; i < 4 ; i++) {\n        for (int j = 0 ; j < 4 ; j++) {\n            vec2 tc = uv;\n            tc.x = uv.x + uSsaoOffsetsX[j];\n            tc.y = uv.y + uSsaoOffsetsY[i];\n            Color += texture2D(uSsaoMap, tc).rgb;\n        }\n    }\n\n    Color /= 16.0;\n    float alpha = texture2D(uSsaoMap, uv).a;\n\n    gl_FragColor = vec4(Color, alph"
+ "a);\n}", "\nvarying vec2 uv;\n\nuniform sampler2D uColorMap;\nuniform sampler2D uSsaoMap;\n\nvoid main() {\n    vec4 c = texture2D(uColorMap, uv);\n    gl_FragColor = vec4(c.xyz * texture2D(uSsaoMap, uv).r, c.a);\n}", "screenQuad", "colorMap", "normalMap", "viewSpacePositionMap", "auxBufferSSAO", "auxBufferBlur", "uProjectionMatrix", "uRadius", "uRange", "uBias", "uNormalMap", "uNoiseTexture", "uViewSpacePositionMap", "uOcclusionSamples", "uNoiseScale", "uSsaoMap", "uSsaoOffsetsX[", "uSsaoOffsetsY[", "uColorMap",
"Skybox vertex node", "POSITION", "clouds1/clouds1_east.jpg", "clouds1/clouds1_west.jpg", "clouds1/clouds1_up.jpg", "clouds1/clouds1_down.jpg", "clouds1/clouds1_north.jpg", "clouds1/clouds1_south.jpg", "Super calls with default arguments not supported in this target, function: load", "floatArray", "Keyboard", "Press some key on keyboard", "New position ", " is outside of range [0;", "The last byte in dst ", " is outside of array of size ", "Length ", " must be non-negative", "Offset ", ")", "The last byte in src ",
"world", "aliveContacts.values", "geomAliveContacts.values", "indices", "baseColorTexture", "baseColorFactor", "metallicRoughnessTexture", "roughnessFactor", "metallicFactor", "texCoord", "TEXCOORD_", "index", "inputColor", "uExposure", "uniform float uExposure;\n", " = vec4(0.0);\n", "vec3 toneMap(vec3 color) {\n", "color *= uExposure;\n", "const float A = 0.15;\n", "const float B = 0.50;\n", "const float C = 0.10;\n", "const float D = 0.20;\n", "const float E = 0.02;\n", "const float F = 0.30;\n", "color = color * 2.0;\n",
"color = ((color*(A*color+C*B)+D*E)/(color*(A*color+B)+D*F))-E/F;\n", "return pow(color * 1.3790643, vec3(0.45454544));\n", "color = max(vec3(0.0), color - vec3(0.004));\n", "return (color*(6.2*color+.5))/(color*(6.2*color+1.7)+0.06);\n", "const float A = 2.51;\n", "const float B = 0.03;\n", "const float C = 2.43;\n", "const float D = 0.59;\n", "const float E = 0.14;\n", "color = clamp((color * (A * color + B)) / (color * (C * color + D) + E), 0.0, 1.0);\n", "return pow(color, vec3(0.45454544));\n", "}\n", " = vec4(toneMap(",
"), ", ".a);\n", "toneMappedColor", "strength", "GL_EXT_texture_filter_anisotropic", "\" called on GL thread", "viewProj", "pos", "byteLength", "data:", "null cannot be cast to non-null type kotlin.Array<T>", "$this$contains", "$this$single", "Array is empty.", "Array has more than one element.", "Is", "In", "REORDERING_METHOD__DONT_REORDER", "REORDERING_METHOD__BY_ERROR", "REORDERING_METHOD__RANDOMLY", "GltfLoader: uri as image data is not supported yet", "decoded", "color", "Jsoner.deserialize(text, JsonObject())",
"trimesh", "clipSpacePos", "\n// cascaded shadow\n", "vec3 cascadeColor = vec3(0.0);", "\nint lightIndex = i * ", ";\nfor (int j = 0; j < ", "; j++) {\n    // this index comparision is for webgl\n    if (", ".z < uDirLightCascadeEnd[j] && j >= lightIndex && j < lightIndex + ", ") {\n        ", "\n        if (j == 0) {\n            cascadeColor = vec3(1.0, 0.0, 0.0);\n        } else if (j == 1) {\n            cascadeColor = vec3(0.0, 1.0, 0.0);\n        } else if (j == 2) {\n            cascadeColor = vec3(0.0, 0.0, 1.0);       \n        } else if (j == 3) {\n            cascadeColor = vec3(1.0, 1.0, 0.0);       \n        }\n        ",
"\n        \n        vec4 lightSpacePos = vDirLightClipSpacePos[j];\n        vec3 projCoords = (lightSpacePos.xyz / lightSpacePos.w) * 0.5 + 0.5;\n        \n        float closestDepth = texture2D(uDirLightShadowMap[j], projCoords.xy).x;        \n        light *= 1.0 - shadowFactor(projCoords.z, closestDepth);\n        ", "light += cascadeColor * 0.5;", "\n        \n        break;\n    }\n}\n", "\n//float CalcShadowFactor(int index, vec4 lightSpacePos) {\n//    vec3 projCoords = (lightSpacePos.xyz / lightSpacePos.w) * 0.5 + 0.5;\n//\n//    float currentDepth = projCoords.z;\n//    float closestDepth = texture2D(shadowMap[index], projCoords).x;\n//\n//    float bias = 0.001;\n//    if (currentDepth - bias > closestDepth)\n//        return 0.5;\n//    else\n//        return 0.0;\n//}\n\nfloat shadowFactor(float currentDepth, float closestDepth) {\n    float bias = 0.001;\n    if (currentDepth - bias > closestDepth)\n"
+ "        return 1.0;\n    else\n        return 0.0;\n}\n\nuniform int uDirLightsNum;\nuniform vec3 uDirLightDirection[", "];\nuniform vec3 uDirLightColor[", "];\nuniform float uDirLightIntensity[", "];\n\nuniform int uPointLightsNum;\nuniform vec3 uPointLightColor[", "];\nuniform float uPointLightRange[", "];\nuniform float uPointLightIntensity[", "];\nuniform vec3 uPointLightPosition[", "];\n\nuniform int numSpotLights;\nuniform vec3 uSpotLightColor[", "];\nuniform float uSpotLightRange[", "];\nuniform float uSpotLightIntensity[",
"];\nuniform vec3 uSpotLightPosition[", "];\nuniform vec3 uSpotLightDirection[", "];\nuniform float uSpotLightInnerConeCos[", "];\nuniform float uSpotLightInnerConeCos2[", "];\nuniform float uSpotLightOuterConeCos[", "];\n\nuniform vec3 uAmbientColor;\n\nconst float M_PI = 3.141592653589793;\nconst float c_MinReflectance = 0.04;\n\n// functions =======================================\nstruct AngularInfo\n{\n    float NdotL;                  // cos angle between normal and light direction\n    float NdotV;                  // cos angle between normal and view direction\n    float NdotH;                  // cos angle between normal and half vector\n    float LdotH;                  // cos angle between light direction and half vector\n\n"
+ "    float VdotH;                  // cos angle between view direction and half vector\n\n    vec3 padding;\n};\n\nfloat getPerceivedBrightness(vec3 vector)\n{\n    return sqrt(0.299 * vector.r * vector.r + 0.587 * vector.g * vector.g + 0.114 * vector.b * vector.b);\n}\n\n// https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness/examples/convert-between-workflows/js/three.pbrUtilities.js#L34\nfloat solveMetallic(vec3 diffuse, vec3 specular, float oneMinusSpecularStre"
+ "ngth) {\n    float specularBrightness = getPerceivedBrightness(specular);\n\n    if (specularBrightness < c_MinReflectance) {\n        return 0.0;\n    }\n\n    float diffuseBrightness = getPerceivedBrightness(diffuse);\n\n    float a = c_MinReflectance;\n    float b = diffuseBrightness * oneMinusSpecularStrength / (1.0 - c_MinReflectance) + specularBrightness - 2.0 * c_MinReflectance;\n    float c = c_MinReflectance - specularBrightness;\n    float D = b * b - 4.0 * a * c;\n\n    return clamp((-b + sqrt(D)) / (2.0 * a),"
+ " 0.0, 1.0);\n}\n\nAngularInfo getAngularInfo(vec3 pointToLight, vec3 normal, vec3 view)\n{\n    // Standard one-letter names\n    vec3 n = normalize(normal);           // Outward direction of surface point\n    vec3 v = view;             // Direction from surface point to view\n    vec3 l = normalize(pointToLight);     // Direction from surface point to light\n    vec3 h = normalize(l + v);            // Direction of the vector between l and v\n\n    float NdotL = clamp(dot(n, l), 0.1, 1.0);\n    float NdotV = clamp(do"
+ "t(n, v), 0.1, 1.0);\n    float NdotH = clamp(dot(n, h), 0.1, 1.0);\n    float LdotH = clamp(dot(l, h), 0.1, 1.0);\n    float VdotH = clamp(dot(v, h), 0.1, 1.0);\n\n    return AngularInfo(\n    NdotL,\n    NdotV,\n    NdotH,\n    LdotH,\n    VdotH,\n    vec3(0, 0, 0)\n    );\n}\n// /functions ======================================\n\nstruct MaterialInfo\n{\n    float perceptualRoughness;    // roughness value, as authored by the model creator (input to shader)\n    vec3 reflectance0;            // full reflectance color (norma"
+ "l incidence angle)\n\n    float alphaRoughness;         // roughness mapped to a more linear change in the roughness (proposed by [2])\n    vec3 diffuseColor;            // color contribution from diffuse lighting\n\n    vec3 reflectance90;           // reflectance color at grazing angle\n    vec3 specularColor;           // color contribution from specular lighting\n};\n\n// Lambert lighting\n// see https://seblagarde.wordpress.com/2012/01/08/pi-or-not-to-pi-in-game-lighting-equation/\nvec3 diffuse(MaterialInfo mater"
+ "ialInfo)\n{\n    return materialInfo.diffuseColor / M_PI;\n}\n\n// The following equation models the Fresnel reflectance term of the spec equation (aka F())\n// Implementation of fresnel from [4], Equation 15\nvec3 specularReflection(MaterialInfo materialInfo, AngularInfo angularInfo)\n{\n    return materialInfo.reflectance0 + (materialInfo.reflectance90 - materialInfo.reflectance0) * pow(clamp(1.0 - angularInfo.VdotH, 0.0, 1.0), 5.0);\n}\n\n// Smith Joint GGX\n// Note: Vis = G / (4 * NdotL * NdotV)\n// see Eric Heitz. 2"
+ "014. Understanding the Masking-Shadowing Function in Microfacet-Based BRDFs. Journal of Computer Graphics Techniques, 3\n// see Real-Time Rendering. Page 331 to 336.\n// see https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/geometricshadowing(specularg)\nfloat visibilityOcclusion(MaterialInfo materialInfo, AngularInfo angularInfo)\n{\n    float NdotL = angularInfo.NdotL;\n    float NdotV = angularInfo.NdotV;\n    float alphaRoughnessSq = materialInfo.alphaRoughness * materialInfo.alpha"
+ "Roughness;\n\n    float GGXV = NdotL * sqrt(NdotV * NdotV * (1.0 - alphaRoughnessSq) + alphaRoughnessSq);\n    float GGXL = NdotV * sqrt(NdotL * NdotL * (1.0 - alphaRoughnessSq) + alphaRoughnessSq);\n\n    float GGX = GGXV + GGXL;\n    if (GGX > 0.0)\n    {\n        return 0.5 / GGX;\n    }\n    return 0.0;\n}\n\n// The following equation(s) model the distribution of microfacet normals across the area being drawn (aka D())\n// Implementation from \"Average Irregularity Representation of a Roughened Surface for Ray Reflect"
+ "ion\" by T. S. Trowbridge, and K. P. Reitz\n// Follows the distribution function recommended in the SIGGRAPH 2013 course notes from EPIC Games [1], Equation 3.\nfloat microfacetDistribution(MaterialInfo materialInfo, AngularInfo angularInfo)\n{\n    float alphaRoughnessSq = materialInfo.alphaRoughness * materialInfo.alphaRoughness;\n    float f = (angularInfo.NdotH * alphaRoughnessSq - angularInfo.NdotH) * angularInfo.NdotH + 1.0;\n    return alphaRoughnessSq / (M_PI * f * f);\n}\n\nvec3 getPointShade(vec3 pointToLig"
+ "ht, MaterialInfo materialInfo, vec3 normal, vec3 view)\n{\n    AngularInfo angularInfo = getAngularInfo(pointToLight, normal, view);\n\n    if (angularInfo.NdotL > 0.0 || angularInfo.NdotV > 0.0)\n    {\n        // Calculate the shading terms for the microfacet specular shading model\n        vec3 F = specularReflection(materialInfo, angularInfo);\n        float Vis = visibilityOcclusion(materialInfo, angularInfo);\n        float D = microfacetDistribution(materialInfo, angularInfo);\n\n        // Calculation of analy"
+ "tical lighting contribution\n        vec3 diffuseContrib = (1.0 - F) * diffuse(materialInfo);\n        vec3 specContrib = F * Vis * D;\n\n        // Obtain final intensity as reflectance (BRDF) scaled by the energy of the light (cosine law)\n        return angularInfo.NdotL * (diffuseContrib + specContrib);\n    }\n\n    return vec3(0.0, 0.0, 0.0);\n}\n\n// https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_lights_punctual/README.md#range-property\nfloat getRangeAttenuation(float range, float d"
+ "istance)\n{\n    if (range <= 0.0)\n    {\n        // negative range means unlimited\n        return 1.0;\n    }\n    //return max(min(1.0 - pow(distance / range, 4.0), 1.0), 0.0) / pow(distance, 2.0);\n    return range / distance;\n}\n\n// https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_lights_punctual/README.md#inner-and-outer-cone-angles\nfloat getSpotAttenuation(vec3 pointToLight, vec3 spotDirection, float outerConeCos, float innerConeCos)\n{\n    float actualCos = dot(normalize(spotDirect"
+ "ion), normalize(-pointToLight));\n    if (actualCos > outerConeCos)\n    {\n        if (actualCos < innerConeCos)\n        {\n            return smoothstep(outerConeCos, innerConeCos, actualCos);\n        }\n        return 1.0;\n    }\n    return 0.0;\n}\n\n/*\nworldPosition - vertex position\nviewToPosition = normalize(cameraPosition - worldPosition)\n*/\nvec4 principledBSDFMain(vec3 worldPosition, vec3 viewToPosition, vec4 baseColor, vec3 Normal, float occlusion, float perceptualRoughness, float metallic) {\n    // Metall"
+ "ic and Roughness material properties are packed together\n    // In glTF, these factors can be specified by fixed scalar values\n    // or from a metallic-roughness map\n\n    vec3 diffuseColor = vec3(0.0);\n    vec3 specularColor = vec3(0.0);\n    vec3 f0 = vec3(0.04);\n\n    //baseColor = SRGBtoLINEAR(Diffuse);\n\n    diffuseColor = baseColor.rgb * (vec3(1.0) - f0) * (1.0 - metallic);\n\n    specularColor = mix(f0, baseColor.rgb, metallic);\n\n    #ifdef MATERIAL_UNLIT\n    gl_FragColor = vec4(LINEARtoSRGB(baseColor.rgb"
+ "), baseColor.a);\n    //return;\n    #endif\n\n    perceptualRoughness = clamp(perceptualRoughness, 0.0, 1.0);\n    metallic = clamp(metallic, 0.0, 1.0);\n\n    // Roughness is authored as perceptual roughness; as is convention,\n    // convert to material roughness by squaring the perceptual roughness [2].\n    float alphaRoughness = perceptualRoughness * perceptualRoughness;\n\n    // Compute reflectance.\n    float reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);\n\n    vec3 specularEnvironme"
+ "ntR0 = specularColor.rgb;\n    // Anything less than 2% is physically impossible and is instead considered to be shadowing. Compare to \"Real-Time-Rendering\" 4th editon on page 325.\n    vec3 specularEnvironmentR90 = vec3(clamp(reflectance * 50.0, 0.0, 1.0));\n\n    MaterialInfo materialInfo = MaterialInfo(\n    perceptualRoughness,\n    specularEnvironmentR0,\n    alphaRoughness,\n    diffuseColor,\n    specularEnvironmentR90,\n    specularColor\n    );\n\n    // LIGHTING\n\n    vec3 color = vec3(0.0, 0.0, 0.0);\n    vec3 "
+ "normal = Normal;\n    vec3 view = viewToPosition;\n\n    // https://stackoverflow.com/questions/38986208/webgl-loop-index-cannot-be-compared-with-non-constant-expression\n    for (int i=0; i<", "; i++) {\n        if (i >= uDirLightsNum){break;}\n\n        vec3 pointToLight = -uDirLightDirection[i];\n        vec3 shade = getPointShade(pointToLight, materialInfo, normal, view);\n        vec3 light = uDirLightIntensity[i] * uDirLightColor[i] * shade;\n        \n        ", "\n\n        color += light;\n    }\n    \n    for (int i=0; i<",
"; i++) {\n        if (i >= uPointLightsNum){break;}\n\n        vec3 pointToLight = uPointLightPosition[i] - worldPosition;\n        float distance = length(pointToLight);\n        float attenuation = getRangeAttenuation(uPointLightRange[i], distance);\n        vec3 shade = getPointShade(pointToLight, materialInfo, normal, view);\n        \n        color += attenuation * uPointLightIntensity[i] * uPointLightColor[i] * shade;\n    }\n    \n    for (int i=0; i<", "; i++) {\n        if (i >= numSpotLights){break;}\n        \n        vec3 pointToLight = uSpotLightPosition[i] - worldPosition;\n        float distance = length(pointToLight);\n        float rangeAttenuation = getRangeAttenuation(uSpotLightRange[i], distance);\n        float spotAttenuation = getSpotAttenuation(pointToLight, uSpotLightDirection[i], uSpotLightOuterConeCos[i], uSpotLightInnerConeCos[i]);\n        vec3 shade = getPointShade(pointToLight, materialInfo, normal, view);\n        color += rangeAttenuation "
+ "* spotAttenuation * uSpotLightIntensity[i] * uSpotLightColor[i] * shade;\n    }\n    \n    if (uDirLightsNum == 0 && uPointLightsNum == 0 && numSpotLights == 0) { \n        color += baseColor.rgb;\n    }\n\n    vec3 ambient = uAmbientColor * baseColor.rgb * occlusion;\n    color += ambient;\n\n    // regular shading\n    return vec4(color, baseColor.a);\n}\n", "times", "inTangents", "outTangents", "Super calls with default arguments not supported in this target, function: play", "null cannot be cast to non-null type org.teavm.jso.dom.html.HTMLCanvasElement",
"BIG_ENDIAN", "LITTLE_ENDIAN", "Bloom", "keycode cannot be negative, keycode: ", "keycode cannot be greater than 255, keycode: ", "Soft Left", "Soft Right", "Home", "Back", "Call", "End Call", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "*", "#", "Up", "Down", "Left", "Right", "Center", "Volume Up", "Volume Down", "Power", "Camera", "Clear", "A", "B", "C", "E", "F", "G", "H", "I", "J", "K", "L", "M", "O", "P", "Q", "R", "T", "U", "V", "X", "Y", "Z", ".", "L-Alt", "R-Alt", "L-Shift", "R-Shift", "Tab", "SYM",
"Explorer", "Envelope", "Enter", "Delete", "`", "-", "=", "\\", ";", "\'", "/", "Num", "Headset Hook", "Focus", "Plus", "Menu", "Notification", "Search", "Play/Pause", "Stop Media", "Next Media", "Prev Media", "Rewind", "Fast Forward", "Mute", "Page Up", "Page Down", "PICTSYMBOLS", "SWITCH_CHARSET", "A Button", "B Button", "C Button", "X Button", "Y Button", "Z Button", "L1 Button", "R1 Button", "L2 Button", "R2 Button", "Left Thumb", "Right Thumb", "Start", "Select", "Button Mode", "Forward Delete", "L-Ctrl",
"R-Ctrl", "Escape", "End", "Insert", "Numpad 0", "Numpad 1", "Numpad 2", "Numpad 3", "Numpad 4", "Numpad 5", "Numpad 6", "Numpad 7", "Numpad 8", "Numpad 9", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "Unknown", "conf", "nightshade/nightshade.gltf", "geom is already in a space", "invalid operation for locked space", "level: ", " x=", " y=", " z=", "null cannot be cast to non-null type org.teavm.jso.dom.html.HTMLAudioElement", "al.context", "source", "gain", "panner", "SSAO Base",
"\nin vec3 aPosition;\nin vec2 aUV;\nin vec3 aNormal;\n\nuniform mat4 world;\nuniform mat4 view;\nuniform mat4 viewProj;\n\nout vec2 vUV;\nout vec3 vNormal;\nout vec3 vViewSpacePosition;\n\nvoid main() {\nvUV = aUV;\nvNormal = (world * vec4(aNormal, 1.0)).xyz; // our cube is not translating, only rotating, so we can multiply normals with world matrix\nvec4 worldPos = world * vec4(aPosition, 1.0);\nvViewSpacePosition = (view * worldPos).xyz; // for ssao positions must in view space\ngl_Position = viewProj * worldPos;\n}",
"\nin vec2 vUV;\nin vec3 vNormal;\nin vec3 vViewSpacePosition;\n\nlayout (location = 0) out vec4 gColor;\nlayout (location = 1) out vec4 gNormal;\nlayout (location = 2) out vec4 gPosition;\n\nvoid main() {\ngColor = vec4(vUV, 0.0, 1.0);\ngNormal = vec4(vNormal, 1.0);\ngPosition = vec4(vViewSpacePosition, 1.0);\n}", "gl", "KHR_texture_transform", ".xyz, 1.0)", ".xyzw", "$this$addAll", "$this$elementAt", "$this$elementAtOrElse", "defaultValue", "$this$first", "Collection is empty.", "List is empty.", "$this$getOrNull",
"Collection has more than one element.", "List has more than one element.", "$this$sortedWith", "$this$toCollection", "destination", "$this$toList", "$this$toMutableList", "xhr.responseText", "None", "GLTFFile", "GLBFile", "JSON", "LittleEndianInputStream", "Can\'t get parent of root", "An operation is not implemented: ", "Not yet implemented", "charset", "true", " can\'t read, status ", "can\'t have body1==body2", "joint and bodies must be in same world", "joint can not be attached to just one body", "args",
"groups[i]", "groupName", "group[j]", "null cannot be cast to non-null type org.teavm.jso.dom.html.HTMLButtonElement", "attributeName", "NORMAL", "TANGENT", "Box shape", "UV", "\nattribute vec3 POSITION;\nattribute vec2 UV;\nvarying vec2 uv;\nuniform mat4 world;\nuniform mat4 viewProj;\n\nvoid main() {\n    uv = UV;\n    gl_Position = viewProj * world * vec4(POSITION, 1.0);\n}", "\nvarying vec2 uv;\nvoid main() {\n    gl_FragColor = vec4(uv, 0.0, 1.0);\n}", "stride = ", "texture", "vertPosition", "fragColor",
"gl_Position = ", "gl_FragColor = ", "if (gl_FragColor.a < 0.001 || gl_FragColor.a < ", ") { discard; }\n", "gl_FragColor.a = 1.0;\n", "Motion Blur Base", "\nattribute vec3 aPosition;\nuniform vec3 pos;\nuniform mat4 viewProj;\n\nvoid main() {\ngl_Position = viewProj * vec4(aPosition + pos, 1.0);\n}", "\nuniform vec3 color;\n\nvoid main() {\ngl_FragColor = vec4(color, 1.0);\n}", "\nattribute vec3 aPosition;\nattribute vec3 aNormal;\n\nuniform vec3 prevPos;\nuniform vec3 pos;\n\nuniform mat4 viewProj;\nuniform mat4 prevViewProj;\n\nvarying vec4 clipPos;\nvarying vec4 prevClipPos;\n\nvoid main() {\n// get world space vertex positions\nvec3 worldPos = aPosition + pos;\nvec3 prevWorldPos = aPosition + prevPos;\n\n// get clip space vertex positions\nclipPos = viewProj * vec4(worldPos, 1.0);\nprevClipPos = prevViewProj * vec4(prevWorldPos, 1.0);\n\n// https://www.nvidia.com/docs/IO/8230/GDC2003_OpenGLShaderTri"
+ "cks.pdf\n// apply stretching\nif (dot(worldPos.xyz - prevWorldPos.xyz, aNormal) > 0.0) {\n    gl_Position = clipPos;\n} else {\n    gl_Position = prevClipPos;\n}\n}", "\nvarying vec4 clipPos;\nvarying vec4 prevClipPos;\n\nvoid main() {\n// get NDC space vertex positions.\n// it must be calculated in fragment shader for correct interpolation.\nvec2 ndcPos = (clipPos / clipPos.w).xy;\nvec2 prevNdcPos = (prevClipPos / prevClipPos.w).xy;\n\ngl_FragColor = vec4(ndcPos - prevNdcPos, 0.0, 1.0);\n}", "Click on screen to pause/resume",
"uTexelSize", "sequence", "transformer", "Sound Wav", "242501__gabrielaraujo__powerup-success.wav", "alphaMode", "OPAQUE", "BLEND", "MASK", "alphaCutoff", "doubleSided", "JOINTS_", "WEIGHTS_", "normalTexture", "pbrMetallicRoughness", "vec4(arg1.xy, 0.0, arg2.a)", "occlusionTexture", "emissiveTexture", "emissiveFactor", "vec4(arg1.xyz + arg2.xyz, arg1.a)", "opaque", "translucent", "Super calls with default arguments not supported in this target, function: update", "frustumPoints", "orientation", "quaternion",
"vec", "Unmappable characters of length ", "view", "PageUp", "Period", "ControlRight", "ShiftLeft", "Backquote", "Backslash", "Backspace", "ShiftRight", "Numpad0", "Numpad1", "Numpad2", "Numpad3", "Numpad4", "Numpad5", "Numpad6", "Numpad7", "Numpad8", "Numpad9", "ControlLeft", "KeyA", "KeyB", "KeyC", "KeyD", "KeyE", "KeyF", "KeyG", "KeyH", "KeyI", "KeyJ", "KeyK", "KeyL", "KeyM", "KeyN", "KeyO", "KeyP", "KeyQ", "KeyR", "KeyS", "KeyT", "KeyU", "KeyV", "KeyW", "KeyX", "KeyY", "KeyZ", "Comma", "Equal", "Minus",
"Quote", "Slash", "AudioVolumeDown", "ArrowRight", "AltLeft", "PageDown", "ArrowUp", "ArrowDown", "ArrowLeft", "BracketRight", "Semicolon", "AudioVolumeUp", "BracketLeft", "ContextMenu", "Digit0", "Digit1", "Digit2", "Digit3", "Digit4", "Digit5", "Digit6", "Digit7", "Digit8", "Digit9", "AltRight", "Frame buffer", "minFilter", "magFilter", "wrapS", "wrapT", "interpolation", "output", "LINEAR", "null cannot be cast to non-null type kotlin.ranges.IntRange", "xmag", "ymag", "zfar", "znear", "aspectRatio", "yfov",
"Uint8Array.create(capacity)", "Window.decodeURI(uri)", "null cannot be cast to non-null type org.ksdfv.thelema.json.IJsonObject", "null cannot be cast to non-null type org.ksdfv.thelema.fs.IFile", "UTF8", "null cannot be cast to non-null type org.ksdfv.thelema.utils.LittleEndianInputStream", "arrayName", "buffers", "glTF: array name is unknown: ", "asset", "extensionsRequired", "glTF extensions are not supported yet", "bufferViews", "accessors", "samplers", "images", "textures", "materials", "meshes", "cameras",
"nodes", "skins", "animations", "scenes", "nodes[i]", "skinnedNodes[i]", "streamLittleEndian", "bad magic", "bad version", "skip buffer type ", "sourceType", "directory", "2.0", "(this as java.lang.String).toLowerCase()", "glb", "uBoneMatrices", "uWorldMatrix", "if (", " > 0.0) ", " += ", " * ", "[int(", ")];\n", "mat3(", "[0].xyz, ", "[1].xyz, ", "[2].xyz);", "vec4 ", " = vec4(", ", 1.0);\n", "skinning", ".xyz = ", ".xyz + uTransVec4", ".xyz;\n", ".xyz * uTransVec4", ".w + uTransVec4", ".xyz = rotate_vertex_position(uTransVec4",
".xyz, uTransVec4", ".w) + uTransVec4", "mat3 normalMat = ", " = normalize(normalMat * ", ");\n", "vec3 T = normalize(normalMat * ", ".xyz);\n", "vec3 B = cross(", ", T) * ", ".w;\n", " = mat3(T, B, ", "vec3 T = ", " vec3 ", " mat3 ", "uniform vec4 uTransVec3", "uniform vec4 uTransVec4", "\n                    uniform vec4 uTransVec4", ";\n\n                    // https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\n                    vec3 rotate_vertex_position(vec3 position, float angle) {\n                        float half_angle = angle * 0.5;\n                        vec4 q = vec4(0.0, sin(half_angle), 0.0, cos(half_angle));\n                        vec3 v = position.xyz;\n                        return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n                    }\n                ",
"uniform mat4 ", "];\n", "mat4 skinning = mat4(0.0);\n", " vec4 ", "uniform mat3 uNormalMatrix;\n", "tbn", "material", "shader", "data", "inputs", "Default", "lateinit property ", " has not been initialized", " must not be null", "Parameter specified as non-null is null: method ", ", parameter ", ".a", "unit[shader] ?: 0", "uniform ", "texture3D", "textureCube", "texture2D", ".xyz = pow(", ".xyz, vec3(2.2));\n", "tex", "texColor", "texAlpha", "sphere", "power of ten too big", "glTF Loader Animation", "<anonymous parameter 1>",
"Sphere shape", "go=", "byteStride", "target", "a", "b", "null cannot be cast to non-null type org.ksdfv.thelema.phys.ode4j.BodyContactPair", "Step must be non-zero.", "Step must be greater than Int.MIN_VALUE to avoid overflow on negation.", "\nvarying vec2 uv;\n\nuniform sampler2D uNormalMap;\nuniform sampler2D uViewSpacePositionMap;\n\nuniform mat4 uProjectionMatrix;\n\nuniform sampler2D uNoiseTexture;\n// tile noise texture over screen based on screen dimensions divided by noise size\nuniform vec2 uNoiseScale;\n\nuniform vec3 uOcclusionSamples[",
"];\n\n// parameters\nuniform float uRadius;\nuniform float uStrength;\nuniform float uBias;\nuniform float uRange;\n\nvoid main() {\n    vec3 fragPos = texture2D(uViewSpacePositionMap, uv).rgb;\n    vec3 normal = normalize(texture2D(uNormalMap, uv).rgb);\n    vec3 randomVec = normalize(texture2D(uNoiseTexture, uv * uNoiseScale).xyz);\n    // create TBN change-of-basis matrix: from tangent-space to view-space\n    vec3 tangent = normalize(randomVec - normal * dot(randomVec, normal));\n    vec3 bitangent = cross(normal, ta"
+ "ngent);\n    mat3 TBN = mat3(tangent, bitangent, normal);\n    // iterate over the sample kernel and calculate occlusion factor\n    float occlusion = 0.0;\n    if (length(fragPos) < uRange) {\n        for(int i = 0; i < ", "; ++i) {\n            // get sample position\n            vec3 samp = TBN * uOcclusionSamples[i]; // from tangent to view-space\n            samp = fragPos + samp * uRadius;\n\n            // project sample position (to sample texture) (to get position on screen/texture)\n            vec4 offset = vec4(samp, 1.0);\n            offset = uProjectionMatrix * offset; // from view to clip-space\n            offset.xyz /= offset.w; // perspective divide\n            offset.xyz = offset.xyz * 0.5 + 0.5; // transform to ran"
+ "ge 0.0 - 1.0\n\n            // get sample depth\n            float sampleDepth = texture2D(uViewSpacePositionMap, offset.xy).z; // get depth value of kernel sample\n            // range check & accumulate\n            float rangeCheck = smoothstep(0.0, 1.0, uRadius / abs(fragPos.z - sampleDepth));\n            occlusion += (sampleDepth >= samp.z + uBias ? 1.0 : 0.0) * rangeCheck;\n        }\n    }\n\n    occlusion = 1.0 - (occlusion / ", ".0);\n\n    gl_FragColor = vec4(occlusion, occlusion, occlusion, 1.0);\n}",
"Super calls with default arguments not supported in this target, function: initBones", "aValue", "arg1 * arg2", "Motion Blur", "vertexPosition", " = normalize(", " - ", ".z;\n", "vec3 ", "cameraPosition", "viewProjectionMatrix", "prevViewProjectionMatrix", "viewMatrix", "projectionMatrix", "inverseViewProjectionMatrix", "normalizedViewVector", "viewZDepth", "clipSpacePosition", "viewSpacePosition", "Super calls with default arguments not supported in this target, function: lookAt", "primitives", "gltfSkin",
"Collection contains no element matching the predicate.", "null cannot be cast to non-null type org.ksdfv.thelema.shader.glsl.VertexNode", "null cannot be cast to non-null type org.ksdfv.thelema.shader.glsl.VelocityNode", "tag", "Super calls with default arguments not supported in this target, function: info", "inputMap", "\nvarying vec2 uv;\nuniform sampler2D tex;\n\nuniform float cutoff;\n\nvoid main() {\n    vec4 color = texture2D(tex, uv);\n\n    float brightness = dot(color.rgb, vec3(0.2126, 0.7152, 0.0722));\n    if (brightness > cutoff) {\n        gl_FragColor = vec4(color.rgb, 1.0);\n    } else {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}",
"cutoff", "worldSpacePosition", "previousViewProjectionMatrix", "uPrevBoneMatrices", "uPrevWorldMatrix", "prevPos", "prevSkinning", "prevClipSpacePos = ", "\nif (dot(", ") > 0.0) {\n    ", ";\n} else {\n    ", " = prevClipSpacePos;\n}\n", "vec4 clipSpacePos = ", "vec2 ndcPos = (clipSpacePos / clipSpacePos.w).xy;\n", "vec2 prevNdcPos = (prevClipSpacePos / prevClipSpacePos.w).xy;\n", " = ndcPos - prevNdcPos;\n", " vec4 prevClipSpacePos;\n", "vec2 ", "mat4 prevSkinning = mat4(0.0);\n", "prevPosition", "velocity",
"stretchedPosition", "img", "camFar", "camPos", "null cannot be cast to non-null type T", "null cannot be cast to non-null type com.github.cliftonlabs.json_simple.JsonObject", "mass must be > 0 but is ", "inertia must be positive definite", "center of mass inconsistent with mass parameters", "bad direction number", "argument not a trimesh", "outputBuffer", "joints", "skeleton", "inverseBindMatrices", "Bloom base", "\nattribute vec3 aPosition;\nvarying vec3 vPosition;\nuniform mat4 viewProj;\n\nvoid main() {\n    vPosition = aPosition;\n    gl_Position = viewProj * vec4(aPosition, 1.0);\n}",
"\nvarying vec3 vPosition;\n                \nvoid main() {\n    gl_FragColor = vec4(vPosition, 1.0);\n}", "\nvarying vec2 uv;\n\nuniform sampler2D uTexture;\n\nuniform vec2 uTexelSize;\nuniform float uDelta;\n\nvoid main() {\n    vec4 o = uTexelSize.xyxy * vec2(-uDelta, uDelta).xxyy;\n\n    vec4 s =\n    texture2D(uTexture, uv + o.xy) +\n    texture2D(uTexture, uv + o.zy) +\n    texture2D(uTexture, uv + o.xw) +\n    texture2D(uTexture, uv + o.zw);\n\n    gl_FragColor = vec4(s.rgb * 0.25, 1.0);\n}", "uTexture",
"\nvarying vec2 uv;\n\nuniform sampler2D uSourceTexture;\nuniform sampler2D uTexture;\n\nuniform float uDelta;\nuniform vec2 uTexelSize;\nuniform float uIntensity;\n\nvoid main() {\n    vec4 o = uTexelSize.xyxy * vec2(-uDelta, uDelta).xxyy;\n\n    vec4 s =\n    texture2D(uTexture, uv + o.xy) +\n    texture2D(uTexture, uv + o.zy) +\n    texture2D(uTexture, uv + o.xw) +\n    texture2D(uTexture, uv + o.zw);\n\n    gl_FragColor = vec4(s.rgb * 0.25 + texture2D(uSourceTexture, uv).rgb, 1.0);\n    gl_FragColor.rgb *= uIntensity;\n}",
"uSourceTexture", "uIntensity", "webglVersion", "webgl2", "WebGL is not supported", "WebGL 2.0 is not supported, will be used WebGL 1.0", "outTangentName", "outBiNormalName", "outNormalName", "\nvec3 ", " = vec3(0.0);\nvec3 ", " = vec3(0.0);\n\n/*\nviewDir = normalize(cameraPosition - worldPosition), need for back-facing surface\nnormal - vertex normal\nworldPosition - vertex position\nuv - texture coordinates\nnormalScale - normal texture scaling. Used if normalTexValue is not vec3(0.0, 0.0, 0.0)\nnormalTexValue - RGB value from normal texture. May be vec3(0.0, 0.0, 0.0) and it will be not used.\n */\nvoid normalMapMain(vec3 viewVector, mat3 tbn, vec3 worldPosition, vec2 uv, float normalScale, vec3 colorValue) {\n    vec3 t = tbn[0];\n    ve"
+ "c3 b = tbn[1];\n    vec3 ng = tbn[2];\n\n    // For a back-facing surface, the tangential basis vectors are negated.\n    float facing = step(0.0, dot(viewVector, ng)) * 2.0 - 1.0;\n    t *= facing;\n    b *= facing;\n    ng *= facing;\n\n    vec3 n = colorValue * 2.0 - vec3(1.0);\n    n *= vec3(normalScale, normalScale, 1.0);\n    n = mat3(t, b, ng) * normalize(n);\n\n    ", " = t;\n    ", " = b;\n    ", " = n;\n}", "stepsize must be > 0", "World Islands Stepping Group", "World Islands Stepping Start", "buffer overflow",
"instance.gain.gain", "instance.panner.pan", "al", "src", "Capacity is negative: ", "The last char in dst ", "The last char in src ", " is outside of string of size ", "Start ", " must be before end ", "end", "positiveX", "negativeX", "positiveY", "negativeY", "positiveZ", "negativeZ", "DVector3[ ", " ]", "Normalization failed: ", "i=", "u_lumaThreshold", "u_maxSpan", "u_mulReduce", "u_minReduce", "u_viewportInverse", "varying vec2 uv;\n\nuniform sampler2D uColorMap;\n\n// The inverse of the viewport dimensions along X and Y\nuniform vec2 u_viewportInverse;\n\nuniform float u_lumaThreshold;\nuniform float u_maxSpan;\nuniform float u_mulReduce;\nuniform float u_minReduce;\n\nvec4 fxaa(sampler2D tex, vec2 coords, vec2 inverseVP) {\n    vec3 rgbM = texture2D(tex, coords).rgb;\n\n    // Sampling neighbour texels. Offsets are adapted to OpenGL texture coordinates.\n    vec3 rgbNW = texture2D(tex, coords + vec2(-1.0, 1.0) * inverseVP).rgb;\n   "
+ " vec3 rgbNE = texture2D(tex, coords + vec2(1.0, 1.0) * inverseVP).rgb;\n    vec3 rgbSW = texture2D(tex, coords + vec2(-1.0, -1.0) * inverseVP).rgb;\n    vec3 rgbSE = texture2D(tex, coords + vec2(1.0, -1.0) * inverseVP).rgb;\n\n    // see http://en.wikipedia.org/wiki/Grayscale\n    const vec3 toLuma = vec3(0.299, 0.587, 0.114);\n\n    // Convert from RGB to luma.\n    float lumaNW = dot(rgbNW, toLuma);\n    float lumaNE = dot(rgbNE, toLuma);\n    float lumaSW = dot(rgbSW, toLuma);\n    float lumaSE = dot(rgbSE, toLuma)"
+ ";\n    float lumaM = dot(rgbM, toLuma);\n\n    // Gather minimum and maximum luma.\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n\n    // If contrast is lower than a maximum threshold ...\n    if (lumaMax - lumaMin <= lumaMax * u_lumaThreshold) {\n        return vec4(rgbM, 1.0);\n    }\n\n    // Sampling is done along the gradient.\n    vec2 samplingDirection;\n    samplingDirection.x = -((lumaNW + lumaNE) -"
+ " (lumaSW + lumaSE));\n    samplingDirection.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    // Sampling step distance depends on the luma: The brighter the sampled texels, the smaller the final sampling step direction.\n    // This results, that brighter areas are less blurred/more sharper than dark areas.\n    float samplingDirectionReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) * 0.25 * u_mulReduce, u_minReduce);\n\n    // Factor for norming the sampling direction plus adding the brightness influence.\n   "
+ " float minSamplingDirectionFactor = 1.0 / (min(abs(samplingDirection.x), abs(samplingDirection.y)) + samplingDirectionReduce);\n\n    // Calculate final sampling direction vector by reducing, clamping to a range and finally adapting to the texture size.\n    samplingDirection = clamp(samplingDirection * minSamplingDirectionFactor, vec2(-u_maxSpan), vec2(u_maxSpan)) * inverseVP;\n\n    // Inner samples on the tab.\n    vec3 rgbSampleNeg = texture2D(tex, coords + samplingDirection * (1.0/3.0 - 0.5)).rgb;\n    vec3 r"
+ "gbSamplePos = texture2D(tex, coords + samplingDirection * (2.0/3.0 - 0.5)).rgb;\n\n    vec3 rgbTwoTab = (rgbSamplePos + rgbSampleNeg) * 0.5;\n\n    // Outer samples on the tab.\n    vec3 rgbSampleNegOuter = texture2D(tex, coords + samplingDirection * (0.0/3.0 - 0.5)).rgb;\n    vec3 rgbSamplePosOuter = texture2D(tex, coords + samplingDirection * (3.0/3.0 - 0.5)).rgb;\n\n    vec3 rgbFourTab = (rgbSamplePosOuter + rgbSampleNegOuter) * 0.25 + rgbTwoTab * 0.5;\n\n    // Calculate luma for checking against the minimum and "
+ "maximum value.\n    float lumaFourTab = dot(rgbFourTab, toLuma);\n\n    // Show edges for debug purposes.\n//    rgbTwoTab.r = 1.0;\n//    rgbFourTab.r = 1.0;\n\n    // Are outer samples of the tab beyond the edge ...\n    if (lumaFourTab < lumaMin || lumaFourTab > lumaMax) {\n        // ... yes, so use only two samples.\n        return vec4(rgbTwoTab, 1.0);\n    } else {\n        // ... no, so use four samples.\n        return vec4(rgbFourTab, 1.0);\n    }\n}\n\nvoid main() {\n    gl_FragColor = fxaa(uColorMap, uv, u_viewpo"
+ "rtInverse);\n}", "World Islands Stepping Selection", "Island Stepping Job Start", " cannot be cast to ", "kotlin.jvm.functions.Function", "G-Buffer", "DQuaternion[ ", "Mesh attempting to access memory outside of the index buffer (count: ", ", offset: ", ", max: ", "Super calls with default arguments not supported in this target, function: render", "Malformed input of length ", "inputName", "SSAO", "element", "Zero length BigInteger", "Radix out of range", "Negative bit address", "Negative exponent", "BigInteger divide by zero",
"getNextMatch", "inverseProjectionView", "OIM_AUTOTLSCLEANUP", "OIM_MANUALTLSCLEANUP", "null cannot be cast to non-null type org.teavm.jso.dom.events.KeyboardEvent", "copyright", "generator", "version", "minVersion", "lightMatrix[", "cascadeEnd[", "$this$map", "transform", "$this$joinTo", "separator", "postfix", "truncated", "$this$joinToString", "joinTo(StringBuilder(), …ed, transform).toString()", "...", "$this$asIterable", "\'skip\' should be 1, but is: ", "Mouse", "Press some button on mouse or move mouse over window",
"�", "averageCharsPerByte must be positive. Actual value is ", "maxCharsPerByte must be positive. Actual value is ", "newAction must be non-null", "uSceneColorMap", "uVelocityMap", "uBlurStrength", "uNumSamples", "aPositionName", "aUVName", "set", "DISABLED", "GIMPACT", "Cascaded shadow matrices", "Use W A S D keys to move object", "indices accessor must be SCALAR but was ", "unsupported componentType ", "GltfLoader: unsupported componentType ", "Empty list doesn\'t contain element at index ", "The centre of mass must be at the origin.",
"inertia must be positive definite!", "Mesh Cube", "\nattribute vec3 aPosition;\nvarying vec3 vPosition;\nuniform mat4 projViewModelTrans;\n\nvoid main() {\n    vPosition = aPosition.xyz;\n    gl_Position = projViewModelTrans * vec4(aPosition, 1.0);\n}", "\nvarying vec3 vPosition;\n\nvoid main() {\n    gl_FragColor = vec4(vPosition, 1.0);\n}", "null cannot be cast to non-null type org.ksdfv.thelema.phys.ode4j.GeomContactPair", "intArray", "Use middle mouse button, shift key to rotate, move camera", "sceneMap",
"brightnessMap", "o1", "null cannot be cast to non-null type org.ksdfv.thelema.phys.ode4j.IOdeGeom", "o2", "OdeHelper.createContactJ…d, contactGroup, contact)", "contact", "arg", "function", "op", "key", "default", "DONE", "INITIAL", "PARSED_ERROR", "PARSING_ARRAY", "PARSING_ENTRY", "PARSING_OBJECT", "inverseViewProjection", "Incorrect type. Must be one of GL_UNSIGNED_BYTE, GL_UNSIGNED_SHORT, or GL_UNSIGNED_INT", "int", "float", "vec2", "vec3", "vec4", "mat2", "mat3", "mat4", "sampler1D", "sampler2D", "sampler3D",
"samplerCube", "sampler2DArray", "bool", "geom", "main", "invoke(...)", "Trimesh shape", "heightProvider", "enabled body not tagged", "disabled body tagged", "unattached or disabled joint tagged", "attached enabled joint not tagged", "map.values", "map.values.elementAt(index)", "Shadow mapping base", "\nattribute vec3 aPosition;\nuniform vec3 pos;\nuniform mat4 viewProj;\n\nuniform mat4 lightMatrix;\n\nvarying vec4 lightSpacePos;\n\nvoid main() {\n    vec4 worldPos = vec4(aPosition + pos, 1.0);\n    lightSpacePos = lightMatrix * worldPos;\n    gl_Position = viewProj * vec4(aPosition + pos, 1.0);\n}",
"\nuniform vec4 color;\nuniform sampler2D shadowMap;\n\nvarying vec4 lightSpacePos;\n\nfloat CalcShadowFactor(vec4 LightSpacePos) {\n    // convert to NDC space\n    vec3 projCoords = LightSpacePos.xyz / LightSpacePos.w;\n    \n    if (projCoords.z > 1.0)\n        return 0.0;\n    \n    projCoords = projCoords * 0.5 + 0.5;\n\n    float currentDepth = projCoords.z;\n    float closestDepth = texture2D(shadowMap, projCoords.xy).x;\n\n    float bias = 0.001;\n    if (currentDepth - bias > closestDepth)\n        return 1.0;\n    else"
+ "\n        return 0.0;\n}\n\nvoid main () {\n    float ShadowFactor = CalcShadowFactor(lightSpacePos);\n    gl_FragColor = vec4(color.xyz * (1.0 - ShadowFactor), color.a);\n}", "shadowMap", "\nattribute vec3 aPosition;\nuniform vec3 pos;\nuniform mat4 viewProj;\n\nvoid main() {\n    vec4 worldPos = vec4(aPosition + pos, 1.0);\n    gl_Position = viewProj * vec4(aPosition + pos, 1.0);\n}", "void main() {}", "normalScale", "normalColor", "normalMapMain(", "tangent", "biNormal", "GL_ARB_framebuffer_object", "GL_EXT_framebuffer_object",
"Can\'t create mipmaps on GPU", "uniformLocations", "uniformLocationsMap", "mode", "attributes", "baseColor", "shaderChannels", "in_Stride = ", "IGNORE", "REPLACE", "REPORT", "arg1.xyz * arg2", "actions[i]", "animation", "You must call end() after each call to being()", "You must call render() before adding an animation", "You must call render() first", "blendingPosition.entries", "it.value", "blendingRotation.entries", "blendingScale.entries", "Call end() first", "FXAA", "Scale out of range.", "mat3x4", "channels",
"anim", "GL Object is not created, may be you must call createGLObject()", "Frame buffer it not bound. You must use bind {}", "Frame buffer couldn\'t be constructed: ", "missing attachment", "incomplete dimensions", "unsupported combination of formats", "incomplete attachment", "unknown error ", "Super calls with default arguments not supported in this target, function: destroy", "            \nattribute vec4 aPosition;\nvarying vec3 vPosition;\nuniform mat4 projViewModelTrans;\n\nvoid main() {\n    vPosition = aPosition.xyz;\n    gl_Position = projViewModelTrans * aPosition;\n}",
"\nvarying vec3 vPosition;\nvoid main() {\n    gl_FragColor = vec4(vPosition, 1.0);\n}", "COLON", "COMMA", "DATUM", "END", "LEFT_BRACE", "LEFT_SQUARE", "RIGHT_BRACE", "RIGHT_SQUARE", "prevViewProj", "tests", "Super calls with default arguments not supported in this target, function: updateTransform", "Super calls with default arguments not supported in this target, function: getWorldMatrix", "Super calls with default arguments not supported in this target, function: dst2", "\u0002\u0000\u0002\u0001\u0001\u0002\u0001\u0003\u0001\u0004\u0003\u0001\u0001\u0005\u0001\u0006\u0001\u0007\u0001\u0008\u0001\t\u0001\n\u0001\u000b\u0001\u000c\u0001\r\u0005\u0000\u0001\u000c\u0001\u000e\u0001\u000f\u0001\u0010\u0001\u0011\u0001\u0012\u0001\u0013\u0001\u0014\u0001\u0000\u0001\u0002\u0001\u0000\u0001\u0002\u0004\u0000\u0001\u0015\u0001\u0016\u0002\u0000\u0001\u0017",
"\u0000\u0000\u0000\u001b\u00006\u0000Q\u0000l\u0000\u00006\u0000¢\u0000½\u0000Ø\u00006\u00006\u00006\u00006\u00006\u00006\u0000ó\u0000Ď\u00006\u0000ĩ\u0000ń\u0000ş\u0000ź\u0000ƕ\u00006\u00006\u00006\u00006\u00006\u00006\u00006\u00006\u0000ư\u0000ǋ\u0000Ǧ\u0000Ǧ\u0000ȁ\u0000Ȝ\u0000ȷ\u0000ɒ\u00006\u00006\u0000ɭ\u0000ʈ\u00006", "\u0002\u0000\u0001\t\u0003\u0001\u0001\t\u0003\u0001\u0006\t\u0002\u0001\u0001\t\u0005\u0000\u0008\t\u0001\u0000\u0001\u0001\u0001\u0000\u0001\u0001\u0004\u0000\u0002\t\u0002\u0000\u0001\t",
"\t\u0000\u0001\u0007\u0001\u0007\u0002\u0000\u0001\u0007\u0012\u0000\u0001\u0007\u0001\u0000\u0001\t\u0008\u0000\u0001\u0006\u0001\u0019\u0001\u0002\u0001\u0004\u0001\n\n\u0003\u0001\u001a\u0006\u0000\u0004\u0001\u0001\u0005\u0001\u0001\u0014\u0000\u0001\u0017\u0001\u0008\u0001\u0018\u0003\u0000\u0001\u0012\u0001\u000b\u0002\u0001\u0001\u0011\u0001\u000c\u0005\u0000\u0001\u0013\u0001\u0000\u0001\r\u0003\u0000\u0001\u000e\u0001\u0014\u0001\u000f\u0001\u0010\u0005\u0000\u0001\u0015\u0001\u0000\u0001\u0016ﾂ\u0000",
"Unkown internal scanner error", "Error: could not match input", "Error: pushback value was too large", "vertex", "cameraData", "operation", "principledBSDF", "toneMap", "gBufferOutput", "splitVec4", "mergeVec4", "skyboxVertex", "Patter is null", "\\Q", "\\E", "\\\\E\\Q", "extensions", "row=", " col2=", " row2=", "Plane Mesh Builder", "Cascaded shadow mapping base", "\nattribute vec3 aPosition;\nuniform vec3 pos;\nuniform mat4 viewProj;\n\nuniform mat4 lightMatrix[", "];\nvarying vec4 lightSpacePos[", "];\nvarying vec4 clipSpacePos;\n\nvoid main() {\n    vec4 worldPos = vec4(aPosition + pos, 1.0);\n    \n    for (int i = 0; i < ",
"; i++) {\n        lightSpacePos[i] = lightMatrix[i] * worldPos;    \n    }\n    \n    clipSpacePos = viewProj * worldPos;\n    gl_Position = clipSpacePos;\n}", "\nuniform vec4 color;\n\nuniform sampler2D shadowMap[", "];\nuniform float cascadeEnd[", "];\nvarying vec4 clipSpacePos;\n\nvoid main () {\n    gl_FragColor = color;\n\n    for (int i = 0; i < ", "; i++) {\n        if (clipSpacePos.z < cascadeEnd[i]) {\n            vec3 cascadeColor = vec3(1.0);\n        \n            if (i == 0) {\n                cascadeColor = vec3(1.0, 0.0, 0.0);\n            } else if (i == 1) {\n                cascadeColor = vec3(0.0, 1.0, 0.0);\n            } else if (i == 2) {\n                cascadeColor = vec3(0.0, 0.0, 1.0);\n            }\n            \n            float shadowFactor = 0.0;\n            vec4 lightSpacePos = lightSpacePos[i];\n            \n            vec3 projCoords "
+ "= (lightSpacePos.xyz / lightSpacePos.w) * 0.5 + 0.5;\n        \n            float currentDepth = projCoords.z;\n            float closestDepth = texture2D(shadowMap[i], projCoords.xy).x;\n        \n            float bias = 0.001;\n            if (currentDepth - bias > closestDepth) {\n                shadowFactor = 0.5;\n            }\n            \n            gl_FragColor = vec4(mix(gl_FragColor.xyz * (1.0 - shadowFactor), cascadeColor, 0.5), color.a);\n            break;\n        }    \n    }\n}", "shadowMap[",
"uSkyboxVertexTransform", "uniform vec4 ", ".xyz + ", ".xyz * ", "attributePosition", "result", "Skybox", "\nattribute vec3 aPosition;\nvarying vec3 vPosition;\n\nuniform mat4 viewProj;\nuniform vec3 camPos;\nuniform float camFar;\n\nvoid main () {\n    vPosition = aPosition;\n    gl_Position = viewProj * vec4(aPosition * camFar + camPos, 1.0);\n}", "\nvarying vec3 vPosition;\nuniform samplerCube texture;\n\nvoid main () {\n    gl_FragColor = textureCube(texture, vPosition);\n}", "Invalid parameter: enc", "Incomplete % sequence at: ",
"Invalid % sequence (", ") at ", "buildWrap", "body", "null cannot be cast to non-null type org.ode4j.ode.DGeom", "value.geom", "null cannot be cast to non-null type org.ksdfv.thelema.phys.ode4j.OdeCapsuleShape", "null cannot be cast to non-null type org.ksdfv.thelema.phys.ode4j.OdeCylinderShape", "null cannot be cast to non-null type org.ode4j.ode.DWorld", "QuickStepIsland Stage1", "QuickStepIsland Stage0-Joints", "QuickStepIsland Stage0-Bodies", "QuickStepIsland Stage3", "QuickStepIsland Stage2b Sync", "QuickStepIsland Stage2a Sync",
"QuickStepIsland Stage2a", "QuickStepIsland Stage2b", "QuickStepIsland Stage2c", "QuickStepIsland Stage5", "QuickStepIsland Stage4LCP_Iteration Sync", "QuickStepIsland Stage4LCP_Iteration Start", "QuickStepIsland Stage4LCP_fc Start", "QuickStepIsland Stage4LCP_iMJ Sync", "QuickStepIsland Stage4LCP_ReorderPrep", "QuickStepIsland Stage4a", "QuickStepIsland Stage4LCP_iMJ", "QuickStepIsland Stage4b", "QuickStepIsland Stage4LCP_Ad", "QuickStepIsland Stage4LCP_fc", "QuickStepIsland Stage4LCP_Iteration", "QuickStepIsland Stage4LCP_ConstraintsReordering Sync",
"QuickStepIsland Stage4LCP_ConstraintsReordering", "QuickStepIsland Stage6a Sync", "QuickStepIsland Stage6a", "QuickStepIsland Stage6b", "Charset.forName(\"UTF-8\")", "UTF-16", "Charset.forName(\"UTF-16\")", "UTF-16BE", "Charset.forName(\"UTF-16BE\")", "UTF-16LE", "Charset.forName(\"UTF-16LE\")", "US-ASCII", "Charset.forName(\"US-ASCII\")", "ISO-8859-1", "Charset.forName(\"ISO-8859-1\")", "fragNormal", "fragPosition", "layout (location = 0) out vec4 gColor;\n", "layout (location = 1) out vec4 gNormal;\n", "layout (location = 2) out vec4 gPosition;\n",
"gColor = ", "gNormal = ", "gPosition = ", "if (gColor.a < ", "gColor.a = 1.0;\n", "previousTransform", "lightMatrix", "str.toString()", "Super calls with default arguments not supported in this target, function: vertSourceCode", "=== VERTEX ===\n", "Super calls with default arguments not supported in this target, function: fragSourceCode", "=== FRAGMENT ===\n", "Super calls with default arguments not supported in this target, function: sourceCode", "no uniform with name \'", "\' in shader", "Super calls with default arguments not supported in this target, function: getUniformLocation",
"Super calls with default arguments not supported in this target, function: set3", "Super calls with default arguments not supported in this target, function: setMatrix4", "\nattribute vec2 ", ";\nattribute vec2 ", ";\n\nuniform vec2 translation;\nuniform vec2 scale;\nvarying vec2 uv;\n\nvoid main() {\n    uv = ", ";\n    gl_Position = vec4(translation.x + ", ".x * scale.x, translation.y + ", ".y * scale.y, 0.0, 1.0);\n}", "            \nvarying vec2 uv;\nuniform sampler2D tex;\n\nvoid main() {\n    gl_FragColor = texture2D(tex, uv);\n}",
"Either src or dest is null", "java.version", "1.8", "os.name", "TeaVM", "file.separator", "path.separator", "java.io.tmpdir", "java.vm.version", "user.home", "/tmp", "shortArray", "          \nattribute vec4 aPosition;\nattribute vec2 aUV;\nvarying vec2 uv;\n\nvoid main() {\n    uv = aUV;\n    gl_Position = aPosition;\n}", "                \nvarying vec2 uv;\n\nvoid main() {\n    gl_FragColor = vec4(uv, 1, 1);\n}", "Threshold Filter", "byteBuffer", "worldPosition", "occlusion", "roughness", "metallic", "PrincipledBSDF: receiveShadows enabled, but clipSpacePos is not set",
"uDirLightsNum", "uPointLightsNum", "uSpotLightsNum", "uAmbientColor", "null cannot be cast to non-null type org.ksdfv.thelema.g3d.light.PointLight", "uPointLightPosition[", "uPointLightColor[", "uPointLightIntensity[", "uPointLightRange[", "uDirLightDirection[", "uDirLightColor[", "uDirLightIntensity[", "uDirLightCascadeEnd[", "uDirLightViewProj[", "dirLightTexUnits[cascadeIndex]", "uDirLightShadowMap[", "null cannot be cast to non-null type org.ksdfv.thelema.g3d.light.DirectionalLight", " = principledBSDFMain(",
"uniform sampler2D uDirLightShadowMap[", "uniform float uDirLightCascadeEnd[", " vec4 vDirLightClipSpacePos[", "(0.0);\n", "uniform mat4 uDirLightViewProj[", "for (int i = 0; i < ", "; i++) {\n", "vDirLightClipSpacePos[i] = uDirLightViewProj[i] * ", "Emission Bloom", ", status: ", "STEP", "CUBICSPLINE", "An operation is not implemented.", "childNode", "Collection doesn\'t contain element at index ", "Index type is unknown", "Native", "LittleEndian", "BigEndian", "gl_FragColor.x += velocity.x * 20;\n", "gl_FragColor.y += velocity.y * 20;\n",
"\nvarying vec2 uv;\nuniform sampler2D uSceneColorMap;\nuniform sampler2D uVelocityMap;\n\nconst vec3 VZERO = vec3(0.0, 0.0, 0.0);\n\nuniform float uBlurStrength;\n\nvoid main() {\n    vec3 vSum = VZERO;\n\n    vec2 velocity = texture2D(uVelocityMap, uv).xy * 0.5;    \n    //velocity *= uBlurStrength;\n    if (velocity.x != 0.0 || velocity.y != 0.0) {\n        float fNumSamples = ", ".0 - 1.0;\n\n        for (int k = 0; k < ", "; ++k) {; \n            vec2 offset = velocity * (float(k) / fNumSamples - 0.5);        \n            vSum += texture2D(uSceneColorMap, uv + offset).xyz;\n        }\n\n        vSum /= ",
".0;\n\n        gl_FragColor = vec4(vSum, 1.0);\n    } else {\n        gl_FragColor = texture2D(uSceneColorMap, uv);\n    }\n\n", "\n}\n", "null cannot be cast to non-null type com.github.cliftonlabs.json_simple.JsonArray", "source.entries", "it.key", "ODE INTERNAL ERROR  ", "ODE Message ", "Step is zero."]);
oktsp_SSAO_ssaoBlurCode = $rt_s(521);
oktsp_SSAO_ssaoCombineCode = $rt_s(522);
jl_String.prototype.toString = function() {
    return $rt_ustr(this);
};
jl_String.prototype.valueOf = jl_String.prototype.toString;
jl_Object.prototype.toString = function() {
    return $rt_ustr(jl_Object_toString(this));
};
jl_Object.prototype.__teavm_class__ = function() {
    return $dbg_class(this);
};
function Long_eq(a, b) {
    return a.hi === b.hi && a.lo === b.lo;
}
function Long_ne(a, b) {
    return a.hi !== b.hi || a.lo !== b.lo;
}
function Long_gt(a, b) {
    if (a.hi < b.hi) {
        return false;
    }
    if (a.hi > b.hi) {
        return true;
    }
    var x = a.lo >>> 1;
    var y = b.lo >>> 1;
    if (x !== y) {
        return x > y;
    }
    return (a.lo & 1) > (b.lo & 1);
}
function Long_ge(a, b) {
    if (a.hi < b.hi) {
        return false;
    }
    if (a.hi > b.hi) {
        return true;
    }
    var x = a.lo >>> 1;
    var y = b.lo >>> 1;
    if (x !== y) {
        return x >= y;
    }
    return (a.lo & 1) >= (b.lo & 1);
}
function Long_lt(a, b) {
    if (a.hi > b.hi) {
        return false;
    }
    if (a.hi < b.hi) {
        return true;
    }
    var x = a.lo >>> 1;
    var y = b.lo >>> 1;
    if (x !== y) {
        return x < y;
    }
    return (a.lo & 1) < (b.lo & 1);
}
function Long_le(a, b) {
    if (a.hi > b.hi) {
        return false;
    }
    if (a.hi < b.hi) {
        return true;
    }
    var x = a.lo >>> 1;
    var y = b.lo >>> 1;
    if (x !== y) {
        return x <= y;
    }
    return (a.lo & 1) <= (b.lo & 1);
}
function Long_add(a, b) {
    if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
        return Long_fromNumber(a.lo + b.lo);
    } else if (Math.abs(a.hi) < Long_MAX_NORMAL && Math.abs(b.hi) < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) + Long_toNumber(b));
    }
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    var lolo = a_lolo + b_lolo | 0;
    var lohi = a_lohi + b_lohi + (lolo >> 16) | 0;
    var hilo = a_hilo + b_hilo + (lohi >> 16) | 0;
    var hihi = a_hihi + b_hihi + (hilo >> 16) | 0;
    return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
}
function Long_inc(a) {
    var lo = a.lo + 1 | 0;
    var hi = a.hi;
    if (lo === 0) {
        hi = hi + 1 | 0;
    }
    return new Long(lo, hi);
}
function Long_dec(a) {
    var lo = a.lo - 1 | 0;
    var hi = a.hi;
    if (lo ===  -1) {
        hi = hi - 1 | 0;
    }
    return new Long(lo, hi);
}
function Long_neg(a) {
    return Long_inc(new Long(a.lo ^ 0xFFFFFFFF, a.hi ^ 0xFFFFFFFF));
}
function Long_sub(a, b) {
    if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
        return Long_fromNumber(a.lo - b.lo);
    }
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    var lolo = a_lolo - b_lolo | 0;
    var lohi = a_lohi - b_lohi + (lolo >> 16) | 0;
    var hilo = a_hilo - b_hilo + (lohi >> 16) | 0;
    var hihi = a_hihi - b_hihi + (hilo >> 16) | 0;
    return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
}
function Long_compare(a, b) {
    var r = a.hi - b.hi;
    if (r !== 0) {
        return r;
    }
    r = (a.lo >>> 1) - (b.lo >>> 1);
    if (r !== 0) {
        return r;
    }
    return (a.lo & 1) - (b.lo & 1);
}
function Long_isPositive(a) {
    return (a.hi & 0x80000000) === 0;
}
function Long_isNegative(a) {
    return (a.hi & 0x80000000) !== 0;
}
function Long_mul(a, b) {
    var positive = Long_isNegative(a) === Long_isNegative(b);
    if (Long_isNegative(a)) {
        a = Long_neg(a);
    }
    if (Long_isNegative(b)) {
        b = Long_neg(b);
    }
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    var lolo = 0;
    var lohi = 0;
    var hilo = 0;
    var hihi = 0;
    lolo = a_lolo * b_lolo | 0;
    lohi = lolo >>> 16;
    lohi = (lohi & 0xFFFF) + a_lohi * b_lolo | 0;
    hilo = hilo + (lohi >>> 16) | 0;
    lohi = (lohi & 0xFFFF) + a_lolo * b_lohi | 0;
    hilo = hilo + (lohi >>> 16) | 0;
    hihi = hilo >>> 16;
    hilo = (hilo & 0xFFFF) + a_hilo * b_lolo | 0;
    hihi = hihi + (hilo >>> 16) | 0;
    hilo = (hilo & 0xFFFF) + a_lohi * b_lohi | 0;
    hihi = hihi + (hilo >>> 16) | 0;
    hilo = (hilo & 0xFFFF) + a_lolo * b_hilo | 0;
    hihi = hihi + (hilo >>> 16) | 0;
    hihi = hihi + a_hihi * b_lolo + a_hilo * b_lohi + a_lohi * b_hilo + a_lolo * b_hihi | 0;
    var result = new Long(lolo & 0xFFFF | lohi << 16, hilo & 0xFFFF | hihi << 16);
    return positive ? result : Long_neg(result);
}
function Long_div(a, b) {
    if (Math.abs(a.hi) < Long_MAX_NORMAL && Math.abs(b.hi) < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
    }
    return (Long_divRem(a, b))[0];
}
function Long_udiv(a, b) {
    if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
    }
    return (Long_udivRem(a, b))[0];
}
function Long_rem(a, b) {
    if (Math.abs(a.hi) < Long_MAX_NORMAL && Math.abs(b.hi) < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) % Long_toNumber(b));
    }
    return (Long_divRem(a, b))[1];
}
function Long_urem(a, b) {
    if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
    }
    return (Long_udivRem(a, b))[1];
}
function Long_divRem(a, b) {
    if (b.lo === 0 && b.hi === 0) {
        throw new Error("Division by zero");
    }
    var positive = Long_isNegative(a) === Long_isNegative(b);
    if (Long_isNegative(a)) {
        a = Long_neg(a);
    }
    if (Long_isNegative(b)) {
        b = Long_neg(b);
    }
    a = new LongInt(a.lo, a.hi, 0);
    b = new LongInt(b.lo, b.hi, 0);
    var q = LongInt_div(a, b);
    a = new Long(a.lo, a.hi);
    q = new Long(q.lo, q.hi);
    return positive ? [q, a] : [Long_neg(q), Long_neg(a)];
}
function Long_udivRem(a, b) {
    if (b.lo === 0 && b.hi === 0) {
        throw new Error("Division by zero");
    }
    a = new LongInt(a.lo, a.hi, 0);
    b = new LongInt(b.lo, b.hi, 0);
    var q = LongInt_div(a, b);
    a = new Long(a.lo, a.hi);
    q = new Long(q.lo, q.hi);
    return [q, a];
}
function Long_shiftLeft16(a) {
    return new Long(a.lo << 16, a.lo >>> 16 | a.hi << 16);
}
function Long_shiftRight16(a) {
    return new Long(a.lo >>> 16 | a.hi << 16, a.hi >>> 16);
}
function Long_and(a, b) {
    return new Long(a.lo & b.lo, a.hi & b.hi);
}
function Long_or(a, b) {
    return new Long(a.lo | b.lo, a.hi | b.hi);
}
function Long_xor(a, b) {
    return new Long(a.lo ^ b.lo, a.hi ^ b.hi);
}
function Long_shl(a, b) {
    b &= 63;
    if (b === 0) {
        return a;
    } else if (b < 32) {
        return new Long(a.lo << b, a.lo >>> 32 - b | a.hi << b);
    } else if (b === 32) {
        return new Long(0, a.lo);
    } else {
        return new Long(0, a.lo << b - 32);
    }
}
function Long_shr(a, b) {
    b &= 63;
    if (b === 0) {
        return a;
    } else if (b < 32) {
        return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >> b);
    } else if (b === 32) {
        return new Long(a.hi, a.hi >> 31);
    } else {
        return new Long(a.hi >> b - 32, a.hi >> 31);
    }
}
function Long_shru(a, b) {
    b &= 63;
    if (b === 0) {
        return a;
    } else if (b < 32) {
        return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >>> b);
    } else if (b === 32) {
        return new Long(a.hi, 0);
    } else {
        return new Long(a.hi >>> b - 32, 0);
    }
}
function LongInt(lo, hi, sup) {
    this.lo = lo;
    this.hi = hi;
    this.sup = sup;
}
function LongInt_mul(a, b) {
    var a_lolo = (a.lo & 0xFFFF) * b | 0;
    var a_lohi = (a.lo >>> 16) * b | 0;
    var a_hilo = (a.hi & 0xFFFF) * b | 0;
    var a_hihi = (a.hi >>> 16) * b | 0;
    var sup = a.sup * b | 0;
    a_lohi = a_lohi + (a_lolo >>> 16) | 0;
    a_hilo = a_hilo + (a_lohi >>> 16) | 0;
    a_hihi = a_hihi + (a_hilo >>> 16) | 0;
    sup = sup + (a_hihi >>> 16) | 0;
    a.lo = a_lolo & 0xFFFF | a_lohi << 16;
    a.hi = a_hilo & 0xFFFF | a_hihi << 16;
    a.sup = sup & 0xFFFF;
}
function LongInt_sub(a, b) {
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    a_lolo = a_lolo - b_lolo | 0;
    a_lohi = a_lohi - b_lohi + (a_lolo >> 16) | 0;
    a_hilo = a_hilo - b_hilo + (a_lohi >> 16) | 0;
    a_hihi = a_hihi - b_hihi + (a_hilo >> 16) | 0;
    var sup = a.sup - b.sup + (a_hihi >> 16) | 0;
    a.lo = a_lolo & 0xFFFF | a_lohi << 16;
    a.hi = a_hilo & 0xFFFF | a_hihi << 16;
    a.sup = sup;
}
function LongInt_add(a, b) {
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    a_lolo = a_lolo + b_lolo | 0;
    a_lohi = a_lohi + b_lohi + (a_lolo >> 16) | 0;
    a_hilo = a_hilo + b_hilo + (a_lohi >> 16) | 0;
    a_hihi = a_hihi + b_hihi + (a_hilo >> 16) | 0;
    var sup = a.sup + b.sup + (a_hihi >> 16) | 0;
    a.lo = a_lolo & 0xFFFF | a_lohi << 16;
    a.hi = a_hilo & 0xFFFF | a_hihi << 16;
    a.sup = sup;
}
function LongInt_inc(a) {
    a.lo = a.lo + 1 | 0;
    if (a.lo === 0) {
        a.hi = a.hi + 1 | 0;
        if (a.hi === 0) {
            a.sup = a.sup + 1 & 0xFFFF;
        }
    }
}
function LongInt_dec(a) {
    a.lo = a.lo - 1 | 0;
    if (a.lo ===  -1) {
        a.hi = a.hi - 1 | 0;
        if (a.hi ===  -1) {
            a.sup = a.sup - 1 & 0xFFFF;
        }
    }
}
function LongInt_ucompare(a, b) {
    var r = a.sup - b.sup;
    if (r !== 0) {
        return r;
    }
    r = (a.hi >>> 1) - (b.hi >>> 1);
    if (r !== 0) {
        return r;
    }
    r = (a.hi & 1) - (b.hi & 1);
    if (r !== 0) {
        return r;
    }
    r = (a.lo >>> 1) - (b.lo >>> 1);
    if (r !== 0) {
        return r;
    }
    return (a.lo & 1) - (b.lo & 1);
}
function LongInt_numOfLeadingZeroBits(a) {
    var n = 0;
    var d = 16;
    while (d > 0) {
        if (a >>> d !== 0) {
            a >>>= d;
            n = n + d | 0;
        }
        d = d / 2 | 0;
    }
    return 31 - n;
}
function LongInt_shl(a, b) {
    if (b === 0) {
        return;
    }
    if (b < 32) {
        a.sup = (a.hi >>> 32 - b | a.sup << b) & 0xFFFF;
        a.hi = a.lo >>> 32 - b | a.hi << b;
        a.lo <<= b;
    } else if (b === 32) {
        a.sup = a.hi & 0xFFFF;
        a.hi = a.lo;
        a.lo = 0;
    } else if (b < 64) {
        a.sup = (a.lo >>> 64 - b | a.hi << b - 32) & 0xFFFF;
        a.hi = a.lo << b;
        a.lo = 0;
    } else if (b === 64) {
        a.sup = a.lo & 0xFFFF;
        a.hi = 0;
        a.lo = 0;
    } else {
        a.sup = a.lo << b - 64 & 0xFFFF;
        a.hi = 0;
        a.lo = 0;
    }
}
function LongInt_shr(a, b) {
    if (b === 0) {
        return;
    }
    if (b === 32) {
        a.lo = a.hi;
        a.hi = a.sup;
        a.sup = 0;
    } else if (b < 32) {
        a.lo = a.lo >>> b | a.hi << 32 - b;
        a.hi = a.hi >>> b | a.sup << 32 - b;
        a.sup >>>= b;
    } else if (b === 64) {
        a.lo = a.sup;
        a.hi = 0;
        a.sup = 0;
    } else if (b < 64) {
        a.lo = a.hi >>> b - 32 | a.sup << 64 - b;
        a.hi = a.sup >>> b - 32;
        a.sup = 0;
    } else {
        a.lo = a.sup >>> b - 64;
        a.hi = 0;
        a.sup = 0;
    }
}
function LongInt_copy(a) {
    return new LongInt(a.lo, a.hi, a.sup);
}
function LongInt_div(a, b) {
    var bits = b.hi !== 0 ? LongInt_numOfLeadingZeroBits(b.hi) : LongInt_numOfLeadingZeroBits(b.lo) + 32;
    var sz = 1 + (bits / 16 | 0);
    var dividentBits = bits % 16;
    LongInt_shl(b, bits);
    LongInt_shl(a, dividentBits);
    var q = new LongInt(0, 0, 0);
    while (sz-- > 0) {
        LongInt_shl(q, 16);
        var digitA = (a.hi >>> 16) + 0x10000 * a.sup;
        var digitB = b.hi >>> 16;
        var digit = digitA / digitB | 0;
        var t = LongInt_copy(b);
        LongInt_mul(t, digit);
        if (LongInt_ucompare(t, a) >= 0) {
            while (LongInt_ucompare(t, a) > 0) {
                LongInt_sub(t, b);
                 --digit;
            }
        } else {
            while (true) {
                var nextT = LongInt_copy(t);
                LongInt_add(nextT, b);
                if (LongInt_ucompare(nextT, a) > 0) {
                    break;
                }
                t = nextT;
                ++digit;
            }
        }
        LongInt_sub(a, t);
        q.lo |= digit;
        LongInt_shl(a, 16);
    }
    LongInt_shr(a, bits + 16);
    return q;
}
function TeaVMThread(runner) {
    this.status = 3;
    this.stack = [];
    this.suspendCallback = null;
    this.runner = runner;
    this.attribute = null;
    this.completeCallback = null;
}
TeaVMThread.prototype.push = function() {
    for (var i = 0;i < arguments.length;++i) {
        this.stack.push(arguments[i]);
    }
    return this;
};
TeaVMThread.prototype.s = TeaVMThread.prototype.push;
TeaVMThread.prototype.pop = function() {
    return this.stack.pop();
};
TeaVMThread.prototype.l = TeaVMThread.prototype.pop;
TeaVMThread.prototype.isResuming = function() {
    return this.status === 2;
};
TeaVMThread.prototype.isSuspending = function() {
    return this.status === 1;
};
TeaVMThread.prototype.suspend = function(callback) {
    this.suspendCallback = callback;
    this.status = 1;
};
TeaVMThread.prototype.start = function(callback) {
    if (this.status !== 3) {
        throw new Error("Thread already started");
    }
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 0;
    this.completeCallback = callback ? callback : function(result) {
        if (result instanceof Error) {
            throw result;
        }
    };
    this.run();
};
TeaVMThread.prototype.resume = function() {
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 2;
    this.run();
};
TeaVMThread.prototype.run = function() {
    $rt_currentNativeThread = this;
    var result;
    try {
        result = this.runner();
    } catch (e){
        result = e;
    } finally {
        $rt_currentNativeThread = null;
    }
    if (this.suspendCallback !== null) {
        var self = this;
        var callback = this.suspendCallback;
        this.suspendCallback = null;
        callback(function() {
            self.resume();
        });
    } else if (this.status === 0) {
        this.completeCallback(result);
    }
};
function $rt_suspending() {
    var thread = $rt_nativeThread();
    return thread != null && thread.isSuspending();
}
function $rt_resuming() {
    var thread = $rt_nativeThread();
    return thread != null && thread.isResuming();
}
function $rt_suspend(callback) {
    var nativeThread = $rt_nativeThread();
    if (nativeThread === null) {
        throw new Error("Suspension point reached from non-threading context (perhaps, from native JS method).");
    }
    return nativeThread.suspend(callback);
}
function $rt_startThread(runner, callback) {
    (new TeaVMThread(runner)).start(callback);
}
var $rt_currentNativeThread = null;
function $rt_nativeThread() {
    return $rt_currentNativeThread;
}
function $rt_invalidPointer() {
    throw new Error("Invalid recorded state");
}
main = $rt_mainStarter(okttt_MainTeaVMTests_main);
(function() {
    var c;
    c = oktt_TvmMouse$2.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TvmMouse$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TvmMouse$4.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TvmMouse$3.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TvmMouse$5.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = otja_XMLHttpRequest$onComplete$static$lambda$_27_0.prototype;
    c.stateChanged = c.$stateChanged$exported$0;
    c = okttt_MainTeaVMTests$main$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TvmSound$1$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TvmKB$2.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TvmKB$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TvmKB$3.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TvmIMG$load$2.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TvmIMG$load$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TvmIMG$load$4.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TvmIMG$load$3.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = oktt_TeaVMApp$sam$org_teavm_jso_browser_AnimationFrameCallback$0.prototype;
    c.onAnimationFrame = c.$onAnimationFrame$exported$0;
    c = oktt_TeaVMApp$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = otjb_Window.prototype;
    c.dispatchEvent = c.$dispatchEvent$exported$4;
    c.addEventListener = c.$addEventListener$exported$0;
    c.removeEventListener = c.$removeEventListener$exported$1;
    c.getLength = c.$getLength$exported$5;
    c.get = c.$get$exported$2;
    c.addEventListener = c.$addEventListener$exported$6;
    c.removeEventListener = c.$removeEventListener$exported$3;
})();
})();

//# sourceMappingURL=classes.js.map